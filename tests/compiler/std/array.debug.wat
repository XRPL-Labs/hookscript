(module
 (type $i32_i32_=>_i32 (func_subtype (param i32 i32) (result i32) func))
 (type $i32_i32_i32_=>_i32 (func_subtype (param i32 i32 i32) (result i32) func))
 (type $i32_=>_i32 (func_subtype (param i32) (result i32) func))
 (type $i32_i32_=>_none (func_subtype (param i32 i32) func))
 (type $i32_i32_i32_i32_=>_i32 (func_subtype (param i32 i32 i32 i32) (result i32) func))
 (type $i32_i32_i32_=>_none (func_subtype (param i32 i32 i32) func))
 (type $f32_f32_=>_i32 (func_subtype (param f32 f32) (result i32) func))
 (type $f64_f64_=>_i32 (func_subtype (param f64 f64) (result i32) func))
 (type $i32_i32_i32_i32_i32_=>_none (func_subtype (param i32 i32 i32 i32 i32) func))
 (type $i32_i32_i32_i32_i32_i32_=>_none (func_subtype (param i32 i32 i32 i32 i32 i32) func))
 (type $none_=>_f64 (func_subtype (result f64) func))
 (type $none_=>_none (func_subtype func))
 (type $i32_i32_i32_i32_=>_none (func_subtype (param i32 i32 i32 i32) func))
 (type $i32_f32_i32_=>_i32 (func_subtype (param i32 f32 i32) (result i32) func))
 (type $i32_f64_i32_=>_i32 (func_subtype (param i32 f64 i32) (result i32) func))
 (type $i32_i32_i32_=>_f32 (func_subtype (param i32 i32 i32) (result f32) func))
 (type $i32_i32_f32_i32_i32_=>_none (func_subtype (param i32 i32 f32 i32 i32) func))
 (type $i32_f32_i32_i32_=>_i32 (func_subtype (param i32 f32 i32 i32) (result i32) func))
 (type $i32_i32_=>_f32 (func_subtype (param i32 i32) (result f32) func))
 (type $i64_=>_i64 (func_subtype (param i64) (result i64) func))
 (type $i64_=>_none (func_subtype (param i64) func))
 (type $i32_i32_i32_i32_i32_=>_i32 (func_subtype (param i32 i32 i32 i32 i32) (result i32) func))
 (type $i32_=>_none (func_subtype (param i32) func))
 (type $i32_i32_=>_f64 (func_subtype (param i32 i32) (result f64) func))
 (import "env" "abort" (func $~lib/builtins/abort (param i32 i32 i32 i32)))
 (import "env" "Math.random" (func $~lib/bindings/dom/Math.random (result f64)))
 (import "env" "seed" (func $~lib/builtins/seed (result f64)))
 (import "env" "_g" (func $~lib/builtins/_g (param i32 i32) (result i32)))
 (global $~lib/shared/runtime/Runtime.Stub i32 (i32.const 0))
 (global $~lib/shared/runtime/Runtime.Minimal i32 (i32.const 1))
 (global $~lib/shared/runtime/Runtime.Incremental i32 (i32.const 2))
 (global $~lib/rt/stub/offset (mut i32) (i32.const 0))
 (global $~lib/native/ASC_RUNTIME i32 (i32.const 0))
 (global $std/array/arr (mut i32) (i32.const 0))
 (global $~lib/builtins/i32.MAX_VALUE i32 (i32.const 2147483647))
 (global $~lib/native/ASC_SHRINK_LEVEL i32 (i32.const 0))
 (global $std/array/i (mut i32) (i32.const 0))
 (global $~argumentsLength (mut i32) (i32.const 0))
 (global $~lib/math/random_state0_64 (mut i64) (i64.const 0))
 (global $~lib/math/random_state1_64 (mut i64) (i64.const 0))
 (global $~lib/math/random_state0_32 (mut i32) (i32.const 0))
 (global $~lib/math/random_state1_32 (mut i32) (i32.const 0))
 (global $~lib/math/random_seeded (mut i32) (i32.const 0))
 (global $std/array/charset i32 (i32.const 6704))
 (global $std/array/inputStabArr (mut i32) (i32.const 0))
 (global $std/array/outputStabArr (mut i32) (i32.const 0))
 (global $~lib/builtins/u32.MAX_VALUE i32 (i32.const -1))
 (global $~lib/memory/__stack_pointer (mut i32) (i32.const 8908))
 (global $~lib/memory/__heap_base i32 (i32.const 8908))
 (global $~started (mut i32) (i32.const 0))
 (memory $0 1)
 (data (i32.const 12) ",\00\00\00\01\00\00\00\0e\00\00\00\00\00\00\00\00\00\00\00Invalid length\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 60) "\1c\00\00\00\01\00\00\00\03\00\00\00\00\00\00\00\00\00\00\00abc\00\00\00\00\00\00\00\00\00")
 (data (i32.const 92) "\1c\00\00\00\00\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00\01\02\03\04\05\00\00\00\00\00\00\00")
 (data (i32.const 124) "\1c\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 156) "\1c\00\00\00\00\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00\01\01\01\04\05\00\00\00\00\00\00\00")
 (data (i32.const 188) ",\00\00\00\01\00\00\00\12\00\00\00\00\00\00\00\00\00\00\00Index out of range\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 236) "\1c\00\00\00\00\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 268) "\1c\00\00\00\00\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00\01\01\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 300) "\1c\00\00\00\00\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00\01\01\00\02\02\00\00\00\00\00\00\00")
 (data (i32.const 332) "\1c\00\00\00\00\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00\01\01\00\02\02\00\00\00\00\00\00\00")
 (data (i32.const 364) "\1c\00\00\00\00\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00\ff\ff\ff\ff\ff\00\00\00\00\00\00\00")
 (data (i32.const 396) ",\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 444) ",\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 492) ",\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 540) ",\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 588) ",\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\01\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 636) ",\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\01\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 684) ",\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\00\00\00\00\00\00\00\00")
 (data (i32.const 732) ",\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\00\00\00?\00\00\80?\00\00\c0?\00\00 @\00\00@@\00\00\00\00\00\00\00\00")
 (data (i32.const 780) ",\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\00\00\00?\00\00\80?\00\00\80?\00\00 @\00\00@@\00\00\00\00\00\00\00\00")
 (data (i32.const 828) ",\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 876) ",\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\00\00\80?\00\00\80?\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 924) ",\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\00\00\80?\00\00\80?\00\00\00\00\00\00\00@\00\00\00@\00\00\00\00\00\00\00\00")
 (data (i32.const 972) ",\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\00\00\80?\00\00\80?\00\00\00\00\00\00\00@\00\00\00@\00\00\00\00\00\00\00\00")
 (data (i32.const 1020) ",\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\00\00\80\bf\00\00\80\bf\00\00\80\bf\00\00\80\bf\00\00\80\bf\00\00\00\00\00\00\00\00")
 (data (i32.const 1068) ",\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\00\00\00\80\00\00\00\80\00\00\00\80\00\00\00\80\00\00\00\80\00\00\00\00\00\00\00\00")
 (data (i32.const 1116) ",\00\00\00\01\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00Allocation too large\00\00\00\00\00\00\00\00")
 (data (i32.const 1164) ",\00\00\00\01\00\00\00\0e\00\00\00\00\00\00\00\00\00\00\00Array is empty\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1212) ",\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1260) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1292) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1324) ",\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1372) ",\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00\05\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1420) ",\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1468) ",\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00\05\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1516) ",\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1564) ",\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1612) ",\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1660) ",\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1708) ",\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1756) ",\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1804) ",\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1852) ",\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1900) ",\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1948) ",\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\03\00\00\00\04\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1996) ",\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2044) ",\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00\05\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2092) ",\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2140) ",\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2188) ",\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2236) ",\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\03\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2284) ",\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2332) ",\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\03\00\00\00\04\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2380) ",\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2428) ",\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2476) ",\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\03\00\00\00\05\00\00\00\07\00\00\00\t\00\00\00\0b\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2524) "\1c\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\00\00\00\00\07\00\00\00\t\00\00\00\0b\00\00\00")
 (data (i32.const 2556) "\1c\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00\07\00\00\00\t\00\00\00\00\00\00\00")
 (data (i32.const 2588) ",\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\00\00\00\00\05\00\00\00\07\00\00\00\t\00\00\00\0b\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2636) "\1c\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00\t\00\00\00\0b\00\00\00\00\00\00\00")
 (data (i32.const 2668) "\1c\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00\07\00\00\00\t\00\00\00\00\00\00\00")
 (data (i32.const 2700) "\1c\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00\07\00\00\00\t\00\00\00\00\00\00\00")
 (data (i32.const 2732) "\1c\00\00\00\00\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00\00\01\02\03\00\00\00\00\00\00\00\00")
 (data (i32.const 2764) "\1c\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00\00\01\02\03\04\05\06\07\00\00\00\00")
 (data (i32.const 2796) ",\00\00\00\00\00\00\00\11\00\00\00\00\00\00\00\00\00\00\00\00\01\02\03\04\05\06\07\08\t\n\0b\0c\r\0e\0f\10\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2844) ",\00\00\00\00\00\00\00\0e\00\00\00\00\00\00\00\00\00\00\00\00\00\01\00\02\00\03\00\04\00\05\00\06\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2892) ",\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\00\00\00\00\00\00\01\00\02\00\03\00\04\00\05\00\06\00\07\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2940) ",\00\00\00\00\00\00\00\12\00\00\00\00\00\00\00\00\00\00\00\00\00\01\00\02\00\03\00\04\00\05\00\06\00\07\00\08\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2988) "\1c\00\00\00\00\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00\00\00\c0\7f\00\00\00\00\00\00\00\00")
 (data (i32.const 3020) "\1c\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\f8\7f\00\00\00\00")
 (data (i32.const 3052) ",\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\05\00\00\00\t\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3100) "\1c\00\00\00\00\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00\00\00\c0\7f\00\00\00\00\00\00\00\00")
 (data (i32.const 3132) "\1c\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\f8\7f\00\00\00\00")
 (data (i32.const 3164) ",\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3212) ",\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3260) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3292) ",\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3340) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3372) ",\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3420) ",\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3468) "\1c\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\00\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00")
 (data (i32.const 3500) "\1c\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\00\00\00\00")
 (data (i32.const 3532) ",\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3580) "\1c\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00\03\00\00\00\04\00\00\00\00\00\00\00")
 (data (i32.const 3612) "\1c\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\05\00\00\00")
 (data (i32.const 3644) ",\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3692) "\1c\00\00\00\00\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3724) ",\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3772) ",\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3820) "\1c\00\00\00\00\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3852) ",\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3900) ",\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3948) "\1c\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00")
 (data (i32.const 3980) "\1c\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00")
 (data (i32.const 4012) ",\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4060) "\1c\00\00\00\00\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4092) ",\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4140) ",\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4188) "\1c\00\00\00\00\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4220) ",\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4268) ",\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4316) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4348) ",\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4396) ",\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4444) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4476) ",\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4524) ",\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4572) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4604) ",\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4652) ",\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4700) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4732) ",\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4780) ",\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4828) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4860) ",\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4908) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4940) "L\00\00\00\01\00\00\00/\00\00\00\00\00\00\00\00\00\00\00Element type must be nullable if array is holey\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5020) ",\00\00\00\01\00\00\00\0f\00\00\00\00\00\00\00\00\00\00\00unexpected null\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5068) "\1c\00\00\00\0e\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5100) "\1c\00\00\00\0e\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5132) "\1c\00\00\00\0e\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00\03\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5164) "\1c\00\00\00\0e\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5196) "\1c\00\00\00\0e\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5228) "\1c\00\00\00\0e\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00\06\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5260) ",\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5308) "\1c\00\00\00\0e\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00\07\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5340) "\1c\00\00\00\0e\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5372) "\1c\00\00\00\0e\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00\t\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5404) "\1c\00\00\00\0e\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00\n\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5436) "\1c\00\00\00\0e\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00\0b\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5468) "\1c\00\00\00\0e\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5500) "\1c\00\00\00\0e\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00\r\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5532) "\1c\00\00\00\0e\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00\0e\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5564) "\1c\00\00\00\0e\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00\0f\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5596) "\1c\00\00\00\0e\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5628) "\1c\00\00\00\0e\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00\11\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5660) "\1c\00\00\00\0e\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00\12\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5692) "\1c\00\00\00\0e\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00\13\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5724) "\1c\00\00\00\0e\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5756) "\1c\00\00\00\0f\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00\15\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5788) "\1c\00\00\00\0f\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00\16\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5820) "\1c\00\00\00\0f\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00\17\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5852) "\1c\00\00\00\0f\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00\18\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5884) "\1c\00\00\00\0f\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00\19\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5916) "\1c\00\00\00\01\00\00\00\01\00\00\00\00\00\00\00\00\00\00\000\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5948) "\1c\00\00\00\11\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00\1a\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5980) "\1c\00\00\00\12\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00\1b\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6012) "\1c\00\00\00\13\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00\1c\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6044) "\1c\00\00\00\13\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00\1d\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6076) "\1c\00\00\00\13\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00\1e\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6108) "\1c\00\00\00\0e\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00\1f\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6140) "\1c\00\00\00\0e\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00 \00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6172) "\1c\00\00\00\0e\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00!\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6204) "\1c\00\00\00\0e\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00\"\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6236) "\1c\00\00\00\14\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00#\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6268) "\1c\00\00\00\14\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00$\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6300) "\1c\00\00\00\15\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00%\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6332) "\1c\00\00\00\15\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00&\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6364) "\1c\00\00\00\14\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00\'\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6396) "\1c\00\00\00\14\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00(\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6428) "\1c\00\00\00\14\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00)\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6460) "\1c\00\00\00\14\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00*\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6492) "\1c\00\00\00\14\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00+\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6524) "\1c\00\00\00\15\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00,\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6556) "\1c\00\00\00\15\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00-\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6588) "\1c\00\00\00\14\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00.\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6620) "\1c\00\00\00\14\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00/\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6652) "\1c\00\00\00\14\00\00\00\08\00\00\00\00\00\00\00\00\00\00\000\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6684) "l\00\00\00\01\00\00\00V\00\00\00\00\00\00\00\00\00\00\00ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789_-,.+/\\[]{}()<>*&$%^@#!?\00\00\00\00\00\00")
 (data (i32.const 6796) "\1c\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\00\00\00\00\00\00\00@\00\00\80\bf\00\00\00\00")
 (data (i32.const 6828) "\1c\00\00\00\18\00\00\00\08\00\00\00\00\00\00\00\00\00\00\001\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6860) "\1c\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\00\00\00\00\00\00\80\bf\00\00\00\00\00\00\00@")
 (data (i32.const 6892) "<\00\00\00\00\00\00\00 \00\00\00\00\00\00\00\00\00\00\00\00\00\80?\00\00\c0\7f\00\00\80\ff\00\00\80?\00\00\00\00\00\00\80\bf\00\00\00\c0\00\00\80\7f\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6956) "<\00\00\00\00\00\00\00 \00\00\00\00\00\00\00\00\00\00\00\00\00\80\ff\00\00\00\c0\00\00\80\bf\00\00\00\00\00\00\80?\00\00\80?\00\00\80\7f\00\00\c0\7f\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7020) "L\00\00\00\00\00\00\008\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\f0?\00\00\00\00\00\00\f8\7f\00\00\00\00\00\00\f0\ff\05\00\00\00\00\00\f0?\00\00\00\00\00\00\00\00\00\00\00\00\00\00\f0\bf\00\00\00\00\00\00\00\c0\00\00\00\00")
 (data (i32.const 7100) "\1c\00\00\00\19\00\00\00\08\00\00\00\00\00\00\00\00\00\00\002\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7132) "L\00\00\00\00\00\00\008\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\f0\ff\00\00\00\00\00\00\00\c0\00\00\00\00\00\00\f0\bf\00\00\00\00\00\00\00\00\00\00\00\00\00\00\f0?\05\00\00\00\00\00\f0?\00\00\00\00\00\00\f8\7f\00\00\00\00")
 (data (i32.const 7212) ",\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\fe\ff\ff\ff\ff\ff\ff\ff\00\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7260) "\1c\00\00\00\1a\00\00\00\08\00\00\00\00\00\00\00\00\00\00\003\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7292) ",\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\fe\ff\ff\ff\ff\ff\ff\ff\00\00\00\00\01\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7340) ",\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\ff\ff\ff\ff\fe\ff\ff\ff\00\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7388) "\1c\00\00\00\1b\00\00\00\08\00\00\00\00\00\00\00\00\00\00\004\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7420) ",\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\fe\ff\ff\ff\ff\ff\ff\ff\00\00\00\00\00\00\00\00")
 (data (i32.const 7468) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7500) "\1c\00\00\00\00\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7532) "\1c\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\01\00\00\00\00\00\00\00")
 (data (i32.const 7564) ",\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\00\00\00\00\03\00\00\00\02\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7612) ",\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7660) "\1c\00\00\00\1a\00\00\00\08\00\00\00\00\00\00\00\00\00\00\005\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7692) "\1c\00\00\00\1a\00\00\00\08\00\00\00\00\00\00\00\00\00\00\006\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7724) "\1c\00\00\00\00\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7756) "\1c\00\00\00\1a\00\00\00\08\00\00\00\00\00\00\00\00\00\00\007\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7788) "\1c\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\00\00\00\00")
 (data (i32.const 7820) "\1c\00\00\00\1a\00\00\00\08\00\00\00\00\00\00\00\00\00\00\008\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7852) "\1c\00\00\00\1a\00\00\00\08\00\00\00\00\00\00\00\00\00\00\009\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7884) "\1c\00\00\00\1a\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00:\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7916) "\1c\00\00\00\1a\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00;\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7948) "\1c\00\00\00\1a\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00<\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7980) "\1c\00\00\00\1c\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00=\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8012) "\1c\00\00\00\1a\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00>\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8044) "\1c\00\00\00\1a\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00?\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8076) "\1c\00\00\00\1a\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00@\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8108) "\1c\00\00\00\1a\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00A\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8140) "\1c\00\00\00\1e\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00B\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8172) "\1c\00\00\00!\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00C\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8204) "\1c\00\00\00\00\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8236) "\1c\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00")
 (data (i32.const 8268) "\1c\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00\05\00\00\00\06\00\00\00")
 (data (i32.const 8300) "\1c\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\00\00\00\00\07\00\00\00\08\00\00\00\t\00\00\00")
 (data (i32.const 8332) "\1c\00\00\00\01\00\00\00\03\00\00\00\00\00\00\00\00\00\00\00one\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8364) "\1c\00\00\00\00\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00\a0 \00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8396) "\1c\00\00\00\01\00\00\00\03\00\00\00\00\00\00\00\00\00\00\00two\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8428) "\1c\00\00\00\01\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00three\00\00\00\00\00\00\00")
 (data (i32.const 8460) "\1c\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\00\00\00\00\e0 \00\00\00\00\00\00\00!\00\00")
 (data (i32.const 8492) "\1c\00\00\00\01\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00four\00\00\00\00\00\00\00\00")
 (data (i32.const 8524) "\1c\00\00\00\01\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00five\00\00\00\00\00\00\00\00")
 (data (i32.const 8556) "\1c\00\00\00\01\00\00\00\03\00\00\00\00\00\00\00\00\00\00\00six\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8588) "\1c\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\00\00\00\00@!\00\00`!\00\00\80!\00\00")
 (data (i32.const 8620) "\1c\00\00\00\01\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00seven\00\00\00\00\00\00\00")
 (data (i32.const 8652) "\1c\00\00\00\00\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00\c0!\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8684) "<\00\00\00\00\00\00\00 \00\00\00\00\00\00\00\00\00\00\00\a0 \00\00\e0 \00\00\00\00\00\00\00!\00\00@!\00\00`!\00\00\80!\00\00\c0!\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8748) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8780) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8812) "\1c\00\00\00\00\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8844) "\1c\00\00\00\00\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8876) "\1c\00\00\00$\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00D\00\00\00\00\00\00\00\00\00\00\00")
 (table $0 69 69 funcref)
 (elem $0 (i32.const 1) $start:std/array~anonymous|0 $start:std/array~anonymous|1 $start:std/array~anonymous|2 $start:std/array~anonymous|3 $start:std/array~anonymous|4 $start:std/array~anonymous|5 $start:std/array~anonymous|6 $start:std/array~anonymous|7 $start:std/array~anonymous|8 $start:std/array~anonymous|9 $start:std/array~anonymous|10 $start:std/array~anonymous|11 $start:std/array~anonymous|12 $start:std/array~anonymous|13 $start:std/array~anonymous|14 $start:std/array~anonymous|15 $start:std/array~anonymous|16 $start:std/array~anonymous|17 $start:std/array~anonymous|18 $start:std/array~anonymous|19 $start:std/array~anonymous|20 $start:std/array~anonymous|21 $start:std/array~anonymous|22 $start:std/array~anonymous|23 $start:std/array~anonymous|24 $start:std/array~anonymous|25 $start:std/array~anonymous|26 $start:std/array~anonymous|27 $start:std/array~anonymous|28 $start:std/array~anonymous|29 $start:std/array~anonymous|30 $start:std/array~anonymous|31 $start:std/array~anonymous|32 $start:std/array~anonymous|33 $start:std/array~anonymous|34 $start:std/array~anonymous|35 $start:std/array~anonymous|36 $start:std/array~anonymous|37 $start:std/array~anonymous|38 $start:std/array~anonymous|39 $start:std/array~anonymous|40 $start:std/array~anonymous|41 $start:std/array~anonymous|42 $start:std/array~anonymous|43 $start:std/array~anonymous|44 $start:std/array~anonymous|45 $start:std/array~anonymous|46 $start:std/array~anonymous|47 $~lib/util/sort/COMPARATOR<f32>~anonymous|0 $~lib/util/sort/COMPARATOR<f64>~anonymous|0 $~lib/util/sort/COMPARATOR<i32>~anonymous|0 $~lib/util/sort/COMPARATOR<u32>~anonymous|0 $~lib/util/sort/COMPARATOR<i32>~anonymous|1 $~lib/util/sort/COMPARATOR<i32>~anonymous|2 $~lib/util/sort/COMPARATOR<i32>~anonymous|3 $~lib/util/sort/COMPARATOR<i32>~anonymous|4 $~lib/util/sort/COMPARATOR<i32>~anonymous|5 $~lib/util/sort/COMPARATOR<i32>~anonymous|6 $~lib/util/sort/COMPARATOR<i32>~anonymous|7 $~lib/util/sort/COMPARATOR<i32>~anonymous|8 $std/array/assertStableSortedForComplexObjects~anonymous|0 $start:std/array~anonymous|48 $start:std/array~anonymous|49 $start:std/array~anonymous|50 $start:std/array~anonymous|51 $start:std/array~anonymous|52 $start:std/array~anonymous|53 $start:std/array~anonymous|54)
 (export "memory" (memory $0))
 (export "_start" (func $~start))
 (func $~lib/rt/common/BLOCK#set:mmInfo (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0
 )
 (func $~lib/rt/stub/__alloc (type $i32_=>_i32) (param $size i32) (result i32)
  (local $block i32)
  (local $ptr i32)
  (local $size|3 i32)
  (local $payloadSize i32)
  (local $newOffset i32)
  (local $pagesBefore i32)
  (local $maxOffset i32)
  local.get $size
  i32.const 1073741820
  i32.gt_u
  if
   unreachable
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   global.get $~lib/memory/__heap_base
   i32.const 4
   i32.add
   i32.const 15
   i32.add
   i32.const 15
   i32.const -1
   i32.xor
   i32.and
   i32.const 4
   i32.sub
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.set $block
  global.get $~lib/rt/stub/offset
  i32.const 4
  i32.add
  local.set $ptr
  local.get $size
  local.set $size|3
  local.get $size|3
  i32.const 4
  i32.add
  i32.const 15
  i32.add
  i32.const 15
  i32.const -1
  i32.xor
  i32.and
  i32.const 4
  i32.sub
  local.set $payloadSize
  local.get $ptr
  local.get $payloadSize
  i32.add
  local.set $newOffset
  memory.size $0
  local.set $pagesBefore
  local.get $pagesBefore
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const 15
  i32.const -1
  i32.xor
  i32.and
  local.set $maxOffset
  local.get $newOffset
  local.get $maxOffset
  i32.gt_u
  if
   unreachable
  end
  local.get $newOffset
  global.set $~lib/rt/stub/offset
  local.get $block
  local.get $payloadSize
  call $~lib/rt/common/BLOCK#set:mmInfo
  local.get $ptr
 )
 (func $~lib/rt/common/OBJECT#set:rtId (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=4
 )
 (func $~lib/rt/common/OBJECT#set:rtSize (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=8
 )
 (func $~lib/rt/stub/__new (type $i32_i32_=>_i32) (param $size i32) (param $id i32) (result i32)
  (local $ptr i32)
  (local $object i32)
  i32.const 16
  local.get $size
  i32.add
  call $~lib/rt/stub/__alloc
  local.set $ptr
  local.get $ptr
  i32.const 4
  i32.sub
  local.set $object
  local.get $object
  local.get $id
  call $~lib/rt/common/OBJECT#set:rtId
  local.get $object
  local.get $size
  call $~lib/rt/common/OBJECT#set:rtSize
  local.get $ptr
  i32.const 16
  i32.add
 )
 (func $~lib/rt/stub/__link (type $i32_i32_i32_=>_none) (param $parentPtr i32) (param $childPtr i32) (param $expectMultiple i32)
  nop
 )
 (func $~lib/array/Array<i32>#set:buffer (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $~lib/array/Array<i32>#set:dataStart (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=4
 )
 (func $~lib/array/Array<i32>#set:byteLength (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=8
 )
 (func $~lib/array/Array<i32>#set:length_ (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=12
 )
 (func $~lib/array/Array<i32>#constructor (type $i32_i32_=>_i32) (param $this i32) (param $length i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $bufferSize i32)
  (local $buffer i32)
  local.get $this
  i32.eqz
  if
   i32.const 16
   i32.const 3
   call $~lib/rt/stub/__new
   local.set $this
  end
  local.get $this
  i32.const 0
  call $~lib/array/Array<i32>#set:buffer
  local.get $this
  i32.const 0
  call $~lib/array/Array<i32>#set:dataStart
  local.get $this
  i32.const 0
  call $~lib/array/Array<i32>#set:byteLength
  local.get $this
  i32.const 0
  call $~lib/array/Array<i32>#set:length_
  local.get $length
  i32.const 1073741820
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   unreachable
  end
  local.get $length
  local.tee $2
  i32.const 8
  local.tee $3
  local.get $2
  local.get $3
  i32.gt_u
  select
  i32.const 2
  i32.shl
  local.set $bufferSize
  local.get $bufferSize
  i32.const 0
  call $~lib/rt/stub/__new
  local.set $buffer
  i32.const 0
  global.get $~lib/shared/runtime/Runtime.Incremental
  i32.ne
  drop
  local.get $buffer
  i32.const 0
  local.get $bufferSize
  memory.fill $0
  local.get $this
  local.get $buffer
  call $~lib/array/Array<i32>#set:buffer
  local.get $this
  local.get $buffer
  call $~lib/array/Array<i32>#set:dataStart
  local.get $this
  local.get $bufferSize
  call $~lib/array/Array<i32>#set:byteLength
  local.get $this
  local.get $length
  call $~lib/array/Array<i32>#set:length_
  local.get $this
 )
 (func $~lib/array/Array.isArray<~lib/array/Array<i32>|null> (type $i32_=>_i32) (param $value i32) (result i32)
  local.get $value
  i32.const 0
  i32.ne
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
 )
 (func $std/array/Ref#set:v (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0
 )
 (func $~lib/array/Array.isArray<std/array/Ref> (type $i32_=>_i32) (param $value i32) (result i32)
  local.get $value
  i32.const 0
  i32.ne
  if (result i32)
   i32.const 0
  else
   i32.const 0
  end
 )
 (func $~lib/arraybuffer/ArrayBufferView#set:buffer (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $~lib/arraybuffer/ArrayBufferView#set:dataStart (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=4
 )
 (func $~lib/arraybuffer/ArrayBufferView#set:byteLength (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=8
 )
 (func $~lib/arraybuffer/ArrayBufferView#constructor (type $i32_i32_i32_=>_i32) (param $this i32) (param $length i32) (param $alignLog2 i32) (result i32)
  (local $buffer i32)
  local.get $this
  i32.eqz
  if
   i32.const 12
   i32.const 2
   call $~lib/rt/stub/__new
   local.set $this
  end
  local.get $this
  i32.const 0
  call $~lib/arraybuffer/ArrayBufferView#set:buffer
  local.get $this
  i32.const 0
  call $~lib/arraybuffer/ArrayBufferView#set:dataStart
  local.get $this
  i32.const 0
  call $~lib/arraybuffer/ArrayBufferView#set:byteLength
  local.get $length
  i32.const 1073741820
  local.get $alignLog2
  i32.shr_u
  i32.gt_u
  if
   unreachable
  end
  local.get $length
  local.get $alignLog2
  i32.shl
  local.tee $length
  i32.const 0
  call $~lib/rt/stub/__new
  local.set $buffer
  i32.const 0
  global.get $~lib/shared/runtime/Runtime.Incremental
  i32.ne
  drop
  local.get $buffer
  i32.const 0
  local.get $length
  memory.fill $0
  local.get $this
  local.get $buffer
  call $~lib/arraybuffer/ArrayBufferView#set:buffer
  local.get $this
  local.get $buffer
  call $~lib/arraybuffer/ArrayBufferView#set:dataStart
  local.get $this
  local.get $length
  call $~lib/arraybuffer/ArrayBufferView#set:byteLength
  local.get $this
 )
 (func $~lib/typedarray/Uint8Array#constructor (type $i32_i32_=>_i32) (param $this i32) (param $length i32) (result i32)
  local.get $this
  i32.eqz
  if
   i32.const 12
   i32.const 5
   call $~lib/rt/stub/__new
   local.set $this
  end
  local.get $this
  local.get $length
  i32.const 0
  call $~lib/arraybuffer/ArrayBufferView#constructor
  local.set $this
  local.get $this
 )
 (func $~lib/array/Array.isArray<~lib/typedarray/Uint8Array> (type $i32_=>_i32) (param $value i32) (result i32)
  local.get $value
  i32.const 0
  i32.ne
  if (result i32)
   i32.const 0
  else
   i32.const 0
  end
 )
 (func $~lib/array/Array.isArray<i32> (type $i32_=>_i32) (param $value i32) (result i32)
  i32.const 0
 )
 (func $~lib/array/Array.isArray<~lib/string/String> (type $i32_=>_i32) (param $value i32) (result i32)
  local.get $value
  i32.const 0
  i32.ne
  if (result i32)
   i32.const 0
  else
   i32.const 0
  end
 )
 (func $~lib/array/Array.isArray<~lib/array/Array<i32>> (type $i32_=>_i32) (param $value i32) (result i32)
  local.get $value
  i32.const 0
  i32.ne
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
 )
 (func $~lib/rt/__newBuffer (type $i32_i32_i32_=>_i32) (param $size i32) (param $id i32) (param $data i32) (result i32)
  (local $buffer i32)
  (local $dest i32)
  (local $ptr i32)
  (local $len i32)
  (local $dest|7 i32)
  (local $ptr|8 i32)
  (local $dest|9 i32)
  (local $ptr|10 i32)
  (local $len|11 i32)
  (local $dest|12 i32)
  (local $ptr|13 i32)
  (local $dest|14 i32)
  (local $ptr|15 i32)
  (local $len|16 i32)
  (local $dest|17 i32)
  (local $ptr|18 i32)
  (local $dest|19 i32)
  (local $ptr|20 i32)
  (local $len|21 i32)
  (local $dest|22 i32)
  (local $ptr|23 i32)
  (local $dest|24 i32)
  (local $ptr|25 i32)
  (local $len|26 i32)
  (local $dest|27 i32)
  (local $ptr|28 i32)
  (local $dest|29 i32)
  (local $ptr|30 i32)
  (local $len|31 i32)
  local.get $size
  local.get $id
  call $~lib/rt/stub/__new
  local.set $buffer
  local.get $data
  if
   local.get $size
   i32.const 64
   i32.ge_u
   if
    unreachable
   end
   local.get $buffer
   local.set $dest
   local.get $data
   local.set $ptr
   local.get $size
   local.set $len
   local.get $len
   i32.const 32
   i32.ge_s
   if
    local.get $dest
    local.set $dest|7
    local.get $ptr
    local.set $ptr|8
    local.get $dest|7
    local.get $ptr|8
    i64.load $0
    i64.store $0
    local.get $dest|7
    i32.const 8
    i32.add
    local.set $dest|7
    local.get $ptr|8
    i32.const 8
    i32.add
    local.set $ptr|8
    local.get $dest|7
    local.get $ptr|8
    i64.load $0
    i64.store $0
    local.get $dest|7
    i32.const 8
    i32.add
    local.set $dest|7
    local.get $ptr|8
    i32.const 8
    i32.add
    local.set $ptr|8
    local.get $dest|7
    local.get $ptr|8
    i64.load $0
    i64.store $0
    local.get $dest|7
    i32.const 8
    i32.add
    local.set $dest|7
    local.get $ptr|8
    i32.const 8
    i32.add
    local.set $ptr|8
    local.get $dest|7
    local.get $ptr|8
    i64.load $0
    i64.store $0
    local.get $dest
    i32.const 32
    i32.add
    local.set $dest
    local.get $ptr
    i32.const 32
    i32.add
    local.set $ptr
    local.get $len
    i32.const 32
    i32.sub
    local.set $len
   end
   local.get $dest
   local.set $dest|9
   local.get $ptr
   local.set $ptr|10
   local.get $len
   local.set $len|11
   local.get $len|11
   i32.const 16
   i32.ge_s
   if
    local.get $dest|9
    local.set $dest|12
    local.get $ptr|10
    local.set $ptr|13
    local.get $dest|12
    local.get $ptr|13
    i64.load $0
    i64.store $0
    local.get $dest|12
    i32.const 8
    i32.add
    local.set $dest|12
    local.get $ptr|13
    i32.const 8
    i32.add
    local.set $ptr|13
    local.get $dest|12
    local.get $ptr|13
    i64.load $0
    i64.store $0
    local.get $dest|9
    i32.const 16
    i32.add
    local.set $dest|9
    local.get $ptr|10
    i32.const 16
    i32.add
    local.set $ptr|10
    local.get $len|11
    i32.const 16
    i32.sub
    local.set $len|11
   end
   local.get $dest|9
   local.set $dest|14
   local.get $ptr|10
   local.set $ptr|15
   local.get $len|11
   local.set $len|16
   local.get $len|16
   i32.const 8
   i32.ge_s
   if
    local.get $dest|14
    local.set $dest|17
    local.get $ptr|15
    local.set $ptr|18
    local.get $dest|17
    local.get $ptr|18
    i64.load $0
    i64.store $0
    local.get $dest|14
    i32.const 8
    i32.add
    local.set $dest|14
    local.get $ptr|15
    i32.const 8
    i32.add
    local.set $ptr|15
    local.get $len|16
    i32.const 8
    i32.sub
    local.set $len|16
   end
   local.get $dest|14
   local.set $dest|19
   local.get $ptr|15
   local.set $ptr|20
   local.get $len|16
   local.set $len|21
   local.get $len|21
   i32.const 4
   i32.ge_s
   if
    local.get $dest|19
    local.set $dest|22
    local.get $ptr|20
    local.set $ptr|23
    local.get $dest|22
    local.get $ptr|23
    i32.load $0
    i32.store $0
    local.get $dest|19
    i32.const 4
    i32.add
    local.set $dest|19
    local.get $ptr|20
    i32.const 4
    i32.add
    local.set $ptr|20
    local.get $len|21
    i32.const 4
    i32.sub
    local.set $len|21
   end
   local.get $dest|19
   local.set $dest|24
   local.get $ptr|20
   local.set $ptr|25
   local.get $len|21
   local.set $len|26
   local.get $len|26
   i32.const 2
   i32.ge_s
   if
    local.get $dest|24
    local.set $dest|27
    local.get $ptr|25
    local.set $ptr|28
    local.get $dest|27
    local.get $ptr|28
    i32.load16_u $0
    i32.store16 $0
    local.get $dest|24
    i32.const 2
    i32.add
    local.set $dest|24
    local.get $ptr|25
    i32.const 2
    i32.add
    local.set $ptr|25
    local.get $len|26
    i32.const 2
    i32.sub
    local.set $len|26
   end
   local.get $dest|24
   local.set $dest|29
   local.get $ptr|25
   local.set $ptr|30
   local.get $len|26
   local.set $len|31
   local.get $len|31
   if
    local.get $dest|29
    local.get $ptr|30
    i32.load8_u $0
    i32.store8 $0
   end
  end
  local.get $buffer
 )
 (func $~lib/rt/__newArray (type $i32_i32_i32_i32_=>_i32) (param $length i32) (param $alignLog2 i32) (param $id i32) (param $data i32) (result i32)
  (local $bufferSize i32)
  (local $buffer i32)
  (local $array i32)
  local.get $length
  local.get $alignLog2
  i32.shl
  local.set $bufferSize
  local.get $bufferSize
  i32.const 0
  local.get $data
  call $~lib/rt/__newBuffer
  local.set $buffer
  i32.const 16
  local.get $id
  call $~lib/rt/stub/__new
  local.set $array
  local.get $array
  local.get $buffer
  i32.store $0
  local.get $array
  local.get $buffer
  i32.const 0
  call $~lib/rt/stub/__link
  local.get $array
  local.get $buffer
  i32.store $0 offset=4
  local.get $array
  local.get $bufferSize
  i32.store $0 offset=8
  local.get $array
  local.get $length
  i32.store $0 offset=12
  local.get $array
 )
 (func $~lib/util/bytes/FILL<u8> (type $i32_i32_i32_i32_i32_=>_none) (param $ptr i32) (param $len i32) (param $value i32) (param $start i32) (param $end i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  local.get $start
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $start
   i32.add
   local.tee $5
   i32.const 0
   local.tee $6
   local.get $5
   local.get $6
   i32.gt_u
   select
  else
   local.get $start
   local.tee $7
   local.get $len
   local.tee $8
   local.get $7
   local.get $8
   i32.lt_s
   select
  end
  local.set $start
  local.get $end
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $end
   i32.add
   local.tee $9
   i32.const 0
   local.tee $10
   local.get $9
   local.get $10
   i32.gt_u
   select
  else
   local.get $end
   local.tee $11
   local.get $len
   local.tee $12
   local.get $11
   local.get $12
   i32.lt_s
   select
  end
  local.set $end
  i32.const 1
  i32.const 1
  i32.eq
  drop
  local.get $start
  local.get $end
  i32.lt_s
  if
   local.get $ptr
   local.get $start
   i32.add
   local.get $value
   local.get $end
   local.get $start
   i32.sub
   memory.fill $0
  end
 )
 (func $~lib/array/Array<u8>#fill (type $i32_i32_i32_i32_=>_i32) (param $this i32) (param $value i32) (param $start i32) (param $end i32) (result i32)
  i32.const 0
  drop
  local.get $this
  i32.load $0 offset=4
  local.get $this
  i32.load $0 offset=12
  local.get $value
  local.get $start
  local.get $end
  call $~lib/util/bytes/FILL<u8>
  local.get $this
 )
 (func $~lib/array/Array<u8>#get:length (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/array/Array<u8>#__get (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  local.get $index
  local.get $this
  i32.load $0 offset=12
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 0
  i32.shl
  i32.add
  i32.load8_u $0
  local.set $value
  i32.const 0
  drop
  local.get $value
 )
 (func $~lib/util/bytes/FILL<u32> (type $i32_i32_i32_i32_i32_=>_none) (param $ptr i32) (param $len i32) (param $value i32) (param $start i32) (param $end i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  local.get $start
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $start
   i32.add
   local.tee $5
   i32.const 0
   local.tee $6
   local.get $5
   local.get $6
   i32.gt_u
   select
  else
   local.get $start
   local.tee $7
   local.get $len
   local.tee $8
   local.get $7
   local.get $8
   i32.lt_s
   select
  end
  local.set $start
  local.get $end
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $end
   i32.add
   local.tee $9
   i32.const 0
   local.tee $10
   local.get $9
   local.get $10
   i32.gt_u
   select
  else
   local.get $end
   local.tee $11
   local.get $len
   local.tee $12
   local.get $11
   local.get $12
   i32.lt_s
   select
  end
  local.set $end
  i32.const 4
  i32.const 1
  i32.eq
  drop
  i32.const 0
  i32.const 1
  i32.le_s
  drop
  i32.const 1
  drop
  local.get $value
  i32.const 0
  i32.eq
  local.get $value
  i32.const -1
  i32.eq
  i32.or
  if
   local.get $start
   local.get $end
   i32.lt_s
   if
    local.get $ptr
    local.get $start
    i32.const 2
    i32.shl
    i32.add
    local.get $value
    local.get $end
    local.get $start
    i32.sub
    i32.const 2
    i32.shl
    memory.fill $0
   end
   return
  end
  loop $for-loop|0
   local.get $start
   local.get $end
   i32.lt_s
   local.set $13
   local.get $13
   if
    local.get $ptr
    local.get $start
    i32.const 2
    i32.shl
    i32.add
    local.get $value
    i32.store $0
    local.get $start
    i32.const 1
    i32.add
    local.set $start
    br $for-loop|0
   end
  end
 )
 (func $~lib/array/Array<u32>#fill (type $i32_i32_i32_i32_=>_i32) (param $this i32) (param $value i32) (param $start i32) (param $end i32) (result i32)
  i32.const 0
  drop
  local.get $this
  i32.load $0 offset=4
  local.get $this
  i32.load $0 offset=12
  local.get $value
  local.get $start
  local.get $end
  call $~lib/util/bytes/FILL<u32>
  local.get $this
 )
 (func $~lib/array/Array<u32>#get:length (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/array/Array<u32>#__get (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  local.get $index
  local.get $this
  i32.load $0 offset=12
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.set $value
  i32.const 0
  drop
  local.get $value
 )
 (func $~lib/util/bytes/FILL<f32> (type $i32_i32_f32_i32_i32_=>_none) (param $ptr i32) (param $len i32) (param $value f32) (param $start i32) (param $end i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  local.get $start
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $start
   i32.add
   local.tee $5
   i32.const 0
   local.tee $6
   local.get $5
   local.get $6
   i32.gt_u
   select
  else
   local.get $start
   local.tee $7
   local.get $len
   local.tee $8
   local.get $7
   local.get $8
   i32.lt_s
   select
  end
  local.set $start
  local.get $end
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $end
   i32.add
   local.tee $9
   i32.const 0
   local.tee $10
   local.get $9
   local.get $10
   i32.gt_u
   select
  else
   local.get $end
   local.tee $11
   local.get $len
   local.tee $12
   local.get $11
   local.get $12
   i32.lt_s
   select
  end
  local.set $end
  i32.const 4
  i32.const 1
  i32.eq
  drop
  i32.const 0
  i32.const 1
  i32.le_s
  drop
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $value
  i32.reinterpret_f32
  i32.const 0
  i32.eq
  if (result i32)
   i32.const 1
  else
   i32.const 4
   i32.const 8
   i32.eq
  end
  if
   local.get $start
   local.get $end
   i32.lt_s
   if
    local.get $ptr
    local.get $start
    i32.const 2
    i32.shl
    i32.add
    i32.const 0
    local.get $end
    local.get $start
    i32.sub
    i32.const 2
    i32.shl
    memory.fill $0
   end
   return
  end
  loop $for-loop|0
   local.get $start
   local.get $end
   i32.lt_s
   local.set $13
   local.get $13
   if
    local.get $ptr
    local.get $start
    i32.const 2
    i32.shl
    i32.add
    local.get $value
    f32.store $0
    local.get $start
    i32.const 1
    i32.add
    local.set $start
    br $for-loop|0
   end
  end
 )
 (func $~lib/array/Array<f32>#fill (type $i32_f32_i32_i32_=>_i32) (param $this i32) (param $value f32) (param $start i32) (param $end i32) (result i32)
  i32.const 0
  drop
  local.get $this
  i32.load $0 offset=4
  local.get $this
  i32.load $0 offset=12
  local.get $value
  local.get $start
  local.get $end
  call $~lib/util/bytes/FILL<f32>
  local.get $this
 )
 (func $~lib/array/Array<f32>#get:length (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/array/Array<f32>#__get (type $i32_i32_=>_f32) (param $this i32) (param $index i32) (result f32)
  (local $value f32)
  local.get $index
  local.get $this
  i32.load $0 offset=12
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  f32.load $0
  local.set $value
  i32.const 0
  drop
  local.get $value
 )
 (func $~lib/array/Array<i32>#get:length (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/arraybuffer/ArrayBuffer#get:byteLength (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.const 20
  i32.sub
  i32.load $0 offset=8
 )
 (func $~lib/rt/stub/__realloc (type $i32_i32_=>_i32) (param $ptr i32) (param $size i32) (result i32)
  (local $block i32)
  (local $actualSize i32)
  (local $isLast i32)
  (local $size|5 i32)
  (local $payloadSize i32)
  (local $newOffset i32)
  (local $pagesBefore i32)
  (local $maxOffset i32)
  (local $10 i32)
  (local $11 i32)
  (local $newPtr i32)
  local.get $ptr
  i32.const 0
  i32.ne
  if (result i32)
   local.get $ptr
   i32.const 15
   i32.and
   i32.eqz
  else
   i32.const 0
  end
  i32.eqz
  if
   unreachable
  end
  local.get $ptr
  i32.const 4
  i32.sub
  local.set $block
  local.get $block
  i32.load $0
  local.set $actualSize
  local.get $ptr
  local.get $actualSize
  i32.add
  global.get $~lib/rt/stub/offset
  i32.eq
  local.set $isLast
  local.get $size
  local.set $size|5
  local.get $size|5
  i32.const 4
  i32.add
  i32.const 15
  i32.add
  i32.const 15
  i32.const -1
  i32.xor
  i32.and
  i32.const 4
  i32.sub
  local.set $payloadSize
  local.get $size
  local.get $actualSize
  i32.gt_u
  if
   local.get $isLast
   if
    local.get $size
    i32.const 1073741820
    i32.gt_u
    if
     unreachable
    end
    local.get $ptr
    local.get $payloadSize
    i32.add
    local.set $newOffset
    memory.size $0
    local.set $pagesBefore
    local.get $pagesBefore
    i32.const 16
    i32.shl
    i32.const 15
    i32.add
    i32.const 15
    i32.const -1
    i32.xor
    i32.and
    local.set $maxOffset
    local.get $newOffset
    local.get $maxOffset
    i32.gt_u
    if
     unreachable
    end
    local.get $newOffset
    global.set $~lib/rt/stub/offset
    local.get $block
    local.get $payloadSize
    call $~lib/rt/common/BLOCK#set:mmInfo
   else
    local.get $payloadSize
    local.tee $10
    local.get $actualSize
    i32.const 1
    i32.shl
    local.tee $11
    local.get $10
    local.get $11
    i32.gt_u
    select
    call $~lib/rt/stub/__alloc
    local.set $newPtr
    local.get $newPtr
    local.get $ptr
    local.get $actualSize
    memory.copy $0 $0
    local.get $newPtr
    local.tee $ptr
    i32.const 4
    i32.sub
    local.set $block
   end
  else
   local.get $isLast
   if
    local.get $ptr
    local.get $payloadSize
    i32.add
    global.set $~lib/rt/stub/offset
    local.get $block
    local.get $payloadSize
    call $~lib/rt/common/BLOCK#set:mmInfo
   end
  end
  local.get $ptr
 )
 (func $~lib/rt/stub/__renew (type $i32_i32_=>_i32) (param $oldPtr i32) (param $size i32) (result i32)
  (local $newPtr i32)
  local.get $size
  i32.const 1073741804
  i32.gt_u
  if
   unreachable
  end
  local.get $oldPtr
  i32.const 16
  i32.sub
  i32.const 16
  local.get $size
  i32.add
  call $~lib/rt/stub/__realloc
  local.set $newPtr
  local.get $newPtr
  i32.const 4
  i32.sub
  local.get $size
  call $~lib/rt/common/OBJECT#set:rtSize
  local.get $newPtr
  i32.const 16
  i32.add
 )
 (func $~lib/array/ensureCapacity (type $i32_i32_i32_i32_=>_none) (param $array i32) (param $newSize i32) (param $alignLog2 i32) (param $canGrow i32)
  (local $oldCapacity i32)
  (local $oldData i32)
  (local $6 i32)
  (local $7 i32)
  (local $newCapacity i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $newData i32)
  local.get $array
  i32.load $0 offset=8
  local.set $oldCapacity
  local.get $newSize
  local.get $oldCapacity
  local.get $alignLog2
  i32.shr_u
  i32.gt_u
  if
   local.get $newSize
   i32.const 1073741820
   local.get $alignLog2
   i32.shr_u
   i32.gt_u
   if
    unreachable
   end
   local.get $array
   i32.load $0
   local.set $oldData
   local.get $newSize
   local.tee $6
   i32.const 8
   local.tee $7
   local.get $6
   local.get $7
   i32.gt_u
   select
   local.get $alignLog2
   i32.shl
   local.set $newCapacity
   local.get $canGrow
   if
    local.get $oldCapacity
    i32.const 1
    i32.shl
    local.tee $9
    i32.const 1073741820
    local.tee $10
    local.get $9
    local.get $10
    i32.lt_u
    select
    local.tee $11
    local.get $newCapacity
    local.tee $12
    local.get $11
    local.get $12
    i32.gt_u
    select
    local.set $newCapacity
   end
   local.get $oldData
   local.get $newCapacity
   call $~lib/rt/stub/__renew
   local.set $newData
   i32.const 0
   global.get $~lib/shared/runtime/Runtime.Incremental
   i32.ne
   drop
   local.get $newData
   local.get $oldCapacity
   i32.add
   i32.const 0
   local.get $newCapacity
   local.get $oldCapacity
   i32.sub
   memory.fill $0
   local.get $newData
   local.get $oldData
   i32.ne
   if
    local.get $array
    local.get $newData
    i32.store $0
    local.get $array
    local.get $newData
    i32.store $0 offset=4
    local.get $array
    local.get $newData
    i32.const 0
    call $~lib/rt/stub/__link
   end
   local.get $array
   local.get $newCapacity
   i32.store $0 offset=8
  end
 )
 (func $~lib/array/Array<i32>#push (type $i32_i32_=>_i32) (param $this i32) (param $value i32) (result i32)
  (local $oldLen i32)
  (local $len i32)
  local.get $this
  i32.load $0 offset=12
  local.set $oldLen
  local.get $oldLen
  i32.const 1
  i32.add
  local.set $len
  local.get $this
  local.get $len
  i32.const 2
  i32.const 1
  call $~lib/array/ensureCapacity
  i32.const 0
  drop
  local.get $this
  i32.load $0 offset=4
  local.get $oldLen
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store $0
  local.get $this
  local.get $len
  call $~lib/array/Array<i32>#set:length_
  local.get $len
 )
 (func $~lib/array/Array<i32>#__get (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  local.get $index
  local.get $this
  i32.load $0 offset=12
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.set $value
  i32.const 0
  drop
  local.get $value
 )
 (func $~lib/array/Array<i32>#pop (type $i32_=>_i32) (param $this i32) (result i32)
  (local $len i32)
  (local $val i32)
  local.get $this
  i32.load $0 offset=12
  local.set $len
  local.get $len
  i32.const 1
  i32.lt_s
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $len
  i32.const 1
  i32.sub
  local.tee $len
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.set $val
  local.get $this
  local.get $len
  call $~lib/array/Array<i32>#set:length_
  local.get $val
 )
 (func $~lib/array/Array<std/array/Ref>#__uset (type $i32_i32_i32_=>_none) (param $this i32) (param $index i32) (param $value i32)
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store $0
  i32.const 1
  drop
  local.get $this
  local.get $value
  i32.const 1
  call $~lib/rt/stub/__link
 )
 (func $~lib/array/Array<std/array/Ref>#set:length_ (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=12
 )
 (func $~lib/array/Array<std/array/Ref>#set:length (type $i32_i32_=>_none) (param $this i32) (param $newLength i32)
  local.get $this
  local.get $newLength
  i32.const 2
  i32.const 0
  call $~lib/array/ensureCapacity
  local.get $this
  local.get $newLength
  call $~lib/array/Array<std/array/Ref>#set:length_
 )
 (func $~lib/array/Array<std/array/Ref>#get:length (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/array/Array<i32>#at (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  (local $len i32)
  (local $value i32)
  local.get $this
  i32.load $0 offset=12
  local.set $len
  local.get $index
  i32.const 0
  local.get $len
  local.get $index
  i32.const 0
  i32.ge_s
  select
  i32.add
  local.set $index
  local.get $index
  local.get $len
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.set $value
  i32.const 0
  drop
  local.get $value
 )
 (func $~lib/array/Array<i32>#concat (type $i32_i32_=>_i32) (param $this i32) (param $other i32) (result i32)
  (local $thisLen i32)
  (local $otherLen i32)
  (local $outLen i32)
  (local $out i32)
  (local $outStart i32)
  (local $thisSize i32)
  local.get $this
  i32.load $0 offset=12
  local.set $thisLen
  local.get $other
  i32.load $0 offset=12
  local.set $otherLen
  local.get $thisLen
  local.get $otherLen
  i32.add
  local.set $outLen
  local.get $outLen
  i32.const 1073741820
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   unreachable
  end
  local.get $outLen
  i32.const 2
  i32.const 3
  i32.const 0
  call $~lib/rt/__newArray
  local.set $out
  local.get $out
  i32.load $0 offset=4
  local.set $outStart
  local.get $thisLen
  i32.const 2
  i32.shl
  local.set $thisSize
  i32.const 0
  drop
  local.get $outStart
  local.get $this
  i32.load $0 offset=4
  local.get $thisSize
  memory.copy $0 $0
  local.get $outStart
  local.get $thisSize
  i32.add
  local.get $other
  i32.load $0 offset=4
  local.get $otherLen
  i32.const 2
  i32.shl
  memory.copy $0 $0
  local.get $out
 )
 (func $~lib/array/Array<i32>#copyWithin (type $i32_i32_i32_i32_=>_i32) (param $this i32) (param $target i32) (param $start i32) (param $end i32) (result i32)
  (local $ptr i32)
  (local $len i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $to i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $from i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $last i32)
  (local $23 i32)
  (local $24 i32)
  (local $count i32)
  local.get $this
  i32.load $0 offset=4
  local.set $ptr
  local.get $this
  i32.load $0 offset=12
  local.set $len
  local.get $end
  local.tee $6
  local.get $len
  local.tee $7
  local.get $6
  local.get $7
  i32.lt_s
  select
  local.set $end
  local.get $target
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $target
   i32.add
   local.tee $8
   i32.const 0
   local.tee $9
   local.get $8
   local.get $9
   i32.gt_s
   select
  else
   local.get $target
   local.tee $10
   local.get $len
   local.tee $11
   local.get $10
   local.get $11
   i32.lt_s
   select
  end
  local.set $to
  local.get $start
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $start
   i32.add
   local.tee $13
   i32.const 0
   local.tee $14
   local.get $13
   local.get $14
   i32.gt_s
   select
  else
   local.get $start
   local.tee $15
   local.get $len
   local.tee $16
   local.get $15
   local.get $16
   i32.lt_s
   select
  end
  local.set $from
  local.get $end
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $end
   i32.add
   local.tee $18
   i32.const 0
   local.tee $19
   local.get $18
   local.get $19
   i32.gt_s
   select
  else
   local.get $end
   local.tee $20
   local.get $len
   local.tee $21
   local.get $20
   local.get $21
   i32.lt_s
   select
  end
  local.set $last
  local.get $last
  local.get $from
  i32.sub
  local.tee $23
  local.get $len
  local.get $to
  i32.sub
  local.tee $24
  local.get $23
  local.get $24
  i32.lt_s
  select
  local.set $count
  local.get $ptr
  local.get $to
  i32.const 2
  i32.shl
  i32.add
  local.get $ptr
  local.get $from
  i32.const 2
  i32.shl
  i32.add
  local.get $count
  i32.const 2
  i32.shl
  memory.copy $0 $0
  local.get $this
 )
 (func $~lib/array/Array<i32>#unshift (type $i32_i32_=>_i32) (param $this i32) (param $value i32) (result i32)
  (local $len i32)
  (local $ptr i32)
  local.get $this
  i32.load $0 offset=12
  i32.const 1
  i32.add
  local.set $len
  local.get $this
  local.get $len
  i32.const 2
  i32.const 1
  call $~lib/array/ensureCapacity
  local.get $this
  i32.load $0 offset=4
  local.set $ptr
  local.get $ptr
  i32.const 4
  i32.add
  local.get $ptr
  local.get $len
  i32.const 1
  i32.sub
  i32.const 2
  i32.shl
  memory.copy $0 $0
  local.get $ptr
  local.get $value
  i32.store $0
  i32.const 0
  drop
  local.get $this
  local.get $len
  call $~lib/array/Array<i32>#set:length_
  local.get $len
 )
 (func $~lib/array/Array<i32>#shift (type $i32_=>_i32) (param $this i32) (result i32)
  (local $len i32)
  (local $base i32)
  (local $element i32)
  (local $lastIndex i32)
  local.get $this
  i32.load $0 offset=12
  local.set $len
  local.get $len
  i32.const 1
  i32.lt_s
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.set $base
  local.get $base
  i32.load $0
  local.set $element
  local.get $len
  i32.const 1
  i32.sub
  local.set $lastIndex
  local.get $base
  local.get $base
  i32.const 4
  i32.add
  local.get $lastIndex
  i32.const 2
  i32.shl
  memory.copy $0 $0
  i32.const 0
  drop
  local.get $base
  local.get $lastIndex
  i32.const 2
  i32.shl
  i32.add
  i32.const 0
  i32.store $0
  local.get $this
  local.get $lastIndex
  call $~lib/array/Array<i32>#set:length_
  local.get $element
 )
 (func $~lib/array/Array<i32>#slice (type $i32_i32_i32_=>_i32) (param $this i32) (param $start i32) (param $end i32) (result i32)
  (local $len i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $slice i32)
  (local $sliceBase i32)
  (local $thisBase i32)
  local.get $this
  i32.load $0 offset=12
  local.set $len
  local.get $start
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $start
   local.get $len
   i32.add
   local.tee $4
   i32.const 0
   local.tee $5
   local.get $4
   local.get $5
   i32.gt_s
   select
  else
   local.get $start
   local.tee $6
   local.get $len
   local.tee $7
   local.get $6
   local.get $7
   i32.lt_s
   select
  end
  local.set $start
  local.get $end
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $end
   local.get $len
   i32.add
   local.tee $8
   i32.const 0
   local.tee $9
   local.get $8
   local.get $9
   i32.gt_s
   select
  else
   local.get $end
   local.tee $10
   local.get $len
   local.tee $11
   local.get $10
   local.get $11
   i32.lt_s
   select
  end
  local.set $end
  local.get $end
  local.get $start
  i32.sub
  local.tee $12
  i32.const 0
  local.tee $13
  local.get $12
  local.get $13
  i32.gt_s
  select
  local.set $len
  local.get $len
  i32.const 2
  i32.const 3
  i32.const 0
  call $~lib/rt/__newArray
  local.set $slice
  local.get $slice
  i32.load $0 offset=4
  local.set $sliceBase
  local.get $this
  i32.load $0 offset=4
  local.get $start
  i32.const 2
  i32.shl
  i32.add
  local.set $thisBase
  i32.const 0
  drop
  local.get $sliceBase
  local.get $thisBase
  local.get $len
  i32.const 2
  i32.shl
  memory.copy $0 $0
  local.get $slice
 )
 (func $~lib/util/bytes/REVERSE<i32> (type $i32_i32_=>_none) (param $ptr i32) (param $len i32)
  (local $i i32)
  (local $tail i32)
  (local $hlen i32)
  (local $5 i32)
  (local $front i32)
  (local $back i32)
  (local $temp i32)
  local.get $len
  i32.const 1
  i32.gt_u
  if
   i32.const 0
   local.set $i
   local.get $len
   i32.const 1
   i32.shr_u
   local.set $hlen
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   i32.const 4
   i32.const 1
   i32.eq
   drop
   i32.const 4
   i32.const 2
   i32.eq
   drop
   local.get $len
   i32.const 1
   i32.sub
   local.set $tail
   loop $while-continue|0
    local.get $i
    local.get $hlen
    i32.lt_u
    local.set $5
    local.get $5
    if
     local.get $ptr
     local.get $i
     i32.const 2
     i32.shl
     i32.add
     local.set $front
     local.get $ptr
     local.get $tail
     local.get $i
     i32.sub
     i32.const 2
     i32.shl
     i32.add
     local.set $back
     local.get $front
     i32.load $0
     local.set $temp
     local.get $front
     local.get $back
     i32.load $0
     i32.store $0
     local.get $back
     local.get $temp
     i32.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $while-continue|0
    end
   end
  end
 )
 (func $~lib/array/Array<i32>#reverse (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  i32.load $0 offset=12
  call $~lib/util/bytes/REVERSE<i32>
  local.get $this
 )
 (func $~lib/util/bytes/REVERSE<u8> (type $i32_i32_=>_none) (param $ptr i32) (param $len i32)
  (local $i i32)
  (local $tail i32)
  (local $hlen i32)
  (local $5 i32)
  (local $front i32)
  (local $back i32)
  (local $8 i64)
  (local $9 i64)
  (local $temp i64)
  (local $11 i64)
  (local $12 i64)
  (local $13 i32)
  (local $front|14 i32)
  (local $back|15 i32)
  (local $temp|16 i32)
  local.get $len
  i32.const 1
  i32.gt_u
  if
   i32.const 0
   local.set $i
   local.get $len
   i32.const 1
   i32.shr_u
   local.set $hlen
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   i32.const 1
   i32.const 1
   i32.eq
   drop
   local.get $len
   i32.const 8
   i32.sub
   local.set $tail
   loop $while-continue|0
    local.get $i
    i32.const 7
    i32.add
    local.get $hlen
    i32.lt_u
    local.set $5
    local.get $5
    if
     local.get $ptr
     local.get $i
     i32.add
     local.set $front
     local.get $ptr
     local.get $tail
     i32.add
     local.get $i
     i32.sub
     local.set $back
     local.get $front
     i64.load $0
     local.tee $8
     i64.const 8
     i64.shr_u
     i64.const 71777214294589695
     i64.and
     local.get $8
     i64.const 71777214294589695
     i64.and
     i64.const 8
     i64.shl
     i64.or
     local.tee $9
     i64.const 16
     i64.shr_u
     i64.const 281470681808895
     i64.and
     local.get $9
     i64.const 281470681808895
     i64.and
     i64.const 16
     i64.shl
     i64.or
     i64.const 32
     i64.rotr
     local.set $temp
     local.get $front
     local.get $back
     i64.load $0
     local.tee $11
     i64.const 8
     i64.shr_u
     i64.const 71777214294589695
     i64.and
     local.get $11
     i64.const 71777214294589695
     i64.and
     i64.const 8
     i64.shl
     i64.or
     local.tee $12
     i64.const 16
     i64.shr_u
     i64.const 281470681808895
     i64.and
     local.get $12
     i64.const 281470681808895
     i64.and
     i64.const 16
     i64.shl
     i64.or
     i64.const 32
     i64.rotr
     i64.store $0
     local.get $back
     local.get $temp
     i64.store $0
     local.get $i
     i32.const 8
     i32.add
     local.set $i
     br $while-continue|0
    end
   end
   i32.const 1
   i32.const 2
   i32.eq
   drop
   local.get $len
   i32.const 1
   i32.sub
   local.set $tail
   loop $while-continue|1
    local.get $i
    local.get $hlen
    i32.lt_u
    local.set $13
    local.get $13
    if
     local.get $ptr
     local.get $i
     i32.const 0
     i32.shl
     i32.add
     local.set $front|14
     local.get $ptr
     local.get $tail
     local.get $i
     i32.sub
     i32.const 0
     i32.shl
     i32.add
     local.set $back|15
     local.get $front|14
     i32.load8_u $0
     local.set $temp|16
     local.get $front|14
     local.get $back|15
     i32.load8_u $0
     i32.store8 $0
     local.get $back|15
     local.get $temp|16
     i32.store8 $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $while-continue|1
    end
   end
  end
 )
 (func $~lib/array/Array<u8>#reverse (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  i32.load $0 offset=12
  call $~lib/util/bytes/REVERSE<u8>
  local.get $this
 )
 (func $~lib/util/bytes/REVERSE<u16> (type $i32_i32_=>_none) (param $ptr i32) (param $len i32)
  (local $i i32)
  (local $tail i32)
  (local $hlen i32)
  (local $5 i32)
  (local $front i32)
  (local $back i32)
  (local $temp i32)
  (local $9 i32)
  (local $front|10 i32)
  (local $back|11 i32)
  (local $temp|12 i32)
  local.get $len
  i32.const 1
  i32.gt_u
  if
   i32.const 0
   local.set $i
   local.get $len
   i32.const 1
   i32.shr_u
   local.set $hlen
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   i32.const 2
   i32.const 1
   i32.eq
   drop
   i32.const 2
   i32.const 2
   i32.eq
   drop
   local.get $len
   i32.const 2
   i32.sub
   local.set $tail
   loop $while-continue|0
    local.get $i
    i32.const 1
    i32.add
    local.get $hlen
    i32.lt_u
    local.set $5
    local.get $5
    if
     local.get $ptr
     local.get $i
     i32.const 1
     i32.shl
     i32.add
     local.set $front
     local.get $ptr
     local.get $tail
     local.get $i
     i32.sub
     i32.const 1
     i32.shl
     i32.add
     local.set $back
     local.get $back
     i32.load $0
     i32.const 16
     i32.rotr
     local.set $temp
     local.get $back
     local.get $front
     i32.load $0
     i32.const 16
     i32.rotr
     i32.store $0
     local.get $front
     local.get $temp
     i32.store $0
     local.get $i
     i32.const 2
     i32.add
     local.set $i
     br $while-continue|0
    end
   end
   local.get $len
   i32.const 1
   i32.sub
   local.set $tail
   loop $while-continue|1
    local.get $i
    local.get $hlen
    i32.lt_u
    local.set $9
    local.get $9
    if
     local.get $ptr
     local.get $i
     i32.const 1
     i32.shl
     i32.add
     local.set $front|10
     local.get $ptr
     local.get $tail
     local.get $i
     i32.sub
     i32.const 1
     i32.shl
     i32.add
     local.set $back|11
     local.get $front|10
     i32.load16_u $0
     local.set $temp|12
     local.get $front|10
     local.get $back|11
     i32.load16_u $0
     i32.store16 $0
     local.get $back|11
     local.get $temp|12
     i32.store16 $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $while-continue|1
    end
   end
  end
 )
 (func $~lib/array/Array<u16>#reverse (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  i32.load $0 offset=12
  call $~lib/util/bytes/REVERSE<u16>
  local.get $this
 )
 (func $~lib/array/Array<u16>#get:length (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/array/Array<u16>#__get (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  local.get $index
  local.get $this
  i32.load $0 offset=12
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 1
  i32.shl
  i32.add
  i32.load16_u $0
  local.set $value
  i32.const 0
  drop
  local.get $value
 )
 (func $~lib/array/Array<i32>#indexOf (type $i32_i32_i32_=>_i32) (param $this i32) (param $value i32) (param $fromIndex i32) (result i32)
  (local $len i32)
  (local $4 i32)
  (local $5 i32)
  (local $ptr i32)
  (local $7 i32)
  local.get $this
  i32.load $0 offset=12
  local.set $len
  local.get $len
  i32.const 0
  i32.eq
  if (result i32)
   i32.const 1
  else
   local.get $fromIndex
   local.get $len
   i32.ge_s
  end
  if
   i32.const -1
   return
  end
  local.get $fromIndex
  i32.const 0
  i32.lt_s
  if
   local.get $len
   local.get $fromIndex
   i32.add
   local.tee $4
   i32.const 0
   local.tee $5
   local.get $4
   local.get $5
   i32.gt_s
   select
   local.set $fromIndex
  end
  local.get $this
  i32.load $0 offset=4
  local.set $ptr
  loop $while-continue|0
   local.get $fromIndex
   local.get $len
   i32.lt_s
   local.set $7
   local.get $7
   if
    local.get $ptr
    local.get $fromIndex
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.get $value
    i32.eq
    if
     local.get $fromIndex
     return
    end
    local.get $fromIndex
    i32.const 1
    i32.add
    local.set $fromIndex
    br $while-continue|0
   end
  end
  i32.const -1
 )
 (func $~lib/array/Array<f32>#indexOf (type $i32_f32_i32_=>_i32) (param $this i32) (param $value f32) (param $fromIndex i32) (result i32)
  (local $len i32)
  (local $4 i32)
  (local $5 i32)
  (local $ptr i32)
  (local $7 i32)
  local.get $this
  i32.load $0 offset=12
  local.set $len
  local.get $len
  i32.const 0
  i32.eq
  if (result i32)
   i32.const 1
  else
   local.get $fromIndex
   local.get $len
   i32.ge_s
  end
  if
   i32.const -1
   return
  end
  local.get $fromIndex
  i32.const 0
  i32.lt_s
  if
   local.get $len
   local.get $fromIndex
   i32.add
   local.tee $4
   i32.const 0
   local.tee $5
   local.get $4
   local.get $5
   i32.gt_s
   select
   local.set $fromIndex
  end
  local.get $this
  i32.load $0 offset=4
  local.set $ptr
  loop $while-continue|0
   local.get $fromIndex
   local.get $len
   i32.lt_s
   local.set $7
   local.get $7
   if
    local.get $ptr
    local.get $fromIndex
    i32.const 2
    i32.shl
    i32.add
    f32.load $0
    local.get $value
    f32.eq
    if
     local.get $fromIndex
     return
    end
    local.get $fromIndex
    i32.const 1
    i32.add
    local.set $fromIndex
    br $while-continue|0
   end
  end
  i32.const -1
 )
 (func $~lib/array/Array<f64>#indexOf (type $i32_f64_i32_=>_i32) (param $this i32) (param $value f64) (param $fromIndex i32) (result i32)
  (local $len i32)
  (local $4 i32)
  (local $5 i32)
  (local $ptr i32)
  (local $7 i32)
  local.get $this
  i32.load $0 offset=12
  local.set $len
  local.get $len
  i32.const 0
  i32.eq
  if (result i32)
   i32.const 1
  else
   local.get $fromIndex
   local.get $len
   i32.ge_s
  end
  if
   i32.const -1
   return
  end
  local.get $fromIndex
  i32.const 0
  i32.lt_s
  if
   local.get $len
   local.get $fromIndex
   i32.add
   local.tee $4
   i32.const 0
   local.tee $5
   local.get $4
   local.get $5
   i32.gt_s
   select
   local.set $fromIndex
  end
  local.get $this
  i32.load $0 offset=4
  local.set $ptr
  loop $while-continue|0
   local.get $fromIndex
   local.get $len
   i32.lt_s
   local.set $7
   local.get $7
   if
    local.get $ptr
    local.get $fromIndex
    i32.const 3
    i32.shl
    i32.add
    f64.load $0
    local.get $value
    f64.eq
    if
     local.get $fromIndex
     return
    end
    local.get $fromIndex
    i32.const 1
    i32.add
    local.set $fromIndex
    br $while-continue|0
   end
  end
  i32.const -1
 )
 (func $~lib/array/Array<i32>#lastIndexOf (type $i32_i32_i32_=>_i32) (param $this i32) (param $value i32) (param $fromIndex i32) (result i32)
  (local $len i32)
  (local $ptr i32)
  (local $5 i32)
  local.get $this
  i32.load $0 offset=12
  local.set $len
  local.get $len
  i32.const 0
  i32.eq
  if
   i32.const -1
   return
  end
  local.get $fromIndex
  i32.const 0
  i32.lt_s
  if
   local.get $len
   local.get $fromIndex
   i32.add
   local.set $fromIndex
  else
   local.get $fromIndex
   local.get $len
   i32.ge_s
   if
    local.get $len
    i32.const 1
    i32.sub
    local.set $fromIndex
   end
  end
  local.get $this
  i32.load $0 offset=4
  local.set $ptr
  loop $while-continue|0
   local.get $fromIndex
   i32.const 0
   i32.ge_s
   local.set $5
   local.get $5
   if
    local.get $ptr
    local.get $fromIndex
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.get $value
    i32.eq
    if
     local.get $fromIndex
     return
    end
    local.get $fromIndex
    i32.const 1
    i32.sub
    local.set $fromIndex
    br $while-continue|0
   end
  end
  i32.const -1
 )
 (func $~lib/array/Array<i32>#lastIndexOf@varargs (type $i32_i32_i32_=>_i32) (param $this i32) (param $value i32) (param $fromIndex i32) (result i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   local.get $this
   i32.load $0 offset=12
   local.set $fromIndex
  end
  local.get $this
  local.get $value
  local.get $fromIndex
  call $~lib/array/Array<i32>#lastIndexOf
 )
 (func $~lib/array/Array<i32>#includes (type $i32_i32_i32_=>_i32) (param $this i32) (param $value i32) (param $fromIndex i32) (result i32)
  i32.const 0
  drop
  local.get $this
  local.get $value
  local.get $fromIndex
  call $~lib/array/Array<i32>#indexOf
  i32.const 0
  i32.ge_s
  return
 )
 (func $~lib/array/Array<f32>#includes (type $i32_f32_i32_=>_i32) (param $this i32) (param $value f32) (param $fromIndex i32) (result i32)
  (local $len i32)
  (local $4 i32)
  (local $5 i32)
  (local $ptr i32)
  (local $7 i32)
  (local $elem f32)
  i32.const 1
  drop
  local.get $this
  i32.load $0 offset=12
  local.set $len
  local.get $len
  i32.const 0
  i32.eq
  if (result i32)
   i32.const 1
  else
   local.get $fromIndex
   local.get $len
   i32.ge_s
  end
  if
   i32.const 0
   return
  end
  local.get $fromIndex
  i32.const 0
  i32.lt_s
  if
   local.get $len
   local.get $fromIndex
   i32.add
   local.tee $4
   i32.const 0
   local.tee $5
   local.get $4
   local.get $5
   i32.gt_s
   select
   local.set $fromIndex
  end
  local.get $this
  i32.load $0 offset=4
  local.set $ptr
  loop $while-continue|0
   local.get $fromIndex
   local.get $len
   i32.lt_s
   local.set $7
   local.get $7
   if
    local.get $ptr
    local.get $fromIndex
    i32.const 2
    i32.shl
    i32.add
    f32.load $0
    local.set $elem
    local.get $elem
    local.get $value
    f32.eq
    if (result i32)
     i32.const 1
    else
     local.get $elem
     local.get $elem
     f32.ne
     local.get $value
     local.get $value
     f32.ne
     i32.and
    end
    if
     i32.const 1
     return
    end
    local.get $fromIndex
    i32.const 1
    i32.add
    local.set $fromIndex
    br $while-continue|0
   end
  end
  i32.const 0
  return
 )
 (func $~lib/array/Array<f64>#includes (type $i32_f64_i32_=>_i32) (param $this i32) (param $value f64) (param $fromIndex i32) (result i32)
  (local $len i32)
  (local $4 i32)
  (local $5 i32)
  (local $ptr i32)
  (local $7 i32)
  (local $elem f64)
  i32.const 1
  drop
  local.get $this
  i32.load $0 offset=12
  local.set $len
  local.get $len
  i32.const 0
  i32.eq
  if (result i32)
   i32.const 1
  else
   local.get $fromIndex
   local.get $len
   i32.ge_s
  end
  if
   i32.const 0
   return
  end
  local.get $fromIndex
  i32.const 0
  i32.lt_s
  if
   local.get $len
   local.get $fromIndex
   i32.add
   local.tee $4
   i32.const 0
   local.tee $5
   local.get $4
   local.get $5
   i32.gt_s
   select
   local.set $fromIndex
  end
  local.get $this
  i32.load $0 offset=4
  local.set $ptr
  loop $while-continue|0
   local.get $fromIndex
   local.get $len
   i32.lt_s
   local.set $7
   local.get $7
   if
    local.get $ptr
    local.get $fromIndex
    i32.const 3
    i32.shl
    i32.add
    f64.load $0
    local.set $elem
    local.get $elem
    local.get $value
    f64.eq
    if (result i32)
     i32.const 1
    else
     local.get $elem
     local.get $elem
     f64.ne
     local.get $value
     local.get $value
     f64.ne
     i32.and
    end
    if
     i32.const 1
     return
    end
    local.get $fromIndex
    i32.const 1
    i32.add
    local.set $fromIndex
    br $while-continue|0
   end
  end
  i32.const 0
  return
 )
 (func $~lib/array/Array<i32>#splice (type $i32_i32_i32_=>_i32) (param $this i32) (param $start i32) (param $deleteCount i32) (result i32)
  (local $len i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $result i32)
  (local $resultStart i32)
  (local $thisStart i32)
  (local $thisBase i32)
  (local $offset i32)
  local.get $this
  i32.load $0 offset=12
  local.set $len
  local.get $start
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $start
   i32.add
   local.tee $4
   i32.const 0
   local.tee $5
   local.get $4
   local.get $5
   i32.gt_s
   select
  else
   local.get $start
   local.tee $6
   local.get $len
   local.tee $7
   local.get $6
   local.get $7
   i32.lt_s
   select
  end
  local.set $start
  local.get $deleteCount
  local.tee $8
  local.get $len
  local.get $start
  i32.sub
  local.tee $9
  local.get $8
  local.get $9
  i32.lt_s
  select
  local.tee $10
  i32.const 0
  local.tee $11
  local.get $10
  local.get $11
  i32.gt_s
  select
  local.set $deleteCount
  local.get $deleteCount
  i32.const 2
  i32.const 3
  i32.const 0
  call $~lib/rt/__newArray
  local.set $result
  local.get $result
  i32.load $0 offset=4
  local.set $resultStart
  local.get $this
  i32.load $0 offset=4
  local.set $thisStart
  local.get $thisStart
  local.get $start
  i32.const 2
  i32.shl
  i32.add
  local.set $thisBase
  local.get $resultStart
  local.get $thisBase
  local.get $deleteCount
  i32.const 2
  i32.shl
  memory.copy $0 $0
  local.get $start
  local.get $deleteCount
  i32.add
  local.set $offset
  local.get $len
  local.get $offset
  i32.ne
  if
   local.get $thisBase
   local.get $thisStart
   local.get $offset
   i32.const 2
   i32.shl
   i32.add
   local.get $len
   local.get $offset
   i32.sub
   i32.const 2
   i32.shl
   memory.copy $0 $0
  end
  local.get $this
  local.get $len
  local.get $deleteCount
  i32.sub
  call $~lib/array/Array<i32>#set:length_
  local.get $result
 )
 (func $~lib/array/Array<std/array/Ref>#splice (type $i32_i32_i32_=>_i32) (param $this i32) (param $start i32) (param $deleteCount i32) (result i32)
  (local $len i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $result i32)
  (local $resultStart i32)
  (local $thisStart i32)
  (local $thisBase i32)
  (local $offset i32)
  local.get $this
  i32.load $0 offset=12
  local.set $len
  local.get $start
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $start
   i32.add
   local.tee $4
   i32.const 0
   local.tee $5
   local.get $4
   local.get $5
   i32.gt_s
   select
  else
   local.get $start
   local.tee $6
   local.get $len
   local.tee $7
   local.get $6
   local.get $7
   i32.lt_s
   select
  end
  local.set $start
  local.get $deleteCount
  local.tee $8
  local.get $len
  local.get $start
  i32.sub
  local.tee $9
  local.get $8
  local.get $9
  i32.lt_s
  select
  local.tee $10
  i32.const 0
  local.tee $11
  local.get $10
  local.get $11
  i32.gt_s
  select
  local.set $deleteCount
  local.get $deleteCount
  i32.const 2
  i32.const 9
  i32.const 0
  call $~lib/rt/__newArray
  local.set $result
  local.get $result
  i32.load $0 offset=4
  local.set $resultStart
  local.get $this
  i32.load $0 offset=4
  local.set $thisStart
  local.get $thisStart
  local.get $start
  i32.const 2
  i32.shl
  i32.add
  local.set $thisBase
  local.get $resultStart
  local.get $thisBase
  local.get $deleteCount
  i32.const 2
  i32.shl
  memory.copy $0 $0
  local.get $start
  local.get $deleteCount
  i32.add
  local.set $offset
  local.get $len
  local.get $offset
  i32.ne
  if
   local.get $thisBase
   local.get $thisStart
   local.get $offset
   i32.const 2
   i32.shl
   i32.add
   local.get $len
   local.get $offset
   i32.sub
   i32.const 2
   i32.shl
   memory.copy $0 $0
  end
  local.get $this
  local.get $len
  local.get $deleteCount
  i32.sub
  call $~lib/array/Array<std/array/Ref>#set:length_
  local.get $result
 )
 (func $~lib/array/Array<std/array/Ref>#__get (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  local.get $index
  local.get $this
  i32.load $0 offset=12
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.set $value
  i32.const 1
  drop
  i32.const 0
  i32.eqz
  drop
  local.get $value
  i32.eqz
  if
   unreachable
  end
  local.get $value
 )
 (func $~lib/array/Array<std/array/Ref|null>#__uset (type $i32_i32_i32_=>_none) (param $this i32) (param $index i32) (param $value i32)
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store $0
  i32.const 1
  drop
  local.get $this
  local.get $value
  i32.const 1
  call $~lib/rt/stub/__link
 )
 (func $~lib/array/Array<std/array/Ref|null>#set:length_ (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=12
 )
 (func $~lib/array/Array<std/array/Ref|null>#splice (type $i32_i32_i32_=>_i32) (param $this i32) (param $start i32) (param $deleteCount i32) (result i32)
  (local $len i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $result i32)
  (local $resultStart i32)
  (local $thisStart i32)
  (local $thisBase i32)
  (local $offset i32)
  local.get $this
  i32.load $0 offset=12
  local.set $len
  local.get $start
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $start
   i32.add
   local.tee $4
   i32.const 0
   local.tee $5
   local.get $4
   local.get $5
   i32.gt_s
   select
  else
   local.get $start
   local.tee $6
   local.get $len
   local.tee $7
   local.get $6
   local.get $7
   i32.lt_s
   select
  end
  local.set $start
  local.get $deleteCount
  local.tee $8
  local.get $len
  local.get $start
  i32.sub
  local.tee $9
  local.get $8
  local.get $9
  i32.lt_s
  select
  local.tee $10
  i32.const 0
  local.tee $11
  local.get $10
  local.get $11
  i32.gt_s
  select
  local.set $deleteCount
  local.get $deleteCount
  i32.const 2
  i32.const 13
  i32.const 0
  call $~lib/rt/__newArray
  local.set $result
  local.get $result
  i32.load $0 offset=4
  local.set $resultStart
  local.get $this
  i32.load $0 offset=4
  local.set $thisStart
  local.get $thisStart
  local.get $start
  i32.const 2
  i32.shl
  i32.add
  local.set $thisBase
  local.get $resultStart
  local.get $thisBase
  local.get $deleteCount
  i32.const 2
  i32.shl
  memory.copy $0 $0
  local.get $start
  local.get $deleteCount
  i32.add
  local.set $offset
  local.get $len
  local.get $offset
  i32.ne
  if
   local.get $thisBase
   local.get $thisStart
   local.get $offset
   i32.const 2
   i32.shl
   i32.add
   local.get $len
   local.get $offset
   i32.sub
   i32.const 2
   i32.shl
   memory.copy $0 $0
  end
  local.get $this
  local.get $len
  local.get $deleteCount
  i32.sub
  call $~lib/array/Array<std/array/Ref|null>#set:length_
  local.get $result
 )
 (func $~lib/array/Array<std/array/Ref|null>#get:length (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/array/Array<std/array/Ref|null>#__get (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  local.get $index
  local.get $this
  i32.load $0 offset=12
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.set $value
  i32.const 1
  drop
  i32.const 1
  i32.eqz
  drop
  local.get $value
 )
 (func $~lib/array/Array<i32>#__uset (type $i32_i32_i32_=>_none) (param $this i32) (param $index i32) (param $value i32)
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store $0
  i32.const 0
  drop
 )
 (func $~lib/array/Array<i32>#__set (type $i32_i32_i32_=>_none) (param $this i32) (param $index i32) (param $value i32)
  local.get $index
  local.get $this
  i32.load $0 offset=12
  i32.ge_u
  if
   local.get $index
   i32.const 0
   i32.lt_s
   if
    unreachable
   end
   local.get $this
   local.get $index
   i32.const 1
   i32.add
   i32.const 2
   i32.const 1
   call $~lib/array/ensureCapacity
   local.get $this
   local.get $index
   i32.const 1
   i32.add
   call $~lib/array/Array<i32>#set:length_
  end
  local.get $this
  local.get $index
  local.get $value
  call $~lib/array/Array<i32>#__uset
 )
 (func $start:std/array~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 0
  i32.eq
 )
 (func $~lib/array/Array<i32>#findIndex (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $i i32)
  (local $len i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  i32.const 0
  local.set $i
  local.get $this
  i32.load $0 offset=12
  local.set $len
  loop $for-loop|0
   local.get $i
   local.get $len
   local.tee $4
   local.get $this
   i32.load $0 offset=12
   local.tee $5
   local.get $4
   local.get $5
   i32.lt_s
   select
   i32.lt_s
   local.set $6
   local.get $6
   if
    local.get $this
    i32.load $0 offset=4
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.get $i
    local.get $this
    i32.const 3
    global.set $~argumentsLength
    local.get $fn
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    if
     local.get $i
     return
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  i32.const -1
 )
 (func $start:std/array~anonymous|1 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 1
  i32.eq
 )
 (func $start:std/array~anonymous|2 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 100
  i32.eq
 )
 (func $start:std/array~anonymous|3 (type $i32_i32_i32_=>_i32) (param $value i32) (param $_ i32) (param $array i32) (result i32)
  local.get $array
  i32.const 100
  call $~lib/array/Array<i32>#push
  drop
  local.get $value
  i32.const 100
  i32.eq
 )
 (func $start:std/array~anonymous|4 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 100
  i32.eq
 )
 (func $start:std/array~anonymous|5 (type $i32_i32_i32_=>_i32) (param $value i32) (param $_ i32) (param $array i32) (result i32)
  local.get $array
  call $~lib/array/Array<i32>#pop
  drop
  local.get $value
  i32.const 100
  i32.eq
 )
 (func $start:std/array~anonymous|6 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 0
  i32.eq
 )
 (func $~lib/array/Array<i32>#findLastIndex (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $i i32)
  (local $3 i32)
  local.get $this
  i32.load $0 offset=12
  i32.const 1
  i32.sub
  local.set $i
  loop $for-loop|0
   local.get $i
   i32.const 0
   i32.ge_s
   local.set $3
   local.get $3
   if
    local.get $this
    i32.load $0 offset=4
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.get $i
    local.get $this
    i32.const 3
    global.set $~argumentsLength
    local.get $fn
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    if
     local.get $i
     return
    end
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  i32.const -1
 )
 (func $start:std/array~anonymous|7 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 1
  i32.eq
 )
 (func $start:std/array~anonymous|8 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 100
  i32.eq
 )
 (func $start:std/array~anonymous|9 (type $i32_i32_i32_=>_i32) (param $value i32) (param $_ i32) (param $array i32) (result i32)
  local.get $array
  call $~lib/array/Array<i32>#pop
  drop
  local.get $value
  i32.const 100
  i32.eq
 )
 (func $start:std/array~anonymous|10 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 0
  i32.ge_s
 )
 (func $~lib/array/Array<i32>#every (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $i i32)
  (local $len i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  i32.const 0
  local.set $i
  local.get $this
  i32.load $0 offset=12
  local.set $len
  loop $for-loop|0
   local.get $i
   local.get $len
   local.tee $4
   local.get $this
   i32.load $0 offset=12
   local.tee $5
   local.get $4
   local.get $5
   i32.lt_s
   select
   i32.lt_s
   local.set $6
   local.get $6
   if
    local.get $this
    i32.load $0 offset=4
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.get $i
    local.get $this
    i32.const 3
    global.set $~argumentsLength
    local.get $fn
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    i32.eqz
    if
     i32.const 0
     return
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  i32.const 1
 )
 (func $start:std/array~anonymous|11 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 0
  i32.le_s
 )
 (func $start:std/array~anonymous|12 (type $i32_i32_i32_=>_i32) (param $value i32) (param $_ i32) (param $array i32) (result i32)
  local.get $array
  i32.const 100
  call $~lib/array/Array<i32>#push
  drop
  local.get $value
  i32.const 10
  i32.lt_s
 )
 (func $start:std/array~anonymous|13 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 10
  i32.lt_s
 )
 (func $start:std/array~anonymous|14 (type $i32_i32_i32_=>_i32) (param $value i32) (param $_ i32) (param $array i32) (result i32)
  local.get $array
  call $~lib/array/Array<i32>#pop
  drop
  local.get $value
  i32.const 3
  i32.lt_s
 )
 (func $start:std/array~anonymous|15 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 3
  i32.ge_s
 )
 (func $~lib/array/Array<i32>#some (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $i i32)
  (local $len i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  i32.const 0
  local.set $i
  local.get $this
  i32.load $0 offset=12
  local.set $len
  loop $for-loop|0
   local.get $i
   local.get $len
   local.tee $4
   local.get $this
   i32.load $0 offset=12
   local.tee $5
   local.get $4
   local.get $5
   i32.lt_s
   select
   i32.lt_s
   local.set $6
   local.get $6
   if
    local.get $this
    i32.load $0 offset=4
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.get $i
    local.get $this
    i32.const 3
    global.set $~argumentsLength
    local.get $fn
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    if
     i32.const 1
     return
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  i32.const 0
 )
 (func $start:std/array~anonymous|16 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const -1
  i32.le_s
 )
 (func $start:std/array~anonymous|17 (type $i32_i32_i32_=>_i32) (param $value i32) (param $_ i32) (param $array i32) (result i32)
  local.get $array
  i32.const 100
  call $~lib/array/Array<i32>#push
  drop
  local.get $value
  i32.const 10
  i32.gt_s
 )
 (func $start:std/array~anonymous|18 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 10
  i32.gt_s
 )
 (func $start:std/array~anonymous|19 (type $i32_i32_i32_=>_i32) (param $value i32) (param $_ i32) (param $array i32) (result i32)
  local.get $array
  call $~lib/array/Array<i32>#pop
  drop
  local.get $value
  i32.const 3
  i32.gt_s
 )
 (func $start:std/array~anonymous|20 (type $i32_i32_i32_=>_none) (param $value i32) (param $$1 i32) (param $$2 i32)
  global.get $std/array/i
  local.get $value
  i32.add
  global.set $std/array/i
 )
 (func $~lib/array/Array<i32>#forEach (type $i32_i32_=>_none) (param $this i32) (param $fn i32)
  (local $i i32)
  (local $len i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  i32.const 0
  local.set $i
  local.get $this
  i32.load $0 offset=12
  local.set $len
  loop $for-loop|0
   local.get $i
   local.get $len
   local.tee $4
   local.get $this
   i32.load $0 offset=12
   local.tee $5
   local.get $4
   local.get $5
   i32.lt_s
   select
   i32.lt_s
   local.set $6
   local.get $6
   if
    local.get $this
    i32.load $0 offset=4
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.get $i
    local.get $this
    i32.const 3
    global.set $~argumentsLength
    local.get $fn
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_none)
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $start:std/array~anonymous|21 (type $i32_i32_i32_=>_none) (param $value i32) (param $_ i32) (param $array i32)
  local.get $array
  i32.const 100
  call $~lib/array/Array<i32>#push
  drop
  global.get $std/array/i
  local.get $value
  i32.add
  global.set $std/array/i
 )
 (func $start:std/array~anonymous|22 (type $i32_i32_i32_=>_none) (param $value i32) (param $$1 i32) (param $$2 i32)
  global.get $std/array/i
  local.get $value
  i32.add
  global.set $std/array/i
 )
 (func $start:std/array~anonymous|23 (type $i32_i32_i32_=>_none) (param $value i32) (param $_ i32) (param $array i32)
  local.get $array
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/i
  local.get $value
  i32.add
  global.set $std/array/i
 )
 (func $start:std/array~anonymous|24 (type $i32_i32_i32_=>_none) (param $value i32) (param $index i32) (param $array i32)
  (local $i i32)
  (local $4 i32)
  (local $i|5 i32)
  (local $6 i32)
  (local $i|7 i32)
  (local $8 i32)
  (local $i|9 i32)
  (local $10 i32)
  local.get $index
  i32.const 0
  i32.eq
  if
   i32.const 0
   local.set $i
   loop $for-loop|0
    local.get $i
    i32.const 4
    i32.lt_s
    local.set $4
    local.get $4
    if
     local.get $array
     call $~lib/array/Array<i32>#pop
     drop
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   i32.const 0
   local.set $i|5
   loop $for-loop|1
    local.get $i|5
    i32.const 100
    i32.lt_s
    local.set $6
    local.get $6
    if
     local.get $array
     i32.const 100
     local.get $i|5
     i32.add
     call $~lib/array/Array<i32>#push
     drop
     local.get $i|5
     i32.const 1
     i32.add
     local.set $i|5
     br $for-loop|1
    end
   end
   i32.const 0
   local.set $i|7
   loop $for-loop|2
    local.get $i|7
    i32.const 100
    i32.lt_s
    local.set $8
    local.get $8
    if
     local.get $array
     call $~lib/array/Array<i32>#pop
     drop
     local.get $i|7
     i32.const 1
     i32.add
     local.set $i|7
     br $for-loop|2
    end
   end
   i32.const 0
   local.set $i|9
   loop $for-loop|3
    local.get $i|9
    i32.const 100
    i32.lt_s
    local.set $10
    local.get $10
    if
     local.get $array
     local.get $i|9
     i32.const 200
     i32.add
     call $~lib/array/Array<i32>#push
     drop
     local.get $i|9
     i32.const 1
     i32.add
     local.set $i|9
     br $for-loop|3
    end
   end
  end
  local.get $index
  i32.const 2
  i32.eq
  if
   local.get $value
   i32.const 202
   i32.eq
   i32.eqz
   if
    unreachable
   end
  end
 )
 (func $~lib/util/number/decimalCount32 (type $i32_=>_i32) (param $value i32) (result i32)
  local.get $value
  i32.const 100000
  i32.lt_u
  if
   local.get $value
   i32.const 100
   i32.lt_u
   if
    i32.const 1
    local.get $value
    i32.const 10
    i32.ge_u
    i32.add
    return
   else
    i32.const 3
    local.get $value
    i32.const 10000
    i32.ge_u
    i32.add
    local.get $value
    i32.const 1000
    i32.ge_u
    i32.add
    return
   end
   unreachable
  else
   local.get $value
   i32.const 10000000
   i32.lt_u
   if
    i32.const 6
    local.get $value
    i32.const 1000000
    i32.ge_u
    i32.add
    return
   else
    i32.const 8
    local.get $value
    i32.const 1000000000
    i32.ge_u
    i32.add
    local.get $value
    i32.const 100000000
    i32.ge_u
    i32.add
    return
   end
   unreachable
  end
  unreachable
 )
 (func $start:std/array~anonymous|25 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  (local $this i32)
  (local $value|4 i32)
  (local $sign i32)
  (local $decimals i32)
  (local $out i32)
  (local $end i32)
  (local $num i32)
  (local $t i32)
  (local $r i32)
  (local $end|12 i32)
  (local $num|13 i32)
  (local $t|14 i32)
  (local $r|15 i32)
  (local $end|16 i32)
  (local $num|17 i32)
  (local $t|18 i32)
  (local $r|19 i32)
  (local $end|20 i32)
  (local $num|21 i32)
  (local $t|22 i32)
  (local $r|23 i32)
  (local $end|24 i32)
  (local $num|25 i32)
  (local $t|26 i32)
  (local $r|27 i32)
  (local $end|28 i32)
  (local $num|29 i32)
  (local $t|30 i32)
  (local $r|31 i32)
  (local $end|32 i32)
  (local $num|33 i32)
  (local $t|34 i32)
  (local $r|35 i32)
  (local $end|36 i32)
  (local $num|37 i32)
  (local $t|38 i32)
  (local $r|39 i32)
  (local $end|40 i32)
  (local $num|41 i32)
  (local $t|42 i32)
  (local $r|43 i32)
  (local $end|44 i32)
  (local $num|45 i32)
  local.get $value
  local.set $this
  block $~lib/util/number/i32toa|inlined.0 (result i32)
   local.get $this
   local.set $value|4
   local.get $value|4
   i32.eqz
   if
    i32.const 5936
    br $~lib/util/number/i32toa|inlined.0
   end
   local.get $value|4
   i32.const 31
   i32.shr_u
   local.set $sign
   local.get $sign
   if
    i32.const 0
    local.get $value|4
    i32.sub
    local.set $value|4
   end
   local.get $value|4
   call $~lib/util/number/decimalCount32
   local.set $decimals
   local.get $sign
   local.get $decimals
   i32.add
   i32.const 1
   call $~lib/rt/stub/__new
   local.set $out
   local.get $out
   local.get $sign
   i32.add
   local.get $decimals
   i32.add
   local.set $end
   local.get $value|4
   local.set $num
   local.get $num
   i32.const 10
   i32.div_u
   local.set $t
   local.get $num
   i32.const 10
   i32.rem_u
   local.set $r
   local.get $end
   i32.const 1
   i32.sub
   local.set $end
   local.get $end
   i32.const 48
   local.get $r
   i32.add
   i32.store8 $0
   local.get $t
   if
    local.get $end
    local.set $end|12
    local.get $t
    local.set $num|13
    local.get $num|13
    i32.const 10
    i32.div_u
    local.set $t|14
    local.get $num|13
    i32.const 10
    i32.rem_u
    local.set $r|15
    local.get $end|12
    i32.const 1
    i32.sub
    local.set $end|12
    local.get $end|12
    i32.const 48
    local.get $r|15
    i32.add
    i32.store8 $0
    local.get $t|14
    if
     local.get $end|12
     local.set $end|16
     local.get $t|14
     local.set $num|17
     local.get $num|17
     i32.const 10
     i32.div_u
     local.set $t|18
     local.get $num|17
     i32.const 10
     i32.rem_u
     local.set $r|19
     local.get $end|16
     i32.const 1
     i32.sub
     local.set $end|16
     local.get $end|16
     i32.const 48
     local.get $r|19
     i32.add
     i32.store8 $0
     local.get $t|18
     if
      local.get $end|16
      local.set $end|20
      local.get $t|18
      local.set $num|21
      local.get $num|21
      i32.const 10
      i32.div_u
      local.set $t|22
      local.get $num|21
      i32.const 10
      i32.rem_u
      local.set $r|23
      local.get $end|20
      i32.const 1
      i32.sub
      local.set $end|20
      local.get $end|20
      i32.const 48
      local.get $r|23
      i32.add
      i32.store8 $0
      local.get $t|22
      if
       local.get $end|20
       local.set $end|24
       local.get $t|22
       local.set $num|25
       local.get $num|25
       i32.const 10
       i32.div_u
       local.set $t|26
       local.get $num|25
       i32.const 10
       i32.rem_u
       local.set $r|27
       local.get $end|24
       i32.const 1
       i32.sub
       local.set $end|24
       local.get $end|24
       i32.const 48
       local.get $r|27
       i32.add
       i32.store8 $0
       local.get $t|26
       if
        local.get $end|24
        local.set $end|28
        local.get $t|26
        local.set $num|29
        local.get $num|29
        i32.const 10
        i32.div_u
        local.set $t|30
        local.get $num|29
        i32.const 10
        i32.rem_u
        local.set $r|31
        local.get $end|28
        i32.const 1
        i32.sub
        local.set $end|28
        local.get $end|28
        i32.const 48
        local.get $r|31
        i32.add
        i32.store8 $0
        local.get $t|30
        if
         local.get $end|28
         local.set $end|32
         local.get $t|30
         local.set $num|33
         local.get $num|33
         i32.const 10
         i32.div_u
         local.set $t|34
         local.get $num|33
         i32.const 10
         i32.rem_u
         local.set $r|35
         local.get $end|32
         i32.const 1
         i32.sub
         local.set $end|32
         local.get $end|32
         i32.const 48
         local.get $r|35
         i32.add
         i32.store8 $0
         local.get $t|34
         if
          local.get $end|32
          local.set $end|36
          local.get $t|34
          local.set $num|37
          local.get $num|37
          i32.const 10
          i32.div_u
          local.set $t|38
          local.get $num|37
          i32.const 10
          i32.rem_u
          local.set $r|39
          local.get $end|36
          i32.const 1
          i32.sub
          local.set $end|36
          local.get $end|36
          i32.const 48
          local.get $r|39
          i32.add
          i32.store8 $0
          local.get $t|38
          if
           local.get $end|36
           local.set $end|40
           local.get $t|38
           local.set $num|41
           local.get $num|41
           i32.const 10
           i32.div_u
           local.set $t|42
           local.get $num|41
           i32.const 10
           i32.rem_u
           local.set $r|43
           local.get $end|40
           i32.const 1
           i32.sub
           local.set $end|40
           local.get $end|40
           i32.const 48
           local.get $r|43
           i32.add
           i32.store8 $0
           local.get $t|42
           if
            local.get $end|40
            local.set $end|44
            local.get $t|42
            local.set $num|45
            local.get $end|44
            i32.const 1
            i32.sub
            local.tee $end|44
            i32.const 48
            local.get $num|45
            i32.add
            i32.store8 $0
           end
          end
         end
        end
       end
      end
     end
    end
   end
   local.get $sign
   if
    local.get $out
    i32.const 45
    i32.store8 $0
   end
   local.get $out
  end
 )
 (func $~lib/array/Array<i32>#map<~lib/string/String> (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $len i32)
  (local $out i32)
  (local $outStart i32)
  (local $i i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $result i32)
  local.get $this
  i32.load $0 offset=12
  local.set $len
  local.get $len
  i32.const 2
  i32.const 16
  i32.const 0
  call $~lib/rt/__newArray
  local.set $out
  local.get $out
  i32.load $0 offset=4
  local.set $outStart
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $len
   local.tee $6
   local.get $this
   i32.load $0 offset=12
   local.tee $7
   local.get $6
   local.get $7
   i32.lt_s
   select
   i32.lt_s
   local.set $8
   local.get $8
   if
    local.get $this
    i32.load $0 offset=4
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.get $i
    local.get $this
    i32.const 3
    global.set $~argumentsLength
    local.get $fn
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    local.set $result
    local.get $outStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    local.get $result
    i32.store $0
    i32.const 1
    drop
    local.get $out
    local.get $result
    i32.const 1
    call $~lib/rt/stub/__link
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $out
 )
 (func $start:std/array~anonymous|26 (type $i32_i32_i32_=>_f32) (param $value i32) (param $$1 i32) (param $$2 i32) (result f32)
  local.get $value
  f32.convert_i32_s
 )
 (func $~lib/array/Array<i32>#map<f32> (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $len i32)
  (local $out i32)
  (local $outStart i32)
  (local $i i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $result f32)
  local.get $this
  i32.load $0 offset=12
  local.set $len
  local.get $len
  i32.const 2
  i32.const 8
  i32.const 0
  call $~lib/rt/__newArray
  local.set $out
  local.get $out
  i32.load $0 offset=4
  local.set $outStart
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $len
   local.tee $6
   local.get $this
   i32.load $0 offset=12
   local.tee $7
   local.get $6
   local.get $7
   i32.lt_s
   select
   i32.lt_s
   local.set $8
   local.get $8
   if
    local.get $this
    i32.load $0 offset=4
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.get $i
    local.get $this
    i32.const 3
    global.set $~argumentsLength
    local.get $fn
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_f32)
    local.set $result
    local.get $outStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    local.get $result
    f32.store $0
    i32.const 0
    drop
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $out
 )
 (func $start:std/array~anonymous|27 (type $i32_i32_i32_=>_i32) (param $value i32) (param $_ i32) (param $array i32) (result i32)
  local.get $array
  i32.const 100
  call $~lib/array/Array<i32>#push
  drop
  global.get $std/array/i
  local.get $value
  i32.add
  global.set $std/array/i
  local.get $value
 )
 (func $~lib/array/Array<i32>#map<i32> (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $len i32)
  (local $out i32)
  (local $outStart i32)
  (local $i i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $result i32)
  local.get $this
  i32.load $0 offset=12
  local.set $len
  local.get $len
  i32.const 2
  i32.const 3
  i32.const 0
  call $~lib/rt/__newArray
  local.set $out
  local.get $out
  i32.load $0 offset=4
  local.set $outStart
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $len
   local.tee $6
   local.get $this
   i32.load $0 offset=12
   local.tee $7
   local.get $6
   local.get $7
   i32.lt_s
   select
   i32.lt_s
   local.set $8
   local.get $8
   if
    local.get $this
    i32.load $0 offset=4
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.get $i
    local.get $this
    i32.const 3
    global.set $~argumentsLength
    local.get $fn
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    local.set $result
    local.get $outStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    local.get $result
    i32.store $0
    i32.const 0
    drop
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $out
 )
 (func $start:std/array~anonymous|28 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  global.get $std/array/i
  local.get $value
  i32.add
  global.set $std/array/i
  local.get $value
 )
 (func $start:std/array~anonymous|29 (type $i32_i32_i32_=>_i32) (param $value i32) (param $_ i32) (param $array i32) (result i32)
  local.get $array
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/i
  local.get $value
  i32.add
  global.set $std/array/i
  local.get $value
 )
 (func $start:std/array~anonymous|30 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 2
  i32.ge_s
 )
 (func $~lib/array/Array<i32>#filter (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $result i32)
  (local $i i32)
  (local $len i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $value i32)
  i32.const 0
  i32.const 2
  i32.const 3
  i32.const 0
  call $~lib/rt/__newArray
  local.set $result
  i32.const 0
  local.set $i
  local.get $this
  i32.load $0 offset=12
  local.set $len
  loop $for-loop|0
   local.get $i
   local.get $len
   local.tee $5
   local.get $this
   i32.load $0 offset=12
   local.tee $6
   local.get $5
   local.get $6
   i32.lt_s
   select
   i32.lt_s
   local.set $7
   local.get $7
   if
    local.get $this
    i32.load $0 offset=4
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $value
    local.get $value
    local.get $i
    local.get $this
    i32.const 3
    global.set $~argumentsLength
    local.get $fn
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    if
     local.get $result
     local.get $value
     call $~lib/array/Array<i32>#push
     drop
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $result
 )
 (func $start:std/array~anonymous|31 (type $i32_i32_i32_=>_i32) (param $value i32) (param $_ i32) (param $array i32) (result i32)
  local.get $array
  i32.const 100
  call $~lib/array/Array<i32>#push
  drop
  global.get $std/array/i
  local.get $value
  i32.add
  global.set $std/array/i
  local.get $value
  i32.const 2
  i32.ge_s
 )
 (func $start:std/array~anonymous|32 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  global.get $std/array/i
  local.get $value
  i32.add
  global.set $std/array/i
  local.get $value
  i32.const 2
  i32.ge_s
 )
 (func $start:std/array~anonymous|33 (type $i32_i32_i32_=>_i32) (param $value i32) (param $_ i32) (param $array i32) (result i32)
  local.get $array
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/i
  local.get $value
  i32.add
  global.set $std/array/i
  local.get $value
  i32.const 2
  i32.ge_s
 )
 (func $start:std/array~anonymous|34 (type $i32_i32_i32_i32_=>_i32) (param $prev i32) (param $current i32) (param $$2 i32) (param $$3 i32) (result i32)
  local.get $prev
  local.get $current
  i32.add
 )
 (func $~lib/array/Array<i32>#reduce<i32> (type $i32_i32_i32_=>_i32) (param $this i32) (param $fn i32) (param $initialValue i32) (result i32)
  (local $acc i32)
  (local $i i32)
  (local $len i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  local.get $initialValue
  local.set $acc
  i32.const 0
  local.set $i
  local.get $this
  i32.load $0 offset=12
  local.set $len
  loop $for-loop|0
   local.get $i
   local.get $len
   local.tee $6
   local.get $this
   i32.load $0 offset=12
   local.tee $7
   local.get $6
   local.get $7
   i32.lt_s
   select
   i32.lt_s
   local.set $8
   local.get $8
   if
    local.get $acc
    local.get $this
    i32.load $0 offset=4
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.get $i
    local.get $this
    i32.const 4
    global.set $~argumentsLength
    local.get $fn
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
    local.set $acc
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $acc
 )
 (func $start:std/array~anonymous|35 (type $i32_i32_i32_i32_=>_i32) (param $prev i32) (param $current i32) (param $$2 i32) (param $$3 i32) (result i32)
  local.get $prev
  local.get $current
  i32.add
 )
 (func $start:std/array~anonymous|36 (type $i32_i32_i32_i32_=>_i32) (param $prev i32) (param $current i32) (param $$2 i32) (param $$3 i32) (result i32)
  local.get $prev
  if (result i32)
   i32.const 1
  else
   local.get $current
   i32.const 2
   i32.gt_s
  end
 )
 (func $~lib/array/Array<i32>#reduce<bool> (type $i32_i32_i32_=>_i32) (param $this i32) (param $fn i32) (param $initialValue i32) (result i32)
  (local $acc i32)
  (local $i i32)
  (local $len i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  local.get $initialValue
  local.set $acc
  i32.const 0
  local.set $i
  local.get $this
  i32.load $0 offset=12
  local.set $len
  loop $for-loop|0
   local.get $i
   local.get $len
   local.tee $6
   local.get $this
   i32.load $0 offset=12
   local.tee $7
   local.get $6
   local.get $7
   i32.lt_s
   select
   i32.lt_s
   local.set $8
   local.get $8
   if
    local.get $acc
    local.get $this
    i32.load $0 offset=4
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.get $i
    local.get $this
    i32.const 4
    global.set $~argumentsLength
    local.get $fn
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
    local.set $acc
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $acc
 )
 (func $start:std/array~anonymous|37 (type $i32_i32_i32_i32_=>_i32) (param $prev i32) (param $current i32) (param $$2 i32) (param $$3 i32) (result i32)
  local.get $prev
  if (result i32)
   i32.const 1
  else
   local.get $current
   i32.const 100
   i32.gt_s
  end
 )
 (func $start:std/array~anonymous|38 (type $i32_i32_i32_i32_=>_i32) (param $prev i32) (param $current i32) (param $_ i32) (param $array i32) (result i32)
  local.get $array
  i32.const 1
  call $~lib/array/Array<i32>#push
  drop
  local.get $prev
  local.get $current
  i32.add
 )
 (func $start:std/array~anonymous|39 (type $i32_i32_i32_i32_=>_i32) (param $prev i32) (param $current i32) (param $$2 i32) (param $$3 i32) (result i32)
  local.get $prev
  local.get $current
  i32.add
 )
 (func $start:std/array~anonymous|40 (type $i32_i32_i32_i32_=>_i32) (param $prev i32) (param $current i32) (param $_ i32) (param $array i32) (result i32)
  local.get $array
  call $~lib/array/Array<i32>#pop
  drop
  local.get $prev
  local.get $current
  i32.add
 )
 (func $start:std/array~anonymous|41 (type $i32_i32_i32_i32_=>_i32) (param $prev i32) (param $current i32) (param $$2 i32) (param $$3 i32) (result i32)
  local.get $prev
  local.get $current
  i32.add
 )
 (func $~lib/array/Array<i32>#reduceRight<i32> (type $i32_i32_i32_=>_i32) (param $this i32) (param $fn i32) (param $initialValue i32) (result i32)
  (local $acc i32)
  (local $i i32)
  (local $5 i32)
  local.get $initialValue
  local.set $acc
  local.get $this
  i32.load $0 offset=12
  i32.const 1
  i32.sub
  local.set $i
  loop $for-loop|0
   local.get $i
   i32.const 0
   i32.ge_s
   local.set $5
   local.get $5
   if
    local.get $acc
    local.get $this
    i32.load $0 offset=4
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.get $i
    local.get $this
    i32.const 4
    global.set $~argumentsLength
    local.get $fn
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
    local.set $acc
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  local.get $acc
 )
 (func $start:std/array~anonymous|42 (type $i32_i32_i32_i32_=>_i32) (param $prev i32) (param $current i32) (param $$2 i32) (param $$3 i32) (result i32)
  local.get $prev
  local.get $current
  i32.add
 )
 (func $start:std/array~anonymous|43 (type $i32_i32_i32_i32_=>_i32) (param $prev i32) (param $current i32) (param $$2 i32) (param $$3 i32) (result i32)
  local.get $prev
  if (result i32)
   i32.const 1
  else
   local.get $current
   i32.const 2
   i32.gt_s
  end
 )
 (func $~lib/array/Array<i32>#reduceRight<bool> (type $i32_i32_i32_=>_i32) (param $this i32) (param $fn i32) (param $initialValue i32) (result i32)
  (local $acc i32)
  (local $i i32)
  (local $5 i32)
  local.get $initialValue
  local.set $acc
  local.get $this
  i32.load $0 offset=12
  i32.const 1
  i32.sub
  local.set $i
  loop $for-loop|0
   local.get $i
   i32.const 0
   i32.ge_s
   local.set $5
   local.get $5
   if
    local.get $acc
    local.get $this
    i32.load $0 offset=4
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.get $i
    local.get $this
    i32.const 4
    global.set $~argumentsLength
    local.get $fn
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
    local.set $acc
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  local.get $acc
 )
 (func $start:std/array~anonymous|44 (type $i32_i32_i32_i32_=>_i32) (param $prev i32) (param $current i32) (param $$2 i32) (param $$3 i32) (result i32)
  local.get $prev
  if (result i32)
   i32.const 1
  else
   local.get $current
   i32.const 100
   i32.gt_s
  end
 )
 (func $start:std/array~anonymous|45 (type $i32_i32_i32_i32_=>_i32) (param $prev i32) (param $current i32) (param $_ i32) (param $array i32) (result i32)
  local.get $array
  i32.const 1
  call $~lib/array/Array<i32>#push
  drop
  local.get $prev
  local.get $current
  i32.add
 )
 (func $start:std/array~anonymous|46 (type $i32_i32_i32_i32_=>_i32) (param $prev i32) (param $current i32) (param $$2 i32) (param $$3 i32) (result i32)
  local.get $prev
  local.get $current
  i32.add
 )
 (func $start:std/array~anonymous|47 (type $i32_i32_i32_i32_=>_i32) (param $prev i32) (param $current i32) (param $_ i32) (param $array i32) (result i32)
  local.get $array
  call $~lib/array/Array<i32>#pop
  drop
  local.get $prev
  local.get $current
  i32.add
 )
 (func $~lib/math/murmurHash3 (type $i64_=>_i64) (param $h i64) (result i64)
  local.get $h
  local.get $h
  i64.const 33
  i64.shr_u
  i64.xor
  local.set $h
  local.get $h
  i64.const -49064778989728563
  i64.mul
  local.set $h
  local.get $h
  local.get $h
  i64.const 33
  i64.shr_u
  i64.xor
  local.set $h
  local.get $h
  i64.const -4265267296055464877
  i64.mul
  local.set $h
  local.get $h
  local.get $h
  i64.const 33
  i64.shr_u
  i64.xor
  local.set $h
  local.get $h
 )
 (func $~lib/math/splitMix32 (type $i32_=>_i32) (param $h i32) (result i32)
  local.get $h
  i32.const 1831565813
  i32.add
  local.set $h
  local.get $h
  local.get $h
  i32.const 15
  i32.shr_u
  i32.xor
  local.get $h
  i32.const 1
  i32.or
  i32.mul
  local.set $h
  local.get $h
  local.get $h
  local.get $h
  local.get $h
  i32.const 7
  i32.shr_u
  i32.xor
  local.get $h
  i32.const 61
  i32.or
  i32.mul
  i32.add
  i32.xor
  local.set $h
  local.get $h
  local.get $h
  i32.const 14
  i32.shr_u
  i32.xor
 )
 (func $~lib/math/NativeMath.seedRandom (type $i64_=>_none) (param $value i64)
  local.get $value
  i64.const 0
  i64.eq
  if
   i64.const -7046029254386353131
   local.set $value
  end
  local.get $value
  call $~lib/math/murmurHash3
  global.set $~lib/math/random_state0_64
  global.get $~lib/math/random_state0_64
  i64.const -1
  i64.xor
  call $~lib/math/murmurHash3
  global.set $~lib/math/random_state1_64
  local.get $value
  i32.wrap_i64
  call $~lib/math/splitMix32
  global.set $~lib/math/random_state0_32
  global.get $~lib/math/random_state0_32
  call $~lib/math/splitMix32
  global.set $~lib/math/random_state1_32
  i32.const 1
  global.set $~lib/math/random_seeded
 )
 (func $std/array/Dim#set:height (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0
 )
 (func $std/array/Dim#set:width (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=4
 )
 (func $std/array/Dim#constructor (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.eqz
  if
   i32.const 8
   i32.const 22
   call $~lib/rt/stub/__new
   local.set $this
  end
  local.get $this
  i32.const 0
  call $std/array/Dim#set:height
  local.get $this
  i32.const 0
  call $std/array/Dim#set:width
  local.get $this
 )
 (func $~lib/array/Array<std/array/Dim>#__uset (type $i32_i32_i32_=>_none) (param $this i32) (param $index i32) (param $value i32)
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store $0
  i32.const 1
  drop
  local.get $this
  local.get $value
  i32.const 1
  call $~lib/rt/stub/__link
 )
 (func $~lib/util/sort/insertionSort<f32> (type $i32_i32_i32_i32_i32_=>_none) (param $ptr i32) (param $left i32) (param $right i32) (param $presorted i32) (param $comparator i32)
  (local $range i32)
  (local $i i32)
  (local $7 i32)
  (local $a f32)
  (local $b f32)
  (local $min f32)
  (local $max f32)
  (local $j i32)
  (local $13 i32)
  (local $14 i32)
  i32.const 0
  i32.const 1
  i32.ge_s
  drop
  local.get $right
  local.get $left
  i32.sub
  i32.const 1
  i32.add
  local.set $range
  local.get $left
  local.get $range
  i32.const 1
  i32.and
  local.get $presorted
  local.get $range
  local.get $presorted
  i32.sub
  i32.const 1
  i32.and
  i32.sub
  local.get $presorted
  i32.const 0
  i32.eq
  select
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $right
   i32.le_s
   local.set $7
   local.get $7
   if
    local.get $ptr
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    f32.load $0
    local.set $a
    local.get $ptr
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    f32.load $0 offset=4
    local.set $b
    local.get $b
    local.set $min
    local.get $a
    local.set $max
    local.get $a
    local.get $b
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $f32_f32_=>_i32)
    i32.const 0
    i32.le_s
    if
     local.get $a
     local.set $min
     local.get $b
     local.set $max
    end
    local.get $i
    i32.const 1
    i32.sub
    local.set $j
    block $while-break|1
     loop $while-continue|1
      local.get $j
      local.get $left
      i32.ge_s
      local.set $13
      local.get $13
      if
       local.get $ptr
       local.get $j
       i32.const 2
       i32.shl
       i32.add
       f32.load $0
       local.set $a
       local.get $a
       local.get $max
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $f32_f32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $j
        i32.const 2
        i32.shl
        i32.add
        local.get $a
        f32.store $0 offset=8
        local.get $j
        i32.const 1
        i32.sub
        local.set $j
       else
        br $while-break|1
       end
       br $while-continue|1
      end
     end
    end
    local.get $ptr
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    local.get $max
    f32.store $0 offset=8
    block $while-break|2
     loop $while-continue|2
      local.get $j
      local.get $left
      i32.ge_s
      local.set $14
      local.get $14
      if
       local.get $ptr
       local.get $j
       i32.const 2
       i32.shl
       i32.add
       f32.load $0
       local.set $a
       local.get $a
       local.get $min
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $f32_f32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $j
        i32.const 2
        i32.shl
        i32.add
        local.get $a
        f32.store $0 offset=4
        local.get $j
        i32.const 1
        i32.sub
        local.set $j
       else
        br $while-break|2
       end
       br $while-continue|2
      end
     end
    end
    local.get $ptr
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    local.get $min
    f32.store $0 offset=4
    local.get $i
    i32.const 2
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/util/sort/extendRunRight<f32> (type $i32_i32_i32_i32_=>_i32) (param $ptr i32) (param $i i32) (param $right i32) (param $comparator i32) (result i32)
  (local $j i32)
  (local $5 i32)
  (local $k i32)
  (local $7 i32)
  (local $tmp f32)
  (local $9 i32)
  local.get $i
  local.get $right
  i32.eq
  if
   local.get $i
   return
  end
  local.get $i
  local.set $j
  local.get $ptr
  local.get $j
  i32.const 2
  i32.shl
  i32.add
  f32.load $0
  local.get $ptr
  local.get $j
  i32.const 1
  i32.add
  local.tee $j
  i32.const 2
  i32.shl
  i32.add
  f32.load $0
  i32.const 2
  global.set $~argumentsLength
  local.get $comparator
  i32.load $0
  call_indirect $0 (type $f32_f32_=>_i32)
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     f32.load $0 offset=4
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     f32.load $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $f32_f32_=>_i32)
     i32.const 31
     i32.shr_u
    else
     i32.const 0
    end
    local.set $5
    local.get $5
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|0
    end
   end
   local.get $j
   local.set $k
   loop $while-continue|1
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     local.get $ptr
     local.get $i
     i32.const 2
     i32.shl
     i32.add
     f32.load $0
     local.set $tmp
     local.get $ptr
     local.get $i
     i32.const 2
     i32.shl
     i32.add
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     f32.load $0
     f32.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     local.get $tmp
     f32.store $0
     local.get $k
     i32.const 1
     i32.sub
     local.set $k
     br $while-continue|1
    end
   end
  else
   loop $while-continue|2
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     f32.load $0 offset=4
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     f32.load $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $f32_f32_=>_i32)
     i32.const 0
     i32.ge_s
    else
     i32.const 0
    end
    local.set $9
    local.get $9
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|2
    end
   end
  end
  local.get $j
 )
 (func $~lib/util/sort/nodePower (type $i32_i32_i32_i32_i32_=>_i32) (param $left i32) (param $right i32) (param $startA i32) (param $startB i32) (param $endB i32) (result i32)
  (local $n i64)
  (local $s i32)
  (local $l i32)
  (local $r i32)
  (local $a i64)
  (local $b i64)
  local.get $right
  local.get $left
  i32.sub
  i32.const 1
  i32.add
  i64.extend_i32_u
  local.set $n
  local.get $startB
  local.get $left
  i32.const 1
  i32.shl
  i32.sub
  local.set $s
  local.get $startA
  local.get $s
  i32.add
  local.set $l
  local.get $endB
  local.get $s
  i32.add
  i32.const 1
  i32.add
  local.set $r
  local.get $l
  i64.extend_i32_u
  i64.const 30
  i64.shl
  local.get $n
  i64.div_u
  local.set $a
  local.get $r
  i64.extend_i32_u
  i64.const 30
  i64.shl
  local.get $n
  i64.div_u
  local.set $b
  local.get $a
  local.get $b
  i64.xor
  i32.wrap_i64
  i32.clz
 )
 (func $~lib/util/sort/mergeRuns<f32> (type $i32_i32_i32_i32_i32_i32_=>_none) (param $ptr i32) (param $l i32) (param $m i32) (param $r i32) (param $buffer i32) (param $comparator i32)
  (local $i i32)
  (local $j i32)
  (local $t i32)
  (local $9 i32)
  (local $10 i32)
  (local $k i32)
  (local $12 i32)
  (local $a f32)
  (local $b f32)
  local.get $m
  i32.const 1
  i32.sub
  local.set $m
  local.get $r
  local.get $m
  i32.add
  local.set $t
  local.get $m
  i32.const 1
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $l
   i32.gt_s
   local.set $9
   local.get $9
   if
    local.get $buffer
    local.get $i
    i32.const 1
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    local.get $ptr
    local.get $i
    i32.const 1
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    f32.load $0
    f32.store $0
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  local.get $m
  local.set $j
  loop $for-loop|1
   local.get $j
   local.get $r
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $buffer
    local.get $t
    local.get $j
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    local.get $ptr
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    f32.load $0 offset=4
    f32.store $0
    local.get $j
    i32.const 1
    i32.add
    local.set $j
    br $for-loop|1
   end
  end
  local.get $l
  local.set $k
  loop $for-loop|2
   local.get $k
   local.get $r
   i32.le_s
   local.set $12
   local.get $12
   if
    local.get $buffer
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    f32.load $0
    local.set $a
    local.get $buffer
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    f32.load $0
    local.set $b
    local.get $a
    local.get $b
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $f32_f32_=>_i32)
    i32.const 0
    i32.lt_s
    if
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     local.get $a
     f32.store $0
     local.get $j
     i32.const 1
     i32.sub
     local.set $j
    else
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     local.get $b
     f32.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
    end
    local.get $k
    i32.const 1
    i32.add
    local.set $k
    br $for-loop|2
   end
  end
 )
 (func $~lib/rt/stub/__free (type $i32_=>_none) (param $ptr i32)
  (local $block i32)
  local.get $ptr
  i32.const 0
  i32.ne
  if (result i32)
   local.get $ptr
   i32.const 15
   i32.and
   i32.eqz
  else
   i32.const 0
  end
  i32.eqz
  if
   unreachable
  end
  local.get $ptr
  i32.const 4
  i32.sub
  local.set $block
  local.get $ptr
  local.get $block
  i32.load $0
  i32.add
  global.get $~lib/rt/stub/offset
  i32.eq
  if
   local.get $block
   global.set $~lib/rt/stub/offset
  end
 )
 (func $~lib/util/sort/SORT<f32> (type $i32_i32_i32_=>_none) (param $ptr i32) (param $len i32) (param $comparator i32)
  (local $3 i32)
  (local $a f32)
  (local $b f32)
  (local $c i32)
  (local $a|7 f32)
  (local $b|8 f32)
  (local $c|9 i32)
  (local $n i32)
  (local $lgPlus2 i32)
  (local $lgPlus2Size i32)
  (local $leftRunStartBuf i32)
  (local $leftRunEndBuf i32)
  (local $i i32)
  (local $16 i32)
  (local $buffer i32)
  (local $hi i32)
  (local $endA i32)
  (local $lenA i32)
  (local $21 i32)
  (local $22 i32)
  (local $top i32)
  (local $startA i32)
  (local $25 i32)
  (local $startB i32)
  (local $endB i32)
  (local $lenB i32)
  (local $29 i32)
  (local $30 i32)
  (local $k i32)
  (local $i|32 i32)
  (local $33 i32)
  (local $start i32)
  (local $i|35 i32)
  (local $36 i32)
  (local $start|37 i32)
  local.get $len
  i32.const 48
  i32.le_s
  if
   local.get $len
   i32.const 1
   i32.le_s
   if
    return
   end
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   block $break|0
    block $case1|0
     block $case0|0
      local.get $len
      local.set $3
      local.get $3
      i32.const 3
      i32.eq
      br_if $case0|0
      local.get $3
      i32.const 2
      i32.eq
      br_if $case1|0
      br $break|0
     end
     local.get $ptr
     f32.load $0
     local.set $a
     local.get $ptr
     f32.load $0 offset=4
     local.set $b
     local.get $a
     local.get $b
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $f32_f32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $c
     local.get $ptr
     local.get $b
     local.get $a
     local.get $c
     select
     f32.store $0
     local.get $a
     local.get $b
     local.get $c
     select
     local.set $a
     local.get $ptr
     f32.load $0 offset=8
     local.set $b
     local.get $a
     local.get $b
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $f32_f32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $c
     local.get $ptr
     local.get $b
     local.get $a
     local.get $c
     select
     f32.store $0 offset=4
     local.get $ptr
     local.get $a
     local.get $b
     local.get $c
     select
     f32.store $0 offset=8
    end
    local.get $ptr
    f32.load $0
    local.set $a|7
    local.get $ptr
    f32.load $0 offset=4
    local.set $b|8
    local.get $a|7
    local.get $b|8
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $f32_f32_=>_i32)
    i32.const 0
    i32.gt_s
    local.set $c|9
    local.get $ptr
    local.get $b|8
    local.get $a|7
    local.get $c|9
    select
    f32.store $0
    local.get $ptr
    local.get $a|7
    local.get $b|8
    local.get $c|9
    select
    f32.store $0 offset=4
    return
   end
   local.get $ptr
   i32.const 0
   local.get $len
   i32.const 1
   i32.sub
   i32.const 0
   local.get $comparator
   call $~lib/util/sort/insertionSort<f32>
   return
  end
  local.get $len
  local.set $n
  i32.const 31
  local.get $n
  i32.clz
  i32.sub
  i32.const 2
  i32.add
  local.set $lgPlus2
  local.get $lgPlus2
  i32.const 2
  i32.shl
  local.set $lgPlus2Size
  local.get $lgPlus2Size
  i32.const 1
  i32.shl
  call $~lib/rt/stub/__alloc
  local.set $leftRunStartBuf
  local.get $leftRunStartBuf
  local.get $lgPlus2Size
  i32.add
  local.set $leftRunEndBuf
  i32.const 0
  local.set $i
  loop $for-loop|1
   local.get $i
   local.get $lgPlus2
   i32.lt_u
   local.set $16
   local.get $16
   if
    local.get $leftRunStartBuf
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.const -1
    i32.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|1
   end
  end
  local.get $len
  i32.const 2
  i32.shl
  call $~lib/rt/stub/__alloc
  local.set $buffer
  local.get $len
  i32.const 1
  i32.sub
  local.set $hi
  local.get $ptr
  i32.const 0
  local.get $hi
  local.get $comparator
  call $~lib/util/sort/extendRunRight<f32>
  local.set $endA
  local.get $endA
  i32.const 1
  i32.add
  local.set $lenA
  local.get $lenA
  i32.const 32
  i32.lt_s
  if
   local.get $hi
   local.tee $21
   i32.const 32
   i32.const 1
   i32.sub
   local.tee $22
   local.get $21
   local.get $22
   i32.lt_s
   select
   local.set $endA
   local.get $ptr
   i32.const 0
   local.get $endA
   local.get $lenA
   local.get $comparator
   call $~lib/util/sort/insertionSort<f32>
  end
  i32.const 0
  local.set $top
  i32.const 0
  local.set $startA
  loop $while-continue|2
   local.get $endA
   local.get $hi
   i32.lt_s
   local.set $25
   local.get $25
   if
    local.get $endA
    i32.const 1
    i32.add
    local.set $startB
    local.get $ptr
    local.get $startB
    local.get $hi
    local.get $comparator
    call $~lib/util/sort/extendRunRight<f32>
    local.set $endB
    local.get $endB
    local.get $startB
    i32.sub
    i32.const 1
    i32.add
    local.set $lenB
    local.get $lenB
    i32.const 32
    i32.lt_s
    if
     local.get $hi
     local.tee $29
     local.get $startB
     i32.const 32
     i32.add
     i32.const 1
     i32.sub
     local.tee $30
     local.get $29
     local.get $30
     i32.lt_s
     select
     local.set $endB
     local.get $ptr
     local.get $startB
     local.get $endB
     local.get $lenB
     local.get $comparator
     call $~lib/util/sort/insertionSort<f32>
    end
    i32.const 0
    local.get $hi
    local.get $startA
    local.get $startB
    local.get $endB
    call $~lib/util/sort/nodePower
    local.set $k
    local.get $top
    local.set $i|32
    loop $for-loop|3
     local.get $i|32
     local.get $k
     i32.gt_u
     local.set $33
     local.get $33
     if
      local.get $leftRunStartBuf
      local.get $i|32
      i32.const 2
      i32.shl
      i32.add
      i32.load $0
      local.set $start
      local.get $start
      i32.const -1
      i32.ne
      if
       local.get $ptr
       local.get $start
       local.get $leftRunEndBuf
       local.get $i|32
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       i32.const 1
       i32.add
       local.get $endA
       local.get $buffer
       local.get $comparator
       call $~lib/util/sort/mergeRuns<f32>
       local.get $start
       local.set $startA
       local.get $leftRunStartBuf
       local.get $i|32
       i32.const 2
       i32.shl
       i32.add
       i32.const -1
       i32.store $0
      end
      local.get $i|32
      i32.const 1
      i32.sub
      local.set $i|32
      br $for-loop|3
     end
    end
    local.get $leftRunStartBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $startA
    i32.store $0
    local.get $leftRunEndBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $endA
    i32.store $0
    local.get $startB
    local.set $startA
    local.get $endB
    local.set $endA
    local.get $k
    local.set $top
    br $while-continue|2
   end
  end
  local.get $top
  local.set $i|35
  loop $for-loop|4
   local.get $i|35
   i32.const 0
   i32.ne
   local.set $36
   local.get $36
   if
    local.get $leftRunStartBuf
    local.get $i|35
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $start|37
    local.get $start|37
    i32.const -1
    i32.ne
    if
     local.get $ptr
     local.get $start|37
     local.get $leftRunEndBuf
     local.get $i|35
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 1
     i32.add
     local.get $hi
     local.get $buffer
     local.get $comparator
     call $~lib/util/sort/mergeRuns<f32>
    end
    local.get $i|35
    i32.const 1
    i32.sub
    local.set $i|35
    br $for-loop|4
   end
  end
  local.get $buffer
  call $~lib/rt/stub/__free
  local.get $leftRunStartBuf
  call $~lib/rt/stub/__free
 )
 (func $~lib/array/Array<f32>#sort (type $i32_i32_=>_i32) (param $this i32) (param $comparator i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  i32.load $0 offset=12
  local.get $comparator
  call $~lib/util/sort/SORT<f32>
  local.get $this
 )
 (func $~lib/util/sort/COMPARATOR<f32>~anonymous|0 (type $f32_f32_=>_i32) (param $a f32) (param $b f32) (result i32)
  (local $ia i32)
  (local $ib i32)
  local.get $a
  i32.reinterpret_f32
  local.set $ia
  local.get $b
  i32.reinterpret_f32
  local.set $ib
  local.get $ia
  local.get $ia
  i32.const 31
  i32.shr_s
  i32.const 1
  i32.shr_u
  i32.xor
  local.set $ia
  local.get $ib
  local.get $ib
  i32.const 31
  i32.shr_s
  i32.const 1
  i32.shr_u
  i32.xor
  local.set $ib
  local.get $ia
  local.get $ib
  i32.gt_s
  local.get $ia
  local.get $ib
  i32.lt_s
  i32.sub
 )
 (func $~lib/array/Array<f32>#sort@varargs (type $i32_i32_=>_i32) (param $this i32) (param $comparator i32) (result i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   block $~lib/util/sort/COMPARATOR<f32>|inlined.0 (result i32)
    i32.const 0
    drop
    i32.const 1
    drop
    i32.const 4
    i32.const 4
    i32.eq
    drop
    i32.const 6848
    br $~lib/util/sort/COMPARATOR<f32>|inlined.0
   end
   local.set $comparator
  end
  local.get $this
  local.get $comparator
  call $~lib/array/Array<f32>#sort
 )
 (func $~lib/util/sort/insertionSort<f64> (type $i32_i32_i32_i32_i32_=>_none) (param $ptr i32) (param $left i32) (param $right i32) (param $presorted i32) (param $comparator i32)
  (local $range i32)
  (local $i i32)
  (local $7 i32)
  (local $a f64)
  (local $b f64)
  (local $min f64)
  (local $max f64)
  (local $j i32)
  (local $13 i32)
  (local $14 i32)
  i32.const 0
  i32.const 1
  i32.ge_s
  drop
  local.get $right
  local.get $left
  i32.sub
  i32.const 1
  i32.add
  local.set $range
  local.get $left
  local.get $range
  i32.const 1
  i32.and
  local.get $presorted
  local.get $range
  local.get $presorted
  i32.sub
  i32.const 1
  i32.and
  i32.sub
  local.get $presorted
  i32.const 0
  i32.eq
  select
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $right
   i32.le_s
   local.set $7
   local.get $7
   if
    local.get $ptr
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    f64.load $0
    local.set $a
    local.get $ptr
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    f64.load $0 offset=8
    local.set $b
    local.get $b
    local.set $min
    local.get $a
    local.set $max
    local.get $a
    local.get $b
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $f64_f64_=>_i32)
    i32.const 0
    i32.le_s
    if
     local.get $a
     local.set $min
     local.get $b
     local.set $max
    end
    local.get $i
    i32.const 1
    i32.sub
    local.set $j
    block $while-break|1
     loop $while-continue|1
      local.get $j
      local.get $left
      i32.ge_s
      local.set $13
      local.get $13
      if
       local.get $ptr
       local.get $j
       i32.const 3
       i32.shl
       i32.add
       f64.load $0
       local.set $a
       local.get $a
       local.get $max
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $f64_f64_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $j
        i32.const 3
        i32.shl
        i32.add
        local.get $a
        f64.store $0 offset=16
        local.get $j
        i32.const 1
        i32.sub
        local.set $j
       else
        br $while-break|1
       end
       br $while-continue|1
      end
     end
    end
    local.get $ptr
    local.get $j
    i32.const 3
    i32.shl
    i32.add
    local.get $max
    f64.store $0 offset=16
    block $while-break|2
     loop $while-continue|2
      local.get $j
      local.get $left
      i32.ge_s
      local.set $14
      local.get $14
      if
       local.get $ptr
       local.get $j
       i32.const 3
       i32.shl
       i32.add
       f64.load $0
       local.set $a
       local.get $a
       local.get $min
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $f64_f64_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $j
        i32.const 3
        i32.shl
        i32.add
        local.get $a
        f64.store $0 offset=8
        local.get $j
        i32.const 1
        i32.sub
        local.set $j
       else
        br $while-break|2
       end
       br $while-continue|2
      end
     end
    end
    local.get $ptr
    local.get $j
    i32.const 3
    i32.shl
    i32.add
    local.get $min
    f64.store $0 offset=8
    local.get $i
    i32.const 2
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/util/sort/extendRunRight<f64> (type $i32_i32_i32_i32_=>_i32) (param $ptr i32) (param $i i32) (param $right i32) (param $comparator i32) (result i32)
  (local $j i32)
  (local $5 i32)
  (local $k i32)
  (local $7 i32)
  (local $tmp f64)
  (local $9 i32)
  local.get $i
  local.get $right
  i32.eq
  if
   local.get $i
   return
  end
  local.get $i
  local.set $j
  local.get $ptr
  local.get $j
  i32.const 3
  i32.shl
  i32.add
  f64.load $0
  local.get $ptr
  local.get $j
  i32.const 1
  i32.add
  local.tee $j
  i32.const 3
  i32.shl
  i32.add
  f64.load $0
  i32.const 2
  global.set $~argumentsLength
  local.get $comparator
  i32.load $0
  call_indirect $0 (type $f64_f64_=>_i32)
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 3
     i32.shl
     i32.add
     f64.load $0 offset=8
     local.get $ptr
     local.get $j
     i32.const 3
     i32.shl
     i32.add
     f64.load $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $f64_f64_=>_i32)
     i32.const 31
     i32.shr_u
    else
     i32.const 0
    end
    local.set $5
    local.get $5
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|0
    end
   end
   local.get $j
   local.set $k
   loop $while-continue|1
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     local.get $ptr
     local.get $i
     i32.const 3
     i32.shl
     i32.add
     f64.load $0
     local.set $tmp
     local.get $ptr
     local.get $i
     i32.const 3
     i32.shl
     i32.add
     local.get $ptr
     local.get $k
     i32.const 3
     i32.shl
     i32.add
     f64.load $0
     f64.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     local.get $ptr
     local.get $k
     i32.const 3
     i32.shl
     i32.add
     local.get $tmp
     f64.store $0
     local.get $k
     i32.const 1
     i32.sub
     local.set $k
     br $while-continue|1
    end
   end
  else
   loop $while-continue|2
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 3
     i32.shl
     i32.add
     f64.load $0 offset=8
     local.get $ptr
     local.get $j
     i32.const 3
     i32.shl
     i32.add
     f64.load $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $f64_f64_=>_i32)
     i32.const 0
     i32.ge_s
    else
     i32.const 0
    end
    local.set $9
    local.get $9
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|2
    end
   end
  end
  local.get $j
 )
 (func $~lib/util/sort/mergeRuns<f64> (type $i32_i32_i32_i32_i32_i32_=>_none) (param $ptr i32) (param $l i32) (param $m i32) (param $r i32) (param $buffer i32) (param $comparator i32)
  (local $i i32)
  (local $j i32)
  (local $t i32)
  (local $9 i32)
  (local $10 i32)
  (local $k i32)
  (local $12 i32)
  (local $a f64)
  (local $b f64)
  local.get $m
  i32.const 1
  i32.sub
  local.set $m
  local.get $r
  local.get $m
  i32.add
  local.set $t
  local.get $m
  i32.const 1
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $l
   i32.gt_s
   local.set $9
   local.get $9
   if
    local.get $buffer
    local.get $i
    i32.const 1
    i32.sub
    i32.const 3
    i32.shl
    i32.add
    local.get $ptr
    local.get $i
    i32.const 1
    i32.sub
    i32.const 3
    i32.shl
    i32.add
    f64.load $0
    f64.store $0
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  local.get $m
  local.set $j
  loop $for-loop|1
   local.get $j
   local.get $r
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $buffer
    local.get $t
    local.get $j
    i32.sub
    i32.const 3
    i32.shl
    i32.add
    local.get $ptr
    local.get $j
    i32.const 3
    i32.shl
    i32.add
    f64.load $0 offset=8
    f64.store $0
    local.get $j
    i32.const 1
    i32.add
    local.set $j
    br $for-loop|1
   end
  end
  local.get $l
  local.set $k
  loop $for-loop|2
   local.get $k
   local.get $r
   i32.le_s
   local.set $12
   local.get $12
   if
    local.get $buffer
    local.get $j
    i32.const 3
    i32.shl
    i32.add
    f64.load $0
    local.set $a
    local.get $buffer
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    f64.load $0
    local.set $b
    local.get $a
    local.get $b
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $f64_f64_=>_i32)
    i32.const 0
    i32.lt_s
    if
     local.get $ptr
     local.get $k
     i32.const 3
     i32.shl
     i32.add
     local.get $a
     f64.store $0
     local.get $j
     i32.const 1
     i32.sub
     local.set $j
    else
     local.get $ptr
     local.get $k
     i32.const 3
     i32.shl
     i32.add
     local.get $b
     f64.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
    end
    local.get $k
    i32.const 1
    i32.add
    local.set $k
    br $for-loop|2
   end
  end
 )
 (func $~lib/util/sort/SORT<f64> (type $i32_i32_i32_=>_none) (param $ptr i32) (param $len i32) (param $comparator i32)
  (local $3 i32)
  (local $a f64)
  (local $b f64)
  (local $c i32)
  (local $a|7 f64)
  (local $b|8 f64)
  (local $c|9 i32)
  (local $n i32)
  (local $lgPlus2 i32)
  (local $lgPlus2Size i32)
  (local $leftRunStartBuf i32)
  (local $leftRunEndBuf i32)
  (local $i i32)
  (local $16 i32)
  (local $buffer i32)
  (local $hi i32)
  (local $endA i32)
  (local $lenA i32)
  (local $21 i32)
  (local $22 i32)
  (local $top i32)
  (local $startA i32)
  (local $25 i32)
  (local $startB i32)
  (local $endB i32)
  (local $lenB i32)
  (local $29 i32)
  (local $30 i32)
  (local $k i32)
  (local $i|32 i32)
  (local $33 i32)
  (local $start i32)
  (local $i|35 i32)
  (local $36 i32)
  (local $start|37 i32)
  local.get $len
  i32.const 48
  i32.le_s
  if
   local.get $len
   i32.const 1
   i32.le_s
   if
    return
   end
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   block $break|0
    block $case1|0
     block $case0|0
      local.get $len
      local.set $3
      local.get $3
      i32.const 3
      i32.eq
      br_if $case0|0
      local.get $3
      i32.const 2
      i32.eq
      br_if $case1|0
      br $break|0
     end
     local.get $ptr
     f64.load $0
     local.set $a
     local.get $ptr
     f64.load $0 offset=8
     local.set $b
     local.get $a
     local.get $b
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $f64_f64_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $c
     local.get $ptr
     local.get $b
     local.get $a
     local.get $c
     select
     f64.store $0
     local.get $a
     local.get $b
     local.get $c
     select
     local.set $a
     local.get $ptr
     f64.load $0 offset=16
     local.set $b
     local.get $a
     local.get $b
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $f64_f64_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $c
     local.get $ptr
     local.get $b
     local.get $a
     local.get $c
     select
     f64.store $0 offset=8
     local.get $ptr
     local.get $a
     local.get $b
     local.get $c
     select
     f64.store $0 offset=16
    end
    local.get $ptr
    f64.load $0
    local.set $a|7
    local.get $ptr
    f64.load $0 offset=8
    local.set $b|8
    local.get $a|7
    local.get $b|8
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $f64_f64_=>_i32)
    i32.const 0
    i32.gt_s
    local.set $c|9
    local.get $ptr
    local.get $b|8
    local.get $a|7
    local.get $c|9
    select
    f64.store $0
    local.get $ptr
    local.get $a|7
    local.get $b|8
    local.get $c|9
    select
    f64.store $0 offset=8
    return
   end
   local.get $ptr
   i32.const 0
   local.get $len
   i32.const 1
   i32.sub
   i32.const 0
   local.get $comparator
   call $~lib/util/sort/insertionSort<f64>
   return
  end
  local.get $len
  local.set $n
  i32.const 31
  local.get $n
  i32.clz
  i32.sub
  i32.const 2
  i32.add
  local.set $lgPlus2
  local.get $lgPlus2
  i32.const 2
  i32.shl
  local.set $lgPlus2Size
  local.get $lgPlus2Size
  i32.const 1
  i32.shl
  call $~lib/rt/stub/__alloc
  local.set $leftRunStartBuf
  local.get $leftRunStartBuf
  local.get $lgPlus2Size
  i32.add
  local.set $leftRunEndBuf
  i32.const 0
  local.set $i
  loop $for-loop|1
   local.get $i
   local.get $lgPlus2
   i32.lt_u
   local.set $16
   local.get $16
   if
    local.get $leftRunStartBuf
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.const -1
    i32.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|1
   end
  end
  local.get $len
  i32.const 3
  i32.shl
  call $~lib/rt/stub/__alloc
  local.set $buffer
  local.get $len
  i32.const 1
  i32.sub
  local.set $hi
  local.get $ptr
  i32.const 0
  local.get $hi
  local.get $comparator
  call $~lib/util/sort/extendRunRight<f64>
  local.set $endA
  local.get $endA
  i32.const 1
  i32.add
  local.set $lenA
  local.get $lenA
  i32.const 32
  i32.lt_s
  if
   local.get $hi
   local.tee $21
   i32.const 32
   i32.const 1
   i32.sub
   local.tee $22
   local.get $21
   local.get $22
   i32.lt_s
   select
   local.set $endA
   local.get $ptr
   i32.const 0
   local.get $endA
   local.get $lenA
   local.get $comparator
   call $~lib/util/sort/insertionSort<f64>
  end
  i32.const 0
  local.set $top
  i32.const 0
  local.set $startA
  loop $while-continue|2
   local.get $endA
   local.get $hi
   i32.lt_s
   local.set $25
   local.get $25
   if
    local.get $endA
    i32.const 1
    i32.add
    local.set $startB
    local.get $ptr
    local.get $startB
    local.get $hi
    local.get $comparator
    call $~lib/util/sort/extendRunRight<f64>
    local.set $endB
    local.get $endB
    local.get $startB
    i32.sub
    i32.const 1
    i32.add
    local.set $lenB
    local.get $lenB
    i32.const 32
    i32.lt_s
    if
     local.get $hi
     local.tee $29
     local.get $startB
     i32.const 32
     i32.add
     i32.const 1
     i32.sub
     local.tee $30
     local.get $29
     local.get $30
     i32.lt_s
     select
     local.set $endB
     local.get $ptr
     local.get $startB
     local.get $endB
     local.get $lenB
     local.get $comparator
     call $~lib/util/sort/insertionSort<f64>
    end
    i32.const 0
    local.get $hi
    local.get $startA
    local.get $startB
    local.get $endB
    call $~lib/util/sort/nodePower
    local.set $k
    local.get $top
    local.set $i|32
    loop $for-loop|3
     local.get $i|32
     local.get $k
     i32.gt_u
     local.set $33
     local.get $33
     if
      local.get $leftRunStartBuf
      local.get $i|32
      i32.const 2
      i32.shl
      i32.add
      i32.load $0
      local.set $start
      local.get $start
      i32.const -1
      i32.ne
      if
       local.get $ptr
       local.get $start
       local.get $leftRunEndBuf
       local.get $i|32
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       i32.const 1
       i32.add
       local.get $endA
       local.get $buffer
       local.get $comparator
       call $~lib/util/sort/mergeRuns<f64>
       local.get $start
       local.set $startA
       local.get $leftRunStartBuf
       local.get $i|32
       i32.const 2
       i32.shl
       i32.add
       i32.const -1
       i32.store $0
      end
      local.get $i|32
      i32.const 1
      i32.sub
      local.set $i|32
      br $for-loop|3
     end
    end
    local.get $leftRunStartBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $startA
    i32.store $0
    local.get $leftRunEndBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $endA
    i32.store $0
    local.get $startB
    local.set $startA
    local.get $endB
    local.set $endA
    local.get $k
    local.set $top
    br $while-continue|2
   end
  end
  local.get $top
  local.set $i|35
  loop $for-loop|4
   local.get $i|35
   i32.const 0
   i32.ne
   local.set $36
   local.get $36
   if
    local.get $leftRunStartBuf
    local.get $i|35
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $start|37
    local.get $start|37
    i32.const -1
    i32.ne
    if
     local.get $ptr
     local.get $start|37
     local.get $leftRunEndBuf
     local.get $i|35
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 1
     i32.add
     local.get $hi
     local.get $buffer
     local.get $comparator
     call $~lib/util/sort/mergeRuns<f64>
    end
    local.get $i|35
    i32.const 1
    i32.sub
    local.set $i|35
    br $for-loop|4
   end
  end
  local.get $buffer
  call $~lib/rt/stub/__free
  local.get $leftRunStartBuf
  call $~lib/rt/stub/__free
 )
 (func $~lib/array/Array<f64>#sort (type $i32_i32_=>_i32) (param $this i32) (param $comparator i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  i32.load $0 offset=12
  local.get $comparator
  call $~lib/util/sort/SORT<f64>
  local.get $this
 )
 (func $~lib/util/sort/COMPARATOR<f64>~anonymous|0 (type $f64_f64_=>_i32) (param $a f64) (param $b f64) (result i32)
  (local $ia i64)
  (local $ib i64)
  local.get $a
  i64.reinterpret_f64
  local.set $ia
  local.get $b
  i64.reinterpret_f64
  local.set $ib
  local.get $ia
  local.get $ia
  i64.const 63
  i64.shr_s
  i64.const 1
  i64.shr_u
  i64.xor
  local.set $ia
  local.get $ib
  local.get $ib
  i64.const 63
  i64.shr_s
  i64.const 1
  i64.shr_u
  i64.xor
  local.set $ib
  local.get $ia
  local.get $ib
  i64.gt_s
  local.get $ia
  local.get $ib
  i64.lt_s
  i32.sub
 )
 (func $~lib/array/Array<f64>#sort@varargs (type $i32_i32_=>_i32) (param $this i32) (param $comparator i32) (result i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   block $~lib/util/sort/COMPARATOR<f64>|inlined.0 (result i32)
    i32.const 0
    drop
    i32.const 1
    drop
    i32.const 8
    i32.const 4
    i32.eq
    drop
    i32.const 7120
    br $~lib/util/sort/COMPARATOR<f64>|inlined.0
   end
   local.set $comparator
  end
  local.get $this
  local.get $comparator
  call $~lib/array/Array<f64>#sort
 )
 (func $~lib/array/Array<f64>#get:length (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/array/Array<f64>#__get (type $i32_i32_=>_f64) (param $this i32) (param $index i32) (result f64)
  (local $value f64)
  local.get $index
  local.get $this
  i32.load $0 offset=12
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 3
  i32.shl
  i32.add
  f64.load $0
  local.set $value
  i32.const 0
  drop
  local.get $value
 )
 (func $~lib/util/sort/insertionSort<i32> (type $i32_i32_i32_i32_i32_=>_none) (param $ptr i32) (param $left i32) (param $right i32) (param $presorted i32) (param $comparator i32)
  (local $range i32)
  (local $i i32)
  (local $7 i32)
  (local $a i32)
  (local $b i32)
  (local $min i32)
  (local $max i32)
  (local $j i32)
  (local $13 i32)
  (local $14 i32)
  i32.const 0
  i32.const 1
  i32.ge_s
  drop
  local.get $right
  local.get $left
  i32.sub
  i32.const 1
  i32.add
  local.set $range
  local.get $left
  local.get $range
  i32.const 1
  i32.and
  local.get $presorted
  local.get $range
  local.get $presorted
  i32.sub
  i32.const 1
  i32.and
  i32.sub
  local.get $presorted
  i32.const 0
  i32.eq
  select
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $right
   i32.le_s
   local.set $7
   local.get $7
   if
    local.get $ptr
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $a
    local.get $ptr
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0 offset=4
    local.set $b
    local.get $b
    local.set $min
    local.get $a
    local.set $max
    local.get $a
    local.get $b
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.le_s
    if
     local.get $a
     local.set $min
     local.get $b
     local.set $max
    end
    local.get $i
    i32.const 1
    i32.sub
    local.set $j
    block $while-break|1
     loop $while-continue|1
      local.get $j
      local.get $left
      i32.ge_s
      local.set $13
      local.get $13
      if
       local.get $ptr
       local.get $j
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       local.set $a
       local.get $a
       local.get $max
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $j
        i32.const 2
        i32.shl
        i32.add
        local.get $a
        i32.store $0 offset=8
        local.get $j
        i32.const 1
        i32.sub
        local.set $j
       else
        br $while-break|1
       end
       br $while-continue|1
      end
     end
    end
    local.get $ptr
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    local.get $max
    i32.store $0 offset=8
    block $while-break|2
     loop $while-continue|2
      local.get $j
      local.get $left
      i32.ge_s
      local.set $14
      local.get $14
      if
       local.get $ptr
       local.get $j
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       local.set $a
       local.get $a
       local.get $min
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $j
        i32.const 2
        i32.shl
        i32.add
        local.get $a
        i32.store $0 offset=4
        local.get $j
        i32.const 1
        i32.sub
        local.set $j
       else
        br $while-break|2
       end
       br $while-continue|2
      end
     end
    end
    local.get $ptr
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    local.get $min
    i32.store $0 offset=4
    local.get $i
    i32.const 2
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/util/sort/extendRunRight<i32> (type $i32_i32_i32_i32_=>_i32) (param $ptr i32) (param $i i32) (param $right i32) (param $comparator i32) (result i32)
  (local $j i32)
  (local $5 i32)
  (local $k i32)
  (local $7 i32)
  (local $tmp i32)
  (local $9 i32)
  local.get $i
  local.get $right
  i32.eq
  if
   local.get $i
   return
  end
  local.get $i
  local.set $j
  local.get $ptr
  local.get $j
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.get $ptr
  local.get $j
  i32.const 1
  i32.add
  local.tee $j
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  i32.const 2
  global.set $~argumentsLength
  local.get $comparator
  i32.load $0
  call_indirect $0 (type $i32_i32_=>_i32)
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     i32.load $0 offset=4
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 31
     i32.shr_u
    else
     i32.const 0
    end
    local.set $5
    local.get $5
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|0
    end
   end
   local.get $j
   local.set $k
   loop $while-continue|1
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     local.get $ptr
     local.get $i
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.set $tmp
     local.get $ptr
     local.get $i
     i32.const 2
     i32.shl
     i32.add
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     local.get $tmp
     i32.store $0
     local.get $k
     i32.const 1
     i32.sub
     local.set $k
     br $while-continue|1
    end
   end
  else
   loop $while-continue|2
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     i32.load $0 offset=4
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.ge_s
    else
     i32.const 0
    end
    local.set $9
    local.get $9
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|2
    end
   end
  end
  local.get $j
 )
 (func $~lib/util/sort/mergeRuns<i32> (type $i32_i32_i32_i32_i32_i32_=>_none) (param $ptr i32) (param $l i32) (param $m i32) (param $r i32) (param $buffer i32) (param $comparator i32)
  (local $i i32)
  (local $j i32)
  (local $t i32)
  (local $9 i32)
  (local $10 i32)
  (local $k i32)
  (local $12 i32)
  (local $a i32)
  (local $b i32)
  local.get $m
  i32.const 1
  i32.sub
  local.set $m
  local.get $r
  local.get $m
  i32.add
  local.set $t
  local.get $m
  i32.const 1
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $l
   i32.gt_s
   local.set $9
   local.get $9
   if
    local.get $buffer
    local.get $i
    i32.const 1
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    local.get $ptr
    local.get $i
    i32.const 1
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    i32.store $0
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  local.get $m
  local.set $j
  loop $for-loop|1
   local.get $j
   local.get $r
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $buffer
    local.get $t
    local.get $j
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    local.get $ptr
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    i32.load $0 offset=4
    i32.store $0
    local.get $j
    i32.const 1
    i32.add
    local.set $j
    br $for-loop|1
   end
  end
  local.get $l
  local.set $k
  loop $for-loop|2
   local.get $k
   local.get $r
   i32.le_s
   local.set $12
   local.get $12
   if
    local.get $buffer
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $a
    local.get $buffer
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $b
    local.get $a
    local.get $b
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.lt_s
    if
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     local.get $a
     i32.store $0
     local.get $j
     i32.const 1
     i32.sub
     local.set $j
    else
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     local.get $b
     i32.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
    end
    local.get $k
    i32.const 1
    i32.add
    local.set $k
    br $for-loop|2
   end
  end
 )
 (func $~lib/util/sort/SORT<i32> (type $i32_i32_i32_=>_none) (param $ptr i32) (param $len i32) (param $comparator i32)
  (local $3 i32)
  (local $a i32)
  (local $b i32)
  (local $c i32)
  (local $a|7 i32)
  (local $b|8 i32)
  (local $c|9 i32)
  (local $n i32)
  (local $lgPlus2 i32)
  (local $lgPlus2Size i32)
  (local $leftRunStartBuf i32)
  (local $leftRunEndBuf i32)
  (local $i i32)
  (local $16 i32)
  (local $buffer i32)
  (local $hi i32)
  (local $endA i32)
  (local $lenA i32)
  (local $21 i32)
  (local $22 i32)
  (local $top i32)
  (local $startA i32)
  (local $25 i32)
  (local $startB i32)
  (local $endB i32)
  (local $lenB i32)
  (local $29 i32)
  (local $30 i32)
  (local $k i32)
  (local $i|32 i32)
  (local $33 i32)
  (local $start i32)
  (local $i|35 i32)
  (local $36 i32)
  (local $start|37 i32)
  local.get $len
  i32.const 48
  i32.le_s
  if
   local.get $len
   i32.const 1
   i32.le_s
   if
    return
   end
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   block $break|0
    block $case1|0
     block $case0|0
      local.get $len
      local.set $3
      local.get $3
      i32.const 3
      i32.eq
      br_if $case0|0
      local.get $3
      i32.const 2
      i32.eq
      br_if $case1|0
      br $break|0
     end
     local.get $ptr
     i32.load $0
     local.set $a
     local.get $ptr
     i32.load $0 offset=4
     local.set $b
     local.get $a
     local.get $b
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $c
     local.get $ptr
     local.get $b
     local.get $a
     local.get $c
     select
     i32.store $0
     local.get $a
     local.get $b
     local.get $c
     select
     local.set $a
     local.get $ptr
     i32.load $0 offset=8
     local.set $b
     local.get $a
     local.get $b
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $c
     local.get $ptr
     local.get $b
     local.get $a
     local.get $c
     select
     i32.store $0 offset=4
     local.get $ptr
     local.get $a
     local.get $b
     local.get $c
     select
     i32.store $0 offset=8
    end
    local.get $ptr
    i32.load $0
    local.set $a|7
    local.get $ptr
    i32.load $0 offset=4
    local.set $b|8
    local.get $a|7
    local.get $b|8
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.gt_s
    local.set $c|9
    local.get $ptr
    local.get $b|8
    local.get $a|7
    local.get $c|9
    select
    i32.store $0
    local.get $ptr
    local.get $a|7
    local.get $b|8
    local.get $c|9
    select
    i32.store $0 offset=4
    return
   end
   local.get $ptr
   i32.const 0
   local.get $len
   i32.const 1
   i32.sub
   i32.const 0
   local.get $comparator
   call $~lib/util/sort/insertionSort<i32>
   return
  end
  local.get $len
  local.set $n
  i32.const 31
  local.get $n
  i32.clz
  i32.sub
  i32.const 2
  i32.add
  local.set $lgPlus2
  local.get $lgPlus2
  i32.const 2
  i32.shl
  local.set $lgPlus2Size
  local.get $lgPlus2Size
  i32.const 1
  i32.shl
  call $~lib/rt/stub/__alloc
  local.set $leftRunStartBuf
  local.get $leftRunStartBuf
  local.get $lgPlus2Size
  i32.add
  local.set $leftRunEndBuf
  i32.const 0
  local.set $i
  loop $for-loop|1
   local.get $i
   local.get $lgPlus2
   i32.lt_u
   local.set $16
   local.get $16
   if
    local.get $leftRunStartBuf
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.const -1
    i32.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|1
   end
  end
  local.get $len
  i32.const 2
  i32.shl
  call $~lib/rt/stub/__alloc
  local.set $buffer
  local.get $len
  i32.const 1
  i32.sub
  local.set $hi
  local.get $ptr
  i32.const 0
  local.get $hi
  local.get $comparator
  call $~lib/util/sort/extendRunRight<i32>
  local.set $endA
  local.get $endA
  i32.const 1
  i32.add
  local.set $lenA
  local.get $lenA
  i32.const 32
  i32.lt_s
  if
   local.get $hi
   local.tee $21
   i32.const 32
   i32.const 1
   i32.sub
   local.tee $22
   local.get $21
   local.get $22
   i32.lt_s
   select
   local.set $endA
   local.get $ptr
   i32.const 0
   local.get $endA
   local.get $lenA
   local.get $comparator
   call $~lib/util/sort/insertionSort<i32>
  end
  i32.const 0
  local.set $top
  i32.const 0
  local.set $startA
  loop $while-continue|2
   local.get $endA
   local.get $hi
   i32.lt_s
   local.set $25
   local.get $25
   if
    local.get $endA
    i32.const 1
    i32.add
    local.set $startB
    local.get $ptr
    local.get $startB
    local.get $hi
    local.get $comparator
    call $~lib/util/sort/extendRunRight<i32>
    local.set $endB
    local.get $endB
    local.get $startB
    i32.sub
    i32.const 1
    i32.add
    local.set $lenB
    local.get $lenB
    i32.const 32
    i32.lt_s
    if
     local.get $hi
     local.tee $29
     local.get $startB
     i32.const 32
     i32.add
     i32.const 1
     i32.sub
     local.tee $30
     local.get $29
     local.get $30
     i32.lt_s
     select
     local.set $endB
     local.get $ptr
     local.get $startB
     local.get $endB
     local.get $lenB
     local.get $comparator
     call $~lib/util/sort/insertionSort<i32>
    end
    i32.const 0
    local.get $hi
    local.get $startA
    local.get $startB
    local.get $endB
    call $~lib/util/sort/nodePower
    local.set $k
    local.get $top
    local.set $i|32
    loop $for-loop|3
     local.get $i|32
     local.get $k
     i32.gt_u
     local.set $33
     local.get $33
     if
      local.get $leftRunStartBuf
      local.get $i|32
      i32.const 2
      i32.shl
      i32.add
      i32.load $0
      local.set $start
      local.get $start
      i32.const -1
      i32.ne
      if
       local.get $ptr
       local.get $start
       local.get $leftRunEndBuf
       local.get $i|32
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       i32.const 1
       i32.add
       local.get $endA
       local.get $buffer
       local.get $comparator
       call $~lib/util/sort/mergeRuns<i32>
       local.get $start
       local.set $startA
       local.get $leftRunStartBuf
       local.get $i|32
       i32.const 2
       i32.shl
       i32.add
       i32.const -1
       i32.store $0
      end
      local.get $i|32
      i32.const 1
      i32.sub
      local.set $i|32
      br $for-loop|3
     end
    end
    local.get $leftRunStartBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $startA
    i32.store $0
    local.get $leftRunEndBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $endA
    i32.store $0
    local.get $startB
    local.set $startA
    local.get $endB
    local.set $endA
    local.get $k
    local.set $top
    br $while-continue|2
   end
  end
  local.get $top
  local.set $i|35
  loop $for-loop|4
   local.get $i|35
   i32.const 0
   i32.ne
   local.set $36
   local.get $36
   if
    local.get $leftRunStartBuf
    local.get $i|35
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $start|37
    local.get $start|37
    i32.const -1
    i32.ne
    if
     local.get $ptr
     local.get $start|37
     local.get $leftRunEndBuf
     local.get $i|35
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 1
     i32.add
     local.get $hi
     local.get $buffer
     local.get $comparator
     call $~lib/util/sort/mergeRuns<i32>
    end
    local.get $i|35
    i32.const 1
    i32.sub
    local.set $i|35
    br $for-loop|4
   end
  end
  local.get $buffer
  call $~lib/rt/stub/__free
  local.get $leftRunStartBuf
  call $~lib/rt/stub/__free
 )
 (func $~lib/array/Array<i32>#sort (type $i32_i32_=>_i32) (param $this i32) (param $comparator i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  i32.load $0 offset=12
  local.get $comparator
  call $~lib/util/sort/SORT<i32>
  local.get $this
 )
 (func $~lib/util/sort/COMPARATOR<i32>~anonymous|0 (type $i32_i32_=>_i32) (param $a i32) (param $b i32) (result i32)
  local.get $a
  local.get $b
  i32.sub
 )
 (func $~lib/array/Array<i32>#sort@varargs (type $i32_i32_=>_i32) (param $this i32) (param $comparator i32) (result i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   block $~lib/util/sort/COMPARATOR<i32>|inlined.0 (result i32)
    i32.const 1
    drop
    i32.const 4
    i32.const 4
    i32.le_u
    drop
    i32.const 7280
    br $~lib/util/sort/COMPARATOR<i32>|inlined.0
   end
   local.set $comparator
  end
  local.get $this
  local.get $comparator
  call $~lib/array/Array<i32>#sort
 )
 (func $~lib/util/sort/insertionSort<u32> (type $i32_i32_i32_i32_i32_=>_none) (param $ptr i32) (param $left i32) (param $right i32) (param $presorted i32) (param $comparator i32)
  (local $range i32)
  (local $i i32)
  (local $7 i32)
  (local $a i32)
  (local $b i32)
  (local $min i32)
  (local $max i32)
  (local $j i32)
  (local $13 i32)
  (local $14 i32)
  i32.const 0
  i32.const 1
  i32.ge_s
  drop
  local.get $right
  local.get $left
  i32.sub
  i32.const 1
  i32.add
  local.set $range
  local.get $left
  local.get $range
  i32.const 1
  i32.and
  local.get $presorted
  local.get $range
  local.get $presorted
  i32.sub
  i32.const 1
  i32.and
  i32.sub
  local.get $presorted
  i32.const 0
  i32.eq
  select
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $right
   i32.le_s
   local.set $7
   local.get $7
   if
    local.get $ptr
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $a
    local.get $ptr
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0 offset=4
    local.set $b
    local.get $b
    local.set $min
    local.get $a
    local.set $max
    local.get $a
    local.get $b
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.le_s
    if
     local.get $a
     local.set $min
     local.get $b
     local.set $max
    end
    local.get $i
    i32.const 1
    i32.sub
    local.set $j
    block $while-break|1
     loop $while-continue|1
      local.get $j
      local.get $left
      i32.ge_s
      local.set $13
      local.get $13
      if
       local.get $ptr
       local.get $j
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       local.set $a
       local.get $a
       local.get $max
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $j
        i32.const 2
        i32.shl
        i32.add
        local.get $a
        i32.store $0 offset=8
        local.get $j
        i32.const 1
        i32.sub
        local.set $j
       else
        br $while-break|1
       end
       br $while-continue|1
      end
     end
    end
    local.get $ptr
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    local.get $max
    i32.store $0 offset=8
    block $while-break|2
     loop $while-continue|2
      local.get $j
      local.get $left
      i32.ge_s
      local.set $14
      local.get $14
      if
       local.get $ptr
       local.get $j
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       local.set $a
       local.get $a
       local.get $min
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $j
        i32.const 2
        i32.shl
        i32.add
        local.get $a
        i32.store $0 offset=4
        local.get $j
        i32.const 1
        i32.sub
        local.set $j
       else
        br $while-break|2
       end
       br $while-continue|2
      end
     end
    end
    local.get $ptr
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    local.get $min
    i32.store $0 offset=4
    local.get $i
    i32.const 2
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/util/sort/extendRunRight<u32> (type $i32_i32_i32_i32_=>_i32) (param $ptr i32) (param $i i32) (param $right i32) (param $comparator i32) (result i32)
  (local $j i32)
  (local $5 i32)
  (local $k i32)
  (local $7 i32)
  (local $tmp i32)
  (local $9 i32)
  local.get $i
  local.get $right
  i32.eq
  if
   local.get $i
   return
  end
  local.get $i
  local.set $j
  local.get $ptr
  local.get $j
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.get $ptr
  local.get $j
  i32.const 1
  i32.add
  local.tee $j
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  i32.const 2
  global.set $~argumentsLength
  local.get $comparator
  i32.load $0
  call_indirect $0 (type $i32_i32_=>_i32)
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     i32.load $0 offset=4
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 31
     i32.shr_u
    else
     i32.const 0
    end
    local.set $5
    local.get $5
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|0
    end
   end
   local.get $j
   local.set $k
   loop $while-continue|1
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     local.get $ptr
     local.get $i
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.set $tmp
     local.get $ptr
     local.get $i
     i32.const 2
     i32.shl
     i32.add
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     local.get $tmp
     i32.store $0
     local.get $k
     i32.const 1
     i32.sub
     local.set $k
     br $while-continue|1
    end
   end
  else
   loop $while-continue|2
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     i32.load $0 offset=4
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.ge_s
    else
     i32.const 0
    end
    local.set $9
    local.get $9
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|2
    end
   end
  end
  local.get $j
 )
 (func $~lib/util/sort/mergeRuns<u32> (type $i32_i32_i32_i32_i32_i32_=>_none) (param $ptr i32) (param $l i32) (param $m i32) (param $r i32) (param $buffer i32) (param $comparator i32)
  (local $i i32)
  (local $j i32)
  (local $t i32)
  (local $9 i32)
  (local $10 i32)
  (local $k i32)
  (local $12 i32)
  (local $a i32)
  (local $b i32)
  local.get $m
  i32.const 1
  i32.sub
  local.set $m
  local.get $r
  local.get $m
  i32.add
  local.set $t
  local.get $m
  i32.const 1
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $l
   i32.gt_s
   local.set $9
   local.get $9
   if
    local.get $buffer
    local.get $i
    i32.const 1
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    local.get $ptr
    local.get $i
    i32.const 1
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    i32.store $0
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  local.get $m
  local.set $j
  loop $for-loop|1
   local.get $j
   local.get $r
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $buffer
    local.get $t
    local.get $j
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    local.get $ptr
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    i32.load $0 offset=4
    i32.store $0
    local.get $j
    i32.const 1
    i32.add
    local.set $j
    br $for-loop|1
   end
  end
  local.get $l
  local.set $k
  loop $for-loop|2
   local.get $k
   local.get $r
   i32.le_s
   local.set $12
   local.get $12
   if
    local.get $buffer
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $a
    local.get $buffer
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $b
    local.get $a
    local.get $b
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.lt_s
    if
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     local.get $a
     i32.store $0
     local.get $j
     i32.const 1
     i32.sub
     local.set $j
    else
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     local.get $b
     i32.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
    end
    local.get $k
    i32.const 1
    i32.add
    local.set $k
    br $for-loop|2
   end
  end
 )
 (func $~lib/util/sort/SORT<u32> (type $i32_i32_i32_=>_none) (param $ptr i32) (param $len i32) (param $comparator i32)
  (local $3 i32)
  (local $a i32)
  (local $b i32)
  (local $c i32)
  (local $a|7 i32)
  (local $b|8 i32)
  (local $c|9 i32)
  (local $n i32)
  (local $lgPlus2 i32)
  (local $lgPlus2Size i32)
  (local $leftRunStartBuf i32)
  (local $leftRunEndBuf i32)
  (local $i i32)
  (local $16 i32)
  (local $buffer i32)
  (local $hi i32)
  (local $endA i32)
  (local $lenA i32)
  (local $21 i32)
  (local $22 i32)
  (local $top i32)
  (local $startA i32)
  (local $25 i32)
  (local $startB i32)
  (local $endB i32)
  (local $lenB i32)
  (local $29 i32)
  (local $30 i32)
  (local $k i32)
  (local $i|32 i32)
  (local $33 i32)
  (local $start i32)
  (local $i|35 i32)
  (local $36 i32)
  (local $start|37 i32)
  local.get $len
  i32.const 48
  i32.le_s
  if
   local.get $len
   i32.const 1
   i32.le_s
   if
    return
   end
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   block $break|0
    block $case1|0
     block $case0|0
      local.get $len
      local.set $3
      local.get $3
      i32.const 3
      i32.eq
      br_if $case0|0
      local.get $3
      i32.const 2
      i32.eq
      br_if $case1|0
      br $break|0
     end
     local.get $ptr
     i32.load $0
     local.set $a
     local.get $ptr
     i32.load $0 offset=4
     local.set $b
     local.get $a
     local.get $b
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $c
     local.get $ptr
     local.get $b
     local.get $a
     local.get $c
     select
     i32.store $0
     local.get $a
     local.get $b
     local.get $c
     select
     local.set $a
     local.get $ptr
     i32.load $0 offset=8
     local.set $b
     local.get $a
     local.get $b
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $c
     local.get $ptr
     local.get $b
     local.get $a
     local.get $c
     select
     i32.store $0 offset=4
     local.get $ptr
     local.get $a
     local.get $b
     local.get $c
     select
     i32.store $0 offset=8
    end
    local.get $ptr
    i32.load $0
    local.set $a|7
    local.get $ptr
    i32.load $0 offset=4
    local.set $b|8
    local.get $a|7
    local.get $b|8
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.gt_s
    local.set $c|9
    local.get $ptr
    local.get $b|8
    local.get $a|7
    local.get $c|9
    select
    i32.store $0
    local.get $ptr
    local.get $a|7
    local.get $b|8
    local.get $c|9
    select
    i32.store $0 offset=4
    return
   end
   local.get $ptr
   i32.const 0
   local.get $len
   i32.const 1
   i32.sub
   i32.const 0
   local.get $comparator
   call $~lib/util/sort/insertionSort<u32>
   return
  end
  local.get $len
  local.set $n
  i32.const 31
  local.get $n
  i32.clz
  i32.sub
  i32.const 2
  i32.add
  local.set $lgPlus2
  local.get $lgPlus2
  i32.const 2
  i32.shl
  local.set $lgPlus2Size
  local.get $lgPlus2Size
  i32.const 1
  i32.shl
  call $~lib/rt/stub/__alloc
  local.set $leftRunStartBuf
  local.get $leftRunStartBuf
  local.get $lgPlus2Size
  i32.add
  local.set $leftRunEndBuf
  i32.const 0
  local.set $i
  loop $for-loop|1
   local.get $i
   local.get $lgPlus2
   i32.lt_u
   local.set $16
   local.get $16
   if
    local.get $leftRunStartBuf
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.const -1
    i32.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|1
   end
  end
  local.get $len
  i32.const 2
  i32.shl
  call $~lib/rt/stub/__alloc
  local.set $buffer
  local.get $len
  i32.const 1
  i32.sub
  local.set $hi
  local.get $ptr
  i32.const 0
  local.get $hi
  local.get $comparator
  call $~lib/util/sort/extendRunRight<u32>
  local.set $endA
  local.get $endA
  i32.const 1
  i32.add
  local.set $lenA
  local.get $lenA
  i32.const 32
  i32.lt_s
  if
   local.get $hi
   local.tee $21
   i32.const 32
   i32.const 1
   i32.sub
   local.tee $22
   local.get $21
   local.get $22
   i32.lt_s
   select
   local.set $endA
   local.get $ptr
   i32.const 0
   local.get $endA
   local.get $lenA
   local.get $comparator
   call $~lib/util/sort/insertionSort<u32>
  end
  i32.const 0
  local.set $top
  i32.const 0
  local.set $startA
  loop $while-continue|2
   local.get $endA
   local.get $hi
   i32.lt_s
   local.set $25
   local.get $25
   if
    local.get $endA
    i32.const 1
    i32.add
    local.set $startB
    local.get $ptr
    local.get $startB
    local.get $hi
    local.get $comparator
    call $~lib/util/sort/extendRunRight<u32>
    local.set $endB
    local.get $endB
    local.get $startB
    i32.sub
    i32.const 1
    i32.add
    local.set $lenB
    local.get $lenB
    i32.const 32
    i32.lt_s
    if
     local.get $hi
     local.tee $29
     local.get $startB
     i32.const 32
     i32.add
     i32.const 1
     i32.sub
     local.tee $30
     local.get $29
     local.get $30
     i32.lt_s
     select
     local.set $endB
     local.get $ptr
     local.get $startB
     local.get $endB
     local.get $lenB
     local.get $comparator
     call $~lib/util/sort/insertionSort<u32>
    end
    i32.const 0
    local.get $hi
    local.get $startA
    local.get $startB
    local.get $endB
    call $~lib/util/sort/nodePower
    local.set $k
    local.get $top
    local.set $i|32
    loop $for-loop|3
     local.get $i|32
     local.get $k
     i32.gt_u
     local.set $33
     local.get $33
     if
      local.get $leftRunStartBuf
      local.get $i|32
      i32.const 2
      i32.shl
      i32.add
      i32.load $0
      local.set $start
      local.get $start
      i32.const -1
      i32.ne
      if
       local.get $ptr
       local.get $start
       local.get $leftRunEndBuf
       local.get $i|32
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       i32.const 1
       i32.add
       local.get $endA
       local.get $buffer
       local.get $comparator
       call $~lib/util/sort/mergeRuns<u32>
       local.get $start
       local.set $startA
       local.get $leftRunStartBuf
       local.get $i|32
       i32.const 2
       i32.shl
       i32.add
       i32.const -1
       i32.store $0
      end
      local.get $i|32
      i32.const 1
      i32.sub
      local.set $i|32
      br $for-loop|3
     end
    end
    local.get $leftRunStartBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $startA
    i32.store $0
    local.get $leftRunEndBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $endA
    i32.store $0
    local.get $startB
    local.set $startA
    local.get $endB
    local.set $endA
    local.get $k
    local.set $top
    br $while-continue|2
   end
  end
  local.get $top
  local.set $i|35
  loop $for-loop|4
   local.get $i|35
   i32.const 0
   i32.ne
   local.set $36
   local.get $36
   if
    local.get $leftRunStartBuf
    local.get $i|35
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $start|37
    local.get $start|37
    i32.const -1
    i32.ne
    if
     local.get $ptr
     local.get $start|37
     local.get $leftRunEndBuf
     local.get $i|35
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 1
     i32.add
     local.get $hi
     local.get $buffer
     local.get $comparator
     call $~lib/util/sort/mergeRuns<u32>
    end
    local.get $i|35
    i32.const 1
    i32.sub
    local.set $i|35
    br $for-loop|4
   end
  end
  local.get $buffer
  call $~lib/rt/stub/__free
  local.get $leftRunStartBuf
  call $~lib/rt/stub/__free
 )
 (func $~lib/array/Array<u32>#sort (type $i32_i32_=>_i32) (param $this i32) (param $comparator i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  i32.load $0 offset=12
  local.get $comparator
  call $~lib/util/sort/SORT<u32>
  local.get $this
 )
 (func $~lib/util/sort/COMPARATOR<u32>~anonymous|0 (type $i32_i32_=>_i32) (param $a i32) (param $b i32) (result i32)
  local.get $a
  local.get $b
  i32.gt_u
  local.get $a
  local.get $b
  i32.lt_u
  i32.sub
 )
 (func $~lib/array/Array<u32>#sort@varargs (type $i32_i32_=>_i32) (param $this i32) (param $comparator i32) (result i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   block $~lib/util/sort/COMPARATOR<u32>|inlined.0 (result i32)
    i32.const 1
    drop
    i32.const 0
    drop
    i32.const 7408
    br $~lib/util/sort/COMPARATOR<u32>|inlined.0
   end
   local.set $comparator
  end
  local.get $this
  local.get $comparator
  call $~lib/array/Array<u32>#sort
 )
 (func $~lib/math/NativeMath.random (type $none_=>_f64) (result f64)
  (local $s1 i64)
  (local $s0 i64)
  (local $r i64)
  global.get $~lib/math/random_seeded
  i32.eqz
  if
   call $~lib/builtins/seed
   i64.reinterpret_f64
   call $~lib/math/NativeMath.seedRandom
  end
  global.get $~lib/math/random_state0_64
  local.set $s1
  global.get $~lib/math/random_state1_64
  local.set $s0
  local.get $s0
  global.set $~lib/math/random_state0_64
  local.get $s1
  local.get $s1
  i64.const 23
  i64.shl
  i64.xor
  local.set $s1
  local.get $s1
  local.get $s1
  i64.const 17
  i64.shr_u
  i64.xor
  local.set $s1
  local.get $s1
  local.get $s0
  i64.xor
  local.set $s1
  local.get $s1
  local.get $s0
  i64.const 26
  i64.shr_u
  i64.xor
  local.set $s1
  local.get $s1
  global.set $~lib/math/random_state1_64
  local.get $s0
  i64.const 12
  i64.shr_u
  i64.const 4607182418800017408
  i64.or
  local.set $r
  local.get $r
  f64.reinterpret_i64
  f64.const 1
  f64.sub
 )
 (func $~lib/util/sort/COMPARATOR<i32>~anonymous|1 (type $i32_i32_=>_i32) (param $a i32) (param $b i32) (result i32)
  local.get $a
  local.get $b
  i32.sub
 )
 (func $~lib/util/sort/COMPARATOR<i32>~anonymous|2 (type $i32_i32_=>_i32) (param $a i32) (param $b i32) (result i32)
  local.get $a
  local.get $b
  i32.sub
 )
 (func $~lib/util/sort/COMPARATOR<i32>~anonymous|3 (type $i32_i32_=>_i32) (param $a i32) (param $b i32) (result i32)
  local.get $a
  local.get $b
  i32.sub
 )
 (func $~lib/util/sort/COMPARATOR<i32>~anonymous|4 (type $i32_i32_=>_i32) (param $a i32) (param $b i32) (result i32)
  local.get $a
  local.get $b
  i32.sub
 )
 (func $~lib/util/sort/COMPARATOR<i32>~anonymous|5 (type $i32_i32_=>_i32) (param $a i32) (param $b i32) (result i32)
  local.get $a
  local.get $b
  i32.sub
 )
 (func $~lib/util/sort/COMPARATOR<i32>~anonymous|6 (type $i32_i32_=>_i32) (param $a i32) (param $b i32) (result i32)
  local.get $a
  local.get $b
  i32.sub
 )
 (func $~lib/util/sort/COMPARATOR<i32>~anonymous|7 (type $i32_i32_=>_i32) (param $a i32) (param $b i32) (result i32)
  local.get $a
  local.get $b
  i32.sub
 )
 (func $~lib/util/sort/COMPARATOR<i32>~anonymous|8 (type $i32_i32_=>_i32) (param $a i32) (param $b i32) (result i32)
  local.get $a
  local.get $b
  i32.sub
 )
 (func $~lib/array/Array<std/array/Dim>#slice (type $i32_i32_i32_=>_i32) (param $this i32) (param $start i32) (param $end i32) (result i32)
  (local $len i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $slice i32)
  (local $sliceBase i32)
  (local $thisBase i32)
  (local $off i32)
  (local $end|18 i32)
  (local $19 i32)
  (local $ref i32)
  local.get $this
  i32.load $0 offset=12
  local.set $len
  local.get $start
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $start
   local.get $len
   i32.add
   local.tee $4
   i32.const 0
   local.tee $5
   local.get $4
   local.get $5
   i32.gt_s
   select
  else
   local.get $start
   local.tee $6
   local.get $len
   local.tee $7
   local.get $6
   local.get $7
   i32.lt_s
   select
  end
  local.set $start
  local.get $end
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $end
   local.get $len
   i32.add
   local.tee $8
   i32.const 0
   local.tee $9
   local.get $8
   local.get $9
   i32.gt_s
   select
  else
   local.get $end
   local.tee $10
   local.get $len
   local.tee $11
   local.get $10
   local.get $11
   i32.lt_s
   select
  end
  local.set $end
  local.get $end
  local.get $start
  i32.sub
  local.tee $12
  i32.const 0
  local.tee $13
  local.get $12
  local.get $13
  i32.gt_s
  select
  local.set $len
  local.get $len
  i32.const 2
  i32.const 23
  i32.const 0
  call $~lib/rt/__newArray
  local.set $slice
  local.get $slice
  i32.load $0 offset=4
  local.set $sliceBase
  local.get $this
  i32.load $0 offset=4
  local.get $start
  i32.const 2
  i32.shl
  i32.add
  local.set $thisBase
  i32.const 1
  drop
  i32.const 0
  local.set $off
  local.get $len
  i32.const 2
  i32.shl
  local.set $end|18
  loop $while-continue|0
   local.get $off
   local.get $end|18
   i32.lt_u
   local.set $19
   local.get $19
   if
    local.get $thisBase
    local.get $off
    i32.add
    i32.load $0
    local.set $ref
    local.get $sliceBase
    local.get $off
    i32.add
    local.get $ref
    i32.store $0
    local.get $slice
    local.get $ref
    i32.const 1
    call $~lib/rt/stub/__link
    local.get $off
    i32.const 4
    i32.add
    local.set $off
    br $while-continue|0
   end
  end
  local.get $slice
 )
 (func $std/array/assertStableSortedForComplexObjects~anonymous|0 (type $i32_i32_=>_i32) (param $a i32) (param $b i32) (result i32)
  local.get $a
  i32.load $0
  local.get $b
  i32.load $0
  i32.sub
 )
 (func $~lib/util/sort/insertionSort<std/array/Dim> (type $i32_i32_i32_i32_i32_=>_none) (param $ptr i32) (param $left i32) (param $right i32) (param $presorted i32) (param $comparator i32)
  (local $range i32)
  (local $i i32)
  (local $7 i32)
  (local $a i32)
  (local $b i32)
  (local $min i32)
  (local $max i32)
  (local $j i32)
  (local $13 i32)
  (local $14 i32)
  i32.const 0
  i32.const 1
  i32.ge_s
  drop
  local.get $right
  local.get $left
  i32.sub
  i32.const 1
  i32.add
  local.set $range
  local.get $left
  local.get $range
  i32.const 1
  i32.and
  local.get $presorted
  local.get $range
  local.get $presorted
  i32.sub
  i32.const 1
  i32.and
  i32.sub
  local.get $presorted
  i32.const 0
  i32.eq
  select
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $right
   i32.le_s
   local.set $7
   local.get $7
   if
    local.get $ptr
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $a
    local.get $ptr
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0 offset=4
    local.set $b
    local.get $b
    local.set $min
    local.get $a
    local.set $max
    local.get $a
    local.get $b
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.le_s
    if
     local.get $a
     local.set $min
     local.get $b
     local.set $max
    end
    local.get $i
    i32.const 1
    i32.sub
    local.set $j
    block $while-break|1
     loop $while-continue|1
      local.get $j
      local.get $left
      i32.ge_s
      local.set $13
      local.get $13
      if
       local.get $ptr
       local.get $j
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       local.set $a
       local.get $a
       local.get $max
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $j
        i32.const 2
        i32.shl
        i32.add
        local.get $a
        i32.store $0 offset=8
        local.get $j
        i32.const 1
        i32.sub
        local.set $j
       else
        br $while-break|1
       end
       br $while-continue|1
      end
     end
    end
    local.get $ptr
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    local.get $max
    i32.store $0 offset=8
    block $while-break|2
     loop $while-continue|2
      local.get $j
      local.get $left
      i32.ge_s
      local.set $14
      local.get $14
      if
       local.get $ptr
       local.get $j
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       local.set $a
       local.get $a
       local.get $min
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $j
        i32.const 2
        i32.shl
        i32.add
        local.get $a
        i32.store $0 offset=4
        local.get $j
        i32.const 1
        i32.sub
        local.set $j
       else
        br $while-break|2
       end
       br $while-continue|2
      end
     end
    end
    local.get $ptr
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    local.get $min
    i32.store $0 offset=4
    local.get $i
    i32.const 2
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/util/sort/extendRunRight<std/array/Dim> (type $i32_i32_i32_i32_=>_i32) (param $ptr i32) (param $i i32) (param $right i32) (param $comparator i32) (result i32)
  (local $j i32)
  (local $5 i32)
  (local $k i32)
  (local $7 i32)
  (local $tmp i32)
  (local $9 i32)
  local.get $i
  local.get $right
  i32.eq
  if
   local.get $i
   return
  end
  local.get $i
  local.set $j
  local.get $ptr
  local.get $j
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.get $ptr
  local.get $j
  i32.const 1
  i32.add
  local.tee $j
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  i32.const 2
  global.set $~argumentsLength
  local.get $comparator
  i32.load $0
  call_indirect $0 (type $i32_i32_=>_i32)
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     i32.load $0 offset=4
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 31
     i32.shr_u
    else
     i32.const 0
    end
    local.set $5
    local.get $5
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|0
    end
   end
   local.get $j
   local.set $k
   loop $while-continue|1
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     local.get $ptr
     local.get $i
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.set $tmp
     local.get $ptr
     local.get $i
     i32.const 2
     i32.shl
     i32.add
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     local.get $tmp
     i32.store $0
     local.get $k
     i32.const 1
     i32.sub
     local.set $k
     br $while-continue|1
    end
   end
  else
   loop $while-continue|2
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     i32.load $0 offset=4
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.ge_s
    else
     i32.const 0
    end
    local.set $9
    local.get $9
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|2
    end
   end
  end
  local.get $j
 )
 (func $~lib/util/sort/mergeRuns<std/array/Dim> (type $i32_i32_i32_i32_i32_i32_=>_none) (param $ptr i32) (param $l i32) (param $m i32) (param $r i32) (param $buffer i32) (param $comparator i32)
  (local $i i32)
  (local $j i32)
  (local $t i32)
  (local $9 i32)
  (local $10 i32)
  (local $k i32)
  (local $12 i32)
  (local $a i32)
  (local $b i32)
  local.get $m
  i32.const 1
  i32.sub
  local.set $m
  local.get $r
  local.get $m
  i32.add
  local.set $t
  local.get $m
  i32.const 1
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $l
   i32.gt_s
   local.set $9
   local.get $9
   if
    local.get $buffer
    local.get $i
    i32.const 1
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    local.get $ptr
    local.get $i
    i32.const 1
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    i32.store $0
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  local.get $m
  local.set $j
  loop $for-loop|1
   local.get $j
   local.get $r
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $buffer
    local.get $t
    local.get $j
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    local.get $ptr
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    i32.load $0 offset=4
    i32.store $0
    local.get $j
    i32.const 1
    i32.add
    local.set $j
    br $for-loop|1
   end
  end
  local.get $l
  local.set $k
  loop $for-loop|2
   local.get $k
   local.get $r
   i32.le_s
   local.set $12
   local.get $12
   if
    local.get $buffer
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $a
    local.get $buffer
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $b
    local.get $a
    local.get $b
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.lt_s
    if
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     local.get $a
     i32.store $0
     local.get $j
     i32.const 1
     i32.sub
     local.set $j
    else
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     local.get $b
     i32.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
    end
    local.get $k
    i32.const 1
    i32.add
    local.set $k
    br $for-loop|2
   end
  end
 )
 (func $~lib/util/sort/SORT<std/array/Dim> (type $i32_i32_i32_=>_none) (param $ptr i32) (param $len i32) (param $comparator i32)
  (local $3 i32)
  (local $a i32)
  (local $b i32)
  (local $c i32)
  (local $a|7 i32)
  (local $b|8 i32)
  (local $c|9 i32)
  (local $n i32)
  (local $lgPlus2 i32)
  (local $lgPlus2Size i32)
  (local $leftRunStartBuf i32)
  (local $leftRunEndBuf i32)
  (local $i i32)
  (local $16 i32)
  (local $buffer i32)
  (local $hi i32)
  (local $endA i32)
  (local $lenA i32)
  (local $21 i32)
  (local $22 i32)
  (local $top i32)
  (local $startA i32)
  (local $25 i32)
  (local $startB i32)
  (local $endB i32)
  (local $lenB i32)
  (local $29 i32)
  (local $30 i32)
  (local $k i32)
  (local $i|32 i32)
  (local $33 i32)
  (local $start i32)
  (local $i|35 i32)
  (local $36 i32)
  (local $start|37 i32)
  local.get $len
  i32.const 48
  i32.le_s
  if
   local.get $len
   i32.const 1
   i32.le_s
   if
    return
   end
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   block $break|0
    block $case1|0
     block $case0|0
      local.get $len
      local.set $3
      local.get $3
      i32.const 3
      i32.eq
      br_if $case0|0
      local.get $3
      i32.const 2
      i32.eq
      br_if $case1|0
      br $break|0
     end
     local.get $ptr
     i32.load $0
     local.set $a
     local.get $ptr
     i32.load $0 offset=4
     local.set $b
     local.get $a
     local.get $b
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $c
     local.get $ptr
     local.get $b
     local.get $a
     local.get $c
     select
     i32.store $0
     local.get $a
     local.get $b
     local.get $c
     select
     local.set $a
     local.get $ptr
     i32.load $0 offset=8
     local.set $b
     local.get $a
     local.get $b
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $c
     local.get $ptr
     local.get $b
     local.get $a
     local.get $c
     select
     i32.store $0 offset=4
     local.get $ptr
     local.get $a
     local.get $b
     local.get $c
     select
     i32.store $0 offset=8
    end
    local.get $ptr
    i32.load $0
    local.set $a|7
    local.get $ptr
    i32.load $0 offset=4
    local.set $b|8
    local.get $a|7
    local.get $b|8
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.gt_s
    local.set $c|9
    local.get $ptr
    local.get $b|8
    local.get $a|7
    local.get $c|9
    select
    i32.store $0
    local.get $ptr
    local.get $a|7
    local.get $b|8
    local.get $c|9
    select
    i32.store $0 offset=4
    return
   end
   local.get $ptr
   i32.const 0
   local.get $len
   i32.const 1
   i32.sub
   i32.const 0
   local.get $comparator
   call $~lib/util/sort/insertionSort<std/array/Dim>
   return
  end
  local.get $len
  local.set $n
  i32.const 31
  local.get $n
  i32.clz
  i32.sub
  i32.const 2
  i32.add
  local.set $lgPlus2
  local.get $lgPlus2
  i32.const 2
  i32.shl
  local.set $lgPlus2Size
  local.get $lgPlus2Size
  i32.const 1
  i32.shl
  call $~lib/rt/stub/__alloc
  local.set $leftRunStartBuf
  local.get $leftRunStartBuf
  local.get $lgPlus2Size
  i32.add
  local.set $leftRunEndBuf
  i32.const 0
  local.set $i
  loop $for-loop|1
   local.get $i
   local.get $lgPlus2
   i32.lt_u
   local.set $16
   local.get $16
   if
    local.get $leftRunStartBuf
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.const -1
    i32.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|1
   end
  end
  local.get $len
  i32.const 2
  i32.shl
  call $~lib/rt/stub/__alloc
  local.set $buffer
  local.get $len
  i32.const 1
  i32.sub
  local.set $hi
  local.get $ptr
  i32.const 0
  local.get $hi
  local.get $comparator
  call $~lib/util/sort/extendRunRight<std/array/Dim>
  local.set $endA
  local.get $endA
  i32.const 1
  i32.add
  local.set $lenA
  local.get $lenA
  i32.const 32
  i32.lt_s
  if
   local.get $hi
   local.tee $21
   i32.const 32
   i32.const 1
   i32.sub
   local.tee $22
   local.get $21
   local.get $22
   i32.lt_s
   select
   local.set $endA
   local.get $ptr
   i32.const 0
   local.get $endA
   local.get $lenA
   local.get $comparator
   call $~lib/util/sort/insertionSort<std/array/Dim>
  end
  i32.const 0
  local.set $top
  i32.const 0
  local.set $startA
  loop $while-continue|2
   local.get $endA
   local.get $hi
   i32.lt_s
   local.set $25
   local.get $25
   if
    local.get $endA
    i32.const 1
    i32.add
    local.set $startB
    local.get $ptr
    local.get $startB
    local.get $hi
    local.get $comparator
    call $~lib/util/sort/extendRunRight<std/array/Dim>
    local.set $endB
    local.get $endB
    local.get $startB
    i32.sub
    i32.const 1
    i32.add
    local.set $lenB
    local.get $lenB
    i32.const 32
    i32.lt_s
    if
     local.get $hi
     local.tee $29
     local.get $startB
     i32.const 32
     i32.add
     i32.const 1
     i32.sub
     local.tee $30
     local.get $29
     local.get $30
     i32.lt_s
     select
     local.set $endB
     local.get $ptr
     local.get $startB
     local.get $endB
     local.get $lenB
     local.get $comparator
     call $~lib/util/sort/insertionSort<std/array/Dim>
    end
    i32.const 0
    local.get $hi
    local.get $startA
    local.get $startB
    local.get $endB
    call $~lib/util/sort/nodePower
    local.set $k
    local.get $top
    local.set $i|32
    loop $for-loop|3
     local.get $i|32
     local.get $k
     i32.gt_u
     local.set $33
     local.get $33
     if
      local.get $leftRunStartBuf
      local.get $i|32
      i32.const 2
      i32.shl
      i32.add
      i32.load $0
      local.set $start
      local.get $start
      i32.const -1
      i32.ne
      if
       local.get $ptr
       local.get $start
       local.get $leftRunEndBuf
       local.get $i|32
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       i32.const 1
       i32.add
       local.get $endA
       local.get $buffer
       local.get $comparator
       call $~lib/util/sort/mergeRuns<std/array/Dim>
       local.get $start
       local.set $startA
       local.get $leftRunStartBuf
       local.get $i|32
       i32.const 2
       i32.shl
       i32.add
       i32.const -1
       i32.store $0
      end
      local.get $i|32
      i32.const 1
      i32.sub
      local.set $i|32
      br $for-loop|3
     end
    end
    local.get $leftRunStartBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $startA
    i32.store $0
    local.get $leftRunEndBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $endA
    i32.store $0
    local.get $startB
    local.set $startA
    local.get $endB
    local.set $endA
    local.get $k
    local.set $top
    br $while-continue|2
   end
  end
  local.get $top
  local.set $i|35
  loop $for-loop|4
   local.get $i|35
   i32.const 0
   i32.ne
   local.set $36
   local.get $36
   if
    local.get $leftRunStartBuf
    local.get $i|35
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $start|37
    local.get $start|37
    i32.const -1
    i32.ne
    if
     local.get $ptr
     local.get $start|37
     local.get $leftRunEndBuf
     local.get $i|35
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 1
     i32.add
     local.get $hi
     local.get $buffer
     local.get $comparator
     call $~lib/util/sort/mergeRuns<std/array/Dim>
    end
    local.get $i|35
    i32.const 1
    i32.sub
    local.set $i|35
    br $for-loop|4
   end
  end
  local.get $buffer
  call $~lib/rt/stub/__free
  local.get $leftRunStartBuf
  call $~lib/rt/stub/__free
 )
 (func $~lib/array/Array<std/array/Dim>#sort (type $i32_i32_=>_i32) (param $this i32) (param $comparator i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  i32.load $0 offset=12
  local.get $comparator
  call $~lib/util/sort/SORT<std/array/Dim>
  local.get $this
 )
 (func $~lib/array/Array<std/array/Dim>#get:length (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/array/Array<std/array/Dim>#__get (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  local.get $index
  local.get $this
  i32.load $0 offset=12
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.set $value
  i32.const 1
  drop
  i32.const 0
  i32.eqz
  drop
  local.get $value
  i32.eqz
  if
   unreachable
  end
  local.get $value
 )
 (func $start:std/array~anonymous|48 (type $i32_i32_=>_i32) (param $a i32) (param $b i32) (result i32)
  local.get $a
  local.get $b
  i32.sub
 )
 (func $start:std/array~anonymous|49 (type $i32_i32_=>_i32) (param $a i32) (param $b i32) (result i32)
  local.get $b
  local.get $a
  i32.sub
 )
 (func $start:std/array~anonymous|50 (type $i32_i32_=>_i32) (param $a i32) (param $b i32) (result i32)
  local.get $a
  local.get $b
  i32.sub
 )
 (func $start:std/array~anonymous|51 (type $i32_i32_=>_i32) (param $a i32) (param $b i32) (result i32)
  local.get $b
  local.get $a
  i32.sub
 )
 (func $~lib/array/Array<~lib/array/Array<i32>>#set:buffer (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $~lib/array/Array<~lib/array/Array<i32>>#set:dataStart (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=4
 )
 (func $~lib/array/Array<~lib/array/Array<i32>>#set:byteLength (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=8
 )
 (func $~lib/array/Array<~lib/array/Array<i32>>#set:length_ (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=12
 )
 (func $~lib/array/Array<~lib/array/Array<i32>>#constructor (type $i32_i32_=>_i32) (param $this i32) (param $length i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $bufferSize i32)
  (local $buffer i32)
  local.get $this
  i32.eqz
  if
   i32.const 16
   i32.const 29
   call $~lib/rt/stub/__new
   local.set $this
  end
  local.get $this
  i32.const 0
  call $~lib/array/Array<~lib/array/Array<i32>>#set:buffer
  local.get $this
  i32.const 0
  call $~lib/array/Array<~lib/array/Array<i32>>#set:dataStart
  local.get $this
  i32.const 0
  call $~lib/array/Array<~lib/array/Array<i32>>#set:byteLength
  local.get $this
  i32.const 0
  call $~lib/array/Array<~lib/array/Array<i32>>#set:length_
  local.get $length
  i32.const 1073741820
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   unreachable
  end
  local.get $length
  local.tee $2
  i32.const 8
  local.tee $3
  local.get $2
  local.get $3
  i32.gt_u
  select
  i32.const 2
  i32.shl
  local.set $bufferSize
  local.get $bufferSize
  i32.const 0
  call $~lib/rt/stub/__new
  local.set $buffer
  i32.const 0
  global.get $~lib/shared/runtime/Runtime.Incremental
  i32.ne
  drop
  local.get $buffer
  i32.const 0
  local.get $bufferSize
  memory.fill $0
  local.get $this
  local.get $buffer
  call $~lib/array/Array<~lib/array/Array<i32>>#set:buffer
  local.get $this
  local.get $buffer
  call $~lib/array/Array<~lib/array/Array<i32>>#set:dataStart
  local.get $this
  local.get $bufferSize
  call $~lib/array/Array<~lib/array/Array<i32>>#set:byteLength
  local.get $this
  local.get $length
  call $~lib/array/Array<~lib/array/Array<i32>>#set:length_
  local.get $this
 )
 (func $~lib/array/Array<~lib/array/Array<i32>>#__uset (type $i32_i32_i32_=>_none) (param $this i32) (param $index i32) (param $value i32)
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store $0
  i32.const 1
  drop
  local.get $this
  local.get $value
  i32.const 1
  call $~lib/rt/stub/__link
 )
 (func $~lib/array/Array<~lib/array/Array<i32>>#__set (type $i32_i32_i32_=>_none) (param $this i32) (param $index i32) (param $value i32)
  local.get $index
  local.get $this
  i32.load $0 offset=12
  i32.ge_u
  if
   local.get $index
   i32.const 0
   i32.lt_s
   if
    unreachable
   end
   local.get $this
   local.get $index
   i32.const 1
   i32.add
   i32.const 2
   i32.const 1
   call $~lib/array/ensureCapacity
   local.get $this
   local.get $index
   i32.const 1
   i32.add
   call $~lib/array/Array<~lib/array/Array<i32>>#set:length_
  end
  local.get $this
  local.get $index
  local.get $value
  call $~lib/array/Array<~lib/array/Array<i32>>#__uset
 )
 (func $start:std/array~anonymous|52 (type $i32_i32_=>_i32) (param $a i32) (param $b i32) (result i32)
  local.get $a
  i32.const 0
  call $~lib/array/Array<i32>#__get
  local.get $b
  i32.const 0
  call $~lib/array/Array<i32>#__get
  i32.sub
 )
 (func $~lib/util/sort/insertionSort<~lib/array/Array<i32>> (type $i32_i32_i32_i32_i32_=>_none) (param $ptr i32) (param $left i32) (param $right i32) (param $presorted i32) (param $comparator i32)
  (local $range i32)
  (local $i i32)
  (local $7 i32)
  (local $a i32)
  (local $b i32)
  (local $min i32)
  (local $max i32)
  (local $j i32)
  (local $13 i32)
  (local $14 i32)
  i32.const 0
  i32.const 1
  i32.ge_s
  drop
  local.get $right
  local.get $left
  i32.sub
  i32.const 1
  i32.add
  local.set $range
  local.get $left
  local.get $range
  i32.const 1
  i32.and
  local.get $presorted
  local.get $range
  local.get $presorted
  i32.sub
  i32.const 1
  i32.and
  i32.sub
  local.get $presorted
  i32.const 0
  i32.eq
  select
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $right
   i32.le_s
   local.set $7
   local.get $7
   if
    local.get $ptr
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $a
    local.get $ptr
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0 offset=4
    local.set $b
    local.get $b
    local.set $min
    local.get $a
    local.set $max
    local.get $a
    local.get $b
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.le_s
    if
     local.get $a
     local.set $min
     local.get $b
     local.set $max
    end
    local.get $i
    i32.const 1
    i32.sub
    local.set $j
    block $while-break|1
     loop $while-continue|1
      local.get $j
      local.get $left
      i32.ge_s
      local.set $13
      local.get $13
      if
       local.get $ptr
       local.get $j
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       local.set $a
       local.get $a
       local.get $max
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $j
        i32.const 2
        i32.shl
        i32.add
        local.get $a
        i32.store $0 offset=8
        local.get $j
        i32.const 1
        i32.sub
        local.set $j
       else
        br $while-break|1
       end
       br $while-continue|1
      end
     end
    end
    local.get $ptr
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    local.get $max
    i32.store $0 offset=8
    block $while-break|2
     loop $while-continue|2
      local.get $j
      local.get $left
      i32.ge_s
      local.set $14
      local.get $14
      if
       local.get $ptr
       local.get $j
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       local.set $a
       local.get $a
       local.get $min
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $j
        i32.const 2
        i32.shl
        i32.add
        local.get $a
        i32.store $0 offset=4
        local.get $j
        i32.const 1
        i32.sub
        local.set $j
       else
        br $while-break|2
       end
       br $while-continue|2
      end
     end
    end
    local.get $ptr
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    local.get $min
    i32.store $0 offset=4
    local.get $i
    i32.const 2
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/util/sort/extendRunRight<~lib/array/Array<i32>> (type $i32_i32_i32_i32_=>_i32) (param $ptr i32) (param $i i32) (param $right i32) (param $comparator i32) (result i32)
  (local $j i32)
  (local $5 i32)
  (local $k i32)
  (local $7 i32)
  (local $tmp i32)
  (local $9 i32)
  local.get $i
  local.get $right
  i32.eq
  if
   local.get $i
   return
  end
  local.get $i
  local.set $j
  local.get $ptr
  local.get $j
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.get $ptr
  local.get $j
  i32.const 1
  i32.add
  local.tee $j
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  i32.const 2
  global.set $~argumentsLength
  local.get $comparator
  i32.load $0
  call_indirect $0 (type $i32_i32_=>_i32)
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     i32.load $0 offset=4
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 31
     i32.shr_u
    else
     i32.const 0
    end
    local.set $5
    local.get $5
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|0
    end
   end
   local.get $j
   local.set $k
   loop $while-continue|1
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     local.get $ptr
     local.get $i
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.set $tmp
     local.get $ptr
     local.get $i
     i32.const 2
     i32.shl
     i32.add
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     local.get $tmp
     i32.store $0
     local.get $k
     i32.const 1
     i32.sub
     local.set $k
     br $while-continue|1
    end
   end
  else
   loop $while-continue|2
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     i32.load $0 offset=4
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.ge_s
    else
     i32.const 0
    end
    local.set $9
    local.get $9
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|2
    end
   end
  end
  local.get $j
 )
 (func $~lib/util/sort/mergeRuns<~lib/array/Array<i32>> (type $i32_i32_i32_i32_i32_i32_=>_none) (param $ptr i32) (param $l i32) (param $m i32) (param $r i32) (param $buffer i32) (param $comparator i32)
  (local $i i32)
  (local $j i32)
  (local $t i32)
  (local $9 i32)
  (local $10 i32)
  (local $k i32)
  (local $12 i32)
  (local $a i32)
  (local $b i32)
  local.get $m
  i32.const 1
  i32.sub
  local.set $m
  local.get $r
  local.get $m
  i32.add
  local.set $t
  local.get $m
  i32.const 1
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $l
   i32.gt_s
   local.set $9
   local.get $9
   if
    local.get $buffer
    local.get $i
    i32.const 1
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    local.get $ptr
    local.get $i
    i32.const 1
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    i32.store $0
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  local.get $m
  local.set $j
  loop $for-loop|1
   local.get $j
   local.get $r
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $buffer
    local.get $t
    local.get $j
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    local.get $ptr
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    i32.load $0 offset=4
    i32.store $0
    local.get $j
    i32.const 1
    i32.add
    local.set $j
    br $for-loop|1
   end
  end
  local.get $l
  local.set $k
  loop $for-loop|2
   local.get $k
   local.get $r
   i32.le_s
   local.set $12
   local.get $12
   if
    local.get $buffer
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $a
    local.get $buffer
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $b
    local.get $a
    local.get $b
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.lt_s
    if
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     local.get $a
     i32.store $0
     local.get $j
     i32.const 1
     i32.sub
     local.set $j
    else
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     local.get $b
     i32.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
    end
    local.get $k
    i32.const 1
    i32.add
    local.set $k
    br $for-loop|2
   end
  end
 )
 (func $~lib/util/sort/SORT<~lib/array/Array<i32>> (type $i32_i32_i32_=>_none) (param $ptr i32) (param $len i32) (param $comparator i32)
  (local $3 i32)
  (local $a i32)
  (local $b i32)
  (local $c i32)
  (local $a|7 i32)
  (local $b|8 i32)
  (local $c|9 i32)
  (local $n i32)
  (local $lgPlus2 i32)
  (local $lgPlus2Size i32)
  (local $leftRunStartBuf i32)
  (local $leftRunEndBuf i32)
  (local $i i32)
  (local $16 i32)
  (local $buffer i32)
  (local $hi i32)
  (local $endA i32)
  (local $lenA i32)
  (local $21 i32)
  (local $22 i32)
  (local $top i32)
  (local $startA i32)
  (local $25 i32)
  (local $startB i32)
  (local $endB i32)
  (local $lenB i32)
  (local $29 i32)
  (local $30 i32)
  (local $k i32)
  (local $i|32 i32)
  (local $33 i32)
  (local $start i32)
  (local $i|35 i32)
  (local $36 i32)
  (local $start|37 i32)
  local.get $len
  i32.const 48
  i32.le_s
  if
   local.get $len
   i32.const 1
   i32.le_s
   if
    return
   end
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   block $break|0
    block $case1|0
     block $case0|0
      local.get $len
      local.set $3
      local.get $3
      i32.const 3
      i32.eq
      br_if $case0|0
      local.get $3
      i32.const 2
      i32.eq
      br_if $case1|0
      br $break|0
     end
     local.get $ptr
     i32.load $0
     local.set $a
     local.get $ptr
     i32.load $0 offset=4
     local.set $b
     local.get $a
     local.get $b
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $c
     local.get $ptr
     local.get $b
     local.get $a
     local.get $c
     select
     i32.store $0
     local.get $a
     local.get $b
     local.get $c
     select
     local.set $a
     local.get $ptr
     i32.load $0 offset=8
     local.set $b
     local.get $a
     local.get $b
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $c
     local.get $ptr
     local.get $b
     local.get $a
     local.get $c
     select
     i32.store $0 offset=4
     local.get $ptr
     local.get $a
     local.get $b
     local.get $c
     select
     i32.store $0 offset=8
    end
    local.get $ptr
    i32.load $0
    local.set $a|7
    local.get $ptr
    i32.load $0 offset=4
    local.set $b|8
    local.get $a|7
    local.get $b|8
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.gt_s
    local.set $c|9
    local.get $ptr
    local.get $b|8
    local.get $a|7
    local.get $c|9
    select
    i32.store $0
    local.get $ptr
    local.get $a|7
    local.get $b|8
    local.get $c|9
    select
    i32.store $0 offset=4
    return
   end
   local.get $ptr
   i32.const 0
   local.get $len
   i32.const 1
   i32.sub
   i32.const 0
   local.get $comparator
   call $~lib/util/sort/insertionSort<~lib/array/Array<i32>>
   return
  end
  local.get $len
  local.set $n
  i32.const 31
  local.get $n
  i32.clz
  i32.sub
  i32.const 2
  i32.add
  local.set $lgPlus2
  local.get $lgPlus2
  i32.const 2
  i32.shl
  local.set $lgPlus2Size
  local.get $lgPlus2Size
  i32.const 1
  i32.shl
  call $~lib/rt/stub/__alloc
  local.set $leftRunStartBuf
  local.get $leftRunStartBuf
  local.get $lgPlus2Size
  i32.add
  local.set $leftRunEndBuf
  i32.const 0
  local.set $i
  loop $for-loop|1
   local.get $i
   local.get $lgPlus2
   i32.lt_u
   local.set $16
   local.get $16
   if
    local.get $leftRunStartBuf
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.const -1
    i32.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|1
   end
  end
  local.get $len
  i32.const 2
  i32.shl
  call $~lib/rt/stub/__alloc
  local.set $buffer
  local.get $len
  i32.const 1
  i32.sub
  local.set $hi
  local.get $ptr
  i32.const 0
  local.get $hi
  local.get $comparator
  call $~lib/util/sort/extendRunRight<~lib/array/Array<i32>>
  local.set $endA
  local.get $endA
  i32.const 1
  i32.add
  local.set $lenA
  local.get $lenA
  i32.const 32
  i32.lt_s
  if
   local.get $hi
   local.tee $21
   i32.const 32
   i32.const 1
   i32.sub
   local.tee $22
   local.get $21
   local.get $22
   i32.lt_s
   select
   local.set $endA
   local.get $ptr
   i32.const 0
   local.get $endA
   local.get $lenA
   local.get $comparator
   call $~lib/util/sort/insertionSort<~lib/array/Array<i32>>
  end
  i32.const 0
  local.set $top
  i32.const 0
  local.set $startA
  loop $while-continue|2
   local.get $endA
   local.get $hi
   i32.lt_s
   local.set $25
   local.get $25
   if
    local.get $endA
    i32.const 1
    i32.add
    local.set $startB
    local.get $ptr
    local.get $startB
    local.get $hi
    local.get $comparator
    call $~lib/util/sort/extendRunRight<~lib/array/Array<i32>>
    local.set $endB
    local.get $endB
    local.get $startB
    i32.sub
    i32.const 1
    i32.add
    local.set $lenB
    local.get $lenB
    i32.const 32
    i32.lt_s
    if
     local.get $hi
     local.tee $29
     local.get $startB
     i32.const 32
     i32.add
     i32.const 1
     i32.sub
     local.tee $30
     local.get $29
     local.get $30
     i32.lt_s
     select
     local.set $endB
     local.get $ptr
     local.get $startB
     local.get $endB
     local.get $lenB
     local.get $comparator
     call $~lib/util/sort/insertionSort<~lib/array/Array<i32>>
    end
    i32.const 0
    local.get $hi
    local.get $startA
    local.get $startB
    local.get $endB
    call $~lib/util/sort/nodePower
    local.set $k
    local.get $top
    local.set $i|32
    loop $for-loop|3
     local.get $i|32
     local.get $k
     i32.gt_u
     local.set $33
     local.get $33
     if
      local.get $leftRunStartBuf
      local.get $i|32
      i32.const 2
      i32.shl
      i32.add
      i32.load $0
      local.set $start
      local.get $start
      i32.const -1
      i32.ne
      if
       local.get $ptr
       local.get $start
       local.get $leftRunEndBuf
       local.get $i|32
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       i32.const 1
       i32.add
       local.get $endA
       local.get $buffer
       local.get $comparator
       call $~lib/util/sort/mergeRuns<~lib/array/Array<i32>>
       local.get $start
       local.set $startA
       local.get $leftRunStartBuf
       local.get $i|32
       i32.const 2
       i32.shl
       i32.add
       i32.const -1
       i32.store $0
      end
      local.get $i|32
      i32.const 1
      i32.sub
      local.set $i|32
      br $for-loop|3
     end
    end
    local.get $leftRunStartBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $startA
    i32.store $0
    local.get $leftRunEndBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $endA
    i32.store $0
    local.get $startB
    local.set $startA
    local.get $endB
    local.set $endA
    local.get $k
    local.set $top
    br $while-continue|2
   end
  end
  local.get $top
  local.set $i|35
  loop $for-loop|4
   local.get $i|35
   i32.const 0
   i32.ne
   local.set $36
   local.get $36
   if
    local.get $leftRunStartBuf
    local.get $i|35
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $start|37
    local.get $start|37
    i32.const -1
    i32.ne
    if
     local.get $ptr
     local.get $start|37
     local.get $leftRunEndBuf
     local.get $i|35
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 1
     i32.add
     local.get $hi
     local.get $buffer
     local.get $comparator
     call $~lib/util/sort/mergeRuns<~lib/array/Array<i32>>
    end
    local.get $i|35
    i32.const 1
    i32.sub
    local.set $i|35
    br $for-loop|4
   end
  end
  local.get $buffer
  call $~lib/rt/stub/__free
  local.get $leftRunStartBuf
  call $~lib/rt/stub/__free
 )
 (func $~lib/array/Array<~lib/array/Array<i32>>#sort (type $i32_i32_=>_i32) (param $this i32) (param $comparator i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  i32.load $0 offset=12
  local.get $comparator
  call $~lib/util/sort/SORT<~lib/array/Array<i32>>
  local.get $this
 )
 (func $~lib/array/Array<~lib/array/Array<i32>>#get:length (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/array/Array<~lib/array/Array<i32>>#__get (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  local.get $index
  local.get $this
  i32.load $0 offset=12
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.set $value
  i32.const 1
  drop
  i32.const 0
  i32.eqz
  drop
  local.get $value
  i32.eqz
  if
   unreachable
  end
  local.get $value
 )
 (func $~lib/array/Array<std/array/Proxy<i32>>#set:buffer (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $~lib/array/Array<std/array/Proxy<i32>>#set:dataStart (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=4
 )
 (func $~lib/array/Array<std/array/Proxy<i32>>#set:byteLength (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=8
 )
 (func $~lib/array/Array<std/array/Proxy<i32>>#set:length_ (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=12
 )
 (func $~lib/array/Array<std/array/Proxy<i32>>#constructor (type $i32_i32_=>_i32) (param $this i32) (param $length i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $bufferSize i32)
  (local $buffer i32)
  local.get $this
  i32.eqz
  if
   i32.const 16
   i32.const 32
   call $~lib/rt/stub/__new
   local.set $this
  end
  local.get $this
  i32.const 0
  call $~lib/array/Array<std/array/Proxy<i32>>#set:buffer
  local.get $this
  i32.const 0
  call $~lib/array/Array<std/array/Proxy<i32>>#set:dataStart
  local.get $this
  i32.const 0
  call $~lib/array/Array<std/array/Proxy<i32>>#set:byteLength
  local.get $this
  i32.const 0
  call $~lib/array/Array<std/array/Proxy<i32>>#set:length_
  local.get $length
  i32.const 1073741820
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   unreachable
  end
  local.get $length
  local.tee $2
  i32.const 8
  local.tee $3
  local.get $2
  local.get $3
  i32.gt_u
  select
  i32.const 2
  i32.shl
  local.set $bufferSize
  local.get $bufferSize
  i32.const 0
  call $~lib/rt/stub/__new
  local.set $buffer
  i32.const 0
  global.get $~lib/shared/runtime/Runtime.Incremental
  i32.ne
  drop
  local.get $buffer
  i32.const 0
  local.get $bufferSize
  memory.fill $0
  local.get $this
  local.get $buffer
  call $~lib/array/Array<std/array/Proxy<i32>>#set:buffer
  local.get $this
  local.get $buffer
  call $~lib/array/Array<std/array/Proxy<i32>>#set:dataStart
  local.get $this
  local.get $bufferSize
  call $~lib/array/Array<std/array/Proxy<i32>>#set:byteLength
  local.get $this
  local.get $length
  call $~lib/array/Array<std/array/Proxy<i32>>#set:length_
  local.get $this
 )
 (func $std/array/Proxy<i32>#set:x (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0
 )
 (func $~lib/array/Array<std/array/Proxy<i32>>#__uset (type $i32_i32_i32_=>_none) (param $this i32) (param $index i32) (param $value i32)
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store $0
  i32.const 1
  drop
  local.get $this
  local.get $value
  i32.const 1
  call $~lib/rt/stub/__link
 )
 (func $~lib/array/Array<std/array/Proxy<i32>>#__set (type $i32_i32_i32_=>_none) (param $this i32) (param $index i32) (param $value i32)
  local.get $index
  local.get $this
  i32.load $0 offset=12
  i32.ge_u
  if
   local.get $index
   i32.const 0
   i32.lt_s
   if
    unreachable
   end
   local.get $this
   local.get $index
   i32.const 1
   i32.add
   i32.const 2
   i32.const 1
   call $~lib/array/ensureCapacity
   local.get $this
   local.get $index
   i32.const 1
   i32.add
   call $~lib/array/Array<std/array/Proxy<i32>>#set:length_
  end
  local.get $this
  local.get $index
  local.get $value
  call $~lib/array/Array<std/array/Proxy<i32>>#__uset
 )
 (func $start:std/array~anonymous|53 (type $i32_i32_=>_i32) (param $a i32) (param $b i32) (result i32)
  local.get $a
  i32.load $0
  local.get $b
  i32.load $0
  i32.sub
 )
 (func $~lib/util/sort/insertionSort<std/array/Proxy<i32>> (type $i32_i32_i32_i32_i32_=>_none) (param $ptr i32) (param $left i32) (param $right i32) (param $presorted i32) (param $comparator i32)
  (local $range i32)
  (local $i i32)
  (local $7 i32)
  (local $a i32)
  (local $b i32)
  (local $min i32)
  (local $max i32)
  (local $j i32)
  (local $13 i32)
  (local $14 i32)
  i32.const 0
  i32.const 1
  i32.ge_s
  drop
  local.get $right
  local.get $left
  i32.sub
  i32.const 1
  i32.add
  local.set $range
  local.get $left
  local.get $range
  i32.const 1
  i32.and
  local.get $presorted
  local.get $range
  local.get $presorted
  i32.sub
  i32.const 1
  i32.and
  i32.sub
  local.get $presorted
  i32.const 0
  i32.eq
  select
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $right
   i32.le_s
   local.set $7
   local.get $7
   if
    local.get $ptr
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $a
    local.get $ptr
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0 offset=4
    local.set $b
    local.get $b
    local.set $min
    local.get $a
    local.set $max
    local.get $a
    local.get $b
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.le_s
    if
     local.get $a
     local.set $min
     local.get $b
     local.set $max
    end
    local.get $i
    i32.const 1
    i32.sub
    local.set $j
    block $while-break|1
     loop $while-continue|1
      local.get $j
      local.get $left
      i32.ge_s
      local.set $13
      local.get $13
      if
       local.get $ptr
       local.get $j
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       local.set $a
       local.get $a
       local.get $max
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $j
        i32.const 2
        i32.shl
        i32.add
        local.get $a
        i32.store $0 offset=8
        local.get $j
        i32.const 1
        i32.sub
        local.set $j
       else
        br $while-break|1
       end
       br $while-continue|1
      end
     end
    end
    local.get $ptr
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    local.get $max
    i32.store $0 offset=8
    block $while-break|2
     loop $while-continue|2
      local.get $j
      local.get $left
      i32.ge_s
      local.set $14
      local.get $14
      if
       local.get $ptr
       local.get $j
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       local.set $a
       local.get $a
       local.get $min
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $j
        i32.const 2
        i32.shl
        i32.add
        local.get $a
        i32.store $0 offset=4
        local.get $j
        i32.const 1
        i32.sub
        local.set $j
       else
        br $while-break|2
       end
       br $while-continue|2
      end
     end
    end
    local.get $ptr
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    local.get $min
    i32.store $0 offset=4
    local.get $i
    i32.const 2
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/util/sort/extendRunRight<std/array/Proxy<i32>> (type $i32_i32_i32_i32_=>_i32) (param $ptr i32) (param $i i32) (param $right i32) (param $comparator i32) (result i32)
  (local $j i32)
  (local $5 i32)
  (local $k i32)
  (local $7 i32)
  (local $tmp i32)
  (local $9 i32)
  local.get $i
  local.get $right
  i32.eq
  if
   local.get $i
   return
  end
  local.get $i
  local.set $j
  local.get $ptr
  local.get $j
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.get $ptr
  local.get $j
  i32.const 1
  i32.add
  local.tee $j
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  i32.const 2
  global.set $~argumentsLength
  local.get $comparator
  i32.load $0
  call_indirect $0 (type $i32_i32_=>_i32)
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     i32.load $0 offset=4
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 31
     i32.shr_u
    else
     i32.const 0
    end
    local.set $5
    local.get $5
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|0
    end
   end
   local.get $j
   local.set $k
   loop $while-continue|1
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     local.get $ptr
     local.get $i
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.set $tmp
     local.get $ptr
     local.get $i
     i32.const 2
     i32.shl
     i32.add
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     local.get $tmp
     i32.store $0
     local.get $k
     i32.const 1
     i32.sub
     local.set $k
     br $while-continue|1
    end
   end
  else
   loop $while-continue|2
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     i32.load $0 offset=4
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.ge_s
    else
     i32.const 0
    end
    local.set $9
    local.get $9
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|2
    end
   end
  end
  local.get $j
 )
 (func $~lib/util/sort/mergeRuns<std/array/Proxy<i32>> (type $i32_i32_i32_i32_i32_i32_=>_none) (param $ptr i32) (param $l i32) (param $m i32) (param $r i32) (param $buffer i32) (param $comparator i32)
  (local $i i32)
  (local $j i32)
  (local $t i32)
  (local $9 i32)
  (local $10 i32)
  (local $k i32)
  (local $12 i32)
  (local $a i32)
  (local $b i32)
  local.get $m
  i32.const 1
  i32.sub
  local.set $m
  local.get $r
  local.get $m
  i32.add
  local.set $t
  local.get $m
  i32.const 1
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $l
   i32.gt_s
   local.set $9
   local.get $9
   if
    local.get $buffer
    local.get $i
    i32.const 1
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    local.get $ptr
    local.get $i
    i32.const 1
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    i32.store $0
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  local.get $m
  local.set $j
  loop $for-loop|1
   local.get $j
   local.get $r
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $buffer
    local.get $t
    local.get $j
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    local.get $ptr
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    i32.load $0 offset=4
    i32.store $0
    local.get $j
    i32.const 1
    i32.add
    local.set $j
    br $for-loop|1
   end
  end
  local.get $l
  local.set $k
  loop $for-loop|2
   local.get $k
   local.get $r
   i32.le_s
   local.set $12
   local.get $12
   if
    local.get $buffer
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $a
    local.get $buffer
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $b
    local.get $a
    local.get $b
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.lt_s
    if
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     local.get $a
     i32.store $0
     local.get $j
     i32.const 1
     i32.sub
     local.set $j
    else
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     local.get $b
     i32.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
    end
    local.get $k
    i32.const 1
    i32.add
    local.set $k
    br $for-loop|2
   end
  end
 )
 (func $~lib/util/sort/SORT<std/array/Proxy<i32>> (type $i32_i32_i32_=>_none) (param $ptr i32) (param $len i32) (param $comparator i32)
  (local $3 i32)
  (local $a i32)
  (local $b i32)
  (local $c i32)
  (local $a|7 i32)
  (local $b|8 i32)
  (local $c|9 i32)
  (local $n i32)
  (local $lgPlus2 i32)
  (local $lgPlus2Size i32)
  (local $leftRunStartBuf i32)
  (local $leftRunEndBuf i32)
  (local $i i32)
  (local $16 i32)
  (local $buffer i32)
  (local $hi i32)
  (local $endA i32)
  (local $lenA i32)
  (local $21 i32)
  (local $22 i32)
  (local $top i32)
  (local $startA i32)
  (local $25 i32)
  (local $startB i32)
  (local $endB i32)
  (local $lenB i32)
  (local $29 i32)
  (local $30 i32)
  (local $k i32)
  (local $i|32 i32)
  (local $33 i32)
  (local $start i32)
  (local $i|35 i32)
  (local $36 i32)
  (local $start|37 i32)
  local.get $len
  i32.const 48
  i32.le_s
  if
   local.get $len
   i32.const 1
   i32.le_s
   if
    return
   end
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   block $break|0
    block $case1|0
     block $case0|0
      local.get $len
      local.set $3
      local.get $3
      i32.const 3
      i32.eq
      br_if $case0|0
      local.get $3
      i32.const 2
      i32.eq
      br_if $case1|0
      br $break|0
     end
     local.get $ptr
     i32.load $0
     local.set $a
     local.get $ptr
     i32.load $0 offset=4
     local.set $b
     local.get $a
     local.get $b
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $c
     local.get $ptr
     local.get $b
     local.get $a
     local.get $c
     select
     i32.store $0
     local.get $a
     local.get $b
     local.get $c
     select
     local.set $a
     local.get $ptr
     i32.load $0 offset=8
     local.set $b
     local.get $a
     local.get $b
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $c
     local.get $ptr
     local.get $b
     local.get $a
     local.get $c
     select
     i32.store $0 offset=4
     local.get $ptr
     local.get $a
     local.get $b
     local.get $c
     select
     i32.store $0 offset=8
    end
    local.get $ptr
    i32.load $0
    local.set $a|7
    local.get $ptr
    i32.load $0 offset=4
    local.set $b|8
    local.get $a|7
    local.get $b|8
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.gt_s
    local.set $c|9
    local.get $ptr
    local.get $b|8
    local.get $a|7
    local.get $c|9
    select
    i32.store $0
    local.get $ptr
    local.get $a|7
    local.get $b|8
    local.get $c|9
    select
    i32.store $0 offset=4
    return
   end
   local.get $ptr
   i32.const 0
   local.get $len
   i32.const 1
   i32.sub
   i32.const 0
   local.get $comparator
   call $~lib/util/sort/insertionSort<std/array/Proxy<i32>>
   return
  end
  local.get $len
  local.set $n
  i32.const 31
  local.get $n
  i32.clz
  i32.sub
  i32.const 2
  i32.add
  local.set $lgPlus2
  local.get $lgPlus2
  i32.const 2
  i32.shl
  local.set $lgPlus2Size
  local.get $lgPlus2Size
  i32.const 1
  i32.shl
  call $~lib/rt/stub/__alloc
  local.set $leftRunStartBuf
  local.get $leftRunStartBuf
  local.get $lgPlus2Size
  i32.add
  local.set $leftRunEndBuf
  i32.const 0
  local.set $i
  loop $for-loop|1
   local.get $i
   local.get $lgPlus2
   i32.lt_u
   local.set $16
   local.get $16
   if
    local.get $leftRunStartBuf
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.const -1
    i32.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|1
   end
  end
  local.get $len
  i32.const 2
  i32.shl
  call $~lib/rt/stub/__alloc
  local.set $buffer
  local.get $len
  i32.const 1
  i32.sub
  local.set $hi
  local.get $ptr
  i32.const 0
  local.get $hi
  local.get $comparator
  call $~lib/util/sort/extendRunRight<std/array/Proxy<i32>>
  local.set $endA
  local.get $endA
  i32.const 1
  i32.add
  local.set $lenA
  local.get $lenA
  i32.const 32
  i32.lt_s
  if
   local.get $hi
   local.tee $21
   i32.const 32
   i32.const 1
   i32.sub
   local.tee $22
   local.get $21
   local.get $22
   i32.lt_s
   select
   local.set $endA
   local.get $ptr
   i32.const 0
   local.get $endA
   local.get $lenA
   local.get $comparator
   call $~lib/util/sort/insertionSort<std/array/Proxy<i32>>
  end
  i32.const 0
  local.set $top
  i32.const 0
  local.set $startA
  loop $while-continue|2
   local.get $endA
   local.get $hi
   i32.lt_s
   local.set $25
   local.get $25
   if
    local.get $endA
    i32.const 1
    i32.add
    local.set $startB
    local.get $ptr
    local.get $startB
    local.get $hi
    local.get $comparator
    call $~lib/util/sort/extendRunRight<std/array/Proxy<i32>>
    local.set $endB
    local.get $endB
    local.get $startB
    i32.sub
    i32.const 1
    i32.add
    local.set $lenB
    local.get $lenB
    i32.const 32
    i32.lt_s
    if
     local.get $hi
     local.tee $29
     local.get $startB
     i32.const 32
     i32.add
     i32.const 1
     i32.sub
     local.tee $30
     local.get $29
     local.get $30
     i32.lt_s
     select
     local.set $endB
     local.get $ptr
     local.get $startB
     local.get $endB
     local.get $lenB
     local.get $comparator
     call $~lib/util/sort/insertionSort<std/array/Proxy<i32>>
    end
    i32.const 0
    local.get $hi
    local.get $startA
    local.get $startB
    local.get $endB
    call $~lib/util/sort/nodePower
    local.set $k
    local.get $top
    local.set $i|32
    loop $for-loop|3
     local.get $i|32
     local.get $k
     i32.gt_u
     local.set $33
     local.get $33
     if
      local.get $leftRunStartBuf
      local.get $i|32
      i32.const 2
      i32.shl
      i32.add
      i32.load $0
      local.set $start
      local.get $start
      i32.const -1
      i32.ne
      if
       local.get $ptr
       local.get $start
       local.get $leftRunEndBuf
       local.get $i|32
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       i32.const 1
       i32.add
       local.get $endA
       local.get $buffer
       local.get $comparator
       call $~lib/util/sort/mergeRuns<std/array/Proxy<i32>>
       local.get $start
       local.set $startA
       local.get $leftRunStartBuf
       local.get $i|32
       i32.const 2
       i32.shl
       i32.add
       i32.const -1
       i32.store $0
      end
      local.get $i|32
      i32.const 1
      i32.sub
      local.set $i|32
      br $for-loop|3
     end
    end
    local.get $leftRunStartBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $startA
    i32.store $0
    local.get $leftRunEndBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $endA
    i32.store $0
    local.get $startB
    local.set $startA
    local.get $endB
    local.set $endA
    local.get $k
    local.set $top
    br $while-continue|2
   end
  end
  local.get $top
  local.set $i|35
  loop $for-loop|4
   local.get $i|35
   i32.const 0
   i32.ne
   local.set $36
   local.get $36
   if
    local.get $leftRunStartBuf
    local.get $i|35
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $start|37
    local.get $start|37
    i32.const -1
    i32.ne
    if
     local.get $ptr
     local.get $start|37
     local.get $leftRunEndBuf
     local.get $i|35
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 1
     i32.add
     local.get $hi
     local.get $buffer
     local.get $comparator
     call $~lib/util/sort/mergeRuns<std/array/Proxy<i32>>
    end
    local.get $i|35
    i32.const 1
    i32.sub
    local.set $i|35
    br $for-loop|4
   end
  end
  local.get $buffer
  call $~lib/rt/stub/__free
  local.get $leftRunStartBuf
  call $~lib/rt/stub/__free
 )
 (func $~lib/array/Array<std/array/Proxy<i32>>#sort (type $i32_i32_=>_i32) (param $this i32) (param $comparator i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  i32.load $0 offset=12
  local.get $comparator
  call $~lib/util/sort/SORT<std/array/Proxy<i32>>
  local.get $this
 )
 (func $~lib/array/Array<std/array/Proxy<i32>>#get:length (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/array/Array<std/array/Proxy<i32>>#__get (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  local.get $index
  local.get $this
  i32.load $0 offset=12
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.set $value
  i32.const 1
  drop
  i32.const 0
  i32.eqz
  drop
  local.get $value
  i32.eqz
  if
   unreachable
  end
  local.get $value
 )
 (func $~lib/array/Array<~lib/array/Array<i32>>#flat (type $i32_=>_i32) (param $this i32) (result i32)
  (local $ptr i32)
  (local $len i32)
  (local $size i32)
  (local $i i32)
  (local $5 i32)
  (local $child i32)
  (local $byteLength i32)
  (local $outBuffer i32)
  (local $outArray i32)
  (local $resultOffset i32)
  (local $i|11 i32)
  (local $12 i32)
  (local $child|13 i32)
  (local $childDataLength i32)
  i32.const 1
  i32.eqz
  drop
  local.get $this
  i32.load $0 offset=4
  local.set $ptr
  local.get $this
  i32.load $0 offset=12
  local.set $len
  i32.const 0
  local.set $size
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $len
   i32.lt_s
   local.set $5
   local.get $5
   if
    local.get $ptr
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $child
    local.get $size
    local.get $child
    i32.const 0
    i32.eq
    if (result i32)
     i32.const 0
    else
     local.get $child
     i32.load $0 offset=12
    end
    i32.add
    local.set $size
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $size
  i32.const 2
  i32.shl
  local.set $byteLength
  local.get $byteLength
  i32.const 0
  call $~lib/rt/stub/__new
  local.set $outBuffer
  i32.const 16
  i32.const 3
  call $~lib/rt/stub/__new
  local.set $outArray
  local.get $outArray
  local.get $size
  i32.store $0 offset=12
  local.get $outArray
  local.get $byteLength
  i32.store $0 offset=8
  local.get $outArray
  local.get $outBuffer
  i32.store $0 offset=4
  local.get $outArray
  local.get $outBuffer
  i32.store $0
  local.get $outArray
  local.get $outBuffer
  i32.const 0
  call $~lib/rt/stub/__link
  i32.const 0
  local.set $resultOffset
  i32.const 0
  local.set $i|11
  loop $for-loop|1
   local.get $i|11
   local.get $len
   i32.lt_s
   local.set $12
   local.get $12
   if
    block $for-continue|1
     local.get $ptr
     local.get $i|11
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.set $child|13
     local.get $child|13
     i32.eqz
     if
      br $for-continue|1
     end
     local.get $child|13
     i32.load $0 offset=12
     i32.const 2
     i32.shl
     local.set $childDataLength
     local.get $outBuffer
     local.get $resultOffset
     i32.add
     local.get $child|13
     i32.load $0 offset=4
     local.get $childDataLength
     memory.copy $0 $0
     local.get $resultOffset
     local.get $childDataLength
     i32.add
     local.set $resultOffset
    end
    local.get $i|11
    i32.const 1
    i32.add
    local.set $i|11
    br $for-loop|1
   end
  end
  i32.const 0
  drop
  local.get $outArray
 )
 (func $~lib/array/Array<~lib/array/Array<~lib/string/String|null>>#__uset (type $i32_i32_i32_=>_none) (param $this i32) (param $index i32) (param $value i32)
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store $0
  i32.const 1
  drop
  local.get $this
  local.get $value
  i32.const 1
  call $~lib/rt/stub/__link
 )
 (func $~lib/array/Array<~lib/array/Array<~lib/string/String|null>>#flat (type $i32_=>_i32) (param $this i32) (result i32)
  (local $ptr i32)
  (local $len i32)
  (local $size i32)
  (local $i i32)
  (local $5 i32)
  (local $child i32)
  (local $byteLength i32)
  (local $outBuffer i32)
  (local $outArray i32)
  (local $resultOffset i32)
  (local $i|11 i32)
  (local $12 i32)
  (local $child|13 i32)
  (local $childDataLength i32)
  (local $i|15 i32)
  (local $16 i32)
  (local $ref i32)
  i32.const 1
  i32.eqz
  drop
  local.get $this
  i32.load $0 offset=4
  local.set $ptr
  local.get $this
  i32.load $0 offset=12
  local.set $len
  i32.const 0
  local.set $size
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $len
   i32.lt_s
   local.set $5
   local.get $5
   if
    local.get $ptr
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $child
    local.get $size
    local.get $child
    i32.const 0
    i32.eq
    if (result i32)
     i32.const 0
    else
     local.get $child
     i32.load $0 offset=12
    end
    i32.add
    local.set $size
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $size
  i32.const 2
  i32.shl
  local.set $byteLength
  local.get $byteLength
  i32.const 0
  call $~lib/rt/stub/__new
  local.set $outBuffer
  i32.const 16
  i32.const 34
  call $~lib/rt/stub/__new
  local.set $outArray
  local.get $outArray
  local.get $size
  i32.store $0 offset=12
  local.get $outArray
  local.get $byteLength
  i32.store $0 offset=8
  local.get $outArray
  local.get $outBuffer
  i32.store $0 offset=4
  local.get $outArray
  local.get $outBuffer
  i32.store $0
  local.get $outArray
  local.get $outBuffer
  i32.const 0
  call $~lib/rt/stub/__link
  i32.const 0
  local.set $resultOffset
  i32.const 0
  local.set $i|11
  loop $for-loop|1
   local.get $i|11
   local.get $len
   i32.lt_s
   local.set $12
   local.get $12
   if
    block $for-continue|1
     local.get $ptr
     local.get $i|11
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.set $child|13
     local.get $child|13
     i32.eqz
     if
      br $for-continue|1
     end
     local.get $child|13
     i32.load $0 offset=12
     i32.const 2
     i32.shl
     local.set $childDataLength
     local.get $outBuffer
     local.get $resultOffset
     i32.add
     local.get $child|13
     i32.load $0 offset=4
     local.get $childDataLength
     memory.copy $0 $0
     local.get $resultOffset
     local.get $childDataLength
     i32.add
     local.set $resultOffset
    end
    local.get $i|11
    i32.const 1
    i32.add
    local.set $i|11
    br $for-loop|1
   end
  end
  i32.const 1
  drop
  i32.const 0
  local.set $i|15
  loop $for-loop|2
   local.get $i|15
   local.get $size
   i32.lt_s
   local.set $16
   local.get $16
   if
    local.get $outBuffer
    local.get $i|15
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $ref
    local.get $outBuffer
    local.get $ref
    i32.const 1
    call $~lib/rt/stub/__link
    local.get $i|15
    i32.const 1
    i32.add
    local.set $i|15
    br $for-loop|2
   end
  end
  local.get $outArray
 )
 (func $~lib/array/Array<~lib/string/String|null>#get:length (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/array/Array<~lib/string/String|null>#__get (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  local.get $index
  local.get $this
  i32.load $0 offset=12
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.set $value
  i32.const 1
  drop
  i32.const 1
  i32.eqz
  drop
  local.get $value
 )
 (func $~lib/string/String#get:length (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.const 20
  i32.sub
  i32.load $0 offset=8
 )
 (func $start:std/array~anonymous|54 (type $i32_i32_i32_=>_i32) (param $nestedArray i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $nestedArray
  call $~lib/array/Array<i32>#get:length
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $nestedArray
  i32.const 3
  call $~lib/array/Array<i32>#push
  drop
  local.get $nestedArray
  call $~lib/array/Array<i32>#get:length
  i32.const 2
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $nestedArray
 )
 (func $~lib/array/Array<~lib/array/Array<i32>>#map<~lib/array/Array<i32>> (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $len i32)
  (local $out i32)
  (local $outStart i32)
  (local $i i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $result i32)
  local.get $this
  i32.load $0 offset=12
  local.set $len
  local.get $len
  i32.const 2
  i32.const 29
  i32.const 0
  call $~lib/rt/__newArray
  local.set $out
  local.get $out
  i32.load $0 offset=4
  local.set $outStart
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $len
   local.tee $6
   local.get $this
   i32.load $0 offset=12
   local.tee $7
   local.get $6
   local.get $7
   i32.lt_s
   select
   i32.lt_s
   local.set $8
   local.get $8
   if
    local.get $this
    i32.load $0 offset=4
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.get $i
    local.get $this
    i32.const 3
    global.set $~argumentsLength
    local.get $fn
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    local.set $result
    local.get $outStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    local.get $result
    i32.store $0
    i32.const 1
    drop
    local.get $out
    local.get $result
    i32.const 1
    call $~lib/rt/stub/__link
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $out
 )
 (func $~lib/rt/stub/__collect (type $none_=>_none)
  nop
 )
 (func $start:std/array (type $none_=>_none)
  (local $this i32)
  (local $v i32)
  (local $2 i32)
  (local $3 i32)
  (local $arr8 i32)
  (local $5 i32)
  (local $6 i32)
  (local $a i32)
  (local $b i32)
  (local $len i32)
  (local $i i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $a|14 i32)
  (local $b|15 i32)
  (local $len|16 i32)
  (local $i|17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $a|21 i32)
  (local $b|22 i32)
  (local $len|23 i32)
  (local $i|24 i32)
  (local $25 i32)
  (local $26 i32)
  (local $27 i32)
  (local $a|28 i32)
  (local $b|29 i32)
  (local $len|30 i32)
  (local $i|31 i32)
  (local $32 i32)
  (local $33 i32)
  (local $34 i32)
  (local $a|35 i32)
  (local $b|36 i32)
  (local $len|37 i32)
  (local $i|38 i32)
  (local $39 i32)
  (local $40 i32)
  (local $41 i32)
  (local $a|42 i32)
  (local $b|43 i32)
  (local $len|44 i32)
  (local $i|45 i32)
  (local $46 i32)
  (local $47 i32)
  (local $48 i32)
  (local $arr32 i32)
  (local $50 i32)
  (local $51 i32)
  (local $a|52 i32)
  (local $b|53 i32)
  (local $len|54 i32)
  (local $i|55 i32)
  (local $56 i32)
  (local $57 i32)
  (local $58 i32)
  (local $a|59 i32)
  (local $b|60 i32)
  (local $len|61 i32)
  (local $i|62 i32)
  (local $63 i32)
  (local $64 i32)
  (local $65 i32)
  (local $a|66 i32)
  (local $b|67 i32)
  (local $len|68 i32)
  (local $i|69 i32)
  (local $70 i32)
  (local $71 i32)
  (local $72 i32)
  (local $a|73 i32)
  (local $b|74 i32)
  (local $len|75 i32)
  (local $i|76 i32)
  (local $77 i32)
  (local $78 i32)
  (local $79 i32)
  (local $a|80 i32)
  (local $b|81 i32)
  (local $len|82 i32)
  (local $i|83 i32)
  (local $84 i32)
  (local $85 i32)
  (local $86 i32)
  (local $a|87 i32)
  (local $b|88 i32)
  (local $len|89 i32)
  (local $i|90 i32)
  (local $91 i32)
  (local $92 i32)
  (local $93 i32)
  (local $arrf32 i32)
  (local $95 i32)
  (local $96 i32)
  (local $a|97 i32)
  (local $b|98 i32)
  (local $len|99 i32)
  (local $i|100 i32)
  (local $101 i32)
  (local $102 f32)
  (local $103 f32)
  (local $x f64)
  (local $x|105 f64)
  (local $106 i32)
  (local $107 i32)
  (local $a|108 i32)
  (local $b|109 i32)
  (local $len|110 i32)
  (local $i|111 i32)
  (local $112 i32)
  (local $113 f32)
  (local $114 f32)
  (local $x|115 f64)
  (local $x|116 f64)
  (local $117 i32)
  (local $118 i32)
  (local $a|119 i32)
  (local $b|120 i32)
  (local $len|121 i32)
  (local $i|122 i32)
  (local $123 i32)
  (local $124 f32)
  (local $125 f32)
  (local $x|126 f64)
  (local $x|127 f64)
  (local $128 i32)
  (local $129 i32)
  (local $a|130 i32)
  (local $b|131 i32)
  (local $len|132 i32)
  (local $i|133 i32)
  (local $134 i32)
  (local $135 f32)
  (local $136 f32)
  (local $x|137 f64)
  (local $x|138 f64)
  (local $139 i32)
  (local $140 i32)
  (local $a|141 i32)
  (local $b|142 i32)
  (local $len|143 i32)
  (local $i|144 i32)
  (local $145 i32)
  (local $146 f32)
  (local $147 f32)
  (local $x|148 f64)
  (local $x|149 f64)
  (local $150 i32)
  (local $151 i32)
  (local $a|152 i32)
  (local $b|153 i32)
  (local $len|154 i32)
  (local $i|155 i32)
  (local $156 i32)
  (local $157 f32)
  (local $158 f32)
  (local $x|159 f64)
  (local $x|160 f64)
  (local $161 i32)
  (local $162 i32)
  (local $a|163 i32)
  (local $b|164 i32)
  (local $len|165 i32)
  (local $i|166 i32)
  (local $167 i32)
  (local $168 f32)
  (local $169 f32)
  (local $x|170 f64)
  (local $x|171 f64)
  (local $array i32)
  (local $buffer i32)
  (local $array|174 i32)
  (local $buffer|175 i32)
  (local $i|176 i32)
  (local $array|177 i32)
  (local $buffer|178 i32)
  (local $array|179 i32)
  (local $buffer|180 i32)
  (local $array|181 i32)
  (local $buffer|182 i32)
  (local $array|183 i32)
  (local $buffer|184 i32)
  (local $185 i32)
  (local $186 i32)
  (local $this|187 i32)
  (local $v|188 i32)
  (local $this|189 i32)
  (local $v|190 i32)
  (local $arr i32)
  (local $192 i32)
  (local $193 i32)
  (local $arr|194 i32)
  (local $other i32)
  (local $out i32)
  (local $array|197 i32)
  (local $buffer|198 i32)
  (local $199 i32)
  (local $200 i32)
  (local $array|201 i32)
  (local $buffer|202 i32)
  (local $array|203 i32)
  (local $buffer|204 i32)
  (local $205 i32)
  (local $206 i32)
  (local $source i32)
  (local $208 i32)
  (local $209 i32)
  (local $cwArr i32)
  (local $211 i32)
  (local $212 i32)
  (local $a|213 i32)
  (local $b|214 i32)
  (local $len|215 i32)
  (local $i|216 i32)
  (local $217 i32)
  (local $218 i32)
  (local $219 i32)
  (local $220 i32)
  (local $221 i32)
  (local $a|222 i32)
  (local $b|223 i32)
  (local $len|224 i32)
  (local $i|225 i32)
  (local $226 i32)
  (local $227 i32)
  (local $228 i32)
  (local $229 i32)
  (local $230 i32)
  (local $a|231 i32)
  (local $b|232 i32)
  (local $len|233 i32)
  (local $i|234 i32)
  (local $235 i32)
  (local $236 i32)
  (local $237 i32)
  (local $238 i32)
  (local $239 i32)
  (local $a|240 i32)
  (local $b|241 i32)
  (local $len|242 i32)
  (local $i|243 i32)
  (local $244 i32)
  (local $245 i32)
  (local $246 i32)
  (local $247 i32)
  (local $248 i32)
  (local $a|249 i32)
  (local $b|250 i32)
  (local $len|251 i32)
  (local $i|252 i32)
  (local $253 i32)
  (local $254 i32)
  (local $255 i32)
  (local $256 i32)
  (local $257 i32)
  (local $a|258 i32)
  (local $b|259 i32)
  (local $len|260 i32)
  (local $i|261 i32)
  (local $262 i32)
  (local $263 i32)
  (local $264 i32)
  (local $265 i32)
  (local $266 i32)
  (local $a|267 i32)
  (local $b|268 i32)
  (local $len|269 i32)
  (local $i|270 i32)
  (local $271 i32)
  (local $272 i32)
  (local $273 i32)
  (local $274 i32)
  (local $275 i32)
  (local $a|276 i32)
  (local $b|277 i32)
  (local $len|278 i32)
  (local $i|279 i32)
  (local $280 i32)
  (local $281 i32)
  (local $282 i32)
  (local $283 i32)
  (local $284 i32)
  (local $a|285 i32)
  (local $b|286 i32)
  (local $len|287 i32)
  (local $i|288 i32)
  (local $289 i32)
  (local $290 i32)
  (local $291 i32)
  (local $292 i32)
  (local $293 i32)
  (local $a|294 i32)
  (local $b|295 i32)
  (local $len|296 i32)
  (local $i|297 i32)
  (local $298 i32)
  (local $299 i32)
  (local $300 i32)
  (local $301 i32)
  (local $302 i32)
  (local $a|303 i32)
  (local $b|304 i32)
  (local $len|305 i32)
  (local $i|306 i32)
  (local $307 i32)
  (local $308 i32)
  (local $309 i32)
  (local $310 i32)
  (local $311 i32)
  (local $a|312 i32)
  (local $b|313 i32)
  (local $len|314 i32)
  (local $i|315 i32)
  (local $316 i32)
  (local $array|317 i32)
  (local $buffer|318 i32)
  (local $array|319 i32)
  (local $buffer|320 i32)
  (local $array|321 i32)
  (local $buffer|322 i32)
  (local $array|323 i32)
  (local $buffer|324 i32)
  (local $result i32)
  (local $326 i32)
  (local $327 i32)
  (local $elements i32)
  (local $329 i32)
  (local $330 i32)
  (local $a|331 i32)
  (local $b|332 i32)
  (local $len|333 i32)
  (local $i|334 i32)
  (local $335 i32)
  (local $336 i32)
  (local $337 i32)
  (local $a|338 i32)
  (local $b|339 i32)
  (local $len|340 i32)
  (local $i|341 i32)
  (local $342 i32)
  (local $343 i32)
  (local $344 i32)
  (local $a|345 i32)
  (local $b|346 i32)
  (local $len|347 i32)
  (local $i|348 i32)
  (local $349 i32)
  (local $a|350 i32)
  (local $b|351 i32)
  (local $len|352 i32)
  (local $i|353 i32)
  (local $354 i32)
  (local $355 i32)
  (local $356 i32)
  (local $a|357 i32)
  (local $b|358 i32)
  (local $len|359 i32)
  (local $i|360 i32)
  (local $361 i32)
  (local $362 i32)
  (local $363 i32)
  (local $a|364 i32)
  (local $b|365 i32)
  (local $len|366 i32)
  (local $i|367 i32)
  (local $368 i32)
  (local $369 i32)
  (local $370 i32)
  (local $a|371 i32)
  (local $b|372 i32)
  (local $len|373 i32)
  (local $i|374 i32)
  (local $375 i32)
  (local $array|376 i32)
  (local $buffer|377 i32)
  (local $378 i32)
  (local $379 i32)
  (local $bytes4 i32)
  (local $i|381 i32)
  (local $l i32)
  (local $383 i32)
  (local $384 i32)
  (local $385 i32)
  (local $bytes8 i32)
  (local $i|387 i32)
  (local $l|388 i32)
  (local $389 i32)
  (local $390 i32)
  (local $391 i32)
  (local $bytes17 i32)
  (local $i|393 i32)
  (local $l|394 i32)
  (local $395 i32)
  (local $396 i32)
  (local $397 i32)
  (local $shorts7 i32)
  (local $i|399 i32)
  (local $l|400 i32)
  (local $401 i32)
  (local $402 i32)
  (local $403 i32)
  (local $shorts8 i32)
  (local $i|405 i32)
  (local $l|406 i32)
  (local $407 i32)
  (local $408 i32)
  (local $409 i32)
  (local $shorts9 i32)
  (local $i|411 i32)
  (local $l|412 i32)
  (local $413 i32)
  (local $414 i32)
  (local $415 i32)
  (local $416 i32)
  (local $417 i32)
  (local $418 i32)
  (local $419 i32)
  (local $numbers i32)
  (local $includes i32)
  (local $422 i32)
  (local $423 i32)
  (local $424 i32)
  (local $425 i32)
  (local $array|426 i32)
  (local $buffer|427 i32)
  (local $428 i32)
  (local $429 i32)
  (local $sarr i32)
  (local $431 i32)
  (local $432 i32)
  (local $a|433 i32)
  (local $b|434 i32)
  (local $len|435 i32)
  (local $i|436 i32)
  (local $437 i32)
  (local $438 i32)
  (local $439 i32)
  (local $a|440 i32)
  (local $b|441 i32)
  (local $len|442 i32)
  (local $i|443 i32)
  (local $444 i32)
  (local $445 i32)
  (local $446 i32)
  (local $447 i32)
  (local $448 i32)
  (local $a|449 i32)
  (local $b|450 i32)
  (local $len|451 i32)
  (local $i|452 i32)
  (local $453 i32)
  (local $454 i32)
  (local $455 i32)
  (local $a|456 i32)
  (local $b|457 i32)
  (local $len|458 i32)
  (local $i|459 i32)
  (local $460 i32)
  (local $461 i32)
  (local $462 i32)
  (local $463 i32)
  (local $464 i32)
  (local $a|465 i32)
  (local $b|466 i32)
  (local $len|467 i32)
  (local $i|468 i32)
  (local $469 i32)
  (local $470 i32)
  (local $471 i32)
  (local $a|472 i32)
  (local $b|473 i32)
  (local $len|474 i32)
  (local $i|475 i32)
  (local $476 i32)
  (local $477 i32)
  (local $478 i32)
  (local $479 i32)
  (local $480 i32)
  (local $a|481 i32)
  (local $b|482 i32)
  (local $len|483 i32)
  (local $i|484 i32)
  (local $485 i32)
  (local $486 i32)
  (local $487 i32)
  (local $a|488 i32)
  (local $b|489 i32)
  (local $len|490 i32)
  (local $i|491 i32)
  (local $492 i32)
  (local $493 i32)
  (local $494 i32)
  (local $495 i32)
  (local $496 i32)
  (local $a|497 i32)
  (local $b|498 i32)
  (local $len|499 i32)
  (local $i|500 i32)
  (local $501 i32)
  (local $502 i32)
  (local $503 i32)
  (local $a|504 i32)
  (local $b|505 i32)
  (local $len|506 i32)
  (local $i|507 i32)
  (local $508 i32)
  (local $509 i32)
  (local $510 i32)
  (local $511 i32)
  (local $512 i32)
  (local $a|513 i32)
  (local $b|514 i32)
  (local $len|515 i32)
  (local $i|516 i32)
  (local $517 i32)
  (local $518 i32)
  (local $519 i32)
  (local $a|520 i32)
  (local $b|521 i32)
  (local $len|522 i32)
  (local $i|523 i32)
  (local $524 i32)
  (local $525 i32)
  (local $526 i32)
  (local $527 i32)
  (local $528 i32)
  (local $a|529 i32)
  (local $b|530 i32)
  (local $len|531 i32)
  (local $i|532 i32)
  (local $533 i32)
  (local $534 i32)
  (local $535 i32)
  (local $a|536 i32)
  (local $b|537 i32)
  (local $len|538 i32)
  (local $i|539 i32)
  (local $540 i32)
  (local $541 i32)
  (local $542 i32)
  (local $543 i32)
  (local $544 i32)
  (local $a|545 i32)
  (local $b|546 i32)
  (local $len|547 i32)
  (local $i|548 i32)
  (local $549 i32)
  (local $550 i32)
  (local $551 i32)
  (local $a|552 i32)
  (local $b|553 i32)
  (local $len|554 i32)
  (local $i|555 i32)
  (local $556 i32)
  (local $557 i32)
  (local $558 i32)
  (local $559 i32)
  (local $560 i32)
  (local $a|561 i32)
  (local $b|562 i32)
  (local $len|563 i32)
  (local $i|564 i32)
  (local $565 i32)
  (local $566 i32)
  (local $567 i32)
  (local $a|568 i32)
  (local $b|569 i32)
  (local $len|570 i32)
  (local $i|571 i32)
  (local $572 i32)
  (local $573 i32)
  (local $574 i32)
  (local $575 i32)
  (local $576 i32)
  (local $a|577 i32)
  (local $b|578 i32)
  (local $len|579 i32)
  (local $i|580 i32)
  (local $581 i32)
  (local $582 i32)
  (local $583 i32)
  (local $a|584 i32)
  (local $b|585 i32)
  (local $len|586 i32)
  (local $i|587 i32)
  (local $588 i32)
  (local $589 i32)
  (local $590 i32)
  (local $591 i32)
  (local $592 i32)
  (local $a|593 i32)
  (local $b|594 i32)
  (local $len|595 i32)
  (local $i|596 i32)
  (local $597 i32)
  (local $598 i32)
  (local $599 i32)
  (local $a|600 i32)
  (local $b|601 i32)
  (local $len|602 i32)
  (local $i|603 i32)
  (local $604 i32)
  (local $605 i32)
  (local $606 i32)
  (local $607 i32)
  (local $608 i32)
  (local $a|609 i32)
  (local $b|610 i32)
  (local $len|611 i32)
  (local $i|612 i32)
  (local $613 i32)
  (local $614 i32)
  (local $615 i32)
  (local $a|616 i32)
  (local $b|617 i32)
  (local $len|618 i32)
  (local $i|619 i32)
  (local $620 i32)
  (local $621 i32)
  (local $622 i32)
  (local $623 i32)
  (local $624 i32)
  (local $a|625 i32)
  (local $b|626 i32)
  (local $len|627 i32)
  (local $i|628 i32)
  (local $629 i32)
  (local $630 i32)
  (local $631 i32)
  (local $a|632 i32)
  (local $b|633 i32)
  (local $len|634 i32)
  (local $i|635 i32)
  (local $636 i32)
  (local $637 i32)
  (local $638 i32)
  (local $639 i32)
  (local $640 i32)
  (local $a|641 i32)
  (local $b|642 i32)
  (local $len|643 i32)
  (local $i|644 i32)
  (local $645 i32)
  (local $646 i32)
  (local $647 i32)
  (local $a|648 i32)
  (local $b|649 i32)
  (local $len|650 i32)
  (local $i|651 i32)
  (local $652 i32)
  (local $653 i32)
  (local $654 i32)
  (local $refArr i32)
  (local $spliced i32)
  (local $657 i32)
  (local $658 i32)
  (local $this|659 i32)
  (local $v|660 i32)
  (local $this|661 i32)
  (local $v|662 i32)
  (local $this|663 i32)
  (local $v|664 i32)
  (local $this|665 i32)
  (local $v|666 i32)
  (local $this|667 i32)
  (local $v|668 i32)
  (local $669 i32)
  (local $670 i32)
  (local $this|671 i32)
  (local $v|672 i32)
  (local $this|673 i32)
  (local $v|674 i32)
  (local $refArr2 i32)
  (local $spliced2 i32)
  (local $677 i32)
  (local $678 i32)
  (local $679 i32)
  (local $680 i32)
  (local $intArr i32)
  (local $every i32)
  (local $some i32)
  (local $i|684 i32)
  (local $685 i32)
  (local $arrStr1 i32)
  (local $newArr i32)
  (local $filteredArr i32)
  (local $boolVal i32)
  (local $boolVal|690 i32)
  (local $691 i32)
  (local $692 i32)
  (local $693 i32)
  (local $694 i32)
  (local $695 i32)
  (local $696 i32)
  (local $697 i32)
  (local $698 i32)
  (local $699 i32)
  (local $700 i32)
  (local $701 i32)
  (local $702 i32)
  (local $703 i32)
  (local $704 i32)
  (local $705 i32)
  (local $706 i32)
  (local $707 i32)
  (local $708 i32)
  (local $709 i32)
  (local $710 i32)
  (local $711 i32)
  (local $712 i32)
  (local $713 i32)
  (local $714 i32)
  (local $715 i32)
  (local $716 i32)
  (local $717 i32)
  (local $718 i32)
  (local $719 i32)
  (local $720 i32)
  (local $f32ArrayTypedSmall i32)
  (local $722 i32)
  (local $723 i32)
  (local $a|724 i32)
  (local $b|725 i32)
  (local $len|726 i32)
  (local $i|727 i32)
  (local $728 i32)
  (local $729 f32)
  (local $730 f32)
  (local $x|731 f64)
  (local $x|732 f64)
  (local $733 i32)
  (local $734 i32)
  (local $f32ArrayTyped i32)
  (local $736 i32)
  (local $737 i32)
  (local $a|738 i32)
  (local $b|739 i32)
  (local $len|740 i32)
  (local $i|741 i32)
  (local $742 i32)
  (local $743 f32)
  (local $744 f32)
  (local $x|745 f64)
  (local $x|746 f64)
  (local $747 i32)
  (local $748 i32)
  (local $f64ArrayTyped i32)
  (local $750 i32)
  (local $751 i32)
  (local $a|752 i32)
  (local $b|753 i32)
  (local $len|754 i32)
  (local $i|755 i32)
  (local $756 i32)
  (local $757 f64)
  (local $758 f64)
  (local $x|759 f64)
  (local $x|760 f64)
  (local $761 i32)
  (local $762 i32)
  (local $i32ArrayTyped i32)
  (local $764 i32)
  (local $765 i32)
  (local $a|766 i32)
  (local $b|767 i32)
  (local $len|768 i32)
  (local $i|769 i32)
  (local $770 i32)
  (local $771 i32)
  (local $772 i32)
  (local $u32ArrayTyped i32)
  (local $774 i32)
  (local $775 i32)
  (local $a|776 i32)
  (local $b|777 i32)
  (local $len|778 i32)
  (local $i|779 i32)
  (local $780 i32)
  (local $781 i32)
  (local $782 i32)
  (local $reversed0 i32)
  (local $784 i32)
  (local $785 i32)
  (local $reversed1 i32)
  (local $787 i32)
  (local $788 i32)
  (local $reversed2 i32)
  (local $790 i32)
  (local $791 i32)
  (local $reversed4 i32)
  (local $793 i32)
  (local $794 i32)
  (local $expected4 i32)
  (local $size i32)
  (local $arr|797 i32)
  (local $i|798 i32)
  (local $799 i32)
  (local $reversed64 i32)
  (local $size|801 i32)
  (local $arr|802 i32)
  (local $i|803 i32)
  (local $804 i32)
  (local $reversed128 i32)
  (local $size|806 i32)
  (local $arr|807 i32)
  (local $i|808 i32)
  (local $809 i32)
  (local $reversed1024 i32)
  (local $size|811 i32)
  (local $arr|812 i32)
  (local $i|813 i32)
  (local $814 i32)
  (local $randomized512 i32)
  (local $arr|816 i32)
  (local $arr|817 i32)
  (local $comparator i32)
  (local $data i32)
  (local $comparator|820 i32)
  (local $i|821 i32)
  (local $len|822 i32)
  (local $823 i32)
  (local $arr|824 i32)
  (local $arr|825 i32)
  (local $comparator|826 i32)
  (local $data|827 i32)
  (local $comparator|828 i32)
  (local $i|829 i32)
  (local $len|830 i32)
  (local $831 i32)
  (local $832 i32)
  (local $833 i32)
  (local $a|834 i32)
  (local $b|835 i32)
  (local $len|836 i32)
  (local $i|837 i32)
  (local $838 i32)
  (local $arr|839 i32)
  (local $arr|840 i32)
  (local $comparator|841 i32)
  (local $data|842 i32)
  (local $comparator|843 i32)
  (local $i|844 i32)
  (local $len|845 i32)
  (local $846 i32)
  (local $847 i32)
  (local $848 i32)
  (local $a|849 i32)
  (local $b|850 i32)
  (local $len|851 i32)
  (local $i|852 i32)
  (local $853 i32)
  (local $arr|854 i32)
  (local $arr|855 i32)
  (local $comparator|856 i32)
  (local $data|857 i32)
  (local $comparator|858 i32)
  (local $i|859 i32)
  (local $len|860 i32)
  (local $861 i32)
  (local $a|862 i32)
  (local $b|863 i32)
  (local $len|864 i32)
  (local $i|865 i32)
  (local $866 i32)
  (local $arr|867 i32)
  (local $arr|868 i32)
  (local $comparator|869 i32)
  (local $data|870 i32)
  (local $comparator|871 i32)
  (local $i|872 i32)
  (local $len|873 i32)
  (local $874 i32)
  (local $a|875 i32)
  (local $b|876 i32)
  (local $len|877 i32)
  (local $i|878 i32)
  (local $879 i32)
  (local $arr|880 i32)
  (local $arr|881 i32)
  (local $comparator|882 i32)
  (local $data|883 i32)
  (local $comparator|884 i32)
  (local $i|885 i32)
  (local $len|886 i32)
  (local $887 i32)
  (local $a|888 i32)
  (local $b|889 i32)
  (local $len|890 i32)
  (local $i|891 i32)
  (local $892 i32)
  (local $arr|893 i32)
  (local $arr|894 i32)
  (local $comparator|895 i32)
  (local $data|896 i32)
  (local $comparator|897 i32)
  (local $i|898 i32)
  (local $len|899 i32)
  (local $900 i32)
  (local $a|901 i32)
  (local $b|902 i32)
  (local $len|903 i32)
  (local $i|904 i32)
  (local $905 i32)
  (local $arr|906 i32)
  (local $arr|907 i32)
  (local $comparator|908 i32)
  (local $data|909 i32)
  (local $comparator|910 i32)
  (local $i|911 i32)
  (local $len|912 i32)
  (local $913 i32)
  (local $sorted i32)
  (local $check i32)
  (local $i|916 i32)
  (local $len|917 i32)
  (local $918 i32)
  (local $input i32)
  (local $target i32)
  (local $size|921 i32)
  (local $arr|922 i32)
  (local $i|923 i32)
  (local $924 i32)
  (local $randomized64 i32)
  (local $size|926 i32)
  (local $arr|927 i32)
  (local $i|928 i32)
  (local $929 i32)
  (local $randomized257 i32)
  (local $arr|931 i32)
  (local $comparator|932 i32)
  (local $data|933 i32)
  (local $comparator|934 i32)
  (local $i|935 i32)
  (local $len|936 i32)
  (local $937 i32)
  (local $arr|938 i32)
  (local $comparator|939 i32)
  (local $data|940 i32)
  (local $comparator|941 i32)
  (local $i|942 i32)
  (local $len|943 i32)
  (local $944 i32)
  (local $arr|945 i32)
  (local $comparator|946 i32)
  (local $data|947 i32)
  (local $comparator|948 i32)
  (local $i|949 i32)
  (local $len|950 i32)
  (local $951 i32)
  (local $arr|952 i32)
  (local $comparator|953 i32)
  (local $data|954 i32)
  (local $comparator|955 i32)
  (local $i|956 i32)
  (local $len|957 i32)
  (local $958 i32)
  (local $size|959 i32)
  (local $arr|960 i32)
  (local $i|961 i32)
  (local $962 i32)
  (local $inner i32)
  (local $reversedNested512 i32)
  (local $arr|965 i32)
  (local $comparator|966 i32)
  (local $data|967 i32)
  (local $comparator|968 i32)
  (local $i|969 i32)
  (local $len|970 i32)
  (local $971 i32)
  (local $size|972 i32)
  (local $arr|973 i32)
  (local $i|974 i32)
  (local $975 i32)
  (local $this|976 i32)
  (local $x|977 i32)
  (local $reversedElements512 i32)
  (local $arr|979 i32)
  (local $comparator|980 i32)
  (local $data|981 i32)
  (local $comparator|982 i32)
  (local $i|983 i32)
  (local $len|984 i32)
  (local $985 i32)
  (local $986 i32)
  (local $987 i32)
  (local $988 i32)
  (local $989 i32)
  (local $990 i32)
  (local $991 i32)
  (local $992 i32)
  (local $993 i32)
  (local $994 i32)
  (local $995 i32)
  (local $plainTarget i32)
  (local $plainResult i32)
  (local $i|998 i32)
  (local $999 i32)
  (local $1000 i32)
  (local $1001 i32)
  (local $1002 i32)
  (local $1003 i32)
  (local $1004 i32)
  (local $1005 i32)
  (local $1006 i32)
  (local $1007 i32)
  (local $1008 i32)
  (local $1009 i32)
  (local $stringTarget i32)
  (local $stringResult i32)
  (local $1012 i32)
  (local $1013 i32)
  (local $expected i32)
  (local $i|1015 i32)
  (local $1016 i32)
  (local $left i32)
  (local $right i32)
  (local $ptr1 i32)
  (local $ptr2 i32)
  (local $leftLength i32)
  (local $ptr1|1022 i32)
  (local $ptr2|1023 i32)
  (local $ptr1|1024 i32)
  (local $ptr2|1025 i32)
  (local $ptr1|1026 i32)
  (local $ptr2|1027 i32)
  (local $ptr1|1028 i32)
  (local $ptr2|1029 i32)
  (local $ptr1|1030 i32)
  (local $ptr2|1031 i32)
  (local $ptr1|1032 i32)
  (local $ptr2|1033 i32)
  (local $ptr1|1034 i32)
  (local $ptr2|1035 i32)
  (local $ptr1|1036 i32)
  (local $ptr2|1037 i32)
  (local $ptr1|1038 i32)
  (local $ptr2|1039 i32)
  (local $ptr1|1040 i32)
  (local $ptr2|1041 i32)
  (local $ptr1|1042 i32)
  (local $ptr2|1043 i32)
  (local $ptr1|1044 i32)
  (local $ptr2|1045 i32)
  (local $ptr1|1046 i32)
  (local $ptr2|1047 i32)
  (local $ptr1|1048 i32)
  (local $ptr2|1049 i32)
  (local $ptr1|1050 i32)
  (local $ptr2|1051 i32)
  (local $ptr1|1052 i32)
  (local $ptr2|1053 i32)
  (local $ptr1|1054 i32)
  (local $ptr2|1055 i32)
  (local $len|1056 i32)
  (local $ptr1|1057 i32)
  (local $ptr2|1058 i32)
  (local $ptr1|1059 i32)
  (local $ptr2|1060 i32)
  (local $ptr1|1061 i32)
  (local $ptr2|1062 i32)
  (local $ptr1|1063 i32)
  (local $ptr2|1064 i32)
  (local $ptr1|1065 i32)
  (local $ptr2|1066 i32)
  (local $ptr1|1067 i32)
  (local $ptr2|1068 i32)
  (local $ptr1|1069 i32)
  (local $ptr2|1070 i32)
  (local $ptr1|1071 i32)
  (local $ptr2|1072 i32)
  (local $r i32)
  (local $ptr1|1074 i32)
  (local $ptr2|1075 i32)
  (local $len|1076 i32)
  (local $ptr1|1077 i32)
  (local $ptr2|1078 i32)
  (local $ptr1|1079 i32)
  (local $ptr2|1080 i32)
  (local $ptr1|1081 i32)
  (local $ptr2|1082 i32)
  (local $ptr1|1083 i32)
  (local $ptr2|1084 i32)
  (local $r|1085 i32)
  (local $ptr1|1086 i32)
  (local $ptr2|1087 i32)
  (local $len|1088 i32)
  (local $ptr1|1089 i32)
  (local $ptr2|1090 i32)
  (local $ptr1|1091 i32)
  (local $ptr2|1092 i32)
  (local $r|1093 i32)
  (local $ptr1|1094 i32)
  (local $ptr2|1095 i32)
  (local $len|1096 i32)
  (local $ptr1|1097 i32)
  (local $ptr2|1098 i32)
  (local $r|1099 i32)
  (local $ptr1|1100 i32)
  (local $ptr2|1101 i32)
  (local $len|1102 i32)
  (local $ptr1|1103 i32)
  (local $ptr2|1104 i32)
  (local $r|1105 i32)
  (local $ptr1|1106 i32)
  (local $ptr2|1107 i32)
  (local $len|1108 i32)
  (local $ptr1|1109 i32)
  (local $ptr2|1110 i32)
  (local $r|1111 i32)
  (local $ptr1|1112 i32)
  (local $ptr2|1113 i32)
  (local $len|1114 i32)
  (local $ptr1|1115 i32)
  (local $ptr2|1116 i32)
  (local $1117 i32)
  (local $1118 i32)
  (local $1119 i32)
  (local $1120 i32)
  (local $1121 i32)
  (local $1122 i32)
  (local $testArray i32)
  (local $1124 i32)
  (local $1125 i32)
  (local $1126 i32)
  (local $1127 i32)
  (local $1128 i32)
  (local $1129 i32)
  (local $mapTarget i32)
  (local $mapResult i32)
  i32.const 0
  i32.const 0
  i32.eq
  drop
  i32.const 4
  i32.const 4
  i32.eq
  drop
  i32.const 8
  i32.const 8
  i32.eq
  drop
  i32.const 0
  i32.const 0
  call $~lib/array/Array<i32>#constructor
  global.set $std/array/arr
  i32.const 0
  call $~lib/array/Array.isArray<~lib/array/Array<i32>|null>
  i32.eqz
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $this
  i32.const 0
  local.set $v
  local.get $this
  i32.eqz
  if
   i32.const 4
   i32.const 4
   call $~lib/rt/stub/__new
   local.set $this
  end
  local.get $this
  local.get $v
  call $std/array/Ref#set:v
  local.get $this
  call $~lib/array/Array.isArray<std/array/Ref>
  i32.eqz
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint8Array#constructor
  call $~lib/array/Array.isArray<~lib/typedarray/Uint8Array>
  i32.eqz
  i32.eqz
  if
   unreachable
  end
  i32.const 1
  call $~lib/array/Array.isArray<i32>
  i32.eqz
  i32.eqz
  if
   unreachable
  end
  i32.const 80
  call $~lib/array/Array.isArray<~lib/string/String>
  i32.eqz
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  call $~lib/array/Array.isArray<~lib/array/Array<i32>>
  i32.eqz
  if
   unreachable
  end
  i32.const 5
  i32.const 0
  i32.const 6
  i32.const 112
  call $~lib/rt/__newArray
  local.set $arr8
  local.get $arr8
  i32.const 1
  i32.const 1
  i32.const 3
  call $~lib/array/Array<u8>#fill
  drop
  block $std/array/isArraysEqual<u8>|inlined.0 (result i32)
   local.get $arr8
   local.set $a
   i32.const 5
   i32.const 0
   i32.const 6
   i32.const 176
   call $~lib/rt/__newArray
   local.set $b
   i32.const 0
   local.set $len
   local.get $len
   i32.eqz
   if
    local.get $a
    call $~lib/array/Array<u8>#get:length
    local.set $len
    local.get $len
    local.get $b
    call $~lib/array/Array<u8>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<u8>|inlined.0
    end
    local.get $a
    local.get $b
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<u8>|inlined.0
    end
   end
   i32.const 0
   local.set $i
   loop $for-loop|0
    local.get $i
    local.get $len
    i32.lt_s
    local.set $11
    local.get $11
    if
     i32.const 0
     drop
     local.get $a
     local.get $i
     call $~lib/array/Array<u8>#__get
     local.get $b
     local.get $i
     call $~lib/array/Array<u8>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<u8>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $arr8
  i32.const 0
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/array/Array<u8>#fill
  drop
  block $std/array/isArraysEqual<u8>|inlined.1 (result i32)
   local.get $arr8
   local.set $a|14
   i32.const 5
   i32.const 0
   i32.const 6
   i32.const 256
   call $~lib/rt/__newArray
   local.set $b|15
   i32.const 0
   local.set $len|16
   local.get $len|16
   i32.eqz
   if
    local.get $a|14
    call $~lib/array/Array<u8>#get:length
    local.set $len|16
    local.get $len|16
    local.get $b|15
    call $~lib/array/Array<u8>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<u8>|inlined.1
    end
    local.get $a|14
    local.get $b|15
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<u8>|inlined.1
    end
   end
   i32.const 0
   local.set $i|17
   loop $for-loop|1
    local.get $i|17
    local.get $len|16
    i32.lt_s
    local.set $18
    local.get $18
    if
     i32.const 0
     drop
     local.get $a|14
     local.get $i|17
     call $~lib/array/Array<u8>#__get
     local.get $b|15
     local.get $i|17
     call $~lib/array/Array<u8>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<u8>|inlined.1
     end
     local.get $i|17
     i32.const 1
     i32.add
     local.set $i|17
     br $for-loop|1
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $arr8
  i32.const 1
  i32.const 0
  i32.const -3
  call $~lib/array/Array<u8>#fill
  drop
  block $std/array/isArraysEqual<u8>|inlined.2 (result i32)
   local.get $arr8
   local.set $a|21
   i32.const 5
   i32.const 0
   i32.const 6
   i32.const 288
   call $~lib/rt/__newArray
   local.set $b|22
   i32.const 0
   local.set $len|23
   local.get $len|23
   i32.eqz
   if
    local.get $a|21
    call $~lib/array/Array<u8>#get:length
    local.set $len|23
    local.get $len|23
    local.get $b|22
    call $~lib/array/Array<u8>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<u8>|inlined.2
    end
    local.get $a|21
    local.get $b|22
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<u8>|inlined.2
    end
   end
   i32.const 0
   local.set $i|24
   loop $for-loop|2
    local.get $i|24
    local.get $len|23
    i32.lt_s
    local.set $25
    local.get $25
    if
     i32.const 0
     drop
     local.get $a|21
     local.get $i|24
     call $~lib/array/Array<u8>#__get
     local.get $b|22
     local.get $i|24
     call $~lib/array/Array<u8>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<u8>|inlined.2
     end
     local.get $i|24
     i32.const 1
     i32.add
     local.set $i|24
     br $for-loop|2
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $arr8
  i32.const 2
  i32.const -2
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/array/Array<u8>#fill
  drop
  block $std/array/isArraysEqual<u8>|inlined.3 (result i32)
   local.get $arr8
   local.set $a|28
   i32.const 5
   i32.const 0
   i32.const 6
   i32.const 320
   call $~lib/rt/__newArray
   local.set $b|29
   i32.const 0
   local.set $len|30
   local.get $len|30
   i32.eqz
   if
    local.get $a|28
    call $~lib/array/Array<u8>#get:length
    local.set $len|30
    local.get $len|30
    local.get $b|29
    call $~lib/array/Array<u8>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<u8>|inlined.3
    end
    local.get $a|28
    local.get $b|29
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<u8>|inlined.3
    end
   end
   i32.const 0
   local.set $i|31
   loop $for-loop|3
    local.get $i|31
    local.get $len|30
    i32.lt_s
    local.set $32
    local.get $32
    if
     i32.const 0
     drop
     local.get $a|28
     local.get $i|31
     call $~lib/array/Array<u8>#__get
     local.get $b|29
     local.get $i|31
     call $~lib/array/Array<u8>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<u8>|inlined.3
     end
     local.get $i|31
     i32.const 1
     i32.add
     local.set $i|31
     br $for-loop|3
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $arr8
  i32.const 0
  i32.const 1
  i32.const 0
  call $~lib/array/Array<u8>#fill
  drop
  block $std/array/isArraysEqual<u8>|inlined.4 (result i32)
   local.get $arr8
   local.set $a|35
   i32.const 5
   i32.const 0
   i32.const 6
   i32.const 352
   call $~lib/rt/__newArray
   local.set $b|36
   i32.const 0
   local.set $len|37
   local.get $len|37
   i32.eqz
   if
    local.get $a|35
    call $~lib/array/Array<u8>#get:length
    local.set $len|37
    local.get $len|37
    local.get $b|36
    call $~lib/array/Array<u8>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<u8>|inlined.4
    end
    local.get $a|35
    local.get $b|36
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<u8>|inlined.4
    end
   end
   i32.const 0
   local.set $i|38
   loop $for-loop|4
    local.get $i|38
    local.get $len|37
    i32.lt_s
    local.set $39
    local.get $39
    if
     i32.const 0
     drop
     local.get $a|35
     local.get $i|38
     call $~lib/array/Array<u8>#__get
     local.get $b|36
     local.get $i|38
     call $~lib/array/Array<u8>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<u8>|inlined.4
     end
     local.get $i|38
     i32.const 1
     i32.add
     local.set $i|38
     br $for-loop|4
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $arr8
  i32.const -1
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/array/Array<u8>#fill
  drop
  block $std/array/isArraysEqual<u8>|inlined.5 (result i32)
   local.get $arr8
   local.set $a|42
   i32.const 5
   i32.const 0
   i32.const 6
   i32.const 384
   call $~lib/rt/__newArray
   local.set $b|43
   i32.const 0
   local.set $len|44
   local.get $len|44
   i32.eqz
   if
    local.get $a|42
    call $~lib/array/Array<u8>#get:length
    local.set $len|44
    local.get $len|44
    local.get $b|43
    call $~lib/array/Array<u8>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<u8>|inlined.5
    end
    local.get $a|42
    local.get $b|43
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<u8>|inlined.5
    end
   end
   i32.const 0
   local.set $i|45
   loop $for-loop|5
    local.get $i|45
    local.get $len|44
    i32.lt_s
    local.set $46
    local.get $46
    if
     i32.const 0
     drop
     local.get $a|42
     local.get $i|45
     call $~lib/array/Array<u8>#__get
     local.get $b|43
     local.get $i|45
     call $~lib/array/Array<u8>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<u8>|inlined.5
     end
     local.get $i|45
     i32.const 1
     i32.add
     local.set $i|45
     br $for-loop|5
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  i32.const 5
  i32.const 2
  i32.const 7
  i32.const 416
  call $~lib/rt/__newArray
  local.set $arr32
  local.get $arr32
  i32.const 1
  i32.const 1
  i32.const 3
  call $~lib/array/Array<u32>#fill
  drop
  block $std/array/isArraysEqual<u32>|inlined.0 (result i32)
   local.get $arr32
   local.set $a|52
   i32.const 5
   i32.const 2
   i32.const 7
   i32.const 464
   call $~lib/rt/__newArray
   local.set $b|53
   i32.const 0
   local.set $len|54
   local.get $len|54
   i32.eqz
   if
    local.get $a|52
    call $~lib/array/Array<u32>#get:length
    local.set $len|54
    local.get $len|54
    local.get $b|53
    call $~lib/array/Array<u32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<u32>|inlined.0
    end
    local.get $a|52
    local.get $b|53
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<u32>|inlined.0
    end
   end
   i32.const 0
   local.set $i|55
   loop $for-loop|6
    local.get $i|55
    local.get $len|54
    i32.lt_s
    local.set $56
    local.get $56
    if
     i32.const 0
     drop
     local.get $a|52
     local.get $i|55
     call $~lib/array/Array<u32>#__get
     local.get $b|53
     local.get $i|55
     call $~lib/array/Array<u32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<u32>|inlined.0
     end
     local.get $i|55
     i32.const 1
     i32.add
     local.set $i|55
     br $for-loop|6
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $arr32
  i32.const 0
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/array/Array<u32>#fill
  drop
  block $std/array/isArraysEqual<u32>|inlined.1 (result i32)
   local.get $arr32
   local.set $a|59
   i32.const 5
   i32.const 2
   i32.const 7
   i32.const 512
   call $~lib/rt/__newArray
   local.set $b|60
   i32.const 0
   local.set $len|61
   local.get $len|61
   i32.eqz
   if
    local.get $a|59
    call $~lib/array/Array<u32>#get:length
    local.set $len|61
    local.get $len|61
    local.get $b|60
    call $~lib/array/Array<u32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<u32>|inlined.1
    end
    local.get $a|59
    local.get $b|60
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<u32>|inlined.1
    end
   end
   i32.const 0
   local.set $i|62
   loop $for-loop|7
    local.get $i|62
    local.get $len|61
    i32.lt_s
    local.set $63
    local.get $63
    if
     i32.const 0
     drop
     local.get $a|59
     local.get $i|62
     call $~lib/array/Array<u32>#__get
     local.get $b|60
     local.get $i|62
     call $~lib/array/Array<u32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<u32>|inlined.1
     end
     local.get $i|62
     i32.const 1
     i32.add
     local.set $i|62
     br $for-loop|7
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $arr32
  i32.const 1
  i32.const 0
  i32.const -3
  call $~lib/array/Array<u32>#fill
  drop
  block $std/array/isArraysEqual<u32>|inlined.2 (result i32)
   local.get $arr32
   local.set $a|66
   i32.const 5
   i32.const 2
   i32.const 7
   i32.const 560
   call $~lib/rt/__newArray
   local.set $b|67
   i32.const 0
   local.set $len|68
   local.get $len|68
   i32.eqz
   if
    local.get $a|66
    call $~lib/array/Array<u32>#get:length
    local.set $len|68
    local.get $len|68
    local.get $b|67
    call $~lib/array/Array<u32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<u32>|inlined.2
    end
    local.get $a|66
    local.get $b|67
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<u32>|inlined.2
    end
   end
   i32.const 0
   local.set $i|69
   loop $for-loop|8
    local.get $i|69
    local.get $len|68
    i32.lt_s
    local.set $70
    local.get $70
    if
     i32.const 0
     drop
     local.get $a|66
     local.get $i|69
     call $~lib/array/Array<u32>#__get
     local.get $b|67
     local.get $i|69
     call $~lib/array/Array<u32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<u32>|inlined.2
     end
     local.get $i|69
     i32.const 1
     i32.add
     local.set $i|69
     br $for-loop|8
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $arr32
  i32.const 2
  i32.const -2
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/array/Array<u32>#fill
  drop
  block $std/array/isArraysEqual<u32>|inlined.3 (result i32)
   local.get $arr32
   local.set $a|73
   i32.const 5
   i32.const 2
   i32.const 7
   i32.const 608
   call $~lib/rt/__newArray
   local.set $b|74
   i32.const 0
   local.set $len|75
   local.get $len|75
   i32.eqz
   if
    local.get $a|73
    call $~lib/array/Array<u32>#get:length
    local.set $len|75
    local.get $len|75
    local.get $b|74
    call $~lib/array/Array<u32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<u32>|inlined.3
    end
    local.get $a|73
    local.get $b|74
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<u32>|inlined.3
    end
   end
   i32.const 0
   local.set $i|76
   loop $for-loop|9
    local.get $i|76
    local.get $len|75
    i32.lt_s
    local.set $77
    local.get $77
    if
     i32.const 0
     drop
     local.get $a|73
     local.get $i|76
     call $~lib/array/Array<u32>#__get
     local.get $b|74
     local.get $i|76
     call $~lib/array/Array<u32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<u32>|inlined.3
     end
     local.get $i|76
     i32.const 1
     i32.add
     local.set $i|76
     br $for-loop|9
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $arr32
  i32.const 0
  i32.const 1
  i32.const 0
  call $~lib/array/Array<u32>#fill
  drop
  block $std/array/isArraysEqual<u32>|inlined.4 (result i32)
   local.get $arr32
   local.set $a|80
   i32.const 5
   i32.const 2
   i32.const 7
   i32.const 656
   call $~lib/rt/__newArray
   local.set $b|81
   i32.const 0
   local.set $len|82
   local.get $len|82
   i32.eqz
   if
    local.get $a|80
    call $~lib/array/Array<u32>#get:length
    local.set $len|82
    local.get $len|82
    local.get $b|81
    call $~lib/array/Array<u32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<u32>|inlined.4
    end
    local.get $a|80
    local.get $b|81
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<u32>|inlined.4
    end
   end
   i32.const 0
   local.set $i|83
   loop $for-loop|10
    local.get $i|83
    local.get $len|82
    i32.lt_s
    local.set $84
    local.get $84
    if
     i32.const 0
     drop
     local.get $a|80
     local.get $i|83
     call $~lib/array/Array<u32>#__get
     local.get $b|81
     local.get $i|83
     call $~lib/array/Array<u32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<u32>|inlined.4
     end
     local.get $i|83
     i32.const 1
     i32.add
     local.set $i|83
     br $for-loop|10
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $arr32
  i32.const -1
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/array/Array<u32>#fill
  drop
  block $std/array/isArraysEqual<u32>|inlined.5 (result i32)
   local.get $arr32
   local.set $a|87
   i32.const 5
   i32.const 2
   i32.const 7
   i32.const 704
   call $~lib/rt/__newArray
   local.set $b|88
   i32.const 0
   local.set $len|89
   local.get $len|89
   i32.eqz
   if
    local.get $a|87
    call $~lib/array/Array<u32>#get:length
    local.set $len|89
    local.get $len|89
    local.get $b|88
    call $~lib/array/Array<u32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<u32>|inlined.5
    end
    local.get $a|87
    local.get $b|88
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<u32>|inlined.5
    end
   end
   i32.const 0
   local.set $i|90
   loop $for-loop|11
    local.get $i|90
    local.get $len|89
    i32.lt_s
    local.set $91
    local.get $91
    if
     i32.const 0
     drop
     local.get $a|87
     local.get $i|90
     call $~lib/array/Array<u32>#__get
     local.get $b|88
     local.get $i|90
     call $~lib/array/Array<u32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<u32>|inlined.5
     end
     local.get $i|90
     i32.const 1
     i32.add
     local.set $i|90
     br $for-loop|11
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  i32.const 5
  i32.const 2
  i32.const 8
  i32.const 752
  call $~lib/rt/__newArray
  local.set $arrf32
  local.get $arrf32
  f32.const 1
  i32.const 1
  i32.const 3
  call $~lib/array/Array<f32>#fill
  drop
  block $std/array/isArraysEqual<f32>|inlined.0 (result i32)
   local.get $arrf32
   local.set $a|97
   i32.const 5
   i32.const 2
   i32.const 8
   i32.const 800
   call $~lib/rt/__newArray
   local.set $b|98
   i32.const 0
   local.set $len|99
   local.get $len|99
   i32.eqz
   if
    local.get $a|97
    call $~lib/array/Array<f32>#get:length
    local.set $len|99
    local.get $len|99
    local.get $b|98
    call $~lib/array/Array<f32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<f32>|inlined.0
    end
    local.get $a|97
    local.get $b|98
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<f32>|inlined.0
    end
   end
   i32.const 0
   local.set $i|100
   loop $for-loop|12
    local.get $i|100
    local.get $len|99
    i32.lt_s
    local.set $101
    local.get $101
    if
     block $for-continue|12
      i32.const 1
      drop
      local.get $a|97
      local.get $i|100
      call $~lib/array/Array<f32>#__get
      local.tee $102
      local.get $102
      f32.ne
      if (result i32)
       local.get $b|98
       local.get $i|100
       call $~lib/array/Array<f32>#__get
       local.tee $103
       local.get $103
       f32.ne
      else
       i32.const 0
      end
      if
       br $for-continue|12
      end
      local.get $a|97
      local.get $i|100
      call $~lib/array/Array<f32>#__get
      f64.promote_f32
      local.set $x
      local.get $x
      i64.reinterpret_f64
      i64.const 63
      i64.shr_u
      i64.const 0
      i64.ne
      i32.const 0
      i32.ne
      local.get $b|98
      local.get $i|100
      call $~lib/array/Array<f32>#__get
      f64.promote_f32
      local.set $x|105
      local.get $x|105
      i64.reinterpret_f64
      i64.const 63
      i64.shr_u
      i64.const 0
      i64.ne
      i32.const 0
      i32.ne
      i32.ne
      if
       i32.const 0
       br $std/array/isArraysEqual<f32>|inlined.0
      end
      local.get $a|97
      local.get $i|100
      call $~lib/array/Array<f32>#__get
      local.get $b|98
      local.get $i|100
      call $~lib/array/Array<f32>#__get
      f32.ne
      if
       i32.const 0
       br $std/array/isArraysEqual<f32>|inlined.0
      end
     end
     local.get $i|100
     i32.const 1
     i32.add
     local.set $i|100
     br $for-loop|12
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $arrf32
  f32.const 0
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/array/Array<f32>#fill
  drop
  block $std/array/isArraysEqual<f32>|inlined.1 (result i32)
   local.get $arrf32
   local.set $a|108
   i32.const 5
   i32.const 2
   i32.const 8
   i32.const 848
   call $~lib/rt/__newArray
   local.set $b|109
   i32.const 0
   local.set $len|110
   local.get $len|110
   i32.eqz
   if
    local.get $a|108
    call $~lib/array/Array<f32>#get:length
    local.set $len|110
    local.get $len|110
    local.get $b|109
    call $~lib/array/Array<f32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<f32>|inlined.1
    end
    local.get $a|108
    local.get $b|109
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<f32>|inlined.1
    end
   end
   i32.const 0
   local.set $i|111
   loop $for-loop|13
    local.get $i|111
    local.get $len|110
    i32.lt_s
    local.set $112
    local.get $112
    if
     block $for-continue|13
      i32.const 1
      drop
      local.get $a|108
      local.get $i|111
      call $~lib/array/Array<f32>#__get
      local.tee $113
      local.get $113
      f32.ne
      if (result i32)
       local.get $b|109
       local.get $i|111
       call $~lib/array/Array<f32>#__get
       local.tee $114
       local.get $114
       f32.ne
      else
       i32.const 0
      end
      if
       br $for-continue|13
      end
      local.get $a|108
      local.get $i|111
      call $~lib/array/Array<f32>#__get
      f64.promote_f32
      local.set $x|115
      local.get $x|115
      i64.reinterpret_f64
      i64.const 63
      i64.shr_u
      i64.const 0
      i64.ne
      i32.const 0
      i32.ne
      local.get $b|109
      local.get $i|111
      call $~lib/array/Array<f32>#__get
      f64.promote_f32
      local.set $x|116
      local.get $x|116
      i64.reinterpret_f64
      i64.const 63
      i64.shr_u
      i64.const 0
      i64.ne
      i32.const 0
      i32.ne
      i32.ne
      if
       i32.const 0
       br $std/array/isArraysEqual<f32>|inlined.1
      end
      local.get $a|108
      local.get $i|111
      call $~lib/array/Array<f32>#__get
      local.get $b|109
      local.get $i|111
      call $~lib/array/Array<f32>#__get
      f32.ne
      if
       i32.const 0
       br $std/array/isArraysEqual<f32>|inlined.1
      end
     end
     local.get $i|111
     i32.const 1
     i32.add
     local.set $i|111
     br $for-loop|13
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $arrf32
  f32.const 1
  i32.const 0
  i32.const -3
  call $~lib/array/Array<f32>#fill
  drop
  block $std/array/isArraysEqual<f32>|inlined.2 (result i32)
   local.get $arrf32
   local.set $a|119
   i32.const 5
   i32.const 2
   i32.const 8
   i32.const 896
   call $~lib/rt/__newArray
   local.set $b|120
   i32.const 0
   local.set $len|121
   local.get $len|121
   i32.eqz
   if
    local.get $a|119
    call $~lib/array/Array<f32>#get:length
    local.set $len|121
    local.get $len|121
    local.get $b|120
    call $~lib/array/Array<f32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<f32>|inlined.2
    end
    local.get $a|119
    local.get $b|120
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<f32>|inlined.2
    end
   end
   i32.const 0
   local.set $i|122
   loop $for-loop|14
    local.get $i|122
    local.get $len|121
    i32.lt_s
    local.set $123
    local.get $123
    if
     block $for-continue|14
      i32.const 1
      drop
      local.get $a|119
      local.get $i|122
      call $~lib/array/Array<f32>#__get
      local.tee $124
      local.get $124
      f32.ne
      if (result i32)
       local.get $b|120
       local.get $i|122
       call $~lib/array/Array<f32>#__get
       local.tee $125
       local.get $125
       f32.ne
      else
       i32.const 0
      end
      if
       br $for-continue|14
      end
      local.get $a|119
      local.get $i|122
      call $~lib/array/Array<f32>#__get
      f64.promote_f32
      local.set $x|126
      local.get $x|126
      i64.reinterpret_f64
      i64.const 63
      i64.shr_u
      i64.const 0
      i64.ne
      i32.const 0
      i32.ne
      local.get $b|120
      local.get $i|122
      call $~lib/array/Array<f32>#__get
      f64.promote_f32
      local.set $x|127
      local.get $x|127
      i64.reinterpret_f64
      i64.const 63
      i64.shr_u
      i64.const 0
      i64.ne
      i32.const 0
      i32.ne
      i32.ne
      if
       i32.const 0
       br $std/array/isArraysEqual<f32>|inlined.2
      end
      local.get $a|119
      local.get $i|122
      call $~lib/array/Array<f32>#__get
      local.get $b|120
      local.get $i|122
      call $~lib/array/Array<f32>#__get
      f32.ne
      if
       i32.const 0
       br $std/array/isArraysEqual<f32>|inlined.2
      end
     end
     local.get $i|122
     i32.const 1
     i32.add
     local.set $i|122
     br $for-loop|14
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $arrf32
  f32.const 2
  i32.const -2
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/array/Array<f32>#fill
  drop
  block $std/array/isArraysEqual<f32>|inlined.3 (result i32)
   local.get $arrf32
   local.set $a|130
   i32.const 5
   i32.const 2
   i32.const 8
   i32.const 944
   call $~lib/rt/__newArray
   local.set $b|131
   i32.const 0
   local.set $len|132
   local.get $len|132
   i32.eqz
   if
    local.get $a|130
    call $~lib/array/Array<f32>#get:length
    local.set $len|132
    local.get $len|132
    local.get $b|131
    call $~lib/array/Array<f32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<f32>|inlined.3
    end
    local.get $a|130
    local.get $b|131
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<f32>|inlined.3
    end
   end
   i32.const 0
   local.set $i|133
   loop $for-loop|15
    local.get $i|133
    local.get $len|132
    i32.lt_s
    local.set $134
    local.get $134
    if
     block $for-continue|15
      i32.const 1
      drop
      local.get $a|130
      local.get $i|133
      call $~lib/array/Array<f32>#__get
      local.tee $135
      local.get $135
      f32.ne
      if (result i32)
       local.get $b|131
       local.get $i|133
       call $~lib/array/Array<f32>#__get
       local.tee $136
       local.get $136
       f32.ne
      else
       i32.const 0
      end
      if
       br $for-continue|15
      end
      local.get $a|130
      local.get $i|133
      call $~lib/array/Array<f32>#__get
      f64.promote_f32
      local.set $x|137
      local.get $x|137
      i64.reinterpret_f64
      i64.const 63
      i64.shr_u
      i64.const 0
      i64.ne
      i32.const 0
      i32.ne
      local.get $b|131
      local.get $i|133
      call $~lib/array/Array<f32>#__get
      f64.promote_f32
      local.set $x|138
      local.get $x|138
      i64.reinterpret_f64
      i64.const 63
      i64.shr_u
      i64.const 0
      i64.ne
      i32.const 0
      i32.ne
      i32.ne
      if
       i32.const 0
       br $std/array/isArraysEqual<f32>|inlined.3
      end
      local.get $a|130
      local.get $i|133
      call $~lib/array/Array<f32>#__get
      local.get $b|131
      local.get $i|133
      call $~lib/array/Array<f32>#__get
      f32.ne
      if
       i32.const 0
       br $std/array/isArraysEqual<f32>|inlined.3
      end
     end
     local.get $i|133
     i32.const 1
     i32.add
     local.set $i|133
     br $for-loop|15
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $arrf32
  f32.const 0
  i32.const 1
  i32.const 0
  call $~lib/array/Array<f32>#fill
  drop
  block $std/array/isArraysEqual<f32>|inlined.4 (result i32)
   local.get $arrf32
   local.set $a|141
   i32.const 5
   i32.const 2
   i32.const 8
   i32.const 992
   call $~lib/rt/__newArray
   local.set $b|142
   i32.const 0
   local.set $len|143
   local.get $len|143
   i32.eqz
   if
    local.get $a|141
    call $~lib/array/Array<f32>#get:length
    local.set $len|143
    local.get $len|143
    local.get $b|142
    call $~lib/array/Array<f32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<f32>|inlined.4
    end
    local.get $a|141
    local.get $b|142
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<f32>|inlined.4
    end
   end
   i32.const 0
   local.set $i|144
   loop $for-loop|16
    local.get $i|144
    local.get $len|143
    i32.lt_s
    local.set $145
    local.get $145
    if
     block $for-continue|16
      i32.const 1
      drop
      local.get $a|141
      local.get $i|144
      call $~lib/array/Array<f32>#__get
      local.tee $146
      local.get $146
      f32.ne
      if (result i32)
       local.get $b|142
       local.get $i|144
       call $~lib/array/Array<f32>#__get
       local.tee $147
       local.get $147
       f32.ne
      else
       i32.const 0
      end
      if
       br $for-continue|16
      end
      local.get $a|141
      local.get $i|144
      call $~lib/array/Array<f32>#__get
      f64.promote_f32
      local.set $x|148
      local.get $x|148
      i64.reinterpret_f64
      i64.const 63
      i64.shr_u
      i64.const 0
      i64.ne
      i32.const 0
      i32.ne
      local.get $b|142
      local.get $i|144
      call $~lib/array/Array<f32>#__get
      f64.promote_f32
      local.set $x|149
      local.get $x|149
      i64.reinterpret_f64
      i64.const 63
      i64.shr_u
      i64.const 0
      i64.ne
      i32.const 0
      i32.ne
      i32.ne
      if
       i32.const 0
       br $std/array/isArraysEqual<f32>|inlined.4
      end
      local.get $a|141
      local.get $i|144
      call $~lib/array/Array<f32>#__get
      local.get $b|142
      local.get $i|144
      call $~lib/array/Array<f32>#__get
      f32.ne
      if
       i32.const 0
       br $std/array/isArraysEqual<f32>|inlined.4
      end
     end
     local.get $i|144
     i32.const 1
     i32.add
     local.set $i|144
     br $for-loop|16
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $arrf32
  f32.const -1
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/array/Array<f32>#fill
  drop
  block $std/array/isArraysEqual<f32>|inlined.5 (result i32)
   local.get $arrf32
   local.set $a|152
   i32.const 5
   i32.const 2
   i32.const 8
   i32.const 1040
   call $~lib/rt/__newArray
   local.set $b|153
   i32.const 0
   local.set $len|154
   local.get $len|154
   i32.eqz
   if
    local.get $a|152
    call $~lib/array/Array<f32>#get:length
    local.set $len|154
    local.get $len|154
    local.get $b|153
    call $~lib/array/Array<f32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<f32>|inlined.5
    end
    local.get $a|152
    local.get $b|153
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<f32>|inlined.5
    end
   end
   i32.const 0
   local.set $i|155
   loop $for-loop|17
    local.get $i|155
    local.get $len|154
    i32.lt_s
    local.set $156
    local.get $156
    if
     block $for-continue|17
      i32.const 1
      drop
      local.get $a|152
      local.get $i|155
      call $~lib/array/Array<f32>#__get
      local.tee $157
      local.get $157
      f32.ne
      if (result i32)
       local.get $b|153
       local.get $i|155
       call $~lib/array/Array<f32>#__get
       local.tee $158
       local.get $158
       f32.ne
      else
       i32.const 0
      end
      if
       br $for-continue|17
      end
      local.get $a|152
      local.get $i|155
      call $~lib/array/Array<f32>#__get
      f64.promote_f32
      local.set $x|159
      local.get $x|159
      i64.reinterpret_f64
      i64.const 63
      i64.shr_u
      i64.const 0
      i64.ne
      i32.const 0
      i32.ne
      local.get $b|153
      local.get $i|155
      call $~lib/array/Array<f32>#__get
      f64.promote_f32
      local.set $x|160
      local.get $x|160
      i64.reinterpret_f64
      i64.const 63
      i64.shr_u
      i64.const 0
      i64.ne
      i32.const 0
      i32.ne
      i32.ne
      if
       i32.const 0
       br $std/array/isArraysEqual<f32>|inlined.5
      end
      local.get $a|152
      local.get $i|155
      call $~lib/array/Array<f32>#__get
      local.get $b|153
      local.get $i|155
      call $~lib/array/Array<f32>#__get
      f32.ne
      if
       i32.const 0
       br $std/array/isArraysEqual<f32>|inlined.5
      end
     end
     local.get $i|155
     i32.const 1
     i32.add
     local.set $i|155
     br $for-loop|17
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $arrf32
  f32.const -0
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/array/Array<f32>#fill
  drop
  block $std/array/isArraysEqual<f32>|inlined.6 (result i32)
   local.get $arrf32
   local.set $a|163
   i32.const 5
   i32.const 2
   i32.const 8
   i32.const 1088
   call $~lib/rt/__newArray
   local.set $b|164
   i32.const 0
   local.set $len|165
   local.get $len|165
   i32.eqz
   if
    local.get $a|163
    call $~lib/array/Array<f32>#get:length
    local.set $len|165
    local.get $len|165
    local.get $b|164
    call $~lib/array/Array<f32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<f32>|inlined.6
    end
    local.get $a|163
    local.get $b|164
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<f32>|inlined.6
    end
   end
   i32.const 0
   local.set $i|166
   loop $for-loop|18
    local.get $i|166
    local.get $len|165
    i32.lt_s
    local.set $167
    local.get $167
    if
     block $for-continue|18
      i32.const 1
      drop
      local.get $a|163
      local.get $i|166
      call $~lib/array/Array<f32>#__get
      local.tee $168
      local.get $168
      f32.ne
      if (result i32)
       local.get $b|164
       local.get $i|166
       call $~lib/array/Array<f32>#__get
       local.tee $169
       local.get $169
       f32.ne
      else
       i32.const 0
      end
      if
       br $for-continue|18
      end
      local.get $a|163
      local.get $i|166
      call $~lib/array/Array<f32>#__get
      f64.promote_f32
      local.set $x|170
      local.get $x|170
      i64.reinterpret_f64
      i64.const 63
      i64.shr_u
      i64.const 0
      i64.ne
      i32.const 0
      i32.ne
      local.get $b|164
      local.get $i|166
      call $~lib/array/Array<f32>#__get
      f64.promote_f32
      local.set $x|171
      local.get $x|171
      i64.reinterpret_f64
      i64.const 63
      i64.shr_u
      i64.const 0
      i64.ne
      i32.const 0
      i32.ne
      i32.ne
      if
       i32.const 0
       br $std/array/isArraysEqual<f32>|inlined.6
      end
      local.get $a|163
      local.get $i|166
      call $~lib/array/Array<f32>#__get
      local.get $b|164
      local.get $i|166
      call $~lib/array/Array<f32>#__get
      f32.ne
      if
       i32.const 0
       br $std/array/isArraysEqual<f32>|inlined.6
      end
     end
     local.get $i|166
     i32.const 1
     i32.add
     local.set $i|166
     br $for-loop|18
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  call $~lib/array/Array<i32>#get:length
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $array
  local.get $array
  i32.load $0
  local.set $buffer
  local.get $buffer
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  i32.const 2
  i32.shr_s
  i32.const 8
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 42
  call $~lib/array/Array<i32>#push
  drop
  global.get $std/array/arr
  i32.const 0
  call $~lib/array/Array<i32>#__get
  i32.const 42
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  call $~lib/array/Array<i32>#get:length
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $array|174
  local.get $array|174
  i32.load $0
  local.set $buffer|175
  local.get $buffer|175
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  i32.const 2
  i32.shr_s
  i32.const 8
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  call $~lib/array/Array<i32>#pop
  local.set $i|176
  local.get $i|176
  i32.const 42
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  call $~lib/array/Array<i32>#get:length
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $array|177
  local.get $array|177
  i32.load $0
  local.set $buffer|178
  local.get $buffer|178
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  i32.const 2
  i32.shr_s
  i32.const 8
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 43
  call $~lib/array/Array<i32>#push
  drop
  global.get $std/array/arr
  call $~lib/array/Array<i32>#get:length
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $array|179
  local.get $array|179
  i32.load $0
  local.set $buffer|180
  local.get $buffer|180
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  i32.const 2
  i32.shr_s
  i32.const 8
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 0
  call $~lib/array/Array<i32>#__get
  i32.const 43
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 44
  call $~lib/array/Array<i32>#push
  drop
  global.get $std/array/arr
  call $~lib/array/Array<i32>#get:length
  i32.const 2
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $array|181
  local.get $array|181
  i32.load $0
  local.set $buffer|182
  local.get $buffer|182
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  i32.const 2
  i32.shr_s
  i32.const 8
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 0
  call $~lib/array/Array<i32>#__get
  i32.const 43
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 1
  call $~lib/array/Array<i32>#__get
  i32.const 44
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 45
  call $~lib/array/Array<i32>#push
  drop
  global.get $std/array/arr
  call $~lib/array/Array<i32>#get:length
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $array|183
  local.get $array|183
  i32.load $0
  local.set $buffer|184
  local.get $buffer|184
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  i32.const 2
  i32.shr_s
  i32.const 8
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 0
  call $~lib/array/Array<i32>#__get
  i32.const 43
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 1
  call $~lib/array/Array<i32>#__get
  i32.const 44
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 2
  call $~lib/array/Array<i32>#__get
  i32.const 45
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 2
  i32.const 2
  i32.const 9
  i32.const 0
  call $~lib/rt/__newArray
  local.set $185
  local.get $185
  i32.load $0 offset=4
  local.set $186
  local.get $185
  i32.const 0
  i32.const 0
  local.set $this|187
  i32.const 0
  local.set $v|188
  local.get $this|187
  i32.eqz
  if
   i32.const 4
   i32.const 4
   call $~lib/rt/stub/__new
   local.set $this|187
  end
  local.get $this|187
  local.get $v|188
  call $std/array/Ref#set:v
  local.get $this|187
  call $~lib/array/Array<std/array/Ref>#__uset
  local.get $185
  i32.const 1
  i32.const 0
  local.set $this|189
  i32.const 0
  local.set $v|190
  local.get $this|189
  i32.eqz
  if
   i32.const 4
   i32.const 4
   call $~lib/rt/stub/__new
   local.set $this|189
  end
  local.get $this|189
  local.get $v|190
  call $std/array/Ref#set:v
  local.get $this|189
  call $~lib/array/Array<std/array/Ref>#__uset
  local.get $185
  local.set $arr
  local.get $arr
  i32.const 0
  call $~lib/array/Array<std/array/Ref>#set:length
  local.get $arr
  call $~lib/array/Array<std/array/Ref>#get:length
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 4
  i32.const 2
  i32.const 3
  i32.const 1232
  call $~lib/rt/__newArray
  local.set $arr|194
  local.get $arr|194
  i32.const 0
  call $~lib/array/Array<i32>#at
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $arr|194
  i32.const 3
  call $~lib/array/Array<i32>#at
  i32.const 4
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $arr|194
  i32.const -1
  call $~lib/array/Array<i32>#at
  i32.const 4
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $arr|194
  i32.const -4
  call $~lib/array/Array<i32>#at
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 0
  call $~lib/array/Array<i32>#constructor
  local.set $other
  global.get $std/array/arr
  local.get $other
  call $~lib/array/Array<i32>#concat
  local.set $out
  global.get $std/array/arr
  local.set $array|197
  local.get $array|197
  i32.load $0
  local.set $buffer|198
  local.get $buffer|198
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  i32.const 2
  i32.shr_s
  i32.const 8
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  call $~lib/array/Array<i32>#get:length
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $out
  call $~lib/array/Array<i32>#get:length
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $out
  i32.const 0
  i32.const 2
  i32.const 3
  i32.const 1280
  call $~lib/rt/__newArray
  call $~lib/array/Array<i32>#concat
  drop
  global.get $std/array/arr
  local.set $array|201
  local.get $array|201
  i32.load $0
  local.set $buffer|202
  local.get $buffer|202
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  i32.const 2
  i32.shr_s
  i32.const 8
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $out
  i32.const 0
  call $~lib/array/Array<i32>#__get
  i32.const 43
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $out
  i32.const 1
  call $~lib/array/Array<i32>#__get
  i32.const 44
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $out
  i32.const 2
  call $~lib/array/Array<i32>#__get
  i32.const 45
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $other
  i32.const 46
  call $~lib/array/Array<i32>#push
  drop
  local.get $other
  i32.const 47
  call $~lib/array/Array<i32>#push
  drop
  global.get $std/array/arr
  local.get $other
  call $~lib/array/Array<i32>#concat
  local.set $out
  global.get $std/array/arr
  local.set $array|203
  local.get $array|203
  i32.load $0
  local.set $buffer|204
  local.get $buffer|204
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  i32.const 2
  i32.shr_s
  i32.const 8
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $other
  call $~lib/array/Array<i32>#get:length
  i32.const 2
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $out
  call $~lib/array/Array<i32>#get:length
  i32.const 5
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $out
  i32.const 0
  call $~lib/array/Array<i32>#__get
  i32.const 43
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $out
  i32.const 1
  call $~lib/array/Array<i32>#__get
  i32.const 44
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $out
  i32.const 2
  call $~lib/array/Array<i32>#__get
  i32.const 45
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $out
  i32.const 3
  call $~lib/array/Array<i32>#__get
  i32.const 46
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $out
  i32.const 4
  call $~lib/array/Array<i32>#__get
  i32.const 47
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $out
  call $~lib/array/Array<i32>#pop
  drop
  local.get $out
  call $~lib/array/Array<i32>#get:length
  i32.const 4
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 2
  i32.const 3
  i32.const 1312
  call $~lib/rt/__newArray
  local.set $source
  local.get $source
  call $~lib/array/Array<i32>#get:length
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $source
  global.get $std/array/arr
  call $~lib/array/Array<i32>#concat
  local.set $out
  local.get $out
  call $~lib/array/Array<i32>#get:length
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $source
  call $~lib/array/Array<i32>#get:length
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 1344
  call $~lib/rt/__newArray
  local.set $cwArr
  block $std/array/isArraysEqual<i32>|inlined.0 (result i32)
   local.get $cwArr
   i32.const 0
   i32.const 3
   global.get $~lib/builtins/i32.MAX_VALUE
   call $~lib/array/Array<i32>#copyWithin
   local.set $a|213
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 1392
   call $~lib/rt/__newArray
   local.set $b|214
   i32.const 0
   local.set $len|215
   local.get $len|215
   i32.eqz
   if
    local.get $a|213
    call $~lib/array/Array<i32>#get:length
    local.set $len|215
    local.get $len|215
    local.get $b|214
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.0
    end
    local.get $a|213
    local.get $b|214
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.0
    end
   end
   i32.const 0
   local.set $i|216
   loop $for-loop|19
    local.get $i|216
    local.get $len|215
    i32.lt_s
    local.set $217
    local.get $217
    if
     i32.const 0
     drop
     local.get $a|213
     local.get $i|216
     call $~lib/array/Array<i32>#__get
     local.get $b|214
     local.get $i|216
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.0
     end
     local.get $i|216
     i32.const 1
     i32.add
     local.set $i|216
     br $for-loop|19
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 1440
  call $~lib/rt/__newArray
  local.set $cwArr
  block $std/array/isArraysEqual<i32>|inlined.1 (result i32)
   local.get $cwArr
   i32.const 1
   i32.const 3
   global.get $~lib/builtins/i32.MAX_VALUE
   call $~lib/array/Array<i32>#copyWithin
   local.set $a|222
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 1488
   call $~lib/rt/__newArray
   local.set $b|223
   i32.const 0
   local.set $len|224
   local.get $len|224
   i32.eqz
   if
    local.get $a|222
    call $~lib/array/Array<i32>#get:length
    local.set $len|224
    local.get $len|224
    local.get $b|223
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.1
    end
    local.get $a|222
    local.get $b|223
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.1
    end
   end
   i32.const 0
   local.set $i|225
   loop $for-loop|20
    local.get $i|225
    local.get $len|224
    i32.lt_s
    local.set $226
    local.get $226
    if
     i32.const 0
     drop
     local.get $a|222
     local.get $i|225
     call $~lib/array/Array<i32>#__get
     local.get $b|223
     local.get $i|225
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.1
     end
     local.get $i|225
     i32.const 1
     i32.add
     local.set $i|225
     br $for-loop|20
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 1536
  call $~lib/rt/__newArray
  local.set $cwArr
  block $std/array/isArraysEqual<i32>|inlined.2 (result i32)
   local.get $cwArr
   i32.const 1
   i32.const 2
   global.get $~lib/builtins/i32.MAX_VALUE
   call $~lib/array/Array<i32>#copyWithin
   local.set $a|231
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 1584
   call $~lib/rt/__newArray
   local.set $b|232
   i32.const 0
   local.set $len|233
   local.get $len|233
   i32.eqz
   if
    local.get $a|231
    call $~lib/array/Array<i32>#get:length
    local.set $len|233
    local.get $len|233
    local.get $b|232
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.2
    end
    local.get $a|231
    local.get $b|232
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.2
    end
   end
   i32.const 0
   local.set $i|234
   loop $for-loop|21
    local.get $i|234
    local.get $len|233
    i32.lt_s
    local.set $235
    local.get $235
    if
     i32.const 0
     drop
     local.get $a|231
     local.get $i|234
     call $~lib/array/Array<i32>#__get
     local.get $b|232
     local.get $i|234
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.2
     end
     local.get $i|234
     i32.const 1
     i32.add
     local.set $i|234
     br $for-loop|21
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 1632
  call $~lib/rt/__newArray
  local.set $cwArr
  block $std/array/isArraysEqual<i32>|inlined.3 (result i32)
   local.get $cwArr
   i32.const 2
   i32.const 2
   global.get $~lib/builtins/i32.MAX_VALUE
   call $~lib/array/Array<i32>#copyWithin
   local.set $a|240
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 1680
   call $~lib/rt/__newArray
   local.set $b|241
   i32.const 0
   local.set $len|242
   local.get $len|242
   i32.eqz
   if
    local.get $a|240
    call $~lib/array/Array<i32>#get:length
    local.set $len|242
    local.get $len|242
    local.get $b|241
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.3
    end
    local.get $a|240
    local.get $b|241
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.3
    end
   end
   i32.const 0
   local.set $i|243
   loop $for-loop|22
    local.get $i|243
    local.get $len|242
    i32.lt_s
    local.set $244
    local.get $244
    if
     i32.const 0
     drop
     local.get $a|240
     local.get $i|243
     call $~lib/array/Array<i32>#__get
     local.get $b|241
     local.get $i|243
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.3
     end
     local.get $i|243
     i32.const 1
     i32.add
     local.set $i|243
     br $for-loop|22
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 1728
  call $~lib/rt/__newArray
  local.set $cwArr
  block $std/array/isArraysEqual<i32>|inlined.4 (result i32)
   local.get $cwArr
   i32.const 0
   i32.const 3
   i32.const 4
   call $~lib/array/Array<i32>#copyWithin
   local.set $a|249
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 1776
   call $~lib/rt/__newArray
   local.set $b|250
   i32.const 0
   local.set $len|251
   local.get $len|251
   i32.eqz
   if
    local.get $a|249
    call $~lib/array/Array<i32>#get:length
    local.set $len|251
    local.get $len|251
    local.get $b|250
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.4
    end
    local.get $a|249
    local.get $b|250
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.4
    end
   end
   i32.const 0
   local.set $i|252
   loop $for-loop|23
    local.get $i|252
    local.get $len|251
    i32.lt_s
    local.set $253
    local.get $253
    if
     i32.const 0
     drop
     local.get $a|249
     local.get $i|252
     call $~lib/array/Array<i32>#__get
     local.get $b|250
     local.get $i|252
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.4
     end
     local.get $i|252
     i32.const 1
     i32.add
     local.set $i|252
     br $for-loop|23
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 1824
  call $~lib/rt/__newArray
  local.set $cwArr
  block $std/array/isArraysEqual<i32>|inlined.5 (result i32)
   local.get $cwArr
   i32.const 1
   i32.const 3
   i32.const 4
   call $~lib/array/Array<i32>#copyWithin
   local.set $a|258
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 1872
   call $~lib/rt/__newArray
   local.set $b|259
   i32.const 0
   local.set $len|260
   local.get $len|260
   i32.eqz
   if
    local.get $a|258
    call $~lib/array/Array<i32>#get:length
    local.set $len|260
    local.get $len|260
    local.get $b|259
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.5
    end
    local.get $a|258
    local.get $b|259
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.5
    end
   end
   i32.const 0
   local.set $i|261
   loop $for-loop|24
    local.get $i|261
    local.get $len|260
    i32.lt_s
    local.set $262
    local.get $262
    if
     i32.const 0
     drop
     local.get $a|258
     local.get $i|261
     call $~lib/array/Array<i32>#__get
     local.get $b|259
     local.get $i|261
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.5
     end
     local.get $i|261
     i32.const 1
     i32.add
     local.set $i|261
     br $for-loop|24
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 1920
  call $~lib/rt/__newArray
  local.set $cwArr
  block $std/array/isArraysEqual<i32>|inlined.6 (result i32)
   local.get $cwArr
   i32.const 1
   i32.const 2
   i32.const 4
   call $~lib/array/Array<i32>#copyWithin
   local.set $a|267
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 1968
   call $~lib/rt/__newArray
   local.set $b|268
   i32.const 0
   local.set $len|269
   local.get $len|269
   i32.eqz
   if
    local.get $a|267
    call $~lib/array/Array<i32>#get:length
    local.set $len|269
    local.get $len|269
    local.get $b|268
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.6
    end
    local.get $a|267
    local.get $b|268
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.6
    end
   end
   i32.const 0
   local.set $i|270
   loop $for-loop|25
    local.get $i|270
    local.get $len|269
    i32.lt_s
    local.set $271
    local.get $271
    if
     i32.const 0
     drop
     local.get $a|267
     local.get $i|270
     call $~lib/array/Array<i32>#__get
     local.get $b|268
     local.get $i|270
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.6
     end
     local.get $i|270
     i32.const 1
     i32.add
     local.set $i|270
     br $for-loop|25
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 2016
  call $~lib/rt/__newArray
  local.set $cwArr
  block $std/array/isArraysEqual<i32>|inlined.7 (result i32)
   local.get $cwArr
   i32.const 0
   i32.const -2
   global.get $~lib/builtins/i32.MAX_VALUE
   call $~lib/array/Array<i32>#copyWithin
   local.set $a|276
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 2064
   call $~lib/rt/__newArray
   local.set $b|277
   i32.const 0
   local.set $len|278
   local.get $len|278
   i32.eqz
   if
    local.get $a|276
    call $~lib/array/Array<i32>#get:length
    local.set $len|278
    local.get $len|278
    local.get $b|277
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.7
    end
    local.get $a|276
    local.get $b|277
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.7
    end
   end
   i32.const 0
   local.set $i|279
   loop $for-loop|26
    local.get $i|279
    local.get $len|278
    i32.lt_s
    local.set $280
    local.get $280
    if
     i32.const 0
     drop
     local.get $a|276
     local.get $i|279
     call $~lib/array/Array<i32>#__get
     local.get $b|277
     local.get $i|279
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.7
     end
     local.get $i|279
     i32.const 1
     i32.add
     local.set $i|279
     br $for-loop|26
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 2112
  call $~lib/rt/__newArray
  local.set $cwArr
  block $std/array/isArraysEqual<i32>|inlined.8 (result i32)
   local.get $cwArr
   i32.const 0
   i32.const -2
   i32.const -1
   call $~lib/array/Array<i32>#copyWithin
   local.set $a|285
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 2160
   call $~lib/rt/__newArray
   local.set $b|286
   i32.const 0
   local.set $len|287
   local.get $len|287
   i32.eqz
   if
    local.get $a|285
    call $~lib/array/Array<i32>#get:length
    local.set $len|287
    local.get $len|287
    local.get $b|286
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.8
    end
    local.get $a|285
    local.get $b|286
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.8
    end
   end
   i32.const 0
   local.set $i|288
   loop $for-loop|27
    local.get $i|288
    local.get $len|287
    i32.lt_s
    local.set $289
    local.get $289
    if
     i32.const 0
     drop
     local.get $a|285
     local.get $i|288
     call $~lib/array/Array<i32>#__get
     local.get $b|286
     local.get $i|288
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.8
     end
     local.get $i|288
     i32.const 1
     i32.add
     local.set $i|288
     br $for-loop|27
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 2208
  call $~lib/rt/__newArray
  local.set $cwArr
  block $std/array/isArraysEqual<i32>|inlined.9 (result i32)
   local.get $cwArr
   i32.const -4
   i32.const -3
   i32.const -2
   call $~lib/array/Array<i32>#copyWithin
   local.set $a|294
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 2256
   call $~lib/rt/__newArray
   local.set $b|295
   i32.const 0
   local.set $len|296
   local.get $len|296
   i32.eqz
   if
    local.get $a|294
    call $~lib/array/Array<i32>#get:length
    local.set $len|296
    local.get $len|296
    local.get $b|295
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.9
    end
    local.get $a|294
    local.get $b|295
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.9
    end
   end
   i32.const 0
   local.set $i|297
   loop $for-loop|28
    local.get $i|297
    local.get $len|296
    i32.lt_s
    local.set $298
    local.get $298
    if
     i32.const 0
     drop
     local.get $a|294
     local.get $i|297
     call $~lib/array/Array<i32>#__get
     local.get $b|295
     local.get $i|297
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.9
     end
     local.get $i|297
     i32.const 1
     i32.add
     local.set $i|297
     br $for-loop|28
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 2304
  call $~lib/rt/__newArray
  local.set $cwArr
  block $std/array/isArraysEqual<i32>|inlined.10 (result i32)
   local.get $cwArr
   i32.const -4
   i32.const -3
   i32.const -1
   call $~lib/array/Array<i32>#copyWithin
   local.set $a|303
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 2352
   call $~lib/rt/__newArray
   local.set $b|304
   i32.const 0
   local.set $len|305
   local.get $len|305
   i32.eqz
   if
    local.get $a|303
    call $~lib/array/Array<i32>#get:length
    local.set $len|305
    local.get $len|305
    local.get $b|304
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.10
    end
    local.get $a|303
    local.get $b|304
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.10
    end
   end
   i32.const 0
   local.set $i|306
   loop $for-loop|29
    local.get $i|306
    local.get $len|305
    i32.lt_s
    local.set $307
    local.get $307
    if
     i32.const 0
     drop
     local.get $a|303
     local.get $i|306
     call $~lib/array/Array<i32>#__get
     local.get $b|304
     local.get $i|306
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.10
     end
     local.get $i|306
     i32.const 1
     i32.add
     local.set $i|306
     br $for-loop|29
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 2400
  call $~lib/rt/__newArray
  local.set $cwArr
  block $std/array/isArraysEqual<i32>|inlined.11 (result i32)
   local.get $cwArr
   i32.const -4
   i32.const -3
   global.get $~lib/builtins/i32.MAX_VALUE
   call $~lib/array/Array<i32>#copyWithin
   local.set $a|312
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 2448
   call $~lib/rt/__newArray
   local.set $b|313
   i32.const 0
   local.set $len|314
   local.get $len|314
   i32.eqz
   if
    local.get $a|312
    call $~lib/array/Array<i32>#get:length
    local.set $len|314
    local.get $len|314
    local.get $b|313
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.11
    end
    local.get $a|312
    local.get $b|313
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.11
    end
   end
   i32.const 0
   local.set $i|315
   loop $for-loop|30
    local.get $i|315
    local.get $len|314
    i32.lt_s
    local.set $316
    local.get $316
    if
     i32.const 0
     drop
     local.get $a|312
     local.get $i|315
     call $~lib/array/Array<i32>#__get
     local.get $b|313
     local.get $i|315
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.11
     end
     local.get $i|315
     i32.const 1
     i32.add
     local.set $i|315
     br $for-loop|30
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 42
  call $~lib/array/Array<i32>#unshift
  drop
  global.get $std/array/arr
  call $~lib/array/Array<i32>#get:length
  i32.const 4
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $array|317
  local.get $array|317
  i32.load $0
  local.set $buffer|318
  local.get $buffer|318
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  i32.const 2
  i32.shr_s
  i32.const 8
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 0
  call $~lib/array/Array<i32>#__get
  i32.const 42
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 1
  call $~lib/array/Array<i32>#__get
  i32.const 43
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 2
  call $~lib/array/Array<i32>#__get
  i32.const 44
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 3
  call $~lib/array/Array<i32>#__get
  i32.const 45
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 41
  call $~lib/array/Array<i32>#unshift
  drop
  global.get $std/array/arr
  call $~lib/array/Array<i32>#get:length
  i32.const 5
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $array|319
  local.get $array|319
  i32.load $0
  local.set $buffer|320
  local.get $buffer|320
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  i32.const 2
  i32.shr_s
  i32.const 8
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 0
  call $~lib/array/Array<i32>#__get
  i32.const 41
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 1
  call $~lib/array/Array<i32>#__get
  i32.const 42
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 2
  call $~lib/array/Array<i32>#__get
  i32.const 43
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 3
  call $~lib/array/Array<i32>#__get
  i32.const 44
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 4
  call $~lib/array/Array<i32>#__get
  i32.const 45
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  call $~lib/array/Array<i32>#shift
  global.set $std/array/i
  global.get $std/array/i
  i32.const 41
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  call $~lib/array/Array<i32>#get:length
  i32.const 4
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $array|321
  local.get $array|321
  i32.load $0
  local.set $buffer|322
  local.get $buffer|322
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  i32.const 2
  i32.shr_s
  i32.const 8
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 0
  call $~lib/array/Array<i32>#__get
  i32.const 42
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 1
  call $~lib/array/Array<i32>#__get
  i32.const 43
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 2
  call $~lib/array/Array<i32>#__get
  i32.const 44
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 3
  call $~lib/array/Array<i32>#__get
  i32.const 45
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  call $~lib/array/Array<i32>#pop
  global.set $std/array/i
  global.get $std/array/i
  i32.const 45
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  call $~lib/array/Array<i32>#get:length
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $array|323
  local.get $array|323
  i32.load $0
  local.set $buffer|324
  local.get $buffer|324
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  i32.const 2
  i32.shr_s
  i32.const 8
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 0
  call $~lib/array/Array<i32>#__get
  i32.const 42
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 1
  call $~lib/array/Array<i32>#__get
  i32.const 43
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 2
  call $~lib/array/Array<i32>#__get
  i32.const 44
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 2496
  call $~lib/rt/__newArray
  local.set $elements
  local.get $elements
  i32.const 2
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/array/Array<i32>#slice
  local.set $result
  block $std/array/isArraysEqual<i32>|inlined.12 (result i32)
   local.get $result
   local.set $a|331
   i32.const 3
   i32.const 2
   i32.const 3
   i32.const 2544
   call $~lib/rt/__newArray
   local.set $b|332
   i32.const 0
   local.set $len|333
   local.get $len|333
   i32.eqz
   if
    local.get $a|331
    call $~lib/array/Array<i32>#get:length
    local.set $len|333
    local.get $len|333
    local.get $b|332
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.12
    end
    local.get $a|331
    local.get $b|332
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.12
    end
   end
   i32.const 0
   local.set $i|334
   loop $for-loop|31
    local.get $i|334
    local.get $len|333
    i32.lt_s
    local.set $335
    local.get $335
    if
     i32.const 0
     drop
     local.get $a|331
     local.get $i|334
     call $~lib/array/Array<i32>#__get
     local.get $b|332
     local.get $i|334
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.12
     end
     local.get $i|334
     i32.const 1
     i32.add
     local.set $i|334
     br $for-loop|31
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $elements
  i32.const 2
  i32.const 4
  call $~lib/array/Array<i32>#slice
  local.set $result
  block $std/array/isArraysEqual<i32>|inlined.13 (result i32)
   local.get $result
   local.set $a|338
   i32.const 2
   i32.const 2
   i32.const 3
   i32.const 2576
   call $~lib/rt/__newArray
   local.set $b|339
   i32.const 0
   local.set $len|340
   local.get $len|340
   i32.eqz
   if
    local.get $a|338
    call $~lib/array/Array<i32>#get:length
    local.set $len|340
    local.get $len|340
    local.get $b|339
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.13
    end
    local.get $a|338
    local.get $b|339
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.13
    end
   end
   i32.const 0
   local.set $i|341
   loop $for-loop|32
    local.get $i|341
    local.get $len|340
    i32.lt_s
    local.set $342
    local.get $342
    if
     i32.const 0
     drop
     local.get $a|338
     local.get $i|341
     call $~lib/array/Array<i32>#__get
     local.get $b|339
     local.get $i|341
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.13
     end
     local.get $i|341
     i32.const 1
     i32.add
     local.set $i|341
     br $for-loop|32
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $elements
  i32.const 1
  i32.const 5
  call $~lib/array/Array<i32>#slice
  local.set $result
  block $std/array/isArraysEqual<i32>|inlined.14 (result i32)
   local.get $result
   local.set $a|345
   i32.const 4
   i32.const 2
   i32.const 3
   i32.const 2608
   call $~lib/rt/__newArray
   local.set $b|346
   i32.const 0
   local.set $len|347
   local.get $len|347
   i32.eqz
   if
    local.get $a|345
    call $~lib/array/Array<i32>#get:length
    local.set $len|347
    local.get $len|347
    local.get $b|346
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.14
    end
    local.get $a|345
    local.get $b|346
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.14
    end
   end
   i32.const 0
   local.set $i|348
   loop $for-loop|33
    local.get $i|348
    local.get $len|347
    i32.lt_s
    local.set $349
    local.get $349
    if
     i32.const 0
     drop
     local.get $a|345
     local.get $i|348
     call $~lib/array/Array<i32>#__get
     local.get $b|346
     local.get $i|348
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.14
     end
     local.get $i|348
     i32.const 1
     i32.add
     local.set $i|348
     br $for-loop|33
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $elements
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/array/Array<i32>#slice
  local.set $result
  block $std/array/isArraysEqual<i32>|inlined.15 (result i32)
   local.get $result
   local.set $a|350
   local.get $elements
   local.set $b|351
   i32.const 0
   local.set $len|352
   local.get $len|352
   i32.eqz
   if
    local.get $a|350
    call $~lib/array/Array<i32>#get:length
    local.set $len|352
    local.get $len|352
    local.get $b|351
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.15
    end
    local.get $a|350
    local.get $b|351
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.15
    end
   end
   i32.const 0
   local.set $i|353
   loop $for-loop|34
    local.get $i|353
    local.get $len|352
    i32.lt_s
    local.set $354
    local.get $354
    if
     i32.const 0
     drop
     local.get $a|350
     local.get $i|353
     call $~lib/array/Array<i32>#__get
     local.get $b|351
     local.get $i|353
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.15
     end
     local.get $i|353
     i32.const 1
     i32.add
     local.set $i|353
     br $for-loop|34
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $elements
  i32.const -2
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/array/Array<i32>#slice
  local.set $result
  block $std/array/isArraysEqual<i32>|inlined.16 (result i32)
   local.get $result
   local.set $a|357
   i32.const 2
   i32.const 2
   i32.const 3
   i32.const 2656
   call $~lib/rt/__newArray
   local.set $b|358
   i32.const 0
   local.set $len|359
   local.get $len|359
   i32.eqz
   if
    local.get $a|357
    call $~lib/array/Array<i32>#get:length
    local.set $len|359
    local.get $len|359
    local.get $b|358
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.16
    end
    local.get $a|357
    local.get $b|358
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.16
    end
   end
   i32.const 0
   local.set $i|360
   loop $for-loop|35
    local.get $i|360
    local.get $len|359
    i32.lt_s
    local.set $361
    local.get $361
    if
     i32.const 0
     drop
     local.get $a|357
     local.get $i|360
     call $~lib/array/Array<i32>#__get
     local.get $b|358
     local.get $i|360
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.16
     end
     local.get $i|360
     i32.const 1
     i32.add
     local.set $i|360
     br $for-loop|35
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $elements
  i32.const 2
  i32.const -1
  call $~lib/array/Array<i32>#slice
  local.set $result
  block $std/array/isArraysEqual<i32>|inlined.17 (result i32)
   local.get $result
   local.set $a|364
   i32.const 2
   i32.const 2
   i32.const 3
   i32.const 2688
   call $~lib/rt/__newArray
   local.set $b|365
   i32.const 0
   local.set $len|366
   local.get $len|366
   i32.eqz
   if
    local.get $a|364
    call $~lib/array/Array<i32>#get:length
    local.set $len|366
    local.get $len|366
    local.get $b|365
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.17
    end
    local.get $a|364
    local.get $b|365
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.17
    end
   end
   i32.const 0
   local.set $i|367
   loop $for-loop|36
    local.get $i|367
    local.get $len|366
    i32.lt_s
    local.set $368
    local.get $368
    if
     i32.const 0
     drop
     local.get $a|364
     local.get $i|367
     call $~lib/array/Array<i32>#__get
     local.get $b|365
     local.get $i|367
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.17
     end
     local.get $i|367
     i32.const 1
     i32.add
     local.set $i|367
     br $for-loop|36
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $elements
  i32.const -3
  i32.const -1
  call $~lib/array/Array<i32>#slice
  local.set $result
  block $std/array/isArraysEqual<i32>|inlined.18 (result i32)
   local.get $result
   local.set $a|371
   i32.const 2
   i32.const 2
   i32.const 3
   i32.const 2720
   call $~lib/rt/__newArray
   local.set $b|372
   i32.const 0
   local.set $len|373
   local.get $len|373
   i32.eqz
   if
    local.get $a|371
    call $~lib/array/Array<i32>#get:length
    local.set $len|373
    local.get $len|373
    local.get $b|372
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.18
    end
    local.get $a|371
    local.get $b|372
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.18
    end
   end
   i32.const 0
   local.set $i|374
   loop $for-loop|37
    local.get $i|374
    local.get $len|373
    i32.lt_s
    local.set $375
    local.get $375
    if
     i32.const 0
     drop
     local.get $a|371
     local.get $i|374
     call $~lib/array/Array<i32>#__get
     local.get $b|372
     local.get $i|374
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.18
     end
     local.get $i|374
     i32.const 1
     i32.add
     local.set $i|374
     br $for-loop|37
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $elements
  i32.const -1
  i32.const -3
  call $~lib/array/Array<i32>#slice
  call $~lib/array/Array<i32>#get:length
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $elements
  i32.const 10
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/array/Array<i32>#slice
  call $~lib/array/Array<i32>#get:length
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  call $~lib/array/Array<i32>#reverse
  drop
  global.get $std/array/arr
  call $~lib/array/Array<i32>#get:length
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $array|376
  local.get $array|376
  i32.load $0
  local.set $buffer|377
  local.get $buffer|377
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  i32.const 2
  i32.shr_s
  i32.const 8
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 0
  call $~lib/array/Array<i32>#__get
  i32.const 44
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 1
  call $~lib/array/Array<i32>#__get
  i32.const 43
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 2
  call $~lib/array/Array<i32>#__get
  i32.const 42
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 43
  call $~lib/array/Array<i32>#push
  drop
  global.get $std/array/arr
  i32.const 44
  call $~lib/array/Array<i32>#push
  drop
  i32.const 4
  i32.const 0
  i32.const 6
  i32.const 2752
  call $~lib/rt/__newArray
  call $~lib/array/Array<u8>#reverse
  local.set $bytes4
  i32.const 0
  local.set $i|381
  local.get $bytes4
  call $~lib/array/Array<u8>#get:length
  local.set $l
  loop $for-loop|38
   local.get $i|381
   local.get $l
   i32.lt_s
   local.set $383
   local.get $383
   if
    local.get $bytes4
    local.get $i|381
    call $~lib/array/Array<u8>#__get
    local.get $bytes4
    call $~lib/array/Array<u8>#get:length
    local.get $i|381
    i32.sub
    i32.const 1
    i32.sub
    i32.eq
    i32.eqz
    if
     unreachable
    end
    local.get $i|381
    i32.const 1
    i32.add
    local.set $i|381
    br $for-loop|38
   end
  end
  i32.const 8
  i32.const 0
  i32.const 6
  i32.const 2784
  call $~lib/rt/__newArray
  call $~lib/array/Array<u8>#reverse
  local.set $bytes8
  i32.const 0
  local.set $i|387
  local.get $bytes8
  call $~lib/array/Array<u8>#get:length
  local.set $l|388
  loop $for-loop|39
   local.get $i|387
   local.get $l|388
   i32.lt_s
   local.set $389
   local.get $389
   if
    local.get $bytes8
    local.get $i|387
    call $~lib/array/Array<u8>#__get
    local.get $bytes8
    call $~lib/array/Array<u8>#get:length
    local.get $i|387
    i32.sub
    i32.const 1
    i32.sub
    i32.eq
    i32.eqz
    if
     unreachable
    end
    local.get $i|387
    i32.const 1
    i32.add
    local.set $i|387
    br $for-loop|39
   end
  end
  i32.const 17
  i32.const 0
  i32.const 6
  i32.const 2816
  call $~lib/rt/__newArray
  call $~lib/array/Array<u8>#reverse
  local.set $bytes17
  i32.const 0
  local.set $i|393
  local.get $bytes17
  call $~lib/array/Array<u8>#get:length
  local.set $l|394
  loop $for-loop|40
   local.get $i|393
   local.get $l|394
   i32.lt_s
   local.set $395
   local.get $395
   if
    local.get $bytes17
    local.get $i|393
    call $~lib/array/Array<u8>#__get
    local.get $bytes17
    call $~lib/array/Array<u8>#get:length
    local.get $i|393
    i32.sub
    i32.const 1
    i32.sub
    i32.eq
    i32.eqz
    if
     unreachable
    end
    local.get $i|393
    i32.const 1
    i32.add
    local.set $i|393
    br $for-loop|40
   end
  end
  i32.const 7
  i32.const 1
  i32.const 11
  i32.const 2864
  call $~lib/rt/__newArray
  call $~lib/array/Array<u16>#reverse
  local.set $shorts7
  i32.const 0
  local.set $i|399
  local.get $shorts7
  call $~lib/array/Array<u16>#get:length
  local.set $l|400
  loop $for-loop|41
   local.get $i|399
   local.get $l|400
   i32.lt_s
   local.set $401
   local.get $401
   if
    local.get $shorts7
    local.get $i|399
    call $~lib/array/Array<u16>#__get
    local.get $shorts7
    call $~lib/array/Array<u16>#get:length
    local.get $i|399
    i32.sub
    i32.const 1
    i32.sub
    i32.eq
    i32.eqz
    if
     unreachable
    end
    local.get $i|399
    i32.const 1
    i32.add
    local.set $i|399
    br $for-loop|41
   end
  end
  i32.const 8
  i32.const 1
  i32.const 11
  i32.const 2912
  call $~lib/rt/__newArray
  call $~lib/array/Array<u16>#reverse
  local.set $shorts8
  i32.const 0
  local.set $i|405
  local.get $shorts8
  call $~lib/array/Array<u16>#get:length
  local.set $l|406
  loop $for-loop|42
   local.get $i|405
   local.get $l|406
   i32.lt_s
   local.set $407
   local.get $407
   if
    local.get $shorts8
    local.get $i|405
    call $~lib/array/Array<u16>#__get
    local.get $shorts8
    call $~lib/array/Array<u16>#get:length
    local.get $i|405
    i32.sub
    i32.const 1
    i32.sub
    i32.eq
    i32.eqz
    if
     unreachable
    end
    local.get $i|405
    i32.const 1
    i32.add
    local.set $i|405
    br $for-loop|42
   end
  end
  i32.const 9
  i32.const 1
  i32.const 11
  i32.const 2960
  call $~lib/rt/__newArray
  call $~lib/array/Array<u16>#reverse
  local.set $shorts9
  i32.const 0
  local.set $i|411
  local.get $shorts9
  call $~lib/array/Array<u16>#get:length
  local.set $l|412
  loop $for-loop|43
   local.get $i|411
   local.get $l|412
   i32.lt_s
   local.set $413
   local.get $413
   if
    local.get $shorts9
    local.get $i|411
    call $~lib/array/Array<u16>#__get
    local.get $shorts9
    call $~lib/array/Array<u16>#get:length
    local.get $i|411
    i32.sub
    i32.const 1
    i32.sub
    i32.eq
    i32.eqz
    if
     unreachable
    end
    local.get $i|411
    i32.const 1
    i32.add
    local.set $i|411
    br $for-loop|43
   end
  end
  global.get $std/array/arr
  i32.const 44
  i32.const 0
  call $~lib/array/Array<i32>#indexOf
  global.set $std/array/i
  global.get $std/array/i
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 42
  i32.const 0
  call $~lib/array/Array<i32>#indexOf
  global.set $std/array/i
  global.get $std/array/i
  i32.const 2
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 45
  i32.const 0
  call $~lib/array/Array<i32>#indexOf
  global.set $std/array/i
  global.get $std/array/i
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 43
  i32.const 100
  call $~lib/array/Array<i32>#indexOf
  global.set $std/array/i
  global.get $std/array/i
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 43
  i32.const -100
  call $~lib/array/Array<i32>#indexOf
  global.set $std/array/i
  global.get $std/array/i
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 43
  i32.const -2
  call $~lib/array/Array<i32>#indexOf
  global.set $std/array/i
  global.get $std/array/i
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 43
  i32.const -4
  call $~lib/array/Array<i32>#indexOf
  global.set $std/array/i
  global.get $std/array/i
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 43
  i32.const 0
  call $~lib/array/Array<i32>#indexOf
  global.set $std/array/i
  global.get $std/array/i
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 43
  i32.const 1
  call $~lib/array/Array<i32>#indexOf
  global.set $std/array/i
  global.get $std/array/i
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 43
  i32.const 2
  call $~lib/array/Array<i32>#indexOf
  global.set $std/array/i
  global.get $std/array/i
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 1
  i32.const 2
  i32.const 8
  i32.const 3008
  call $~lib/rt/__newArray
  f32.const nan:0x400000
  i32.const 0
  call $~lib/array/Array<f32>#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 1
  i32.const 3
  i32.const 12
  i32.const 3040
  call $~lib/rt/__newArray
  f64.const nan:0x8000000000000
  i32.const 0
  call $~lib/array/Array<f64>#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 4
  i32.const 2
  i32.const 3
  i32.const 3072
  call $~lib/rt/__newArray
  local.set $numbers
  local.get $numbers
  i32.const 2
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/array/Array<i32>#lastIndexOf@varargs
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $numbers
  i32.const 7
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/array/Array<i32>#lastIndexOf@varargs
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $numbers
  i32.const 2
  i32.const 3
  call $~lib/array/Array<i32>#lastIndexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $numbers
  i32.const 2
  i32.const 2
  call $~lib/array/Array<i32>#lastIndexOf
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $numbers
  i32.const 2
  i32.const -2
  call $~lib/array/Array<i32>#lastIndexOf
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $numbers
  i32.const 2
  i32.const -1
  call $~lib/array/Array<i32>#lastIndexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 44
  i32.const 0
  call $~lib/array/Array<i32>#includes
  local.set $includes
  local.get $includes
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 42
  i32.const 0
  call $~lib/array/Array<i32>#includes
  local.set $includes
  local.get $includes
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 45
  i32.const 0
  call $~lib/array/Array<i32>#includes
  local.set $includes
  local.get $includes
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 43
  i32.const 100
  call $~lib/array/Array<i32>#includes
  local.set $includes
  local.get $includes
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 43
  i32.const -100
  call $~lib/array/Array<i32>#includes
  local.set $includes
  local.get $includes
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 43
  i32.const -2
  call $~lib/array/Array<i32>#includes
  local.set $includes
  local.get $includes
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 43
  i32.const -4
  call $~lib/array/Array<i32>#includes
  local.set $includes
  local.get $includes
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 43
  i32.const 0
  call $~lib/array/Array<i32>#includes
  local.set $includes
  local.get $includes
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 43
  i32.const 1
  call $~lib/array/Array<i32>#includes
  local.set $includes
  local.get $includes
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 43
  i32.const 2
  call $~lib/array/Array<i32>#includes
  local.set $includes
  local.get $includes
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 1
  i32.const 2
  i32.const 8
  i32.const 3120
  call $~lib/rt/__newArray
  f32.const nan:0x400000
  i32.const 0
  call $~lib/array/Array<f32>#includes
  i32.eqz
  if
   unreachable
  end
  i32.const 1
  i32.const 3
  i32.const 12
  i32.const 3152
  call $~lib/rt/__newArray
  f64.const nan:0x8000000000000
  i32.const 0
  call $~lib/array/Array<f64>#includes
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 1
  i32.const 1
  call $~lib/array/Array<i32>#splice
  drop
  global.get $std/array/arr
  call $~lib/array/Array<i32>#get:length
  i32.const 4
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $array|426
  local.get $array|426
  i32.load $0
  local.set $buffer|427
  local.get $buffer|427
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  i32.const 2
  i32.shr_s
  i32.const 8
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 0
  call $~lib/array/Array<i32>#__get
  i32.const 44
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 1
  call $~lib/array/Array<i32>#__get
  i32.const 42
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 3184
  call $~lib/rt/__newArray
  local.set $sarr
  block $std/array/isArraysEqual<i32>|inlined.19 (result i32)
   local.get $sarr
   i32.const 0
   global.get $~lib/builtins/i32.MAX_VALUE
   call $~lib/array/Array<i32>#splice
   local.set $a|433
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 3232
   call $~lib/rt/__newArray
   local.set $b|434
   i32.const 0
   local.set $len|435
   local.get $len|435
   i32.eqz
   if
    local.get $a|433
    call $~lib/array/Array<i32>#get:length
    local.set $len|435
    local.get $len|435
    local.get $b|434
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.19
    end
    local.get $a|433
    local.get $b|434
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.19
    end
   end
   i32.const 0
   local.set $i|436
   loop $for-loop|44
    local.get $i|436
    local.get $len|435
    i32.lt_s
    local.set $437
    local.get $437
    if
     i32.const 0
     drop
     local.get $a|433
     local.get $i|436
     call $~lib/array/Array<i32>#__get
     local.get $b|434
     local.get $i|436
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.19
     end
     local.get $i|436
     i32.const 1
     i32.add
     local.set $i|436
     br $for-loop|44
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.20 (result i32)
   local.get $sarr
   local.set $a|440
   i32.const 0
   i32.const 2
   i32.const 3
   i32.const 3280
   call $~lib/rt/__newArray
   local.set $b|441
   i32.const 0
   local.set $len|442
   local.get $len|442
   i32.eqz
   if
    local.get $a|440
    call $~lib/array/Array<i32>#get:length
    local.set $len|442
    local.get $len|442
    local.get $b|441
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.20
    end
    local.get $a|440
    local.get $b|441
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.20
    end
   end
   i32.const 0
   local.set $i|443
   loop $for-loop|45
    local.get $i|443
    local.get $len|442
    i32.lt_s
    local.set $444
    local.get $444
    if
     i32.const 0
     drop
     local.get $a|440
     local.get $i|443
     call $~lib/array/Array<i32>#__get
     local.get $b|441
     local.get $i|443
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.20
     end
     local.get $i|443
     i32.const 1
     i32.add
     local.set $i|443
     br $for-loop|45
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 3312
  call $~lib/rt/__newArray
  local.set $sarr
  block $std/array/isArraysEqual<i32>|inlined.21 (result i32)
   local.get $sarr
   i32.const 0
   i32.const 0
   call $~lib/array/Array<i32>#splice
   local.set $a|449
   i32.const 0
   i32.const 2
   i32.const 3
   i32.const 3360
   call $~lib/rt/__newArray
   local.set $b|450
   i32.const 0
   local.set $len|451
   local.get $len|451
   i32.eqz
   if
    local.get $a|449
    call $~lib/array/Array<i32>#get:length
    local.set $len|451
    local.get $len|451
    local.get $b|450
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.21
    end
    local.get $a|449
    local.get $b|450
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.21
    end
   end
   i32.const 0
   local.set $i|452
   loop $for-loop|46
    local.get $i|452
    local.get $len|451
    i32.lt_s
    local.set $453
    local.get $453
    if
     i32.const 0
     drop
     local.get $a|449
     local.get $i|452
     call $~lib/array/Array<i32>#__get
     local.get $b|450
     local.get $i|452
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.21
     end
     local.get $i|452
     i32.const 1
     i32.add
     local.set $i|452
     br $for-loop|46
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.22 (result i32)
   local.get $sarr
   local.set $a|456
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 3392
   call $~lib/rt/__newArray
   local.set $b|457
   i32.const 0
   local.set $len|458
   local.get $len|458
   i32.eqz
   if
    local.get $a|456
    call $~lib/array/Array<i32>#get:length
    local.set $len|458
    local.get $len|458
    local.get $b|457
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.22
    end
    local.get $a|456
    local.get $b|457
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.22
    end
   end
   i32.const 0
   local.set $i|459
   loop $for-loop|47
    local.get $i|459
    local.get $len|458
    i32.lt_s
    local.set $460
    local.get $460
    if
     i32.const 0
     drop
     local.get $a|456
     local.get $i|459
     call $~lib/array/Array<i32>#__get
     local.get $b|457
     local.get $i|459
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.22
     end
     local.get $i|459
     i32.const 1
     i32.add
     local.set $i|459
     br $for-loop|47
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 3440
  call $~lib/rt/__newArray
  local.set $sarr
  block $std/array/isArraysEqual<i32>|inlined.23 (result i32)
   local.get $sarr
   i32.const 2
   global.get $~lib/builtins/i32.MAX_VALUE
   call $~lib/array/Array<i32>#splice
   local.set $a|465
   i32.const 3
   i32.const 2
   i32.const 3
   i32.const 3488
   call $~lib/rt/__newArray
   local.set $b|466
   i32.const 0
   local.set $len|467
   local.get $len|467
   i32.eqz
   if
    local.get $a|465
    call $~lib/array/Array<i32>#get:length
    local.set $len|467
    local.get $len|467
    local.get $b|466
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.23
    end
    local.get $a|465
    local.get $b|466
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.23
    end
   end
   i32.const 0
   local.set $i|468
   loop $for-loop|48
    local.get $i|468
    local.get $len|467
    i32.lt_s
    local.set $469
    local.get $469
    if
     i32.const 0
     drop
     local.get $a|465
     local.get $i|468
     call $~lib/array/Array<i32>#__get
     local.get $b|466
     local.get $i|468
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.23
     end
     local.get $i|468
     i32.const 1
     i32.add
     local.set $i|468
     br $for-loop|48
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.24 (result i32)
   local.get $sarr
   local.set $a|472
   i32.const 2
   i32.const 2
   i32.const 3
   i32.const 3520
   call $~lib/rt/__newArray
   local.set $b|473
   i32.const 0
   local.set $len|474
   local.get $len|474
   i32.eqz
   if
    local.get $a|472
    call $~lib/array/Array<i32>#get:length
    local.set $len|474
    local.get $len|474
    local.get $b|473
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.24
    end
    local.get $a|472
    local.get $b|473
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.24
    end
   end
   i32.const 0
   local.set $i|475
   loop $for-loop|49
    local.get $i|475
    local.get $len|474
    i32.lt_s
    local.set $476
    local.get $476
    if
     i32.const 0
     drop
     local.get $a|472
     local.get $i|475
     call $~lib/array/Array<i32>#__get
     local.get $b|473
     local.get $i|475
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.24
     end
     local.get $i|475
     i32.const 1
     i32.add
     local.set $i|475
     br $for-loop|49
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 3552
  call $~lib/rt/__newArray
  local.set $sarr
  block $std/array/isArraysEqual<i32>|inlined.25 (result i32)
   local.get $sarr
   i32.const 2
   i32.const 2
   call $~lib/array/Array<i32>#splice
   local.set $a|481
   i32.const 2
   i32.const 2
   i32.const 3
   i32.const 3600
   call $~lib/rt/__newArray
   local.set $b|482
   i32.const 0
   local.set $len|483
   local.get $len|483
   i32.eqz
   if
    local.get $a|481
    call $~lib/array/Array<i32>#get:length
    local.set $len|483
    local.get $len|483
    local.get $b|482
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.25
    end
    local.get $a|481
    local.get $b|482
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.25
    end
   end
   i32.const 0
   local.set $i|484
   loop $for-loop|50
    local.get $i|484
    local.get $len|483
    i32.lt_s
    local.set $485
    local.get $485
    if
     i32.const 0
     drop
     local.get $a|481
     local.get $i|484
     call $~lib/array/Array<i32>#__get
     local.get $b|482
     local.get $i|484
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.25
     end
     local.get $i|484
     i32.const 1
     i32.add
     local.set $i|484
     br $for-loop|50
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.26 (result i32)
   local.get $sarr
   local.set $a|488
   i32.const 3
   i32.const 2
   i32.const 3
   i32.const 3632
   call $~lib/rt/__newArray
   local.set $b|489
   i32.const 0
   local.set $len|490
   local.get $len|490
   i32.eqz
   if
    local.get $a|488
    call $~lib/array/Array<i32>#get:length
    local.set $len|490
    local.get $len|490
    local.get $b|489
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.26
    end
    local.get $a|488
    local.get $b|489
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.26
    end
   end
   i32.const 0
   local.set $i|491
   loop $for-loop|51
    local.get $i|491
    local.get $len|490
    i32.lt_s
    local.set $492
    local.get $492
    if
     i32.const 0
     drop
     local.get $a|488
     local.get $i|491
     call $~lib/array/Array<i32>#__get
     local.get $b|489
     local.get $i|491
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.26
     end
     local.get $i|491
     i32.const 1
     i32.add
     local.set $i|491
     br $for-loop|51
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 3664
  call $~lib/rt/__newArray
  local.set $sarr
  block $std/array/isArraysEqual<i32>|inlined.27 (result i32)
   local.get $sarr
   i32.const 0
   i32.const 1
   call $~lib/array/Array<i32>#splice
   local.set $a|497
   i32.const 1
   i32.const 2
   i32.const 3
   i32.const 3712
   call $~lib/rt/__newArray
   local.set $b|498
   i32.const 0
   local.set $len|499
   local.get $len|499
   i32.eqz
   if
    local.get $a|497
    call $~lib/array/Array<i32>#get:length
    local.set $len|499
    local.get $len|499
    local.get $b|498
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.27
    end
    local.get $a|497
    local.get $b|498
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.27
    end
   end
   i32.const 0
   local.set $i|500
   loop $for-loop|52
    local.get $i|500
    local.get $len|499
    i32.lt_s
    local.set $501
    local.get $501
    if
     i32.const 0
     drop
     local.get $a|497
     local.get $i|500
     call $~lib/array/Array<i32>#__get
     local.get $b|498
     local.get $i|500
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.27
     end
     local.get $i|500
     i32.const 1
     i32.add
     local.set $i|500
     br $for-loop|52
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.28 (result i32)
   local.get $sarr
   local.set $a|504
   i32.const 4
   i32.const 2
   i32.const 3
   i32.const 3744
   call $~lib/rt/__newArray
   local.set $b|505
   i32.const 0
   local.set $len|506
   local.get $len|506
   i32.eqz
   if
    local.get $a|504
    call $~lib/array/Array<i32>#get:length
    local.set $len|506
    local.get $len|506
    local.get $b|505
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.28
    end
    local.get $a|504
    local.get $b|505
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.28
    end
   end
   i32.const 0
   local.set $i|507
   loop $for-loop|53
    local.get $i|507
    local.get $len|506
    i32.lt_s
    local.set $508
    local.get $508
    if
     i32.const 0
     drop
     local.get $a|504
     local.get $i|507
     call $~lib/array/Array<i32>#__get
     local.get $b|505
     local.get $i|507
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.28
     end
     local.get $i|507
     i32.const 1
     i32.add
     local.set $i|507
     br $for-loop|53
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 3792
  call $~lib/rt/__newArray
  local.set $sarr
  block $std/array/isArraysEqual<i32>|inlined.29 (result i32)
   local.get $sarr
   i32.const -1
   global.get $~lib/builtins/i32.MAX_VALUE
   call $~lib/array/Array<i32>#splice
   local.set $a|513
   i32.const 1
   i32.const 2
   i32.const 3
   i32.const 3840
   call $~lib/rt/__newArray
   local.set $b|514
   i32.const 0
   local.set $len|515
   local.get $len|515
   i32.eqz
   if
    local.get $a|513
    call $~lib/array/Array<i32>#get:length
    local.set $len|515
    local.get $len|515
    local.get $b|514
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.29
    end
    local.get $a|513
    local.get $b|514
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.29
    end
   end
   i32.const 0
   local.set $i|516
   loop $for-loop|54
    local.get $i|516
    local.get $len|515
    i32.lt_s
    local.set $517
    local.get $517
    if
     i32.const 0
     drop
     local.get $a|513
     local.get $i|516
     call $~lib/array/Array<i32>#__get
     local.get $b|514
     local.get $i|516
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.29
     end
     local.get $i|516
     i32.const 1
     i32.add
     local.set $i|516
     br $for-loop|54
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.30 (result i32)
   local.get $sarr
   local.set $a|520
   i32.const 4
   i32.const 2
   i32.const 3
   i32.const 3872
   call $~lib/rt/__newArray
   local.set $b|521
   i32.const 0
   local.set $len|522
   local.get $len|522
   i32.eqz
   if
    local.get $a|520
    call $~lib/array/Array<i32>#get:length
    local.set $len|522
    local.get $len|522
    local.get $b|521
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.30
    end
    local.get $a|520
    local.get $b|521
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.30
    end
   end
   i32.const 0
   local.set $i|523
   loop $for-loop|55
    local.get $i|523
    local.get $len|522
    i32.lt_s
    local.set $524
    local.get $524
    if
     i32.const 0
     drop
     local.get $a|520
     local.get $i|523
     call $~lib/array/Array<i32>#__get
     local.get $b|521
     local.get $i|523
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.30
     end
     local.get $i|523
     i32.const 1
     i32.add
     local.set $i|523
     br $for-loop|55
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 3920
  call $~lib/rt/__newArray
  local.set $sarr
  block $std/array/isArraysEqual<i32>|inlined.31 (result i32)
   local.get $sarr
   i32.const -2
   global.get $~lib/builtins/i32.MAX_VALUE
   call $~lib/array/Array<i32>#splice
   local.set $a|529
   i32.const 2
   i32.const 2
   i32.const 3
   i32.const 3968
   call $~lib/rt/__newArray
   local.set $b|530
   i32.const 0
   local.set $len|531
   local.get $len|531
   i32.eqz
   if
    local.get $a|529
    call $~lib/array/Array<i32>#get:length
    local.set $len|531
    local.get $len|531
    local.get $b|530
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.31
    end
    local.get $a|529
    local.get $b|530
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.31
    end
   end
   i32.const 0
   local.set $i|532
   loop $for-loop|56
    local.get $i|532
    local.get $len|531
    i32.lt_s
    local.set $533
    local.get $533
    if
     i32.const 0
     drop
     local.get $a|529
     local.get $i|532
     call $~lib/array/Array<i32>#__get
     local.get $b|530
     local.get $i|532
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.31
     end
     local.get $i|532
     i32.const 1
     i32.add
     local.set $i|532
     br $for-loop|56
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.32 (result i32)
   local.get $sarr
   local.set $a|536
   i32.const 3
   i32.const 2
   i32.const 3
   i32.const 4000
   call $~lib/rt/__newArray
   local.set $b|537
   i32.const 0
   local.set $len|538
   local.get $len|538
   i32.eqz
   if
    local.get $a|536
    call $~lib/array/Array<i32>#get:length
    local.set $len|538
    local.get $len|538
    local.get $b|537
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.32
    end
    local.get $a|536
    local.get $b|537
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.32
    end
   end
   i32.const 0
   local.set $i|539
   loop $for-loop|57
    local.get $i|539
    local.get $len|538
    i32.lt_s
    local.set $540
    local.get $540
    if
     i32.const 0
     drop
     local.get $a|536
     local.get $i|539
     call $~lib/array/Array<i32>#__get
     local.get $b|537
     local.get $i|539
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.32
     end
     local.get $i|539
     i32.const 1
     i32.add
     local.set $i|539
     br $for-loop|57
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 4032
  call $~lib/rt/__newArray
  local.set $sarr
  block $std/array/isArraysEqual<i32>|inlined.33 (result i32)
   local.get $sarr
   i32.const -2
   i32.const 1
   call $~lib/array/Array<i32>#splice
   local.set $a|545
   i32.const 1
   i32.const 2
   i32.const 3
   i32.const 4080
   call $~lib/rt/__newArray
   local.set $b|546
   i32.const 0
   local.set $len|547
   local.get $len|547
   i32.eqz
   if
    local.get $a|545
    call $~lib/array/Array<i32>#get:length
    local.set $len|547
    local.get $len|547
    local.get $b|546
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.33
    end
    local.get $a|545
    local.get $b|546
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.33
    end
   end
   i32.const 0
   local.set $i|548
   loop $for-loop|58
    local.get $i|548
    local.get $len|547
    i32.lt_s
    local.set $549
    local.get $549
    if
     i32.const 0
     drop
     local.get $a|545
     local.get $i|548
     call $~lib/array/Array<i32>#__get
     local.get $b|546
     local.get $i|548
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.33
     end
     local.get $i|548
     i32.const 1
     i32.add
     local.set $i|548
     br $for-loop|58
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.34 (result i32)
   local.get $sarr
   local.set $a|552
   i32.const 4
   i32.const 2
   i32.const 3
   i32.const 4112
   call $~lib/rt/__newArray
   local.set $b|553
   i32.const 0
   local.set $len|554
   local.get $len|554
   i32.eqz
   if
    local.get $a|552
    call $~lib/array/Array<i32>#get:length
    local.set $len|554
    local.get $len|554
    local.get $b|553
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.34
    end
    local.get $a|552
    local.get $b|553
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.34
    end
   end
   i32.const 0
   local.set $i|555
   loop $for-loop|59
    local.get $i|555
    local.get $len|554
    i32.lt_s
    local.set $556
    local.get $556
    if
     i32.const 0
     drop
     local.get $a|552
     local.get $i|555
     call $~lib/array/Array<i32>#__get
     local.get $b|553
     local.get $i|555
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.34
     end
     local.get $i|555
     i32.const 1
     i32.add
     local.set $i|555
     br $for-loop|59
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 4160
  call $~lib/rt/__newArray
  local.set $sarr
  block $std/array/isArraysEqual<i32>|inlined.35 (result i32)
   local.get $sarr
   i32.const -7
   i32.const 1
   call $~lib/array/Array<i32>#splice
   local.set $a|561
   i32.const 1
   i32.const 2
   i32.const 3
   i32.const 4208
   call $~lib/rt/__newArray
   local.set $b|562
   i32.const 0
   local.set $len|563
   local.get $len|563
   i32.eqz
   if
    local.get $a|561
    call $~lib/array/Array<i32>#get:length
    local.set $len|563
    local.get $len|563
    local.get $b|562
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.35
    end
    local.get $a|561
    local.get $b|562
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.35
    end
   end
   i32.const 0
   local.set $i|564
   loop $for-loop|60
    local.get $i|564
    local.get $len|563
    i32.lt_s
    local.set $565
    local.get $565
    if
     i32.const 0
     drop
     local.get $a|561
     local.get $i|564
     call $~lib/array/Array<i32>#__get
     local.get $b|562
     local.get $i|564
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.35
     end
     local.get $i|564
     i32.const 1
     i32.add
     local.set $i|564
     br $for-loop|60
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.36 (result i32)
   local.get $sarr
   local.set $a|568
   i32.const 4
   i32.const 2
   i32.const 3
   i32.const 4240
   call $~lib/rt/__newArray
   local.set $b|569
   i32.const 0
   local.set $len|570
   local.get $len|570
   i32.eqz
   if
    local.get $a|568
    call $~lib/array/Array<i32>#get:length
    local.set $len|570
    local.get $len|570
    local.get $b|569
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.36
    end
    local.get $a|568
    local.get $b|569
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.36
    end
   end
   i32.const 0
   local.set $i|571
   loop $for-loop|61
    local.get $i|571
    local.get $len|570
    i32.lt_s
    local.set $572
    local.get $572
    if
     i32.const 0
     drop
     local.get $a|568
     local.get $i|571
     call $~lib/array/Array<i32>#__get
     local.get $b|569
     local.get $i|571
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.36
     end
     local.get $i|571
     i32.const 1
     i32.add
     local.set $i|571
     br $for-loop|61
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 4288
  call $~lib/rt/__newArray
  local.set $sarr
  block $std/array/isArraysEqual<i32>|inlined.37 (result i32)
   local.get $sarr
   i32.const -2
   i32.const -1
   call $~lib/array/Array<i32>#splice
   local.set $a|577
   i32.const 0
   i32.const 2
   i32.const 3
   i32.const 4336
   call $~lib/rt/__newArray
   local.set $b|578
   i32.const 0
   local.set $len|579
   local.get $len|579
   i32.eqz
   if
    local.get $a|577
    call $~lib/array/Array<i32>#get:length
    local.set $len|579
    local.get $len|579
    local.get $b|578
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.37
    end
    local.get $a|577
    local.get $b|578
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.37
    end
   end
   i32.const 0
   local.set $i|580
   loop $for-loop|62
    local.get $i|580
    local.get $len|579
    i32.lt_s
    local.set $581
    local.get $581
    if
     i32.const 0
     drop
     local.get $a|577
     local.get $i|580
     call $~lib/array/Array<i32>#__get
     local.get $b|578
     local.get $i|580
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.37
     end
     local.get $i|580
     i32.const 1
     i32.add
     local.set $i|580
     br $for-loop|62
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.38 (result i32)
   local.get $sarr
   local.set $a|584
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 4368
   call $~lib/rt/__newArray
   local.set $b|585
   i32.const 0
   local.set $len|586
   local.get $len|586
   i32.eqz
   if
    local.get $a|584
    call $~lib/array/Array<i32>#get:length
    local.set $len|586
    local.get $len|586
    local.get $b|585
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.38
    end
    local.get $a|584
    local.get $b|585
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.38
    end
   end
   i32.const 0
   local.set $i|587
   loop $for-loop|63
    local.get $i|587
    local.get $len|586
    i32.lt_s
    local.set $588
    local.get $588
    if
     i32.const 0
     drop
     local.get $a|584
     local.get $i|587
     call $~lib/array/Array<i32>#__get
     local.get $b|585
     local.get $i|587
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.38
     end
     local.get $i|587
     i32.const 1
     i32.add
     local.set $i|587
     br $for-loop|63
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 4416
  call $~lib/rt/__newArray
  local.set $sarr
  block $std/array/isArraysEqual<i32>|inlined.39 (result i32)
   local.get $sarr
   i32.const 1
   i32.const -2
   call $~lib/array/Array<i32>#splice
   local.set $a|593
   i32.const 0
   i32.const 2
   i32.const 3
   i32.const 4464
   call $~lib/rt/__newArray
   local.set $b|594
   i32.const 0
   local.set $len|595
   local.get $len|595
   i32.eqz
   if
    local.get $a|593
    call $~lib/array/Array<i32>#get:length
    local.set $len|595
    local.get $len|595
    local.get $b|594
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.39
    end
    local.get $a|593
    local.get $b|594
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.39
    end
   end
   i32.const 0
   local.set $i|596
   loop $for-loop|64
    local.get $i|596
    local.get $len|595
    i32.lt_s
    local.set $597
    local.get $597
    if
     i32.const 0
     drop
     local.get $a|593
     local.get $i|596
     call $~lib/array/Array<i32>#__get
     local.get $b|594
     local.get $i|596
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.39
     end
     local.get $i|596
     i32.const 1
     i32.add
     local.set $i|596
     br $for-loop|64
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.40 (result i32)
   local.get $sarr
   local.set $a|600
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 4496
   call $~lib/rt/__newArray
   local.set $b|601
   i32.const 0
   local.set $len|602
   local.get $len|602
   i32.eqz
   if
    local.get $a|600
    call $~lib/array/Array<i32>#get:length
    local.set $len|602
    local.get $len|602
    local.get $b|601
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.40
    end
    local.get $a|600
    local.get $b|601
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.40
    end
   end
   i32.const 0
   local.set $i|603
   loop $for-loop|65
    local.get $i|603
    local.get $len|602
    i32.lt_s
    local.set $604
    local.get $604
    if
     i32.const 0
     drop
     local.get $a|600
     local.get $i|603
     call $~lib/array/Array<i32>#__get
     local.get $b|601
     local.get $i|603
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.40
     end
     local.get $i|603
     i32.const 1
     i32.add
     local.set $i|603
     br $for-loop|65
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 4544
  call $~lib/rt/__newArray
  local.set $sarr
  block $std/array/isArraysEqual<i32>|inlined.41 (result i32)
   local.get $sarr
   i32.const 4
   i32.const 0
   call $~lib/array/Array<i32>#splice
   local.set $a|609
   i32.const 0
   i32.const 2
   i32.const 3
   i32.const 4592
   call $~lib/rt/__newArray
   local.set $b|610
   i32.const 0
   local.set $len|611
   local.get $len|611
   i32.eqz
   if
    local.get $a|609
    call $~lib/array/Array<i32>#get:length
    local.set $len|611
    local.get $len|611
    local.get $b|610
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.41
    end
    local.get $a|609
    local.get $b|610
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.41
    end
   end
   i32.const 0
   local.set $i|612
   loop $for-loop|66
    local.get $i|612
    local.get $len|611
    i32.lt_s
    local.set $613
    local.get $613
    if
     i32.const 0
     drop
     local.get $a|609
     local.get $i|612
     call $~lib/array/Array<i32>#__get
     local.get $b|610
     local.get $i|612
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.41
     end
     local.get $i|612
     i32.const 1
     i32.add
     local.set $i|612
     br $for-loop|66
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.42 (result i32)
   local.get $sarr
   local.set $a|616
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 4624
   call $~lib/rt/__newArray
   local.set $b|617
   i32.const 0
   local.set $len|618
   local.get $len|618
   i32.eqz
   if
    local.get $a|616
    call $~lib/array/Array<i32>#get:length
    local.set $len|618
    local.get $len|618
    local.get $b|617
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.42
    end
    local.get $a|616
    local.get $b|617
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.42
    end
   end
   i32.const 0
   local.set $i|619
   loop $for-loop|67
    local.get $i|619
    local.get $len|618
    i32.lt_s
    local.set $620
    local.get $620
    if
     i32.const 0
     drop
     local.get $a|616
     local.get $i|619
     call $~lib/array/Array<i32>#__get
     local.get $b|617
     local.get $i|619
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.42
     end
     local.get $i|619
     i32.const 1
     i32.add
     local.set $i|619
     br $for-loop|67
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 4672
  call $~lib/rt/__newArray
  local.set $sarr
  block $std/array/isArraysEqual<i32>|inlined.43 (result i32)
   local.get $sarr
   i32.const 7
   i32.const 0
   call $~lib/array/Array<i32>#splice
   local.set $a|625
   i32.const 0
   i32.const 2
   i32.const 3
   i32.const 4720
   call $~lib/rt/__newArray
   local.set $b|626
   i32.const 0
   local.set $len|627
   local.get $len|627
   i32.eqz
   if
    local.get $a|625
    call $~lib/array/Array<i32>#get:length
    local.set $len|627
    local.get $len|627
    local.get $b|626
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.43
    end
    local.get $a|625
    local.get $b|626
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.43
    end
   end
   i32.const 0
   local.set $i|628
   loop $for-loop|68
    local.get $i|628
    local.get $len|627
    i32.lt_s
    local.set $629
    local.get $629
    if
     i32.const 0
     drop
     local.get $a|625
     local.get $i|628
     call $~lib/array/Array<i32>#__get
     local.get $b|626
     local.get $i|628
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.43
     end
     local.get $i|628
     i32.const 1
     i32.add
     local.set $i|628
     br $for-loop|68
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.44 (result i32)
   local.get $sarr
   local.set $a|632
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 4752
   call $~lib/rt/__newArray
   local.set $b|633
   i32.const 0
   local.set $len|634
   local.get $len|634
   i32.eqz
   if
    local.get $a|632
    call $~lib/array/Array<i32>#get:length
    local.set $len|634
    local.get $len|634
    local.get $b|633
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.44
    end
    local.get $a|632
    local.get $b|633
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.44
    end
   end
   i32.const 0
   local.set $i|635
   loop $for-loop|69
    local.get $i|635
    local.get $len|634
    i32.lt_s
    local.set $636
    local.get $636
    if
     i32.const 0
     drop
     local.get $a|632
     local.get $i|635
     call $~lib/array/Array<i32>#__get
     local.get $b|633
     local.get $i|635
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.44
     end
     local.get $i|635
     i32.const 1
     i32.add
     local.set $i|635
     br $for-loop|69
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 4800
  call $~lib/rt/__newArray
  local.set $sarr
  block $std/array/isArraysEqual<i32>|inlined.45 (result i32)
   local.get $sarr
   i32.const 7
   i32.const 5
   call $~lib/array/Array<i32>#splice
   local.set $a|641
   i32.const 0
   i32.const 2
   i32.const 3
   i32.const 4848
   call $~lib/rt/__newArray
   local.set $b|642
   i32.const 0
   local.set $len|643
   local.get $len|643
   i32.eqz
   if
    local.get $a|641
    call $~lib/array/Array<i32>#get:length
    local.set $len|643
    local.get $len|643
    local.get $b|642
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.45
    end
    local.get $a|641
    local.get $b|642
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.45
    end
   end
   i32.const 0
   local.set $i|644
   loop $for-loop|70
    local.get $i|644
    local.get $len|643
    i32.lt_s
    local.set $645
    local.get $645
    if
     i32.const 0
     drop
     local.get $a|641
     local.get $i|644
     call $~lib/array/Array<i32>#__get
     local.get $b|642
     local.get $i|644
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.45
     end
     local.get $i|644
     i32.const 1
     i32.add
     local.set $i|644
     br $for-loop|70
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.46 (result i32)
   local.get $sarr
   local.set $a|648
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 4880
   call $~lib/rt/__newArray
   local.set $b|649
   i32.const 0
   local.set $len|650
   local.get $len|650
   i32.eqz
   if
    local.get $a|648
    call $~lib/array/Array<i32>#get:length
    local.set $len|650
    local.get $len|650
    local.get $b|649
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.46
    end
    local.get $a|648
    local.get $b|649
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.46
    end
   end
   i32.const 0
   local.set $i|651
   loop $for-loop|71
    local.get $i|651
    local.get $len|650
    i32.lt_s
    local.set $652
    local.get $652
    if
     i32.const 0
     drop
     local.get $a|648
     local.get $i|651
     call $~lib/array/Array<i32>#__get
     local.get $b|649
     local.get $i|651
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.46
     end
     local.get $i|651
     i32.const 1
     i32.add
     local.set $i|651
     br $for-loop|71
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 2
  i32.const 9
  i32.const 4928
  call $~lib/rt/__newArray
  local.set $refArr
  local.get $refArr
  i32.const 1
  i32.const 2
  call $~lib/array/Array<std/array/Ref>#splice
  local.set $spliced
  local.get $spliced
  call $~lib/array/Array<std/array/Ref>#get:length
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $refArr
  call $~lib/array/Array<std/array/Ref>#get:length
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 5
  i32.const 2
  i32.const 9
  i32.const 0
  call $~lib/rt/__newArray
  local.set $657
  local.get $657
  i32.load $0 offset=4
  local.set $658
  local.get $657
  i32.const 0
  i32.const 0
  local.set $this|659
  i32.const 1
  local.set $v|660
  local.get $this|659
  i32.eqz
  if
   i32.const 4
   i32.const 4
   call $~lib/rt/stub/__new
   local.set $this|659
  end
  local.get $this|659
  local.get $v|660
  call $std/array/Ref#set:v
  local.get $this|659
  call $~lib/array/Array<std/array/Ref>#__uset
  local.get $657
  i32.const 1
  i32.const 0
  local.set $this|661
  i32.const 2
  local.set $v|662
  local.get $this|661
  i32.eqz
  if
   i32.const 4
   i32.const 4
   call $~lib/rt/stub/__new
   local.set $this|661
  end
  local.get $this|661
  local.get $v|662
  call $std/array/Ref#set:v
  local.get $this|661
  call $~lib/array/Array<std/array/Ref>#__uset
  local.get $657
  i32.const 2
  i32.const 0
  local.set $this|663
  i32.const 3
  local.set $v|664
  local.get $this|663
  i32.eqz
  if
   i32.const 4
   i32.const 4
   call $~lib/rt/stub/__new
   local.set $this|663
  end
  local.get $this|663
  local.get $v|664
  call $std/array/Ref#set:v
  local.get $this|663
  call $~lib/array/Array<std/array/Ref>#__uset
  local.get $657
  i32.const 3
  i32.const 0
  local.set $this|665
  i32.const 4
  local.set $v|666
  local.get $this|665
  i32.eqz
  if
   i32.const 4
   i32.const 4
   call $~lib/rt/stub/__new
   local.set $this|665
  end
  local.get $this|665
  local.get $v|666
  call $std/array/Ref#set:v
  local.get $this|665
  call $~lib/array/Array<std/array/Ref>#__uset
  local.get $657
  i32.const 4
  i32.const 0
  local.set $this|667
  i32.const 5
  local.set $v|668
  local.get $this|667
  i32.eqz
  if
   i32.const 4
   i32.const 4
   call $~lib/rt/stub/__new
   local.set $this|667
  end
  local.get $this|667
  local.get $v|668
  call $std/array/Ref#set:v
  local.get $this|667
  call $~lib/array/Array<std/array/Ref>#__uset
  local.get $657
  local.set $refArr
  local.get $refArr
  i32.const 2
  i32.const 2
  call $~lib/array/Array<std/array/Ref>#splice
  local.set $spliced
  local.get $spliced
  call $~lib/array/Array<std/array/Ref>#get:length
  i32.const 2
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $spliced
  i32.const 0
  call $~lib/array/Array<std/array/Ref>#__get
  i32.load $0
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $spliced
  i32.const 1
  call $~lib/array/Array<std/array/Ref>#__get
  i32.load $0
  i32.const 4
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $refArr
  call $~lib/array/Array<std/array/Ref>#get:length
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $refArr
  i32.const 0
  call $~lib/array/Array<std/array/Ref>#__get
  i32.load $0
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $refArr
  i32.const 1
  call $~lib/array/Array<std/array/Ref>#__get
  i32.load $0
  i32.const 2
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $refArr
  i32.const 2
  call $~lib/array/Array<std/array/Ref>#__get
  i32.load $0
  i32.const 5
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 3
  i32.const 2
  i32.const 13
  i32.const 0
  call $~lib/rt/__newArray
  local.set $669
  local.get $669
  i32.load $0 offset=4
  local.set $670
  local.get $669
  i32.const 0
  i32.const 0
  local.set $this|671
  i32.const 1
  local.set $v|672
  local.get $this|671
  i32.eqz
  if
   i32.const 4
   i32.const 4
   call $~lib/rt/stub/__new
   local.set $this|671
  end
  local.get $this|671
  local.get $v|672
  call $std/array/Ref#set:v
  local.get $this|671
  call $~lib/array/Array<std/array/Ref|null>#__uset
  local.get $669
  i32.const 1
  i32.const 0
  call $~lib/array/Array<std/array/Ref|null>#__uset
  local.get $669
  i32.const 2
  i32.const 0
  local.set $this|673
  i32.const 2
  local.set $v|674
  local.get $this|673
  i32.eqz
  if
   i32.const 4
   i32.const 4
   call $~lib/rt/stub/__new
   local.set $this|673
  end
  local.get $this|673
  local.get $v|674
  call $std/array/Ref#set:v
  local.get $this|673
  call $~lib/array/Array<std/array/Ref|null>#__uset
  local.get $669
  local.set $refArr2
  local.get $refArr2
  i32.const 0
  i32.const 1
  call $~lib/array/Array<std/array/Ref|null>#splice
  local.set $spliced2
  local.get $spliced2
  call $~lib/array/Array<std/array/Ref|null>#get:length
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $spliced2
  i32.const 0
  call $~lib/array/Array<std/array/Ref|null>#__get
  local.tee $677
  if (result i32)
   local.get $677
  else
   unreachable
  end
  i32.load $0
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $refArr2
  call $~lib/array/Array<std/array/Ref|null>#get:length
  i32.const 2
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $refArr2
  i32.const 0
  call $~lib/array/Array<std/array/Ref|null>#__get
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $refArr2
  i32.const 1
  call $~lib/array/Array<std/array/Ref|null>#__get
  local.tee $678
  if (result i32)
   local.get $678
  else
   unreachable
  end
  i32.load $0
  i32.const 2
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 0
  i32.const 0
  call $~lib/array/Array<i32>#__set
  global.get $std/array/arr
  i32.const 1
  i32.const 1
  call $~lib/array/Array<i32>#__set
  global.get $std/array/arr
  i32.const 2
  i32.const 2
  call $~lib/array/Array<i32>#__set
  global.get $std/array/arr
  i32.const 3
  i32.const 3
  call $~lib/array/Array<i32>#__set
  global.get $std/array/arr
  i32.const 5088
  call $~lib/array/Array<i32>#findIndex
  global.set $std/array/i
  global.get $std/array/i
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 5120
  call $~lib/array/Array<i32>#findIndex
  global.set $std/array/i
  global.get $std/array/i
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 5152
  call $~lib/array/Array<i32>#findIndex
  global.set $std/array/i
  global.get $std/array/i
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 5184
  call $~lib/array/Array<i32>#findIndex
  global.set $std/array/i
  global.get $std/array/i
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  call $~lib/array/Array<i32>#get:length
  i32.const 8
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 5216
  call $~lib/array/Array<i32>#findIndex
  global.set $std/array/i
  global.get $std/array/i
  i32.const -1
  i32.ne
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  i32.const 5248
  call $~lib/array/Array<i32>#findIndex
  global.set $std/array/i
  global.get $std/array/i
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  call $~lib/array/Array<i32>#get:length
  i32.const 2
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 2
  call $~lib/array/Array<i32>#push
  drop
  global.get $std/array/arr
  i32.const 3
  call $~lib/array/Array<i32>#push
  drop
  i32.const 4
  i32.const 2
  i32.const 3
  i32.const 5280
  call $~lib/rt/__newArray
  local.set $intArr
  local.get $intArr
  i32.const 5328
  call $~lib/array/Array<i32>#findLastIndex
  global.set $std/array/i
  global.get $std/array/i
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $intArr
  i32.const 5360
  call $~lib/array/Array<i32>#findLastIndex
  global.set $std/array/i
  global.get $std/array/i
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $intArr
  i32.const 5392
  call $~lib/array/Array<i32>#findLastIndex
  global.set $std/array/i
  global.get $std/array/i
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $intArr
  i32.const 5424
  call $~lib/array/Array<i32>#findLastIndex
  global.set $std/array/i
  global.get $std/array/i
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 5456
  call $~lib/array/Array<i32>#every
  local.set $every
  local.get $every
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 5488
  call $~lib/array/Array<i32>#every
  local.set $every
  local.get $every
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 5520
  call $~lib/array/Array<i32>#every
  local.set $every
  local.get $every
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  call $~lib/array/Array<i32>#get:length
  i32.const 8
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 5552
  call $~lib/array/Array<i32>#every
  local.set $every
  local.get $every
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  i32.const 5584
  call $~lib/array/Array<i32>#every
  local.set $every
  local.get $every
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  call $~lib/array/Array<i32>#get:length
  i32.const 2
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 2
  call $~lib/array/Array<i32>#push
  drop
  global.get $std/array/arr
  i32.const 3
  call $~lib/array/Array<i32>#push
  drop
  global.get $std/array/arr
  i32.const 5616
  call $~lib/array/Array<i32>#some
  local.set $some
  local.get $some
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 5648
  call $~lib/array/Array<i32>#some
  local.set $some
  local.get $some
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 5680
  call $~lib/array/Array<i32>#some
  local.set $some
  local.get $some
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  call $~lib/array/Array<i32>#get:length
  i32.const 8
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 5712
  call $~lib/array/Array<i32>#some
  local.set $some
  local.get $some
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  i32.const 5744
  call $~lib/array/Array<i32>#some
  local.set $some
  local.get $some
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  call $~lib/array/Array<i32>#get:length
  i32.const 2
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 2
  call $~lib/array/Array<i32>#push
  drop
  global.get $std/array/arr
  i32.const 3
  call $~lib/array/Array<i32>#push
  drop
  i32.const 0
  global.set $std/array/i
  global.get $std/array/arr
  i32.const 5776
  call $~lib/array/Array<i32>#forEach
  global.get $std/array/i
  i32.const 6
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  global.set $std/array/i
  global.get $std/array/arr
  i32.const 5808
  call $~lib/array/Array<i32>#forEach
  global.get $std/array/i
  i32.const 6
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  call $~lib/array/Array<i32>#get:length
  i32.const 8
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  global.set $std/array/i
  global.get $std/array/arr
  i32.const 5840
  call $~lib/array/Array<i32>#forEach
  global.get $std/array/i
  i32.const 406
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  call $~lib/array/Array<i32>#pop
  drop
  i32.const 0
  global.set $std/array/i
  global.get $std/array/arr
  i32.const 5872
  call $~lib/array/Array<i32>#forEach
  global.get $std/array/i
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  call $~lib/array/Array<i32>#get:length
  i32.const 2
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 2
  call $~lib/array/Array<i32>#push
  drop
  global.get $std/array/arr
  i32.const 3
  call $~lib/array/Array<i32>#push
  drop
  global.get $std/array/arr
  i32.const 5904
  call $~lib/array/Array<i32>#forEach
  global.get $std/array/arr
  call $~lib/array/Array<i32>#get:length
  i32.const 100
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $i|684
  loop $for-loop|72
   local.get $i|684
   i32.const 100
   i32.lt_s
   local.set $685
   local.get $685
   if
    global.get $std/array/arr
    call $~lib/array/Array<i32>#pop
    drop
    local.get $i|684
    i32.const 1
    i32.add
    local.set $i|684
    br $for-loop|72
   end
  end
  global.get $std/array/arr
  i32.const 0
  call $~lib/array/Array<i32>#push
  drop
  global.get $std/array/arr
  i32.const 1
  call $~lib/array/Array<i32>#push
  drop
  global.get $std/array/arr
  i32.const 2
  call $~lib/array/Array<i32>#push
  drop
  global.get $std/array/arr
  i32.const 3
  call $~lib/array/Array<i32>#push
  drop
  global.get $std/array/arr
  i32.const 5968
  call $~lib/array/Array<i32>#map<~lib/string/String>
  local.set $arrStr1
  global.get $std/array/arr
  i32.const 6000
  call $~lib/array/Array<i32>#map<f32>
  local.set $newArr
  local.get $newArr
  call $~lib/array/Array<f32>#get:length
  i32.const 4
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $newArr
  i32.const 0
  call $~lib/array/Array<f32>#__get
  global.get $std/array/arr
  i32.const 0
  call $~lib/array/Array<i32>#__get
  f32.convert_i32_s
  f32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  global.set $std/array/i
  global.get $std/array/arr
  i32.const 6032
  call $~lib/array/Array<i32>#map<i32>
  drop
  global.get $std/array/i
  i32.const 6
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  call $~lib/array/Array<i32>#get:length
  i32.const 8
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  global.set $std/array/i
  global.get $std/array/arr
  i32.const 6064
  call $~lib/array/Array<i32>#map<i32>
  drop
  global.get $std/array/i
  i32.const 406
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  call $~lib/array/Array<i32>#pop
  drop
  i32.const 0
  global.set $std/array/i
  global.get $std/array/arr
  i32.const 6096
  call $~lib/array/Array<i32>#map<i32>
  drop
  global.get $std/array/i
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  call $~lib/array/Array<i32>#get:length
  i32.const 2
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 2
  call $~lib/array/Array<i32>#push
  drop
  global.get $std/array/arr
  i32.const 3
  call $~lib/array/Array<i32>#push
  drop
  global.get $std/array/arr
  i32.const 6128
  call $~lib/array/Array<i32>#filter
  local.set $filteredArr
  local.get $filteredArr
  call $~lib/array/Array<i32>#get:length
  i32.const 2
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  global.set $std/array/i
  global.get $std/array/arr
  i32.const 6160
  call $~lib/array/Array<i32>#filter
  drop
  global.get $std/array/i
  i32.const 6
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  call $~lib/array/Array<i32>#get:length
  i32.const 8
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  global.set $std/array/i
  global.get $std/array/arr
  i32.const 6192
  call $~lib/array/Array<i32>#filter
  drop
  global.get $std/array/i
  i32.const 406
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  call $~lib/array/Array<i32>#pop
  drop
  i32.const 0
  global.set $std/array/i
  global.get $std/array/arr
  i32.const 6224
  call $~lib/array/Array<i32>#filter
  drop
  global.get $std/array/i
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  call $~lib/array/Array<i32>#get:length
  i32.const 2
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 2
  call $~lib/array/Array<i32>#push
  drop
  global.get $std/array/arr
  i32.const 3
  call $~lib/array/Array<i32>#push
  drop
  global.get $std/array/arr
  i32.const 6256
  i32.const 0
  call $~lib/array/Array<i32>#reduce<i32>
  global.set $std/array/i
  global.get $std/array/i
  i32.const 6
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 6288
  i32.const 4
  call $~lib/array/Array<i32>#reduce<i32>
  global.set $std/array/i
  global.get $std/array/i
  i32.const 10
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 6320
  i32.const 0
  call $~lib/array/Array<i32>#reduce<bool>
  local.set $boolVal
  local.get $boolVal
  i32.const 0
  i32.ne
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 6352
  i32.const 0
  call $~lib/array/Array<i32>#reduce<bool>
  local.set $boolVal
  local.get $boolVal
  i32.const 0
  i32.ne
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 6384
  i32.const 0
  call $~lib/array/Array<i32>#reduce<i32>
  global.set $std/array/i
  global.get $std/array/i
  i32.const 6
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  call $~lib/array/Array<i32>#get:length
  i32.const 8
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 6416
  i32.const 0
  call $~lib/array/Array<i32>#reduce<i32>
  global.set $std/array/i
  global.get $std/array/i
  i32.const 10
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  i32.const 6448
  i32.const 0
  call $~lib/array/Array<i32>#reduce<i32>
  global.set $std/array/i
  global.get $std/array/i
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  call $~lib/array/Array<i32>#get:length
  i32.const 2
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 2
  call $~lib/array/Array<i32>#push
  drop
  global.get $std/array/arr
  i32.const 3
  call $~lib/array/Array<i32>#push
  drop
  global.get $std/array/arr
  i32.const 6480
  i32.const 0
  call $~lib/array/Array<i32>#reduceRight<i32>
  global.set $std/array/i
  global.get $std/array/i
  i32.const 6
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 6512
  i32.const 4
  call $~lib/array/Array<i32>#reduceRight<i32>
  global.set $std/array/i
  global.get $std/array/i
  i32.const 10
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 6544
  i32.const 0
  call $~lib/array/Array<i32>#reduceRight<bool>
  local.set $boolVal|690
  local.get $boolVal|690
  i32.const 0
  i32.ne
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 6576
  i32.const 0
  call $~lib/array/Array<i32>#reduceRight<bool>
  local.set $boolVal|690
  local.get $boolVal|690
  i32.const 0
  i32.ne
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 6608
  i32.const 0
  call $~lib/array/Array<i32>#reduceRight<i32>
  global.set $std/array/i
  global.get $std/array/i
  i32.const 6
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  call $~lib/array/Array<i32>#get:length
  i32.const 8
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 6640
  i32.const 0
  call $~lib/array/Array<i32>#reduceRight<i32>
  global.set $std/array/i
  global.get $std/array/i
  i32.const 10
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  i32.const 6672
  i32.const 0
  call $~lib/array/Array<i32>#reduceRight<i32>
  global.set $std/array/i
  global.get $std/array/i
  i32.const 6
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  call $~lib/array/Array<i32>#get:length
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.const 0
  call $~lib/array/Array<i32>#push
  drop
  global.get $std/array/arr
  i32.const 1
  call $~lib/array/Array<i32>#push
  drop
  global.get $std/array/arr
  i32.const 2
  call $~lib/array/Array<i32>#push
  drop
  global.get $std/array/arr
  i32.const 3
  call $~lib/array/Array<i32>#push
  drop
  call $~lib/bindings/dom/Math.random
  i64.reinterpret_f64
  call $~lib/math/NativeMath.seedRandom
  i32.const 12
  i32.const 2
  i32.const 23
  i32.const 0
  call $~lib/rt/__newArray
  local.set $691
  local.get $691
  i32.load $0 offset=4
  local.set $692
  local.get $691
  i32.const 0
  i32.const 0
  call $std/array/Dim#constructor
  local.set $693
  local.get $693
  i32.const 100
  call $std/array/Dim#set:height
  local.get $693
  i32.const 80
  call $std/array/Dim#set:width
  local.get $693
  call $~lib/array/Array<std/array/Dim>#__uset
  local.get $691
  i32.const 1
  i32.const 0
  call $std/array/Dim#constructor
  local.set $694
  local.get $694
  i32.const 90
  call $std/array/Dim#set:height
  local.get $694
  i32.const 90
  call $std/array/Dim#set:width
  local.get $694
  call $~lib/array/Array<std/array/Dim>#__uset
  local.get $691
  i32.const 2
  i32.const 0
  call $std/array/Dim#constructor
  local.set $695
  local.get $695
  i32.const 70
  call $std/array/Dim#set:height
  local.get $695
  i32.const 95
  call $std/array/Dim#set:width
  local.get $695
  call $~lib/array/Array<std/array/Dim>#__uset
  local.get $691
  i32.const 3
  i32.const 0
  call $std/array/Dim#constructor
  local.set $696
  local.get $696
  i32.const 100
  call $std/array/Dim#set:height
  local.get $696
  i32.const 100
  call $std/array/Dim#set:width
  local.get $696
  call $~lib/array/Array<std/array/Dim>#__uset
  local.get $691
  i32.const 4
  i32.const 0
  call $std/array/Dim#constructor
  local.set $697
  local.get $697
  i32.const 80
  call $std/array/Dim#set:height
  local.get $697
  i32.const 110
  call $std/array/Dim#set:width
  local.get $697
  call $~lib/array/Array<std/array/Dim>#__uset
  local.get $691
  i32.const 5
  i32.const 0
  call $std/array/Dim#constructor
  local.set $698
  local.get $698
  i32.const 110
  call $std/array/Dim#set:height
  local.get $698
  i32.const 115
  call $std/array/Dim#set:width
  local.get $698
  call $~lib/array/Array<std/array/Dim>#__uset
  local.get $691
  i32.const 6
  i32.const 0
  call $std/array/Dim#constructor
  local.set $699
  local.get $699
  i32.const 100
  call $std/array/Dim#set:height
  local.get $699
  i32.const 120
  call $std/array/Dim#set:width
  local.get $699
  call $~lib/array/Array<std/array/Dim>#__uset
  local.get $691
  i32.const 7
  i32.const 0
  call $std/array/Dim#constructor
  local.set $700
  local.get $700
  i32.const 70
  call $std/array/Dim#set:height
  local.get $700
  i32.const 125
  call $std/array/Dim#set:width
  local.get $700
  call $~lib/array/Array<std/array/Dim>#__uset
  local.get $691
  i32.const 8
  i32.const 0
  call $std/array/Dim#constructor
  local.set $701
  local.get $701
  i32.const 70
  call $std/array/Dim#set:height
  local.get $701
  i32.const 130
  call $std/array/Dim#set:width
  local.get $701
  call $~lib/array/Array<std/array/Dim>#__uset
  local.get $691
  i32.const 9
  i32.const 0
  call $std/array/Dim#constructor
  local.set $702
  local.get $702
  i32.const 100
  call $std/array/Dim#set:height
  local.get $702
  i32.const 135
  call $std/array/Dim#set:width
  local.get $702
  call $~lib/array/Array<std/array/Dim>#__uset
  local.get $691
  i32.const 10
  i32.const 0
  call $std/array/Dim#constructor
  local.set $703
  local.get $703
  i32.const 75
  call $std/array/Dim#set:height
  local.get $703
  i32.const 140
  call $std/array/Dim#set:width
  local.get $703
  call $~lib/array/Array<std/array/Dim>#__uset
  local.get $691
  i32.const 11
  i32.const 0
  call $std/array/Dim#constructor
  local.set $704
  local.get $704
  i32.const 70
  call $std/array/Dim#set:height
  local.get $704
  i32.const 140
  call $std/array/Dim#set:width
  local.get $704
  call $~lib/array/Array<std/array/Dim>#__uset
  local.get $691
  global.set $std/array/inputStabArr
  i32.const 12
  i32.const 2
  i32.const 23
  i32.const 0
  call $~lib/rt/__newArray
  local.set $705
  local.get $705
  i32.load $0 offset=4
  local.set $706
  local.get $705
  i32.const 0
  i32.const 0
  call $std/array/Dim#constructor
  local.set $707
  local.get $707
  i32.const 70
  call $std/array/Dim#set:height
  local.get $707
  i32.const 95
  call $std/array/Dim#set:width
  local.get $707
  call $~lib/array/Array<std/array/Dim>#__uset
  local.get $705
  i32.const 1
  i32.const 0
  call $std/array/Dim#constructor
  local.set $708
  local.get $708
  i32.const 70
  call $std/array/Dim#set:height
  local.get $708
  i32.const 125
  call $std/array/Dim#set:width
  local.get $708
  call $~lib/array/Array<std/array/Dim>#__uset
  local.get $705
  i32.const 2
  i32.const 0
  call $std/array/Dim#constructor
  local.set $709
  local.get $709
  i32.const 70
  call $std/array/Dim#set:height
  local.get $709
  i32.const 130
  call $std/array/Dim#set:width
  local.get $709
  call $~lib/array/Array<std/array/Dim>#__uset
  local.get $705
  i32.const 3
  i32.const 0
  call $std/array/Dim#constructor
  local.set $710
  local.get $710
  i32.const 70
  call $std/array/Dim#set:height
  local.get $710
  i32.const 140
  call $std/array/Dim#set:width
  local.get $710
  call $~lib/array/Array<std/array/Dim>#__uset
  local.get $705
  i32.const 4
  i32.const 0
  call $std/array/Dim#constructor
  local.set $711
  local.get $711
  i32.const 75
  call $std/array/Dim#set:height
  local.get $711
  i32.const 140
  call $std/array/Dim#set:width
  local.get $711
  call $~lib/array/Array<std/array/Dim>#__uset
  local.get $705
  i32.const 5
  i32.const 0
  call $std/array/Dim#constructor
  local.set $712
  local.get $712
  i32.const 80
  call $std/array/Dim#set:height
  local.get $712
  i32.const 110
  call $std/array/Dim#set:width
  local.get $712
  call $~lib/array/Array<std/array/Dim>#__uset
  local.get $705
  i32.const 6
  i32.const 0
  call $std/array/Dim#constructor
  local.set $713
  local.get $713
  i32.const 90
  call $std/array/Dim#set:height
  local.get $713
  i32.const 90
  call $std/array/Dim#set:width
  local.get $713
  call $~lib/array/Array<std/array/Dim>#__uset
  local.get $705
  i32.const 7
  i32.const 0
  call $std/array/Dim#constructor
  local.set $714
  local.get $714
  i32.const 100
  call $std/array/Dim#set:height
  local.get $714
  i32.const 80
  call $std/array/Dim#set:width
  local.get $714
  call $~lib/array/Array<std/array/Dim>#__uset
  local.get $705
  i32.const 8
  i32.const 0
  call $std/array/Dim#constructor
  local.set $715
  local.get $715
  i32.const 100
  call $std/array/Dim#set:height
  local.get $715
  i32.const 100
  call $std/array/Dim#set:width
  local.get $715
  call $~lib/array/Array<std/array/Dim>#__uset
  local.get $705
  i32.const 9
  i32.const 0
  call $std/array/Dim#constructor
  local.set $716
  local.get $716
  i32.const 100
  call $std/array/Dim#set:height
  local.get $716
  i32.const 120
  call $std/array/Dim#set:width
  local.get $716
  call $~lib/array/Array<std/array/Dim>#__uset
  local.get $705
  i32.const 10
  i32.const 0
  call $std/array/Dim#constructor
  local.set $717
  local.get $717
  i32.const 100
  call $std/array/Dim#set:height
  local.get $717
  i32.const 135
  call $std/array/Dim#set:width
  local.get $717
  call $~lib/array/Array<std/array/Dim>#__uset
  local.get $705
  i32.const 11
  i32.const 0
  call $std/array/Dim#constructor
  local.set $718
  local.get $718
  i32.const 110
  call $std/array/Dim#set:height
  local.get $718
  i32.const 115
  call $std/array/Dim#set:width
  local.get $718
  call $~lib/array/Array<std/array/Dim>#__uset
  local.get $705
  global.set $std/array/outputStabArr
  i32.const 3
  i32.const 2
  i32.const 8
  i32.const 6816
  call $~lib/rt/__newArray
  local.set $f32ArrayTypedSmall
  local.get $f32ArrayTypedSmall
  i32.const 0
  global.set $~argumentsLength
  i32.const 0
  call $~lib/array/Array<f32>#sort@varargs
  drop
  block $std/array/isArraysEqual<f32>|inlined.7 (result i32)
   local.get $f32ArrayTypedSmall
   local.set $a|724
   i32.const 3
   i32.const 2
   i32.const 8
   i32.const 6880
   call $~lib/rt/__newArray
   local.set $b|725
   i32.const 0
   local.set $len|726
   local.get $len|726
   i32.eqz
   if
    local.get $a|724
    call $~lib/array/Array<f32>#get:length
    local.set $len|726
    local.get $len|726
    local.get $b|725
    call $~lib/array/Array<f32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<f32>|inlined.7
    end
    local.get $a|724
    local.get $b|725
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<f32>|inlined.7
    end
   end
   i32.const 0
   local.set $i|727
   loop $for-loop|73
    local.get $i|727
    local.get $len|726
    i32.lt_s
    local.set $728
    local.get $728
    if
     block $for-continue|73
      i32.const 1
      drop
      local.get $a|724
      local.get $i|727
      call $~lib/array/Array<f32>#__get
      local.tee $729
      local.get $729
      f32.ne
      if (result i32)
       local.get $b|725
       local.get $i|727
       call $~lib/array/Array<f32>#__get
       local.tee $730
       local.get $730
       f32.ne
      else
       i32.const 0
      end
      if
       br $for-continue|73
      end
      local.get $a|724
      local.get $i|727
      call $~lib/array/Array<f32>#__get
      f64.promote_f32
      local.set $x|731
      local.get $x|731
      i64.reinterpret_f64
      i64.const 63
      i64.shr_u
      i64.const 0
      i64.ne
      i32.const 0
      i32.ne
      local.get $b|725
      local.get $i|727
      call $~lib/array/Array<f32>#__get
      f64.promote_f32
      local.set $x|732
      local.get $x|732
      i64.reinterpret_f64
      i64.const 63
      i64.shr_u
      i64.const 0
      i64.ne
      i32.const 0
      i32.ne
      i32.ne
      if
       i32.const 0
       br $std/array/isArraysEqual<f32>|inlined.7
      end
      local.get $a|724
      local.get $i|727
      call $~lib/array/Array<f32>#__get
      local.get $b|725
      local.get $i|727
      call $~lib/array/Array<f32>#__get
      f32.ne
      if
       i32.const 0
       br $std/array/isArraysEqual<f32>|inlined.7
      end
     end
     local.get $i|727
     i32.const 1
     i32.add
     local.set $i|727
     br $for-loop|73
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  i32.const 8
  i32.const 2
  i32.const 8
  i32.const 6912
  call $~lib/rt/__newArray
  local.set $f32ArrayTyped
  local.get $f32ArrayTyped
  i32.const 0
  global.set $~argumentsLength
  i32.const 0
  call $~lib/array/Array<f32>#sort@varargs
  drop
  block $std/array/isArraysEqual<f32>|inlined.8 (result i32)
   local.get $f32ArrayTyped
   local.set $a|738
   i32.const 8
   i32.const 2
   i32.const 8
   i32.const 6976
   call $~lib/rt/__newArray
   local.set $b|739
   i32.const 0
   local.set $len|740
   local.get $len|740
   i32.eqz
   if
    local.get $a|738
    call $~lib/array/Array<f32>#get:length
    local.set $len|740
    local.get $len|740
    local.get $b|739
    call $~lib/array/Array<f32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<f32>|inlined.8
    end
    local.get $a|738
    local.get $b|739
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<f32>|inlined.8
    end
   end
   i32.const 0
   local.set $i|741
   loop $for-loop|74
    local.get $i|741
    local.get $len|740
    i32.lt_s
    local.set $742
    local.get $742
    if
     block $for-continue|74
      i32.const 1
      drop
      local.get $a|738
      local.get $i|741
      call $~lib/array/Array<f32>#__get
      local.tee $743
      local.get $743
      f32.ne
      if (result i32)
       local.get $b|739
       local.get $i|741
       call $~lib/array/Array<f32>#__get
       local.tee $744
       local.get $744
       f32.ne
      else
       i32.const 0
      end
      if
       br $for-continue|74
      end
      local.get $a|738
      local.get $i|741
      call $~lib/array/Array<f32>#__get
      f64.promote_f32
      local.set $x|745
      local.get $x|745
      i64.reinterpret_f64
      i64.const 63
      i64.shr_u
      i64.const 0
      i64.ne
      i32.const 0
      i32.ne
      local.get $b|739
      local.get $i|741
      call $~lib/array/Array<f32>#__get
      f64.promote_f32
      local.set $x|746
      local.get $x|746
      i64.reinterpret_f64
      i64.const 63
      i64.shr_u
      i64.const 0
      i64.ne
      i32.const 0
      i32.ne
      i32.ne
      if
       i32.const 0
       br $std/array/isArraysEqual<f32>|inlined.8
      end
      local.get $a|738
      local.get $i|741
      call $~lib/array/Array<f32>#__get
      local.get $b|739
      local.get $i|741
      call $~lib/array/Array<f32>#__get
      f32.ne
      if
       i32.const 0
       br $std/array/isArraysEqual<f32>|inlined.8
      end
     end
     local.get $i|741
     i32.const 1
     i32.add
     local.set $i|741
     br $for-loop|74
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  i32.const 7
  i32.const 3
  i32.const 12
  i32.const 7040
  call $~lib/rt/__newArray
  local.set $f64ArrayTyped
  local.get $f64ArrayTyped
  i32.const 0
  global.set $~argumentsLength
  i32.const 0
  call $~lib/array/Array<f64>#sort@varargs
  drop
  block $std/array/isArraysEqual<f64>|inlined.0 (result i32)
   local.get $f64ArrayTyped
   local.set $a|752
   i32.const 7
   i32.const 3
   i32.const 12
   i32.const 7152
   call $~lib/rt/__newArray
   local.set $b|753
   i32.const 0
   local.set $len|754
   local.get $len|754
   i32.eqz
   if
    local.get $a|752
    call $~lib/array/Array<f64>#get:length
    local.set $len|754
    local.get $len|754
    local.get $b|753
    call $~lib/array/Array<f64>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<f64>|inlined.0
    end
    local.get $a|752
    local.get $b|753
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<f64>|inlined.0
    end
   end
   i32.const 0
   local.set $i|755
   loop $for-loop|75
    local.get $i|755
    local.get $len|754
    i32.lt_s
    local.set $756
    local.get $756
    if
     block $for-continue|75
      i32.const 1
      drop
      local.get $a|752
      local.get $i|755
      call $~lib/array/Array<f64>#__get
      local.tee $757
      local.get $757
      f64.ne
      if (result i32)
       local.get $b|753
       local.get $i|755
       call $~lib/array/Array<f64>#__get
       local.tee $758
       local.get $758
       f64.ne
      else
       i32.const 0
      end
      if
       br $for-continue|75
      end
      local.get $a|752
      local.get $i|755
      call $~lib/array/Array<f64>#__get
      local.set $x|759
      local.get $x|759
      i64.reinterpret_f64
      i64.const 63
      i64.shr_u
      i64.const 0
      i64.ne
      i32.const 0
      i32.ne
      local.get $b|753
      local.get $i|755
      call $~lib/array/Array<f64>#__get
      local.set $x|760
      local.get $x|760
      i64.reinterpret_f64
      i64.const 63
      i64.shr_u
      i64.const 0
      i64.ne
      i32.const 0
      i32.ne
      i32.ne
      if
       i32.const 0
       br $std/array/isArraysEqual<f64>|inlined.0
      end
      local.get $a|752
      local.get $i|755
      call $~lib/array/Array<f64>#__get
      local.get $b|753
      local.get $i|755
      call $~lib/array/Array<f64>#__get
      f64.ne
      if
       i32.const 0
       br $std/array/isArraysEqual<f64>|inlined.0
      end
     end
     local.get $i|755
     i32.const 1
     i32.add
     local.set $i|755
     br $for-loop|75
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 7232
  call $~lib/rt/__newArray
  local.set $i32ArrayTyped
  local.get $i32ArrayTyped
  i32.const 0
  global.set $~argumentsLength
  i32.const 0
  call $~lib/array/Array<i32>#sort@varargs
  drop
  block $std/array/isArraysEqual<i32>|inlined.47 (result i32)
   local.get $i32ArrayTyped
   local.set $a|766
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 7312
   call $~lib/rt/__newArray
   local.set $b|767
   i32.const 0
   local.set $len|768
   local.get $len|768
   i32.eqz
   if
    local.get $a|766
    call $~lib/array/Array<i32>#get:length
    local.set $len|768
    local.get $len|768
    local.get $b|767
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.47
    end
    local.get $a|766
    local.get $b|767
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.47
    end
   end
   i32.const 0
   local.set $i|769
   loop $for-loop|76
    local.get $i|769
    local.get $len|768
    i32.lt_s
    local.set $770
    local.get $770
    if
     i32.const 0
     drop
     local.get $a|766
     local.get $i|769
     call $~lib/array/Array<i32>#__get
     local.get $b|767
     local.get $i|769
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.47
     end
     local.get $i|769
     i32.const 1
     i32.add
     local.set $i|769
     br $for-loop|76
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  i32.const 5
  i32.const 2
  i32.const 7
  i32.const 7360
  call $~lib/rt/__newArray
  local.set $u32ArrayTyped
  local.get $u32ArrayTyped
  i32.const 0
  global.set $~argumentsLength
  i32.const 0
  call $~lib/array/Array<u32>#sort@varargs
  drop
  block $std/array/isArraysEqual<u32>|inlined.6 (result i32)
   local.get $u32ArrayTyped
   local.set $a|776
   i32.const 5
   i32.const 2
   i32.const 7
   i32.const 7440
   call $~lib/rt/__newArray
   local.set $b|777
   i32.const 0
   local.set $len|778
   local.get $len|778
   i32.eqz
   if
    local.get $a|776
    call $~lib/array/Array<u32>#get:length
    local.set $len|778
    local.get $len|778
    local.get $b|777
    call $~lib/array/Array<u32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<u32>|inlined.6
    end
    local.get $a|776
    local.get $b|777
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<u32>|inlined.6
    end
   end
   i32.const 0
   local.set $i|779
   loop $for-loop|77
    local.get $i|779
    local.get $len|778
    i32.lt_s
    local.set $780
    local.get $780
    if
     i32.const 0
     drop
     local.get $a|776
     local.get $i|779
     call $~lib/array/Array<u32>#__get
     local.get $b|777
     local.get $i|779
     call $~lib/array/Array<u32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<u32>|inlined.6
     end
     local.get $i|779
     i32.const 1
     i32.add
     local.set $i|779
     br $for-loop|77
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 2
  i32.const 3
  i32.const 7488
  call $~lib/rt/__newArray
  local.set $reversed0
  i32.const 1
  i32.const 2
  i32.const 3
  i32.const 7520
  call $~lib/rt/__newArray
  local.set $reversed1
  i32.const 2
  i32.const 2
  i32.const 3
  i32.const 7552
  call $~lib/rt/__newArray
  local.set $reversed2
  i32.const 4
  i32.const 2
  i32.const 3
  i32.const 7584
  call $~lib/rt/__newArray
  local.set $reversed4
  i32.const 4
  i32.const 2
  i32.const 3
  i32.const 7632
  call $~lib/rt/__newArray
  local.set $expected4
  i32.const 64
  local.set $size
  i32.const 0
  local.get $size
  call $~lib/array/Array<i32>#constructor
  local.set $arr|797
  i32.const 0
  local.set $i|798
  loop $for-loop|78
   local.get $i|798
   local.get $size
   i32.lt_s
   local.set $799
   local.get $799
   if
    local.get $arr|797
    local.get $i|798
    local.get $size
    i32.const 1
    i32.sub
    local.get $i|798
    i32.sub
    call $~lib/array/Array<i32>#__set
    local.get $i|798
    i32.const 1
    i32.add
    local.set $i|798
    br $for-loop|78
   end
  end
  local.get $arr|797
  local.set $reversed64
  i32.const 128
  local.set $size|801
  i32.const 0
  local.get $size|801
  call $~lib/array/Array<i32>#constructor
  local.set $arr|802
  i32.const 0
  local.set $i|803
  loop $for-loop|79
   local.get $i|803
   local.get $size|801
   i32.lt_s
   local.set $804
   local.get $804
   if
    local.get $arr|802
    local.get $i|803
    local.get $size|801
    i32.const 1
    i32.sub
    local.get $i|803
    i32.sub
    call $~lib/array/Array<i32>#__set
    local.get $i|803
    i32.const 1
    i32.add
    local.set $i|803
    br $for-loop|79
   end
  end
  local.get $arr|802
  local.set $reversed128
  i32.const 1024
  local.set $size|806
  i32.const 0
  local.get $size|806
  call $~lib/array/Array<i32>#constructor
  local.set $arr|807
  i32.const 0
  local.set $i|808
  loop $for-loop|80
   local.get $i|808
   local.get $size|806
   i32.lt_s
   local.set $809
   local.get $809
   if
    local.get $arr|807
    local.get $i|808
    local.get $size|806
    i32.const 1
    i32.sub
    local.get $i|808
    i32.sub
    call $~lib/array/Array<i32>#__set
    local.get $i|808
    i32.const 1
    i32.add
    local.set $i|808
    br $for-loop|80
   end
  end
  local.get $arr|807
  local.set $reversed1024
  i32.const 512
  local.set $size|811
  i32.const 0
  local.get $size|811
  call $~lib/array/Array<i32>#constructor
  local.set $arr|812
  i32.const 0
  local.set $i|813
  loop $for-loop|81
   local.get $i|813
   local.get $size|811
   i32.lt_s
   local.set $814
   local.get $814
   if
    local.get $arr|812
    local.get $i|813
    call $~lib/math/NativeMath.random
    local.get $size|811
    f64.convert_i32_s
    f64.mul
    i32.trunc_sat_f64_s
    call $~lib/array/Array<i32>#__set
    local.get $i|813
    i32.const 1
    i32.add
    local.set $i|813
    br $for-loop|81
   end
  end
  local.get $arr|812
  local.set $randomized512
  local.get $reversed0
  local.set $arr|816
  local.get $arr|816
  local.set $arr|817
  block $~lib/util/sort/COMPARATOR<i32>|inlined.1 (result i32)
   i32.const 1
   drop
   i32.const 4
   i32.const 4
   i32.le_u
   drop
   i32.const 7680
   br $~lib/util/sort/COMPARATOR<i32>|inlined.1
  end
  local.set $comparator
  block $std/array/isSorted<i32>|inlined.0 (result i32)
   local.get $arr|817
   local.get $comparator
   call $~lib/array/Array<i32>#sort
   local.set $data
   local.get $comparator
   local.set $comparator|820
   i32.const 1
   local.set $i|821
   local.get $data
   call $~lib/array/Array<i32>#get:length
   local.set $len|822
   loop $for-loop|82
    local.get $i|821
    local.get $len|822
    i32.lt_s
    local.set $823
    local.get $823
    if
     local.get $data
     local.get $i|821
     i32.const 1
     i32.sub
     call $~lib/array/Array<i32>#__get
     local.get $data
     local.get $i|821
     call $~lib/array/Array<i32>#__get
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator|820
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     if
      i32.const 0
      br $std/array/isSorted<i32>|inlined.0
     end
     local.get $i|821
     i32.const 1
     i32.add
     local.set $i|821
     br $for-loop|82
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $reversed1
  local.set $arr|824
  local.get $arr|824
  local.set $arr|825
  block $~lib/util/sort/COMPARATOR<i32>|inlined.2 (result i32)
   i32.const 1
   drop
   i32.const 4
   i32.const 4
   i32.le_u
   drop
   i32.const 7712
   br $~lib/util/sort/COMPARATOR<i32>|inlined.2
  end
  local.set $comparator|826
  block $std/array/isSorted<i32>|inlined.1 (result i32)
   local.get $arr|825
   local.get $comparator|826
   call $~lib/array/Array<i32>#sort
   local.set $data|827
   local.get $comparator|826
   local.set $comparator|828
   i32.const 1
   local.set $i|829
   local.get $data|827
   call $~lib/array/Array<i32>#get:length
   local.set $len|830
   loop $for-loop|83
    local.get $i|829
    local.get $len|830
    i32.lt_s
    local.set $831
    local.get $831
    if
     local.get $data|827
     local.get $i|829
     i32.const 1
     i32.sub
     call $~lib/array/Array<i32>#__get
     local.get $data|827
     local.get $i|829
     call $~lib/array/Array<i32>#__get
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator|828
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     if
      i32.const 0
      br $std/array/isSorted<i32>|inlined.1
     end
     local.get $i|829
     i32.const 1
     i32.add
     local.set $i|829
     br $for-loop|83
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.48 (result i32)
   local.get $reversed1
   local.set $a|834
   i32.const 1
   i32.const 2
   i32.const 3
   i32.const 7744
   call $~lib/rt/__newArray
   local.set $b|835
   i32.const 0
   local.set $len|836
   local.get $len|836
   i32.eqz
   if
    local.get $a|834
    call $~lib/array/Array<i32>#get:length
    local.set $len|836
    local.get $len|836
    local.get $b|835
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.48
    end
    local.get $a|834
    local.get $b|835
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.48
    end
   end
   i32.const 0
   local.set $i|837
   loop $for-loop|84
    local.get $i|837
    local.get $len|836
    i32.lt_s
    local.set $838
    local.get $838
    if
     i32.const 0
     drop
     local.get $a|834
     local.get $i|837
     call $~lib/array/Array<i32>#__get
     local.get $b|835
     local.get $i|837
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.48
     end
     local.get $i|837
     i32.const 1
     i32.add
     local.set $i|837
     br $for-loop|84
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $reversed2
  local.set $arr|839
  local.get $arr|839
  local.set $arr|840
  block $~lib/util/sort/COMPARATOR<i32>|inlined.3 (result i32)
   i32.const 1
   drop
   i32.const 4
   i32.const 4
   i32.le_u
   drop
   i32.const 7776
   br $~lib/util/sort/COMPARATOR<i32>|inlined.3
  end
  local.set $comparator|841
  block $std/array/isSorted<i32>|inlined.2 (result i32)
   local.get $arr|840
   local.get $comparator|841
   call $~lib/array/Array<i32>#sort
   local.set $data|842
   local.get $comparator|841
   local.set $comparator|843
   i32.const 1
   local.set $i|844
   local.get $data|842
   call $~lib/array/Array<i32>#get:length
   local.set $len|845
   loop $for-loop|85
    local.get $i|844
    local.get $len|845
    i32.lt_s
    local.set $846
    local.get $846
    if
     local.get $data|842
     local.get $i|844
     i32.const 1
     i32.sub
     call $~lib/array/Array<i32>#__get
     local.get $data|842
     local.get $i|844
     call $~lib/array/Array<i32>#__get
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator|843
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     if
      i32.const 0
      br $std/array/isSorted<i32>|inlined.2
     end
     local.get $i|844
     i32.const 1
     i32.add
     local.set $i|844
     br $for-loop|85
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.49 (result i32)
   local.get $reversed2
   local.set $a|849
   i32.const 2
   i32.const 2
   i32.const 3
   i32.const 7808
   call $~lib/rt/__newArray
   local.set $b|850
   i32.const 0
   local.set $len|851
   local.get $len|851
   i32.eqz
   if
    local.get $a|849
    call $~lib/array/Array<i32>#get:length
    local.set $len|851
    local.get $len|851
    local.get $b|850
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.49
    end
    local.get $a|849
    local.get $b|850
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.49
    end
   end
   i32.const 0
   local.set $i|852
   loop $for-loop|86
    local.get $i|852
    local.get $len|851
    i32.lt_s
    local.set $853
    local.get $853
    if
     i32.const 0
     drop
     local.get $a|849
     local.get $i|852
     call $~lib/array/Array<i32>#__get
     local.get $b|850
     local.get $i|852
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.49
     end
     local.get $i|852
     i32.const 1
     i32.add
     local.set $i|852
     br $for-loop|86
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $reversed4
  local.set $arr|854
  local.get $arr|854
  local.set $arr|855
  block $~lib/util/sort/COMPARATOR<i32>|inlined.4 (result i32)
   i32.const 1
   drop
   i32.const 4
   i32.const 4
   i32.le_u
   drop
   i32.const 7840
   br $~lib/util/sort/COMPARATOR<i32>|inlined.4
  end
  local.set $comparator|856
  block $std/array/isSorted<i32>|inlined.3 (result i32)
   local.get $arr|855
   local.get $comparator|856
   call $~lib/array/Array<i32>#sort
   local.set $data|857
   local.get $comparator|856
   local.set $comparator|858
   i32.const 1
   local.set $i|859
   local.get $data|857
   call $~lib/array/Array<i32>#get:length
   local.set $len|860
   loop $for-loop|87
    local.get $i|859
    local.get $len|860
    i32.lt_s
    local.set $861
    local.get $861
    if
     local.get $data|857
     local.get $i|859
     i32.const 1
     i32.sub
     call $~lib/array/Array<i32>#__get
     local.get $data|857
     local.get $i|859
     call $~lib/array/Array<i32>#__get
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator|858
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     if
      i32.const 0
      br $std/array/isSorted<i32>|inlined.3
     end
     local.get $i|859
     i32.const 1
     i32.add
     local.set $i|859
     br $for-loop|87
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.50 (result i32)
   local.get $reversed4
   local.set $a|862
   local.get $expected4
   local.set $b|863
   i32.const 0
   local.set $len|864
   local.get $len|864
   i32.eqz
   if
    local.get $a|862
    call $~lib/array/Array<i32>#get:length
    local.set $len|864
    local.get $len|864
    local.get $b|863
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.50
    end
    local.get $a|862
    local.get $b|863
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.50
    end
   end
   i32.const 0
   local.set $i|865
   loop $for-loop|88
    local.get $i|865
    local.get $len|864
    i32.lt_s
    local.set $866
    local.get $866
    if
     i32.const 0
     drop
     local.get $a|862
     local.get $i|865
     call $~lib/array/Array<i32>#__get
     local.get $b|863
     local.get $i|865
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.50
     end
     local.get $i|865
     i32.const 1
     i32.add
     local.set $i|865
     br $for-loop|88
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $reversed64
  local.set $arr|867
  local.get $arr|867
  local.set $arr|868
  block $~lib/util/sort/COMPARATOR<i32>|inlined.5 (result i32)
   i32.const 1
   drop
   i32.const 4
   i32.const 4
   i32.le_u
   drop
   i32.const 7872
   br $~lib/util/sort/COMPARATOR<i32>|inlined.5
  end
  local.set $comparator|869
  block $std/array/isSorted<i32>|inlined.4 (result i32)
   local.get $arr|868
   local.get $comparator|869
   call $~lib/array/Array<i32>#sort
   local.set $data|870
   local.get $comparator|869
   local.set $comparator|871
   i32.const 1
   local.set $i|872
   local.get $data|870
   call $~lib/array/Array<i32>#get:length
   local.set $len|873
   loop $for-loop|89
    local.get $i|872
    local.get $len|873
    i32.lt_s
    local.set $874
    local.get $874
    if
     local.get $data|870
     local.get $i|872
     i32.const 1
     i32.sub
     call $~lib/array/Array<i32>#__get
     local.get $data|870
     local.get $i|872
     call $~lib/array/Array<i32>#__get
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator|871
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     if
      i32.const 0
      br $std/array/isSorted<i32>|inlined.4
     end
     local.get $i|872
     i32.const 1
     i32.add
     local.set $i|872
     br $for-loop|89
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.51 (result i32)
   local.get $reversed64
   local.set $a|875
   local.get $expected4
   local.set $b|876
   i32.const 4
   local.set $len|877
   local.get $len|877
   i32.eqz
   if
    local.get $a|875
    call $~lib/array/Array<i32>#get:length
    local.set $len|877
    local.get $len|877
    local.get $b|876
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.51
    end
    local.get $a|875
    local.get $b|876
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.51
    end
   end
   i32.const 0
   local.set $i|878
   loop $for-loop|90
    local.get $i|878
    local.get $len|877
    i32.lt_s
    local.set $879
    local.get $879
    if
     i32.const 0
     drop
     local.get $a|875
     local.get $i|878
     call $~lib/array/Array<i32>#__get
     local.get $b|876
     local.get $i|878
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.51
     end
     local.get $i|878
     i32.const 1
     i32.add
     local.set $i|878
     br $for-loop|90
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $reversed128
  local.set $arr|880
  local.get $arr|880
  local.set $arr|881
  block $~lib/util/sort/COMPARATOR<i32>|inlined.6 (result i32)
   i32.const 1
   drop
   i32.const 4
   i32.const 4
   i32.le_u
   drop
   i32.const 7904
   br $~lib/util/sort/COMPARATOR<i32>|inlined.6
  end
  local.set $comparator|882
  block $std/array/isSorted<i32>|inlined.5 (result i32)
   local.get $arr|881
   local.get $comparator|882
   call $~lib/array/Array<i32>#sort
   local.set $data|883
   local.get $comparator|882
   local.set $comparator|884
   i32.const 1
   local.set $i|885
   local.get $data|883
   call $~lib/array/Array<i32>#get:length
   local.set $len|886
   loop $for-loop|91
    local.get $i|885
    local.get $len|886
    i32.lt_s
    local.set $887
    local.get $887
    if
     local.get $data|883
     local.get $i|885
     i32.const 1
     i32.sub
     call $~lib/array/Array<i32>#__get
     local.get $data|883
     local.get $i|885
     call $~lib/array/Array<i32>#__get
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator|884
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     if
      i32.const 0
      br $std/array/isSorted<i32>|inlined.5
     end
     local.get $i|885
     i32.const 1
     i32.add
     local.set $i|885
     br $for-loop|91
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.52 (result i32)
   local.get $reversed128
   local.set $a|888
   local.get $expected4
   local.set $b|889
   i32.const 4
   local.set $len|890
   local.get $len|890
   i32.eqz
   if
    local.get $a|888
    call $~lib/array/Array<i32>#get:length
    local.set $len|890
    local.get $len|890
    local.get $b|889
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.52
    end
    local.get $a|888
    local.get $b|889
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.52
    end
   end
   i32.const 0
   local.set $i|891
   loop $for-loop|92
    local.get $i|891
    local.get $len|890
    i32.lt_s
    local.set $892
    local.get $892
    if
     i32.const 0
     drop
     local.get $a|888
     local.get $i|891
     call $~lib/array/Array<i32>#__get
     local.get $b|889
     local.get $i|891
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.52
     end
     local.get $i|891
     i32.const 1
     i32.add
     local.set $i|891
     br $for-loop|92
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $reversed1024
  local.set $arr|893
  local.get $arr|893
  local.set $arr|894
  block $~lib/util/sort/COMPARATOR<i32>|inlined.7 (result i32)
   i32.const 1
   drop
   i32.const 4
   i32.const 4
   i32.le_u
   drop
   i32.const 7936
   br $~lib/util/sort/COMPARATOR<i32>|inlined.7
  end
  local.set $comparator|895
  block $std/array/isSorted<i32>|inlined.6 (result i32)
   local.get $arr|894
   local.get $comparator|895
   call $~lib/array/Array<i32>#sort
   local.set $data|896
   local.get $comparator|895
   local.set $comparator|897
   i32.const 1
   local.set $i|898
   local.get $data|896
   call $~lib/array/Array<i32>#get:length
   local.set $len|899
   loop $for-loop|93
    local.get $i|898
    local.get $len|899
    i32.lt_s
    local.set $900
    local.get $900
    if
     local.get $data|896
     local.get $i|898
     i32.const 1
     i32.sub
     call $~lib/array/Array<i32>#__get
     local.get $data|896
     local.get $i|898
     call $~lib/array/Array<i32>#__get
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator|897
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     if
      i32.const 0
      br $std/array/isSorted<i32>|inlined.6
     end
     local.get $i|898
     i32.const 1
     i32.add
     local.set $i|898
     br $for-loop|93
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.53 (result i32)
   local.get $reversed1024
   local.set $a|901
   local.get $expected4
   local.set $b|902
   i32.const 4
   local.set $len|903
   local.get $len|903
   i32.eqz
   if
    local.get $a|901
    call $~lib/array/Array<i32>#get:length
    local.set $len|903
    local.get $len|903
    local.get $b|902
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.53
    end
    local.get $a|901
    local.get $b|902
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.53
    end
   end
   i32.const 0
   local.set $i|904
   loop $for-loop|94
    local.get $i|904
    local.get $len|903
    i32.lt_s
    local.set $905
    local.get $905
    if
     i32.const 0
     drop
     local.get $a|901
     local.get $i|904
     call $~lib/array/Array<i32>#__get
     local.get $b|902
     local.get $i|904
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.53
     end
     local.get $i|904
     i32.const 1
     i32.add
     local.set $i|904
     br $for-loop|94
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $randomized512
  local.set $arr|906
  local.get $arr|906
  local.set $arr|907
  block $~lib/util/sort/COMPARATOR<i32>|inlined.8 (result i32)
   i32.const 1
   drop
   i32.const 4
   i32.const 4
   i32.le_u
   drop
   i32.const 7968
   br $~lib/util/sort/COMPARATOR<i32>|inlined.8
  end
  local.set $comparator|908
  block $std/array/isSorted<i32>|inlined.7 (result i32)
   local.get $arr|907
   local.get $comparator|908
   call $~lib/array/Array<i32>#sort
   local.set $data|909
   local.get $comparator|908
   local.set $comparator|910
   i32.const 1
   local.set $i|911
   local.get $data|909
   call $~lib/array/Array<i32>#get:length
   local.set $len|912
   loop $for-loop|95
    local.get $i|911
    local.get $len|912
    i32.lt_s
    local.set $913
    local.get $913
    if
     local.get $data|909
     local.get $i|911
     i32.const 1
     i32.sub
     call $~lib/array/Array<i32>#__get
     local.get $data|909
     local.get $i|911
     call $~lib/array/Array<i32>#__get
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator|910
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     if
      i32.const 0
      br $std/array/isSorted<i32>|inlined.7
     end
     local.get $i|911
     i32.const 1
     i32.add
     local.set $i|911
     br $for-loop|95
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/inputStabArr
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/array/Array<std/array/Dim>#slice
  i32.const 8000
  call $~lib/array/Array<std/array/Dim>#sort
  local.set $sorted
  i32.const 1
  local.set $check
  i32.const 0
  local.set $i|916
  global.get $std/array/inputStabArr
  call $~lib/array/Array<std/array/Dim>#get:length
  local.set $len|917
  block $for-break96
   loop $for-loop|96
    local.get $i|916
    local.get $len|917
    i32.lt_s
    local.set $918
    local.get $918
    if
     local.get $sorted
     local.get $i|916
     call $~lib/array/Array<std/array/Dim>#__get
     local.set $input
     global.get $std/array/outputStabArr
     local.get $i|916
     call $~lib/array/Array<std/array/Dim>#__get
     local.set $target
     local.get $input
     i32.load $0
     local.get $target
     i32.load $0
     i32.ne
     if (result i32)
      i32.const 1
     else
      local.get $input
      i32.load $0 offset=4
      local.get $target
      i32.load $0 offset=4
      i32.ne
     end
     if
      i32.const 0
      local.set $check
      br $for-break96
     end
     local.get $i|916
     i32.const 1
     i32.add
     local.set $i|916
     br $for-loop|96
    end
   end
  end
  local.get $check
  i32.eqz
  if
   unreachable
  end
  i32.const 64
  local.set $size|921
  i32.const 0
  local.get $size|921
  call $~lib/array/Array<i32>#constructor
  local.set $arr|922
  i32.const 0
  local.set $i|923
  loop $for-loop|97
   local.get $i|923
   local.get $size|921
   i32.lt_s
   local.set $924
   local.get $924
   if
    local.get $arr|922
    local.get $i|923
    call $~lib/math/NativeMath.random
    local.get $size|921
    f64.convert_i32_s
    f64.mul
    i32.trunc_sat_f64_s
    call $~lib/array/Array<i32>#__set
    local.get $i|923
    i32.const 1
    i32.add
    local.set $i|923
    br $for-loop|97
   end
  end
  local.get $arr|922
  local.set $randomized64
  i32.const 257
  local.set $size|926
  i32.const 0
  local.get $size|926
  call $~lib/array/Array<i32>#constructor
  local.set $arr|927
  i32.const 0
  local.set $i|928
  loop $for-loop|98
   local.get $i|928
   local.get $size|926
   i32.lt_s
   local.set $929
   local.get $929
   if
    local.get $arr|927
    local.get $i|928
    call $~lib/math/NativeMath.random
    local.get $size|926
    f64.convert_i32_s
    f64.mul
    i32.trunc_sat_f64_s
    call $~lib/array/Array<i32>#__set
    local.get $i|928
    i32.const 1
    i32.add
    local.set $i|928
    br $for-loop|98
   end
  end
  local.get $arr|927
  local.set $randomized257
  local.get $randomized64
  local.set $arr|931
  i32.const 8032
  local.set $comparator|932
  block $std/array/isSorted<i32>|inlined.8 (result i32)
   local.get $arr|931
   local.get $comparator|932
   call $~lib/array/Array<i32>#sort
   local.set $data|933
   local.get $comparator|932
   local.set $comparator|934
   i32.const 1
   local.set $i|935
   local.get $data|933
   call $~lib/array/Array<i32>#get:length
   local.set $len|936
   loop $for-loop|99
    local.get $i|935
    local.get $len|936
    i32.lt_s
    local.set $937
    local.get $937
    if
     local.get $data|933
     local.get $i|935
     i32.const 1
     i32.sub
     call $~lib/array/Array<i32>#__get
     local.get $data|933
     local.get $i|935
     call $~lib/array/Array<i32>#__get
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator|934
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     if
      i32.const 0
      br $std/array/isSorted<i32>|inlined.8
     end
     local.get $i|935
     i32.const 1
     i32.add
     local.set $i|935
     br $for-loop|99
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $randomized64
  local.set $arr|938
  i32.const 8064
  local.set $comparator|939
  block $std/array/isSorted<i32>|inlined.9 (result i32)
   local.get $arr|938
   local.get $comparator|939
   call $~lib/array/Array<i32>#sort
   local.set $data|940
   local.get $comparator|939
   local.set $comparator|941
   i32.const 1
   local.set $i|942
   local.get $data|940
   call $~lib/array/Array<i32>#get:length
   local.set $len|943
   loop $for-loop|100
    local.get $i|942
    local.get $len|943
    i32.lt_s
    local.set $944
    local.get $944
    if
     local.get $data|940
     local.get $i|942
     i32.const 1
     i32.sub
     call $~lib/array/Array<i32>#__get
     local.get $data|940
     local.get $i|942
     call $~lib/array/Array<i32>#__get
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator|941
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     if
      i32.const 0
      br $std/array/isSorted<i32>|inlined.9
     end
     local.get $i|942
     i32.const 1
     i32.add
     local.set $i|942
     br $for-loop|100
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $randomized257
  local.set $arr|945
  i32.const 8096
  local.set $comparator|946
  block $std/array/isSorted<i32>|inlined.10 (result i32)
   local.get $arr|945
   local.get $comparator|946
   call $~lib/array/Array<i32>#sort
   local.set $data|947
   local.get $comparator|946
   local.set $comparator|948
   i32.const 1
   local.set $i|949
   local.get $data|947
   call $~lib/array/Array<i32>#get:length
   local.set $len|950
   loop $for-loop|101
    local.get $i|949
    local.get $len|950
    i32.lt_s
    local.set $951
    local.get $951
    if
     local.get $data|947
     local.get $i|949
     i32.const 1
     i32.sub
     call $~lib/array/Array<i32>#__get
     local.get $data|947
     local.get $i|949
     call $~lib/array/Array<i32>#__get
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator|948
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     if
      i32.const 0
      br $std/array/isSorted<i32>|inlined.10
     end
     local.get $i|949
     i32.const 1
     i32.add
     local.set $i|949
     br $for-loop|101
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $randomized257
  local.set $arr|952
  i32.const 8128
  local.set $comparator|953
  block $std/array/isSorted<i32>|inlined.11 (result i32)
   local.get $arr|952
   local.get $comparator|953
   call $~lib/array/Array<i32>#sort
   local.set $data|954
   local.get $comparator|953
   local.set $comparator|955
   i32.const 1
   local.set $i|956
   local.get $data|954
   call $~lib/array/Array<i32>#get:length
   local.set $len|957
   loop $for-loop|102
    local.get $i|956
    local.get $len|957
    i32.lt_s
    local.set $958
    local.get $958
    if
     local.get $data|954
     local.get $i|956
     i32.const 1
     i32.sub
     call $~lib/array/Array<i32>#__get
     local.get $data|954
     local.get $i|956
     call $~lib/array/Array<i32>#__get
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator|955
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     if
      i32.const 0
      br $std/array/isSorted<i32>|inlined.11
     end
     local.get $i|956
     i32.const 1
     i32.add
     local.set $i|956
     br $for-loop|102
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  i32.const 2
  local.set $size|959
  i32.const 0
  local.get $size|959
  call $~lib/array/Array<~lib/array/Array<i32>>#constructor
  local.set $arr|960
  i32.const 0
  local.set $i|961
  loop $for-loop|103
   local.get $i|961
   local.get $size|959
   i32.lt_s
   local.set $962
   local.get $962
   if
    i32.const 0
    i32.const 1
    call $~lib/array/Array<i32>#constructor
    local.set $inner
    local.get $inner
    i32.const 0
    local.get $size|959
    i32.const 1
    i32.sub
    local.get $i|961
    i32.sub
    call $~lib/array/Array<i32>#__set
    local.get $arr|960
    local.get $i|961
    local.get $inner
    call $~lib/array/Array<~lib/array/Array<i32>>#__set
    local.get $i|961
    i32.const 1
    i32.add
    local.set $i|961
    br $for-loop|103
   end
  end
  local.get $arr|960
  local.set $reversedNested512
  local.get $reversedNested512
  local.set $arr|965
  i32.const 8160
  local.set $comparator|966
  block $std/array/isSorted<~lib/array/Array<i32>>|inlined.0 (result i32)
   local.get $arr|965
   local.get $comparator|966
   call $~lib/array/Array<~lib/array/Array<i32>>#sort
   local.set $data|967
   local.get $comparator|966
   local.set $comparator|968
   i32.const 1
   local.set $i|969
   local.get $data|967
   call $~lib/array/Array<~lib/array/Array<i32>>#get:length
   local.set $len|970
   loop $for-loop|104
    local.get $i|969
    local.get $len|970
    i32.lt_s
    local.set $971
    local.get $971
    if
     local.get $data|967
     local.get $i|969
     i32.const 1
     i32.sub
     call $~lib/array/Array<~lib/array/Array<i32>>#__get
     local.get $data|967
     local.get $i|969
     call $~lib/array/Array<~lib/array/Array<i32>>#__get
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator|968
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     if
      i32.const 0
      br $std/array/isSorted<~lib/array/Array<i32>>|inlined.0
     end
     local.get $i|969
     i32.const 1
     i32.add
     local.set $i|969
     br $for-loop|104
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  i32.const 512
  local.set $size|972
  i32.const 0
  local.get $size|972
  call $~lib/array/Array<std/array/Proxy<i32>>#constructor
  local.set $arr|973
  i32.const 0
  local.set $i|974
  loop $for-loop|105
   local.get $i|974
   local.get $size|972
   i32.lt_s
   local.set $975
   local.get $975
   if
    local.get $arr|973
    local.get $i|974
    i32.const 0
    local.set $this|976
    local.get $size|972
    i32.const 1
    i32.sub
    local.get $i|974
    i32.sub
    local.set $x|977
    local.get $this|976
    i32.eqz
    if
     i32.const 4
     i32.const 31
     call $~lib/rt/stub/__new
     local.set $this|976
    end
    local.get $this|976
    local.get $x|977
    call $std/array/Proxy<i32>#set:x
    local.get $this|976
    call $~lib/array/Array<std/array/Proxy<i32>>#__set
    local.get $i|974
    i32.const 1
    i32.add
    local.set $i|974
    br $for-loop|105
   end
  end
  local.get $arr|973
  local.set $reversedElements512
  local.get $reversedElements512
  local.set $arr|979
  i32.const 8192
  local.set $comparator|980
  block $std/array/isSorted<std/array/Proxy<i32>>|inlined.0 (result i32)
   local.get $arr|979
   local.get $comparator|980
   call $~lib/array/Array<std/array/Proxy<i32>>#sort
   local.set $data|981
   local.get $comparator|980
   local.set $comparator|982
   i32.const 1
   local.set $i|983
   local.get $data|981
   call $~lib/array/Array<std/array/Proxy<i32>>#get:length
   local.set $len|984
   loop $for-loop|106
    local.get $i|983
    local.get $len|984
    i32.lt_s
    local.set $985
    local.get $985
    if
     local.get $data|981
     local.get $i|983
     i32.const 1
     i32.sub
     call $~lib/array/Array<std/array/Proxy<i32>>#__get
     local.get $data|981
     local.get $i|983
     call $~lib/array/Array<std/array/Proxy<i32>>#__get
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator|982
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     if
      i32.const 0
      br $std/array/isSorted<std/array/Proxy<i32>>|inlined.0
     end
     local.get $i|983
     i32.const 1
     i32.add
     local.set $i|983
     br $for-loop|106
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  i32.const 4
  i32.const 2
  i32.const 29
  i32.const 0
  call $~lib/rt/__newArray
  local.set $986
  local.get $986
  i32.load $0 offset=4
  local.set $987
  local.get $986
  i32.const 0
  i32.const 1
  i32.const 2
  i32.const 3
  i32.const 8224
  call $~lib/rt/__newArray
  call $~lib/array/Array<~lib/array/Array<i32>>#__uset
  local.get $986
  i32.const 1
  i32.const 3
  i32.const 2
  i32.const 3
  i32.const 8256
  call $~lib/rt/__newArray
  call $~lib/array/Array<~lib/array/Array<i32>>#__uset
  local.get $986
  i32.const 2
  i32.const 3
  i32.const 2
  i32.const 3
  i32.const 8288
  call $~lib/rt/__newArray
  call $~lib/array/Array<~lib/array/Array<i32>>#__uset
  local.get $986
  i32.const 3
  i32.const 3
  i32.const 2
  i32.const 3
  i32.const 8320
  call $~lib/rt/__newArray
  call $~lib/array/Array<~lib/array/Array<i32>>#__uset
  local.get $986
  local.set $plainTarget
  local.get $plainTarget
  call $~lib/array/Array<~lib/array/Array<i32>>#flat
  local.set $plainResult
  local.get $plainResult
  call $~lib/array/Array<i32>#get:length
  i32.const 10
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $i|998
  loop $for-loop|107
   local.get $i|998
   i32.const 10
   i32.lt_s
   local.set $999
   local.get $999
   if
    local.get $plainResult
    local.get $i|998
    call $~lib/array/Array<i32>#__get
    local.get $i|998
    i32.eq
    i32.eqz
    if
     unreachable
    end
    local.get $i|998
    i32.const 1
    i32.add
    local.set $i|998
    br $for-loop|107
   end
  end
  i32.const 4
  i32.const 2
  i32.const 35
  i32.const 0
  call $~lib/rt/__newArray
  local.set $1000
  local.get $1000
  i32.load $0 offset=4
  local.set $1001
  local.get $1000
  i32.const 0
  i32.const 1
  i32.const 2
  i32.const 34
  i32.const 8384
  call $~lib/rt/__newArray
  call $~lib/array/Array<~lib/array/Array<~lib/string/String|null>>#__uset
  local.get $1000
  i32.const 1
  i32.const 3
  i32.const 2
  i32.const 34
  i32.const 8480
  call $~lib/rt/__newArray
  call $~lib/array/Array<~lib/array/Array<~lib/string/String|null>>#__uset
  local.get $1000
  i32.const 2
  i32.const 3
  i32.const 2
  i32.const 34
  i32.const 8608
  call $~lib/rt/__newArray
  call $~lib/array/Array<~lib/array/Array<~lib/string/String|null>>#__uset
  local.get $1000
  i32.const 3
  i32.const 1
  i32.const 2
  i32.const 34
  i32.const 8672
  call $~lib/rt/__newArray
  call $~lib/array/Array<~lib/array/Array<~lib/string/String|null>>#__uset
  local.get $1000
  local.set $stringTarget
  local.get $stringTarget
  call $~lib/array/Array<~lib/array/Array<~lib/string/String|null>>#flat
  local.set $stringResult
  i32.const 8
  i32.const 2
  i32.const 34
  i32.const 8704
  call $~lib/rt/__newArray
  local.set $expected
  local.get $stringResult
  call $~lib/array/Array<~lib/string/String|null>#get:length
  i32.const 8
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $i|1015
  loop $for-loop|108
   local.get $i|1015
   local.get $expected
   call $~lib/array/Array<~lib/string/String|null>#get:length
   i32.lt_s
   local.set $1016
   local.get $1016
   if
    block $~lib/string/String.__eq|inlined.0 (result i32)
     local.get $stringResult
     local.get $i|1015
     call $~lib/array/Array<~lib/string/String|null>#__get
     local.set $left
     local.get $expected
     local.get $i|1015
     call $~lib/array/Array<~lib/string/String|null>#__get
     local.set $right
     local.get $left
     local.set $ptr1
     local.get $right
     local.set $ptr2
     local.get $ptr1
     local.get $ptr2
     i32.eq
     if
      i32.const 1
      br $~lib/string/String.__eq|inlined.0
     end
     local.get $ptr1
     i32.const 0
     i32.eq
     if (result i32)
      i32.const 1
     else
      local.get $ptr2
      i32.const 0
      i32.eq
     end
     if
      i32.const 0
      br $~lib/string/String.__eq|inlined.0
     end
     local.get $left
     call $~lib/string/String#get:length
     local.set $leftLength
     local.get $leftLength
     local.get $right
     call $~lib/string/String#get:length
     i32.ne
     if
      i32.const 0
      br $~lib/string/String.__eq|inlined.0
     end
     local.get $leftLength
     i32.const 128
     i32.ge_s
     if
      block $~lib/util/raweq/__raweq128|inlined.0 (result i32)
       local.get $ptr1
       local.set $ptr1|1022
       local.get $ptr2
       local.set $ptr2|1023
       local.get $ptr1|1022
       local.set $ptr1|1024
       local.get $ptr2|1023
       local.set $ptr2|1025
       local.get $ptr1|1024
       i64.load $0
       local.get $ptr2|1025
       i64.load $0
       i64.eq
       i32.eqz
       if
        i32.const 0
        br $~lib/util/raweq/__raweq128|inlined.0
       end
       local.get $ptr1|1022
       i32.const 8
       i32.add
       local.set $ptr1|1022
       local.get $ptr2|1023
       i32.const 8
       i32.add
       local.set $ptr2|1023
       local.get $ptr1|1022
       local.set $ptr1|1026
       local.get $ptr2|1023
       local.set $ptr2|1027
       local.get $ptr1|1026
       i64.load $0
       local.get $ptr2|1027
       i64.load $0
       i64.eq
       i32.eqz
       if
        i32.const 0
        br $~lib/util/raweq/__raweq128|inlined.0
       end
       local.get $ptr1|1022
       i32.const 8
       i32.add
       local.set $ptr1|1022
       local.get $ptr2|1023
       i32.const 8
       i32.add
       local.set $ptr2|1023
       local.get $ptr1|1022
       local.set $ptr1|1028
       local.get $ptr2|1023
       local.set $ptr2|1029
       local.get $ptr1|1028
       i64.load $0
       local.get $ptr2|1029
       i64.load $0
       i64.eq
       i32.eqz
       if
        i32.const 0
        br $~lib/util/raweq/__raweq128|inlined.0
       end
       local.get $ptr1|1022
       i32.const 8
       i32.add
       local.set $ptr1|1022
       local.get $ptr2|1023
       i32.const 8
       i32.add
       local.set $ptr2|1023
       local.get $ptr1|1022
       local.set $ptr1|1030
       local.get $ptr2|1023
       local.set $ptr2|1031
       local.get $ptr1|1030
       i64.load $0
       local.get $ptr2|1031
       i64.load $0
       i64.eq
       i32.eqz
       if
        i32.const 0
        br $~lib/util/raweq/__raweq128|inlined.0
       end
       local.get $ptr1|1022
       i32.const 8
       i32.add
       local.set $ptr1|1022
       local.get $ptr2|1023
       i32.const 8
       i32.add
       local.set $ptr2|1023
       local.get $ptr1|1022
       local.set $ptr1|1032
       local.get $ptr2|1023
       local.set $ptr2|1033
       local.get $ptr1|1032
       i64.load $0
       local.get $ptr2|1033
       i64.load $0
       i64.eq
       i32.eqz
       if
        i32.const 0
        br $~lib/util/raweq/__raweq128|inlined.0
       end
       local.get $ptr1|1022
       i32.const 8
       i32.add
       local.set $ptr1|1022
       local.get $ptr2|1023
       i32.const 8
       i32.add
       local.set $ptr2|1023
       local.get $ptr1|1022
       local.set $ptr1|1034
       local.get $ptr2|1023
       local.set $ptr2|1035
       local.get $ptr1|1034
       i64.load $0
       local.get $ptr2|1035
       i64.load $0
       i64.eq
       i32.eqz
       if
        i32.const 0
        br $~lib/util/raweq/__raweq128|inlined.0
       end
       local.get $ptr1|1022
       i32.const 8
       i32.add
       local.set $ptr1|1022
       local.get $ptr2|1023
       i32.const 8
       i32.add
       local.set $ptr2|1023
       local.get $ptr1|1022
       local.set $ptr1|1036
       local.get $ptr2|1023
       local.set $ptr2|1037
       local.get $ptr1|1036
       i64.load $0
       local.get $ptr2|1037
       i64.load $0
       i64.eq
       i32.eqz
       if
        i32.const 0
        br $~lib/util/raweq/__raweq128|inlined.0
       end
       local.get $ptr1|1022
       i32.const 8
       i32.add
       local.set $ptr1|1022
       local.get $ptr2|1023
       i32.const 8
       i32.add
       local.set $ptr2|1023
       local.get $ptr1|1022
       local.set $ptr1|1038
       local.get $ptr2|1023
       local.set $ptr2|1039
       local.get $ptr1|1038
       i64.load $0
       local.get $ptr2|1039
       i64.load $0
       i64.eq
       i32.eqz
       if
        i32.const 0
        br $~lib/util/raweq/__raweq128|inlined.0
       end
       local.get $ptr1|1022
       i32.const 8
       i32.add
       local.set $ptr1|1022
       local.get $ptr2|1023
       i32.const 8
       i32.add
       local.set $ptr2|1023
       local.get $ptr1|1022
       local.set $ptr1|1040
       local.get $ptr2|1023
       local.set $ptr2|1041
       local.get $ptr1|1040
       i64.load $0
       local.get $ptr2|1041
       i64.load $0
       i64.eq
       i32.eqz
       if
        i32.const 0
        br $~lib/util/raweq/__raweq128|inlined.0
       end
       local.get $ptr1|1022
       i32.const 8
       i32.add
       local.set $ptr1|1022
       local.get $ptr2|1023
       i32.const 8
       i32.add
       local.set $ptr2|1023
       local.get $ptr1|1022
       local.set $ptr1|1042
       local.get $ptr2|1023
       local.set $ptr2|1043
       local.get $ptr1|1042
       i64.load $0
       local.get $ptr2|1043
       i64.load $0
       i64.eq
       i32.eqz
       if
        i32.const 0
        br $~lib/util/raweq/__raweq128|inlined.0
       end
       local.get $ptr1|1022
       i32.const 8
       i32.add
       local.set $ptr1|1022
       local.get $ptr2|1023
       i32.const 8
       i32.add
       local.set $ptr2|1023
       local.get $ptr1|1022
       local.set $ptr1|1044
       local.get $ptr2|1023
       local.set $ptr2|1045
       local.get $ptr1|1044
       i64.load $0
       local.get $ptr2|1045
       i64.load $0
       i64.eq
       i32.eqz
       if
        i32.const 0
        br $~lib/util/raweq/__raweq128|inlined.0
       end
       local.get $ptr1|1022
       i32.const 8
       i32.add
       local.set $ptr1|1022
       local.get $ptr2|1023
       i32.const 8
       i32.add
       local.set $ptr2|1023
       local.get $ptr1|1022
       local.set $ptr1|1046
       local.get $ptr2|1023
       local.set $ptr2|1047
       local.get $ptr1|1046
       i64.load $0
       local.get $ptr2|1047
       i64.load $0
       i64.eq
       i32.eqz
       if
        i32.const 0
        br $~lib/util/raweq/__raweq128|inlined.0
       end
       local.get $ptr1|1022
       i32.const 8
       i32.add
       local.set $ptr1|1022
       local.get $ptr2|1023
       i32.const 8
       i32.add
       local.set $ptr2|1023
       local.get $ptr1|1022
       local.set $ptr1|1048
       local.get $ptr2|1023
       local.set $ptr2|1049
       local.get $ptr1|1048
       i64.load $0
       local.get $ptr2|1049
       i64.load $0
       i64.eq
       i32.eqz
       if
        i32.const 0
        br $~lib/util/raweq/__raweq128|inlined.0
       end
       local.get $ptr1|1022
       i32.const 8
       i32.add
       local.set $ptr1|1022
       local.get $ptr2|1023
       i32.const 8
       i32.add
       local.set $ptr2|1023
       local.get $ptr1|1022
       local.set $ptr1|1050
       local.get $ptr2|1023
       local.set $ptr2|1051
       local.get $ptr1|1050
       i64.load $0
       local.get $ptr2|1051
       i64.load $0
       i64.eq
       i32.eqz
       if
        i32.const 0
        br $~lib/util/raweq/__raweq128|inlined.0
       end
       local.get $ptr1|1022
       i32.const 8
       i32.add
       local.set $ptr1|1022
       local.get $ptr2|1023
       i32.const 8
       i32.add
       local.set $ptr2|1023
       local.get $ptr1|1022
       local.set $ptr1|1052
       local.get $ptr2|1023
       local.set $ptr2|1053
       local.get $ptr1|1052
       i64.load $0
       local.get $ptr2|1053
       i64.load $0
       i64.eq
       i32.eqz
       if
        i32.const 0
        br $~lib/util/raweq/__raweq128|inlined.0
       end
       local.get $ptr1|1022
       i32.const 8
       i32.add
       local.set $ptr1|1022
       local.get $ptr2|1023
       i32.const 8
       i32.add
       local.set $ptr2|1023
       local.get $ptr1|1022
       i64.load $0
       local.get $ptr2|1023
       i64.load $0
       i64.eq
      end
      br $~lib/string/String.__eq|inlined.0
     else
      block $~lib/util/equpto/__equpto127|inlined.0 (result i32)
       local.get $ptr1
       local.set $ptr1|1054
       local.get $ptr2
       local.set $ptr2|1055
       local.get $leftLength
       local.set $len|1056
       local.get $len|1056
       i32.const 64
       i32.ge_u
       if
        block $~lib/util/raweq/__raweq64|inlined.0 (result i32)
         local.get $ptr1|1054
         local.set $ptr1|1057
         local.get $ptr2|1055
         local.set $ptr2|1058
         local.get $ptr1|1057
         local.set $ptr1|1059
         local.get $ptr2|1058
         local.set $ptr2|1060
         local.get $ptr1|1059
         i64.load $0
         local.get $ptr2|1060
         i64.load $0
         i64.eq
         i32.eqz
         if
          i32.const 0
          br $~lib/util/raweq/__raweq64|inlined.0
         end
         local.get $ptr1|1057
         i32.const 8
         i32.add
         local.set $ptr1|1057
         local.get $ptr2|1058
         i32.const 8
         i32.add
         local.set $ptr2|1058
         local.get $ptr1|1057
         local.set $ptr1|1061
         local.get $ptr2|1058
         local.set $ptr2|1062
         local.get $ptr1|1061
         i64.load $0
         local.get $ptr2|1062
         i64.load $0
         i64.eq
         i32.eqz
         if
          i32.const 0
          br $~lib/util/raweq/__raweq64|inlined.0
         end
         local.get $ptr1|1057
         i32.const 8
         i32.add
         local.set $ptr1|1057
         local.get $ptr2|1058
         i32.const 8
         i32.add
         local.set $ptr2|1058
         local.get $ptr1|1057
         local.set $ptr1|1063
         local.get $ptr2|1058
         local.set $ptr2|1064
         local.get $ptr1|1063
         i64.load $0
         local.get $ptr2|1064
         i64.load $0
         i64.eq
         i32.eqz
         if
          i32.const 0
          br $~lib/util/raweq/__raweq64|inlined.0
         end
         local.get $ptr1|1057
         i32.const 8
         i32.add
         local.set $ptr1|1057
         local.get $ptr2|1058
         i32.const 8
         i32.add
         local.set $ptr2|1058
         local.get $ptr1|1057
         local.set $ptr1|1065
         local.get $ptr2|1058
         local.set $ptr2|1066
         local.get $ptr1|1065
         i64.load $0
         local.get $ptr2|1066
         i64.load $0
         i64.eq
         i32.eqz
         if
          i32.const 0
          br $~lib/util/raweq/__raweq64|inlined.0
         end
         local.get $ptr1|1057
         i32.const 8
         i32.add
         local.set $ptr1|1057
         local.get $ptr2|1058
         i32.const 8
         i32.add
         local.set $ptr2|1058
         local.get $ptr1|1057
         local.set $ptr1|1067
         local.get $ptr2|1058
         local.set $ptr2|1068
         local.get $ptr1|1067
         i64.load $0
         local.get $ptr2|1068
         i64.load $0
         i64.eq
         i32.eqz
         if
          i32.const 0
          br $~lib/util/raweq/__raweq64|inlined.0
         end
         local.get $ptr1|1057
         i32.const 8
         i32.add
         local.set $ptr1|1057
         local.get $ptr2|1058
         i32.const 8
         i32.add
         local.set $ptr2|1058
         local.get $ptr1|1057
         local.set $ptr1|1069
         local.get $ptr2|1058
         local.set $ptr2|1070
         local.get $ptr1|1069
         i64.load $0
         local.get $ptr2|1070
         i64.load $0
         i64.eq
         i32.eqz
         if
          i32.const 0
          br $~lib/util/raweq/__raweq64|inlined.0
         end
         local.get $ptr1|1057
         i32.const 8
         i32.add
         local.set $ptr1|1057
         local.get $ptr2|1058
         i32.const 8
         i32.add
         local.set $ptr2|1058
         local.get $ptr1|1057
         local.set $ptr1|1071
         local.get $ptr2|1058
         local.set $ptr2|1072
         local.get $ptr1|1071
         i64.load $0
         local.get $ptr2|1072
         i64.load $0
         i64.eq
         i32.eqz
         if
          i32.const 0
          br $~lib/util/raweq/__raweq64|inlined.0
         end
         local.get $ptr1|1057
         i32.const 8
         i32.add
         local.set $ptr1|1057
         local.get $ptr2|1058
         i32.const 8
         i32.add
         local.set $ptr2|1058
         local.get $ptr1|1057
         i64.load $0
         local.get $ptr2|1058
         i64.load $0
         i64.eq
        end
        local.set $r
        local.get $r
        i32.eqz
        if
         i32.const 0
         br $~lib/util/equpto/__equpto127|inlined.0
        end
        local.get $ptr1|1054
        i32.const 64
        i32.add
        local.set $ptr1|1054
        local.get $ptr2|1055
        i32.const 64
        i32.add
        local.set $ptr2|1055
        local.get $len|1056
        i32.const 64
        i32.sub
        local.set $len|1056
       end
       block $~lib/util/equpto/__equpto63|inlined.0 (result i32)
        local.get $ptr1|1054
        local.set $ptr1|1074
        local.get $ptr2|1055
        local.set $ptr2|1075
        local.get $len|1056
        local.set $len|1076
        local.get $len|1076
        i32.const 32
        i32.ge_u
        if
         block $~lib/util/raweq/__raweq32|inlined.0 (result i32)
          local.get $ptr1|1074
          local.set $ptr1|1077
          local.get $ptr2|1075
          local.set $ptr2|1078
          local.get $ptr1|1077
          local.set $ptr1|1079
          local.get $ptr2|1078
          local.set $ptr2|1080
          local.get $ptr1|1079
          i64.load $0
          local.get $ptr2|1080
          i64.load $0
          i64.eq
          i32.eqz
          if
           i32.const 0
           br $~lib/util/raweq/__raweq32|inlined.0
          end
          local.get $ptr1|1077
          i32.const 8
          i32.add
          local.set $ptr1|1077
          local.get $ptr2|1078
          i32.const 8
          i32.add
          local.set $ptr2|1078
          local.get $ptr1|1077
          local.set $ptr1|1081
          local.get $ptr2|1078
          local.set $ptr2|1082
          local.get $ptr1|1081
          i64.load $0
          local.get $ptr2|1082
          i64.load $0
          i64.eq
          i32.eqz
          if
           i32.const 0
           br $~lib/util/raweq/__raweq32|inlined.0
          end
          local.get $ptr1|1077
          i32.const 8
          i32.add
          local.set $ptr1|1077
          local.get $ptr2|1078
          i32.const 8
          i32.add
          local.set $ptr2|1078
          local.get $ptr1|1077
          local.set $ptr1|1083
          local.get $ptr2|1078
          local.set $ptr2|1084
          local.get $ptr1|1083
          i64.load $0
          local.get $ptr2|1084
          i64.load $0
          i64.eq
          i32.eqz
          if
           i32.const 0
           br $~lib/util/raweq/__raweq32|inlined.0
          end
          local.get $ptr1|1077
          i32.const 8
          i32.add
          local.set $ptr1|1077
          local.get $ptr2|1078
          i32.const 8
          i32.add
          local.set $ptr2|1078
          local.get $ptr1|1077
          i64.load $0
          local.get $ptr2|1078
          i64.load $0
          i64.eq
         end
         local.set $r|1085
         local.get $r|1085
         i32.eqz
         if
          i32.const 0
          br $~lib/util/equpto/__equpto63|inlined.0
         end
         local.get $ptr1|1074
         i32.const 32
         i32.add
         local.set $ptr1|1074
         local.get $ptr2|1075
         i32.const 32
         i32.add
         local.set $ptr2|1075
         local.get $len|1076
         i32.const 32
         i32.sub
         local.set $len|1076
        end
        block $~lib/util/equpto/__equpto31|inlined.0 (result i32)
         local.get $ptr1|1074
         local.set $ptr1|1086
         local.get $ptr2|1075
         local.set $ptr2|1087
         local.get $len|1076
         local.set $len|1088
         local.get $len|1088
         i32.const 16
         i32.ge_u
         if
          block $~lib/util/raweq/__raweq16|inlined.0 (result i32)
           local.get $ptr1|1086
           local.set $ptr1|1089
           local.get $ptr2|1087
           local.set $ptr2|1090
           local.get $ptr1|1089
           local.set $ptr1|1091
           local.get $ptr2|1090
           local.set $ptr2|1092
           local.get $ptr1|1091
           i64.load $0
           local.get $ptr2|1092
           i64.load $0
           i64.eq
           i32.eqz
           if
            i32.const 0
            br $~lib/util/raweq/__raweq16|inlined.0
           end
           local.get $ptr1|1089
           i32.const 8
           i32.add
           local.set $ptr1|1089
           local.get $ptr2|1090
           i32.const 8
           i32.add
           local.set $ptr2|1090
           local.get $ptr1|1089
           i64.load $0
           local.get $ptr2|1090
           i64.load $0
           i64.eq
          end
          local.set $r|1093
          local.get $r|1093
          i32.eqz
          if
           i32.const 0
           br $~lib/util/equpto/__equpto31|inlined.0
          end
          local.get $ptr1|1086
          i32.const 16
          i32.add
          local.set $ptr1|1086
          local.get $ptr2|1087
          i32.const 16
          i32.add
          local.set $ptr2|1087
          local.get $len|1088
          i32.const 16
          i32.sub
          local.set $len|1088
         end
         block $~lib/util/equpto/__equpto15|inlined.0 (result i32)
          local.get $ptr1|1086
          local.set $ptr1|1094
          local.get $ptr2|1087
          local.set $ptr2|1095
          local.get $len|1088
          local.set $len|1096
          local.get $len|1096
          i32.const 8
          i32.ge_u
          if
           local.get $ptr1|1094
           local.set $ptr1|1097
           local.get $ptr2|1095
           local.set $ptr2|1098
           local.get $ptr1|1097
           i64.load $0
           local.get $ptr2|1098
           i64.load $0
           i64.eq
           local.set $r|1099
           local.get $r|1099
           i32.eqz
           if
            i32.const 0
            br $~lib/util/equpto/__equpto15|inlined.0
           end
           local.get $ptr1|1094
           i32.const 8
           i32.add
           local.set $ptr1|1094
           local.get $ptr2|1095
           i32.const 8
           i32.add
           local.set $ptr2|1095
           local.get $len|1096
           i32.const 8
           i32.sub
           local.set $len|1096
          end
          block $~lib/util/equpto/__equpto7|inlined.0 (result i32)
           local.get $ptr1|1094
           local.set $ptr1|1100
           local.get $ptr2|1095
           local.set $ptr2|1101
           local.get $len|1096
           local.set $len|1102
           local.get $len|1102
           i32.const 4
           i32.ge_u
           if
            local.get $ptr1|1100
            local.set $ptr1|1103
            local.get $ptr2|1101
            local.set $ptr2|1104
            local.get $ptr1|1103
            i32.load $0
            local.get $ptr2|1104
            i32.load $0
            i32.eq
            local.set $r|1105
            local.get $r|1105
            i32.eqz
            if
             i32.const 0
             br $~lib/util/equpto/__equpto7|inlined.0
            end
            local.get $ptr1|1100
            i32.const 4
            i32.add
            local.set $ptr1|1100
            local.get $ptr2|1101
            i32.const 4
            i32.add
            local.set $ptr2|1101
            local.get $len|1102
            i32.const 4
            i32.sub
            local.set $len|1102
           end
           block $~lib/util/equpto/__equpto3|inlined.0 (result i32)
            local.get $ptr1|1100
            local.set $ptr1|1106
            local.get $ptr2|1101
            local.set $ptr2|1107
            local.get $len|1102
            local.set $len|1108
            local.get $len|1108
            i32.const 2
            i32.ge_u
            if
             local.get $ptr1|1106
             local.set $ptr1|1109
             local.get $ptr2|1107
             local.set $ptr2|1110
             local.get $ptr1|1109
             i32.load16_u $0
             local.get $ptr2|1110
             i32.load16_u $0
             i32.eq
             local.set $r|1111
             local.get $r|1111
             i32.eqz
             if
              i32.const 0
              br $~lib/util/equpto/__equpto3|inlined.0
             end
             local.get $ptr1|1106
             i32.const 2
             i32.add
             local.set $ptr1|1106
             local.get $ptr2|1107
             i32.const 2
             i32.add
             local.set $ptr2|1107
             local.get $len|1108
             i32.const 2
             i32.sub
             local.set $len|1108
            end
            local.get $ptr1|1106
            local.set $ptr1|1112
            local.get $ptr2|1107
            local.set $ptr2|1113
            local.get $len|1108
            local.set $len|1114
            local.get $len|1114
            if (result i32)
             local.get $ptr1|1112
             local.set $ptr1|1115
             local.get $ptr2|1113
             local.set $ptr2|1116
             local.get $ptr1|1115
             i32.load8_u $0
             local.get $ptr2|1116
             i32.load8_u $0
             i32.eq
            else
             i32.const 1
            end
           end
          end
         end
        end
       end
      end
      br $~lib/string/String.__eq|inlined.0
     end
     unreachable
    end
    i32.const 0
    i32.ne
    i32.eqz
    if
     unreachable
    end
    local.get $i|1015
    i32.const 1
    i32.add
    local.set $i|1015
    br $for-loop|108
   end
  end
  i32.const 2
  i32.const 2
  i32.const 29
  i32.const 0
  call $~lib/rt/__newArray
  local.set $1117
  local.get $1117
  i32.load $0 offset=4
  local.set $1118
  local.get $1117
  i32.const 0
  i32.const 0
  i32.const 2
  i32.const 3
  i32.const 8768
  call $~lib/rt/__newArray
  call $~lib/array/Array<~lib/array/Array<i32>>#__uset
  local.get $1117
  i32.const 1
  i32.const 0
  i32.const 2
  i32.const 3
  i32.const 8800
  call $~lib/rt/__newArray
  call $~lib/array/Array<~lib/array/Array<i32>>#__uset
  local.get $1117
  local.set $testArray
  local.get $testArray
  call $~lib/array/Array<~lib/array/Array<i32>>#flat
  call $~lib/array/Array<i32>#get:length
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 2
  i32.const 2
  i32.const 29
  i32.const 0
  call $~lib/rt/__newArray
  local.set $1124
  local.get $1124
  i32.load $0 offset=4
  local.set $1125
  local.get $1124
  i32.const 0
  i32.const 1
  i32.const 2
  i32.const 3
  i32.const 8832
  call $~lib/rt/__newArray
  call $~lib/array/Array<~lib/array/Array<i32>>#__uset
  local.get $1124
  i32.const 1
  i32.const 1
  i32.const 2
  i32.const 3
  i32.const 8864
  call $~lib/rt/__newArray
  call $~lib/array/Array<~lib/array/Array<i32>>#__uset
  local.get $1124
  local.set $mapTarget
  local.get $mapTarget
  i32.const 8896
  call $~lib/array/Array<~lib/array/Array<i32>>#map<~lib/array/Array<i32>>
  call $~lib/array/Array<~lib/array/Array<i32>>#flat
  local.set $mapResult
  local.get $mapResult
  call $~lib/array/Array<i32>#get:length
  i32.const 4
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $mapResult
  i32.const 0
  call $~lib/array/Array<i32>#__get
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $mapResult
  i32.const 1
  call $~lib/array/Array<i32>#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $mapResult
  i32.const 2
  call $~lib/array/Array<i32>#__get
  i32.const 2
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $mapResult
  i32.const 3
  call $~lib/array/Array<i32>#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  global.set $std/array/arr
  i32.const 0
  global.set $std/array/inputStabArr
  i32.const 0
  global.set $std/array/outputStabArr
  global.get $~lib/memory/__heap_base
  global.set $~lib/memory/__stack_pointer
  call $~lib/rt/stub/__collect
 )
 (func $~start (type $none_=>_none)
  global.get $~started
  if
   return
  end
  i32.const 1
  global.set $~started
  call $start:std/array
 )
)
