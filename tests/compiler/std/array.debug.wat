(module
 (type $i32_i32_=>_i32 (func_subtype (param i32 i32) (result i32) func))
 (type $i32_i32_=>_none (func_subtype (param i32 i32) func))
 (type $i32_i32_i32_=>_i32 (func_subtype (param i32 i32 i32) (result i32) func))
 (type $i32_=>_i32 (func_subtype (param i32) (result i32) func))
 (type $i32_i32_i32_i32_=>_i32 (func_subtype (param i32 i32 i32 i32) (result i32) func))
 (type $i32_i32_i32_=>_none (func_subtype (param i32 i32 i32) func))
 (type $f32_f32_=>_i32 (func_subtype (param f32 f32) (result i32) func))
 (type $f64_f64_=>_i32 (func_subtype (param f64 f64) (result i32) func))
 (type $i32_i32_i32_i32_i32_=>_none (func_subtype (param i32 i32 i32 i32 i32) func))
 (type $i32_=>_none (func_subtype (param i32) func))
 (type $i32_i32_i32_i32_i32_i32_=>_none (func_subtype (param i32 i32 i32 i32 i32 i32) func))
 (type $none_=>_none (func_subtype func))
 (type $none_=>_f64 (func_subtype (result f64) func))
 (type $i32_i32_i32_i32_=>_none (func_subtype (param i32 i32 i32 i32) func))
 (type $i32_f32_i32_=>_i32 (func_subtype (param i32 f32 i32) (result i32) func))
 (type $i32_f64_i32_=>_i32 (func_subtype (param i32 f64 i32) (result i32) func))
 (type $i32_i32_i32_=>_f32 (func_subtype (param i32 i32 i32) (result f32) func))
 (type $none_=>_i32 (func_subtype (result i32) func))
 (type $i32_i32_f32_i32_i32_=>_none (func_subtype (param i32 i32 f32 i32 i32) func))
 (type $i32_f32_i32_i32_=>_i32 (func_subtype (param i32 f32 i32 i32) (result i32) func))
 (type $i32_i32_=>_f32 (func_subtype (param i32 i32) (result f32) func))
 (type $i64_=>_i64 (func_subtype (param i64) (result i64) func))
 (type $i64_=>_none (func_subtype (param i64) func))
 (type $i32_i32_i32_i32_i32_=>_i32 (func_subtype (param i32 i32 i32 i32 i32) (result i32) func))
 (type $i32_i32_=>_f64 (func_subtype (param i32 i32) (result f64) func))
 (import "env" "abort" (func $~lib/builtins/abort (param i32 i32 i32 i32)))
 (import "env" "Math.random" (func $~lib/bindings/dom/Math.random (result f64)))
 (import "env" "seed" (func $~lib/builtins/seed (result f64)))
 (import "env" "_g" (func $~lib/builtins/_g (param i32 i32) (result i32)))
 (global $~lib/shared/runtime/Runtime.Stub i32 (i32.const 0))
 (global $~lib/shared/runtime/Runtime.Minimal i32 (i32.const 1))
 (global $~lib/shared/runtime/Runtime.Incremental i32 (i32.const 2))
 (global $~lib/rt/itcms/total (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/threshold (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/state (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/visitCount (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/pinSpace (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/iter (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/toSpace (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/white (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/fromSpace (mut i32) (i32.const 0))
 (global $~lib/rt/tlsf/ROOT (mut i32) (i32.const 0))
 (global $~lib/native/ASC_LOW_MEMORY_LIMIT i32 (i32.const 0))
 (global $~lib/native/ASC_RUNTIME i32 (i32.const 2))
 (global $std/array/arr (mut i32) (i32.const 0))
 (global $~lib/builtins/i32.MAX_VALUE i32 (i32.const 2147483647))
 (global $~lib/native/ASC_SHRINK_LEVEL i32 (i32.const 0))
 (global $std/array/i (mut i32) (i32.const 0))
 (global $~argumentsLength (mut i32) (i32.const 0))
 (global $~lib/math/random_state0_64 (mut i64) (i64.const 0))
 (global $~lib/math/random_state1_64 (mut i64) (i64.const 0))
 (global $~lib/math/random_state0_32 (mut i32) (i32.const 0))
 (global $~lib/math/random_state1_32 (mut i32) (i32.const 0))
 (global $~lib/math/random_seeded (mut i32) (i32.const 0))
 (global $std/array/charset i32 (i32.const 6800))
 (global $std/array/inputStabArr (mut i32) (i32.const 0))
 (global $std/array/outputStabArr (mut i32) (i32.const 0))
 (global $~lib/builtins/u32.MAX_VALUE i32 (i32.const -1))
 (global $~lib/rt/__rtti_base i32 (i32.const 9040))
 (global $~lib/memory/__data_end i32 (i32.const 9340))
 (global $~lib/memory/__stack_pointer (mut i32) (i32.const 42108))
 (global $~lib/memory/__heap_base i32 (i32.const 42108))
 (global $~started (mut i32) (i32.const 0))
 (memory $0 1)
 (data (i32.const 12) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\0e\00\00\00Invalid length\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 60) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\14\00\00\00Allocation too large\00\00\00\00\00\00\00\00")
 (data (i32.const 112) "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 144) "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 172) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\12\00\00\00Index out of range\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 224) "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 252) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\03\00\00\00abc\00\00\00\00\00\00\00\00\00")
 (data (i32.const 284) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\05\00\00\00\01\02\03\04\05\00\00\00\00\00\00\00")
 (data (i32.const 316) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 348) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\05\00\00\00\01\01\01\04\05\00\00\00\00\00\00\00")
 (data (i32.const 380) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 412) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\05\00\00\00\01\01\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 444) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\05\00\00\00\01\01\00\02\02\00\00\00\00\00\00\00")
 (data (i32.const 476) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\05\00\00\00\01\01\00\02\02\00\00\00\00\00\00\00")
 (data (i32.const 508) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\05\00\00\00\ff\ff\ff\ff\ff\00\00\00\00\00\00\00")
 (data (i32.const 540) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 588) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 636) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 684) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 732) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\01\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 780) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\01\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 828) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\00\00\00\00\00\00\00\00")
 (data (i32.const 876) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\00\00\00?\00\00\80?\00\00\c0?\00\00 @\00\00@@\00\00\00\00\00\00\00\00")
 (data (i32.const 924) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\00\00\00?\00\00\80?\00\00\80?\00\00 @\00\00@@\00\00\00\00\00\00\00\00")
 (data (i32.const 972) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1020) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\00\00\80?\00\00\80?\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1068) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\00\00\80?\00\00\80?\00\00\00\00\00\00\00@\00\00\00@\00\00\00\00\00\00\00\00")
 (data (i32.const 1116) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\00\00\80?\00\00\80?\00\00\00\00\00\00\00@\00\00\00@\00\00\00\00\00\00\00\00")
 (data (i32.const 1164) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\00\00\80\bf\00\00\80\bf\00\00\80\bf\00\00\80\bf\00\00\80\bf\00\00\00\00\00\00\00\00")
 (data (i32.const 1212) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\00\00\00\80\00\00\00\80\00\00\00\80\00\00\00\80\00\00\00\80\00\00\00\00\00\00\00\00")
 (data (i32.const 1260) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\0e\00\00\00Array is empty\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1308) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\10\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1356) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1388) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1420) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1468) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\04\00\00\00\05\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1516) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1564) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\04\00\00\00\05\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1612) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1660) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1708) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1756) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1804) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1852) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\04\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1900) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1948) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\04\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1996) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2044) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\03\00\00\00\04\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2092) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2140) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\04\00\00\00\05\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2188) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2236) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\04\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2284) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2332) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\03\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2380) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2428) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\03\00\00\00\04\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2476) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2524) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2572) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\03\00\00\00\05\00\00\00\07\00\00\00\t\00\00\00\0b\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2620) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\07\00\00\00\t\00\00\00\0b\00\00\00")
 (data (i32.const 2652) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\07\00\00\00\t\00\00\00\00\00\00\00")
 (data (i32.const 2684) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\10\00\00\00\05\00\00\00\07\00\00\00\t\00\00\00\0b\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2732) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\t\00\00\00\0b\00\00\00\00\00\00\00")
 (data (i32.const 2764) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\07\00\00\00\t\00\00\00\00\00\00\00")
 (data (i32.const 2796) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\07\00\00\00\t\00\00\00\00\00\00\00")
 (data (i32.const 2828) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00\00\01\02\03\00\00\00\00\00\00\00\00")
 (data (i32.const 2860) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\00\01\02\03\04\05\06\07\00\00\00\00")
 (data (i32.const 2892) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\11\00\00\00\00\01\02\03\04\05\06\07\08\t\n\0b\0c\r\0e\0f\10\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2940) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0e\00\00\00\00\00\01\00\02\00\03\00\04\00\05\00\06\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2988) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\10\00\00\00\00\00\01\00\02\00\03\00\04\00\05\00\06\00\07\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3036) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\12\00\00\00\00\00\01\00\02\00\03\00\04\00\05\00\06\00\07\00\08\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3084) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00\00\00\c0\7f\00\00\00\00\00\00\00\00")
 (data (i32.const 3116) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00\00\00\f8\7f\00\00\00\00")
 (data (i32.const 3148) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\10\00\00\00\02\00\00\00\05\00\00\00\t\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3196) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00\00\00\c0\7f\00\00\00\00\00\00\00\00")
 (data (i32.const 3228) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00\00\00\f8\7f\00\00\00\00")
 (data (i32.const 3260) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3308) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3356) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3388) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3436) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3468) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3516) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3564) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00")
 (data (i32.const 3596) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\01\00\00\00\02\00\00\00\00\00\00\00")
 (data (i32.const 3628) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3676) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\03\00\00\00\04\00\00\00\00\00\00\00")
 (data (i32.const 3708) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\01\00\00\00\02\00\00\00\05\00\00\00")
 (data (i32.const 3740) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3788) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3820) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\10\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3868) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3916) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3948) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\10\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3996) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4044) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00")
 (data (i32.const 4076) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00")
 (data (i32.const 4108) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4156) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4188) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\10\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4236) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4284) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4316) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\10\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4364) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4412) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4444) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4492) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4540) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4572) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4620) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4668) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4700) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4748) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4796) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4828) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4876) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4924) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4956) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5004) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5036) "L\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00/\00\00\00Element type must be nullable if array is holey\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5116) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\0f\00\00\00unexpected null\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5164) "\1c\00\00\00\00\00\00\00\00\00\00\00\0e\00\00\00\08\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5196) "\1c\00\00\00\00\00\00\00\00\00\00\00\0e\00\00\00\08\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5228) "\1c\00\00\00\00\00\00\00\00\00\00\00\0e\00\00\00\08\00\00\00\03\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5260) "\1c\00\00\00\00\00\00\00\00\00\00\00\0e\00\00\00\08\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5292) "\1c\00\00\00\00\00\00\00\00\00\00\00\0e\00\00\00\08\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5324) "\1c\00\00\00\00\00\00\00\00\00\00\00\0e\00\00\00\08\00\00\00\06\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5356) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5404) "\1c\00\00\00\00\00\00\00\00\00\00\00\0e\00\00\00\08\00\00\00\07\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5436) "\1c\00\00\00\00\00\00\00\00\00\00\00\0e\00\00\00\08\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5468) "\1c\00\00\00\00\00\00\00\00\00\00\00\0e\00\00\00\08\00\00\00\t\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5500) "\1c\00\00\00\00\00\00\00\00\00\00\00\0e\00\00\00\08\00\00\00\n\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5532) "\1c\00\00\00\00\00\00\00\00\00\00\00\0e\00\00\00\08\00\00\00\0b\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5564) "\1c\00\00\00\00\00\00\00\00\00\00\00\0e\00\00\00\08\00\00\00\0c\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5596) "\1c\00\00\00\00\00\00\00\00\00\00\00\0e\00\00\00\08\00\00\00\r\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5628) "\1c\00\00\00\00\00\00\00\00\00\00\00\0e\00\00\00\08\00\00\00\0e\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5660) "\1c\00\00\00\00\00\00\00\00\00\00\00\0e\00\00\00\08\00\00\00\0f\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5692) "\1c\00\00\00\00\00\00\00\00\00\00\00\0e\00\00\00\08\00\00\00\10\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5724) "\1c\00\00\00\00\00\00\00\00\00\00\00\0e\00\00\00\08\00\00\00\11\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5756) "\1c\00\00\00\00\00\00\00\00\00\00\00\0e\00\00\00\08\00\00\00\12\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5788) "\1c\00\00\00\00\00\00\00\00\00\00\00\0e\00\00\00\08\00\00\00\13\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5820) "\1c\00\00\00\00\00\00\00\00\00\00\00\0e\00\00\00\08\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5852) "\1c\00\00\00\00\00\00\00\00\00\00\00\0f\00\00\00\08\00\00\00\15\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5884) "\1c\00\00\00\00\00\00\00\00\00\00\00\0f\00\00\00\08\00\00\00\16\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5916) "\1c\00\00\00\00\00\00\00\00\00\00\00\0f\00\00\00\08\00\00\00\17\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5948) "\1c\00\00\00\00\00\00\00\00\00\00\00\0f\00\00\00\08\00\00\00\18\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5980) "\1c\00\00\00\00\00\00\00\00\00\00\00\0f\00\00\00\08\00\00\00\19\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6012) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\01\00\00\000\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6044) "\1c\00\00\00\00\00\00\00\00\00\00\00\11\00\00\00\08\00\00\00\1a\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6076) "\1c\00\00\00\00\00\00\00\00\00\00\00\12\00\00\00\08\00\00\00\1b\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6108) "\1c\00\00\00\00\00\00\00\00\00\00\00\13\00\00\00\08\00\00\00\1c\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6140) "\1c\00\00\00\00\00\00\00\00\00\00\00\13\00\00\00\08\00\00\00\1d\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6172) "\1c\00\00\00\00\00\00\00\00\00\00\00\13\00\00\00\08\00\00\00\1e\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6204) "\1c\00\00\00\00\00\00\00\00\00\00\00\0e\00\00\00\08\00\00\00\1f\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6236) "\1c\00\00\00\00\00\00\00\00\00\00\00\0e\00\00\00\08\00\00\00 \00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6268) "\1c\00\00\00\00\00\00\00\00\00\00\00\0e\00\00\00\08\00\00\00!\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6300) "\1c\00\00\00\00\00\00\00\00\00\00\00\0e\00\00\00\08\00\00\00\"\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6332) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00#\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6364) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00$\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6396) "\1c\00\00\00\00\00\00\00\00\00\00\00\15\00\00\00\08\00\00\00%\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6428) "\1c\00\00\00\00\00\00\00\00\00\00\00\15\00\00\00\08\00\00\00&\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6460) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00\'\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6492) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00(\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6524) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00)\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6556) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00*\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6588) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00+\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6620) "\1c\00\00\00\00\00\00\00\00\00\00\00\15\00\00\00\08\00\00\00,\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6652) "\1c\00\00\00\00\00\00\00\00\00\00\00\15\00\00\00\08\00\00\00-\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6684) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00.\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6716) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00/\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6748) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\000\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6780) "l\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00V\00\00\00ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789_-,.+/\\[]{}()<>*&$%^@#!?\00\00\00\00\00\00")
 (data (i32.const 6892) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\00\00\00@\00\00\80\bf\00\00\00\00")
 (data (i32.const 6924) "\1c\00\00\00\00\00\00\00\00\00\00\00\18\00\00\00\08\00\00\001\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6956) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\00\00\80\bf\00\00\00\00\00\00\00@")
 (data (i32.const 6988) "<\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00 \00\00\00\00\00\80?\00\00\c0\7f\00\00\80\ff\00\00\80?\00\00\00\00\00\00\80\bf\00\00\00\c0\00\00\80\7f\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7052) "<\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00 \00\00\00\00\00\80\ff\00\00\00\c0\00\00\80\bf\00\00\00\00\00\00\80?\00\00\80?\00\00\80\7f\00\00\c0\7f\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7116) "L\00\00\00\00\00\00\00\00\00\00\00\00\00\00\008\00\00\00\00\00\00\00\00\00\f0?\00\00\00\00\00\00\f8\7f\00\00\00\00\00\00\f0\ff\05\00\00\00\00\00\f0?\00\00\00\00\00\00\00\00\00\00\00\00\00\00\f0\bf\00\00\00\00\00\00\00\c0\00\00\00\00")
 (data (i32.const 7196) "\1c\00\00\00\00\00\00\00\00\00\00\00\19\00\00\00\08\00\00\002\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7228) "L\00\00\00\00\00\00\00\00\00\00\00\00\00\00\008\00\00\00\00\00\00\00\00\00\f0\ff\00\00\00\00\00\00\00\c0\00\00\00\00\00\00\f0\bf\00\00\00\00\00\00\00\00\00\00\00\00\00\00\f0?\05\00\00\00\00\00\f0?\00\00\00\00\00\00\f8\7f\00\00\00\00")
 (data (i32.const 7308) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\fe\ff\ff\ff\ff\ff\ff\ff\00\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7356) "\1c\00\00\00\00\00\00\00\00\00\00\00\1a\00\00\00\08\00\00\003\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7388) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\fe\ff\ff\ff\ff\ff\ff\ff\00\00\00\00\01\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7436) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\ff\ff\ff\ff\fe\ff\ff\ff\00\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7484) "\1c\00\00\00\00\00\00\00\00\00\00\00\1b\00\00\00\08\00\00\004\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7516) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\fe\ff\ff\ff\ff\ff\ff\ff\00\00\00\00\00\00\00\00")
 (data (i32.const 7564) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7596) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7628) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\02\00\00\00\01\00\00\00\00\00\00\00")
 (data (i32.const 7660) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\10\00\00\00\03\00\00\00\02\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7708) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7756) "\1c\00\00\00\00\00\00\00\00\00\00\00\1a\00\00\00\08\00\00\005\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7788) "\1c\00\00\00\00\00\00\00\00\00\00\00\1a\00\00\00\08\00\00\006\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7820) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7852) "\1c\00\00\00\00\00\00\00\00\00\00\00\1a\00\00\00\08\00\00\007\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7884) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\01\00\00\00\02\00\00\00\00\00\00\00")
 (data (i32.const 7916) "\1c\00\00\00\00\00\00\00\00\00\00\00\1a\00\00\00\08\00\00\008\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7948) "\1c\00\00\00\00\00\00\00\00\00\00\00\1a\00\00\00\08\00\00\009\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7980) "\1c\00\00\00\00\00\00\00\00\00\00\00\1a\00\00\00\08\00\00\00:\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8012) "\1c\00\00\00\00\00\00\00\00\00\00\00\1a\00\00\00\08\00\00\00;\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8044) "\1c\00\00\00\00\00\00\00\00\00\00\00\1a\00\00\00\08\00\00\00<\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8076) "\1c\00\00\00\00\00\00\00\00\00\00\00\1a\00\00\00\08\00\00\00=\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8108) "\1c\00\00\00\00\00\00\00\00\00\00\00\1c\00\00\00\08\00\00\00>\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8140) "\1c\00\00\00\00\00\00\00\00\00\00\00\1a\00\00\00\08\00\00\00?\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8172) "\1c\00\00\00\00\00\00\00\00\00\00\00\1a\00\00\00\08\00\00\00@\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8204) "\1c\00\00\00\00\00\00\00\00\00\00\00\1a\00\00\00\08\00\00\00A\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8236) "\1c\00\00\00\00\00\00\00\00\00\00\00\1a\00\00\00\08\00\00\00B\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8268) "\1c\00\00\00\00\00\00\00\00\00\00\00\1e\00\00\00\08\00\00\00C\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8300) "\1c\00\00\00\00\00\00\00\00\00\00\00!\00\00\00\08\00\00\00D\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8332) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8364) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00")
 (data (i32.const 8396) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\04\00\00\00\05\00\00\00\06\00\00\00")
 (data (i32.const 8428) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\07\00\00\00\08\00\00\00\t\00\00\00")
 (data (i32.const 8460) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\03\00\00\00one\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8492) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00 !\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8524) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\03\00\00\00two\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8556) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\05\00\00\00three\00\00\00\00\00\00\00")
 (data (i32.const 8588) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00`!\00\00\00\00\00\00\80!\00\00")
 (data (i32.const 8620) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00four\00\00\00\00\00\00\00\00")
 (data (i32.const 8652) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00five\00\00\00\00\00\00\00\00")
 (data (i32.const 8684) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\03\00\00\00six\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8716) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\c0!\00\00\e0!\00\00\00\"\00\00")
 (data (i32.const 8748) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\05\00\00\00seven\00\00\00\00\00\00\00")
 (data (i32.const 8780) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00@\"\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8812) "<\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00 \00\00\00 !\00\00`!\00\00\00\00\00\00\80!\00\00\c0!\00\00\e0!\00\00\00\"\00\00@\"\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8876) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8908) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8940) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8972) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 9004) "\1c\00\00\00\00\00\00\00\00\00\00\00$\00\00\00\08\00\00\00E\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 9040) "%\00\00\00 \00\00\00\00\00\00\00 \00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\02\t\00\00\00\00\00\00 \00\00\00\00\00\00\00A\00\00\00\02\00\00\00B\00\00\00\00\00\00\00\02\01\00\00\00\00\00\00\02\19\00\00\00\00\00\00\02A\00\00\00\00\00\00 \00\00\00\00\00\00\00\82\00\00\00\00\00\00\00\02\1a\00\00\00\00\00\00\02a\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\02A\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00 \00\00\00\00\00\00\00\02A\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\02A\00\00\00\00\00\00\00\00\00\00\00\00\00\00 \00\00\00\00\00\00\00\02A\00\00\00\00\00\00\00\00\00\00\00\00\00\00\02a\00\00\00\00\00\00\02A\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (table $0 70 70 funcref)
 (elem $0 (i32.const 1) $start:std/array~anonymous|0 $start:std/array~anonymous|1 $start:std/array~anonymous|2 $start:std/array~anonymous|3 $start:std/array~anonymous|4 $start:std/array~anonymous|5 $start:std/array~anonymous|6 $start:std/array~anonymous|7 $start:std/array~anonymous|8 $start:std/array~anonymous|9 $start:std/array~anonymous|10 $start:std/array~anonymous|11 $start:std/array~anonymous|12 $start:std/array~anonymous|13 $start:std/array~anonymous|14 $start:std/array~anonymous|15 $start:std/array~anonymous|16 $start:std/array~anonymous|17 $start:std/array~anonymous|18 $start:std/array~anonymous|19 $start:std/array~anonymous|20 $start:std/array~anonymous|21 $start:std/array~anonymous|22 $start:std/array~anonymous|23 $start:std/array~anonymous|24 $start:std/array~anonymous|25 $start:std/array~anonymous|26 $start:std/array~anonymous|27 $start:std/array~anonymous|28 $start:std/array~anonymous|29 $start:std/array~anonymous|30 $start:std/array~anonymous|31 $start:std/array~anonymous|32 $start:std/array~anonymous|33 $start:std/array~anonymous|34 $start:std/array~anonymous|35 $start:std/array~anonymous|36 $start:std/array~anonymous|37 $start:std/array~anonymous|38 $start:std/array~anonymous|39 $start:std/array~anonymous|40 $start:std/array~anonymous|41 $start:std/array~anonymous|42 $start:std/array~anonymous|43 $start:std/array~anonymous|44 $start:std/array~anonymous|45 $start:std/array~anonymous|46 $start:std/array~anonymous|47 $~lib/util/sort/COMPARATOR<f32>~anonymous|0 $~lib/util/sort/COMPARATOR<f64>~anonymous|0 $~lib/util/sort/COMPARATOR<i32>~anonymous|0 $~lib/util/sort/COMPARATOR<u32>~anonymous|0 $~lib/util/sort/COMPARATOR<i32>~anonymous|1 $~lib/util/sort/COMPARATOR<i32>~anonymous|2 $~lib/util/sort/COMPARATOR<i32>~anonymous|3 $~lib/util/sort/COMPARATOR<i32>~anonymous|4 $~lib/util/sort/COMPARATOR<i32>~anonymous|5 $~lib/util/sort/COMPARATOR<i32>~anonymous|6 $~lib/util/sort/COMPARATOR<i32>~anonymous|7 $~lib/util/sort/COMPARATOR<i32>~anonymous|8 $~lib/util/sort/COMPARATOR<i32>~anonymous|9 $std/array/assertStableSortedForComplexObjects~anonymous|0 $start:std/array~anonymous|48 $start:std/array~anonymous|49 $start:std/array~anonymous|50 $start:std/array~anonymous|51 $start:std/array~anonymous|52 $start:std/array~anonymous|53 $start:std/array~anonymous|54)
 (export "memory" (memory $0))
 (export "_start" (func $~start))
 (func $~lib/rt/itcms/Object#set:nextWithColor (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=4
 )
 (func $~lib/rt/itcms/Object#set:prev (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=8
 )
 (func $~lib/rt/itcms/initLazy (type $i32_=>_i32) (param $space i32) (result i32)
  local.get $space
  local.get $space
  call $~lib/rt/itcms/Object#set:nextWithColor
  local.get $space
  local.get $space
  call $~lib/rt/itcms/Object#set:prev
  local.get $space
 )
 (func $~lib/rt/itcms/Object#get:next (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
 )
 (func $~lib/rt/itcms/Object#get:color (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  i32.const 3
  i32.and
 )
 (func $~lib/rt/itcms/visitRoots (type $i32_=>_none) (param $cookie i32)
  (local $pn i32)
  (local $iter i32)
  (local $3 i32)
  local.get $cookie
  call $~lib/rt/__visit_globals
  global.get $~lib/rt/itcms/pinSpace
  local.set $pn
  local.get $pn
  call $~lib/rt/itcms/Object#get:next
  local.set $iter
  loop $while-continue|0
   local.get $iter
   local.get $pn
   i32.ne
   local.set $3
   local.get $3
   if
    i32.const 1
    drop
    local.get $iter
    call $~lib/rt/itcms/Object#get:color
    i32.const 3
    i32.eq
    i32.eqz
    if
     unreachable
    end
    local.get $iter
    i32.const 20
    i32.add
    local.get $cookie
    call $~lib/rt/__visit_members
    local.get $iter
    call $~lib/rt/itcms/Object#get:next
    local.set $iter
    br $while-continue|0
   end
  end
 )
 (func $~lib/rt/itcms/Object#set:color (type $i32_i32_=>_none) (param $this i32) (param $color i32)
  local.get $this
  local.get $this
  i32.load $0 offset=4
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  local.get $color
  i32.or
  call $~lib/rt/itcms/Object#set:nextWithColor
 )
 (func $~lib/rt/itcms/Object#set:next (type $i32_i32_=>_none) (param $this i32) (param $obj i32)
  local.get $this
  local.get $obj
  local.get $this
  i32.load $0 offset=4
  i32.const 3
  i32.and
  i32.or
  call $~lib/rt/itcms/Object#set:nextWithColor
 )
 (func $~lib/rt/itcms/Object#unlink (type $i32_=>_none) (param $this i32)
  (local $next i32)
  (local $prev i32)
  local.get $this
  call $~lib/rt/itcms/Object#get:next
  local.set $next
  local.get $next
  i32.const 0
  i32.eq
  if
   i32.const 1
   drop
   local.get $this
   i32.load $0 offset=8
   i32.const 0
   i32.eq
   if (result i32)
    local.get $this
    global.get $~lib/memory/__heap_base
    i32.lt_u
   else
    i32.const 0
   end
   i32.eqz
   if
    unreachable
   end
   return
  end
  local.get $this
  i32.load $0 offset=8
  local.set $prev
  i32.const 1
  drop
  local.get $prev
  i32.eqz
  if
   unreachable
  end
  local.get $next
  local.get $prev
  call $~lib/rt/itcms/Object#set:prev
  local.get $prev
  local.get $next
  call $~lib/rt/itcms/Object#set:next
 )
 (func $~lib/rt/__typeinfo (type $i32_=>_i32) (param $id i32) (result i32)
  (local $ptr i32)
  global.get $~lib/rt/__rtti_base
  local.set $ptr
  local.get $id
  local.get $ptr
  i32.load $0
  i32.gt_u
  if
   unreachable
  end
  local.get $ptr
  i32.const 4
  i32.add
  local.get $id
  i32.const 8
  i32.mul
  i32.add
  i32.load $0
 )
 (func $~lib/rt/itcms/Object#get:isPointerfree (type $i32_=>_i32) (param $this i32) (result i32)
  (local $rtId i32)
  local.get $this
  i32.load $0 offset=12
  local.set $rtId
  local.get $rtId
  i32.const 1
  i32.le_u
  if (result i32)
   i32.const 1
  else
   local.get $rtId
   call $~lib/rt/__typeinfo
   i32.const 32
   i32.and
   i32.const 0
   i32.ne
  end
 )
 (func $~lib/rt/itcms/Object#linkTo (type $i32_i32_i32_=>_none) (param $this i32) (param $list i32) (param $withColor i32)
  (local $prev i32)
  local.get $list
  i32.load $0 offset=8
  local.set $prev
  local.get $this
  local.get $list
  local.get $withColor
  i32.or
  call $~lib/rt/itcms/Object#set:nextWithColor
  local.get $this
  local.get $prev
  call $~lib/rt/itcms/Object#set:prev
  local.get $prev
  local.get $this
  call $~lib/rt/itcms/Object#set:next
  local.get $list
  local.get $this
  call $~lib/rt/itcms/Object#set:prev
 )
 (func $~lib/rt/itcms/Object#makeGray (type $i32_=>_none) (param $this i32)
  (local $1 i32)
  local.get $this
  global.get $~lib/rt/itcms/iter
  i32.eq
  if
   local.get $this
   i32.load $0 offset=8
   local.tee $1
   i32.eqz
   if (result i32)
    unreachable
   else
    local.get $1
   end
   global.set $~lib/rt/itcms/iter
  end
  local.get $this
  call $~lib/rt/itcms/Object#unlink
  local.get $this
  global.get $~lib/rt/itcms/toSpace
  local.get $this
  call $~lib/rt/itcms/Object#get:isPointerfree
  if (result i32)
   global.get $~lib/rt/itcms/white
   i32.eqz
  else
   i32.const 2
  end
  call $~lib/rt/itcms/Object#linkTo
 )
 (func $~lib/rt/itcms/__visit (type $i32_i32_=>_none) (param $ptr i32) (param $cookie i32)
  (local $obj i32)
  local.get $ptr
  i32.eqz
  if
   return
  end
  local.get $ptr
  i32.const 20
  i32.sub
  local.set $obj
  i32.const 0
  drop
  local.get $obj
  call $~lib/rt/itcms/Object#get:color
  global.get $~lib/rt/itcms/white
  i32.eq
  if
   local.get $obj
   call $~lib/rt/itcms/Object#makeGray
   global.get $~lib/rt/itcms/visitCount
   i32.const 1
   i32.add
   global.set $~lib/rt/itcms/visitCount
  end
 )
 (func $~lib/rt/itcms/visitStack (type $i32_=>_none) (param $cookie i32)
  (local $ptr i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  local.set $ptr
  loop $while-continue|0
   local.get $ptr
   global.get $~lib/memory/__heap_base
   i32.lt_u
   local.set $2
   local.get $2
   if
    local.get $ptr
    i32.load $0
    local.get $cookie
    call $~lib/rt/itcms/__visit
    local.get $ptr
    i32.const 4
    i32.add
    local.set $ptr
    br $while-continue|0
   end
  end
 )
 (func $~lib/rt/itcms/Object#get:size (type $i32_=>_i32) (param $this i32) (result i32)
  i32.const 4
  local.get $this
  i32.load $0
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  i32.add
 )
 (func $~lib/rt/tlsf/Root#set:flMap (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0
 )
 (func $~lib/rt/common/BLOCK#set:mmInfo (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0
 )
 (func $~lib/rt/tlsf/Block#set:prev (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=4
 )
 (func $~lib/rt/tlsf/Block#set:next (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=8
 )
 (func $~lib/rt/tlsf/removeBlock (type $i32_i32_=>_none) (param $root i32) (param $block i32)
  (local $blockInfo i32)
  (local $size i32)
  (local $fl i32)
  (local $sl i32)
  (local $6 i32)
  (local $7 i32)
  (local $boundedSize i32)
  (local $prev i32)
  (local $next i32)
  (local $root|11 i32)
  (local $fl|12 i32)
  (local $sl|13 i32)
  (local $root|14 i32)
  (local $fl|15 i32)
  (local $sl|16 i32)
  (local $head i32)
  (local $root|18 i32)
  (local $fl|19 i32)
  (local $slMap i32)
  (local $root|21 i32)
  (local $fl|22 i32)
  (local $slMap|23 i32)
  local.get $block
  i32.load $0
  local.set $blockInfo
  i32.const 1
  drop
  local.get $blockInfo
  i32.const 1
  i32.and
  i32.eqz
  if
   unreachable
  end
  local.get $blockInfo
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  local.set $size
  i32.const 1
  drop
  local.get $size
  i32.const 12
  i32.ge_u
  i32.eqz
  if
   unreachable
  end
  local.get $size
  i32.const 256
  i32.lt_u
  if
   i32.const 0
   local.set $fl
   local.get $size
   i32.const 4
   i32.shr_u
   local.set $sl
  else
   local.get $size
   local.tee $6
   i32.const 1073741820
   local.tee $7
   local.get $6
   local.get $7
   i32.lt_u
   select
   local.set $boundedSize
   i32.const 31
   local.get $boundedSize
   i32.clz
   i32.sub
   local.set $fl
   local.get $boundedSize
   local.get $fl
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 1
   i32.const 4
   i32.shl
   i32.xor
   local.set $sl
   local.get $fl
   i32.const 8
   i32.const 1
   i32.sub
   i32.sub
   local.set $fl
  end
  i32.const 1
  drop
  local.get $fl
  i32.const 23
  i32.lt_u
  if (result i32)
   local.get $sl
   i32.const 16
   i32.lt_u
  else
   i32.const 0
  end
  i32.eqz
  if
   unreachable
  end
  local.get $block
  i32.load $0 offset=4
  local.set $prev
  local.get $block
  i32.load $0 offset=8
  local.set $next
  local.get $prev
  if
   local.get $prev
   local.get $next
   call $~lib/rt/tlsf/Block#set:next
  end
  local.get $next
  if
   local.get $next
   local.get $prev
   call $~lib/rt/tlsf/Block#set:prev
  end
  local.get $block
  local.get $root
  local.set $root|11
  local.get $fl
  local.set $fl|12
  local.get $sl
  local.set $sl|13
  local.get $root|11
  local.get $fl|12
  i32.const 4
  i32.shl
  local.get $sl|13
  i32.add
  i32.const 2
  i32.shl
  i32.add
  i32.load $0 offset=96
  i32.eq
  if
   local.get $root
   local.set $root|14
   local.get $fl
   local.set $fl|15
   local.get $sl
   local.set $sl|16
   local.get $next
   local.set $head
   local.get $root|14
   local.get $fl|15
   i32.const 4
   i32.shl
   local.get $sl|16
   i32.add
   i32.const 2
   i32.shl
   i32.add
   local.get $head
   i32.store $0 offset=96
   local.get $next
   i32.eqz
   if
    local.get $root
    local.set $root|18
    local.get $fl
    local.set $fl|19
    local.get $root|18
    local.get $fl|19
    i32.const 2
    i32.shl
    i32.add
    i32.load $0 offset=4
    local.set $slMap
    local.get $root
    local.set $root|21
    local.get $fl
    local.set $fl|22
    local.get $slMap
    i32.const 1
    local.get $sl
    i32.shl
    i32.const -1
    i32.xor
    i32.and
    local.tee $slMap
    local.set $slMap|23
    local.get $root|21
    local.get $fl|22
    i32.const 2
    i32.shl
    i32.add
    local.get $slMap|23
    i32.store $0 offset=4
    local.get $slMap
    i32.eqz
    if
     local.get $root
     local.get $root
     i32.load $0
     i32.const 1
     local.get $fl
     i32.shl
     i32.const -1
     i32.xor
     i32.and
     call $~lib/rt/tlsf/Root#set:flMap
    end
   end
  end
 )
 (func $~lib/rt/tlsf/insertBlock (type $i32_i32_=>_none) (param $root i32) (param $block i32)
  (local $blockInfo i32)
  (local $block|3 i32)
  (local $right i32)
  (local $rightInfo i32)
  (local $block|6 i32)
  (local $block|7 i32)
  (local $left i32)
  (local $leftInfo i32)
  (local $size i32)
  (local $fl i32)
  (local $sl i32)
  (local $13 i32)
  (local $14 i32)
  (local $boundedSize i32)
  (local $root|16 i32)
  (local $fl|17 i32)
  (local $sl|18 i32)
  (local $head i32)
  (local $root|20 i32)
  (local $fl|21 i32)
  (local $sl|22 i32)
  (local $head|23 i32)
  (local $root|24 i32)
  (local $fl|25 i32)
  (local $root|26 i32)
  (local $fl|27 i32)
  (local $slMap i32)
  i32.const 1
  drop
  local.get $block
  i32.eqz
  if
   unreachable
  end
  local.get $block
  i32.load $0
  local.set $blockInfo
  i32.const 1
  drop
  local.get $blockInfo
  i32.const 1
  i32.and
  i32.eqz
  if
   unreachable
  end
  local.get $block
  local.set $block|3
  local.get $block|3
  i32.const 4
  i32.add
  local.get $block|3
  i32.load $0
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  i32.add
  local.set $right
  local.get $right
  i32.load $0
  local.set $rightInfo
  local.get $rightInfo
  i32.const 1
  i32.and
  if
   local.get $root
   local.get $right
   call $~lib/rt/tlsf/removeBlock
   local.get $block
   local.get $blockInfo
   i32.const 4
   i32.add
   local.get $rightInfo
   i32.const 3
   i32.const -1
   i32.xor
   i32.and
   i32.add
   local.tee $blockInfo
   call $~lib/rt/common/BLOCK#set:mmInfo
   local.get $block
   local.set $block|6
   local.get $block|6
   i32.const 4
   i32.add
   local.get $block|6
   i32.load $0
   i32.const 3
   i32.const -1
   i32.xor
   i32.and
   i32.add
   local.set $right
   local.get $right
   i32.load $0
   local.set $rightInfo
  end
  local.get $blockInfo
  i32.const 2
  i32.and
  if
   local.get $block
   local.set $block|7
   local.get $block|7
   i32.const 4
   i32.sub
   i32.load $0
   local.set $left
   local.get $left
   i32.load $0
   local.set $leftInfo
   i32.const 1
   drop
   local.get $leftInfo
   i32.const 1
   i32.and
   i32.eqz
   if
    unreachable
   end
   local.get $root
   local.get $left
   call $~lib/rt/tlsf/removeBlock
   local.get $left
   local.set $block
   local.get $block
   local.get $leftInfo
   i32.const 4
   i32.add
   local.get $blockInfo
   i32.const 3
   i32.const -1
   i32.xor
   i32.and
   i32.add
   local.tee $blockInfo
   call $~lib/rt/common/BLOCK#set:mmInfo
  end
  local.get $right
  local.get $rightInfo
  i32.const 2
  i32.or
  call $~lib/rt/common/BLOCK#set:mmInfo
  local.get $blockInfo
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  local.set $size
  i32.const 1
  drop
  local.get $size
  i32.const 12
  i32.ge_u
  i32.eqz
  if
   unreachable
  end
  i32.const 1
  drop
  local.get $block
  i32.const 4
  i32.add
  local.get $size
  i32.add
  local.get $right
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $right
  i32.const 4
  i32.sub
  local.get $block
  i32.store $0
  local.get $size
  i32.const 256
  i32.lt_u
  if
   i32.const 0
   local.set $fl
   local.get $size
   i32.const 4
   i32.shr_u
   local.set $sl
  else
   local.get $size
   local.tee $13
   i32.const 1073741820
   local.tee $14
   local.get $13
   local.get $14
   i32.lt_u
   select
   local.set $boundedSize
   i32.const 31
   local.get $boundedSize
   i32.clz
   i32.sub
   local.set $fl
   local.get $boundedSize
   local.get $fl
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 1
   i32.const 4
   i32.shl
   i32.xor
   local.set $sl
   local.get $fl
   i32.const 8
   i32.const 1
   i32.sub
   i32.sub
   local.set $fl
  end
  i32.const 1
  drop
  local.get $fl
  i32.const 23
  i32.lt_u
  if (result i32)
   local.get $sl
   i32.const 16
   i32.lt_u
  else
   i32.const 0
  end
  i32.eqz
  if
   unreachable
  end
  local.get $root
  local.set $root|16
  local.get $fl
  local.set $fl|17
  local.get $sl
  local.set $sl|18
  local.get $root|16
  local.get $fl|17
  i32.const 4
  i32.shl
  local.get $sl|18
  i32.add
  i32.const 2
  i32.shl
  i32.add
  i32.load $0 offset=96
  local.set $head
  local.get $block
  i32.const 0
  call $~lib/rt/tlsf/Block#set:prev
  local.get $block
  local.get $head
  call $~lib/rt/tlsf/Block#set:next
  local.get $head
  if
   local.get $head
   local.get $block
   call $~lib/rt/tlsf/Block#set:prev
  end
  local.get $root
  local.set $root|20
  local.get $fl
  local.set $fl|21
  local.get $sl
  local.set $sl|22
  local.get $block
  local.set $head|23
  local.get $root|20
  local.get $fl|21
  i32.const 4
  i32.shl
  local.get $sl|22
  i32.add
  i32.const 2
  i32.shl
  i32.add
  local.get $head|23
  i32.store $0 offset=96
  local.get $root
  local.get $root
  i32.load $0
  i32.const 1
  local.get $fl
  i32.shl
  i32.or
  call $~lib/rt/tlsf/Root#set:flMap
  local.get $root
  local.set $root|26
  local.get $fl
  local.set $fl|27
  local.get $root
  local.set $root|24
  local.get $fl
  local.set $fl|25
  local.get $root|24
  local.get $fl|25
  i32.const 2
  i32.shl
  i32.add
  i32.load $0 offset=4
  i32.const 1
  local.get $sl
  i32.shl
  i32.or
  local.set $slMap
  local.get $root|26
  local.get $fl|27
  i32.const 2
  i32.shl
  i32.add
  local.get $slMap
  i32.store $0 offset=4
 )
 (func $~lib/rt/tlsf/addMemory (type $i32_i32_i32_=>_i32) (param $root i32) (param $start i32) (param $end i32) (result i32)
  (local $root|3 i32)
  (local $tail i32)
  (local $tailInfo i32)
  (local $size i32)
  (local $leftSize i32)
  (local $left i32)
  (local $root|9 i32)
  (local $tail|10 i32)
  i32.const 1
  drop
  local.get $start
  local.get $end
  i32.le_u
  i32.eqz
  if
   unreachable
  end
  local.get $start
  i32.const 4
  i32.add
  i32.const 15
  i32.add
  i32.const 15
  i32.const -1
  i32.xor
  i32.and
  i32.const 4
  i32.sub
  local.set $start
  local.get $end
  i32.const 15
  i32.const -1
  i32.xor
  i32.and
  local.set $end
  local.get $root
  local.set $root|3
  local.get $root|3
  i32.load $0 offset=1568
  local.set $tail
  i32.const 0
  local.set $tailInfo
  local.get $tail
  if
   i32.const 1
   drop
   local.get $start
   local.get $tail
   i32.const 4
   i32.add
   i32.ge_u
   i32.eqz
   if
    unreachable
   end
   local.get $start
   i32.const 16
   i32.sub
   local.get $tail
   i32.eq
   if
    local.get $start
    i32.const 16
    i32.sub
    local.set $start
    local.get $tail
    i32.load $0
    local.set $tailInfo
   else
    nop
   end
  else
   i32.const 1
   drop
   local.get $start
   local.get $root
   i32.const 1572
   i32.add
   i32.ge_u
   i32.eqz
   if
    unreachable
   end
  end
  local.get $end
  local.get $start
  i32.sub
  local.set $size
  local.get $size
  i32.const 4
  i32.const 12
  i32.add
  i32.const 4
  i32.add
  i32.lt_u
  if
   i32.const 0
   return
  end
  local.get $size
  i32.const 2
  i32.const 4
  i32.mul
  i32.sub
  local.set $leftSize
  local.get $start
  local.set $left
  local.get $left
  local.get $leftSize
  i32.const 1
  i32.or
  local.get $tailInfo
  i32.const 2
  i32.and
  i32.or
  call $~lib/rt/common/BLOCK#set:mmInfo
  local.get $left
  i32.const 0
  call $~lib/rt/tlsf/Block#set:prev
  local.get $left
  i32.const 0
  call $~lib/rt/tlsf/Block#set:next
  local.get $start
  i32.const 4
  i32.add
  local.get $leftSize
  i32.add
  local.set $tail
  local.get $tail
  i32.const 0
  i32.const 2
  i32.or
  call $~lib/rt/common/BLOCK#set:mmInfo
  local.get $root
  local.set $root|9
  local.get $tail
  local.set $tail|10
  local.get $root|9
  local.get $tail|10
  i32.store $0 offset=1568
  local.get $root
  local.get $left
  call $~lib/rt/tlsf/insertBlock
  i32.const 1
 )
 (func $~lib/rt/tlsf/initialize (type $none_=>_none)
  (local $rootOffset i32)
  (local $pagesBefore i32)
  (local $pagesNeeded i32)
  (local $root i32)
  (local $root|4 i32)
  (local $tail i32)
  (local $fl i32)
  (local $7 i32)
  (local $root|8 i32)
  (local $fl|9 i32)
  (local $slMap i32)
  (local $sl i32)
  (local $12 i32)
  (local $root|13 i32)
  (local $fl|14 i32)
  (local $sl|15 i32)
  (local $head i32)
  (local $memStart i32)
  i32.const 0
  drop
  global.get $~lib/memory/__heap_base
  i32.const 15
  i32.add
  i32.const 15
  i32.const -1
  i32.xor
  i32.and
  local.set $rootOffset
  memory.size $0
  local.set $pagesBefore
  local.get $rootOffset
  i32.const 1572
  i32.add
  i32.const 65535
  i32.add
  i32.const 65535
  i32.const -1
  i32.xor
  i32.and
  i32.const 16
  i32.shr_u
  local.set $pagesNeeded
  local.get $pagesNeeded
  local.get $pagesBefore
  i32.gt_s
  if (result i32)
   local.get $pagesNeeded
   local.get $pagesBefore
   i32.sub
   memory.grow $0
   i32.const 0
   i32.lt_s
  else
   i32.const 0
  end
  if
   unreachable
  end
  local.get $rootOffset
  local.set $root
  local.get $root
  i32.const 0
  call $~lib/rt/tlsf/Root#set:flMap
  local.get $root
  local.set $root|4
  i32.const 0
  local.set $tail
  local.get $root|4
  local.get $tail
  i32.store $0 offset=1568
  i32.const 0
  local.set $fl
  loop $for-loop|0
   local.get $fl
   i32.const 23
   i32.lt_u
   local.set $7
   local.get $7
   if
    local.get $root
    local.set $root|8
    local.get $fl
    local.set $fl|9
    i32.const 0
    local.set $slMap
    local.get $root|8
    local.get $fl|9
    i32.const 2
    i32.shl
    i32.add
    local.get $slMap
    i32.store $0 offset=4
    i32.const 0
    local.set $sl
    loop $for-loop|1
     local.get $sl
     i32.const 16
     i32.lt_u
     local.set $12
     local.get $12
     if
      local.get $root
      local.set $root|13
      local.get $fl
      local.set $fl|14
      local.get $sl
      local.set $sl|15
      i32.const 0
      local.set $head
      local.get $root|13
      local.get $fl|14
      i32.const 4
      i32.shl
      local.get $sl|15
      i32.add
      i32.const 2
      i32.shl
      i32.add
      local.get $head
      i32.store $0 offset=96
      local.get $sl
      i32.const 1
      i32.add
      local.set $sl
      br $for-loop|1
     end
    end
    local.get $fl
    i32.const 1
    i32.add
    local.set $fl
    br $for-loop|0
   end
  end
  local.get $rootOffset
  i32.const 1572
  i32.add
  local.set $memStart
  i32.const 0
  drop
  local.get $root
  local.get $memStart
  memory.size $0
  i32.const 16
  i32.shl
  call $~lib/rt/tlsf/addMemory
  drop
  local.get $root
  global.set $~lib/rt/tlsf/ROOT
 )
 (func $~lib/rt/tlsf/checkUsedBlock (type $i32_=>_i32) (param $ptr i32) (result i32)
  (local $block i32)
  local.get $ptr
  i32.const 4
  i32.sub
  local.set $block
  local.get $ptr
  i32.const 0
  i32.ne
  if (result i32)
   local.get $ptr
   i32.const 15
   i32.and
   i32.eqz
  else
   i32.const 0
  end
  if (result i32)
   local.get $block
   i32.load $0
   i32.const 1
   i32.and
   i32.eqz
  else
   i32.const 0
  end
  i32.eqz
  if
   unreachable
  end
  local.get $block
 )
 (func $~lib/rt/tlsf/freeBlock (type $i32_i32_=>_none) (param $root i32) (param $block i32)
  i32.const 0
  drop
  local.get $block
  local.get $block
  i32.load $0
  i32.const 1
  i32.or
  call $~lib/rt/common/BLOCK#set:mmInfo
  local.get $root
  local.get $block
  call $~lib/rt/tlsf/insertBlock
 )
 (func $~lib/rt/tlsf/__free (type $i32_=>_none) (param $ptr i32)
  local.get $ptr
  global.get $~lib/memory/__heap_base
  i32.lt_u
  if
   return
  end
  global.get $~lib/rt/tlsf/ROOT
  i32.eqz
  if
   call $~lib/rt/tlsf/initialize
  end
  global.get $~lib/rt/tlsf/ROOT
  local.get $ptr
  call $~lib/rt/tlsf/checkUsedBlock
  call $~lib/rt/tlsf/freeBlock
 )
 (func $~lib/rt/itcms/free (type $i32_=>_none) (param $obj i32)
  local.get $obj
  global.get $~lib/memory/__heap_base
  i32.lt_u
  if
   local.get $obj
   i32.const 0
   call $~lib/rt/itcms/Object#set:nextWithColor
   local.get $obj
   i32.const 0
   call $~lib/rt/itcms/Object#set:prev
  else
   global.get $~lib/rt/itcms/total
   local.get $obj
   call $~lib/rt/itcms/Object#get:size
   i32.sub
   global.set $~lib/rt/itcms/total
   i32.const 0
   drop
   local.get $obj
   i32.const 4
   i32.add
   call $~lib/rt/tlsf/__free
  end
 )
 (func $~lib/rt/itcms/step (type $none_=>_i32) (result i32)
  (local $obj i32)
  (local $1 i32)
  (local $black i32)
  (local $3 i32)
  (local $4 i32)
  (local $from i32)
  block $break|0
   block $case2|0
    block $case1|0
     block $case0|0
      global.get $~lib/rt/itcms/state
      local.set $1
      local.get $1
      i32.const 0
      i32.eq
      br_if $case0|0
      local.get $1
      i32.const 1
      i32.eq
      br_if $case1|0
      local.get $1
      i32.const 2
      i32.eq
      br_if $case2|0
      br $break|0
     end
     i32.const 1
     global.set $~lib/rt/itcms/state
     i32.const 0
     global.set $~lib/rt/itcms/visitCount
     i32.const 0
     call $~lib/rt/itcms/visitRoots
     global.get $~lib/rt/itcms/toSpace
     global.set $~lib/rt/itcms/iter
     global.get $~lib/rt/itcms/visitCount
     i32.const 1
     i32.mul
     return
    end
    global.get $~lib/rt/itcms/white
    i32.eqz
    local.set $black
    global.get $~lib/rt/itcms/iter
    call $~lib/rt/itcms/Object#get:next
    local.set $obj
    loop $while-continue|1
     local.get $obj
     global.get $~lib/rt/itcms/toSpace
     i32.ne
     local.set $3
     local.get $3
     if
      local.get $obj
      global.set $~lib/rt/itcms/iter
      local.get $obj
      call $~lib/rt/itcms/Object#get:color
      local.get $black
      i32.ne
      if
       local.get $obj
       local.get $black
       call $~lib/rt/itcms/Object#set:color
       i32.const 0
       global.set $~lib/rt/itcms/visitCount
       local.get $obj
       i32.const 20
       i32.add
       i32.const 0
       call $~lib/rt/__visit_members
       global.get $~lib/rt/itcms/visitCount
       i32.const 1
       i32.mul
       return
      end
      local.get $obj
      call $~lib/rt/itcms/Object#get:next
      local.set $obj
      br $while-continue|1
     end
    end
    i32.const 0
    global.set $~lib/rt/itcms/visitCount
    i32.const 0
    call $~lib/rt/itcms/visitRoots
    global.get $~lib/rt/itcms/iter
    call $~lib/rt/itcms/Object#get:next
    local.set $obj
    local.get $obj
    global.get $~lib/rt/itcms/toSpace
    i32.eq
    if
     i32.const 0
     call $~lib/rt/itcms/visitStack
     global.get $~lib/rt/itcms/iter
     call $~lib/rt/itcms/Object#get:next
     local.set $obj
     loop $while-continue|2
      local.get $obj
      global.get $~lib/rt/itcms/toSpace
      i32.ne
      local.set $4
      local.get $4
      if
       local.get $obj
       call $~lib/rt/itcms/Object#get:color
       local.get $black
       i32.ne
       if
        local.get $obj
        local.get $black
        call $~lib/rt/itcms/Object#set:color
        local.get $obj
        i32.const 20
        i32.add
        i32.const 0
        call $~lib/rt/__visit_members
       end
       local.get $obj
       call $~lib/rt/itcms/Object#get:next
       local.set $obj
       br $while-continue|2
      end
     end
     global.get $~lib/rt/itcms/fromSpace
     local.set $from
     global.get $~lib/rt/itcms/toSpace
     global.set $~lib/rt/itcms/fromSpace
     local.get $from
     global.set $~lib/rt/itcms/toSpace
     local.get $black
     global.set $~lib/rt/itcms/white
     local.get $from
     call $~lib/rt/itcms/Object#get:next
     global.set $~lib/rt/itcms/iter
     i32.const 2
     global.set $~lib/rt/itcms/state
    end
    global.get $~lib/rt/itcms/visitCount
    i32.const 1
    i32.mul
    return
   end
   global.get $~lib/rt/itcms/iter
   local.set $obj
   local.get $obj
   global.get $~lib/rt/itcms/toSpace
   i32.ne
   if
    local.get $obj
    call $~lib/rt/itcms/Object#get:next
    global.set $~lib/rt/itcms/iter
    i32.const 1
    drop
    local.get $obj
    call $~lib/rt/itcms/Object#get:color
    global.get $~lib/rt/itcms/white
    i32.eqz
    i32.eq
    i32.eqz
    if
     unreachable
    end
    local.get $obj
    call $~lib/rt/itcms/free
    i32.const 10
    return
   end
   global.get $~lib/rt/itcms/toSpace
   global.get $~lib/rt/itcms/toSpace
   call $~lib/rt/itcms/Object#set:nextWithColor
   global.get $~lib/rt/itcms/toSpace
   global.get $~lib/rt/itcms/toSpace
   call $~lib/rt/itcms/Object#set:prev
   i32.const 0
   global.set $~lib/rt/itcms/state
   br $break|0
  end
  i32.const 0
 )
 (func $~lib/rt/itcms/interrupt (type $none_=>_none)
  (local $budget i32)
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 1024
  i32.const 200
  i32.mul
  i32.const 100
  i32.div_u
  local.set $budget
  loop $do-loop|0
   local.get $budget
   call $~lib/rt/itcms/step
   i32.sub
   local.set $budget
   global.get $~lib/rt/itcms/state
   i32.const 0
   i32.eq
   if
    i32.const 0
    drop
    global.get $~lib/rt/itcms/total
    i64.extend_i32_u
    i32.const 200
    i64.extend_i32_u
    i64.mul
    i64.const 100
    i64.div_u
    i32.wrap_i64
    i32.const 1024
    i32.add
    global.set $~lib/rt/itcms/threshold
    i32.const 0
    drop
    return
   end
   local.get $budget
   i32.const 0
   i32.gt_s
   br_if $do-loop|0
  end
  i32.const 0
  drop
  global.get $~lib/rt/itcms/total
  i32.const 1024
  global.get $~lib/rt/itcms/total
  global.get $~lib/rt/itcms/threshold
  i32.sub
  i32.const 1024
  i32.lt_u
  i32.mul
  i32.add
  global.set $~lib/rt/itcms/threshold
  i32.const 0
  drop
 )
 (func $~lib/rt/tlsf/computeSize (type $i32_=>_i32) (param $size i32) (result i32)
  local.get $size
  i32.const 12
  i32.le_u
  if (result i32)
   i32.const 12
  else
   local.get $size
   i32.const 4
   i32.add
   i32.const 15
   i32.add
   i32.const 15
   i32.const -1
   i32.xor
   i32.and
   i32.const 4
   i32.sub
  end
 )
 (func $~lib/rt/tlsf/prepareSize (type $i32_=>_i32) (param $size i32) (result i32)
  local.get $size
  i32.const 1073741820
  i32.gt_u
  if
   unreachable
  end
  local.get $size
  call $~lib/rt/tlsf/computeSize
 )
 (func $~lib/rt/tlsf/searchBlock (type $i32_i32_=>_i32) (param $root i32) (param $size i32) (result i32)
  (local $fl i32)
  (local $sl i32)
  (local $requestSize i32)
  (local $root|5 i32)
  (local $fl|6 i32)
  (local $slMap i32)
  (local $head i32)
  (local $flMap i32)
  (local $root|10 i32)
  (local $fl|11 i32)
  (local $root|12 i32)
  (local $fl|13 i32)
  (local $sl|14 i32)
  (local $root|15 i32)
  (local $fl|16 i32)
  (local $sl|17 i32)
  local.get $size
  i32.const 256
  i32.lt_u
  if
   i32.const 0
   local.set $fl
   local.get $size
   i32.const 4
   i32.shr_u
   local.set $sl
  else
   local.get $size
   i32.const 536870910
   i32.lt_u
   if (result i32)
    local.get $size
    i32.const 1
    i32.const 27
    local.get $size
    i32.clz
    i32.sub
    i32.shl
    i32.add
    i32.const 1
    i32.sub
   else
    local.get $size
   end
   local.set $requestSize
   i32.const 31
   local.get $requestSize
   i32.clz
   i32.sub
   local.set $fl
   local.get $requestSize
   local.get $fl
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 1
   i32.const 4
   i32.shl
   i32.xor
   local.set $sl
   local.get $fl
   i32.const 8
   i32.const 1
   i32.sub
   i32.sub
   local.set $fl
  end
  i32.const 1
  drop
  local.get $fl
  i32.const 23
  i32.lt_u
  if (result i32)
   local.get $sl
   i32.const 16
   i32.lt_u
  else
   i32.const 0
  end
  i32.eqz
  if
   unreachable
  end
  local.get $root
  local.set $root|5
  local.get $fl
  local.set $fl|6
  local.get $root|5
  local.get $fl|6
  i32.const 2
  i32.shl
  i32.add
  i32.load $0 offset=4
  i32.const 0
  i32.const -1
  i32.xor
  local.get $sl
  i32.shl
  i32.and
  local.set $slMap
  i32.const 0
  local.set $head
  local.get $slMap
  i32.eqz
  if
   local.get $root
   i32.load $0
   i32.const 0
   i32.const -1
   i32.xor
   local.get $fl
   i32.const 1
   i32.add
   i32.shl
   i32.and
   local.set $flMap
   local.get $flMap
   i32.eqz
   if
    i32.const 0
    local.set $head
   else
    local.get $flMap
    i32.ctz
    local.set $fl
    local.get $root
    local.set $root|10
    local.get $fl
    local.set $fl|11
    local.get $root|10
    local.get $fl|11
    i32.const 2
    i32.shl
    i32.add
    i32.load $0 offset=4
    local.set $slMap
    i32.const 1
    drop
    local.get $slMap
    i32.eqz
    if
     unreachable
    end
    local.get $root
    local.set $root|12
    local.get $fl
    local.set $fl|13
    local.get $slMap
    i32.ctz
    local.set $sl|14
    local.get $root|12
    local.get $fl|13
    i32.const 4
    i32.shl
    local.get $sl|14
    i32.add
    i32.const 2
    i32.shl
    i32.add
    i32.load $0 offset=96
    local.set $head
   end
  else
   local.get $root
   local.set $root|15
   local.get $fl
   local.set $fl|16
   local.get $slMap
   i32.ctz
   local.set $sl|17
   local.get $root|15
   local.get $fl|16
   i32.const 4
   i32.shl
   local.get $sl|17
   i32.add
   i32.const 2
   i32.shl
   i32.add
   i32.load $0 offset=96
   local.set $head
  end
  local.get $head
 )
 (func $~lib/rt/tlsf/growMemory (type $i32_i32_=>_none) (param $root i32) (param $size i32)
  (local $pagesBefore i32)
  (local $root|3 i32)
  (local $pagesNeeded i32)
  (local $5 i32)
  (local $6 i32)
  (local $pagesWanted i32)
  (local $pagesAfter i32)
  i32.const 0
  drop
  local.get $size
  i32.const 536870910
  i32.lt_u
  if
   local.get $size
   i32.const 1
   i32.const 27
   local.get $size
   i32.clz
   i32.sub
   i32.shl
   i32.const 1
   i32.sub
   i32.add
   local.set $size
  end
  memory.size $0
  local.set $pagesBefore
  local.get $size
  i32.const 4
  local.get $pagesBefore
  i32.const 16
  i32.shl
  i32.const 4
  i32.sub
  local.get $root
  local.set $root|3
  local.get $root|3
  i32.load $0 offset=1568
  i32.ne
  i32.shl
  i32.add
  local.set $size
  local.get $size
  i32.const 65535
  i32.add
  i32.const 65535
  i32.const -1
  i32.xor
  i32.and
  i32.const 16
  i32.shr_u
  local.set $pagesNeeded
  local.get $pagesBefore
  local.tee $5
  local.get $pagesNeeded
  local.tee $6
  local.get $5
  local.get $6
  i32.gt_s
  select
  local.set $pagesWanted
  local.get $pagesWanted
  memory.grow $0
  i32.const 0
  i32.lt_s
  if
   local.get $pagesNeeded
   memory.grow $0
   i32.const 0
   i32.lt_s
   if
    unreachable
   end
  end
  memory.size $0
  local.set $pagesAfter
  local.get $root
  local.get $pagesBefore
  i32.const 16
  i32.shl
  local.get $pagesAfter
  i32.const 16
  i32.shl
  call $~lib/rt/tlsf/addMemory
  drop
 )
 (func $~lib/rt/tlsf/prepareBlock (type $i32_i32_i32_=>_none) (param $root i32) (param $block i32) (param $size i32)
  (local $blockInfo i32)
  (local $remaining i32)
  (local $spare i32)
  (local $block|6 i32)
  (local $block|7 i32)
  local.get $block
  i32.load $0
  local.set $blockInfo
  i32.const 1
  drop
  local.get $size
  i32.const 4
  i32.add
  i32.const 15
  i32.and
  i32.eqz
  i32.eqz
  if
   unreachable
  end
  local.get $blockInfo
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  local.get $size
  i32.sub
  local.set $remaining
  local.get $remaining
  i32.const 4
  i32.const 12
  i32.add
  i32.ge_u
  if
   local.get $block
   local.get $size
   local.get $blockInfo
   i32.const 2
   i32.and
   i32.or
   call $~lib/rt/common/BLOCK#set:mmInfo
   local.get $block
   i32.const 4
   i32.add
   local.get $size
   i32.add
   local.set $spare
   local.get $spare
   local.get $remaining
   i32.const 4
   i32.sub
   i32.const 1
   i32.or
   call $~lib/rt/common/BLOCK#set:mmInfo
   local.get $root
   local.get $spare
   call $~lib/rt/tlsf/insertBlock
  else
   local.get $block
   local.get $blockInfo
   i32.const 1
   i32.const -1
   i32.xor
   i32.and
   call $~lib/rt/common/BLOCK#set:mmInfo
   local.get $block
   local.set $block|7
   local.get $block|7
   i32.const 4
   i32.add
   local.get $block|7
   i32.load $0
   i32.const 3
   i32.const -1
   i32.xor
   i32.and
   i32.add
   local.get $block
   local.set $block|6
   local.get $block|6
   i32.const 4
   i32.add
   local.get $block|6
   i32.load $0
   i32.const 3
   i32.const -1
   i32.xor
   i32.and
   i32.add
   i32.load $0
   i32.const 2
   i32.const -1
   i32.xor
   i32.and
   call $~lib/rt/common/BLOCK#set:mmInfo
  end
 )
 (func $~lib/rt/tlsf/allocateBlock (type $i32_i32_=>_i32) (param $root i32) (param $size i32) (result i32)
  (local $payloadSize i32)
  (local $block i32)
  local.get $size
  call $~lib/rt/tlsf/prepareSize
  local.set $payloadSize
  local.get $root
  local.get $payloadSize
  call $~lib/rt/tlsf/searchBlock
  local.set $block
  local.get $block
  i32.eqz
  if
   local.get $root
   local.get $payloadSize
   call $~lib/rt/tlsf/growMemory
   local.get $root
   local.get $payloadSize
   call $~lib/rt/tlsf/searchBlock
   local.set $block
   i32.const 1
   drop
   local.get $block
   i32.eqz
   if
    unreachable
   end
  end
  i32.const 1
  drop
  local.get $block
  i32.load $0
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  local.get $payloadSize
  i32.ge_u
  i32.eqz
  if
   unreachable
  end
  local.get $root
  local.get $block
  call $~lib/rt/tlsf/removeBlock
  local.get $root
  local.get $block
  local.get $payloadSize
  call $~lib/rt/tlsf/prepareBlock
  i32.const 0
  drop
  local.get $block
 )
 (func $~lib/rt/tlsf/__alloc (type $i32_=>_i32) (param $size i32) (result i32)
  global.get $~lib/rt/tlsf/ROOT
  i32.eqz
  if
   call $~lib/rt/tlsf/initialize
  end
  global.get $~lib/rt/tlsf/ROOT
  local.get $size
  call $~lib/rt/tlsf/allocateBlock
  i32.const 4
  i32.add
 )
 (func $~lib/rt/itcms/Object#set:rtId (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=12
 )
 (func $~lib/rt/itcms/Object#set:rtSize (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=16
 )
 (func $~lib/rt/itcms/__new (type $i32_i32_=>_i32) (param $size i32) (param $id i32) (result i32)
  (local $obj i32)
  (local $ptr i32)
  local.get $size
  i32.const 1073741804
  i32.ge_u
  if
   unreachable
  end
  global.get $~lib/rt/itcms/total
  global.get $~lib/rt/itcms/threshold
  i32.ge_u
  if
   call $~lib/rt/itcms/interrupt
  end
  i32.const 16
  local.get $size
  i32.add
  call $~lib/rt/tlsf/__alloc
  i32.const 4
  i32.sub
  local.set $obj
  local.get $obj
  local.get $id
  call $~lib/rt/itcms/Object#set:rtId
  local.get $obj
  local.get $size
  call $~lib/rt/itcms/Object#set:rtSize
  local.get $obj
  global.get $~lib/rt/itcms/fromSpace
  global.get $~lib/rt/itcms/white
  call $~lib/rt/itcms/Object#linkTo
  global.get $~lib/rt/itcms/total
  local.get $obj
  call $~lib/rt/itcms/Object#get:size
  i32.add
  global.set $~lib/rt/itcms/total
  local.get $obj
  i32.const 20
  i32.add
  local.set $ptr
  local.get $ptr
  i32.const 0
  local.get $size
  memory.fill $0
  local.get $ptr
 )
 (func $~lib/rt/itcms/__link (type $i32_i32_i32_=>_none) (param $parentPtr i32) (param $childPtr i32) (param $expectMultiple i32)
  (local $child i32)
  (local $parent i32)
  (local $parentColor i32)
  local.get $childPtr
  i32.eqz
  if
   return
  end
  i32.const 1
  drop
  local.get $parentPtr
  i32.eqz
  if
   unreachable
  end
  local.get $childPtr
  i32.const 20
  i32.sub
  local.set $child
  local.get $child
  call $~lib/rt/itcms/Object#get:color
  global.get $~lib/rt/itcms/white
  i32.eq
  if
   local.get $parentPtr
   i32.const 20
   i32.sub
   local.set $parent
   local.get $parent
   call $~lib/rt/itcms/Object#get:color
   local.set $parentColor
   local.get $parentColor
   global.get $~lib/rt/itcms/white
   i32.eqz
   i32.eq
   if
    local.get $expectMultiple
    if
     local.get $parent
     call $~lib/rt/itcms/Object#makeGray
    else
     local.get $child
     call $~lib/rt/itcms/Object#makeGray
    end
   else
    local.get $parentColor
    i32.const 3
    i32.eq
    if (result i32)
     global.get $~lib/rt/itcms/state
     i32.const 1
     i32.eq
    else
     i32.const 0
    end
    if
     local.get $child
     call $~lib/rt/itcms/Object#makeGray
    end
   end
  end
 )
 (func $~lib/array/Array<i32>#set:buffer (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/array/Array<i32>#set:dataStart (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=4
 )
 (func $~lib/array/Array<i32>#set:byteLength (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=8
 )
 (func $~lib/array/Array<i32>#set:length_ (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=12
 )
 (func $~lib/array/Array.isArray<~lib/array/Array<i32>|null> (type $i32_=>_i32) (param $value i32) (result i32)
  local.get $value
  i32.const 0
  i32.ne
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
 )
 (func $std/array/Ref#set:v (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0
 )
 (func $~lib/array/Array.isArray<std/array/Ref> (type $i32_=>_i32) (param $value i32) (result i32)
  local.get $value
  i32.const 0
  i32.ne
  if (result i32)
   i32.const 0
  else
   i32.const 0
  end
 )
 (func $~lib/arraybuffer/ArrayBufferView#set:buffer (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/arraybuffer/ArrayBufferView#set:dataStart (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=4
 )
 (func $~lib/arraybuffer/ArrayBufferView#set:byteLength (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=8
 )
 (func $~lib/array/Array.isArray<~lib/typedarray/Uint8Array> (type $i32_=>_i32) (param $value i32) (result i32)
  local.get $value
  i32.const 0
  i32.ne
  if (result i32)
   i32.const 0
  else
   i32.const 0
  end
 )
 (func $~lib/array/Array.isArray<i32> (type $i32_=>_i32) (param $value i32) (result i32)
  i32.const 0
 )
 (func $~lib/array/Array.isArray<~lib/string/String> (type $i32_=>_i32) (param $value i32) (result i32)
  local.get $value
  i32.const 0
  i32.ne
  if (result i32)
   i32.const 0
  else
   i32.const 0
  end
 )
 (func $~lib/array/Array.isArray<~lib/array/Array<i32>> (type $i32_=>_i32) (param $value i32) (result i32)
  local.get $value
  i32.const 0
  i32.ne
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
 )
 (func $~lib/rt/__newBuffer (type $i32_i32_i32_=>_i32) (param $size i32) (param $id i32) (param $data i32) (result i32)
  (local $buffer i32)
  (local $dest i32)
  (local $ptr i32)
  (local $len i32)
  (local $dest|7 i32)
  (local $ptr|8 i32)
  (local $dest|9 i32)
  (local $ptr|10 i32)
  (local $len|11 i32)
  (local $dest|12 i32)
  (local $ptr|13 i32)
  (local $dest|14 i32)
  (local $ptr|15 i32)
  (local $len|16 i32)
  (local $dest|17 i32)
  (local $ptr|18 i32)
  (local $dest|19 i32)
  (local $ptr|20 i32)
  (local $len|21 i32)
  (local $dest|22 i32)
  (local $ptr|23 i32)
  (local $dest|24 i32)
  (local $ptr|25 i32)
  (local $len|26 i32)
  (local $dest|27 i32)
  (local $ptr|28 i32)
  (local $dest|29 i32)
  (local $ptr|30 i32)
  (local $len|31 i32)
  local.get $size
  local.get $id
  call $~lib/rt/itcms/__new
  local.set $buffer
  local.get $data
  if
   local.get $size
   i32.const 64
   i32.ge_u
   if
    unreachable
   end
   local.get $buffer
   local.set $dest
   local.get $data
   local.set $ptr
   local.get $size
   local.set $len
   local.get $len
   i32.const 32
   i32.ge_s
   if
    local.get $dest
    local.set $dest|7
    local.get $ptr
    local.set $ptr|8
    local.get $dest|7
    local.get $ptr|8
    i64.load $0
    i64.store $0
    local.get $dest|7
    i32.const 8
    i32.add
    local.set $dest|7
    local.get $ptr|8
    i32.const 8
    i32.add
    local.set $ptr|8
    local.get $dest|7
    local.get $ptr|8
    i64.load $0
    i64.store $0
    local.get $dest|7
    i32.const 8
    i32.add
    local.set $dest|7
    local.get $ptr|8
    i32.const 8
    i32.add
    local.set $ptr|8
    local.get $dest|7
    local.get $ptr|8
    i64.load $0
    i64.store $0
    local.get $dest|7
    i32.const 8
    i32.add
    local.set $dest|7
    local.get $ptr|8
    i32.const 8
    i32.add
    local.set $ptr|8
    local.get $dest|7
    local.get $ptr|8
    i64.load $0
    i64.store $0
    local.get $dest
    i32.const 32
    i32.add
    local.set $dest
    local.get $ptr
    i32.const 32
    i32.add
    local.set $ptr
    local.get $len
    i32.const 32
    i32.sub
    local.set $len
   end
   local.get $dest
   local.set $dest|9
   local.get $ptr
   local.set $ptr|10
   local.get $len
   local.set $len|11
   local.get $len|11
   i32.const 16
   i32.ge_s
   if
    local.get $dest|9
    local.set $dest|12
    local.get $ptr|10
    local.set $ptr|13
    local.get $dest|12
    local.get $ptr|13
    i64.load $0
    i64.store $0
    local.get $dest|12
    i32.const 8
    i32.add
    local.set $dest|12
    local.get $ptr|13
    i32.const 8
    i32.add
    local.set $ptr|13
    local.get $dest|12
    local.get $ptr|13
    i64.load $0
    i64.store $0
    local.get $dest|9
    i32.const 16
    i32.add
    local.set $dest|9
    local.get $ptr|10
    i32.const 16
    i32.add
    local.set $ptr|10
    local.get $len|11
    i32.const 16
    i32.sub
    local.set $len|11
   end
   local.get $dest|9
   local.set $dest|14
   local.get $ptr|10
   local.set $ptr|15
   local.get $len|11
   local.set $len|16
   local.get $len|16
   i32.const 8
   i32.ge_s
   if
    local.get $dest|14
    local.set $dest|17
    local.get $ptr|15
    local.set $ptr|18
    local.get $dest|17
    local.get $ptr|18
    i64.load $0
    i64.store $0
    local.get $dest|14
    i32.const 8
    i32.add
    local.set $dest|14
    local.get $ptr|15
    i32.const 8
    i32.add
    local.set $ptr|15
    local.get $len|16
    i32.const 8
    i32.sub
    local.set $len|16
   end
   local.get $dest|14
   local.set $dest|19
   local.get $ptr|15
   local.set $ptr|20
   local.get $len|16
   local.set $len|21
   local.get $len|21
   i32.const 4
   i32.ge_s
   if
    local.get $dest|19
    local.set $dest|22
    local.get $ptr|20
    local.set $ptr|23
    local.get $dest|22
    local.get $ptr|23
    i32.load $0
    i32.store $0
    local.get $dest|19
    i32.const 4
    i32.add
    local.set $dest|19
    local.get $ptr|20
    i32.const 4
    i32.add
    local.set $ptr|20
    local.get $len|21
    i32.const 4
    i32.sub
    local.set $len|21
   end
   local.get $dest|19
   local.set $dest|24
   local.get $ptr|20
   local.set $ptr|25
   local.get $len|21
   local.set $len|26
   local.get $len|26
   i32.const 2
   i32.ge_s
   if
    local.get $dest|24
    local.set $dest|27
    local.get $ptr|25
    local.set $ptr|28
    local.get $dest|27
    local.get $ptr|28
    i32.load16_u $0
    i32.store16 $0
    local.get $dest|24
    i32.const 2
    i32.add
    local.set $dest|24
    local.get $ptr|25
    i32.const 2
    i32.add
    local.set $ptr|25
    local.get $len|26
    i32.const 2
    i32.sub
    local.set $len|26
   end
   local.get $dest|24
   local.set $dest|29
   local.get $ptr|25
   local.set $ptr|30
   local.get $len|26
   local.set $len|31
   local.get $len|31
   if
    local.get $dest|29
    local.get $ptr|30
    i32.load8_u $0
    i32.store8 $0
   end
  end
  local.get $buffer
 )
 (func $~lib/util/bytes/FILL<u8> (type $i32_i32_i32_i32_i32_=>_none) (param $ptr i32) (param $len i32) (param $value i32) (param $start i32) (param $end i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  local.get $start
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $start
   i32.add
   local.tee $5
   i32.const 0
   local.tee $6
   local.get $5
   local.get $6
   i32.gt_u
   select
  else
   local.get $start
   local.tee $7
   local.get $len
   local.tee $8
   local.get $7
   local.get $8
   i32.lt_s
   select
  end
  local.set $start
  local.get $end
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $end
   i32.add
   local.tee $9
   i32.const 0
   local.tee $10
   local.get $9
   local.get $10
   i32.gt_u
   select
  else
   local.get $end
   local.tee $11
   local.get $len
   local.tee $12
   local.get $11
   local.get $12
   i32.lt_s
   select
  end
  local.set $end
  i32.const 1
  i32.const 1
  i32.eq
  drop
  local.get $start
  local.get $end
  i32.lt_s
  if
   local.get $ptr
   local.get $start
   i32.add
   local.get $value
   local.get $end
   local.get $start
   i32.sub
   memory.fill $0
  end
 )
 (func $~lib/array/Array<u8>#fill (type $i32_i32_i32_i32_=>_i32) (param $this i32) (param $value i32) (param $start i32) (param $end i32) (result i32)
  i32.const 0
  drop
  local.get $this
  i32.load $0 offset=4
  local.get $this
  i32.load $0 offset=12
  local.get $value
  local.get $start
  local.get $end
  call $~lib/util/bytes/FILL<u8>
  local.get $this
 )
 (func $~lib/array/Array<u8>#get:length (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/array/Array<u8>#__get (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  local.get $index
  local.get $this
  i32.load $0 offset=12
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 0
  i32.shl
  i32.add
  i32.load8_u $0
  local.set $value
  i32.const 0
  drop
  local.get $value
 )
 (func $~lib/util/bytes/FILL<u32> (type $i32_i32_i32_i32_i32_=>_none) (param $ptr i32) (param $len i32) (param $value i32) (param $start i32) (param $end i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  local.get $start
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $start
   i32.add
   local.tee $5
   i32.const 0
   local.tee $6
   local.get $5
   local.get $6
   i32.gt_u
   select
  else
   local.get $start
   local.tee $7
   local.get $len
   local.tee $8
   local.get $7
   local.get $8
   i32.lt_s
   select
  end
  local.set $start
  local.get $end
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $end
   i32.add
   local.tee $9
   i32.const 0
   local.tee $10
   local.get $9
   local.get $10
   i32.gt_u
   select
  else
   local.get $end
   local.tee $11
   local.get $len
   local.tee $12
   local.get $11
   local.get $12
   i32.lt_s
   select
  end
  local.set $end
  i32.const 4
  i32.const 1
  i32.eq
  drop
  i32.const 0
  i32.const 1
  i32.le_s
  drop
  i32.const 1
  drop
  local.get $value
  i32.const 0
  i32.eq
  local.get $value
  i32.const -1
  i32.eq
  i32.or
  if
   local.get $start
   local.get $end
   i32.lt_s
   if
    local.get $ptr
    local.get $start
    i32.const 2
    i32.shl
    i32.add
    local.get $value
    local.get $end
    local.get $start
    i32.sub
    i32.const 2
    i32.shl
    memory.fill $0
   end
   return
  end
  loop $for-loop|0
   local.get $start
   local.get $end
   i32.lt_s
   local.set $13
   local.get $13
   if
    local.get $ptr
    local.get $start
    i32.const 2
    i32.shl
    i32.add
    local.get $value
    i32.store $0
    local.get $start
    i32.const 1
    i32.add
    local.set $start
    br $for-loop|0
   end
  end
 )
 (func $~lib/array/Array<u32>#fill (type $i32_i32_i32_i32_=>_i32) (param $this i32) (param $value i32) (param $start i32) (param $end i32) (result i32)
  i32.const 0
  drop
  local.get $this
  i32.load $0 offset=4
  local.get $this
  i32.load $0 offset=12
  local.get $value
  local.get $start
  local.get $end
  call $~lib/util/bytes/FILL<u32>
  local.get $this
 )
 (func $~lib/array/Array<u32>#get:length (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/array/Array<u32>#__get (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  local.get $index
  local.get $this
  i32.load $0 offset=12
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.set $value
  i32.const 0
  drop
  local.get $value
 )
 (func $~lib/util/bytes/FILL<f32> (type $i32_i32_f32_i32_i32_=>_none) (param $ptr i32) (param $len i32) (param $value f32) (param $start i32) (param $end i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  local.get $start
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $start
   i32.add
   local.tee $5
   i32.const 0
   local.tee $6
   local.get $5
   local.get $6
   i32.gt_u
   select
  else
   local.get $start
   local.tee $7
   local.get $len
   local.tee $8
   local.get $7
   local.get $8
   i32.lt_s
   select
  end
  local.set $start
  local.get $end
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $end
   i32.add
   local.tee $9
   i32.const 0
   local.tee $10
   local.get $9
   local.get $10
   i32.gt_u
   select
  else
   local.get $end
   local.tee $11
   local.get $len
   local.tee $12
   local.get $11
   local.get $12
   i32.lt_s
   select
  end
  local.set $end
  i32.const 4
  i32.const 1
  i32.eq
  drop
  i32.const 0
  i32.const 1
  i32.le_s
  drop
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $value
  i32.reinterpret_f32
  i32.const 0
  i32.eq
  if (result i32)
   i32.const 1
  else
   i32.const 4
   i32.const 8
   i32.eq
  end
  if
   local.get $start
   local.get $end
   i32.lt_s
   if
    local.get $ptr
    local.get $start
    i32.const 2
    i32.shl
    i32.add
    i32.const 0
    local.get $end
    local.get $start
    i32.sub
    i32.const 2
    i32.shl
    memory.fill $0
   end
   return
  end
  loop $for-loop|0
   local.get $start
   local.get $end
   i32.lt_s
   local.set $13
   local.get $13
   if
    local.get $ptr
    local.get $start
    i32.const 2
    i32.shl
    i32.add
    local.get $value
    f32.store $0
    local.get $start
    i32.const 1
    i32.add
    local.set $start
    br $for-loop|0
   end
  end
 )
 (func $~lib/array/Array<f32>#fill (type $i32_f32_i32_i32_=>_i32) (param $this i32) (param $value f32) (param $start i32) (param $end i32) (result i32)
  i32.const 0
  drop
  local.get $this
  i32.load $0 offset=4
  local.get $this
  i32.load $0 offset=12
  local.get $value
  local.get $start
  local.get $end
  call $~lib/util/bytes/FILL<f32>
  local.get $this
 )
 (func $~lib/array/Array<f32>#get:length (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/array/Array<f32>#__get (type $i32_i32_=>_f32) (param $this i32) (param $index i32) (result f32)
  (local $value f32)
  local.get $index
  local.get $this
  i32.load $0 offset=12
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  f32.load $0
  local.set $value
  i32.const 0
  drop
  local.get $value
 )
 (func $~lib/array/Array<i32>#get:length (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/arraybuffer/ArrayBuffer#get:byteLength (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.const 20
  i32.sub
  i32.load $0 offset=16
 )
 (func $~lib/rt/itcms/__renew (type $i32_i32_=>_i32) (param $oldPtr i32) (param $size i32) (result i32)
  (local $oldObj i32)
  (local $newPtr i32)
  (local $4 i32)
  (local $5 i32)
  local.get $oldPtr
  i32.const 20
  i32.sub
  local.set $oldObj
  local.get $size
  local.get $oldObj
  i32.load $0
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  i32.const 16
  i32.sub
  i32.le_u
  if
   local.get $oldObj
   local.get $size
   call $~lib/rt/itcms/Object#set:rtSize
   local.get $oldPtr
   return
  end
  local.get $size
  local.get $oldObj
  i32.load $0 offset=12
  call $~lib/rt/itcms/__new
  local.set $newPtr
  local.get $newPtr
  local.get $oldPtr
  local.get $size
  local.tee $4
  local.get $oldObj
  i32.load $0 offset=16
  local.tee $5
  local.get $4
  local.get $5
  i32.lt_u
  select
  memory.copy $0 $0
  local.get $newPtr
 )
 (func $~lib/array/ensureCapacity (type $i32_i32_i32_i32_=>_none) (param $array i32) (param $newSize i32) (param $alignLog2 i32) (param $canGrow i32)
  (local $oldCapacity i32)
  (local $oldData i32)
  (local $6 i32)
  (local $7 i32)
  (local $newCapacity i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $newData i32)
  local.get $array
  i32.load $0 offset=8
  local.set $oldCapacity
  local.get $newSize
  local.get $oldCapacity
  local.get $alignLog2
  i32.shr_u
  i32.gt_u
  if
   local.get $newSize
   i32.const 1073741820
   local.get $alignLog2
   i32.shr_u
   i32.gt_u
   if
    unreachable
   end
   local.get $array
   i32.load $0
   local.set $oldData
   local.get $newSize
   local.tee $6
   i32.const 8
   local.tee $7
   local.get $6
   local.get $7
   i32.gt_u
   select
   local.get $alignLog2
   i32.shl
   local.set $newCapacity
   local.get $canGrow
   if
    local.get $oldCapacity
    i32.const 1
    i32.shl
    local.tee $9
    i32.const 1073741820
    local.tee $10
    local.get $9
    local.get $10
    i32.lt_u
    select
    local.tee $11
    local.get $newCapacity
    local.tee $12
    local.get $11
    local.get $12
    i32.gt_u
    select
    local.set $newCapacity
   end
   local.get $oldData
   local.get $newCapacity
   call $~lib/rt/itcms/__renew
   local.set $newData
   i32.const 2
   global.get $~lib/shared/runtime/Runtime.Incremental
   i32.ne
   drop
   local.get $newData
   local.get $oldData
   i32.ne
   if
    local.get $array
    local.get $newData
    i32.store $0
    local.get $array
    local.get $newData
    i32.store $0 offset=4
    local.get $array
    local.get $newData
    i32.const 0
    call $~lib/rt/itcms/__link
   end
   local.get $array
   local.get $newCapacity
   i32.store $0 offset=8
  end
 )
 (func $~lib/array/Array<i32>#push (type $i32_i32_=>_i32) (param $this i32) (param $value i32) (result i32)
  (local $oldLen i32)
  (local $len i32)
  local.get $this
  i32.load $0 offset=12
  local.set $oldLen
  local.get $oldLen
  i32.const 1
  i32.add
  local.set $len
  local.get $this
  local.get $len
  i32.const 2
  i32.const 1
  call $~lib/array/ensureCapacity
  i32.const 0
  drop
  local.get $this
  i32.load $0 offset=4
  local.get $oldLen
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store $0
  local.get $this
  local.get $len
  call $~lib/array/Array<i32>#set:length_
  local.get $len
 )
 (func $~lib/array/Array<i32>#__get (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  local.get $index
  local.get $this
  i32.load $0 offset=12
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.set $value
  i32.const 0
  drop
  local.get $value
 )
 (func $~lib/array/Array<i32>#pop (type $i32_=>_i32) (param $this i32) (result i32)
  (local $len i32)
  (local $val i32)
  local.get $this
  i32.load $0 offset=12
  local.set $len
  local.get $len
  i32.const 1
  i32.lt_s
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $len
  i32.const 1
  i32.sub
  local.tee $len
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.set $val
  local.get $this
  local.get $len
  call $~lib/array/Array<i32>#set:length_
  local.get $val
 )
 (func $~lib/array/Array<std/array/Ref>#__uset (type $i32_i32_i32_=>_none) (param $this i32) (param $index i32) (param $value i32)
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store $0
  i32.const 1
  drop
  local.get $this
  local.get $value
  i32.const 1
  call $~lib/rt/itcms/__link
 )
 (func $~lib/array/Array<std/array/Ref>#set:length_ (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=12
 )
 (func $~lib/array/Array<std/array/Ref>#set:length (type $i32_i32_=>_none) (param $this i32) (param $newLength i32)
  local.get $this
  local.get $newLength
  i32.const 2
  i32.const 0
  call $~lib/array/ensureCapacity
  local.get $this
  local.get $newLength
  call $~lib/array/Array<std/array/Ref>#set:length_
 )
 (func $~lib/array/Array<std/array/Ref>#get:length (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/array/Array<i32>#at (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  (local $len i32)
  (local $value i32)
  local.get $this
  i32.load $0 offset=12
  local.set $len
  local.get $index
  i32.const 0
  local.get $len
  local.get $index
  i32.const 0
  i32.ge_s
  select
  i32.add
  local.set $index
  local.get $index
  local.get $len
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.set $value
  i32.const 0
  drop
  local.get $value
 )
 (func $~lib/array/Array<i32>#copyWithin (type $i32_i32_i32_i32_=>_i32) (param $this i32) (param $target i32) (param $start i32) (param $end i32) (result i32)
  (local $ptr i32)
  (local $len i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $to i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $from i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $last i32)
  (local $23 i32)
  (local $24 i32)
  (local $count i32)
  local.get $this
  i32.load $0 offset=4
  local.set $ptr
  local.get $this
  i32.load $0 offset=12
  local.set $len
  local.get $end
  local.tee $6
  local.get $len
  local.tee $7
  local.get $6
  local.get $7
  i32.lt_s
  select
  local.set $end
  local.get $target
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $target
   i32.add
   local.tee $8
   i32.const 0
   local.tee $9
   local.get $8
   local.get $9
   i32.gt_s
   select
  else
   local.get $target
   local.tee $10
   local.get $len
   local.tee $11
   local.get $10
   local.get $11
   i32.lt_s
   select
  end
  local.set $to
  local.get $start
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $start
   i32.add
   local.tee $13
   i32.const 0
   local.tee $14
   local.get $13
   local.get $14
   i32.gt_s
   select
  else
   local.get $start
   local.tee $15
   local.get $len
   local.tee $16
   local.get $15
   local.get $16
   i32.lt_s
   select
  end
  local.set $from
  local.get $end
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $end
   i32.add
   local.tee $18
   i32.const 0
   local.tee $19
   local.get $18
   local.get $19
   i32.gt_s
   select
  else
   local.get $end
   local.tee $20
   local.get $len
   local.tee $21
   local.get $20
   local.get $21
   i32.lt_s
   select
  end
  local.set $last
  local.get $last
  local.get $from
  i32.sub
  local.tee $23
  local.get $len
  local.get $to
  i32.sub
  local.tee $24
  local.get $23
  local.get $24
  i32.lt_s
  select
  local.set $count
  local.get $ptr
  local.get $to
  i32.const 2
  i32.shl
  i32.add
  local.get $ptr
  local.get $from
  i32.const 2
  i32.shl
  i32.add
  local.get $count
  i32.const 2
  i32.shl
  memory.copy $0 $0
  local.get $this
 )
 (func $~lib/array/Array<i32>#unshift (type $i32_i32_=>_i32) (param $this i32) (param $value i32) (result i32)
  (local $len i32)
  (local $ptr i32)
  local.get $this
  i32.load $0 offset=12
  i32.const 1
  i32.add
  local.set $len
  local.get $this
  local.get $len
  i32.const 2
  i32.const 1
  call $~lib/array/ensureCapacity
  local.get $this
  i32.load $0 offset=4
  local.set $ptr
  local.get $ptr
  i32.const 4
  i32.add
  local.get $ptr
  local.get $len
  i32.const 1
  i32.sub
  i32.const 2
  i32.shl
  memory.copy $0 $0
  local.get $ptr
  local.get $value
  i32.store $0
  i32.const 0
  drop
  local.get $this
  local.get $len
  call $~lib/array/Array<i32>#set:length_
  local.get $len
 )
 (func $~lib/array/Array<i32>#shift (type $i32_=>_i32) (param $this i32) (result i32)
  (local $len i32)
  (local $base i32)
  (local $element i32)
  (local $lastIndex i32)
  local.get $this
  i32.load $0 offset=12
  local.set $len
  local.get $len
  i32.const 1
  i32.lt_s
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.set $base
  local.get $base
  i32.load $0
  local.set $element
  local.get $len
  i32.const 1
  i32.sub
  local.set $lastIndex
  local.get $base
  local.get $base
  i32.const 4
  i32.add
  local.get $lastIndex
  i32.const 2
  i32.shl
  memory.copy $0 $0
  i32.const 0
  drop
  local.get $base
  local.get $lastIndex
  i32.const 2
  i32.shl
  i32.add
  i32.const 0
  i32.store $0
  local.get $this
  local.get $lastIndex
  call $~lib/array/Array<i32>#set:length_
  local.get $element
 )
 (func $~lib/util/bytes/REVERSE<i32> (type $i32_i32_=>_none) (param $ptr i32) (param $len i32)
  (local $i i32)
  (local $tail i32)
  (local $hlen i32)
  (local $5 i32)
  (local $front i32)
  (local $back i32)
  (local $temp i32)
  local.get $len
  i32.const 1
  i32.gt_u
  if
   i32.const 0
   local.set $i
   local.get $len
   i32.const 1
   i32.shr_u
   local.set $hlen
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   i32.const 4
   i32.const 1
   i32.eq
   drop
   i32.const 4
   i32.const 2
   i32.eq
   drop
   local.get $len
   i32.const 1
   i32.sub
   local.set $tail
   loop $while-continue|0
    local.get $i
    local.get $hlen
    i32.lt_u
    local.set $5
    local.get $5
    if
     local.get $ptr
     local.get $i
     i32.const 2
     i32.shl
     i32.add
     local.set $front
     local.get $ptr
     local.get $tail
     local.get $i
     i32.sub
     i32.const 2
     i32.shl
     i32.add
     local.set $back
     local.get $front
     i32.load $0
     local.set $temp
     local.get $front
     local.get $back
     i32.load $0
     i32.store $0
     local.get $back
     local.get $temp
     i32.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $while-continue|0
    end
   end
  end
 )
 (func $~lib/array/Array<i32>#reverse (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  i32.load $0 offset=12
  call $~lib/util/bytes/REVERSE<i32>
  local.get $this
 )
 (func $~lib/util/bytes/REVERSE<u8> (type $i32_i32_=>_none) (param $ptr i32) (param $len i32)
  (local $i i32)
  (local $tail i32)
  (local $hlen i32)
  (local $5 i32)
  (local $front i32)
  (local $back i32)
  (local $8 i64)
  (local $9 i64)
  (local $temp i64)
  (local $11 i64)
  (local $12 i64)
  (local $13 i32)
  (local $front|14 i32)
  (local $back|15 i32)
  (local $temp|16 i32)
  local.get $len
  i32.const 1
  i32.gt_u
  if
   i32.const 0
   local.set $i
   local.get $len
   i32.const 1
   i32.shr_u
   local.set $hlen
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   i32.const 1
   i32.const 1
   i32.eq
   drop
   local.get $len
   i32.const 8
   i32.sub
   local.set $tail
   loop $while-continue|0
    local.get $i
    i32.const 7
    i32.add
    local.get $hlen
    i32.lt_u
    local.set $5
    local.get $5
    if
     local.get $ptr
     local.get $i
     i32.add
     local.set $front
     local.get $ptr
     local.get $tail
     i32.add
     local.get $i
     i32.sub
     local.set $back
     local.get $front
     i64.load $0
     local.tee $8
     i64.const 8
     i64.shr_u
     i64.const 71777214294589695
     i64.and
     local.get $8
     i64.const 71777214294589695
     i64.and
     i64.const 8
     i64.shl
     i64.or
     local.tee $9
     i64.const 16
     i64.shr_u
     i64.const 281470681808895
     i64.and
     local.get $9
     i64.const 281470681808895
     i64.and
     i64.const 16
     i64.shl
     i64.or
     i64.const 32
     i64.rotr
     local.set $temp
     local.get $front
     local.get $back
     i64.load $0
     local.tee $11
     i64.const 8
     i64.shr_u
     i64.const 71777214294589695
     i64.and
     local.get $11
     i64.const 71777214294589695
     i64.and
     i64.const 8
     i64.shl
     i64.or
     local.tee $12
     i64.const 16
     i64.shr_u
     i64.const 281470681808895
     i64.and
     local.get $12
     i64.const 281470681808895
     i64.and
     i64.const 16
     i64.shl
     i64.or
     i64.const 32
     i64.rotr
     i64.store $0
     local.get $back
     local.get $temp
     i64.store $0
     local.get $i
     i32.const 8
     i32.add
     local.set $i
     br $while-continue|0
    end
   end
   i32.const 1
   i32.const 2
   i32.eq
   drop
   local.get $len
   i32.const 1
   i32.sub
   local.set $tail
   loop $while-continue|1
    local.get $i
    local.get $hlen
    i32.lt_u
    local.set $13
    local.get $13
    if
     local.get $ptr
     local.get $i
     i32.const 0
     i32.shl
     i32.add
     local.set $front|14
     local.get $ptr
     local.get $tail
     local.get $i
     i32.sub
     i32.const 0
     i32.shl
     i32.add
     local.set $back|15
     local.get $front|14
     i32.load8_u $0
     local.set $temp|16
     local.get $front|14
     local.get $back|15
     i32.load8_u $0
     i32.store8 $0
     local.get $back|15
     local.get $temp|16
     i32.store8 $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $while-continue|1
    end
   end
  end
 )
 (func $~lib/array/Array<u8>#reverse (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  i32.load $0 offset=12
  call $~lib/util/bytes/REVERSE<u8>
  local.get $this
 )
 (func $~lib/util/bytes/REVERSE<u16> (type $i32_i32_=>_none) (param $ptr i32) (param $len i32)
  (local $i i32)
  (local $tail i32)
  (local $hlen i32)
  (local $5 i32)
  (local $front i32)
  (local $back i32)
  (local $temp i32)
  (local $9 i32)
  (local $front|10 i32)
  (local $back|11 i32)
  (local $temp|12 i32)
  local.get $len
  i32.const 1
  i32.gt_u
  if
   i32.const 0
   local.set $i
   local.get $len
   i32.const 1
   i32.shr_u
   local.set $hlen
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   i32.const 2
   i32.const 1
   i32.eq
   drop
   i32.const 2
   i32.const 2
   i32.eq
   drop
   local.get $len
   i32.const 2
   i32.sub
   local.set $tail
   loop $while-continue|0
    local.get $i
    i32.const 1
    i32.add
    local.get $hlen
    i32.lt_u
    local.set $5
    local.get $5
    if
     local.get $ptr
     local.get $i
     i32.const 1
     i32.shl
     i32.add
     local.set $front
     local.get $ptr
     local.get $tail
     local.get $i
     i32.sub
     i32.const 1
     i32.shl
     i32.add
     local.set $back
     local.get $back
     i32.load $0
     i32.const 16
     i32.rotr
     local.set $temp
     local.get $back
     local.get $front
     i32.load $0
     i32.const 16
     i32.rotr
     i32.store $0
     local.get $front
     local.get $temp
     i32.store $0
     local.get $i
     i32.const 2
     i32.add
     local.set $i
     br $while-continue|0
    end
   end
   local.get $len
   i32.const 1
   i32.sub
   local.set $tail
   loop $while-continue|1
    local.get $i
    local.get $hlen
    i32.lt_u
    local.set $9
    local.get $9
    if
     local.get $ptr
     local.get $i
     i32.const 1
     i32.shl
     i32.add
     local.set $front|10
     local.get $ptr
     local.get $tail
     local.get $i
     i32.sub
     i32.const 1
     i32.shl
     i32.add
     local.set $back|11
     local.get $front|10
     i32.load16_u $0
     local.set $temp|12
     local.get $front|10
     local.get $back|11
     i32.load16_u $0
     i32.store16 $0
     local.get $back|11
     local.get $temp|12
     i32.store16 $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $while-continue|1
    end
   end
  end
 )
 (func $~lib/array/Array<u16>#reverse (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  i32.load $0 offset=12
  call $~lib/util/bytes/REVERSE<u16>
  local.get $this
 )
 (func $~lib/array/Array<u16>#get:length (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/array/Array<u16>#__get (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  local.get $index
  local.get $this
  i32.load $0 offset=12
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 1
  i32.shl
  i32.add
  i32.load16_u $0
  local.set $value
  i32.const 0
  drop
  local.get $value
 )
 (func $~lib/array/Array<i32>#indexOf (type $i32_i32_i32_=>_i32) (param $this i32) (param $value i32) (param $fromIndex i32) (result i32)
  (local $len i32)
  (local $4 i32)
  (local $5 i32)
  (local $ptr i32)
  (local $7 i32)
  local.get $this
  i32.load $0 offset=12
  local.set $len
  local.get $len
  i32.const 0
  i32.eq
  if (result i32)
   i32.const 1
  else
   local.get $fromIndex
   local.get $len
   i32.ge_s
  end
  if
   i32.const -1
   return
  end
  local.get $fromIndex
  i32.const 0
  i32.lt_s
  if
   local.get $len
   local.get $fromIndex
   i32.add
   local.tee $4
   i32.const 0
   local.tee $5
   local.get $4
   local.get $5
   i32.gt_s
   select
   local.set $fromIndex
  end
  local.get $this
  i32.load $0 offset=4
  local.set $ptr
  loop $while-continue|0
   local.get $fromIndex
   local.get $len
   i32.lt_s
   local.set $7
   local.get $7
   if
    local.get $ptr
    local.get $fromIndex
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.get $value
    i32.eq
    if
     local.get $fromIndex
     return
    end
    local.get $fromIndex
    i32.const 1
    i32.add
    local.set $fromIndex
    br $while-continue|0
   end
  end
  i32.const -1
 )
 (func $~lib/array/Array<f32>#indexOf (type $i32_f32_i32_=>_i32) (param $this i32) (param $value f32) (param $fromIndex i32) (result i32)
  (local $len i32)
  (local $4 i32)
  (local $5 i32)
  (local $ptr i32)
  (local $7 i32)
  local.get $this
  i32.load $0 offset=12
  local.set $len
  local.get $len
  i32.const 0
  i32.eq
  if (result i32)
   i32.const 1
  else
   local.get $fromIndex
   local.get $len
   i32.ge_s
  end
  if
   i32.const -1
   return
  end
  local.get $fromIndex
  i32.const 0
  i32.lt_s
  if
   local.get $len
   local.get $fromIndex
   i32.add
   local.tee $4
   i32.const 0
   local.tee $5
   local.get $4
   local.get $5
   i32.gt_s
   select
   local.set $fromIndex
  end
  local.get $this
  i32.load $0 offset=4
  local.set $ptr
  loop $while-continue|0
   local.get $fromIndex
   local.get $len
   i32.lt_s
   local.set $7
   local.get $7
   if
    local.get $ptr
    local.get $fromIndex
    i32.const 2
    i32.shl
    i32.add
    f32.load $0
    local.get $value
    f32.eq
    if
     local.get $fromIndex
     return
    end
    local.get $fromIndex
    i32.const 1
    i32.add
    local.set $fromIndex
    br $while-continue|0
   end
  end
  i32.const -1
 )
 (func $~lib/array/Array<f64>#indexOf (type $i32_f64_i32_=>_i32) (param $this i32) (param $value f64) (param $fromIndex i32) (result i32)
  (local $len i32)
  (local $4 i32)
  (local $5 i32)
  (local $ptr i32)
  (local $7 i32)
  local.get $this
  i32.load $0 offset=12
  local.set $len
  local.get $len
  i32.const 0
  i32.eq
  if (result i32)
   i32.const 1
  else
   local.get $fromIndex
   local.get $len
   i32.ge_s
  end
  if
   i32.const -1
   return
  end
  local.get $fromIndex
  i32.const 0
  i32.lt_s
  if
   local.get $len
   local.get $fromIndex
   i32.add
   local.tee $4
   i32.const 0
   local.tee $5
   local.get $4
   local.get $5
   i32.gt_s
   select
   local.set $fromIndex
  end
  local.get $this
  i32.load $0 offset=4
  local.set $ptr
  loop $while-continue|0
   local.get $fromIndex
   local.get $len
   i32.lt_s
   local.set $7
   local.get $7
   if
    local.get $ptr
    local.get $fromIndex
    i32.const 3
    i32.shl
    i32.add
    f64.load $0
    local.get $value
    f64.eq
    if
     local.get $fromIndex
     return
    end
    local.get $fromIndex
    i32.const 1
    i32.add
    local.set $fromIndex
    br $while-continue|0
   end
  end
  i32.const -1
 )
 (func $~lib/array/Array<i32>#lastIndexOf (type $i32_i32_i32_=>_i32) (param $this i32) (param $value i32) (param $fromIndex i32) (result i32)
  (local $len i32)
  (local $ptr i32)
  (local $5 i32)
  local.get $this
  i32.load $0 offset=12
  local.set $len
  local.get $len
  i32.const 0
  i32.eq
  if
   i32.const -1
   return
  end
  local.get $fromIndex
  i32.const 0
  i32.lt_s
  if
   local.get $len
   local.get $fromIndex
   i32.add
   local.set $fromIndex
  else
   local.get $fromIndex
   local.get $len
   i32.ge_s
   if
    local.get $len
    i32.const 1
    i32.sub
    local.set $fromIndex
   end
  end
  local.get $this
  i32.load $0 offset=4
  local.set $ptr
  loop $while-continue|0
   local.get $fromIndex
   i32.const 0
   i32.ge_s
   local.set $5
   local.get $5
   if
    local.get $ptr
    local.get $fromIndex
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.get $value
    i32.eq
    if
     local.get $fromIndex
     return
    end
    local.get $fromIndex
    i32.const 1
    i32.sub
    local.set $fromIndex
    br $while-continue|0
   end
  end
  i32.const -1
 )
 (func $~lib/array/Array<i32>#lastIndexOf@varargs (type $i32_i32_i32_=>_i32) (param $this i32) (param $value i32) (param $fromIndex i32) (result i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   local.get $this
   i32.load $0 offset=12
   local.set $fromIndex
  end
  local.get $this
  local.get $value
  local.get $fromIndex
  call $~lib/array/Array<i32>#lastIndexOf
 )
 (func $~lib/array/Array<i32>#includes (type $i32_i32_i32_=>_i32) (param $this i32) (param $value i32) (param $fromIndex i32) (result i32)
  i32.const 0
  drop
  local.get $this
  local.get $value
  local.get $fromIndex
  call $~lib/array/Array<i32>#indexOf
  i32.const 0
  i32.ge_s
  return
 )
 (func $~lib/array/Array<f32>#includes (type $i32_f32_i32_=>_i32) (param $this i32) (param $value f32) (param $fromIndex i32) (result i32)
  (local $len i32)
  (local $4 i32)
  (local $5 i32)
  (local $ptr i32)
  (local $7 i32)
  (local $elem f32)
  i32.const 1
  drop
  local.get $this
  i32.load $0 offset=12
  local.set $len
  local.get $len
  i32.const 0
  i32.eq
  if (result i32)
   i32.const 1
  else
   local.get $fromIndex
   local.get $len
   i32.ge_s
  end
  if
   i32.const 0
   return
  end
  local.get $fromIndex
  i32.const 0
  i32.lt_s
  if
   local.get $len
   local.get $fromIndex
   i32.add
   local.tee $4
   i32.const 0
   local.tee $5
   local.get $4
   local.get $5
   i32.gt_s
   select
   local.set $fromIndex
  end
  local.get $this
  i32.load $0 offset=4
  local.set $ptr
  loop $while-continue|0
   local.get $fromIndex
   local.get $len
   i32.lt_s
   local.set $7
   local.get $7
   if
    local.get $ptr
    local.get $fromIndex
    i32.const 2
    i32.shl
    i32.add
    f32.load $0
    local.set $elem
    local.get $elem
    local.get $value
    f32.eq
    if (result i32)
     i32.const 1
    else
     local.get $elem
     local.get $elem
     f32.ne
     local.get $value
     local.get $value
     f32.ne
     i32.and
    end
    if
     i32.const 1
     return
    end
    local.get $fromIndex
    i32.const 1
    i32.add
    local.set $fromIndex
    br $while-continue|0
   end
  end
  i32.const 0
  return
 )
 (func $~lib/array/Array<f64>#includes (type $i32_f64_i32_=>_i32) (param $this i32) (param $value f64) (param $fromIndex i32) (result i32)
  (local $len i32)
  (local $4 i32)
  (local $5 i32)
  (local $ptr i32)
  (local $7 i32)
  (local $elem f64)
  i32.const 1
  drop
  local.get $this
  i32.load $0 offset=12
  local.set $len
  local.get $len
  i32.const 0
  i32.eq
  if (result i32)
   i32.const 1
  else
   local.get $fromIndex
   local.get $len
   i32.ge_s
  end
  if
   i32.const 0
   return
  end
  local.get $fromIndex
  i32.const 0
  i32.lt_s
  if
   local.get $len
   local.get $fromIndex
   i32.add
   local.tee $4
   i32.const 0
   local.tee $5
   local.get $4
   local.get $5
   i32.gt_s
   select
   local.set $fromIndex
  end
  local.get $this
  i32.load $0 offset=4
  local.set $ptr
  loop $while-continue|0
   local.get $fromIndex
   local.get $len
   i32.lt_s
   local.set $7
   local.get $7
   if
    local.get $ptr
    local.get $fromIndex
    i32.const 3
    i32.shl
    i32.add
    f64.load $0
    local.set $elem
    local.get $elem
    local.get $value
    f64.eq
    if (result i32)
     i32.const 1
    else
     local.get $elem
     local.get $elem
     f64.ne
     local.get $value
     local.get $value
     f64.ne
     i32.and
    end
    if
     i32.const 1
     return
    end
    local.get $fromIndex
    i32.const 1
    i32.add
    local.set $fromIndex
    br $while-continue|0
   end
  end
  i32.const 0
  return
 )
 (func $~lib/array/Array<std/array/Ref|null>#__uset (type $i32_i32_i32_=>_none) (param $this i32) (param $index i32) (param $value i32)
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store $0
  i32.const 1
  drop
  local.get $this
  local.get $value
  i32.const 1
  call $~lib/rt/itcms/__link
 )
 (func $~lib/array/Array<std/array/Ref|null>#set:length_ (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=12
 )
 (func $~lib/array/Array<std/array/Ref|null>#get:length (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/array/Array<i32>#__uset (type $i32_i32_i32_=>_none) (param $this i32) (param $index i32) (param $value i32)
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store $0
  i32.const 0
  drop
 )
 (func $~lib/array/Array<i32>#__set (type $i32_i32_i32_=>_none) (param $this i32) (param $index i32) (param $value i32)
  local.get $index
  local.get $this
  i32.load $0 offset=12
  i32.ge_u
  if
   local.get $index
   i32.const 0
   i32.lt_s
   if
    unreachable
   end
   local.get $this
   local.get $index
   i32.const 1
   i32.add
   i32.const 2
   i32.const 1
   call $~lib/array/ensureCapacity
   local.get $this
   local.get $index
   i32.const 1
   i32.add
   call $~lib/array/Array<i32>#set:length_
  end
  local.get $this
  local.get $index
  local.get $value
  call $~lib/array/Array<i32>#__uset
 )
 (func $start:std/array~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 0
  i32.eq
 )
 (func $~lib/array/Array<i32>#findIndex (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $i i32)
  (local $len i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  i32.const 0
  local.set $i
  local.get $this
  i32.load $0 offset=12
  local.set $len
  loop $for-loop|0
   local.get $i
   local.get $len
   local.tee $4
   local.get $this
   i32.load $0 offset=12
   local.tee $5
   local.get $4
   local.get $5
   i32.lt_s
   select
   i32.lt_s
   local.set $6
   local.get $6
   if
    local.get $this
    i32.load $0 offset=4
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.get $i
    local.get $this
    i32.const 3
    global.set $~argumentsLength
    local.get $fn
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    if
     local.get $i
     return
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  i32.const -1
 )
 (func $start:std/array~anonymous|1 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 1
  i32.eq
 )
 (func $start:std/array~anonymous|2 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 100
  i32.eq
 )
 (func $start:std/array~anonymous|3 (type $i32_i32_i32_=>_i32) (param $value i32) (param $_ i32) (param $array i32) (result i32)
  local.get $array
  i32.const 100
  call $~lib/array/Array<i32>#push
  drop
  local.get $value
  i32.const 100
  i32.eq
 )
 (func $start:std/array~anonymous|4 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 100
  i32.eq
 )
 (func $start:std/array~anonymous|5 (type $i32_i32_i32_=>_i32) (param $value i32) (param $_ i32) (param $array i32) (result i32)
  local.get $array
  call $~lib/array/Array<i32>#pop
  drop
  local.get $value
  i32.const 100
  i32.eq
 )
 (func $start:std/array~anonymous|6 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 0
  i32.eq
 )
 (func $~lib/array/Array<i32>#findLastIndex (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $i i32)
  (local $3 i32)
  local.get $this
  i32.load $0 offset=12
  i32.const 1
  i32.sub
  local.set $i
  loop $for-loop|0
   local.get $i
   i32.const 0
   i32.ge_s
   local.set $3
   local.get $3
   if
    local.get $this
    i32.load $0 offset=4
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.get $i
    local.get $this
    i32.const 3
    global.set $~argumentsLength
    local.get $fn
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    if
     local.get $i
     return
    end
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  i32.const -1
 )
 (func $start:std/array~anonymous|7 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 1
  i32.eq
 )
 (func $start:std/array~anonymous|8 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 100
  i32.eq
 )
 (func $start:std/array~anonymous|9 (type $i32_i32_i32_=>_i32) (param $value i32) (param $_ i32) (param $array i32) (result i32)
  local.get $array
  call $~lib/array/Array<i32>#pop
  drop
  local.get $value
  i32.const 100
  i32.eq
 )
 (func $start:std/array~anonymous|10 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 0
  i32.ge_s
 )
 (func $~lib/array/Array<i32>#every (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $i i32)
  (local $len i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  i32.const 0
  local.set $i
  local.get $this
  i32.load $0 offset=12
  local.set $len
  loop $for-loop|0
   local.get $i
   local.get $len
   local.tee $4
   local.get $this
   i32.load $0 offset=12
   local.tee $5
   local.get $4
   local.get $5
   i32.lt_s
   select
   i32.lt_s
   local.set $6
   local.get $6
   if
    local.get $this
    i32.load $0 offset=4
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.get $i
    local.get $this
    i32.const 3
    global.set $~argumentsLength
    local.get $fn
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    i32.eqz
    if
     i32.const 0
     return
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  i32.const 1
 )
 (func $start:std/array~anonymous|11 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 0
  i32.le_s
 )
 (func $start:std/array~anonymous|12 (type $i32_i32_i32_=>_i32) (param $value i32) (param $_ i32) (param $array i32) (result i32)
  local.get $array
  i32.const 100
  call $~lib/array/Array<i32>#push
  drop
  local.get $value
  i32.const 10
  i32.lt_s
 )
 (func $start:std/array~anonymous|13 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 10
  i32.lt_s
 )
 (func $start:std/array~anonymous|14 (type $i32_i32_i32_=>_i32) (param $value i32) (param $_ i32) (param $array i32) (result i32)
  local.get $array
  call $~lib/array/Array<i32>#pop
  drop
  local.get $value
  i32.const 3
  i32.lt_s
 )
 (func $start:std/array~anonymous|15 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 3
  i32.ge_s
 )
 (func $~lib/array/Array<i32>#some (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $i i32)
  (local $len i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  i32.const 0
  local.set $i
  local.get $this
  i32.load $0 offset=12
  local.set $len
  loop $for-loop|0
   local.get $i
   local.get $len
   local.tee $4
   local.get $this
   i32.load $0 offset=12
   local.tee $5
   local.get $4
   local.get $5
   i32.lt_s
   select
   i32.lt_s
   local.set $6
   local.get $6
   if
    local.get $this
    i32.load $0 offset=4
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.get $i
    local.get $this
    i32.const 3
    global.set $~argumentsLength
    local.get $fn
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    if
     i32.const 1
     return
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  i32.const 0
 )
 (func $start:std/array~anonymous|16 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const -1
  i32.le_s
 )
 (func $start:std/array~anonymous|17 (type $i32_i32_i32_=>_i32) (param $value i32) (param $_ i32) (param $array i32) (result i32)
  local.get $array
  i32.const 100
  call $~lib/array/Array<i32>#push
  drop
  local.get $value
  i32.const 10
  i32.gt_s
 )
 (func $start:std/array~anonymous|18 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 10
  i32.gt_s
 )
 (func $start:std/array~anonymous|19 (type $i32_i32_i32_=>_i32) (param $value i32) (param $_ i32) (param $array i32) (result i32)
  local.get $array
  call $~lib/array/Array<i32>#pop
  drop
  local.get $value
  i32.const 3
  i32.gt_s
 )
 (func $start:std/array~anonymous|20 (type $i32_i32_i32_=>_none) (param $value i32) (param $$1 i32) (param $$2 i32)
  global.get $std/array/i
  local.get $value
  i32.add
  global.set $std/array/i
 )
 (func $~lib/array/Array<i32>#forEach (type $i32_i32_=>_none) (param $this i32) (param $fn i32)
  (local $i i32)
  (local $len i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  i32.const 0
  local.set $i
  local.get $this
  i32.load $0 offset=12
  local.set $len
  loop $for-loop|0
   local.get $i
   local.get $len
   local.tee $4
   local.get $this
   i32.load $0 offset=12
   local.tee $5
   local.get $4
   local.get $5
   i32.lt_s
   select
   i32.lt_s
   local.set $6
   local.get $6
   if
    local.get $this
    i32.load $0 offset=4
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.get $i
    local.get $this
    i32.const 3
    global.set $~argumentsLength
    local.get $fn
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_none)
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $start:std/array~anonymous|21 (type $i32_i32_i32_=>_none) (param $value i32) (param $_ i32) (param $array i32)
  local.get $array
  i32.const 100
  call $~lib/array/Array<i32>#push
  drop
  global.get $std/array/i
  local.get $value
  i32.add
  global.set $std/array/i
 )
 (func $start:std/array~anonymous|22 (type $i32_i32_i32_=>_none) (param $value i32) (param $$1 i32) (param $$2 i32)
  global.get $std/array/i
  local.get $value
  i32.add
  global.set $std/array/i
 )
 (func $start:std/array~anonymous|23 (type $i32_i32_i32_=>_none) (param $value i32) (param $_ i32) (param $array i32)
  local.get $array
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/i
  local.get $value
  i32.add
  global.set $std/array/i
 )
 (func $start:std/array~anonymous|24 (type $i32_i32_i32_=>_none) (param $value i32) (param $index i32) (param $array i32)
  (local $i i32)
  (local $4 i32)
  (local $i|5 i32)
  (local $6 i32)
  (local $i|7 i32)
  (local $8 i32)
  (local $i|9 i32)
  (local $10 i32)
  local.get $index
  i32.const 0
  i32.eq
  if
   i32.const 0
   local.set $i
   loop $for-loop|0
    local.get $i
    i32.const 4
    i32.lt_s
    local.set $4
    local.get $4
    if
     local.get $array
     call $~lib/array/Array<i32>#pop
     drop
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   i32.const 0
   local.set $i|5
   loop $for-loop|1
    local.get $i|5
    i32.const 100
    i32.lt_s
    local.set $6
    local.get $6
    if
     local.get $array
     i32.const 100
     local.get $i|5
     i32.add
     call $~lib/array/Array<i32>#push
     drop
     local.get $i|5
     i32.const 1
     i32.add
     local.set $i|5
     br $for-loop|1
    end
   end
   i32.const 0
   local.set $i|7
   loop $for-loop|2
    local.get $i|7
    i32.const 100
    i32.lt_s
    local.set $8
    local.get $8
    if
     local.get $array
     call $~lib/array/Array<i32>#pop
     drop
     local.get $i|7
     i32.const 1
     i32.add
     local.set $i|7
     br $for-loop|2
    end
   end
   i32.const 0
   local.set $i|9
   loop $for-loop|3
    local.get $i|9
    i32.const 100
    i32.lt_s
    local.set $10
    local.get $10
    if
     local.get $array
     local.get $i|9
     i32.const 200
     i32.add
     call $~lib/array/Array<i32>#push
     drop
     local.get $i|9
     i32.const 1
     i32.add
     local.set $i|9
     br $for-loop|3
    end
   end
  end
  local.get $index
  i32.const 2
  i32.eq
  if
   local.get $value
   i32.const 202
   i32.eq
   i32.eqz
   if
    unreachable
   end
  end
 )
 (func $~lib/util/number/decimalCount32 (type $i32_=>_i32) (param $value i32) (result i32)
  local.get $value
  i32.const 100000
  i32.lt_u
  if
   local.get $value
   i32.const 100
   i32.lt_u
   if
    i32.const 1
    local.get $value
    i32.const 10
    i32.ge_u
    i32.add
    return
   else
    i32.const 3
    local.get $value
    i32.const 10000
    i32.ge_u
    i32.add
    local.get $value
    i32.const 1000
    i32.ge_u
    i32.add
    return
   end
   unreachable
  else
   local.get $value
   i32.const 10000000
   i32.lt_u
   if
    i32.const 6
    local.get $value
    i32.const 1000000
    i32.ge_u
    i32.add
    return
   else
    i32.const 8
    local.get $value
    i32.const 1000000000
    i32.ge_u
    i32.add
    local.get $value
    i32.const 100000000
    i32.ge_u
    i32.add
    return
   end
   unreachable
  end
  unreachable
 )
 (func $start:std/array~anonymous|25 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  (local $this i32)
  (local $value|4 i32)
  (local $sign i32)
  (local $decimals i32)
  (local $out i32)
  (local $end i32)
  (local $num i32)
  (local $t i32)
  (local $r i32)
  (local $end|12 i32)
  (local $num|13 i32)
  (local $t|14 i32)
  (local $r|15 i32)
  (local $end|16 i32)
  (local $num|17 i32)
  (local $t|18 i32)
  (local $r|19 i32)
  (local $end|20 i32)
  (local $num|21 i32)
  (local $t|22 i32)
  (local $r|23 i32)
  (local $end|24 i32)
  (local $num|25 i32)
  (local $t|26 i32)
  (local $r|27 i32)
  (local $end|28 i32)
  (local $num|29 i32)
  (local $t|30 i32)
  (local $r|31 i32)
  (local $end|32 i32)
  (local $num|33 i32)
  (local $t|34 i32)
  (local $r|35 i32)
  (local $end|36 i32)
  (local $num|37 i32)
  (local $t|38 i32)
  (local $r|39 i32)
  (local $end|40 i32)
  (local $num|41 i32)
  (local $t|42 i32)
  (local $r|43 i32)
  (local $end|44 i32)
  (local $num|45 i32)
  local.get $value
  local.set $this
  block $~lib/util/number/i32toa|inlined.0 (result i32)
   local.get $this
   local.set $value|4
   local.get $value|4
   i32.eqz
   if
    i32.const 6032
    br $~lib/util/number/i32toa|inlined.0
   end
   local.get $value|4
   i32.const 31
   i32.shr_u
   local.set $sign
   local.get $sign
   if
    i32.const 0
    local.get $value|4
    i32.sub
    local.set $value|4
   end
   local.get $value|4
   call $~lib/util/number/decimalCount32
   local.set $decimals
   local.get $sign
   local.get $decimals
   i32.add
   i32.const 1
   call $~lib/rt/itcms/__new
   local.set $out
   local.get $out
   local.get $sign
   i32.add
   local.get $decimals
   i32.add
   local.set $end
   local.get $value|4
   local.set $num
   local.get $num
   i32.const 10
   i32.div_u
   local.set $t
   local.get $num
   i32.const 10
   i32.rem_u
   local.set $r
   local.get $end
   i32.const 1
   i32.sub
   local.set $end
   local.get $end
   i32.const 48
   local.get $r
   i32.add
   i32.store8 $0
   local.get $t
   if
    local.get $end
    local.set $end|12
    local.get $t
    local.set $num|13
    local.get $num|13
    i32.const 10
    i32.div_u
    local.set $t|14
    local.get $num|13
    i32.const 10
    i32.rem_u
    local.set $r|15
    local.get $end|12
    i32.const 1
    i32.sub
    local.set $end|12
    local.get $end|12
    i32.const 48
    local.get $r|15
    i32.add
    i32.store8 $0
    local.get $t|14
    if
     local.get $end|12
     local.set $end|16
     local.get $t|14
     local.set $num|17
     local.get $num|17
     i32.const 10
     i32.div_u
     local.set $t|18
     local.get $num|17
     i32.const 10
     i32.rem_u
     local.set $r|19
     local.get $end|16
     i32.const 1
     i32.sub
     local.set $end|16
     local.get $end|16
     i32.const 48
     local.get $r|19
     i32.add
     i32.store8 $0
     local.get $t|18
     if
      local.get $end|16
      local.set $end|20
      local.get $t|18
      local.set $num|21
      local.get $num|21
      i32.const 10
      i32.div_u
      local.set $t|22
      local.get $num|21
      i32.const 10
      i32.rem_u
      local.set $r|23
      local.get $end|20
      i32.const 1
      i32.sub
      local.set $end|20
      local.get $end|20
      i32.const 48
      local.get $r|23
      i32.add
      i32.store8 $0
      local.get $t|22
      if
       local.get $end|20
       local.set $end|24
       local.get $t|22
       local.set $num|25
       local.get $num|25
       i32.const 10
       i32.div_u
       local.set $t|26
       local.get $num|25
       i32.const 10
       i32.rem_u
       local.set $r|27
       local.get $end|24
       i32.const 1
       i32.sub
       local.set $end|24
       local.get $end|24
       i32.const 48
       local.get $r|27
       i32.add
       i32.store8 $0
       local.get $t|26
       if
        local.get $end|24
        local.set $end|28
        local.get $t|26
        local.set $num|29
        local.get $num|29
        i32.const 10
        i32.div_u
        local.set $t|30
        local.get $num|29
        i32.const 10
        i32.rem_u
        local.set $r|31
        local.get $end|28
        i32.const 1
        i32.sub
        local.set $end|28
        local.get $end|28
        i32.const 48
        local.get $r|31
        i32.add
        i32.store8 $0
        local.get $t|30
        if
         local.get $end|28
         local.set $end|32
         local.get $t|30
         local.set $num|33
         local.get $num|33
         i32.const 10
         i32.div_u
         local.set $t|34
         local.get $num|33
         i32.const 10
         i32.rem_u
         local.set $r|35
         local.get $end|32
         i32.const 1
         i32.sub
         local.set $end|32
         local.get $end|32
         i32.const 48
         local.get $r|35
         i32.add
         i32.store8 $0
         local.get $t|34
         if
          local.get $end|32
          local.set $end|36
          local.get $t|34
          local.set $num|37
          local.get $num|37
          i32.const 10
          i32.div_u
          local.set $t|38
          local.get $num|37
          i32.const 10
          i32.rem_u
          local.set $r|39
          local.get $end|36
          i32.const 1
          i32.sub
          local.set $end|36
          local.get $end|36
          i32.const 48
          local.get $r|39
          i32.add
          i32.store8 $0
          local.get $t|38
          if
           local.get $end|36
           local.set $end|40
           local.get $t|38
           local.set $num|41
           local.get $num|41
           i32.const 10
           i32.div_u
           local.set $t|42
           local.get $num|41
           i32.const 10
           i32.rem_u
           local.set $r|43
           local.get $end|40
           i32.const 1
           i32.sub
           local.set $end|40
           local.get $end|40
           i32.const 48
           local.get $r|43
           i32.add
           i32.store8 $0
           local.get $t|42
           if
            local.get $end|40
            local.set $end|44
            local.get $t|42
            local.set $num|45
            local.get $end|44
            i32.const 1
            i32.sub
            local.tee $end|44
            i32.const 48
            local.get $num|45
            i32.add
            i32.store8 $0
           end
          end
         end
        end
       end
      end
     end
    end
   end
   local.get $sign
   if
    local.get $out
    i32.const 45
    i32.store8 $0
   end
   local.get $out
  end
 )
 (func $start:std/array~anonymous|26 (type $i32_i32_i32_=>_f32) (param $value i32) (param $$1 i32) (param $$2 i32) (result f32)
  local.get $value
  f32.convert_i32_s
 )
 (func $start:std/array~anonymous|27 (type $i32_i32_i32_=>_i32) (param $value i32) (param $_ i32) (param $array i32) (result i32)
  local.get $array
  i32.const 100
  call $~lib/array/Array<i32>#push
  drop
  global.get $std/array/i
  local.get $value
  i32.add
  global.set $std/array/i
  local.get $value
 )
 (func $start:std/array~anonymous|28 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  global.get $std/array/i
  local.get $value
  i32.add
  global.set $std/array/i
  local.get $value
 )
 (func $start:std/array~anonymous|29 (type $i32_i32_i32_=>_i32) (param $value i32) (param $_ i32) (param $array i32) (result i32)
  local.get $array
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/i
  local.get $value
  i32.add
  global.set $std/array/i
  local.get $value
 )
 (func $start:std/array~anonymous|30 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 2
  i32.ge_s
 )
 (func $start:std/array~anonymous|31 (type $i32_i32_i32_=>_i32) (param $value i32) (param $_ i32) (param $array i32) (result i32)
  local.get $array
  i32.const 100
  call $~lib/array/Array<i32>#push
  drop
  global.get $std/array/i
  local.get $value
  i32.add
  global.set $std/array/i
  local.get $value
  i32.const 2
  i32.ge_s
 )
 (func $start:std/array~anonymous|32 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  global.get $std/array/i
  local.get $value
  i32.add
  global.set $std/array/i
  local.get $value
  i32.const 2
  i32.ge_s
 )
 (func $start:std/array~anonymous|33 (type $i32_i32_i32_=>_i32) (param $value i32) (param $_ i32) (param $array i32) (result i32)
  local.get $array
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/i
  local.get $value
  i32.add
  global.set $std/array/i
  local.get $value
  i32.const 2
  i32.ge_s
 )
 (func $start:std/array~anonymous|34 (type $i32_i32_i32_i32_=>_i32) (param $prev i32) (param $current i32) (param $$2 i32) (param $$3 i32) (result i32)
  local.get $prev
  local.get $current
  i32.add
 )
 (func $~lib/array/Array<i32>#reduce<i32> (type $i32_i32_i32_=>_i32) (param $this i32) (param $fn i32) (param $initialValue i32) (result i32)
  (local $acc i32)
  (local $i i32)
  (local $len i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  local.get $initialValue
  local.set $acc
  i32.const 0
  local.set $i
  local.get $this
  i32.load $0 offset=12
  local.set $len
  loop $for-loop|0
   local.get $i
   local.get $len
   local.tee $6
   local.get $this
   i32.load $0 offset=12
   local.tee $7
   local.get $6
   local.get $7
   i32.lt_s
   select
   i32.lt_s
   local.set $8
   local.get $8
   if
    local.get $acc
    local.get $this
    i32.load $0 offset=4
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.get $i
    local.get $this
    i32.const 4
    global.set $~argumentsLength
    local.get $fn
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
    local.set $acc
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $acc
 )
 (func $start:std/array~anonymous|35 (type $i32_i32_i32_i32_=>_i32) (param $prev i32) (param $current i32) (param $$2 i32) (param $$3 i32) (result i32)
  local.get $prev
  local.get $current
  i32.add
 )
 (func $start:std/array~anonymous|36 (type $i32_i32_i32_i32_=>_i32) (param $prev i32) (param $current i32) (param $$2 i32) (param $$3 i32) (result i32)
  local.get $prev
  if (result i32)
   i32.const 1
  else
   local.get $current
   i32.const 2
   i32.gt_s
  end
 )
 (func $~lib/array/Array<i32>#reduce<bool> (type $i32_i32_i32_=>_i32) (param $this i32) (param $fn i32) (param $initialValue i32) (result i32)
  (local $acc i32)
  (local $i i32)
  (local $len i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  local.get $initialValue
  local.set $acc
  i32.const 0
  local.set $i
  local.get $this
  i32.load $0 offset=12
  local.set $len
  loop $for-loop|0
   local.get $i
   local.get $len
   local.tee $6
   local.get $this
   i32.load $0 offset=12
   local.tee $7
   local.get $6
   local.get $7
   i32.lt_s
   select
   i32.lt_s
   local.set $8
   local.get $8
   if
    local.get $acc
    local.get $this
    i32.load $0 offset=4
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.get $i
    local.get $this
    i32.const 4
    global.set $~argumentsLength
    local.get $fn
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
    local.set $acc
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $acc
 )
 (func $start:std/array~anonymous|37 (type $i32_i32_i32_i32_=>_i32) (param $prev i32) (param $current i32) (param $$2 i32) (param $$3 i32) (result i32)
  local.get $prev
  if (result i32)
   i32.const 1
  else
   local.get $current
   i32.const 100
   i32.gt_s
  end
 )
 (func $start:std/array~anonymous|38 (type $i32_i32_i32_i32_=>_i32) (param $prev i32) (param $current i32) (param $_ i32) (param $array i32) (result i32)
  local.get $array
  i32.const 1
  call $~lib/array/Array<i32>#push
  drop
  local.get $prev
  local.get $current
  i32.add
 )
 (func $start:std/array~anonymous|39 (type $i32_i32_i32_i32_=>_i32) (param $prev i32) (param $current i32) (param $$2 i32) (param $$3 i32) (result i32)
  local.get $prev
  local.get $current
  i32.add
 )
 (func $start:std/array~anonymous|40 (type $i32_i32_i32_i32_=>_i32) (param $prev i32) (param $current i32) (param $_ i32) (param $array i32) (result i32)
  local.get $array
  call $~lib/array/Array<i32>#pop
  drop
  local.get $prev
  local.get $current
  i32.add
 )
 (func $start:std/array~anonymous|41 (type $i32_i32_i32_i32_=>_i32) (param $prev i32) (param $current i32) (param $$2 i32) (param $$3 i32) (result i32)
  local.get $prev
  local.get $current
  i32.add
 )
 (func $~lib/array/Array<i32>#reduceRight<i32> (type $i32_i32_i32_=>_i32) (param $this i32) (param $fn i32) (param $initialValue i32) (result i32)
  (local $acc i32)
  (local $i i32)
  (local $5 i32)
  local.get $initialValue
  local.set $acc
  local.get $this
  i32.load $0 offset=12
  i32.const 1
  i32.sub
  local.set $i
  loop $for-loop|0
   local.get $i
   i32.const 0
   i32.ge_s
   local.set $5
   local.get $5
   if
    local.get $acc
    local.get $this
    i32.load $0 offset=4
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.get $i
    local.get $this
    i32.const 4
    global.set $~argumentsLength
    local.get $fn
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
    local.set $acc
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  local.get $acc
 )
 (func $start:std/array~anonymous|42 (type $i32_i32_i32_i32_=>_i32) (param $prev i32) (param $current i32) (param $$2 i32) (param $$3 i32) (result i32)
  local.get $prev
  local.get $current
  i32.add
 )
 (func $start:std/array~anonymous|43 (type $i32_i32_i32_i32_=>_i32) (param $prev i32) (param $current i32) (param $$2 i32) (param $$3 i32) (result i32)
  local.get $prev
  if (result i32)
   i32.const 1
  else
   local.get $current
   i32.const 2
   i32.gt_s
  end
 )
 (func $~lib/array/Array<i32>#reduceRight<bool> (type $i32_i32_i32_=>_i32) (param $this i32) (param $fn i32) (param $initialValue i32) (result i32)
  (local $acc i32)
  (local $i i32)
  (local $5 i32)
  local.get $initialValue
  local.set $acc
  local.get $this
  i32.load $0 offset=12
  i32.const 1
  i32.sub
  local.set $i
  loop $for-loop|0
   local.get $i
   i32.const 0
   i32.ge_s
   local.set $5
   local.get $5
   if
    local.get $acc
    local.get $this
    i32.load $0 offset=4
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.get $i
    local.get $this
    i32.const 4
    global.set $~argumentsLength
    local.get $fn
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
    local.set $acc
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  local.get $acc
 )
 (func $start:std/array~anonymous|44 (type $i32_i32_i32_i32_=>_i32) (param $prev i32) (param $current i32) (param $$2 i32) (param $$3 i32) (result i32)
  local.get $prev
  if (result i32)
   i32.const 1
  else
   local.get $current
   i32.const 100
   i32.gt_s
  end
 )
 (func $start:std/array~anonymous|45 (type $i32_i32_i32_i32_=>_i32) (param $prev i32) (param $current i32) (param $_ i32) (param $array i32) (result i32)
  local.get $array
  i32.const 1
  call $~lib/array/Array<i32>#push
  drop
  local.get $prev
  local.get $current
  i32.add
 )
 (func $start:std/array~anonymous|46 (type $i32_i32_i32_i32_=>_i32) (param $prev i32) (param $current i32) (param $$2 i32) (param $$3 i32) (result i32)
  local.get $prev
  local.get $current
  i32.add
 )
 (func $start:std/array~anonymous|47 (type $i32_i32_i32_i32_=>_i32) (param $prev i32) (param $current i32) (param $_ i32) (param $array i32) (result i32)
  local.get $array
  call $~lib/array/Array<i32>#pop
  drop
  local.get $prev
  local.get $current
  i32.add
 )
 (func $~lib/math/murmurHash3 (type $i64_=>_i64) (param $h i64) (result i64)
  local.get $h
  local.get $h
  i64.const 33
  i64.shr_u
  i64.xor
  local.set $h
  local.get $h
  i64.const -49064778989728563
  i64.mul
  local.set $h
  local.get $h
  local.get $h
  i64.const 33
  i64.shr_u
  i64.xor
  local.set $h
  local.get $h
  i64.const -4265267296055464877
  i64.mul
  local.set $h
  local.get $h
  local.get $h
  i64.const 33
  i64.shr_u
  i64.xor
  local.set $h
  local.get $h
 )
 (func $~lib/math/splitMix32 (type $i32_=>_i32) (param $h i32) (result i32)
  local.get $h
  i32.const 1831565813
  i32.add
  local.set $h
  local.get $h
  local.get $h
  i32.const 15
  i32.shr_u
  i32.xor
  local.get $h
  i32.const 1
  i32.or
  i32.mul
  local.set $h
  local.get $h
  local.get $h
  local.get $h
  local.get $h
  i32.const 7
  i32.shr_u
  i32.xor
  local.get $h
  i32.const 61
  i32.or
  i32.mul
  i32.add
  i32.xor
  local.set $h
  local.get $h
  local.get $h
  i32.const 14
  i32.shr_u
  i32.xor
 )
 (func $~lib/math/NativeMath.seedRandom (type $i64_=>_none) (param $value i64)
  local.get $value
  i64.const 0
  i64.eq
  if
   i64.const -7046029254386353131
   local.set $value
  end
  local.get $value
  call $~lib/math/murmurHash3
  global.set $~lib/math/random_state0_64
  global.get $~lib/math/random_state0_64
  i64.const -1
  i64.xor
  call $~lib/math/murmurHash3
  global.set $~lib/math/random_state1_64
  local.get $value
  i32.wrap_i64
  call $~lib/math/splitMix32
  global.set $~lib/math/random_state0_32
  global.get $~lib/math/random_state0_32
  call $~lib/math/splitMix32
  global.set $~lib/math/random_state1_32
  i32.const 1
  global.set $~lib/math/random_seeded
 )
 (func $std/array/Dim#set:height (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0
 )
 (func $std/array/Dim#set:width (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=4
 )
 (func $~lib/array/Array<std/array/Dim>#__uset (type $i32_i32_i32_=>_none) (param $this i32) (param $index i32) (param $value i32)
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store $0
  i32.const 1
  drop
  local.get $this
  local.get $value
  i32.const 1
  call $~lib/rt/itcms/__link
 )
 (func $~lib/util/sort/insertionSort<f32> (type $i32_i32_i32_i32_i32_=>_none) (param $ptr i32) (param $left i32) (param $right i32) (param $presorted i32) (param $comparator i32)
  (local $range i32)
  (local $i i32)
  (local $7 i32)
  (local $a f32)
  (local $b f32)
  (local $min f32)
  (local $max f32)
  (local $j i32)
  (local $13 i32)
  (local $14 i32)
  i32.const 0
  i32.const 1
  i32.ge_s
  drop
  local.get $right
  local.get $left
  i32.sub
  i32.const 1
  i32.add
  local.set $range
  local.get $left
  local.get $range
  i32.const 1
  i32.and
  local.get $presorted
  local.get $range
  local.get $presorted
  i32.sub
  i32.const 1
  i32.and
  i32.sub
  local.get $presorted
  i32.const 0
  i32.eq
  select
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $right
   i32.le_s
   local.set $7
   local.get $7
   if
    local.get $ptr
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    f32.load $0
    local.set $a
    local.get $ptr
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    f32.load $0 offset=4
    local.set $b
    local.get $b
    local.set $min
    local.get $a
    local.set $max
    local.get $a
    local.get $b
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $f32_f32_=>_i32)
    i32.const 0
    i32.le_s
    if
     local.get $a
     local.set $min
     local.get $b
     local.set $max
    end
    local.get $i
    i32.const 1
    i32.sub
    local.set $j
    block $while-break|1
     loop $while-continue|1
      local.get $j
      local.get $left
      i32.ge_s
      local.set $13
      local.get $13
      if
       local.get $ptr
       local.get $j
       i32.const 2
       i32.shl
       i32.add
       f32.load $0
       local.set $a
       local.get $a
       local.get $max
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $f32_f32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $j
        i32.const 2
        i32.shl
        i32.add
        local.get $a
        f32.store $0 offset=8
        local.get $j
        i32.const 1
        i32.sub
        local.set $j
       else
        br $while-break|1
       end
       br $while-continue|1
      end
     end
    end
    local.get $ptr
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    local.get $max
    f32.store $0 offset=8
    block $while-break|2
     loop $while-continue|2
      local.get $j
      local.get $left
      i32.ge_s
      local.set $14
      local.get $14
      if
       local.get $ptr
       local.get $j
       i32.const 2
       i32.shl
       i32.add
       f32.load $0
       local.set $a
       local.get $a
       local.get $min
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $f32_f32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $j
        i32.const 2
        i32.shl
        i32.add
        local.get $a
        f32.store $0 offset=4
        local.get $j
        i32.const 1
        i32.sub
        local.set $j
       else
        br $while-break|2
       end
       br $while-continue|2
      end
     end
    end
    local.get $ptr
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    local.get $min
    f32.store $0 offset=4
    local.get $i
    i32.const 2
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/util/sort/extendRunRight<f32> (type $i32_i32_i32_i32_=>_i32) (param $ptr i32) (param $i i32) (param $right i32) (param $comparator i32) (result i32)
  (local $j i32)
  (local $5 i32)
  (local $k i32)
  (local $7 i32)
  (local $tmp f32)
  (local $9 i32)
  local.get $i
  local.get $right
  i32.eq
  if
   local.get $i
   return
  end
  local.get $i
  local.set $j
  local.get $ptr
  local.get $j
  i32.const 2
  i32.shl
  i32.add
  f32.load $0
  local.get $ptr
  local.get $j
  i32.const 1
  i32.add
  local.tee $j
  i32.const 2
  i32.shl
  i32.add
  f32.load $0
  i32.const 2
  global.set $~argumentsLength
  local.get $comparator
  i32.load $0
  call_indirect $0 (type $f32_f32_=>_i32)
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     f32.load $0 offset=4
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     f32.load $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $f32_f32_=>_i32)
     i32.const 31
     i32.shr_u
    else
     i32.const 0
    end
    local.set $5
    local.get $5
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|0
    end
   end
   local.get $j
   local.set $k
   loop $while-continue|1
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     local.get $ptr
     local.get $i
     i32.const 2
     i32.shl
     i32.add
     f32.load $0
     local.set $tmp
     local.get $ptr
     local.get $i
     i32.const 2
     i32.shl
     i32.add
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     f32.load $0
     f32.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     local.get $tmp
     f32.store $0
     local.get $k
     i32.const 1
     i32.sub
     local.set $k
     br $while-continue|1
    end
   end
  else
   loop $while-continue|2
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     f32.load $0 offset=4
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     f32.load $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $f32_f32_=>_i32)
     i32.const 0
     i32.ge_s
    else
     i32.const 0
    end
    local.set $9
    local.get $9
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|2
    end
   end
  end
  local.get $j
 )
 (func $~lib/util/sort/nodePower (type $i32_i32_i32_i32_i32_=>_i32) (param $left i32) (param $right i32) (param $startA i32) (param $startB i32) (param $endB i32) (result i32)
  (local $n i64)
  (local $s i32)
  (local $l i32)
  (local $r i32)
  (local $a i64)
  (local $b i64)
  local.get $right
  local.get $left
  i32.sub
  i32.const 1
  i32.add
  i64.extend_i32_u
  local.set $n
  local.get $startB
  local.get $left
  i32.const 1
  i32.shl
  i32.sub
  local.set $s
  local.get $startA
  local.get $s
  i32.add
  local.set $l
  local.get $endB
  local.get $s
  i32.add
  i32.const 1
  i32.add
  local.set $r
  local.get $l
  i64.extend_i32_u
  i64.const 30
  i64.shl
  local.get $n
  i64.div_u
  local.set $a
  local.get $r
  i64.extend_i32_u
  i64.const 30
  i64.shl
  local.get $n
  i64.div_u
  local.set $b
  local.get $a
  local.get $b
  i64.xor
  i32.wrap_i64
  i32.clz
 )
 (func $~lib/util/sort/mergeRuns<f32> (type $i32_i32_i32_i32_i32_i32_=>_none) (param $ptr i32) (param $l i32) (param $m i32) (param $r i32) (param $buffer i32) (param $comparator i32)
  (local $i i32)
  (local $j i32)
  (local $t i32)
  (local $9 i32)
  (local $10 i32)
  (local $k i32)
  (local $12 i32)
  (local $a f32)
  (local $b f32)
  local.get $m
  i32.const 1
  i32.sub
  local.set $m
  local.get $r
  local.get $m
  i32.add
  local.set $t
  local.get $m
  i32.const 1
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $l
   i32.gt_s
   local.set $9
   local.get $9
   if
    local.get $buffer
    local.get $i
    i32.const 1
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    local.get $ptr
    local.get $i
    i32.const 1
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    f32.load $0
    f32.store $0
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  local.get $m
  local.set $j
  loop $for-loop|1
   local.get $j
   local.get $r
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $buffer
    local.get $t
    local.get $j
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    local.get $ptr
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    f32.load $0 offset=4
    f32.store $0
    local.get $j
    i32.const 1
    i32.add
    local.set $j
    br $for-loop|1
   end
  end
  local.get $l
  local.set $k
  loop $for-loop|2
   local.get $k
   local.get $r
   i32.le_s
   local.set $12
   local.get $12
   if
    local.get $buffer
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    f32.load $0
    local.set $a
    local.get $buffer
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    f32.load $0
    local.set $b
    local.get $a
    local.get $b
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $f32_f32_=>_i32)
    i32.const 0
    i32.lt_s
    if
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     local.get $a
     f32.store $0
     local.get $j
     i32.const 1
     i32.sub
     local.set $j
    else
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     local.get $b
     f32.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
    end
    local.get $k
    i32.const 1
    i32.add
    local.set $k
    br $for-loop|2
   end
  end
 )
 (func $~lib/util/sort/SORT<f32> (type $i32_i32_i32_=>_none) (param $ptr i32) (param $len i32) (param $comparator i32)
  (local $3 i32)
  (local $a f32)
  (local $b f32)
  (local $c i32)
  (local $a|7 f32)
  (local $b|8 f32)
  (local $c|9 i32)
  (local $n i32)
  (local $lgPlus2 i32)
  (local $lgPlus2Size i32)
  (local $leftRunStartBuf i32)
  (local $leftRunEndBuf i32)
  (local $i i32)
  (local $16 i32)
  (local $buffer i32)
  (local $hi i32)
  (local $endA i32)
  (local $lenA i32)
  (local $21 i32)
  (local $22 i32)
  (local $top i32)
  (local $startA i32)
  (local $25 i32)
  (local $startB i32)
  (local $endB i32)
  (local $lenB i32)
  (local $29 i32)
  (local $30 i32)
  (local $k i32)
  (local $i|32 i32)
  (local $33 i32)
  (local $start i32)
  (local $i|35 i32)
  (local $36 i32)
  (local $start|37 i32)
  local.get $len
  i32.const 48
  i32.le_s
  if
   local.get $len
   i32.const 1
   i32.le_s
   if
    return
   end
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   block $break|0
    block $case1|0
     block $case0|0
      local.get $len
      local.set $3
      local.get $3
      i32.const 3
      i32.eq
      br_if $case0|0
      local.get $3
      i32.const 2
      i32.eq
      br_if $case1|0
      br $break|0
     end
     local.get $ptr
     f32.load $0
     local.set $a
     local.get $ptr
     f32.load $0 offset=4
     local.set $b
     local.get $a
     local.get $b
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $f32_f32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $c
     local.get $ptr
     local.get $b
     local.get $a
     local.get $c
     select
     f32.store $0
     local.get $a
     local.get $b
     local.get $c
     select
     local.set $a
     local.get $ptr
     f32.load $0 offset=8
     local.set $b
     local.get $a
     local.get $b
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $f32_f32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $c
     local.get $ptr
     local.get $b
     local.get $a
     local.get $c
     select
     f32.store $0 offset=4
     local.get $ptr
     local.get $a
     local.get $b
     local.get $c
     select
     f32.store $0 offset=8
    end
    local.get $ptr
    f32.load $0
    local.set $a|7
    local.get $ptr
    f32.load $0 offset=4
    local.set $b|8
    local.get $a|7
    local.get $b|8
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $f32_f32_=>_i32)
    i32.const 0
    i32.gt_s
    local.set $c|9
    local.get $ptr
    local.get $b|8
    local.get $a|7
    local.get $c|9
    select
    f32.store $0
    local.get $ptr
    local.get $a|7
    local.get $b|8
    local.get $c|9
    select
    f32.store $0 offset=4
    return
   end
   local.get $ptr
   i32.const 0
   local.get $len
   i32.const 1
   i32.sub
   i32.const 0
   local.get $comparator
   call $~lib/util/sort/insertionSort<f32>
   return
  end
  local.get $len
  local.set $n
  i32.const 31
  local.get $n
  i32.clz
  i32.sub
  i32.const 2
  i32.add
  local.set $lgPlus2
  local.get $lgPlus2
  i32.const 2
  i32.shl
  local.set $lgPlus2Size
  local.get $lgPlus2Size
  i32.const 1
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $leftRunStartBuf
  local.get $leftRunStartBuf
  local.get $lgPlus2Size
  i32.add
  local.set $leftRunEndBuf
  i32.const 0
  local.set $i
  loop $for-loop|1
   local.get $i
   local.get $lgPlus2
   i32.lt_u
   local.set $16
   local.get $16
   if
    local.get $leftRunStartBuf
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.const -1
    i32.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|1
   end
  end
  local.get $len
  i32.const 2
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $buffer
  local.get $len
  i32.const 1
  i32.sub
  local.set $hi
  local.get $ptr
  i32.const 0
  local.get $hi
  local.get $comparator
  call $~lib/util/sort/extendRunRight<f32>
  local.set $endA
  local.get $endA
  i32.const 1
  i32.add
  local.set $lenA
  local.get $lenA
  i32.const 32
  i32.lt_s
  if
   local.get $hi
   local.tee $21
   i32.const 32
   i32.const 1
   i32.sub
   local.tee $22
   local.get $21
   local.get $22
   i32.lt_s
   select
   local.set $endA
   local.get $ptr
   i32.const 0
   local.get $endA
   local.get $lenA
   local.get $comparator
   call $~lib/util/sort/insertionSort<f32>
  end
  i32.const 0
  local.set $top
  i32.const 0
  local.set $startA
  loop $while-continue|2
   local.get $endA
   local.get $hi
   i32.lt_s
   local.set $25
   local.get $25
   if
    local.get $endA
    i32.const 1
    i32.add
    local.set $startB
    local.get $ptr
    local.get $startB
    local.get $hi
    local.get $comparator
    call $~lib/util/sort/extendRunRight<f32>
    local.set $endB
    local.get $endB
    local.get $startB
    i32.sub
    i32.const 1
    i32.add
    local.set $lenB
    local.get $lenB
    i32.const 32
    i32.lt_s
    if
     local.get $hi
     local.tee $29
     local.get $startB
     i32.const 32
     i32.add
     i32.const 1
     i32.sub
     local.tee $30
     local.get $29
     local.get $30
     i32.lt_s
     select
     local.set $endB
     local.get $ptr
     local.get $startB
     local.get $endB
     local.get $lenB
     local.get $comparator
     call $~lib/util/sort/insertionSort<f32>
    end
    i32.const 0
    local.get $hi
    local.get $startA
    local.get $startB
    local.get $endB
    call $~lib/util/sort/nodePower
    local.set $k
    local.get $top
    local.set $i|32
    loop $for-loop|3
     local.get $i|32
     local.get $k
     i32.gt_u
     local.set $33
     local.get $33
     if
      local.get $leftRunStartBuf
      local.get $i|32
      i32.const 2
      i32.shl
      i32.add
      i32.load $0
      local.set $start
      local.get $start
      i32.const -1
      i32.ne
      if
       local.get $ptr
       local.get $start
       local.get $leftRunEndBuf
       local.get $i|32
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       i32.const 1
       i32.add
       local.get $endA
       local.get $buffer
       local.get $comparator
       call $~lib/util/sort/mergeRuns<f32>
       local.get $start
       local.set $startA
       local.get $leftRunStartBuf
       local.get $i|32
       i32.const 2
       i32.shl
       i32.add
       i32.const -1
       i32.store $0
      end
      local.get $i|32
      i32.const 1
      i32.sub
      local.set $i|32
      br $for-loop|3
     end
    end
    local.get $leftRunStartBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $startA
    i32.store $0
    local.get $leftRunEndBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $endA
    i32.store $0
    local.get $startB
    local.set $startA
    local.get $endB
    local.set $endA
    local.get $k
    local.set $top
    br $while-continue|2
   end
  end
  local.get $top
  local.set $i|35
  loop $for-loop|4
   local.get $i|35
   i32.const 0
   i32.ne
   local.set $36
   local.get $36
   if
    local.get $leftRunStartBuf
    local.get $i|35
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $start|37
    local.get $start|37
    i32.const -1
    i32.ne
    if
     local.get $ptr
     local.get $start|37
     local.get $leftRunEndBuf
     local.get $i|35
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 1
     i32.add
     local.get $hi
     local.get $buffer
     local.get $comparator
     call $~lib/util/sort/mergeRuns<f32>
    end
    local.get $i|35
    i32.const 1
    i32.sub
    local.set $i|35
    br $for-loop|4
   end
  end
  local.get $buffer
  call $~lib/rt/tlsf/__free
  local.get $leftRunStartBuf
  call $~lib/rt/tlsf/__free
 )
 (func $~lib/array/Array<f32>#sort (type $i32_i32_=>_i32) (param $this i32) (param $comparator i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  i32.load $0 offset=12
  local.get $comparator
  call $~lib/util/sort/SORT<f32>
  local.get $this
 )
 (func $~lib/util/sort/COMPARATOR<f32>~anonymous|0 (type $f32_f32_=>_i32) (param $a f32) (param $b f32) (result i32)
  (local $ia i32)
  (local $ib i32)
  local.get $a
  i32.reinterpret_f32
  local.set $ia
  local.get $b
  i32.reinterpret_f32
  local.set $ib
  local.get $ia
  local.get $ia
  i32.const 31
  i32.shr_s
  i32.const 1
  i32.shr_u
  i32.xor
  local.set $ia
  local.get $ib
  local.get $ib
  i32.const 31
  i32.shr_s
  i32.const 1
  i32.shr_u
  i32.xor
  local.set $ib
  local.get $ia
  local.get $ib
  i32.gt_s
  local.get $ia
  local.get $ib
  i32.lt_s
  i32.sub
 )
 (func $~lib/util/sort/insertionSort<f64> (type $i32_i32_i32_i32_i32_=>_none) (param $ptr i32) (param $left i32) (param $right i32) (param $presorted i32) (param $comparator i32)
  (local $range i32)
  (local $i i32)
  (local $7 i32)
  (local $a f64)
  (local $b f64)
  (local $min f64)
  (local $max f64)
  (local $j i32)
  (local $13 i32)
  (local $14 i32)
  i32.const 0
  i32.const 1
  i32.ge_s
  drop
  local.get $right
  local.get $left
  i32.sub
  i32.const 1
  i32.add
  local.set $range
  local.get $left
  local.get $range
  i32.const 1
  i32.and
  local.get $presorted
  local.get $range
  local.get $presorted
  i32.sub
  i32.const 1
  i32.and
  i32.sub
  local.get $presorted
  i32.const 0
  i32.eq
  select
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $right
   i32.le_s
   local.set $7
   local.get $7
   if
    local.get $ptr
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    f64.load $0
    local.set $a
    local.get $ptr
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    f64.load $0 offset=8
    local.set $b
    local.get $b
    local.set $min
    local.get $a
    local.set $max
    local.get $a
    local.get $b
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $f64_f64_=>_i32)
    i32.const 0
    i32.le_s
    if
     local.get $a
     local.set $min
     local.get $b
     local.set $max
    end
    local.get $i
    i32.const 1
    i32.sub
    local.set $j
    block $while-break|1
     loop $while-continue|1
      local.get $j
      local.get $left
      i32.ge_s
      local.set $13
      local.get $13
      if
       local.get $ptr
       local.get $j
       i32.const 3
       i32.shl
       i32.add
       f64.load $0
       local.set $a
       local.get $a
       local.get $max
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $f64_f64_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $j
        i32.const 3
        i32.shl
        i32.add
        local.get $a
        f64.store $0 offset=16
        local.get $j
        i32.const 1
        i32.sub
        local.set $j
       else
        br $while-break|1
       end
       br $while-continue|1
      end
     end
    end
    local.get $ptr
    local.get $j
    i32.const 3
    i32.shl
    i32.add
    local.get $max
    f64.store $0 offset=16
    block $while-break|2
     loop $while-continue|2
      local.get $j
      local.get $left
      i32.ge_s
      local.set $14
      local.get $14
      if
       local.get $ptr
       local.get $j
       i32.const 3
       i32.shl
       i32.add
       f64.load $0
       local.set $a
       local.get $a
       local.get $min
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $f64_f64_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $j
        i32.const 3
        i32.shl
        i32.add
        local.get $a
        f64.store $0 offset=8
        local.get $j
        i32.const 1
        i32.sub
        local.set $j
       else
        br $while-break|2
       end
       br $while-continue|2
      end
     end
    end
    local.get $ptr
    local.get $j
    i32.const 3
    i32.shl
    i32.add
    local.get $min
    f64.store $0 offset=8
    local.get $i
    i32.const 2
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/util/sort/extendRunRight<f64> (type $i32_i32_i32_i32_=>_i32) (param $ptr i32) (param $i i32) (param $right i32) (param $comparator i32) (result i32)
  (local $j i32)
  (local $5 i32)
  (local $k i32)
  (local $7 i32)
  (local $tmp f64)
  (local $9 i32)
  local.get $i
  local.get $right
  i32.eq
  if
   local.get $i
   return
  end
  local.get $i
  local.set $j
  local.get $ptr
  local.get $j
  i32.const 3
  i32.shl
  i32.add
  f64.load $0
  local.get $ptr
  local.get $j
  i32.const 1
  i32.add
  local.tee $j
  i32.const 3
  i32.shl
  i32.add
  f64.load $0
  i32.const 2
  global.set $~argumentsLength
  local.get $comparator
  i32.load $0
  call_indirect $0 (type $f64_f64_=>_i32)
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 3
     i32.shl
     i32.add
     f64.load $0 offset=8
     local.get $ptr
     local.get $j
     i32.const 3
     i32.shl
     i32.add
     f64.load $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $f64_f64_=>_i32)
     i32.const 31
     i32.shr_u
    else
     i32.const 0
    end
    local.set $5
    local.get $5
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|0
    end
   end
   local.get $j
   local.set $k
   loop $while-continue|1
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     local.get $ptr
     local.get $i
     i32.const 3
     i32.shl
     i32.add
     f64.load $0
     local.set $tmp
     local.get $ptr
     local.get $i
     i32.const 3
     i32.shl
     i32.add
     local.get $ptr
     local.get $k
     i32.const 3
     i32.shl
     i32.add
     f64.load $0
     f64.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     local.get $ptr
     local.get $k
     i32.const 3
     i32.shl
     i32.add
     local.get $tmp
     f64.store $0
     local.get $k
     i32.const 1
     i32.sub
     local.set $k
     br $while-continue|1
    end
   end
  else
   loop $while-continue|2
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 3
     i32.shl
     i32.add
     f64.load $0 offset=8
     local.get $ptr
     local.get $j
     i32.const 3
     i32.shl
     i32.add
     f64.load $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $f64_f64_=>_i32)
     i32.const 0
     i32.ge_s
    else
     i32.const 0
    end
    local.set $9
    local.get $9
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|2
    end
   end
  end
  local.get $j
 )
 (func $~lib/util/sort/mergeRuns<f64> (type $i32_i32_i32_i32_i32_i32_=>_none) (param $ptr i32) (param $l i32) (param $m i32) (param $r i32) (param $buffer i32) (param $comparator i32)
  (local $i i32)
  (local $j i32)
  (local $t i32)
  (local $9 i32)
  (local $10 i32)
  (local $k i32)
  (local $12 i32)
  (local $a f64)
  (local $b f64)
  local.get $m
  i32.const 1
  i32.sub
  local.set $m
  local.get $r
  local.get $m
  i32.add
  local.set $t
  local.get $m
  i32.const 1
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $l
   i32.gt_s
   local.set $9
   local.get $9
   if
    local.get $buffer
    local.get $i
    i32.const 1
    i32.sub
    i32.const 3
    i32.shl
    i32.add
    local.get $ptr
    local.get $i
    i32.const 1
    i32.sub
    i32.const 3
    i32.shl
    i32.add
    f64.load $0
    f64.store $0
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  local.get $m
  local.set $j
  loop $for-loop|1
   local.get $j
   local.get $r
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $buffer
    local.get $t
    local.get $j
    i32.sub
    i32.const 3
    i32.shl
    i32.add
    local.get $ptr
    local.get $j
    i32.const 3
    i32.shl
    i32.add
    f64.load $0 offset=8
    f64.store $0
    local.get $j
    i32.const 1
    i32.add
    local.set $j
    br $for-loop|1
   end
  end
  local.get $l
  local.set $k
  loop $for-loop|2
   local.get $k
   local.get $r
   i32.le_s
   local.set $12
   local.get $12
   if
    local.get $buffer
    local.get $j
    i32.const 3
    i32.shl
    i32.add
    f64.load $0
    local.set $a
    local.get $buffer
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    f64.load $0
    local.set $b
    local.get $a
    local.get $b
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $f64_f64_=>_i32)
    i32.const 0
    i32.lt_s
    if
     local.get $ptr
     local.get $k
     i32.const 3
     i32.shl
     i32.add
     local.get $a
     f64.store $0
     local.get $j
     i32.const 1
     i32.sub
     local.set $j
    else
     local.get $ptr
     local.get $k
     i32.const 3
     i32.shl
     i32.add
     local.get $b
     f64.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
    end
    local.get $k
    i32.const 1
    i32.add
    local.set $k
    br $for-loop|2
   end
  end
 )
 (func $~lib/util/sort/SORT<f64> (type $i32_i32_i32_=>_none) (param $ptr i32) (param $len i32) (param $comparator i32)
  (local $3 i32)
  (local $a f64)
  (local $b f64)
  (local $c i32)
  (local $a|7 f64)
  (local $b|8 f64)
  (local $c|9 i32)
  (local $n i32)
  (local $lgPlus2 i32)
  (local $lgPlus2Size i32)
  (local $leftRunStartBuf i32)
  (local $leftRunEndBuf i32)
  (local $i i32)
  (local $16 i32)
  (local $buffer i32)
  (local $hi i32)
  (local $endA i32)
  (local $lenA i32)
  (local $21 i32)
  (local $22 i32)
  (local $top i32)
  (local $startA i32)
  (local $25 i32)
  (local $startB i32)
  (local $endB i32)
  (local $lenB i32)
  (local $29 i32)
  (local $30 i32)
  (local $k i32)
  (local $i|32 i32)
  (local $33 i32)
  (local $start i32)
  (local $i|35 i32)
  (local $36 i32)
  (local $start|37 i32)
  local.get $len
  i32.const 48
  i32.le_s
  if
   local.get $len
   i32.const 1
   i32.le_s
   if
    return
   end
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   block $break|0
    block $case1|0
     block $case0|0
      local.get $len
      local.set $3
      local.get $3
      i32.const 3
      i32.eq
      br_if $case0|0
      local.get $3
      i32.const 2
      i32.eq
      br_if $case1|0
      br $break|0
     end
     local.get $ptr
     f64.load $0
     local.set $a
     local.get $ptr
     f64.load $0 offset=8
     local.set $b
     local.get $a
     local.get $b
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $f64_f64_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $c
     local.get $ptr
     local.get $b
     local.get $a
     local.get $c
     select
     f64.store $0
     local.get $a
     local.get $b
     local.get $c
     select
     local.set $a
     local.get $ptr
     f64.load $0 offset=16
     local.set $b
     local.get $a
     local.get $b
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $f64_f64_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $c
     local.get $ptr
     local.get $b
     local.get $a
     local.get $c
     select
     f64.store $0 offset=8
     local.get $ptr
     local.get $a
     local.get $b
     local.get $c
     select
     f64.store $0 offset=16
    end
    local.get $ptr
    f64.load $0
    local.set $a|7
    local.get $ptr
    f64.load $0 offset=8
    local.set $b|8
    local.get $a|7
    local.get $b|8
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $f64_f64_=>_i32)
    i32.const 0
    i32.gt_s
    local.set $c|9
    local.get $ptr
    local.get $b|8
    local.get $a|7
    local.get $c|9
    select
    f64.store $0
    local.get $ptr
    local.get $a|7
    local.get $b|8
    local.get $c|9
    select
    f64.store $0 offset=8
    return
   end
   local.get $ptr
   i32.const 0
   local.get $len
   i32.const 1
   i32.sub
   i32.const 0
   local.get $comparator
   call $~lib/util/sort/insertionSort<f64>
   return
  end
  local.get $len
  local.set $n
  i32.const 31
  local.get $n
  i32.clz
  i32.sub
  i32.const 2
  i32.add
  local.set $lgPlus2
  local.get $lgPlus2
  i32.const 2
  i32.shl
  local.set $lgPlus2Size
  local.get $lgPlus2Size
  i32.const 1
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $leftRunStartBuf
  local.get $leftRunStartBuf
  local.get $lgPlus2Size
  i32.add
  local.set $leftRunEndBuf
  i32.const 0
  local.set $i
  loop $for-loop|1
   local.get $i
   local.get $lgPlus2
   i32.lt_u
   local.set $16
   local.get $16
   if
    local.get $leftRunStartBuf
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.const -1
    i32.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|1
   end
  end
  local.get $len
  i32.const 3
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $buffer
  local.get $len
  i32.const 1
  i32.sub
  local.set $hi
  local.get $ptr
  i32.const 0
  local.get $hi
  local.get $comparator
  call $~lib/util/sort/extendRunRight<f64>
  local.set $endA
  local.get $endA
  i32.const 1
  i32.add
  local.set $lenA
  local.get $lenA
  i32.const 32
  i32.lt_s
  if
   local.get $hi
   local.tee $21
   i32.const 32
   i32.const 1
   i32.sub
   local.tee $22
   local.get $21
   local.get $22
   i32.lt_s
   select
   local.set $endA
   local.get $ptr
   i32.const 0
   local.get $endA
   local.get $lenA
   local.get $comparator
   call $~lib/util/sort/insertionSort<f64>
  end
  i32.const 0
  local.set $top
  i32.const 0
  local.set $startA
  loop $while-continue|2
   local.get $endA
   local.get $hi
   i32.lt_s
   local.set $25
   local.get $25
   if
    local.get $endA
    i32.const 1
    i32.add
    local.set $startB
    local.get $ptr
    local.get $startB
    local.get $hi
    local.get $comparator
    call $~lib/util/sort/extendRunRight<f64>
    local.set $endB
    local.get $endB
    local.get $startB
    i32.sub
    i32.const 1
    i32.add
    local.set $lenB
    local.get $lenB
    i32.const 32
    i32.lt_s
    if
     local.get $hi
     local.tee $29
     local.get $startB
     i32.const 32
     i32.add
     i32.const 1
     i32.sub
     local.tee $30
     local.get $29
     local.get $30
     i32.lt_s
     select
     local.set $endB
     local.get $ptr
     local.get $startB
     local.get $endB
     local.get $lenB
     local.get $comparator
     call $~lib/util/sort/insertionSort<f64>
    end
    i32.const 0
    local.get $hi
    local.get $startA
    local.get $startB
    local.get $endB
    call $~lib/util/sort/nodePower
    local.set $k
    local.get $top
    local.set $i|32
    loop $for-loop|3
     local.get $i|32
     local.get $k
     i32.gt_u
     local.set $33
     local.get $33
     if
      local.get $leftRunStartBuf
      local.get $i|32
      i32.const 2
      i32.shl
      i32.add
      i32.load $0
      local.set $start
      local.get $start
      i32.const -1
      i32.ne
      if
       local.get $ptr
       local.get $start
       local.get $leftRunEndBuf
       local.get $i|32
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       i32.const 1
       i32.add
       local.get $endA
       local.get $buffer
       local.get $comparator
       call $~lib/util/sort/mergeRuns<f64>
       local.get $start
       local.set $startA
       local.get $leftRunStartBuf
       local.get $i|32
       i32.const 2
       i32.shl
       i32.add
       i32.const -1
       i32.store $0
      end
      local.get $i|32
      i32.const 1
      i32.sub
      local.set $i|32
      br $for-loop|3
     end
    end
    local.get $leftRunStartBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $startA
    i32.store $0
    local.get $leftRunEndBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $endA
    i32.store $0
    local.get $startB
    local.set $startA
    local.get $endB
    local.set $endA
    local.get $k
    local.set $top
    br $while-continue|2
   end
  end
  local.get $top
  local.set $i|35
  loop $for-loop|4
   local.get $i|35
   i32.const 0
   i32.ne
   local.set $36
   local.get $36
   if
    local.get $leftRunStartBuf
    local.get $i|35
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $start|37
    local.get $start|37
    i32.const -1
    i32.ne
    if
     local.get $ptr
     local.get $start|37
     local.get $leftRunEndBuf
     local.get $i|35
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 1
     i32.add
     local.get $hi
     local.get $buffer
     local.get $comparator
     call $~lib/util/sort/mergeRuns<f64>
    end
    local.get $i|35
    i32.const 1
    i32.sub
    local.set $i|35
    br $for-loop|4
   end
  end
  local.get $buffer
  call $~lib/rt/tlsf/__free
  local.get $leftRunStartBuf
  call $~lib/rt/tlsf/__free
 )
 (func $~lib/array/Array<f64>#sort (type $i32_i32_=>_i32) (param $this i32) (param $comparator i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  i32.load $0 offset=12
  local.get $comparator
  call $~lib/util/sort/SORT<f64>
  local.get $this
 )
 (func $~lib/util/sort/COMPARATOR<f64>~anonymous|0 (type $f64_f64_=>_i32) (param $a f64) (param $b f64) (result i32)
  (local $ia i64)
  (local $ib i64)
  local.get $a
  i64.reinterpret_f64
  local.set $ia
  local.get $b
  i64.reinterpret_f64
  local.set $ib
  local.get $ia
  local.get $ia
  i64.const 63
  i64.shr_s
  i64.const 1
  i64.shr_u
  i64.xor
  local.set $ia
  local.get $ib
  local.get $ib
  i64.const 63
  i64.shr_s
  i64.const 1
  i64.shr_u
  i64.xor
  local.set $ib
  local.get $ia
  local.get $ib
  i64.gt_s
  local.get $ia
  local.get $ib
  i64.lt_s
  i32.sub
 )
 (func $~lib/array/Array<f64>#get:length (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/array/Array<f64>#__get (type $i32_i32_=>_f64) (param $this i32) (param $index i32) (result f64)
  (local $value f64)
  local.get $index
  local.get $this
  i32.load $0 offset=12
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 3
  i32.shl
  i32.add
  f64.load $0
  local.set $value
  i32.const 0
  drop
  local.get $value
 )
 (func $~lib/util/sort/insertionSort<i32> (type $i32_i32_i32_i32_i32_=>_none) (param $ptr i32) (param $left i32) (param $right i32) (param $presorted i32) (param $comparator i32)
  (local $range i32)
  (local $i i32)
  (local $7 i32)
  (local $a i32)
  (local $b i32)
  (local $min i32)
  (local $max i32)
  (local $j i32)
  (local $13 i32)
  (local $14 i32)
  i32.const 0
  i32.const 1
  i32.ge_s
  drop
  local.get $right
  local.get $left
  i32.sub
  i32.const 1
  i32.add
  local.set $range
  local.get $left
  local.get $range
  i32.const 1
  i32.and
  local.get $presorted
  local.get $range
  local.get $presorted
  i32.sub
  i32.const 1
  i32.and
  i32.sub
  local.get $presorted
  i32.const 0
  i32.eq
  select
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $right
   i32.le_s
   local.set $7
   local.get $7
   if
    local.get $ptr
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $a
    local.get $ptr
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0 offset=4
    local.set $b
    local.get $b
    local.set $min
    local.get $a
    local.set $max
    local.get $a
    local.get $b
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.le_s
    if
     local.get $a
     local.set $min
     local.get $b
     local.set $max
    end
    local.get $i
    i32.const 1
    i32.sub
    local.set $j
    block $while-break|1
     loop $while-continue|1
      local.get $j
      local.get $left
      i32.ge_s
      local.set $13
      local.get $13
      if
       local.get $ptr
       local.get $j
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       local.set $a
       local.get $a
       local.get $max
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $j
        i32.const 2
        i32.shl
        i32.add
        local.get $a
        i32.store $0 offset=8
        local.get $j
        i32.const 1
        i32.sub
        local.set $j
       else
        br $while-break|1
       end
       br $while-continue|1
      end
     end
    end
    local.get $ptr
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    local.get $max
    i32.store $0 offset=8
    block $while-break|2
     loop $while-continue|2
      local.get $j
      local.get $left
      i32.ge_s
      local.set $14
      local.get $14
      if
       local.get $ptr
       local.get $j
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       local.set $a
       local.get $a
       local.get $min
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $j
        i32.const 2
        i32.shl
        i32.add
        local.get $a
        i32.store $0 offset=4
        local.get $j
        i32.const 1
        i32.sub
        local.set $j
       else
        br $while-break|2
       end
       br $while-continue|2
      end
     end
    end
    local.get $ptr
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    local.get $min
    i32.store $0 offset=4
    local.get $i
    i32.const 2
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/util/sort/extendRunRight<i32> (type $i32_i32_i32_i32_=>_i32) (param $ptr i32) (param $i i32) (param $right i32) (param $comparator i32) (result i32)
  (local $j i32)
  (local $5 i32)
  (local $k i32)
  (local $7 i32)
  (local $tmp i32)
  (local $9 i32)
  local.get $i
  local.get $right
  i32.eq
  if
   local.get $i
   return
  end
  local.get $i
  local.set $j
  local.get $ptr
  local.get $j
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.get $ptr
  local.get $j
  i32.const 1
  i32.add
  local.tee $j
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  i32.const 2
  global.set $~argumentsLength
  local.get $comparator
  i32.load $0
  call_indirect $0 (type $i32_i32_=>_i32)
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     i32.load $0 offset=4
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 31
     i32.shr_u
    else
     i32.const 0
    end
    local.set $5
    local.get $5
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|0
    end
   end
   local.get $j
   local.set $k
   loop $while-continue|1
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     local.get $ptr
     local.get $i
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.set $tmp
     local.get $ptr
     local.get $i
     i32.const 2
     i32.shl
     i32.add
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     local.get $tmp
     i32.store $0
     local.get $k
     i32.const 1
     i32.sub
     local.set $k
     br $while-continue|1
    end
   end
  else
   loop $while-continue|2
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     i32.load $0 offset=4
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.ge_s
    else
     i32.const 0
    end
    local.set $9
    local.get $9
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|2
    end
   end
  end
  local.get $j
 )
 (func $~lib/util/sort/mergeRuns<i32> (type $i32_i32_i32_i32_i32_i32_=>_none) (param $ptr i32) (param $l i32) (param $m i32) (param $r i32) (param $buffer i32) (param $comparator i32)
  (local $i i32)
  (local $j i32)
  (local $t i32)
  (local $9 i32)
  (local $10 i32)
  (local $k i32)
  (local $12 i32)
  (local $a i32)
  (local $b i32)
  local.get $m
  i32.const 1
  i32.sub
  local.set $m
  local.get $r
  local.get $m
  i32.add
  local.set $t
  local.get $m
  i32.const 1
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $l
   i32.gt_s
   local.set $9
   local.get $9
   if
    local.get $buffer
    local.get $i
    i32.const 1
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    local.get $ptr
    local.get $i
    i32.const 1
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    i32.store $0
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  local.get $m
  local.set $j
  loop $for-loop|1
   local.get $j
   local.get $r
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $buffer
    local.get $t
    local.get $j
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    local.get $ptr
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    i32.load $0 offset=4
    i32.store $0
    local.get $j
    i32.const 1
    i32.add
    local.set $j
    br $for-loop|1
   end
  end
  local.get $l
  local.set $k
  loop $for-loop|2
   local.get $k
   local.get $r
   i32.le_s
   local.set $12
   local.get $12
   if
    local.get $buffer
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $a
    local.get $buffer
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $b
    local.get $a
    local.get $b
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.lt_s
    if
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     local.get $a
     i32.store $0
     local.get $j
     i32.const 1
     i32.sub
     local.set $j
    else
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     local.get $b
     i32.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
    end
    local.get $k
    i32.const 1
    i32.add
    local.set $k
    br $for-loop|2
   end
  end
 )
 (func $~lib/util/sort/SORT<i32> (type $i32_i32_i32_=>_none) (param $ptr i32) (param $len i32) (param $comparator i32)
  (local $3 i32)
  (local $a i32)
  (local $b i32)
  (local $c i32)
  (local $a|7 i32)
  (local $b|8 i32)
  (local $c|9 i32)
  (local $n i32)
  (local $lgPlus2 i32)
  (local $lgPlus2Size i32)
  (local $leftRunStartBuf i32)
  (local $leftRunEndBuf i32)
  (local $i i32)
  (local $16 i32)
  (local $buffer i32)
  (local $hi i32)
  (local $endA i32)
  (local $lenA i32)
  (local $21 i32)
  (local $22 i32)
  (local $top i32)
  (local $startA i32)
  (local $25 i32)
  (local $startB i32)
  (local $endB i32)
  (local $lenB i32)
  (local $29 i32)
  (local $30 i32)
  (local $k i32)
  (local $i|32 i32)
  (local $33 i32)
  (local $start i32)
  (local $i|35 i32)
  (local $36 i32)
  (local $start|37 i32)
  local.get $len
  i32.const 48
  i32.le_s
  if
   local.get $len
   i32.const 1
   i32.le_s
   if
    return
   end
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   block $break|0
    block $case1|0
     block $case0|0
      local.get $len
      local.set $3
      local.get $3
      i32.const 3
      i32.eq
      br_if $case0|0
      local.get $3
      i32.const 2
      i32.eq
      br_if $case1|0
      br $break|0
     end
     local.get $ptr
     i32.load $0
     local.set $a
     local.get $ptr
     i32.load $0 offset=4
     local.set $b
     local.get $a
     local.get $b
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $c
     local.get $ptr
     local.get $b
     local.get $a
     local.get $c
     select
     i32.store $0
     local.get $a
     local.get $b
     local.get $c
     select
     local.set $a
     local.get $ptr
     i32.load $0 offset=8
     local.set $b
     local.get $a
     local.get $b
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $c
     local.get $ptr
     local.get $b
     local.get $a
     local.get $c
     select
     i32.store $0 offset=4
     local.get $ptr
     local.get $a
     local.get $b
     local.get $c
     select
     i32.store $0 offset=8
    end
    local.get $ptr
    i32.load $0
    local.set $a|7
    local.get $ptr
    i32.load $0 offset=4
    local.set $b|8
    local.get $a|7
    local.get $b|8
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.gt_s
    local.set $c|9
    local.get $ptr
    local.get $b|8
    local.get $a|7
    local.get $c|9
    select
    i32.store $0
    local.get $ptr
    local.get $a|7
    local.get $b|8
    local.get $c|9
    select
    i32.store $0 offset=4
    return
   end
   local.get $ptr
   i32.const 0
   local.get $len
   i32.const 1
   i32.sub
   i32.const 0
   local.get $comparator
   call $~lib/util/sort/insertionSort<i32>
   return
  end
  local.get $len
  local.set $n
  i32.const 31
  local.get $n
  i32.clz
  i32.sub
  i32.const 2
  i32.add
  local.set $lgPlus2
  local.get $lgPlus2
  i32.const 2
  i32.shl
  local.set $lgPlus2Size
  local.get $lgPlus2Size
  i32.const 1
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $leftRunStartBuf
  local.get $leftRunStartBuf
  local.get $lgPlus2Size
  i32.add
  local.set $leftRunEndBuf
  i32.const 0
  local.set $i
  loop $for-loop|1
   local.get $i
   local.get $lgPlus2
   i32.lt_u
   local.set $16
   local.get $16
   if
    local.get $leftRunStartBuf
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.const -1
    i32.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|1
   end
  end
  local.get $len
  i32.const 2
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $buffer
  local.get $len
  i32.const 1
  i32.sub
  local.set $hi
  local.get $ptr
  i32.const 0
  local.get $hi
  local.get $comparator
  call $~lib/util/sort/extendRunRight<i32>
  local.set $endA
  local.get $endA
  i32.const 1
  i32.add
  local.set $lenA
  local.get $lenA
  i32.const 32
  i32.lt_s
  if
   local.get $hi
   local.tee $21
   i32.const 32
   i32.const 1
   i32.sub
   local.tee $22
   local.get $21
   local.get $22
   i32.lt_s
   select
   local.set $endA
   local.get $ptr
   i32.const 0
   local.get $endA
   local.get $lenA
   local.get $comparator
   call $~lib/util/sort/insertionSort<i32>
  end
  i32.const 0
  local.set $top
  i32.const 0
  local.set $startA
  loop $while-continue|2
   local.get $endA
   local.get $hi
   i32.lt_s
   local.set $25
   local.get $25
   if
    local.get $endA
    i32.const 1
    i32.add
    local.set $startB
    local.get $ptr
    local.get $startB
    local.get $hi
    local.get $comparator
    call $~lib/util/sort/extendRunRight<i32>
    local.set $endB
    local.get $endB
    local.get $startB
    i32.sub
    i32.const 1
    i32.add
    local.set $lenB
    local.get $lenB
    i32.const 32
    i32.lt_s
    if
     local.get $hi
     local.tee $29
     local.get $startB
     i32.const 32
     i32.add
     i32.const 1
     i32.sub
     local.tee $30
     local.get $29
     local.get $30
     i32.lt_s
     select
     local.set $endB
     local.get $ptr
     local.get $startB
     local.get $endB
     local.get $lenB
     local.get $comparator
     call $~lib/util/sort/insertionSort<i32>
    end
    i32.const 0
    local.get $hi
    local.get $startA
    local.get $startB
    local.get $endB
    call $~lib/util/sort/nodePower
    local.set $k
    local.get $top
    local.set $i|32
    loop $for-loop|3
     local.get $i|32
     local.get $k
     i32.gt_u
     local.set $33
     local.get $33
     if
      local.get $leftRunStartBuf
      local.get $i|32
      i32.const 2
      i32.shl
      i32.add
      i32.load $0
      local.set $start
      local.get $start
      i32.const -1
      i32.ne
      if
       local.get $ptr
       local.get $start
       local.get $leftRunEndBuf
       local.get $i|32
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       i32.const 1
       i32.add
       local.get $endA
       local.get $buffer
       local.get $comparator
       call $~lib/util/sort/mergeRuns<i32>
       local.get $start
       local.set $startA
       local.get $leftRunStartBuf
       local.get $i|32
       i32.const 2
       i32.shl
       i32.add
       i32.const -1
       i32.store $0
      end
      local.get $i|32
      i32.const 1
      i32.sub
      local.set $i|32
      br $for-loop|3
     end
    end
    local.get $leftRunStartBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $startA
    i32.store $0
    local.get $leftRunEndBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $endA
    i32.store $0
    local.get $startB
    local.set $startA
    local.get $endB
    local.set $endA
    local.get $k
    local.set $top
    br $while-continue|2
   end
  end
  local.get $top
  local.set $i|35
  loop $for-loop|4
   local.get $i|35
   i32.const 0
   i32.ne
   local.set $36
   local.get $36
   if
    local.get $leftRunStartBuf
    local.get $i|35
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $start|37
    local.get $start|37
    i32.const -1
    i32.ne
    if
     local.get $ptr
     local.get $start|37
     local.get $leftRunEndBuf
     local.get $i|35
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 1
     i32.add
     local.get $hi
     local.get $buffer
     local.get $comparator
     call $~lib/util/sort/mergeRuns<i32>
    end
    local.get $i|35
    i32.const 1
    i32.sub
    local.set $i|35
    br $for-loop|4
   end
  end
  local.get $buffer
  call $~lib/rt/tlsf/__free
  local.get $leftRunStartBuf
  call $~lib/rt/tlsf/__free
 )
 (func $~lib/array/Array<i32>#sort (type $i32_i32_=>_i32) (param $this i32) (param $comparator i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  i32.load $0 offset=12
  local.get $comparator
  call $~lib/util/sort/SORT<i32>
  local.get $this
 )
 (func $~lib/util/sort/COMPARATOR<i32>~anonymous|0 (type $i32_i32_=>_i32) (param $a i32) (param $b i32) (result i32)
  local.get $a
  local.get $b
  i32.sub
 )
 (func $~lib/util/sort/insertionSort<u32> (type $i32_i32_i32_i32_i32_=>_none) (param $ptr i32) (param $left i32) (param $right i32) (param $presorted i32) (param $comparator i32)
  (local $range i32)
  (local $i i32)
  (local $7 i32)
  (local $a i32)
  (local $b i32)
  (local $min i32)
  (local $max i32)
  (local $j i32)
  (local $13 i32)
  (local $14 i32)
  i32.const 0
  i32.const 1
  i32.ge_s
  drop
  local.get $right
  local.get $left
  i32.sub
  i32.const 1
  i32.add
  local.set $range
  local.get $left
  local.get $range
  i32.const 1
  i32.and
  local.get $presorted
  local.get $range
  local.get $presorted
  i32.sub
  i32.const 1
  i32.and
  i32.sub
  local.get $presorted
  i32.const 0
  i32.eq
  select
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $right
   i32.le_s
   local.set $7
   local.get $7
   if
    local.get $ptr
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $a
    local.get $ptr
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0 offset=4
    local.set $b
    local.get $b
    local.set $min
    local.get $a
    local.set $max
    local.get $a
    local.get $b
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.le_s
    if
     local.get $a
     local.set $min
     local.get $b
     local.set $max
    end
    local.get $i
    i32.const 1
    i32.sub
    local.set $j
    block $while-break|1
     loop $while-continue|1
      local.get $j
      local.get $left
      i32.ge_s
      local.set $13
      local.get $13
      if
       local.get $ptr
       local.get $j
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       local.set $a
       local.get $a
       local.get $max
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $j
        i32.const 2
        i32.shl
        i32.add
        local.get $a
        i32.store $0 offset=8
        local.get $j
        i32.const 1
        i32.sub
        local.set $j
       else
        br $while-break|1
       end
       br $while-continue|1
      end
     end
    end
    local.get $ptr
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    local.get $max
    i32.store $0 offset=8
    block $while-break|2
     loop $while-continue|2
      local.get $j
      local.get $left
      i32.ge_s
      local.set $14
      local.get $14
      if
       local.get $ptr
       local.get $j
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       local.set $a
       local.get $a
       local.get $min
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $j
        i32.const 2
        i32.shl
        i32.add
        local.get $a
        i32.store $0 offset=4
        local.get $j
        i32.const 1
        i32.sub
        local.set $j
       else
        br $while-break|2
       end
       br $while-continue|2
      end
     end
    end
    local.get $ptr
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    local.get $min
    i32.store $0 offset=4
    local.get $i
    i32.const 2
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/util/sort/extendRunRight<u32> (type $i32_i32_i32_i32_=>_i32) (param $ptr i32) (param $i i32) (param $right i32) (param $comparator i32) (result i32)
  (local $j i32)
  (local $5 i32)
  (local $k i32)
  (local $7 i32)
  (local $tmp i32)
  (local $9 i32)
  local.get $i
  local.get $right
  i32.eq
  if
   local.get $i
   return
  end
  local.get $i
  local.set $j
  local.get $ptr
  local.get $j
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.get $ptr
  local.get $j
  i32.const 1
  i32.add
  local.tee $j
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  i32.const 2
  global.set $~argumentsLength
  local.get $comparator
  i32.load $0
  call_indirect $0 (type $i32_i32_=>_i32)
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     i32.load $0 offset=4
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 31
     i32.shr_u
    else
     i32.const 0
    end
    local.set $5
    local.get $5
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|0
    end
   end
   local.get $j
   local.set $k
   loop $while-continue|1
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     local.get $ptr
     local.get $i
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.set $tmp
     local.get $ptr
     local.get $i
     i32.const 2
     i32.shl
     i32.add
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     local.get $tmp
     i32.store $0
     local.get $k
     i32.const 1
     i32.sub
     local.set $k
     br $while-continue|1
    end
   end
  else
   loop $while-continue|2
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     i32.load $0 offset=4
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.ge_s
    else
     i32.const 0
    end
    local.set $9
    local.get $9
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|2
    end
   end
  end
  local.get $j
 )
 (func $~lib/util/sort/mergeRuns<u32> (type $i32_i32_i32_i32_i32_i32_=>_none) (param $ptr i32) (param $l i32) (param $m i32) (param $r i32) (param $buffer i32) (param $comparator i32)
  (local $i i32)
  (local $j i32)
  (local $t i32)
  (local $9 i32)
  (local $10 i32)
  (local $k i32)
  (local $12 i32)
  (local $a i32)
  (local $b i32)
  local.get $m
  i32.const 1
  i32.sub
  local.set $m
  local.get $r
  local.get $m
  i32.add
  local.set $t
  local.get $m
  i32.const 1
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $l
   i32.gt_s
   local.set $9
   local.get $9
   if
    local.get $buffer
    local.get $i
    i32.const 1
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    local.get $ptr
    local.get $i
    i32.const 1
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    i32.store $0
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  local.get $m
  local.set $j
  loop $for-loop|1
   local.get $j
   local.get $r
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $buffer
    local.get $t
    local.get $j
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    local.get $ptr
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    i32.load $0 offset=4
    i32.store $0
    local.get $j
    i32.const 1
    i32.add
    local.set $j
    br $for-loop|1
   end
  end
  local.get $l
  local.set $k
  loop $for-loop|2
   local.get $k
   local.get $r
   i32.le_s
   local.set $12
   local.get $12
   if
    local.get $buffer
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $a
    local.get $buffer
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $b
    local.get $a
    local.get $b
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.lt_s
    if
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     local.get $a
     i32.store $0
     local.get $j
     i32.const 1
     i32.sub
     local.set $j
    else
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     local.get $b
     i32.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
    end
    local.get $k
    i32.const 1
    i32.add
    local.set $k
    br $for-loop|2
   end
  end
 )
 (func $~lib/util/sort/SORT<u32> (type $i32_i32_i32_=>_none) (param $ptr i32) (param $len i32) (param $comparator i32)
  (local $3 i32)
  (local $a i32)
  (local $b i32)
  (local $c i32)
  (local $a|7 i32)
  (local $b|8 i32)
  (local $c|9 i32)
  (local $n i32)
  (local $lgPlus2 i32)
  (local $lgPlus2Size i32)
  (local $leftRunStartBuf i32)
  (local $leftRunEndBuf i32)
  (local $i i32)
  (local $16 i32)
  (local $buffer i32)
  (local $hi i32)
  (local $endA i32)
  (local $lenA i32)
  (local $21 i32)
  (local $22 i32)
  (local $top i32)
  (local $startA i32)
  (local $25 i32)
  (local $startB i32)
  (local $endB i32)
  (local $lenB i32)
  (local $29 i32)
  (local $30 i32)
  (local $k i32)
  (local $i|32 i32)
  (local $33 i32)
  (local $start i32)
  (local $i|35 i32)
  (local $36 i32)
  (local $start|37 i32)
  local.get $len
  i32.const 48
  i32.le_s
  if
   local.get $len
   i32.const 1
   i32.le_s
   if
    return
   end
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   block $break|0
    block $case1|0
     block $case0|0
      local.get $len
      local.set $3
      local.get $3
      i32.const 3
      i32.eq
      br_if $case0|0
      local.get $3
      i32.const 2
      i32.eq
      br_if $case1|0
      br $break|0
     end
     local.get $ptr
     i32.load $0
     local.set $a
     local.get $ptr
     i32.load $0 offset=4
     local.set $b
     local.get $a
     local.get $b
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $c
     local.get $ptr
     local.get $b
     local.get $a
     local.get $c
     select
     i32.store $0
     local.get $a
     local.get $b
     local.get $c
     select
     local.set $a
     local.get $ptr
     i32.load $0 offset=8
     local.set $b
     local.get $a
     local.get $b
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $c
     local.get $ptr
     local.get $b
     local.get $a
     local.get $c
     select
     i32.store $0 offset=4
     local.get $ptr
     local.get $a
     local.get $b
     local.get $c
     select
     i32.store $0 offset=8
    end
    local.get $ptr
    i32.load $0
    local.set $a|7
    local.get $ptr
    i32.load $0 offset=4
    local.set $b|8
    local.get $a|7
    local.get $b|8
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.gt_s
    local.set $c|9
    local.get $ptr
    local.get $b|8
    local.get $a|7
    local.get $c|9
    select
    i32.store $0
    local.get $ptr
    local.get $a|7
    local.get $b|8
    local.get $c|9
    select
    i32.store $0 offset=4
    return
   end
   local.get $ptr
   i32.const 0
   local.get $len
   i32.const 1
   i32.sub
   i32.const 0
   local.get $comparator
   call $~lib/util/sort/insertionSort<u32>
   return
  end
  local.get $len
  local.set $n
  i32.const 31
  local.get $n
  i32.clz
  i32.sub
  i32.const 2
  i32.add
  local.set $lgPlus2
  local.get $lgPlus2
  i32.const 2
  i32.shl
  local.set $lgPlus2Size
  local.get $lgPlus2Size
  i32.const 1
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $leftRunStartBuf
  local.get $leftRunStartBuf
  local.get $lgPlus2Size
  i32.add
  local.set $leftRunEndBuf
  i32.const 0
  local.set $i
  loop $for-loop|1
   local.get $i
   local.get $lgPlus2
   i32.lt_u
   local.set $16
   local.get $16
   if
    local.get $leftRunStartBuf
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.const -1
    i32.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|1
   end
  end
  local.get $len
  i32.const 2
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $buffer
  local.get $len
  i32.const 1
  i32.sub
  local.set $hi
  local.get $ptr
  i32.const 0
  local.get $hi
  local.get $comparator
  call $~lib/util/sort/extendRunRight<u32>
  local.set $endA
  local.get $endA
  i32.const 1
  i32.add
  local.set $lenA
  local.get $lenA
  i32.const 32
  i32.lt_s
  if
   local.get $hi
   local.tee $21
   i32.const 32
   i32.const 1
   i32.sub
   local.tee $22
   local.get $21
   local.get $22
   i32.lt_s
   select
   local.set $endA
   local.get $ptr
   i32.const 0
   local.get $endA
   local.get $lenA
   local.get $comparator
   call $~lib/util/sort/insertionSort<u32>
  end
  i32.const 0
  local.set $top
  i32.const 0
  local.set $startA
  loop $while-continue|2
   local.get $endA
   local.get $hi
   i32.lt_s
   local.set $25
   local.get $25
   if
    local.get $endA
    i32.const 1
    i32.add
    local.set $startB
    local.get $ptr
    local.get $startB
    local.get $hi
    local.get $comparator
    call $~lib/util/sort/extendRunRight<u32>
    local.set $endB
    local.get $endB
    local.get $startB
    i32.sub
    i32.const 1
    i32.add
    local.set $lenB
    local.get $lenB
    i32.const 32
    i32.lt_s
    if
     local.get $hi
     local.tee $29
     local.get $startB
     i32.const 32
     i32.add
     i32.const 1
     i32.sub
     local.tee $30
     local.get $29
     local.get $30
     i32.lt_s
     select
     local.set $endB
     local.get $ptr
     local.get $startB
     local.get $endB
     local.get $lenB
     local.get $comparator
     call $~lib/util/sort/insertionSort<u32>
    end
    i32.const 0
    local.get $hi
    local.get $startA
    local.get $startB
    local.get $endB
    call $~lib/util/sort/nodePower
    local.set $k
    local.get $top
    local.set $i|32
    loop $for-loop|3
     local.get $i|32
     local.get $k
     i32.gt_u
     local.set $33
     local.get $33
     if
      local.get $leftRunStartBuf
      local.get $i|32
      i32.const 2
      i32.shl
      i32.add
      i32.load $0
      local.set $start
      local.get $start
      i32.const -1
      i32.ne
      if
       local.get $ptr
       local.get $start
       local.get $leftRunEndBuf
       local.get $i|32
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       i32.const 1
       i32.add
       local.get $endA
       local.get $buffer
       local.get $comparator
       call $~lib/util/sort/mergeRuns<u32>
       local.get $start
       local.set $startA
       local.get $leftRunStartBuf
       local.get $i|32
       i32.const 2
       i32.shl
       i32.add
       i32.const -1
       i32.store $0
      end
      local.get $i|32
      i32.const 1
      i32.sub
      local.set $i|32
      br $for-loop|3
     end
    end
    local.get $leftRunStartBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $startA
    i32.store $0
    local.get $leftRunEndBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $endA
    i32.store $0
    local.get $startB
    local.set $startA
    local.get $endB
    local.set $endA
    local.get $k
    local.set $top
    br $while-continue|2
   end
  end
  local.get $top
  local.set $i|35
  loop $for-loop|4
   local.get $i|35
   i32.const 0
   i32.ne
   local.set $36
   local.get $36
   if
    local.get $leftRunStartBuf
    local.get $i|35
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $start|37
    local.get $start|37
    i32.const -1
    i32.ne
    if
     local.get $ptr
     local.get $start|37
     local.get $leftRunEndBuf
     local.get $i|35
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 1
     i32.add
     local.get $hi
     local.get $buffer
     local.get $comparator
     call $~lib/util/sort/mergeRuns<u32>
    end
    local.get $i|35
    i32.const 1
    i32.sub
    local.set $i|35
    br $for-loop|4
   end
  end
  local.get $buffer
  call $~lib/rt/tlsf/__free
  local.get $leftRunStartBuf
  call $~lib/rt/tlsf/__free
 )
 (func $~lib/array/Array<u32>#sort (type $i32_i32_=>_i32) (param $this i32) (param $comparator i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  i32.load $0 offset=12
  local.get $comparator
  call $~lib/util/sort/SORT<u32>
  local.get $this
 )
 (func $~lib/util/sort/COMPARATOR<u32>~anonymous|0 (type $i32_i32_=>_i32) (param $a i32) (param $b i32) (result i32)
  local.get $a
  local.get $b
  i32.gt_u
  local.get $a
  local.get $b
  i32.lt_u
  i32.sub
 )
 (func $~lib/math/NativeMath.random (type $none_=>_f64) (result f64)
  (local $s1 i64)
  (local $s0 i64)
  (local $r i64)
  global.get $~lib/math/random_seeded
  i32.eqz
  if
   call $~lib/builtins/seed
   i64.reinterpret_f64
   call $~lib/math/NativeMath.seedRandom
  end
  global.get $~lib/math/random_state0_64
  local.set $s1
  global.get $~lib/math/random_state1_64
  local.set $s0
  local.get $s0
  global.set $~lib/math/random_state0_64
  local.get $s1
  local.get $s1
  i64.const 23
  i64.shl
  i64.xor
  local.set $s1
  local.get $s1
  local.get $s1
  i64.const 17
  i64.shr_u
  i64.xor
  local.set $s1
  local.get $s1
  local.get $s0
  i64.xor
  local.set $s1
  local.get $s1
  local.get $s0
  i64.const 26
  i64.shr_u
  i64.xor
  local.set $s1
  local.get $s1
  global.set $~lib/math/random_state1_64
  local.get $s0
  i64.const 12
  i64.shr_u
  i64.const 4607182418800017408
  i64.or
  local.set $r
  local.get $r
  f64.reinterpret_i64
  f64.const 1
  f64.sub
 )
 (func $~lib/util/sort/COMPARATOR<i32>~anonymous|1 (type $i32_i32_=>_i32) (param $a i32) (param $b i32) (result i32)
  local.get $a
  local.get $b
  i32.sub
 )
 (func $~lib/util/sort/COMPARATOR<i32>~anonymous|2 (type $i32_i32_=>_i32) (param $a i32) (param $b i32) (result i32)
  local.get $a
  local.get $b
  i32.sub
 )
 (func $~lib/util/sort/COMPARATOR<i32>~anonymous|3 (type $i32_i32_=>_i32) (param $a i32) (param $b i32) (result i32)
  local.get $a
  local.get $b
  i32.sub
 )
 (func $~lib/util/sort/COMPARATOR<i32>~anonymous|4 (type $i32_i32_=>_i32) (param $a i32) (param $b i32) (result i32)
  local.get $a
  local.get $b
  i32.sub
 )
 (func $~lib/util/sort/COMPARATOR<i32>~anonymous|5 (type $i32_i32_=>_i32) (param $a i32) (param $b i32) (result i32)
  local.get $a
  local.get $b
  i32.sub
 )
 (func $~lib/util/sort/COMPARATOR<i32>~anonymous|6 (type $i32_i32_=>_i32) (param $a i32) (param $b i32) (result i32)
  local.get $a
  local.get $b
  i32.sub
 )
 (func $~lib/util/sort/COMPARATOR<i32>~anonymous|7 (type $i32_i32_=>_i32) (param $a i32) (param $b i32) (result i32)
  local.get $a
  local.get $b
  i32.sub
 )
 (func $~lib/util/sort/COMPARATOR<i32>~anonymous|8 (type $i32_i32_=>_i32) (param $a i32) (param $b i32) (result i32)
  local.get $a
  local.get $b
  i32.sub
 )
 (func $~lib/util/sort/COMPARATOR<i32>~anonymous|9 (type $i32_i32_=>_i32) (param $a i32) (param $b i32) (result i32)
  local.get $a
  local.get $b
  i32.sub
 )
 (func $std/array/assertStableSortedForComplexObjects~anonymous|0 (type $i32_i32_=>_i32) (param $a i32) (param $b i32) (result i32)
  local.get $a
  i32.load $0
  local.get $b
  i32.load $0
  i32.sub
 )
 (func $~lib/util/sort/insertionSort<std/array/Dim> (type $i32_i32_i32_i32_i32_=>_none) (param $ptr i32) (param $left i32) (param $right i32) (param $presorted i32) (param $comparator i32)
  (local $range i32)
  (local $i i32)
  (local $7 i32)
  (local $a i32)
  (local $b i32)
  (local $min i32)
  (local $max i32)
  (local $j i32)
  (local $13 i32)
  (local $14 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  i32.const 0
  i32.const 1
  i32.ge_s
  drop
  local.get $right
  local.get $left
  i32.sub
  i32.const 1
  i32.add
  local.set $range
  local.get $left
  local.get $range
  i32.const 1
  i32.and
  local.get $presorted
  local.get $range
  local.get $presorted
  i32.sub
  i32.const 1
  i32.and
  i32.sub
  local.get $presorted
  i32.const 0
  i32.eq
  select
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $right
   i32.le_s
   local.set $7
   local.get $7
   if
    global.get $~lib/memory/__stack_pointer
    local.get $ptr
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.tee $a
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $ptr
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0 offset=4
    local.tee $b
    i32.store $0 offset=4
    local.get $b
    local.set $min
    local.get $a
    local.set $max
    local.get $a
    local.get $b
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.le_s
    if
     local.get $a
     local.set $min
     local.get $b
     local.set $max
    end
    local.get $i
    i32.const 1
    i32.sub
    local.set $j
    block $while-break|1
     loop $while-continue|1
      local.get $j
      local.get $left
      i32.ge_s
      local.set $13
      local.get $13
      if
       global.get $~lib/memory/__stack_pointer
       local.get $ptr
       local.get $j
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       local.tee $a
       i32.store $0
       local.get $a
       local.get $max
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $j
        i32.const 2
        i32.shl
        i32.add
        local.get $a
        i32.store $0 offset=8
        local.get $j
        i32.const 1
        i32.sub
        local.set $j
       else
        br $while-break|1
       end
       br $while-continue|1
      end
     end
    end
    local.get $ptr
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    local.get $max
    i32.store $0 offset=8
    block $while-break|2
     loop $while-continue|2
      local.get $j
      local.get $left
      i32.ge_s
      local.set $14
      local.get $14
      if
       global.get $~lib/memory/__stack_pointer
       local.get $ptr
       local.get $j
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       local.tee $a
       i32.store $0
       local.get $a
       local.get $min
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $j
        i32.const 2
        i32.shl
        i32.add
        local.get $a
        i32.store $0 offset=4
        local.get $j
        i32.const 1
        i32.sub
        local.set $j
       else
        br $while-break|2
       end
       br $while-continue|2
      end
     end
    end
    local.get $ptr
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    local.get $min
    i32.store $0 offset=4
    local.get $i
    i32.const 2
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/util/sort/mergeRuns<std/array/Dim> (type $i32_i32_i32_i32_i32_i32_=>_none) (param $ptr i32) (param $l i32) (param $m i32) (param $r i32) (param $buffer i32) (param $comparator i32)
  (local $i i32)
  (local $j i32)
  (local $t i32)
  (local $9 i32)
  (local $10 i32)
  (local $k i32)
  (local $12 i32)
  (local $a i32)
  (local $b i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $m
  i32.const 1
  i32.sub
  local.set $m
  local.get $r
  local.get $m
  i32.add
  local.set $t
  local.get $m
  i32.const 1
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $l
   i32.gt_s
   local.set $9
   local.get $9
   if
    local.get $buffer
    local.get $i
    i32.const 1
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    local.get $ptr
    local.get $i
    i32.const 1
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    i32.store $0
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  local.get $m
  local.set $j
  loop $for-loop|1
   local.get $j
   local.get $r
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $buffer
    local.get $t
    local.get $j
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    local.get $ptr
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    i32.load $0 offset=4
    i32.store $0
    local.get $j
    i32.const 1
    i32.add
    local.set $j
    br $for-loop|1
   end
  end
  local.get $l
  local.set $k
  loop $for-loop|2
   local.get $k
   local.get $r
   i32.le_s
   local.set $12
   local.get $12
   if
    global.get $~lib/memory/__stack_pointer
    local.get $buffer
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.tee $a
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $buffer
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.tee $b
    i32.store $0 offset=4
    local.get $a
    local.get $b
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.lt_s
    if
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     local.get $a
     i32.store $0
     local.get $j
     i32.const 1
     i32.sub
     local.set $j
    else
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     local.get $b
     i32.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
    end
    local.get $k
    i32.const 1
    i32.add
    local.set $k
    br $for-loop|2
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/util/sort/SORT<std/array/Dim> (type $i32_i32_i32_=>_none) (param $ptr i32) (param $len i32) (param $comparator i32)
  (local $3 i32)
  (local $a i32)
  (local $b i32)
  (local $c i32)
  (local $a|7 i32)
  (local $b|8 i32)
  (local $c|9 i32)
  (local $n i32)
  (local $lgPlus2 i32)
  (local $lgPlus2Size i32)
  (local $leftRunStartBuf i32)
  (local $leftRunEndBuf i32)
  (local $i i32)
  (local $16 i32)
  (local $buffer i32)
  (local $hi i32)
  (local $endA i32)
  (local $lenA i32)
  (local $21 i32)
  (local $22 i32)
  (local $top i32)
  (local $startA i32)
  (local $25 i32)
  (local $startB i32)
  (local $endB i32)
  (local $lenB i32)
  (local $29 i32)
  (local $30 i32)
  (local $k i32)
  (local $i|32 i32)
  (local $33 i32)
  (local $start i32)
  (local $i|35 i32)
  (local $36 i32)
  (local $start|37 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $len
  i32.const 48
  i32.le_s
  if
   local.get $len
   i32.const 1
   i32.le_s
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 16
    i32.add
    global.set $~lib/memory/__stack_pointer
    return
   end
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   block $break|0
    block $case1|0
     block $case0|0
      local.get $len
      local.set $3
      local.get $3
      i32.const 3
      i32.eq
      br_if $case0|0
      local.get $3
      i32.const 2
      i32.eq
      br_if $case1|0
      br $break|0
     end
     global.get $~lib/memory/__stack_pointer
     local.get $ptr
     i32.load $0
     local.tee $a
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     local.get $ptr
     i32.load $0 offset=4
     local.tee $b
     i32.store $0 offset=4
     local.get $a
     local.get $b
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $c
     local.get $ptr
     local.get $b
     local.get $a
     local.get $c
     select
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     local.get $a
     local.get $b
     local.get $c
     select
     local.tee $a
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     local.get $ptr
     i32.load $0 offset=8
     local.tee $b
     i32.store $0 offset=4
     local.get $a
     local.get $b
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $c
     local.get $ptr
     local.get $b
     local.get $a
     local.get $c
     select
     i32.store $0 offset=4
     local.get $ptr
     local.get $a
     local.get $b
     local.get $c
     select
     i32.store $0 offset=8
    end
    global.get $~lib/memory/__stack_pointer
    local.get $ptr
    i32.load $0
    local.tee $a|7
    i32.store $0 offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $ptr
    i32.load $0 offset=4
    local.tee $b|8
    i32.store $0 offset=12
    local.get $a|7
    local.get $b|8
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.gt_s
    local.set $c|9
    local.get $ptr
    local.get $b|8
    local.get $a|7
    local.get $c|9
    select
    i32.store $0
    local.get $ptr
    local.get $a|7
    local.get $b|8
    local.get $c|9
    select
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    i32.const 16
    i32.add
    global.set $~lib/memory/__stack_pointer
    return
   end
   local.get $ptr
   i32.const 0
   local.get $len
   i32.const 1
   i32.sub
   i32.const 0
   local.get $comparator
   call $~lib/util/sort/insertionSort<std/array/Dim>
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  local.get $len
  local.set $n
  i32.const 31
  local.get $n
  i32.clz
  i32.sub
  i32.const 2
  i32.add
  local.set $lgPlus2
  local.get $lgPlus2
  i32.const 2
  i32.shl
  local.set $lgPlus2Size
  local.get $lgPlus2Size
  i32.const 1
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $leftRunStartBuf
  local.get $leftRunStartBuf
  local.get $lgPlus2Size
  i32.add
  local.set $leftRunEndBuf
  i32.const 0
  local.set $i
  loop $for-loop|1
   local.get $i
   local.get $lgPlus2
   i32.lt_u
   local.set $16
   local.get $16
   if
    local.get $leftRunStartBuf
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.const -1
    i32.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|1
   end
  end
  local.get $len
  i32.const 2
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $buffer
  local.get $len
  i32.const 1
  i32.sub
  local.set $hi
  local.get $ptr
  i32.const 0
  local.get $hi
  local.get $comparator
  call $~lib/util/sort/extendRunRight<std/array/Dim>
  local.set $endA
  local.get $endA
  i32.const 1
  i32.add
  local.set $lenA
  local.get $lenA
  i32.const 32
  i32.lt_s
  if
   local.get $hi
   local.tee $21
   i32.const 32
   i32.const 1
   i32.sub
   local.tee $22
   local.get $21
   local.get $22
   i32.lt_s
   select
   local.set $endA
   local.get $ptr
   i32.const 0
   local.get $endA
   local.get $lenA
   local.get $comparator
   call $~lib/util/sort/insertionSort<std/array/Dim>
  end
  i32.const 0
  local.set $top
  i32.const 0
  local.set $startA
  loop $while-continue|2
   local.get $endA
   local.get $hi
   i32.lt_s
   local.set $25
   local.get $25
   if
    local.get $endA
    i32.const 1
    i32.add
    local.set $startB
    local.get $ptr
    local.get $startB
    local.get $hi
    local.get $comparator
    call $~lib/util/sort/extendRunRight<std/array/Dim>
    local.set $endB
    local.get $endB
    local.get $startB
    i32.sub
    i32.const 1
    i32.add
    local.set $lenB
    local.get $lenB
    i32.const 32
    i32.lt_s
    if
     local.get $hi
     local.tee $29
     local.get $startB
     i32.const 32
     i32.add
     i32.const 1
     i32.sub
     local.tee $30
     local.get $29
     local.get $30
     i32.lt_s
     select
     local.set $endB
     local.get $ptr
     local.get $startB
     local.get $endB
     local.get $lenB
     local.get $comparator
     call $~lib/util/sort/insertionSort<std/array/Dim>
    end
    i32.const 0
    local.get $hi
    local.get $startA
    local.get $startB
    local.get $endB
    call $~lib/util/sort/nodePower
    local.set $k
    local.get $top
    local.set $i|32
    loop $for-loop|3
     local.get $i|32
     local.get $k
     i32.gt_u
     local.set $33
     local.get $33
     if
      local.get $leftRunStartBuf
      local.get $i|32
      i32.const 2
      i32.shl
      i32.add
      i32.load $0
      local.set $start
      local.get $start
      i32.const -1
      i32.ne
      if
       local.get $ptr
       local.get $start
       local.get $leftRunEndBuf
       local.get $i|32
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       i32.const 1
       i32.add
       local.get $endA
       local.get $buffer
       local.get $comparator
       call $~lib/util/sort/mergeRuns<std/array/Dim>
       local.get $start
       local.set $startA
       local.get $leftRunStartBuf
       local.get $i|32
       i32.const 2
       i32.shl
       i32.add
       i32.const -1
       i32.store $0
      end
      local.get $i|32
      i32.const 1
      i32.sub
      local.set $i|32
      br $for-loop|3
     end
    end
    local.get $leftRunStartBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $startA
    i32.store $0
    local.get $leftRunEndBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $endA
    i32.store $0
    local.get $startB
    local.set $startA
    local.get $endB
    local.set $endA
    local.get $k
    local.set $top
    br $while-continue|2
   end
  end
  local.get $top
  local.set $i|35
  loop $for-loop|4
   local.get $i|35
   i32.const 0
   i32.ne
   local.set $36
   local.get $36
   if
    local.get $leftRunStartBuf
    local.get $i|35
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $start|37
    local.get $start|37
    i32.const -1
    i32.ne
    if
     local.get $ptr
     local.get $start|37
     local.get $leftRunEndBuf
     local.get $i|35
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 1
     i32.add
     local.get $hi
     local.get $buffer
     local.get $comparator
     call $~lib/util/sort/mergeRuns<std/array/Dim>
    end
    local.get $i|35
    i32.const 1
    i32.sub
    local.set $i|35
    br $for-loop|4
   end
  end
  local.get $buffer
  call $~lib/rt/tlsf/__free
  local.get $leftRunStartBuf
  call $~lib/rt/tlsf/__free
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<std/array/Dim>#sort (type $i32_i32_=>_i32) (param $this i32) (param $comparator i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  i32.load $0 offset=12
  local.get $comparator
  call $~lib/util/sort/SORT<std/array/Dim>
  local.get $this
 )
 (func $~lib/array/Array<std/array/Dim>#get:length (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $start:std/array~anonymous|48 (type $i32_i32_=>_i32) (param $a i32) (param $b i32) (result i32)
  local.get $a
  local.get $b
  i32.sub
 )
 (func $start:std/array~anonymous|49 (type $i32_i32_=>_i32) (param $a i32) (param $b i32) (result i32)
  local.get $b
  local.get $a
  i32.sub
 )
 (func $start:std/array~anonymous|50 (type $i32_i32_=>_i32) (param $a i32) (param $b i32) (result i32)
  local.get $a
  local.get $b
  i32.sub
 )
 (func $start:std/array~anonymous|51 (type $i32_i32_=>_i32) (param $a i32) (param $b i32) (result i32)
  local.get $b
  local.get $a
  i32.sub
 )
 (func $~lib/array/Array<~lib/array/Array<i32>>#set:buffer (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/array/Array<~lib/array/Array<i32>>#set:dataStart (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=4
 )
 (func $~lib/array/Array<~lib/array/Array<i32>>#set:byteLength (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=8
 )
 (func $~lib/array/Array<~lib/array/Array<i32>>#set:length_ (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=12
 )
 (func $~lib/array/Array<~lib/array/Array<i32>>#__uset (type $i32_i32_i32_=>_none) (param $this i32) (param $index i32) (param $value i32)
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store $0
  i32.const 1
  drop
  local.get $this
  local.get $value
  i32.const 1
  call $~lib/rt/itcms/__link
 )
 (func $~lib/array/Array<~lib/array/Array<i32>>#__set (type $i32_i32_i32_=>_none) (param $this i32) (param $index i32) (param $value i32)
  local.get $index
  local.get $this
  i32.load $0 offset=12
  i32.ge_u
  if
   local.get $index
   i32.const 0
   i32.lt_s
   if
    unreachable
   end
   local.get $this
   local.get $index
   i32.const 1
   i32.add
   i32.const 2
   i32.const 1
   call $~lib/array/ensureCapacity
   local.get $this
   local.get $index
   i32.const 1
   i32.add
   call $~lib/array/Array<~lib/array/Array<i32>>#set:length_
  end
  local.get $this
  local.get $index
  local.get $value
  call $~lib/array/Array<~lib/array/Array<i32>>#__uset
 )
 (func $start:std/array~anonymous|52 (type $i32_i32_=>_i32) (param $a i32) (param $b i32) (result i32)
  local.get $a
  i32.const 0
  call $~lib/array/Array<i32>#__get
  local.get $b
  i32.const 0
  call $~lib/array/Array<i32>#__get
  i32.sub
 )
 (func $~lib/util/sort/insertionSort<~lib/array/Array<i32>> (type $i32_i32_i32_i32_i32_=>_none) (param $ptr i32) (param $left i32) (param $right i32) (param $presorted i32) (param $comparator i32)
  (local $range i32)
  (local $i i32)
  (local $7 i32)
  (local $a i32)
  (local $b i32)
  (local $min i32)
  (local $max i32)
  (local $j i32)
  (local $13 i32)
  (local $14 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  i32.const 0
  i32.const 1
  i32.ge_s
  drop
  local.get $right
  local.get $left
  i32.sub
  i32.const 1
  i32.add
  local.set $range
  local.get $left
  local.get $range
  i32.const 1
  i32.and
  local.get $presorted
  local.get $range
  local.get $presorted
  i32.sub
  i32.const 1
  i32.and
  i32.sub
  local.get $presorted
  i32.const 0
  i32.eq
  select
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $right
   i32.le_s
   local.set $7
   local.get $7
   if
    global.get $~lib/memory/__stack_pointer
    local.get $ptr
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.tee $a
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $ptr
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0 offset=4
    local.tee $b
    i32.store $0 offset=4
    local.get $b
    local.set $min
    local.get $a
    local.set $max
    local.get $a
    local.get $b
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.le_s
    if
     local.get $a
     local.set $min
     local.get $b
     local.set $max
    end
    local.get $i
    i32.const 1
    i32.sub
    local.set $j
    block $while-break|1
     loop $while-continue|1
      local.get $j
      local.get $left
      i32.ge_s
      local.set $13
      local.get $13
      if
       global.get $~lib/memory/__stack_pointer
       local.get $ptr
       local.get $j
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       local.tee $a
       i32.store $0
       local.get $a
       local.get $max
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $j
        i32.const 2
        i32.shl
        i32.add
        local.get $a
        i32.store $0 offset=8
        local.get $j
        i32.const 1
        i32.sub
        local.set $j
       else
        br $while-break|1
       end
       br $while-continue|1
      end
     end
    end
    local.get $ptr
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    local.get $max
    i32.store $0 offset=8
    block $while-break|2
     loop $while-continue|2
      local.get $j
      local.get $left
      i32.ge_s
      local.set $14
      local.get $14
      if
       global.get $~lib/memory/__stack_pointer
       local.get $ptr
       local.get $j
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       local.tee $a
       i32.store $0
       local.get $a
       local.get $min
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $j
        i32.const 2
        i32.shl
        i32.add
        local.get $a
        i32.store $0 offset=4
        local.get $j
        i32.const 1
        i32.sub
        local.set $j
       else
        br $while-break|2
       end
       br $while-continue|2
      end
     end
    end
    local.get $ptr
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    local.get $min
    i32.store $0 offset=4
    local.get $i
    i32.const 2
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/util/sort/mergeRuns<~lib/array/Array<i32>> (type $i32_i32_i32_i32_i32_i32_=>_none) (param $ptr i32) (param $l i32) (param $m i32) (param $r i32) (param $buffer i32) (param $comparator i32)
  (local $i i32)
  (local $j i32)
  (local $t i32)
  (local $9 i32)
  (local $10 i32)
  (local $k i32)
  (local $12 i32)
  (local $a i32)
  (local $b i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $m
  i32.const 1
  i32.sub
  local.set $m
  local.get $r
  local.get $m
  i32.add
  local.set $t
  local.get $m
  i32.const 1
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $l
   i32.gt_s
   local.set $9
   local.get $9
   if
    local.get $buffer
    local.get $i
    i32.const 1
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    local.get $ptr
    local.get $i
    i32.const 1
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    i32.store $0
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  local.get $m
  local.set $j
  loop $for-loop|1
   local.get $j
   local.get $r
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $buffer
    local.get $t
    local.get $j
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    local.get $ptr
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    i32.load $0 offset=4
    i32.store $0
    local.get $j
    i32.const 1
    i32.add
    local.set $j
    br $for-loop|1
   end
  end
  local.get $l
  local.set $k
  loop $for-loop|2
   local.get $k
   local.get $r
   i32.le_s
   local.set $12
   local.get $12
   if
    global.get $~lib/memory/__stack_pointer
    local.get $buffer
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.tee $a
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $buffer
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.tee $b
    i32.store $0 offset=4
    local.get $a
    local.get $b
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.lt_s
    if
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     local.get $a
     i32.store $0
     local.get $j
     i32.const 1
     i32.sub
     local.set $j
    else
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     local.get $b
     i32.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
    end
    local.get $k
    i32.const 1
    i32.add
    local.set $k
    br $for-loop|2
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/util/sort/SORT<~lib/array/Array<i32>> (type $i32_i32_i32_=>_none) (param $ptr i32) (param $len i32) (param $comparator i32)
  (local $3 i32)
  (local $a i32)
  (local $b i32)
  (local $c i32)
  (local $a|7 i32)
  (local $b|8 i32)
  (local $c|9 i32)
  (local $n i32)
  (local $lgPlus2 i32)
  (local $lgPlus2Size i32)
  (local $leftRunStartBuf i32)
  (local $leftRunEndBuf i32)
  (local $i i32)
  (local $16 i32)
  (local $buffer i32)
  (local $hi i32)
  (local $endA i32)
  (local $lenA i32)
  (local $21 i32)
  (local $22 i32)
  (local $top i32)
  (local $startA i32)
  (local $25 i32)
  (local $startB i32)
  (local $endB i32)
  (local $lenB i32)
  (local $29 i32)
  (local $30 i32)
  (local $k i32)
  (local $i|32 i32)
  (local $33 i32)
  (local $start i32)
  (local $i|35 i32)
  (local $36 i32)
  (local $start|37 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $len
  i32.const 48
  i32.le_s
  if
   local.get $len
   i32.const 1
   i32.le_s
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 16
    i32.add
    global.set $~lib/memory/__stack_pointer
    return
   end
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   block $break|0
    block $case1|0
     block $case0|0
      local.get $len
      local.set $3
      local.get $3
      i32.const 3
      i32.eq
      br_if $case0|0
      local.get $3
      i32.const 2
      i32.eq
      br_if $case1|0
      br $break|0
     end
     global.get $~lib/memory/__stack_pointer
     local.get $ptr
     i32.load $0
     local.tee $a
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     local.get $ptr
     i32.load $0 offset=4
     local.tee $b
     i32.store $0 offset=4
     local.get $a
     local.get $b
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $c
     local.get $ptr
     local.get $b
     local.get $a
     local.get $c
     select
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     local.get $a
     local.get $b
     local.get $c
     select
     local.tee $a
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     local.get $ptr
     i32.load $0 offset=8
     local.tee $b
     i32.store $0 offset=4
     local.get $a
     local.get $b
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $c
     local.get $ptr
     local.get $b
     local.get $a
     local.get $c
     select
     i32.store $0 offset=4
     local.get $ptr
     local.get $a
     local.get $b
     local.get $c
     select
     i32.store $0 offset=8
    end
    global.get $~lib/memory/__stack_pointer
    local.get $ptr
    i32.load $0
    local.tee $a|7
    i32.store $0 offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $ptr
    i32.load $0 offset=4
    local.tee $b|8
    i32.store $0 offset=12
    local.get $a|7
    local.get $b|8
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.gt_s
    local.set $c|9
    local.get $ptr
    local.get $b|8
    local.get $a|7
    local.get $c|9
    select
    i32.store $0
    local.get $ptr
    local.get $a|7
    local.get $b|8
    local.get $c|9
    select
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    i32.const 16
    i32.add
    global.set $~lib/memory/__stack_pointer
    return
   end
   local.get $ptr
   i32.const 0
   local.get $len
   i32.const 1
   i32.sub
   i32.const 0
   local.get $comparator
   call $~lib/util/sort/insertionSort<~lib/array/Array<i32>>
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  local.get $len
  local.set $n
  i32.const 31
  local.get $n
  i32.clz
  i32.sub
  i32.const 2
  i32.add
  local.set $lgPlus2
  local.get $lgPlus2
  i32.const 2
  i32.shl
  local.set $lgPlus2Size
  local.get $lgPlus2Size
  i32.const 1
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $leftRunStartBuf
  local.get $leftRunStartBuf
  local.get $lgPlus2Size
  i32.add
  local.set $leftRunEndBuf
  i32.const 0
  local.set $i
  loop $for-loop|1
   local.get $i
   local.get $lgPlus2
   i32.lt_u
   local.set $16
   local.get $16
   if
    local.get $leftRunStartBuf
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.const -1
    i32.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|1
   end
  end
  local.get $len
  i32.const 2
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $buffer
  local.get $len
  i32.const 1
  i32.sub
  local.set $hi
  local.get $ptr
  i32.const 0
  local.get $hi
  local.get $comparator
  call $~lib/util/sort/extendRunRight<~lib/array/Array<i32>>
  local.set $endA
  local.get $endA
  i32.const 1
  i32.add
  local.set $lenA
  local.get $lenA
  i32.const 32
  i32.lt_s
  if
   local.get $hi
   local.tee $21
   i32.const 32
   i32.const 1
   i32.sub
   local.tee $22
   local.get $21
   local.get $22
   i32.lt_s
   select
   local.set $endA
   local.get $ptr
   i32.const 0
   local.get $endA
   local.get $lenA
   local.get $comparator
   call $~lib/util/sort/insertionSort<~lib/array/Array<i32>>
  end
  i32.const 0
  local.set $top
  i32.const 0
  local.set $startA
  loop $while-continue|2
   local.get $endA
   local.get $hi
   i32.lt_s
   local.set $25
   local.get $25
   if
    local.get $endA
    i32.const 1
    i32.add
    local.set $startB
    local.get $ptr
    local.get $startB
    local.get $hi
    local.get $comparator
    call $~lib/util/sort/extendRunRight<~lib/array/Array<i32>>
    local.set $endB
    local.get $endB
    local.get $startB
    i32.sub
    i32.const 1
    i32.add
    local.set $lenB
    local.get $lenB
    i32.const 32
    i32.lt_s
    if
     local.get $hi
     local.tee $29
     local.get $startB
     i32.const 32
     i32.add
     i32.const 1
     i32.sub
     local.tee $30
     local.get $29
     local.get $30
     i32.lt_s
     select
     local.set $endB
     local.get $ptr
     local.get $startB
     local.get $endB
     local.get $lenB
     local.get $comparator
     call $~lib/util/sort/insertionSort<~lib/array/Array<i32>>
    end
    i32.const 0
    local.get $hi
    local.get $startA
    local.get $startB
    local.get $endB
    call $~lib/util/sort/nodePower
    local.set $k
    local.get $top
    local.set $i|32
    loop $for-loop|3
     local.get $i|32
     local.get $k
     i32.gt_u
     local.set $33
     local.get $33
     if
      local.get $leftRunStartBuf
      local.get $i|32
      i32.const 2
      i32.shl
      i32.add
      i32.load $0
      local.set $start
      local.get $start
      i32.const -1
      i32.ne
      if
       local.get $ptr
       local.get $start
       local.get $leftRunEndBuf
       local.get $i|32
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       i32.const 1
       i32.add
       local.get $endA
       local.get $buffer
       local.get $comparator
       call $~lib/util/sort/mergeRuns<~lib/array/Array<i32>>
       local.get $start
       local.set $startA
       local.get $leftRunStartBuf
       local.get $i|32
       i32.const 2
       i32.shl
       i32.add
       i32.const -1
       i32.store $0
      end
      local.get $i|32
      i32.const 1
      i32.sub
      local.set $i|32
      br $for-loop|3
     end
    end
    local.get $leftRunStartBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $startA
    i32.store $0
    local.get $leftRunEndBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $endA
    i32.store $0
    local.get $startB
    local.set $startA
    local.get $endB
    local.set $endA
    local.get $k
    local.set $top
    br $while-continue|2
   end
  end
  local.get $top
  local.set $i|35
  loop $for-loop|4
   local.get $i|35
   i32.const 0
   i32.ne
   local.set $36
   local.get $36
   if
    local.get $leftRunStartBuf
    local.get $i|35
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $start|37
    local.get $start|37
    i32.const -1
    i32.ne
    if
     local.get $ptr
     local.get $start|37
     local.get $leftRunEndBuf
     local.get $i|35
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 1
     i32.add
     local.get $hi
     local.get $buffer
     local.get $comparator
     call $~lib/util/sort/mergeRuns<~lib/array/Array<i32>>
    end
    local.get $i|35
    i32.const 1
    i32.sub
    local.set $i|35
    br $for-loop|4
   end
  end
  local.get $buffer
  call $~lib/rt/tlsf/__free
  local.get $leftRunStartBuf
  call $~lib/rt/tlsf/__free
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<~lib/array/Array<i32>>#sort (type $i32_i32_=>_i32) (param $this i32) (param $comparator i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  i32.load $0 offset=12
  local.get $comparator
  call $~lib/util/sort/SORT<~lib/array/Array<i32>>
  local.get $this
 )
 (func $~lib/array/Array<~lib/array/Array<i32>>#get:length (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/array/Array<std/array/Proxy<i32>>#set:buffer (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/array/Array<std/array/Proxy<i32>>#set:dataStart (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=4
 )
 (func $~lib/array/Array<std/array/Proxy<i32>>#set:byteLength (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=8
 )
 (func $~lib/array/Array<std/array/Proxy<i32>>#set:length_ (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=12
 )
 (func $std/array/Proxy<i32>#set:x (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0
 )
 (func $~lib/array/Array<std/array/Proxy<i32>>#__uset (type $i32_i32_i32_=>_none) (param $this i32) (param $index i32) (param $value i32)
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store $0
  i32.const 1
  drop
  local.get $this
  local.get $value
  i32.const 1
  call $~lib/rt/itcms/__link
 )
 (func $~lib/array/Array<std/array/Proxy<i32>>#__set (type $i32_i32_i32_=>_none) (param $this i32) (param $index i32) (param $value i32)
  local.get $index
  local.get $this
  i32.load $0 offset=12
  i32.ge_u
  if
   local.get $index
   i32.const 0
   i32.lt_s
   if
    unreachable
   end
   local.get $this
   local.get $index
   i32.const 1
   i32.add
   i32.const 2
   i32.const 1
   call $~lib/array/ensureCapacity
   local.get $this
   local.get $index
   i32.const 1
   i32.add
   call $~lib/array/Array<std/array/Proxy<i32>>#set:length_
  end
  local.get $this
  local.get $index
  local.get $value
  call $~lib/array/Array<std/array/Proxy<i32>>#__uset
 )
 (func $start:std/array~anonymous|53 (type $i32_i32_=>_i32) (param $a i32) (param $b i32) (result i32)
  local.get $a
  i32.load $0
  local.get $b
  i32.load $0
  i32.sub
 )
 (func $~lib/util/sort/insertionSort<std/array/Proxy<i32>> (type $i32_i32_i32_i32_i32_=>_none) (param $ptr i32) (param $left i32) (param $right i32) (param $presorted i32) (param $comparator i32)
  (local $range i32)
  (local $i i32)
  (local $7 i32)
  (local $a i32)
  (local $b i32)
  (local $min i32)
  (local $max i32)
  (local $j i32)
  (local $13 i32)
  (local $14 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  i32.const 0
  i32.const 1
  i32.ge_s
  drop
  local.get $right
  local.get $left
  i32.sub
  i32.const 1
  i32.add
  local.set $range
  local.get $left
  local.get $range
  i32.const 1
  i32.and
  local.get $presorted
  local.get $range
  local.get $presorted
  i32.sub
  i32.const 1
  i32.and
  i32.sub
  local.get $presorted
  i32.const 0
  i32.eq
  select
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $right
   i32.le_s
   local.set $7
   local.get $7
   if
    global.get $~lib/memory/__stack_pointer
    local.get $ptr
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.tee $a
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $ptr
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0 offset=4
    local.tee $b
    i32.store $0 offset=4
    local.get $b
    local.set $min
    local.get $a
    local.set $max
    local.get $a
    local.get $b
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.le_s
    if
     local.get $a
     local.set $min
     local.get $b
     local.set $max
    end
    local.get $i
    i32.const 1
    i32.sub
    local.set $j
    block $while-break|1
     loop $while-continue|1
      local.get $j
      local.get $left
      i32.ge_s
      local.set $13
      local.get $13
      if
       global.get $~lib/memory/__stack_pointer
       local.get $ptr
       local.get $j
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       local.tee $a
       i32.store $0
       local.get $a
       local.get $max
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $j
        i32.const 2
        i32.shl
        i32.add
        local.get $a
        i32.store $0 offset=8
        local.get $j
        i32.const 1
        i32.sub
        local.set $j
       else
        br $while-break|1
       end
       br $while-continue|1
      end
     end
    end
    local.get $ptr
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    local.get $max
    i32.store $0 offset=8
    block $while-break|2
     loop $while-continue|2
      local.get $j
      local.get $left
      i32.ge_s
      local.set $14
      local.get $14
      if
       global.get $~lib/memory/__stack_pointer
       local.get $ptr
       local.get $j
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       local.tee $a
       i32.store $0
       local.get $a
       local.get $min
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $j
        i32.const 2
        i32.shl
        i32.add
        local.get $a
        i32.store $0 offset=4
        local.get $j
        i32.const 1
        i32.sub
        local.set $j
       else
        br $while-break|2
       end
       br $while-continue|2
      end
     end
    end
    local.get $ptr
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    local.get $min
    i32.store $0 offset=4
    local.get $i
    i32.const 2
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/util/sort/mergeRuns<std/array/Proxy<i32>> (type $i32_i32_i32_i32_i32_i32_=>_none) (param $ptr i32) (param $l i32) (param $m i32) (param $r i32) (param $buffer i32) (param $comparator i32)
  (local $i i32)
  (local $j i32)
  (local $t i32)
  (local $9 i32)
  (local $10 i32)
  (local $k i32)
  (local $12 i32)
  (local $a i32)
  (local $b i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $m
  i32.const 1
  i32.sub
  local.set $m
  local.get $r
  local.get $m
  i32.add
  local.set $t
  local.get $m
  i32.const 1
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $l
   i32.gt_s
   local.set $9
   local.get $9
   if
    local.get $buffer
    local.get $i
    i32.const 1
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    local.get $ptr
    local.get $i
    i32.const 1
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    i32.store $0
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  local.get $m
  local.set $j
  loop $for-loop|1
   local.get $j
   local.get $r
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $buffer
    local.get $t
    local.get $j
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    local.get $ptr
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    i32.load $0 offset=4
    i32.store $0
    local.get $j
    i32.const 1
    i32.add
    local.set $j
    br $for-loop|1
   end
  end
  local.get $l
  local.set $k
  loop $for-loop|2
   local.get $k
   local.get $r
   i32.le_s
   local.set $12
   local.get $12
   if
    global.get $~lib/memory/__stack_pointer
    local.get $buffer
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.tee $a
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $buffer
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.tee $b
    i32.store $0 offset=4
    local.get $a
    local.get $b
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.lt_s
    if
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     local.get $a
     i32.store $0
     local.get $j
     i32.const 1
     i32.sub
     local.set $j
    else
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     local.get $b
     i32.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
    end
    local.get $k
    i32.const 1
    i32.add
    local.set $k
    br $for-loop|2
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/util/sort/SORT<std/array/Proxy<i32>> (type $i32_i32_i32_=>_none) (param $ptr i32) (param $len i32) (param $comparator i32)
  (local $3 i32)
  (local $a i32)
  (local $b i32)
  (local $c i32)
  (local $a|7 i32)
  (local $b|8 i32)
  (local $c|9 i32)
  (local $n i32)
  (local $lgPlus2 i32)
  (local $lgPlus2Size i32)
  (local $leftRunStartBuf i32)
  (local $leftRunEndBuf i32)
  (local $i i32)
  (local $16 i32)
  (local $buffer i32)
  (local $hi i32)
  (local $endA i32)
  (local $lenA i32)
  (local $21 i32)
  (local $22 i32)
  (local $top i32)
  (local $startA i32)
  (local $25 i32)
  (local $startB i32)
  (local $endB i32)
  (local $lenB i32)
  (local $29 i32)
  (local $30 i32)
  (local $k i32)
  (local $i|32 i32)
  (local $33 i32)
  (local $start i32)
  (local $i|35 i32)
  (local $36 i32)
  (local $start|37 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  local.get $len
  i32.const 48
  i32.le_s
  if
   local.get $len
   i32.const 1
   i32.le_s
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 16
    i32.add
    global.set $~lib/memory/__stack_pointer
    return
   end
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   block $break|0
    block $case1|0
     block $case0|0
      local.get $len
      local.set $3
      local.get $3
      i32.const 3
      i32.eq
      br_if $case0|0
      local.get $3
      i32.const 2
      i32.eq
      br_if $case1|0
      br $break|0
     end
     global.get $~lib/memory/__stack_pointer
     local.get $ptr
     i32.load $0
     local.tee $a
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     local.get $ptr
     i32.load $0 offset=4
     local.tee $b
     i32.store $0 offset=4
     local.get $a
     local.get $b
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $c
     local.get $ptr
     local.get $b
     local.get $a
     local.get $c
     select
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     local.get $a
     local.get $b
     local.get $c
     select
     local.tee $a
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     local.get $ptr
     i32.load $0 offset=8
     local.tee $b
     i32.store $0 offset=4
     local.get $a
     local.get $b
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $c
     local.get $ptr
     local.get $b
     local.get $a
     local.get $c
     select
     i32.store $0 offset=4
     local.get $ptr
     local.get $a
     local.get $b
     local.get $c
     select
     i32.store $0 offset=8
    end
    global.get $~lib/memory/__stack_pointer
    local.get $ptr
    i32.load $0
    local.tee $a|7
    i32.store $0 offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $ptr
    i32.load $0 offset=4
    local.tee $b|8
    i32.store $0 offset=12
    local.get $a|7
    local.get $b|8
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.gt_s
    local.set $c|9
    local.get $ptr
    local.get $b|8
    local.get $a|7
    local.get $c|9
    select
    i32.store $0
    local.get $ptr
    local.get $a|7
    local.get $b|8
    local.get $c|9
    select
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    i32.const 16
    i32.add
    global.set $~lib/memory/__stack_pointer
    return
   end
   local.get $ptr
   i32.const 0
   local.get $len
   i32.const 1
   i32.sub
   i32.const 0
   local.get $comparator
   call $~lib/util/sort/insertionSort<std/array/Proxy<i32>>
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  local.get $len
  local.set $n
  i32.const 31
  local.get $n
  i32.clz
  i32.sub
  i32.const 2
  i32.add
  local.set $lgPlus2
  local.get $lgPlus2
  i32.const 2
  i32.shl
  local.set $lgPlus2Size
  local.get $lgPlus2Size
  i32.const 1
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $leftRunStartBuf
  local.get $leftRunStartBuf
  local.get $lgPlus2Size
  i32.add
  local.set $leftRunEndBuf
  i32.const 0
  local.set $i
  loop $for-loop|1
   local.get $i
   local.get $lgPlus2
   i32.lt_u
   local.set $16
   local.get $16
   if
    local.get $leftRunStartBuf
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.const -1
    i32.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|1
   end
  end
  local.get $len
  i32.const 2
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $buffer
  local.get $len
  i32.const 1
  i32.sub
  local.set $hi
  local.get $ptr
  i32.const 0
  local.get $hi
  local.get $comparator
  call $~lib/util/sort/extendRunRight<std/array/Proxy<i32>>
  local.set $endA
  local.get $endA
  i32.const 1
  i32.add
  local.set $lenA
  local.get $lenA
  i32.const 32
  i32.lt_s
  if
   local.get $hi
   local.tee $21
   i32.const 32
   i32.const 1
   i32.sub
   local.tee $22
   local.get $21
   local.get $22
   i32.lt_s
   select
   local.set $endA
   local.get $ptr
   i32.const 0
   local.get $endA
   local.get $lenA
   local.get $comparator
   call $~lib/util/sort/insertionSort<std/array/Proxy<i32>>
  end
  i32.const 0
  local.set $top
  i32.const 0
  local.set $startA
  loop $while-continue|2
   local.get $endA
   local.get $hi
   i32.lt_s
   local.set $25
   local.get $25
   if
    local.get $endA
    i32.const 1
    i32.add
    local.set $startB
    local.get $ptr
    local.get $startB
    local.get $hi
    local.get $comparator
    call $~lib/util/sort/extendRunRight<std/array/Proxy<i32>>
    local.set $endB
    local.get $endB
    local.get $startB
    i32.sub
    i32.const 1
    i32.add
    local.set $lenB
    local.get $lenB
    i32.const 32
    i32.lt_s
    if
     local.get $hi
     local.tee $29
     local.get $startB
     i32.const 32
     i32.add
     i32.const 1
     i32.sub
     local.tee $30
     local.get $29
     local.get $30
     i32.lt_s
     select
     local.set $endB
     local.get $ptr
     local.get $startB
     local.get $endB
     local.get $lenB
     local.get $comparator
     call $~lib/util/sort/insertionSort<std/array/Proxy<i32>>
    end
    i32.const 0
    local.get $hi
    local.get $startA
    local.get $startB
    local.get $endB
    call $~lib/util/sort/nodePower
    local.set $k
    local.get $top
    local.set $i|32
    loop $for-loop|3
     local.get $i|32
     local.get $k
     i32.gt_u
     local.set $33
     local.get $33
     if
      local.get $leftRunStartBuf
      local.get $i|32
      i32.const 2
      i32.shl
      i32.add
      i32.load $0
      local.set $start
      local.get $start
      i32.const -1
      i32.ne
      if
       local.get $ptr
       local.get $start
       local.get $leftRunEndBuf
       local.get $i|32
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       i32.const 1
       i32.add
       local.get $endA
       local.get $buffer
       local.get $comparator
       call $~lib/util/sort/mergeRuns<std/array/Proxy<i32>>
       local.get $start
       local.set $startA
       local.get $leftRunStartBuf
       local.get $i|32
       i32.const 2
       i32.shl
       i32.add
       i32.const -1
       i32.store $0
      end
      local.get $i|32
      i32.const 1
      i32.sub
      local.set $i|32
      br $for-loop|3
     end
    end
    local.get $leftRunStartBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $startA
    i32.store $0
    local.get $leftRunEndBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $endA
    i32.store $0
    local.get $startB
    local.set $startA
    local.get $endB
    local.set $endA
    local.get $k
    local.set $top
    br $while-continue|2
   end
  end
  local.get $top
  local.set $i|35
  loop $for-loop|4
   local.get $i|35
   i32.const 0
   i32.ne
   local.set $36
   local.get $36
   if
    local.get $leftRunStartBuf
    local.get $i|35
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $start|37
    local.get $start|37
    i32.const -1
    i32.ne
    if
     local.get $ptr
     local.get $start|37
     local.get $leftRunEndBuf
     local.get $i|35
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 1
     i32.add
     local.get $hi
     local.get $buffer
     local.get $comparator
     call $~lib/util/sort/mergeRuns<std/array/Proxy<i32>>
    end
    local.get $i|35
    i32.const 1
    i32.sub
    local.set $i|35
    br $for-loop|4
   end
  end
  local.get $buffer
  call $~lib/rt/tlsf/__free
  local.get $leftRunStartBuf
  call $~lib/rt/tlsf/__free
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<std/array/Proxy<i32>>#sort (type $i32_i32_=>_i32) (param $this i32) (param $comparator i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  i32.load $0 offset=12
  local.get $comparator
  call $~lib/util/sort/SORT<std/array/Proxy<i32>>
  local.get $this
 )
 (func $~lib/array/Array<std/array/Proxy<i32>>#get:length (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/array/Array<~lib/array/Array<~lib/string/String|null>>#__uset (type $i32_i32_i32_=>_none) (param $this i32) (param $index i32) (param $value i32)
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store $0
  i32.const 1
  drop
  local.get $this
  local.get $value
  i32.const 1
  call $~lib/rt/itcms/__link
 )
 (func $~lib/array/Array<~lib/string/String|null>#get:length (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/string/String#get:length (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.const 20
  i32.sub
  i32.load $0 offset=16
 )
 (func $start:std/array~anonymous|54 (type $i32_i32_i32_=>_i32) (param $nestedArray i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $nestedArray
  call $~lib/array/Array<i32>#get:length
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $nestedArray
  i32.const 3
  call $~lib/array/Array<i32>#push
  drop
  local.get $nestedArray
  call $~lib/array/Array<i32>#get:length
  i32.const 2
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $nestedArray
 )
 (func $~lib/rt/itcms/__collect (type $none_=>_none)
  (local $0 i32)
  (local $1 i32)
  i32.const 0
  drop
  global.get $~lib/rt/itcms/state
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    global.get $~lib/rt/itcms/state
    i32.const 0
    i32.ne
    local.set $0
    local.get $0
    if
     call $~lib/rt/itcms/step
     drop
     br $while-continue|0
    end
   end
  end
  call $~lib/rt/itcms/step
  drop
  loop $while-continue|1
   global.get $~lib/rt/itcms/state
   i32.const 0
   i32.ne
   local.set $1
   local.get $1
   if
    call $~lib/rt/itcms/step
    drop
    br $while-continue|1
   end
  end
  global.get $~lib/rt/itcms/total
  i64.extend_i32_u
  i32.const 200
  i64.extend_i32_u
  i64.mul
  i64.const 100
  i64.div_u
  i32.wrap_i64
  i32.const 1024
  i32.add
  global.set $~lib/rt/itcms/threshold
  i32.const 0
  drop
  i32.const 0
  drop
 )
 (func $~lib/rt/__visit_globals (type $i32_=>_none) (param $0 i32)
  (local $1 i32)
  global.get $std/array/arr
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $std/array/charset
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $std/array/inputStabArr
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $std/array/outputStabArr
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  i32.const 192
  local.get $0
  call $~lib/rt/itcms/__visit
  i32.const 32
  local.get $0
  call $~lib/rt/itcms/__visit
  i32.const 1280
  local.get $0
  call $~lib/rt/itcms/__visit
  i32.const 5056
  local.get $0
  call $~lib/rt/itcms/__visit
  i32.const 80
  local.get $0
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/arraybuffer/ArrayBufferView~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  i32.load $0
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/array/Array<i32>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  i32.const 0
  drop
  local.get $this
  i32.load $0
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<i32>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/array/Array<i32>#__visit
 )
 (func $~lib/typedarray/Uint8Array~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/arraybuffer/ArrayBufferView~visit
 )
 (func $~lib/array/Array<u8>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  i32.const 0
  drop
  local.get $this
  i32.load $0
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<u8>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/array/Array<u8>#__visit
 )
 (func $~lib/array/Array<u32>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  i32.const 0
  drop
  local.get $this
  i32.load $0
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<u32>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/array/Array<u32>#__visit
 )
 (func $~lib/array/Array<f32>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  i32.const 0
  drop
  local.get $this
  i32.load $0
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<f32>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/array/Array<f32>#__visit
 )
 (func $~lib/array/Array<std/array/Ref>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  (local $cur i32)
  (local $end i32)
  (local $4 i32)
  (local $val i32)
  i32.const 1
  drop
  local.get $this
  i32.load $0 offset=4
  local.set $cur
  local.get $cur
  local.get $this
  i32.load $0 offset=12
  i32.const 2
  i32.shl
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   local.set $4
   local.get $4
   if
    local.get $cur
    i32.load $0
    local.set $val
    local.get $val
    if
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    i32.const 4
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
  local.get $this
  i32.load $0
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<std/array/Ref>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/array/Array<std/array/Ref>#__visit
 )
 (func $~lib/array/Array<u16>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  i32.const 0
  drop
  local.get $this
  i32.load $0
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<u16>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/array/Array<u16>#__visit
 )
 (func $~lib/array/Array<f64>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  i32.const 0
  drop
  local.get $this
  i32.load $0
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<f64>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/array/Array<f64>#__visit
 )
 (func $~lib/array/Array<std/array/Ref|null>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  (local $cur i32)
  (local $end i32)
  (local $4 i32)
  (local $val i32)
  i32.const 1
  drop
  local.get $this
  i32.load $0 offset=4
  local.set $cur
  local.get $cur
  local.get $this
  i32.load $0 offset=12
  i32.const 2
  i32.shl
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   local.set $4
   local.get $4
   if
    local.get $cur
    i32.load $0
    local.set $val
    local.get $val
    if
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    i32.const 4
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
  local.get $this
  i32.load $0
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<std/array/Ref|null>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/array/Array<std/array/Ref|null>#__visit
 )
 (func $~lib/function/Function<%28i32%2Ci32%2C~lib/array/Array<i32>%29=>bool>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28i32%2Ci32%2C~lib/array/Array<i32>%29=>bool>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28i32%2Ci32%2C~lib/array/Array<i32>%29=>bool>#__visit
 )
 (func $~lib/function/Function<%28i32%2Ci32%2C~lib/array/Array<i32>%29=>void>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28i32%2Ci32%2C~lib/array/Array<i32>%29=>void>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28i32%2Ci32%2C~lib/array/Array<i32>%29=>void>#__visit
 )
 (func $~lib/array/Array<~lib/string/String>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  (local $cur i32)
  (local $end i32)
  (local $4 i32)
  (local $val i32)
  i32.const 1
  drop
  local.get $this
  i32.load $0 offset=4
  local.set $cur
  local.get $cur
  local.get $this
  i32.load $0 offset=12
  i32.const 2
  i32.shl
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   local.set $4
   local.get $4
   if
    local.get $cur
    i32.load $0
    local.set $val
    local.get $val
    if
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    i32.const 4
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
  local.get $this
  i32.load $0
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<~lib/string/String>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/array/Array<~lib/string/String>#__visit
 )
 (func $~lib/function/Function<%28i32%2Ci32%2C~lib/array/Array<i32>%29=>~lib/string/String>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28i32%2Ci32%2C~lib/array/Array<i32>%29=>~lib/string/String>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28i32%2Ci32%2C~lib/array/Array<i32>%29=>~lib/string/String>#__visit
 )
 (func $~lib/function/Function<%28i32%2Ci32%2C~lib/array/Array<i32>%29=>f32>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28i32%2Ci32%2C~lib/array/Array<i32>%29=>f32>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28i32%2Ci32%2C~lib/array/Array<i32>%29=>f32>#__visit
 )
 (func $~lib/function/Function<%28i32%2Ci32%2C~lib/array/Array<i32>%29=>i32>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28i32%2Ci32%2C~lib/array/Array<i32>%29=>i32>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28i32%2Ci32%2C~lib/array/Array<i32>%29=>i32>#__visit
 )
 (func $~lib/function/Function<%28i32%2Ci32%2Ci32%2C~lib/array/Array<i32>%29=>i32>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28i32%2Ci32%2Ci32%2C~lib/array/Array<i32>%29=>i32>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28i32%2Ci32%2Ci32%2C~lib/array/Array<i32>%29=>i32>#__visit
 )
 (func $~lib/function/Function<%28bool%2Ci32%2Ci32%2C~lib/array/Array<i32>%29=>bool>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28bool%2Ci32%2Ci32%2C~lib/array/Array<i32>%29=>bool>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28bool%2Ci32%2Ci32%2C~lib/array/Array<i32>%29=>bool>#__visit
 )
 (func $~lib/array/Array<std/array/Dim>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  (local $cur i32)
  (local $end i32)
  (local $4 i32)
  (local $val i32)
  i32.const 1
  drop
  local.get $this
  i32.load $0 offset=4
  local.set $cur
  local.get $cur
  local.get $this
  i32.load $0 offset=12
  i32.const 2
  i32.shl
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   local.set $4
   local.get $4
   if
    local.get $cur
    i32.load $0
    local.set $val
    local.get $val
    if
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    i32.const 4
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
  local.get $this
  i32.load $0
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<std/array/Dim>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/array/Array<std/array/Dim>#__visit
 )
 (func $~lib/function/Function<%28f32%2Cf32%29=>i32>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28f32%2Cf32%29=>i32>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28f32%2Cf32%29=>i32>#__visit
 )
 (func $~lib/function/Function<%28f64%2Cf64%29=>i32>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28f64%2Cf64%29=>i32>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28f64%2Cf64%29=>i32>#__visit
 )
 (func $~lib/function/Function<%28i32%2Ci32%29=>i32>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28i32%2Ci32%29=>i32>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28i32%2Ci32%29=>i32>#__visit
 )
 (func $~lib/function/Function<%28u32%2Cu32%29=>i32>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28u32%2Cu32%29=>i32>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28u32%2Cu32%29=>i32>#__visit
 )
 (func $~lib/function/Function<%28std/array/Dim%2Cstd/array/Dim%29=>i32>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28std/array/Dim%2Cstd/array/Dim%29=>i32>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28std/array/Dim%2Cstd/array/Dim%29=>i32>#__visit
 )
 (func $~lib/array/Array<~lib/array/Array<i32>>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  (local $cur i32)
  (local $end i32)
  (local $4 i32)
  (local $val i32)
  i32.const 1
  drop
  local.get $this
  i32.load $0 offset=4
  local.set $cur
  local.get $cur
  local.get $this
  i32.load $0 offset=12
  i32.const 2
  i32.shl
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   local.set $4
   local.get $4
   if
    local.get $cur
    i32.load $0
    local.set $val
    local.get $val
    if
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    i32.const 4
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
  local.get $this
  i32.load $0
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<~lib/array/Array<i32>>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/array/Array<~lib/array/Array<i32>>#__visit
 )
 (func $~lib/function/Function<%28~lib/array/Array<i32>%2C~lib/array/Array<i32>%29=>i32>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28~lib/array/Array<i32>%2C~lib/array/Array<i32>%29=>i32>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28~lib/array/Array<i32>%2C~lib/array/Array<i32>%29=>i32>#__visit
 )
 (func $~lib/array/Array<std/array/Proxy<i32>>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  (local $cur i32)
  (local $end i32)
  (local $4 i32)
  (local $val i32)
  i32.const 1
  drop
  local.get $this
  i32.load $0 offset=4
  local.set $cur
  local.get $cur
  local.get $this
  i32.load $0 offset=12
  i32.const 2
  i32.shl
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   local.set $4
   local.get $4
   if
    local.get $cur
    i32.load $0
    local.set $val
    local.get $val
    if
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    i32.const 4
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
  local.get $this
  i32.load $0
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<std/array/Proxy<i32>>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/array/Array<std/array/Proxy<i32>>#__visit
 )
 (func $~lib/function/Function<%28std/array/Proxy<i32>%2Cstd/array/Proxy<i32>%29=>i32>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28std/array/Proxy<i32>%2Cstd/array/Proxy<i32>%29=>i32>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28std/array/Proxy<i32>%2Cstd/array/Proxy<i32>%29=>i32>#__visit
 )
 (func $~lib/array/Array<~lib/string/String|null>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  (local $cur i32)
  (local $end i32)
  (local $4 i32)
  (local $val i32)
  i32.const 1
  drop
  local.get $this
  i32.load $0 offset=4
  local.set $cur
  local.get $cur
  local.get $this
  i32.load $0 offset=12
  i32.const 2
  i32.shl
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   local.set $4
   local.get $4
   if
    local.get $cur
    i32.load $0
    local.set $val
    local.get $val
    if
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    i32.const 4
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
  local.get $this
  i32.load $0
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<~lib/string/String|null>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/array/Array<~lib/string/String|null>#__visit
 )
 (func $~lib/array/Array<~lib/array/Array<~lib/string/String|null>>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  (local $cur i32)
  (local $end i32)
  (local $4 i32)
  (local $val i32)
  i32.const 1
  drop
  local.get $this
  i32.load $0 offset=4
  local.set $cur
  local.get $cur
  local.get $this
  i32.load $0 offset=12
  i32.const 2
  i32.shl
  i32.add
  local.set $end
  loop $while-continue|0
   local.get $cur
   local.get $end
   i32.lt_u
   local.set $4
   local.get $4
   if
    local.get $cur
    i32.load $0
    local.set $val
    local.get $val
    if
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $cur
    i32.const 4
    i32.add
    local.set $cur
    br $while-continue|0
   end
  end
  local.get $this
  i32.load $0
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<~lib/array/Array<~lib/string/String|null>>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/array/Array<~lib/array/Array<~lib/string/String|null>>#__visit
 )
 (func $~lib/function/Function<%28~lib/array/Array<i32>%2Ci32%2C~lib/array/Array<~lib/array/Array<i32>>%29=>~lib/array/Array<i32>>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28~lib/array/Array<i32>%2Ci32%2C~lib/array/Array<~lib/array/Array<i32>>%29=>~lib/array/Array<i32>>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28~lib/array/Array<i32>%2Ci32%2C~lib/array/Array<~lib/array/Array<i32>>%29=>~lib/array/Array<i32>>#__visit
 )
 (func $~lib/rt/__visit_members (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  block $invalid
   block $~lib/function/Function<%28~lib/array/Array<i32>%2Ci32%2C~lib/array/Array<~lib/array/Array<i32>>%29=>~lib/array/Array<i32>>
    block $~lib/array/Array<~lib/array/Array<~lib/string/String|null>>
     block $~lib/array/Array<~lib/string/String|null>
      block $~lib/function/Function<%28std/array/Proxy<i32>%2Cstd/array/Proxy<i32>%29=>i32>
       block $~lib/array/Array<std/array/Proxy<i32>>
        block $std/array/Proxy<i32>
         block $~lib/function/Function<%28~lib/array/Array<i32>%2C~lib/array/Array<i32>%29=>i32>
          block $~lib/array/Array<~lib/array/Array<i32>>
           block $~lib/function/Function<%28std/array/Dim%2Cstd/array/Dim%29=>i32>
            block $~lib/function/Function<%28u32%2Cu32%29=>i32>
             block $~lib/function/Function<%28i32%2Ci32%29=>i32>
              block $~lib/function/Function<%28f64%2Cf64%29=>i32>
               block $~lib/function/Function<%28f32%2Cf32%29=>i32>
                block $~lib/array/Array<std/array/Dim>
                 block $std/array/Dim
                  block $~lib/function/Function<%28bool%2Ci32%2Ci32%2C~lib/array/Array<i32>%29=>bool>
                   block $~lib/function/Function<%28i32%2Ci32%2Ci32%2C~lib/array/Array<i32>%29=>i32>
                    block $~lib/function/Function<%28i32%2Ci32%2C~lib/array/Array<i32>%29=>i32>
                     block $~lib/function/Function<%28i32%2Ci32%2C~lib/array/Array<i32>%29=>f32>
                      block $~lib/function/Function<%28i32%2Ci32%2C~lib/array/Array<i32>%29=>~lib/string/String>
                       block $~lib/array/Array<~lib/string/String>
                        block $~lib/function/Function<%28i32%2Ci32%2C~lib/array/Array<i32>%29=>void>
                         block $~lib/function/Function<%28i32%2Ci32%2C~lib/array/Array<i32>%29=>bool>
                          block $~lib/array/Array<std/array/Ref|null>
                           block $~lib/array/Array<f64>
                            block $~lib/array/Array<u16>
                             block $~lib/staticarray/ByteArray
                              block $~lib/array/Array<std/array/Ref>
                               block $~lib/array/Array<f32>
                                block $~lib/array/Array<u32>
                                 block $~lib/array/Array<u8>
                                  block $~lib/typedarray/Uint8Array
                                   block $std/array/Ref
                                    block $~lib/array/Array<i32>
                                     block $~lib/arraybuffer/ArrayBufferView
                                      block $~lib/string/String
                                       block $~lib/arraybuffer/ArrayBuffer
                                        local.get $0
                                        i32.const 8
                                        i32.sub
                                        i32.load $0
                                        br_table $~lib/arraybuffer/ArrayBuffer $~lib/string/String $~lib/arraybuffer/ArrayBufferView $~lib/array/Array<i32> $std/array/Ref $~lib/typedarray/Uint8Array $~lib/array/Array<u8> $~lib/array/Array<u32> $~lib/array/Array<f32> $~lib/array/Array<std/array/Ref> $~lib/staticarray/ByteArray $~lib/array/Array<u16> $~lib/array/Array<f64> $~lib/array/Array<std/array/Ref|null> $~lib/function/Function<%28i32%2Ci32%2C~lib/array/Array<i32>%29=>bool> $~lib/function/Function<%28i32%2Ci32%2C~lib/array/Array<i32>%29=>void> $~lib/array/Array<~lib/string/String> $~lib/function/Function<%28i32%2Ci32%2C~lib/array/Array<i32>%29=>~lib/string/String> $~lib/function/Function<%28i32%2Ci32%2C~lib/array/Array<i32>%29=>f32> $~lib/function/Function<%28i32%2Ci32%2C~lib/array/Array<i32>%29=>i32> $~lib/function/Function<%28i32%2Ci32%2Ci32%2C~lib/array/Array<i32>%29=>i32> $~lib/function/Function<%28bool%2Ci32%2Ci32%2C~lib/array/Array<i32>%29=>bool> $std/array/Dim $~lib/array/Array<std/array/Dim> $~lib/function/Function<%28f32%2Cf32%29=>i32> $~lib/function/Function<%28f64%2Cf64%29=>i32> $~lib/function/Function<%28i32%2Ci32%29=>i32> $~lib/function/Function<%28u32%2Cu32%29=>i32> $~lib/function/Function<%28std/array/Dim%2Cstd/array/Dim%29=>i32> $~lib/array/Array<~lib/array/Array<i32>> $~lib/function/Function<%28~lib/array/Array<i32>%2C~lib/array/Array<i32>%29=>i32> $std/array/Proxy<i32> $~lib/array/Array<std/array/Proxy<i32>> $~lib/function/Function<%28std/array/Proxy<i32>%2Cstd/array/Proxy<i32>%29=>i32> $~lib/array/Array<~lib/string/String|null> $~lib/array/Array<~lib/array/Array<~lib/string/String|null>> $~lib/function/Function<%28~lib/array/Array<i32>%2Ci32%2C~lib/array/Array<~lib/array/Array<i32>>%29=>~lib/array/Array<i32>> $invalid
                                       end
                                       return
                                      end
                                      return
                                     end
                                     local.get $0
                                     local.get $1
                                     call $~lib/arraybuffer/ArrayBufferView~visit
                                     return
                                    end
                                    local.get $0
                                    local.get $1
                                    call $~lib/array/Array<i32>~visit
                                    return
                                   end
                                   return
                                  end
                                  local.get $0
                                  local.get $1
                                  call $~lib/typedarray/Uint8Array~visit
                                  return
                                 end
                                 local.get $0
                                 local.get $1
                                 call $~lib/array/Array<u8>~visit
                                 return
                                end
                                local.get $0
                                local.get $1
                                call $~lib/array/Array<u32>~visit
                                return
                               end
                               local.get $0
                               local.get $1
                               call $~lib/array/Array<f32>~visit
                               return
                              end
                              local.get $0
                              local.get $1
                              call $~lib/array/Array<std/array/Ref>~visit
                              return
                             end
                             return
                            end
                            local.get $0
                            local.get $1
                            call $~lib/array/Array<u16>~visit
                            return
                           end
                           local.get $0
                           local.get $1
                           call $~lib/array/Array<f64>~visit
                           return
                          end
                          local.get $0
                          local.get $1
                          call $~lib/array/Array<std/array/Ref|null>~visit
                          return
                         end
                         local.get $0
                         local.get $1
                         call $~lib/function/Function<%28i32%2Ci32%2C~lib/array/Array<i32>%29=>bool>~visit
                         return
                        end
                        local.get $0
                        local.get $1
                        call $~lib/function/Function<%28i32%2Ci32%2C~lib/array/Array<i32>%29=>void>~visit
                        return
                       end
                       local.get $0
                       local.get $1
                       call $~lib/array/Array<~lib/string/String>~visit
                       return
                      end
                      local.get $0
                      local.get $1
                      call $~lib/function/Function<%28i32%2Ci32%2C~lib/array/Array<i32>%29=>~lib/string/String>~visit
                      return
                     end
                     local.get $0
                     local.get $1
                     call $~lib/function/Function<%28i32%2Ci32%2C~lib/array/Array<i32>%29=>f32>~visit
                     return
                    end
                    local.get $0
                    local.get $1
                    call $~lib/function/Function<%28i32%2Ci32%2C~lib/array/Array<i32>%29=>i32>~visit
                    return
                   end
                   local.get $0
                   local.get $1
                   call $~lib/function/Function<%28i32%2Ci32%2Ci32%2C~lib/array/Array<i32>%29=>i32>~visit
                   return
                  end
                  local.get $0
                  local.get $1
                  call $~lib/function/Function<%28bool%2Ci32%2Ci32%2C~lib/array/Array<i32>%29=>bool>~visit
                  return
                 end
                 return
                end
                local.get $0
                local.get $1
                call $~lib/array/Array<std/array/Dim>~visit
                return
               end
               local.get $0
               local.get $1
               call $~lib/function/Function<%28f32%2Cf32%29=>i32>~visit
               return
              end
              local.get $0
              local.get $1
              call $~lib/function/Function<%28f64%2Cf64%29=>i32>~visit
              return
             end
             local.get $0
             local.get $1
             call $~lib/function/Function<%28i32%2Ci32%29=>i32>~visit
             return
            end
            local.get $0
            local.get $1
            call $~lib/function/Function<%28u32%2Cu32%29=>i32>~visit
            return
           end
           local.get $0
           local.get $1
           call $~lib/function/Function<%28std/array/Dim%2Cstd/array/Dim%29=>i32>~visit
           return
          end
          local.get $0
          local.get $1
          call $~lib/array/Array<~lib/array/Array<i32>>~visit
          return
         end
         local.get $0
         local.get $1
         call $~lib/function/Function<%28~lib/array/Array<i32>%2C~lib/array/Array<i32>%29=>i32>~visit
         return
        end
        return
       end
       local.get $0
       local.get $1
       call $~lib/array/Array<std/array/Proxy<i32>>~visit
       return
      end
      local.get $0
      local.get $1
      call $~lib/function/Function<%28std/array/Proxy<i32>%2Cstd/array/Proxy<i32>%29=>i32>~visit
      return
     end
     local.get $0
     local.get $1
     call $~lib/array/Array<~lib/string/String|null>~visit
     return
    end
    local.get $0
    local.get $1
    call $~lib/array/Array<~lib/array/Array<~lib/string/String|null>>~visit
    return
   end
   local.get $0
   local.get $1
   call $~lib/function/Function<%28~lib/array/Array<i32>%2Ci32%2C~lib/array/Array<~lib/array/Array<i32>>%29=>~lib/array/Array<i32>>~visit
   return
  end
  unreachable
 )
 (func $~start (type $none_=>_none)
  global.get $~started
  if
   return
  end
  i32.const 1
  global.set $~started
  call $start:std/array
 )
 (func $~stack_check (type $none_=>_none)
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__data_end
  i32.lt_s
  if
   unreachable
  end
 )
 (func $~lib/util/sort/extendRunRight<std/array/Dim> (type $i32_i32_i32_i32_=>_i32) (param $ptr i32) (param $i i32) (param $right i32) (param $comparator i32) (result i32)
  (local $j i32)
  (local $5 i32)
  (local $k i32)
  (local $7 i32)
  (local $tmp i32)
  (local $9 i32)
  (local $10 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $i
  local.get $right
  i32.eq
  if
   local.get $i
   local.set $10
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $10
   return
  end
  local.get $i
  local.set $j
  local.get $ptr
  local.get $j
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0
  local.get $10
  local.get $ptr
  local.get $j
  i32.const 1
  i32.add
  local.tee $j
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  i32.const 2
  global.set $~argumentsLength
  local.get $comparator
  i32.load $0
  call_indirect $0 (type $i32_i32_=>_i32)
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     i32.load $0 offset=4
     local.set $10
     global.get $~lib/memory/__stack_pointer
     local.get $10
     i32.store $0
     local.get $10
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.set $10
     global.get $~lib/memory/__stack_pointer
     local.get $10
     i32.store $0 offset=4
     local.get $10
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 31
     i32.shr_u
    else
     i32.const 0
    end
    local.set $5
    local.get $5
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|0
    end
   end
   local.get $j
   local.set $k
   loop $while-continue|1
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     global.get $~lib/memory/__stack_pointer
     local.get $ptr
     local.get $i
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.tee $tmp
     i32.store $0 offset=8
     local.get $ptr
     local.get $i
     i32.const 2
     i32.shl
     i32.add
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     local.get $tmp
     i32.store $0
     local.get $k
     i32.const 1
     i32.sub
     local.set $k
     br $while-continue|1
    end
   end
  else
   loop $while-continue|2
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     i32.load $0 offset=4
     local.set $10
     global.get $~lib/memory/__stack_pointer
     local.get $10
     i32.store $0
     local.get $10
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.set $10
     global.get $~lib/memory/__stack_pointer
     local.get $10
     i32.store $0 offset=4
     local.get $10
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.ge_s
    else
     i32.const 0
    end
    local.set $9
    local.get $9
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|2
    end
   end
  end
  local.get $j
  local.set $10
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $10
 )
 (func $~lib/util/sort/extendRunRight<~lib/array/Array<i32>> (type $i32_i32_i32_i32_=>_i32) (param $ptr i32) (param $i i32) (param $right i32) (param $comparator i32) (result i32)
  (local $j i32)
  (local $5 i32)
  (local $k i32)
  (local $7 i32)
  (local $tmp i32)
  (local $9 i32)
  (local $10 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $i
  local.get $right
  i32.eq
  if
   local.get $i
   local.set $10
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $10
   return
  end
  local.get $i
  local.set $j
  local.get $ptr
  local.get $j
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0
  local.get $10
  local.get $ptr
  local.get $j
  i32.const 1
  i32.add
  local.tee $j
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  i32.const 2
  global.set $~argumentsLength
  local.get $comparator
  i32.load $0
  call_indirect $0 (type $i32_i32_=>_i32)
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     i32.load $0 offset=4
     local.set $10
     global.get $~lib/memory/__stack_pointer
     local.get $10
     i32.store $0
     local.get $10
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.set $10
     global.get $~lib/memory/__stack_pointer
     local.get $10
     i32.store $0 offset=4
     local.get $10
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 31
     i32.shr_u
    else
     i32.const 0
    end
    local.set $5
    local.get $5
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|0
    end
   end
   local.get $j
   local.set $k
   loop $while-continue|1
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     global.get $~lib/memory/__stack_pointer
     local.get $ptr
     local.get $i
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.tee $tmp
     i32.store $0 offset=8
     local.get $ptr
     local.get $i
     i32.const 2
     i32.shl
     i32.add
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     local.get $tmp
     i32.store $0
     local.get $k
     i32.const 1
     i32.sub
     local.set $k
     br $while-continue|1
    end
   end
  else
   loop $while-continue|2
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     i32.load $0 offset=4
     local.set $10
     global.get $~lib/memory/__stack_pointer
     local.get $10
     i32.store $0
     local.get $10
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.set $10
     global.get $~lib/memory/__stack_pointer
     local.get $10
     i32.store $0 offset=4
     local.get $10
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.ge_s
    else
     i32.const 0
    end
    local.set $9
    local.get $9
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|2
    end
   end
  end
  local.get $j
  local.set $10
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $10
 )
 (func $~lib/util/sort/extendRunRight<std/array/Proxy<i32>> (type $i32_i32_i32_i32_=>_i32) (param $ptr i32) (param $i i32) (param $right i32) (param $comparator i32) (result i32)
  (local $j i32)
  (local $5 i32)
  (local $k i32)
  (local $7 i32)
  (local $tmp i32)
  (local $9 i32)
  (local $10 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $i
  local.get $right
  i32.eq
  if
   local.get $i
   local.set $10
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $10
   return
  end
  local.get $i
  local.set $j
  local.get $ptr
  local.get $j
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0
  local.get $10
  local.get $ptr
  local.get $j
  i32.const 1
  i32.add
  local.tee $j
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.set $10
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.store $0 offset=4
  local.get $10
  i32.const 2
  global.set $~argumentsLength
  local.get $comparator
  i32.load $0
  call_indirect $0 (type $i32_i32_=>_i32)
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     i32.load $0 offset=4
     local.set $10
     global.get $~lib/memory/__stack_pointer
     local.get $10
     i32.store $0
     local.get $10
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.set $10
     global.get $~lib/memory/__stack_pointer
     local.get $10
     i32.store $0 offset=4
     local.get $10
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 31
     i32.shr_u
    else
     i32.const 0
    end
    local.set $5
    local.get $5
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|0
    end
   end
   local.get $j
   local.set $k
   loop $while-continue|1
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     global.get $~lib/memory/__stack_pointer
     local.get $ptr
     local.get $i
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.tee $tmp
     i32.store $0 offset=8
     local.get $ptr
     local.get $i
     i32.const 2
     i32.shl
     i32.add
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     local.get $tmp
     i32.store $0
     local.get $k
     i32.const 1
     i32.sub
     local.set $k
     br $while-continue|1
    end
   end
  else
   loop $while-continue|2
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     i32.load $0 offset=4
     local.set $10
     global.get $~lib/memory/__stack_pointer
     local.get $10
     i32.store $0
     local.get $10
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.set $10
     global.get $~lib/memory/__stack_pointer
     local.get $10
     i32.store $0 offset=4
     local.get $10
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.ge_s
    else
     i32.const 0
    end
    local.set $9
    local.get $9
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|2
    end
   end
  end
  local.get $j
  local.set $10
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $10
 )
 (func $~lib/array/Array<~lib/array/Array<i32>>#map<~lib/array/Array<i32>> (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $len i32)
  (local $out i32)
  (local $outStart i32)
  (local $i i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $result i32)
  (local $10 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  local.get $this
  i32.load $0 offset=12
  local.set $len
  global.get $~lib/memory/__stack_pointer
  local.get $len
  i32.const 2
  i32.const 29
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $out
  i32.store $0
  local.get $out
  i32.load $0 offset=4
  local.set $outStart
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $len
   local.tee $6
   local.get $this
   i32.load $0 offset=12
   local.tee $7
   local.get $6
   local.get $7
   i32.lt_s
   select
   i32.lt_s
   local.set $8
   local.get $8
   if
    global.get $~lib/memory/__stack_pointer
    local.get $this
    i32.load $0 offset=4
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $10
    global.get $~lib/memory/__stack_pointer
    local.get $10
    i32.store $0 offset=4
    local.get $10
    local.get $i
    local.get $this
    i32.const 3
    global.set $~argumentsLength
    local.get $fn
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    local.tee $result
    i32.store $0 offset=8
    local.get $outStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    local.get $result
    i32.store $0
    i32.const 1
    drop
    local.get $out
    local.get $result
    i32.const 1
    call $~lib/rt/itcms/__link
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $out
  local.set $10
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $10
 )
 (func $start:std/array (type $none_=>_none)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local $27 i32)
  (local $28 i32)
  (local $29 i32)
  (local $30 i32)
  (local $31 i32)
  (local $32 i32)
  (local $33 i32)
  (local $34 i32)
  (local $35 i32)
  (local $36 i32)
  (local $37 i32)
  (local $38 i32)
  (local $39 i32)
  (local $40 i32)
  (local $41 i32)
  (local $42 i32)
  (local $43 i32)
  (local $44 i32)
  (local $45 i32)
  (local $46 i32)
  (local $47 i32)
  (local $48 i32)
  (local $49 i32)
  (local $50 i32)
  (local $51 i32)
  (local $52 i32)
  (local $53 i32)
  (local $54 i32)
  (local $55 i32)
  (local $56 i32)
  (local $57 i32)
  (local $58 i32)
  (local $59 i32)
  (local $60 i32)
  (local $61 i32)
  (local $62 i32)
  (local $63 i32)
  (local $64 i32)
  (local $65 i32)
  (local $66 i32)
  (local $67 i32)
  (local $68 i32)
  (local $69 i32)
  (local $70 i32)
  (local $71 i32)
  (local $72 i32)
  (local $73 i32)
  (local $74 i32)
  (local $75 i32)
  (local $76 i32)
  (local $77 i32)
  (local $78 i32)
  (local $79 i32)
  (local $80 i32)
  (local $81 i32)
  (local $82 i32)
  (local $83 i32)
  (local $84 i32)
  (local $85 i32)
  (local $86 i32)
  (local $87 i32)
  (local $88 i32)
  (local $89 i32)
  (local $90 i32)
  (local $91 i32)
  (local $92 i32)
  (local $93 i32)
  (local $94 i32)
  (local $95 i32)
  (local $96 i32)
  (local $97 i32)
  (local $98 i32)
  (local $99 i32)
  (local $100 i32)
  (local $101 i32)
  (local $102 f32)
  (local $103 f32)
  (local $104 f64)
  (local $105 f64)
  (local $106 i32)
  (local $107 i32)
  (local $108 i32)
  (local $109 i32)
  (local $110 i32)
  (local $111 i32)
  (local $112 i32)
  (local $113 f32)
  (local $114 f32)
  (local $115 f64)
  (local $116 f64)
  (local $117 i32)
  (local $118 i32)
  (local $119 i32)
  (local $120 i32)
  (local $121 i32)
  (local $122 i32)
  (local $123 i32)
  (local $124 f32)
  (local $125 f32)
  (local $126 f64)
  (local $127 f64)
  (local $128 i32)
  (local $129 i32)
  (local $130 i32)
  (local $131 i32)
  (local $132 i32)
  (local $133 i32)
  (local $134 i32)
  (local $135 f32)
  (local $136 f32)
  (local $137 f64)
  (local $138 f64)
  (local $139 i32)
  (local $140 i32)
  (local $141 i32)
  (local $142 i32)
  (local $143 i32)
  (local $144 i32)
  (local $145 i32)
  (local $146 f32)
  (local $147 f32)
  (local $148 f64)
  (local $149 f64)
  (local $150 i32)
  (local $151 i32)
  (local $152 i32)
  (local $153 i32)
  (local $154 i32)
  (local $155 i32)
  (local $156 i32)
  (local $157 f32)
  (local $158 f32)
  (local $159 f64)
  (local $160 f64)
  (local $161 i32)
  (local $162 i32)
  (local $163 i32)
  (local $164 i32)
  (local $165 i32)
  (local $166 i32)
  (local $167 i32)
  (local $168 f32)
  (local $169 f32)
  (local $170 f64)
  (local $171 f64)
  (local $172 i32)
  (local $173 i32)
  (local $174 i32)
  (local $175 i32)
  (local $176 i32)
  (local $177 i32)
  (local $178 i32)
  (local $179 i32)
  (local $180 i32)
  (local $181 i32)
  (local $182 i32)
  (local $183 i32)
  (local $184 i32)
  (local $185 i32)
  (local $186 i32)
  (local $187 i32)
  (local $188 i32)
  (local $189 i32)
  (local $190 i32)
  (local $191 i32)
  (local $192 i32)
  (local $193 i32)
  (local $194 i32)
  (local $195 i32)
  (local $196 i32)
  (local $197 i32)
  (local $198 i32)
  (local $199 i32)
  (local $200 i32)
  (local $201 i32)
  (local $202 i32)
  (local $203 i32)
  (local $204 i32)
  (local $205 i32)
  (local $206 i32)
  (local $207 i32)
  (local $208 i32)
  (local $209 i32)
  (local $210 i32)
  (local $211 i32)
  (local $212 i32)
  (local $213 i32)
  (local $214 i32)
  (local $215 i32)
  (local $216 i32)
  (local $217 i32)
  (local $218 i32)
  (local $219 i32)
  (local $220 i32)
  (local $221 i32)
  (local $222 i32)
  (local $223 i32)
  (local $224 i32)
  (local $225 i32)
  (local $226 i32)
  (local $227 i32)
  (local $228 i32)
  (local $229 i32)
  (local $230 i32)
  (local $231 i32)
  (local $232 i32)
  (local $233 i32)
  (local $234 i32)
  (local $235 i32)
  (local $236 i32)
  (local $237 i32)
  (local $238 i32)
  (local $239 i32)
  (local $240 i32)
  (local $241 i32)
  (local $242 i32)
  (local $243 i32)
  (local $244 i32)
  (local $245 i32)
  (local $246 i32)
  (local $247 i32)
  (local $248 i32)
  (local $249 i32)
  (local $250 i32)
  (local $251 i32)
  (local $252 i32)
  (local $253 i32)
  (local $254 i32)
  (local $255 i32)
  (local $256 i32)
  (local $257 i32)
  (local $258 i32)
  (local $259 i32)
  (local $260 i32)
  (local $261 i32)
  (local $262 i32)
  (local $263 i32)
  (local $264 i32)
  (local $265 i32)
  (local $266 i32)
  (local $267 i32)
  (local $268 i32)
  (local $269 i32)
  (local $270 i32)
  (local $271 i32)
  (local $272 i32)
  (local $273 i32)
  (local $274 i32)
  (local $275 i32)
  (local $276 i32)
  (local $277 i32)
  (local $278 i32)
  (local $279 i32)
  (local $280 i32)
  (local $281 i32)
  (local $282 i32)
  (local $283 i32)
  (local $284 i32)
  (local $285 i32)
  (local $286 i32)
  (local $287 i32)
  (local $288 i32)
  (local $289 i32)
  (local $290 i32)
  (local $291 i32)
  (local $292 i32)
  (local $293 i32)
  (local $294 i32)
  (local $295 i32)
  (local $296 i32)
  (local $297 i32)
  (local $298 i32)
  (local $299 i32)
  (local $300 i32)
  (local $301 i32)
  (local $302 i32)
  (local $303 i32)
  (local $304 i32)
  (local $305 i32)
  (local $306 i32)
  (local $307 i32)
  (local $308 i32)
  (local $309 i32)
  (local $310 i32)
  (local $311 i32)
  (local $312 i32)
  (local $313 i32)
  (local $314 i32)
  (local $315 i32)
  (local $316 i32)
  (local $317 i32)
  (local $318 i32)
  (local $319 i32)
  (local $320 i32)
  (local $321 i32)
  (local $322 i32)
  (local $323 i32)
  (local $324 i32)
  (local $325 i32)
  (local $326 i32)
  (local $327 i32)
  (local $328 i32)
  (local $329 i32)
  (local $330 i32)
  (local $331 i32)
  (local $332 i32)
  (local $333 i32)
  (local $334 i32)
  (local $335 i32)
  (local $336 i32)
  (local $337 i32)
  (local $338 i32)
  (local $339 i32)
  (local $340 i32)
  (local $341 i32)
  (local $342 i32)
  (local $343 i32)
  (local $344 i32)
  (local $345 i32)
  (local $346 i32)
  (local $347 i32)
  (local $348 i32)
  (local $349 i32)
  (local $350 i32)
  (local $351 i32)
  (local $352 i32)
  (local $353 i32)
  (local $354 i32)
  (local $355 i32)
  (local $356 i32)
  (local $357 i32)
  (local $358 i32)
  (local $359 i32)
  (local $360 i32)
  (local $361 i32)
  (local $362 i32)
  (local $363 i32)
  (local $364 i32)
  (local $365 i32)
  (local $366 i32)
  (local $367 i32)
  (local $368 i32)
  (local $369 i32)
  (local $370 i32)
  (local $371 i32)
  (local $372 i32)
  (local $373 i32)
  (local $374 i32)
  (local $375 i32)
  (local $376 i32)
  (local $377 i32)
  (local $378 i32)
  (local $379 i32)
  (local $380 i32)
  (local $381 i32)
  (local $382 i32)
  (local $383 i32)
  (local $384 i32)
  (local $385 i32)
  (local $386 i32)
  (local $387 i32)
  (local $388 i32)
  (local $389 i32)
  (local $390 i32)
  (local $391 i32)
  (local $392 i32)
  (local $393 i32)
  (local $394 i32)
  (local $395 i32)
  (local $396 i32)
  (local $397 i32)
  (local $398 i32)
  (local $399 i32)
  (local $400 i32)
  (local $401 i32)
  (local $402 i32)
  (local $403 i32)
  (local $404 i32)
  (local $405 i32)
  (local $406 i32)
  (local $407 i32)
  (local $408 i32)
  (local $409 i32)
  (local $410 i32)
  (local $411 i32)
  (local $412 i32)
  (local $413 i32)
  (local $414 i32)
  (local $415 i32)
  (local $416 i32)
  (local $417 i32)
  (local $418 i32)
  (local $419 i32)
  (local $420 i32)
  (local $421 i32)
  (local $422 i32)
  (local $423 i32)
  (local $424 i32)
  (local $425 i32)
  (local $426 i32)
  (local $427 i32)
  (local $428 i32)
  (local $429 i32)
  (local $430 i32)
  (local $431 i32)
  (local $432 i32)
  (local $433 i32)
  (local $434 i32)
  (local $435 i32)
  (local $436 i32)
  (local $437 i32)
  (local $438 i32)
  (local $439 i32)
  (local $440 i32)
  (local $441 i32)
  (local $442 i32)
  (local $443 i32)
  (local $444 i32)
  (local $445 i32)
  (local $446 i32)
  (local $447 i32)
  (local $448 i32)
  (local $449 i32)
  (local $450 i32)
  (local $451 i32)
  (local $452 i32)
  (local $453 i32)
  (local $454 i32)
  (local $455 i32)
  (local $456 i32)
  (local $457 i32)
  (local $458 i32)
  (local $459 i32)
  (local $460 i32)
  (local $461 i32)
  (local $462 i32)
  (local $463 i32)
  (local $464 i32)
  (local $465 i32)
  (local $466 i32)
  (local $467 i32)
  (local $468 i32)
  (local $469 i32)
  (local $470 i32)
  (local $471 i32)
  (local $472 i32)
  (local $473 i32)
  (local $474 i32)
  (local $475 i32)
  (local $476 i32)
  (local $477 i32)
  (local $478 i32)
  (local $479 i32)
  (local $480 i32)
  (local $481 i32)
  (local $482 i32)
  (local $483 i32)
  (local $484 i32)
  (local $485 i32)
  (local $486 i32)
  (local $487 i32)
  (local $488 i32)
  (local $489 i32)
  (local $490 i32)
  (local $491 i32)
  (local $492 i32)
  (local $493 i32)
  (local $494 i32)
  (local $495 i32)
  (local $496 i32)
  (local $497 i32)
  (local $498 i32)
  (local $499 i32)
  (local $500 i32)
  (local $501 i32)
  (local $502 i32)
  (local $503 i32)
  (local $504 i32)
  (local $505 i32)
  (local $506 i32)
  (local $507 i32)
  (local $508 i32)
  (local $509 i32)
  (local $510 i32)
  (local $511 i32)
  (local $512 i32)
  (local $513 i32)
  (local $514 i32)
  (local $515 i32)
  (local $516 i32)
  (local $517 i32)
  (local $518 i32)
  (local $519 i32)
  (local $520 i32)
  (local $521 i32)
  (local $522 i32)
  (local $523 i32)
  (local $524 i32)
  (local $525 i32)
  (local $526 i32)
  (local $527 i32)
  (local $528 i32)
  (local $529 i32)
  (local $530 i32)
  (local $531 i32)
  (local $532 i32)
  (local $533 i32)
  (local $534 i32)
  (local $535 i32)
  (local $536 i32)
  (local $537 i32)
  (local $538 i32)
  (local $539 i32)
  (local $540 i32)
  (local $541 i32)
  (local $542 i32)
  (local $543 i32)
  (local $544 i32)
  (local $545 i32)
  (local $546 i32)
  (local $547 i32)
  (local $548 i32)
  (local $549 i32)
  (local $550 i32)
  (local $551 i32)
  (local $552 i32)
  (local $553 i32)
  (local $554 i32)
  (local $555 i32)
  (local $556 i32)
  (local $557 i32)
  (local $558 i32)
  (local $559 i32)
  (local $560 i32)
  (local $561 i32)
  (local $562 i32)
  (local $563 i32)
  (local $564 i32)
  (local $565 i32)
  (local $566 i32)
  (local $567 i32)
  (local $568 i32)
  (local $569 i32)
  (local $570 i32)
  (local $571 i32)
  (local $572 i32)
  (local $573 i32)
  (local $574 i32)
  (local $575 i32)
  (local $576 i32)
  (local $577 i32)
  (local $578 i32)
  (local $579 i32)
  (local $580 i32)
  (local $581 i32)
  (local $582 i32)
  (local $583 i32)
  (local $584 i32)
  (local $585 i32)
  (local $586 i32)
  (local $587 i32)
  (local $588 i32)
  (local $589 i32)
  (local $590 i32)
  (local $591 i32)
  (local $592 i32)
  (local $593 i32)
  (local $594 i32)
  (local $595 i32)
  (local $596 i32)
  (local $597 i32)
  (local $598 i32)
  (local $599 i32)
  (local $600 i32)
  (local $601 i32)
  (local $602 i32)
  (local $603 i32)
  (local $604 i32)
  (local $605 i32)
  (local $606 i32)
  (local $607 i32)
  (local $608 i32)
  (local $609 i32)
  (local $610 i32)
  (local $611 i32)
  (local $612 i32)
  (local $613 i32)
  (local $614 i32)
  (local $615 i32)
  (local $616 i32)
  (local $617 i32)
  (local $618 i32)
  (local $619 i32)
  (local $620 i32)
  (local $621 i32)
  (local $622 i32)
  (local $623 i32)
  (local $624 i32)
  (local $625 i32)
  (local $626 i32)
  (local $627 i32)
  (local $628 i32)
  (local $629 i32)
  (local $630 i32)
  (local $631 i32)
  (local $632 i32)
  (local $633 i32)
  (local $634 i32)
  (local $635 i32)
  (local $636 i32)
  (local $637 i32)
  (local $638 i32)
  (local $639 i32)
  (local $640 i32)
  (local $641 i32)
  (local $642 i32)
  (local $643 i32)
  (local $644 i32)
  (local $645 i32)
  (local $646 i32)
  (local $647 i32)
  (local $648 i32)
  (local $649 i32)
  (local $650 i32)
  (local $651 i32)
  (local $652 i32)
  (local $653 i32)
  (local $654 i32)
  (local $655 i32)
  (local $656 i32)
  (local $657 i32)
  (local $658 i32)
  (local $659 i32)
  (local $660 i32)
  (local $661 i32)
  (local $662 i32)
  (local $663 i32)
  (local $664 i32)
  (local $665 i32)
  (local $666 i32)
  (local $667 i32)
  (local $668 i32)
  (local $669 i32)
  (local $670 i32)
  (local $671 i32)
  (local $672 i32)
  (local $673 i32)
  (local $674 i32)
  (local $675 i32)
  (local $676 i32)
  (local $677 i32)
  (local $678 i32)
  (local $679 i32)
  (local $680 i32)
  (local $681 i32)
  (local $682 i32)
  (local $683 i32)
  (local $684 i32)
  (local $685 i32)
  (local $686 i32)
  (local $687 i32)
  (local $688 i32)
  (local $689 i32)
  (local $690 i32)
  (local $691 i32)
  (local $692 i32)
  (local $693 i32)
  (local $694 i32)
  (local $695 i32)
  (local $696 i32)
  (local $697 i32)
  (local $698 i32)
  (local $699 i32)
  (local $700 i32)
  (local $701 i32)
  (local $702 i32)
  (local $703 i32)
  (local $704 i32)
  (local $705 i32)
  (local $706 i32)
  (local $707 i32)
  (local $708 i32)
  (local $709 i32)
  (local $710 i32)
  (local $711 i32)
  (local $712 i32)
  (local $713 i32)
  (local $714 i32)
  (local $715 i32)
  (local $716 i32)
  (local $717 i32)
  (local $718 i32)
  (local $719 i32)
  (local $720 i32)
  (local $721 i32)
  (local $722 i32)
  (local $723 i32)
  (local $724 i32)
  (local $725 i32)
  (local $726 i32)
  (local $727 i32)
  (local $728 i32)
  (local $729 f32)
  (local $730 f32)
  (local $731 f64)
  (local $732 f64)
  (local $733 i32)
  (local $734 i32)
  (local $735 i32)
  (local $736 i32)
  (local $737 i32)
  (local $738 i32)
  (local $739 i32)
  (local $740 i32)
  (local $741 i32)
  (local $742 i32)
  (local $743 f32)
  (local $744 f32)
  (local $745 f64)
  (local $746 f64)
  (local $747 i32)
  (local $748 i32)
  (local $749 i32)
  (local $750 i32)
  (local $751 i32)
  (local $752 i32)
  (local $753 i32)
  (local $754 i32)
  (local $755 i32)
  (local $756 i32)
  (local $757 f64)
  (local $758 f64)
  (local $759 f64)
  (local $760 f64)
  (local $761 i32)
  (local $762 i32)
  (local $763 i32)
  (local $764 i32)
  (local $765 i32)
  (local $766 i32)
  (local $767 i32)
  (local $768 i32)
  (local $769 i32)
  (local $770 i32)
  (local $771 i32)
  (local $772 i32)
  (local $773 i32)
  (local $774 i32)
  (local $775 i32)
  (local $776 i32)
  (local $777 i32)
  (local $778 i32)
  (local $779 i32)
  (local $780 i32)
  (local $781 i32)
  (local $782 i32)
  (local $783 i32)
  (local $784 i32)
  (local $785 i32)
  (local $786 i32)
  (local $787 i32)
  (local $788 i32)
  (local $789 i32)
  (local $790 i32)
  (local $791 i32)
  (local $792 i32)
  (local $793 i32)
  (local $794 i32)
  (local $795 i32)
  (local $796 i32)
  (local $797 i32)
  (local $798 i32)
  (local $799 i32)
  (local $800 i32)
  (local $801 i32)
  (local $802 i32)
  (local $803 i32)
  (local $804 i32)
  (local $805 i32)
  (local $806 i32)
  (local $807 i32)
  (local $808 i32)
  (local $809 i32)
  (local $810 i32)
  (local $811 i32)
  (local $812 i32)
  (local $813 i32)
  (local $814 i32)
  (local $815 i32)
  (local $816 i32)
  (local $817 i32)
  (local $818 i32)
  (local $819 i32)
  (local $820 i32)
  (local $821 i32)
  (local $822 i32)
  (local $823 i32)
  (local $824 i32)
  (local $825 i32)
  (local $826 i32)
  (local $827 i32)
  (local $828 i32)
  (local $829 i32)
  (local $830 i32)
  (local $831 i32)
  (local $832 i32)
  (local $833 i32)
  (local $834 i32)
  (local $835 i32)
  (local $836 i32)
  (local $837 i32)
  (local $838 i32)
  (local $839 i32)
  (local $840 i32)
  (local $841 i32)
  (local $842 i32)
  (local $843 i32)
  (local $844 i32)
  (local $845 i32)
  (local $846 i32)
  (local $847 i32)
  (local $848 i32)
  (local $849 i32)
  (local $850 i32)
  (local $851 i32)
  (local $852 i32)
  (local $853 i32)
  (local $854 i32)
  (local $855 i32)
  (local $856 i32)
  (local $857 i32)
  (local $858 i32)
  (local $859 i32)
  (local $860 i32)
  (local $861 i32)
  (local $862 i32)
  (local $863 i32)
  (local $864 i32)
  (local $865 i32)
  (local $866 i32)
  (local $867 i32)
  (local $868 i32)
  (local $869 i32)
  (local $870 i32)
  (local $871 i32)
  (local $872 i32)
  (local $873 i32)
  (local $874 i32)
  (local $875 i32)
  (local $876 i32)
  (local $877 i32)
  (local $878 i32)
  (local $879 i32)
  (local $880 i32)
  (local $881 i32)
  (local $882 i32)
  (local $883 i32)
  (local $884 i32)
  (local $885 i32)
  (local $886 i32)
  (local $887 i32)
  (local $888 i32)
  (local $889 i32)
  (local $890 i32)
  (local $891 i32)
  (local $892 i32)
  (local $893 i32)
  (local $894 i32)
  (local $895 i32)
  (local $896 i32)
  (local $897 i32)
  (local $898 i32)
  (local $899 i32)
  (local $900 i32)
  (local $901 i32)
  (local $902 i32)
  (local $903 i32)
  (local $904 i32)
  (local $905 i32)
  (local $906 i32)
  (local $907 i32)
  (local $908 i32)
  (local $909 i32)
  (local $910 i32)
  (local $911 i32)
  (local $912 i32)
  (local $913 i32)
  (local $914 i32)
  (local $915 i32)
  (local $916 i32)
  (local $917 i32)
  (local $918 i32)
  (local $919 i32)
  (local $920 i32)
  (local $921 i32)
  (local $922 i32)
  (local $923 i32)
  (local $924 i32)
  (local $925 i32)
  (local $926 i32)
  (local $927 i32)
  (local $928 i32)
  (local $929 i32)
  (local $930 i32)
  (local $931 i32)
  (local $932 i32)
  (local $933 i32)
  (local $934 i32)
  (local $935 i32)
  (local $936 i32)
  (local $937 i32)
  (local $938 i32)
  (local $939 i32)
  (local $940 i32)
  (local $941 i32)
  (local $942 i32)
  (local $943 i32)
  (local $944 i32)
  (local $945 i32)
  (local $946 i32)
  (local $947 i32)
  (local $948 i32)
  (local $949 i32)
  (local $950 i32)
  (local $951 i32)
  (local $952 i32)
  (local $953 i32)
  (local $954 i32)
  (local $955 i32)
  (local $956 i32)
  (local $957 i32)
  (local $958 i32)
  (local $959 i32)
  (local $960 i32)
  (local $961 i32)
  (local $962 i32)
  (local $963 i32)
  (local $964 i32)
  (local $965 i32)
  (local $966 i32)
  (local $967 i32)
  (local $968 i32)
  (local $969 i32)
  (local $970 i32)
  (local $971 i32)
  (local $972 i32)
  (local $973 i32)
  (local $974 i32)
  (local $975 i32)
  (local $976 i32)
  (local $977 i32)
  (local $978 i32)
  (local $979 i32)
  (local $980 i32)
  (local $981 i32)
  (local $982 i32)
  (local $983 i32)
  (local $984 i32)
  (local $985 i32)
  (local $986 i32)
  (local $987 i32)
  (local $988 i32)
  (local $989 i32)
  (local $990 i32)
  (local $991 i32)
  (local $992 i32)
  (local $993 i32)
  (local $994 i32)
  (local $995 i32)
  (local $996 i32)
  (local $997 i32)
  (local $998 i32)
  (local $999 i32)
  (local $1000 i32)
  (local $1001 i32)
  (local $1002 i32)
  (local $1003 i32)
  (local $1004 i32)
  (local $1005 i32)
  (local $1006 i32)
  (local $1007 i32)
  (local $1008 i32)
  (local $1009 i32)
  (local $1010 i32)
  (local $1011 i32)
  (local $1012 i32)
  (local $1013 i32)
  (local $1014 i32)
  (local $1015 i32)
  (local $1016 i32)
  (local $1017 i32)
  (local $1018 i32)
  (local $1019 i32)
  (local $1020 i32)
  (local $1021 i32)
  (local $1022 i32)
  (local $1023 i32)
  (local $1024 i32)
  (local $1025 i32)
  (local $1026 i32)
  (local $1027 i32)
  (local $1028 i32)
  (local $1029 i32)
  (local $1030 i32)
  (local $1031 i32)
  (local $1032 i32)
  (local $1033 i32)
  (local $1034 i32)
  (local $1035 i32)
  (local $1036 i32)
  (local $1037 i32)
  (local $1038 i32)
  (local $1039 i32)
  (local $1040 i32)
  (local $1041 i32)
  (local $1042 i32)
  (local $1043 i32)
  (local $1044 i32)
  (local $1045 i32)
  (local $1046 i32)
  (local $1047 i32)
  (local $1048 i32)
  (local $1049 i32)
  (local $1050 i32)
  (local $1051 i32)
  (local $1052 i32)
  (local $1053 i32)
  (local $1054 i32)
  (local $1055 i32)
  (local $1056 i32)
  (local $1057 i32)
  (local $1058 i32)
  (local $1059 i32)
  (local $1060 i32)
  (local $1061 i32)
  (local $1062 i32)
  (local $1063 i32)
  (local $1064 i32)
  (local $1065 i32)
  (local $1066 i32)
  (local $1067 i32)
  (local $1068 i32)
  (local $1069 i32)
  (local $1070 i32)
  (local $1071 i32)
  (local $1072 i32)
  (local $1073 i32)
  (local $1074 i32)
  (local $1075 i32)
  (local $1076 i32)
  (local $1077 i32)
  (local $1078 i32)
  (local $1079 i32)
  (local $1080 i32)
  (local $1081 i32)
  (local $1082 i32)
  (local $1083 i32)
  (local $1084 i32)
  (local $1085 i32)
  (local $1086 i32)
  (local $1087 i32)
  (local $1088 i32)
  (local $1089 i32)
  (local $1090 i32)
  (local $1091 i32)
  (local $1092 i32)
  (local $1093 i32)
  (local $1094 i32)
  (local $1095 i32)
  (local $1096 i32)
  (local $1097 i32)
  (local $1098 i32)
  (local $1099 i32)
  (local $1100 i32)
  (local $1101 i32)
  (local $1102 i32)
  (local $1103 i32)
  (local $1104 i32)
  (local $1105 i32)
  (local $1106 i32)
  (local $1107 i32)
  (local $1108 i32)
  (local $1109 i32)
  (local $1110 i32)
  (local $1111 i32)
  (local $1112 i32)
  (local $1113 i32)
  (local $1114 i32)
  (local $1115 i32)
  (local $1116 i32)
  (local $1117 i32)
  (local $1118 i32)
  (local $1119 i32)
  (local $1120 i32)
  (local $1121 i32)
  (local $1122 i32)
  (local $1123 i32)
  (local $1124 i32)
  (local $1125 i32)
  (local $1126 i32)
  (local $1127 i32)
  (local $1128 i32)
  (local $1129 i32)
  (local $1130 i32)
  (local $1131 i32)
  (local $1132 i32)
  (local $1133 i32)
  (local $1134 i32)
  (local $1135 i32)
  (local $1136 i32)
  (local $1137 i32)
  (local $1138 i32)
  (local $1139 i32)
  (local $1140 i32)
  (local $1141 i32)
  (local $1142 i32)
  (local $1143 i32)
  (local $1144 i32)
  (local $1145 i32)
  (local $1146 i32)
  (local $1147 i32)
  (local $1148 i32)
  (local $1149 i32)
  (local $1150 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 1140
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 1140
  memory.fill $0
  i32.const 0
  i32.const 0
  i32.eq
  drop
  i32.const 4
  i32.const 4
  i32.eq
  drop
  i32.const 8
  i32.const 8
  i32.eq
  drop
  memory.size $0
  i32.const 16
  i32.shl
  global.get $~lib/memory/__heap_base
  i32.sub
  i32.const 1
  i32.shr_u
  global.set $~lib/rt/itcms/threshold
  i32.const 112
  call $~lib/rt/itcms/initLazy
  global.set $~lib/rt/itcms/pinSpace
  i32.const 144
  call $~lib/rt/itcms/initLazy
  global.set $~lib/rt/itcms/toSpace
  i32.const 224
  call $~lib/rt/itcms/initLazy
  global.set $~lib/rt/itcms/fromSpace
  i32.const 0
  i32.const 0
  call $~lib/array/Array<i32>#constructor
  global.set $std/array/arr
  i32.const 0
  call $~lib/array/Array.isArray<~lib/array/Array<i32>|null>
  i32.eqz
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $0
  i32.const 0
  local.set $1
  local.get $0
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 4
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store $0 offset=4
  end
  local.get $0
  local.get $1
  call $std/array/Ref#set:v
  local.get $0
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array.isArray<std/array/Ref>
  i32.eqz
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint8Array#constructor
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array.isArray<~lib/typedarray/Uint8Array>
  i32.eqz
  i32.eqz
  if
   unreachable
  end
  i32.const 1
  call $~lib/array/Array.isArray<i32>
  i32.eqz
  i32.eqz
  if
   unreachable
  end
  i32.const 272
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array.isArray<~lib/string/String>
  i32.eqz
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array.isArray<~lib/array/Array<i32>>
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 5
  i32.const 0
  i32.const 6
  i32.const 304
  call $~lib/rt/__newArray
  local.tee $4
  i32.store $0 offset=8
  local.get $4
  i32.const 1
  i32.const 1
  i32.const 3
  call $~lib/array/Array<u8>#fill
  drop
  block $std/array/isArraysEqual<u8>|inlined.0 (result i32)
   local.get $4
   local.set $7
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 0
   i32.const 6
   i32.const 368
   call $~lib/rt/__newArray
   local.tee $8
   i32.store $0 offset=12
   i32.const 0
   local.set $9
   local.get $9
   i32.eqz
   if
    local.get $7
    call $~lib/array/Array<u8>#get:length
    local.set $9
    local.get $9
    local.get $8
    call $~lib/array/Array<u8>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<u8>|inlined.0
    end
    local.get $7
    local.get $8
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<u8>|inlined.0
    end
   end
   i32.const 0
   local.set $10
   loop $for-loop|0
    local.get $10
    local.get $9
    i32.lt_s
    local.set $11
    local.get $11
    if
     i32.const 0
     drop
     local.get $7
     local.get $10
     call $~lib/array/Array<u8>#__get
     local.get $8
     local.get $10
     call $~lib/array/Array<u8>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<u8>|inlined.0
     end
     local.get $10
     i32.const 1
     i32.add
     local.set $10
     br $for-loop|0
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $4
  i32.const 0
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/array/Array<u8>#fill
  drop
  block $std/array/isArraysEqual<u8>|inlined.1 (result i32)
   local.get $4
   local.set $14
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 0
   i32.const 6
   i32.const 400
   call $~lib/rt/__newArray
   local.tee $15
   i32.store $0 offset=16
   i32.const 0
   local.set $16
   local.get $16
   i32.eqz
   if
    local.get $14
    call $~lib/array/Array<u8>#get:length
    local.set $16
    local.get $16
    local.get $15
    call $~lib/array/Array<u8>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<u8>|inlined.1
    end
    local.get $14
    local.get $15
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<u8>|inlined.1
    end
   end
   i32.const 0
   local.set $17
   loop $for-loop|1
    local.get $17
    local.get $16
    i32.lt_s
    local.set $18
    local.get $18
    if
     i32.const 0
     drop
     local.get $14
     local.get $17
     call $~lib/array/Array<u8>#__get
     local.get $15
     local.get $17
     call $~lib/array/Array<u8>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<u8>|inlined.1
     end
     local.get $17
     i32.const 1
     i32.add
     local.set $17
     br $for-loop|1
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $4
  i32.const 1
  i32.const 0
  i32.const -3
  call $~lib/array/Array<u8>#fill
  drop
  block $std/array/isArraysEqual<u8>|inlined.2 (result i32)
   local.get $4
   local.set $21
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 0
   i32.const 6
   i32.const 432
   call $~lib/rt/__newArray
   local.tee $22
   i32.store $0 offset=20
   i32.const 0
   local.set $23
   local.get $23
   i32.eqz
   if
    local.get $21
    call $~lib/array/Array<u8>#get:length
    local.set $23
    local.get $23
    local.get $22
    call $~lib/array/Array<u8>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<u8>|inlined.2
    end
    local.get $21
    local.get $22
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<u8>|inlined.2
    end
   end
   i32.const 0
   local.set $24
   loop $for-loop|2
    local.get $24
    local.get $23
    i32.lt_s
    local.set $25
    local.get $25
    if
     i32.const 0
     drop
     local.get $21
     local.get $24
     call $~lib/array/Array<u8>#__get
     local.get $22
     local.get $24
     call $~lib/array/Array<u8>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<u8>|inlined.2
     end
     local.get $24
     i32.const 1
     i32.add
     local.set $24
     br $for-loop|2
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $4
  i32.const 2
  i32.const -2
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/array/Array<u8>#fill
  drop
  block $std/array/isArraysEqual<u8>|inlined.3 (result i32)
   local.get $4
   local.set $28
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 0
   i32.const 6
   i32.const 464
   call $~lib/rt/__newArray
   local.tee $29
   i32.store $0 offset=24
   i32.const 0
   local.set $30
   local.get $30
   i32.eqz
   if
    local.get $28
    call $~lib/array/Array<u8>#get:length
    local.set $30
    local.get $30
    local.get $29
    call $~lib/array/Array<u8>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<u8>|inlined.3
    end
    local.get $28
    local.get $29
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<u8>|inlined.3
    end
   end
   i32.const 0
   local.set $31
   loop $for-loop|3
    local.get $31
    local.get $30
    i32.lt_s
    local.set $32
    local.get $32
    if
     i32.const 0
     drop
     local.get $28
     local.get $31
     call $~lib/array/Array<u8>#__get
     local.get $29
     local.get $31
     call $~lib/array/Array<u8>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<u8>|inlined.3
     end
     local.get $31
     i32.const 1
     i32.add
     local.set $31
     br $for-loop|3
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $4
  i32.const 0
  i32.const 1
  i32.const 0
  call $~lib/array/Array<u8>#fill
  drop
  block $std/array/isArraysEqual<u8>|inlined.4 (result i32)
   local.get $4
   local.set $35
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 0
   i32.const 6
   i32.const 496
   call $~lib/rt/__newArray
   local.tee $36
   i32.store $0 offset=28
   i32.const 0
   local.set $37
   local.get $37
   i32.eqz
   if
    local.get $35
    call $~lib/array/Array<u8>#get:length
    local.set $37
    local.get $37
    local.get $36
    call $~lib/array/Array<u8>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<u8>|inlined.4
    end
    local.get $35
    local.get $36
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<u8>|inlined.4
    end
   end
   i32.const 0
   local.set $38
   loop $for-loop|4
    local.get $38
    local.get $37
    i32.lt_s
    local.set $39
    local.get $39
    if
     i32.const 0
     drop
     local.get $35
     local.get $38
     call $~lib/array/Array<u8>#__get
     local.get $36
     local.get $38
     call $~lib/array/Array<u8>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<u8>|inlined.4
     end
     local.get $38
     i32.const 1
     i32.add
     local.set $38
     br $for-loop|4
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $4
  i32.const -1
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/array/Array<u8>#fill
  drop
  block $std/array/isArraysEqual<u8>|inlined.5 (result i32)
   local.get $4
   local.set $42
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 0
   i32.const 6
   i32.const 528
   call $~lib/rt/__newArray
   local.tee $43
   i32.store $0 offset=32
   i32.const 0
   local.set $44
   local.get $44
   i32.eqz
   if
    local.get $42
    call $~lib/array/Array<u8>#get:length
    local.set $44
    local.get $44
    local.get $43
    call $~lib/array/Array<u8>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<u8>|inlined.5
    end
    local.get $42
    local.get $43
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<u8>|inlined.5
    end
   end
   i32.const 0
   local.set $45
   loop $for-loop|5
    local.get $45
    local.get $44
    i32.lt_s
    local.set $46
    local.get $46
    if
     i32.const 0
     drop
     local.get $42
     local.get $45
     call $~lib/array/Array<u8>#__get
     local.get $43
     local.get $45
     call $~lib/array/Array<u8>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<u8>|inlined.5
     end
     local.get $45
     i32.const 1
     i32.add
     local.set $45
     br $for-loop|5
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 5
  i32.const 2
  i32.const 7
  i32.const 560
  call $~lib/rt/__newArray
  local.tee $49
  i32.store $0 offset=36
  local.get $49
  i32.const 1
  i32.const 1
  i32.const 3
  call $~lib/array/Array<u32>#fill
  drop
  block $std/array/isArraysEqual<u32>|inlined.0 (result i32)
   local.get $49
   local.set $52
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 7
   i32.const 608
   call $~lib/rt/__newArray
   local.tee $53
   i32.store $0 offset=40
   i32.const 0
   local.set $54
   local.get $54
   i32.eqz
   if
    local.get $52
    call $~lib/array/Array<u32>#get:length
    local.set $54
    local.get $54
    local.get $53
    call $~lib/array/Array<u32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<u32>|inlined.0
    end
    local.get $52
    local.get $53
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<u32>|inlined.0
    end
   end
   i32.const 0
   local.set $55
   loop $for-loop|6
    local.get $55
    local.get $54
    i32.lt_s
    local.set $56
    local.get $56
    if
     i32.const 0
     drop
     local.get $52
     local.get $55
     call $~lib/array/Array<u32>#__get
     local.get $53
     local.get $55
     call $~lib/array/Array<u32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<u32>|inlined.0
     end
     local.get $55
     i32.const 1
     i32.add
     local.set $55
     br $for-loop|6
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $49
  i32.const 0
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/array/Array<u32>#fill
  drop
  block $std/array/isArraysEqual<u32>|inlined.1 (result i32)
   local.get $49
   local.set $59
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 7
   i32.const 656
   call $~lib/rt/__newArray
   local.tee $60
   i32.store $0 offset=44
   i32.const 0
   local.set $61
   local.get $61
   i32.eqz
   if
    local.get $59
    call $~lib/array/Array<u32>#get:length
    local.set $61
    local.get $61
    local.get $60
    call $~lib/array/Array<u32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<u32>|inlined.1
    end
    local.get $59
    local.get $60
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<u32>|inlined.1
    end
   end
   i32.const 0
   local.set $62
   loop $for-loop|7
    local.get $62
    local.get $61
    i32.lt_s
    local.set $63
    local.get $63
    if
     i32.const 0
     drop
     local.get $59
     local.get $62
     call $~lib/array/Array<u32>#__get
     local.get $60
     local.get $62
     call $~lib/array/Array<u32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<u32>|inlined.1
     end
     local.get $62
     i32.const 1
     i32.add
     local.set $62
     br $for-loop|7
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $49
  i32.const 1
  i32.const 0
  i32.const -3
  call $~lib/array/Array<u32>#fill
  drop
  block $std/array/isArraysEqual<u32>|inlined.2 (result i32)
   local.get $49
   local.set $66
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 7
   i32.const 704
   call $~lib/rt/__newArray
   local.tee $67
   i32.store $0 offset=48
   i32.const 0
   local.set $68
   local.get $68
   i32.eqz
   if
    local.get $66
    call $~lib/array/Array<u32>#get:length
    local.set $68
    local.get $68
    local.get $67
    call $~lib/array/Array<u32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<u32>|inlined.2
    end
    local.get $66
    local.get $67
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<u32>|inlined.2
    end
   end
   i32.const 0
   local.set $69
   loop $for-loop|8
    local.get $69
    local.get $68
    i32.lt_s
    local.set $70
    local.get $70
    if
     i32.const 0
     drop
     local.get $66
     local.get $69
     call $~lib/array/Array<u32>#__get
     local.get $67
     local.get $69
     call $~lib/array/Array<u32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<u32>|inlined.2
     end
     local.get $69
     i32.const 1
     i32.add
     local.set $69
     br $for-loop|8
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $49
  i32.const 2
  i32.const -2
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/array/Array<u32>#fill
  drop
  block $std/array/isArraysEqual<u32>|inlined.3 (result i32)
   local.get $49
   local.set $73
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 7
   i32.const 752
   call $~lib/rt/__newArray
   local.tee $74
   i32.store $0 offset=52
   i32.const 0
   local.set $75
   local.get $75
   i32.eqz
   if
    local.get $73
    call $~lib/array/Array<u32>#get:length
    local.set $75
    local.get $75
    local.get $74
    call $~lib/array/Array<u32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<u32>|inlined.3
    end
    local.get $73
    local.get $74
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<u32>|inlined.3
    end
   end
   i32.const 0
   local.set $76
   loop $for-loop|9
    local.get $76
    local.get $75
    i32.lt_s
    local.set $77
    local.get $77
    if
     i32.const 0
     drop
     local.get $73
     local.get $76
     call $~lib/array/Array<u32>#__get
     local.get $74
     local.get $76
     call $~lib/array/Array<u32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<u32>|inlined.3
     end
     local.get $76
     i32.const 1
     i32.add
     local.set $76
     br $for-loop|9
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $49
  i32.const 0
  i32.const 1
  i32.const 0
  call $~lib/array/Array<u32>#fill
  drop
  block $std/array/isArraysEqual<u32>|inlined.4 (result i32)
   local.get $49
   local.set $80
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 7
   i32.const 800
   call $~lib/rt/__newArray
   local.tee $81
   i32.store $0 offset=56
   i32.const 0
   local.set $82
   local.get $82
   i32.eqz
   if
    local.get $80
    call $~lib/array/Array<u32>#get:length
    local.set $82
    local.get $82
    local.get $81
    call $~lib/array/Array<u32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<u32>|inlined.4
    end
    local.get $80
    local.get $81
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<u32>|inlined.4
    end
   end
   i32.const 0
   local.set $83
   loop $for-loop|10
    local.get $83
    local.get $82
    i32.lt_s
    local.set $84
    local.get $84
    if
     i32.const 0
     drop
     local.get $80
     local.get $83
     call $~lib/array/Array<u32>#__get
     local.get $81
     local.get $83
     call $~lib/array/Array<u32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<u32>|inlined.4
     end
     local.get $83
     i32.const 1
     i32.add
     local.set $83
     br $for-loop|10
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $49
  i32.const -1
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/array/Array<u32>#fill
  drop
  block $std/array/isArraysEqual<u32>|inlined.5 (result i32)
   local.get $49
   local.set $87
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 7
   i32.const 848
   call $~lib/rt/__newArray
   local.tee $88
   i32.store $0 offset=60
   i32.const 0
   local.set $89
   local.get $89
   i32.eqz
   if
    local.get $87
    call $~lib/array/Array<u32>#get:length
    local.set $89
    local.get $89
    local.get $88
    call $~lib/array/Array<u32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<u32>|inlined.5
    end
    local.get $87
    local.get $88
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<u32>|inlined.5
    end
   end
   i32.const 0
   local.set $90
   loop $for-loop|11
    local.get $90
    local.get $89
    i32.lt_s
    local.set $91
    local.get $91
    if
     i32.const 0
     drop
     local.get $87
     local.get $90
     call $~lib/array/Array<u32>#__get
     local.get $88
     local.get $90
     call $~lib/array/Array<u32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<u32>|inlined.5
     end
     local.get $90
     i32.const 1
     i32.add
     local.set $90
     br $for-loop|11
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 5
  i32.const 2
  i32.const 8
  i32.const 896
  call $~lib/rt/__newArray
  local.tee $94
  i32.store $0 offset=64
  local.get $94
  f32.const 1
  i32.const 1
  i32.const 3
  call $~lib/array/Array<f32>#fill
  drop
  block $std/array/isArraysEqual<f32>|inlined.0 (result i32)
   local.get $94
   local.set $97
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 8
   i32.const 944
   call $~lib/rt/__newArray
   local.tee $98
   i32.store $0 offset=68
   i32.const 0
   local.set $99
   local.get $99
   i32.eqz
   if
    local.get $97
    call $~lib/array/Array<f32>#get:length
    local.set $99
    local.get $99
    local.get $98
    call $~lib/array/Array<f32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<f32>|inlined.0
    end
    local.get $97
    local.get $98
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<f32>|inlined.0
    end
   end
   i32.const 0
   local.set $100
   loop $for-loop|12
    local.get $100
    local.get $99
    i32.lt_s
    local.set $101
    local.get $101
    if
     block $for-continue|12
      i32.const 1
      drop
      local.get $97
      local.get $100
      call $~lib/array/Array<f32>#__get
      local.tee $102
      local.get $102
      f32.ne
      if (result i32)
       local.get $98
       local.get $100
       call $~lib/array/Array<f32>#__get
       local.tee $103
       local.get $103
       f32.ne
      else
       i32.const 0
      end
      if
       br $for-continue|12
      end
      local.get $97
      local.get $100
      call $~lib/array/Array<f32>#__get
      f64.promote_f32
      local.set $104
      local.get $104
      i64.reinterpret_f64
      i64.const 63
      i64.shr_u
      i64.const 0
      i64.ne
      i32.const 0
      i32.ne
      local.get $98
      local.get $100
      call $~lib/array/Array<f32>#__get
      f64.promote_f32
      local.set $105
      local.get $105
      i64.reinterpret_f64
      i64.const 63
      i64.shr_u
      i64.const 0
      i64.ne
      i32.const 0
      i32.ne
      i32.ne
      if
       i32.const 0
       br $std/array/isArraysEqual<f32>|inlined.0
      end
      local.get $97
      local.get $100
      call $~lib/array/Array<f32>#__get
      local.get $98
      local.get $100
      call $~lib/array/Array<f32>#__get
      f32.ne
      if
       i32.const 0
       br $std/array/isArraysEqual<f32>|inlined.0
      end
     end
     local.get $100
     i32.const 1
     i32.add
     local.set $100
     br $for-loop|12
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $94
  f32.const 0
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/array/Array<f32>#fill
  drop
  block $std/array/isArraysEqual<f32>|inlined.1 (result i32)
   local.get $94
   local.set $108
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 8
   i32.const 992
   call $~lib/rt/__newArray
   local.tee $109
   i32.store $0 offset=72
   i32.const 0
   local.set $110
   local.get $110
   i32.eqz
   if
    local.get $108
    call $~lib/array/Array<f32>#get:length
    local.set $110
    local.get $110
    local.get $109
    call $~lib/array/Array<f32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<f32>|inlined.1
    end
    local.get $108
    local.get $109
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<f32>|inlined.1
    end
   end
   i32.const 0
   local.set $111
   loop $for-loop|13
    local.get $111
    local.get $110
    i32.lt_s
    local.set $112
    local.get $112
    if
     block $for-continue|13
      i32.const 1
      drop
      local.get $108
      local.get $111
      call $~lib/array/Array<f32>#__get
      local.tee $113
      local.get $113
      f32.ne
      if (result i32)
       local.get $109
       local.get $111
       call $~lib/array/Array<f32>#__get
       local.tee $114
       local.get $114
       f32.ne
      else
       i32.const 0
      end
      if
       br $for-continue|13
      end
      local.get $108
      local.get $111
      call $~lib/array/Array<f32>#__get
      f64.promote_f32
      local.set $115
      local.get $115
      i64.reinterpret_f64
      i64.const 63
      i64.shr_u
      i64.const 0
      i64.ne
      i32.const 0
      i32.ne
      local.get $109
      local.get $111
      call $~lib/array/Array<f32>#__get
      f64.promote_f32
      local.set $116
      local.get $116
      i64.reinterpret_f64
      i64.const 63
      i64.shr_u
      i64.const 0
      i64.ne
      i32.const 0
      i32.ne
      i32.ne
      if
       i32.const 0
       br $std/array/isArraysEqual<f32>|inlined.1
      end
      local.get $108
      local.get $111
      call $~lib/array/Array<f32>#__get
      local.get $109
      local.get $111
      call $~lib/array/Array<f32>#__get
      f32.ne
      if
       i32.const 0
       br $std/array/isArraysEqual<f32>|inlined.1
      end
     end
     local.get $111
     i32.const 1
     i32.add
     local.set $111
     br $for-loop|13
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $94
  f32.const 1
  i32.const 0
  i32.const -3
  call $~lib/array/Array<f32>#fill
  drop
  block $std/array/isArraysEqual<f32>|inlined.2 (result i32)
   local.get $94
   local.set $119
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 8
   i32.const 1040
   call $~lib/rt/__newArray
   local.tee $120
   i32.store $0 offset=76
   i32.const 0
   local.set $121
   local.get $121
   i32.eqz
   if
    local.get $119
    call $~lib/array/Array<f32>#get:length
    local.set $121
    local.get $121
    local.get $120
    call $~lib/array/Array<f32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<f32>|inlined.2
    end
    local.get $119
    local.get $120
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<f32>|inlined.2
    end
   end
   i32.const 0
   local.set $122
   loop $for-loop|14
    local.get $122
    local.get $121
    i32.lt_s
    local.set $123
    local.get $123
    if
     block $for-continue|14
      i32.const 1
      drop
      local.get $119
      local.get $122
      call $~lib/array/Array<f32>#__get
      local.tee $124
      local.get $124
      f32.ne
      if (result i32)
       local.get $120
       local.get $122
       call $~lib/array/Array<f32>#__get
       local.tee $125
       local.get $125
       f32.ne
      else
       i32.const 0
      end
      if
       br $for-continue|14
      end
      local.get $119
      local.get $122
      call $~lib/array/Array<f32>#__get
      f64.promote_f32
      local.set $126
      local.get $126
      i64.reinterpret_f64
      i64.const 63
      i64.shr_u
      i64.const 0
      i64.ne
      i32.const 0
      i32.ne
      local.get $120
      local.get $122
      call $~lib/array/Array<f32>#__get
      f64.promote_f32
      local.set $127
      local.get $127
      i64.reinterpret_f64
      i64.const 63
      i64.shr_u
      i64.const 0
      i64.ne
      i32.const 0
      i32.ne
      i32.ne
      if
       i32.const 0
       br $std/array/isArraysEqual<f32>|inlined.2
      end
      local.get $119
      local.get $122
      call $~lib/array/Array<f32>#__get
      local.get $120
      local.get $122
      call $~lib/array/Array<f32>#__get
      f32.ne
      if
       i32.const 0
       br $std/array/isArraysEqual<f32>|inlined.2
      end
     end
     local.get $122
     i32.const 1
     i32.add
     local.set $122
     br $for-loop|14
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $94
  f32.const 2
  i32.const -2
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/array/Array<f32>#fill
  drop
  block $std/array/isArraysEqual<f32>|inlined.3 (result i32)
   local.get $94
   local.set $130
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 8
   i32.const 1088
   call $~lib/rt/__newArray
   local.tee $131
   i32.store $0 offset=80
   i32.const 0
   local.set $132
   local.get $132
   i32.eqz
   if
    local.get $130
    call $~lib/array/Array<f32>#get:length
    local.set $132
    local.get $132
    local.get $131
    call $~lib/array/Array<f32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<f32>|inlined.3
    end
    local.get $130
    local.get $131
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<f32>|inlined.3
    end
   end
   i32.const 0
   local.set $133
   loop $for-loop|15
    local.get $133
    local.get $132
    i32.lt_s
    local.set $134
    local.get $134
    if
     block $for-continue|15
      i32.const 1
      drop
      local.get $130
      local.get $133
      call $~lib/array/Array<f32>#__get
      local.tee $135
      local.get $135
      f32.ne
      if (result i32)
       local.get $131
       local.get $133
       call $~lib/array/Array<f32>#__get
       local.tee $136
       local.get $136
       f32.ne
      else
       i32.const 0
      end
      if
       br $for-continue|15
      end
      local.get $130
      local.get $133
      call $~lib/array/Array<f32>#__get
      f64.promote_f32
      local.set $137
      local.get $137
      i64.reinterpret_f64
      i64.const 63
      i64.shr_u
      i64.const 0
      i64.ne
      i32.const 0
      i32.ne
      local.get $131
      local.get $133
      call $~lib/array/Array<f32>#__get
      f64.promote_f32
      local.set $138
      local.get $138
      i64.reinterpret_f64
      i64.const 63
      i64.shr_u
      i64.const 0
      i64.ne
      i32.const 0
      i32.ne
      i32.ne
      if
       i32.const 0
       br $std/array/isArraysEqual<f32>|inlined.3
      end
      local.get $130
      local.get $133
      call $~lib/array/Array<f32>#__get
      local.get $131
      local.get $133
      call $~lib/array/Array<f32>#__get
      f32.ne
      if
       i32.const 0
       br $std/array/isArraysEqual<f32>|inlined.3
      end
     end
     local.get $133
     i32.const 1
     i32.add
     local.set $133
     br $for-loop|15
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $94
  f32.const 0
  i32.const 1
  i32.const 0
  call $~lib/array/Array<f32>#fill
  drop
  block $std/array/isArraysEqual<f32>|inlined.4 (result i32)
   local.get $94
   local.set $141
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 8
   i32.const 1136
   call $~lib/rt/__newArray
   local.tee $142
   i32.store $0 offset=84
   i32.const 0
   local.set $143
   local.get $143
   i32.eqz
   if
    local.get $141
    call $~lib/array/Array<f32>#get:length
    local.set $143
    local.get $143
    local.get $142
    call $~lib/array/Array<f32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<f32>|inlined.4
    end
    local.get $141
    local.get $142
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<f32>|inlined.4
    end
   end
   i32.const 0
   local.set $144
   loop $for-loop|16
    local.get $144
    local.get $143
    i32.lt_s
    local.set $145
    local.get $145
    if
     block $for-continue|16
      i32.const 1
      drop
      local.get $141
      local.get $144
      call $~lib/array/Array<f32>#__get
      local.tee $146
      local.get $146
      f32.ne
      if (result i32)
       local.get $142
       local.get $144
       call $~lib/array/Array<f32>#__get
       local.tee $147
       local.get $147
       f32.ne
      else
       i32.const 0
      end
      if
       br $for-continue|16
      end
      local.get $141
      local.get $144
      call $~lib/array/Array<f32>#__get
      f64.promote_f32
      local.set $148
      local.get $148
      i64.reinterpret_f64
      i64.const 63
      i64.shr_u
      i64.const 0
      i64.ne
      i32.const 0
      i32.ne
      local.get $142
      local.get $144
      call $~lib/array/Array<f32>#__get
      f64.promote_f32
      local.set $149
      local.get $149
      i64.reinterpret_f64
      i64.const 63
      i64.shr_u
      i64.const 0
      i64.ne
      i32.const 0
      i32.ne
      i32.ne
      if
       i32.const 0
       br $std/array/isArraysEqual<f32>|inlined.4
      end
      local.get $141
      local.get $144
      call $~lib/array/Array<f32>#__get
      local.get $142
      local.get $144
      call $~lib/array/Array<f32>#__get
      f32.ne
      if
       i32.const 0
       br $std/array/isArraysEqual<f32>|inlined.4
      end
     end
     local.get $144
     i32.const 1
     i32.add
     local.set $144
     br $for-loop|16
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $94
  f32.const -1
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/array/Array<f32>#fill
  drop
  block $std/array/isArraysEqual<f32>|inlined.5 (result i32)
   local.get $94
   local.set $152
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 8
   i32.const 1184
   call $~lib/rt/__newArray
   local.tee $153
   i32.store $0 offset=88
   i32.const 0
   local.set $154
   local.get $154
   i32.eqz
   if
    local.get $152
    call $~lib/array/Array<f32>#get:length
    local.set $154
    local.get $154
    local.get $153
    call $~lib/array/Array<f32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<f32>|inlined.5
    end
    local.get $152
    local.get $153
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<f32>|inlined.5
    end
   end
   i32.const 0
   local.set $155
   loop $for-loop|17
    local.get $155
    local.get $154
    i32.lt_s
    local.set $156
    local.get $156
    if
     block $for-continue|17
      i32.const 1
      drop
      local.get $152
      local.get $155
      call $~lib/array/Array<f32>#__get
      local.tee $157
      local.get $157
      f32.ne
      if (result i32)
       local.get $153
       local.get $155
       call $~lib/array/Array<f32>#__get
       local.tee $158
       local.get $158
       f32.ne
      else
       i32.const 0
      end
      if
       br $for-continue|17
      end
      local.get $152
      local.get $155
      call $~lib/array/Array<f32>#__get
      f64.promote_f32
      local.set $159
      local.get $159
      i64.reinterpret_f64
      i64.const 63
      i64.shr_u
      i64.const 0
      i64.ne
      i32.const 0
      i32.ne
      local.get $153
      local.get $155
      call $~lib/array/Array<f32>#__get
      f64.promote_f32
      local.set $160
      local.get $160
      i64.reinterpret_f64
      i64.const 63
      i64.shr_u
      i64.const 0
      i64.ne
      i32.const 0
      i32.ne
      i32.ne
      if
       i32.const 0
       br $std/array/isArraysEqual<f32>|inlined.5
      end
      local.get $152
      local.get $155
      call $~lib/array/Array<f32>#__get
      local.get $153
      local.get $155
      call $~lib/array/Array<f32>#__get
      f32.ne
      if
       i32.const 0
       br $std/array/isArraysEqual<f32>|inlined.5
      end
     end
     local.get $155
     i32.const 1
     i32.add
     local.set $155
     br $for-loop|17
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $94
  f32.const -0
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/array/Array<f32>#fill
  drop
  block $std/array/isArraysEqual<f32>|inlined.6 (result i32)
   local.get $94
   local.set $163
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 8
   i32.const 1232
   call $~lib/rt/__newArray
   local.tee $164
   i32.store $0 offset=92
   i32.const 0
   local.set $165
   local.get $165
   i32.eqz
   if
    local.get $163
    call $~lib/array/Array<f32>#get:length
    local.set $165
    local.get $165
    local.get $164
    call $~lib/array/Array<f32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<f32>|inlined.6
    end
    local.get $163
    local.get $164
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<f32>|inlined.6
    end
   end
   i32.const 0
   local.set $166
   loop $for-loop|18
    local.get $166
    local.get $165
    i32.lt_s
    local.set $167
    local.get $167
    if
     block $for-continue|18
      i32.const 1
      drop
      local.get $163
      local.get $166
      call $~lib/array/Array<f32>#__get
      local.tee $168
      local.get $168
      f32.ne
      if (result i32)
       local.get $164
       local.get $166
       call $~lib/array/Array<f32>#__get
       local.tee $169
       local.get $169
       f32.ne
      else
       i32.const 0
      end
      if
       br $for-continue|18
      end
      local.get $163
      local.get $166
      call $~lib/array/Array<f32>#__get
      f64.promote_f32
      local.set $170
      local.get $170
      i64.reinterpret_f64
      i64.const 63
      i64.shr_u
      i64.const 0
      i64.ne
      i32.const 0
      i32.ne
      local.get $164
      local.get $166
      call $~lib/array/Array<f32>#__get
      f64.promote_f32
      local.set $171
      local.get $171
      i64.reinterpret_f64
      i64.const 63
      i64.shr_u
      i64.const 0
      i64.ne
      i32.const 0
      i32.ne
      i32.ne
      if
       i32.const 0
       br $std/array/isArraysEqual<f32>|inlined.6
      end
      local.get $163
      local.get $166
      call $~lib/array/Array<f32>#__get
      local.get $164
      local.get $166
      call $~lib/array/Array<f32>#__get
      f32.ne
      if
       i32.const 0
       br $std/array/isArraysEqual<f32>|inlined.6
      end
     end
     local.get $166
     i32.const 1
     i32.add
     local.set $166
     br $for-loop|18
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array<i32>#get:length
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  global.get $std/array/arr
  local.tee $172
  i32.store $0 offset=96
  global.get $~lib/memory/__stack_pointer
  local.get $172
  i32.load $0
  local.tee $173
  i32.store $0 offset=100
  local.get $173
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  i32.const 2
  i32.shr_s
  i32.const 8
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 42
  call $~lib/array/Array<i32>#push
  drop
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 0
  call $~lib/array/Array<i32>#__get
  i32.const 42
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array<i32>#get:length
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  global.get $std/array/arr
  local.tee $174
  i32.store $0 offset=104
  global.get $~lib/memory/__stack_pointer
  local.get $174
  i32.load $0
  local.tee $175
  i32.store $0 offset=108
  local.get $175
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  i32.const 2
  i32.shr_s
  i32.const 8
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array<i32>#pop
  local.set $176
  local.get $176
  i32.const 42
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array<i32>#get:length
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  global.get $std/array/arr
  local.tee $177
  i32.store $0 offset=112
  global.get $~lib/memory/__stack_pointer
  local.get $177
  i32.load $0
  local.tee $178
  i32.store $0 offset=116
  local.get $178
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  i32.const 2
  i32.shr_s
  i32.const 8
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 43
  call $~lib/array/Array<i32>#push
  drop
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array<i32>#get:length
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  global.get $std/array/arr
  local.tee $179
  i32.store $0 offset=120
  global.get $~lib/memory/__stack_pointer
  local.get $179
  i32.load $0
  local.tee $180
  i32.store $0 offset=124
  local.get $180
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  i32.const 2
  i32.shr_s
  i32.const 8
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 0
  call $~lib/array/Array<i32>#__get
  i32.const 43
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 44
  call $~lib/array/Array<i32>#push
  drop
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array<i32>#get:length
  i32.const 2
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  global.get $std/array/arr
  local.tee $181
  i32.store $0 offset=128
  global.get $~lib/memory/__stack_pointer
  local.get $181
  i32.load $0
  local.tee $182
  i32.store $0 offset=132
  local.get $182
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  i32.const 2
  i32.shr_s
  i32.const 8
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 0
  call $~lib/array/Array<i32>#__get
  i32.const 43
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 1
  call $~lib/array/Array<i32>#__get
  i32.const 44
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 45
  call $~lib/array/Array<i32>#push
  drop
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array<i32>#get:length
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  global.get $std/array/arr
  local.tee $183
  i32.store $0 offset=136
  global.get $~lib/memory/__stack_pointer
  local.get $183
  i32.load $0
  local.tee $184
  i32.store $0 offset=140
  local.get $184
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  i32.const 2
  i32.shr_s
  i32.const 8
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 0
  call $~lib/array/Array<i32>#__get
  i32.const 43
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 1
  call $~lib/array/Array<i32>#__get
  i32.const 44
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 2
  call $~lib/array/Array<i32>#__get
  i32.const 45
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 2
  i32.const 2
  i32.const 9
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $185
  i32.store $0 offset=144
  global.get $~lib/memory/__stack_pointer
  local.get $185
  i32.load $0 offset=4
  local.tee $186
  i32.store $0 offset=148
  local.get $185
  i32.const 0
  i32.const 0
  local.set $187
  i32.const 0
  local.set $188
  local.get $187
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 4
   call $~lib/rt/itcms/__new
   local.tee $187
   i32.store $0 offset=152
  end
  local.get $187
  local.get $188
  call $std/array/Ref#set:v
  local.get $187
  call $~lib/array/Array<std/array/Ref>#__uset
  local.get $185
  i32.const 1
  i32.const 0
  local.set $189
  i32.const 0
  local.set $190
  local.get $189
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 4
   call $~lib/rt/itcms/__new
   local.tee $189
   i32.store $0 offset=156
  end
  local.get $189
  local.get $190
  call $std/array/Ref#set:v
  local.get $189
  call $~lib/array/Array<std/array/Ref>#__uset
  local.get $185
  local.tee $191
  i32.store $0 offset=160
  local.get $191
  i32.const 0
  call $~lib/array/Array<std/array/Ref>#set:length
  local.get $191
  call $~lib/array/Array<std/array/Ref>#get:length
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.const 2
  i32.const 3
  i32.const 1328
  call $~lib/rt/__newArray
  local.tee $194
  i32.store $0 offset=164
  local.get $194
  i32.const 0
  call $~lib/array/Array<i32>#at
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $194
  i32.const 3
  call $~lib/array/Array<i32>#at
  i32.const 4
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $194
  i32.const -1
  call $~lib/array/Array<i32>#at
  i32.const 4
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $194
  i32.const -4
  call $~lib/array/Array<i32>#at
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 0
  call $~lib/array/Array<i32>#constructor
  local.tee $195
  i32.store $0 offset=168
  global.get $~lib/memory/__stack_pointer
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  local.get $195
  call $~lib/array/Array<i32>#concat
  local.tee $196
  i32.store $0 offset=172
  global.get $~lib/memory/__stack_pointer
  global.get $std/array/arr
  local.tee $197
  i32.store $0 offset=176
  global.get $~lib/memory/__stack_pointer
  local.get $197
  i32.load $0
  local.tee $198
  i32.store $0 offset=180
  local.get $198
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  i32.const 2
  i32.shr_s
  i32.const 8
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array<i32>#get:length
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $196
  call $~lib/array/Array<i32>#get:length
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $196
  i32.const 0
  i32.const 2
  i32.const 3
  i32.const 1376
  call $~lib/rt/__newArray
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0 offset=184
  local.get $1150
  call $~lib/array/Array<i32>#concat
  drop
  global.get $~lib/memory/__stack_pointer
  global.get $std/array/arr
  local.tee $201
  i32.store $0 offset=188
  global.get $~lib/memory/__stack_pointer
  local.get $201
  i32.load $0
  local.tee $202
  i32.store $0 offset=192
  local.get $202
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  i32.const 2
  i32.shr_s
  i32.const 8
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $196
  i32.const 0
  call $~lib/array/Array<i32>#__get
  i32.const 43
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $196
  i32.const 1
  call $~lib/array/Array<i32>#__get
  i32.const 44
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $196
  i32.const 2
  call $~lib/array/Array<i32>#__get
  i32.const 45
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $195
  i32.const 46
  call $~lib/array/Array<i32>#push
  drop
  local.get $195
  i32.const 47
  call $~lib/array/Array<i32>#push
  drop
  global.get $~lib/memory/__stack_pointer
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  local.get $195
  call $~lib/array/Array<i32>#concat
  local.tee $196
  i32.store $0 offset=172
  global.get $~lib/memory/__stack_pointer
  global.get $std/array/arr
  local.tee $203
  i32.store $0 offset=196
  global.get $~lib/memory/__stack_pointer
  local.get $203
  i32.load $0
  local.tee $204
  i32.store $0 offset=200
  local.get $204
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  i32.const 2
  i32.shr_s
  i32.const 8
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $195
  call $~lib/array/Array<i32>#get:length
  i32.const 2
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $196
  call $~lib/array/Array<i32>#get:length
  i32.const 5
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $196
  i32.const 0
  call $~lib/array/Array<i32>#__get
  i32.const 43
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $196
  i32.const 1
  call $~lib/array/Array<i32>#__get
  i32.const 44
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $196
  i32.const 2
  call $~lib/array/Array<i32>#__get
  i32.const 45
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $196
  i32.const 3
  call $~lib/array/Array<i32>#__get
  i32.const 46
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $196
  i32.const 4
  call $~lib/array/Array<i32>#__get
  i32.const 47
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $196
  call $~lib/array/Array<i32>#pop
  drop
  local.get $196
  call $~lib/array/Array<i32>#get:length
  i32.const 4
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 2
  i32.const 3
  i32.const 1408
  call $~lib/rt/__newArray
  local.tee $207
  i32.store $0 offset=204
  local.get $207
  call $~lib/array/Array<i32>#get:length
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $207
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0 offset=184
  local.get $1150
  call $~lib/array/Array<i32>#concat
  local.tee $196
  i32.store $0 offset=172
  local.get $196
  call $~lib/array/Array<i32>#get:length
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $207
  call $~lib/array/Array<i32>#get:length
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 1440
  call $~lib/rt/__newArray
  local.tee $210
  i32.store $0 offset=208
  block $std/array/isArraysEqual<i32>|inlined.0 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $210
   i32.const 0
   i32.const 3
   global.get $~lib/builtins/i32.MAX_VALUE
   call $~lib/array/Array<i32>#copyWithin
   local.tee $213
   i32.store $0 offset=212
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 1488
   call $~lib/rt/__newArray
   local.tee $214
   i32.store $0 offset=216
   i32.const 0
   local.set $215
   local.get $215
   i32.eqz
   if
    local.get $213
    call $~lib/array/Array<i32>#get:length
    local.set $215
    local.get $215
    local.get $214
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.0
    end
    local.get $213
    local.get $214
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.0
    end
   end
   i32.const 0
   local.set $216
   loop $for-loop|19
    local.get $216
    local.get $215
    i32.lt_s
    local.set $217
    local.get $217
    if
     i32.const 0
     drop
     local.get $213
     local.get $216
     call $~lib/array/Array<i32>#__get
     local.get $214
     local.get $216
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.0
     end
     local.get $216
     i32.const 1
     i32.add
     local.set $216
     br $for-loop|19
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 1536
  call $~lib/rt/__newArray
  local.tee $210
  i32.store $0 offset=208
  block $std/array/isArraysEqual<i32>|inlined.1 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $210
   i32.const 1
   i32.const 3
   global.get $~lib/builtins/i32.MAX_VALUE
   call $~lib/array/Array<i32>#copyWithin
   local.tee $222
   i32.store $0 offset=220
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 1584
   call $~lib/rt/__newArray
   local.tee $223
   i32.store $0 offset=224
   i32.const 0
   local.set $224
   local.get $224
   i32.eqz
   if
    local.get $222
    call $~lib/array/Array<i32>#get:length
    local.set $224
    local.get $224
    local.get $223
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.1
    end
    local.get $222
    local.get $223
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.1
    end
   end
   i32.const 0
   local.set $225
   loop $for-loop|20
    local.get $225
    local.get $224
    i32.lt_s
    local.set $226
    local.get $226
    if
     i32.const 0
     drop
     local.get $222
     local.get $225
     call $~lib/array/Array<i32>#__get
     local.get $223
     local.get $225
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.1
     end
     local.get $225
     i32.const 1
     i32.add
     local.set $225
     br $for-loop|20
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 1632
  call $~lib/rt/__newArray
  local.tee $210
  i32.store $0 offset=208
  block $std/array/isArraysEqual<i32>|inlined.2 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $210
   i32.const 1
   i32.const 2
   global.get $~lib/builtins/i32.MAX_VALUE
   call $~lib/array/Array<i32>#copyWithin
   local.tee $231
   i32.store $0 offset=228
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 1680
   call $~lib/rt/__newArray
   local.tee $232
   i32.store $0 offset=232
   i32.const 0
   local.set $233
   local.get $233
   i32.eqz
   if
    local.get $231
    call $~lib/array/Array<i32>#get:length
    local.set $233
    local.get $233
    local.get $232
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.2
    end
    local.get $231
    local.get $232
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.2
    end
   end
   i32.const 0
   local.set $234
   loop $for-loop|21
    local.get $234
    local.get $233
    i32.lt_s
    local.set $235
    local.get $235
    if
     i32.const 0
     drop
     local.get $231
     local.get $234
     call $~lib/array/Array<i32>#__get
     local.get $232
     local.get $234
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.2
     end
     local.get $234
     i32.const 1
     i32.add
     local.set $234
     br $for-loop|21
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 1728
  call $~lib/rt/__newArray
  local.tee $210
  i32.store $0 offset=208
  block $std/array/isArraysEqual<i32>|inlined.3 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $210
   i32.const 2
   i32.const 2
   global.get $~lib/builtins/i32.MAX_VALUE
   call $~lib/array/Array<i32>#copyWithin
   local.tee $240
   i32.store $0 offset=236
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 1776
   call $~lib/rt/__newArray
   local.tee $241
   i32.store $0 offset=240
   i32.const 0
   local.set $242
   local.get $242
   i32.eqz
   if
    local.get $240
    call $~lib/array/Array<i32>#get:length
    local.set $242
    local.get $242
    local.get $241
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.3
    end
    local.get $240
    local.get $241
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.3
    end
   end
   i32.const 0
   local.set $243
   loop $for-loop|22
    local.get $243
    local.get $242
    i32.lt_s
    local.set $244
    local.get $244
    if
     i32.const 0
     drop
     local.get $240
     local.get $243
     call $~lib/array/Array<i32>#__get
     local.get $241
     local.get $243
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.3
     end
     local.get $243
     i32.const 1
     i32.add
     local.set $243
     br $for-loop|22
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 1824
  call $~lib/rt/__newArray
  local.tee $210
  i32.store $0 offset=208
  block $std/array/isArraysEqual<i32>|inlined.4 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $210
   i32.const 0
   i32.const 3
   i32.const 4
   call $~lib/array/Array<i32>#copyWithin
   local.tee $249
   i32.store $0 offset=244
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 1872
   call $~lib/rt/__newArray
   local.tee $250
   i32.store $0 offset=248
   i32.const 0
   local.set $251
   local.get $251
   i32.eqz
   if
    local.get $249
    call $~lib/array/Array<i32>#get:length
    local.set $251
    local.get $251
    local.get $250
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.4
    end
    local.get $249
    local.get $250
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.4
    end
   end
   i32.const 0
   local.set $252
   loop $for-loop|23
    local.get $252
    local.get $251
    i32.lt_s
    local.set $253
    local.get $253
    if
     i32.const 0
     drop
     local.get $249
     local.get $252
     call $~lib/array/Array<i32>#__get
     local.get $250
     local.get $252
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.4
     end
     local.get $252
     i32.const 1
     i32.add
     local.set $252
     br $for-loop|23
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 1920
  call $~lib/rt/__newArray
  local.tee $210
  i32.store $0 offset=208
  block $std/array/isArraysEqual<i32>|inlined.5 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $210
   i32.const 1
   i32.const 3
   i32.const 4
   call $~lib/array/Array<i32>#copyWithin
   local.tee $258
   i32.store $0 offset=252
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 1968
   call $~lib/rt/__newArray
   local.tee $259
   i32.store $0 offset=256
   i32.const 0
   local.set $260
   local.get $260
   i32.eqz
   if
    local.get $258
    call $~lib/array/Array<i32>#get:length
    local.set $260
    local.get $260
    local.get $259
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.5
    end
    local.get $258
    local.get $259
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.5
    end
   end
   i32.const 0
   local.set $261
   loop $for-loop|24
    local.get $261
    local.get $260
    i32.lt_s
    local.set $262
    local.get $262
    if
     i32.const 0
     drop
     local.get $258
     local.get $261
     call $~lib/array/Array<i32>#__get
     local.get $259
     local.get $261
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.5
     end
     local.get $261
     i32.const 1
     i32.add
     local.set $261
     br $for-loop|24
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 2016
  call $~lib/rt/__newArray
  local.tee $210
  i32.store $0 offset=208
  block $std/array/isArraysEqual<i32>|inlined.6 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $210
   i32.const 1
   i32.const 2
   i32.const 4
   call $~lib/array/Array<i32>#copyWithin
   local.tee $267
   i32.store $0 offset=260
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 2064
   call $~lib/rt/__newArray
   local.tee $268
   i32.store $0 offset=264
   i32.const 0
   local.set $269
   local.get $269
   i32.eqz
   if
    local.get $267
    call $~lib/array/Array<i32>#get:length
    local.set $269
    local.get $269
    local.get $268
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.6
    end
    local.get $267
    local.get $268
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.6
    end
   end
   i32.const 0
   local.set $270
   loop $for-loop|25
    local.get $270
    local.get $269
    i32.lt_s
    local.set $271
    local.get $271
    if
     i32.const 0
     drop
     local.get $267
     local.get $270
     call $~lib/array/Array<i32>#__get
     local.get $268
     local.get $270
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.6
     end
     local.get $270
     i32.const 1
     i32.add
     local.set $270
     br $for-loop|25
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 2112
  call $~lib/rt/__newArray
  local.tee $210
  i32.store $0 offset=208
  block $std/array/isArraysEqual<i32>|inlined.7 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $210
   i32.const 0
   i32.const -2
   global.get $~lib/builtins/i32.MAX_VALUE
   call $~lib/array/Array<i32>#copyWithin
   local.tee $276
   i32.store $0 offset=268
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 2160
   call $~lib/rt/__newArray
   local.tee $277
   i32.store $0 offset=272
   i32.const 0
   local.set $278
   local.get $278
   i32.eqz
   if
    local.get $276
    call $~lib/array/Array<i32>#get:length
    local.set $278
    local.get $278
    local.get $277
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.7
    end
    local.get $276
    local.get $277
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.7
    end
   end
   i32.const 0
   local.set $279
   loop $for-loop|26
    local.get $279
    local.get $278
    i32.lt_s
    local.set $280
    local.get $280
    if
     i32.const 0
     drop
     local.get $276
     local.get $279
     call $~lib/array/Array<i32>#__get
     local.get $277
     local.get $279
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.7
     end
     local.get $279
     i32.const 1
     i32.add
     local.set $279
     br $for-loop|26
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 2208
  call $~lib/rt/__newArray
  local.tee $210
  i32.store $0 offset=208
  block $std/array/isArraysEqual<i32>|inlined.8 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $210
   i32.const 0
   i32.const -2
   i32.const -1
   call $~lib/array/Array<i32>#copyWithin
   local.tee $285
   i32.store $0 offset=276
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 2256
   call $~lib/rt/__newArray
   local.tee $286
   i32.store $0 offset=280
   i32.const 0
   local.set $287
   local.get $287
   i32.eqz
   if
    local.get $285
    call $~lib/array/Array<i32>#get:length
    local.set $287
    local.get $287
    local.get $286
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.8
    end
    local.get $285
    local.get $286
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.8
    end
   end
   i32.const 0
   local.set $288
   loop $for-loop|27
    local.get $288
    local.get $287
    i32.lt_s
    local.set $289
    local.get $289
    if
     i32.const 0
     drop
     local.get $285
     local.get $288
     call $~lib/array/Array<i32>#__get
     local.get $286
     local.get $288
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.8
     end
     local.get $288
     i32.const 1
     i32.add
     local.set $288
     br $for-loop|27
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 2304
  call $~lib/rt/__newArray
  local.tee $210
  i32.store $0 offset=208
  block $std/array/isArraysEqual<i32>|inlined.9 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $210
   i32.const -4
   i32.const -3
   i32.const -2
   call $~lib/array/Array<i32>#copyWithin
   local.tee $294
   i32.store $0 offset=284
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 2352
   call $~lib/rt/__newArray
   local.tee $295
   i32.store $0 offset=288
   i32.const 0
   local.set $296
   local.get $296
   i32.eqz
   if
    local.get $294
    call $~lib/array/Array<i32>#get:length
    local.set $296
    local.get $296
    local.get $295
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.9
    end
    local.get $294
    local.get $295
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.9
    end
   end
   i32.const 0
   local.set $297
   loop $for-loop|28
    local.get $297
    local.get $296
    i32.lt_s
    local.set $298
    local.get $298
    if
     i32.const 0
     drop
     local.get $294
     local.get $297
     call $~lib/array/Array<i32>#__get
     local.get $295
     local.get $297
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.9
     end
     local.get $297
     i32.const 1
     i32.add
     local.set $297
     br $for-loop|28
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 2400
  call $~lib/rt/__newArray
  local.tee $210
  i32.store $0 offset=208
  block $std/array/isArraysEqual<i32>|inlined.10 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $210
   i32.const -4
   i32.const -3
   i32.const -1
   call $~lib/array/Array<i32>#copyWithin
   local.tee $303
   i32.store $0 offset=292
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 2448
   call $~lib/rt/__newArray
   local.tee $304
   i32.store $0 offset=296
   i32.const 0
   local.set $305
   local.get $305
   i32.eqz
   if
    local.get $303
    call $~lib/array/Array<i32>#get:length
    local.set $305
    local.get $305
    local.get $304
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.10
    end
    local.get $303
    local.get $304
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.10
    end
   end
   i32.const 0
   local.set $306
   loop $for-loop|29
    local.get $306
    local.get $305
    i32.lt_s
    local.set $307
    local.get $307
    if
     i32.const 0
     drop
     local.get $303
     local.get $306
     call $~lib/array/Array<i32>#__get
     local.get $304
     local.get $306
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.10
     end
     local.get $306
     i32.const 1
     i32.add
     local.set $306
     br $for-loop|29
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 2496
  call $~lib/rt/__newArray
  local.tee $210
  i32.store $0 offset=208
  block $std/array/isArraysEqual<i32>|inlined.11 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $210
   i32.const -4
   i32.const -3
   global.get $~lib/builtins/i32.MAX_VALUE
   call $~lib/array/Array<i32>#copyWithin
   local.tee $312
   i32.store $0 offset=300
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 2544
   call $~lib/rt/__newArray
   local.tee $313
   i32.store $0 offset=304
   i32.const 0
   local.set $314
   local.get $314
   i32.eqz
   if
    local.get $312
    call $~lib/array/Array<i32>#get:length
    local.set $314
    local.get $314
    local.get $313
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.11
    end
    local.get $312
    local.get $313
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.11
    end
   end
   i32.const 0
   local.set $315
   loop $for-loop|30
    local.get $315
    local.get $314
    i32.lt_s
    local.set $316
    local.get $316
    if
     i32.const 0
     drop
     local.get $312
     local.get $315
     call $~lib/array/Array<i32>#__get
     local.get $313
     local.get $315
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.11
     end
     local.get $315
     i32.const 1
     i32.add
     local.set $315
     br $for-loop|30
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 42
  call $~lib/array/Array<i32>#unshift
  drop
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array<i32>#get:length
  i32.const 4
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  global.get $std/array/arr
  local.tee $317
  i32.store $0 offset=308
  global.get $~lib/memory/__stack_pointer
  local.get $317
  i32.load $0
  local.tee $318
  i32.store $0 offset=312
  local.get $318
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  i32.const 2
  i32.shr_s
  i32.const 8
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 0
  call $~lib/array/Array<i32>#__get
  i32.const 42
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 1
  call $~lib/array/Array<i32>#__get
  i32.const 43
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 2
  call $~lib/array/Array<i32>#__get
  i32.const 44
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 3
  call $~lib/array/Array<i32>#__get
  i32.const 45
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 41
  call $~lib/array/Array<i32>#unshift
  drop
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array<i32>#get:length
  i32.const 5
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  global.get $std/array/arr
  local.tee $319
  i32.store $0 offset=316
  global.get $~lib/memory/__stack_pointer
  local.get $319
  i32.load $0
  local.tee $320
  i32.store $0 offset=320
  local.get $320
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  i32.const 2
  i32.shr_s
  i32.const 8
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 0
  call $~lib/array/Array<i32>#__get
  i32.const 41
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 1
  call $~lib/array/Array<i32>#__get
  i32.const 42
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 2
  call $~lib/array/Array<i32>#__get
  i32.const 43
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 3
  call $~lib/array/Array<i32>#__get
  i32.const 44
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 4
  call $~lib/array/Array<i32>#__get
  i32.const 45
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array<i32>#shift
  global.set $std/array/i
  global.get $std/array/i
  i32.const 41
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array<i32>#get:length
  i32.const 4
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  global.get $std/array/arr
  local.tee $321
  i32.store $0 offset=324
  global.get $~lib/memory/__stack_pointer
  local.get $321
  i32.load $0
  local.tee $322
  i32.store $0 offset=328
  local.get $322
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  i32.const 2
  i32.shr_s
  i32.const 8
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 0
  call $~lib/array/Array<i32>#__get
  i32.const 42
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 1
  call $~lib/array/Array<i32>#__get
  i32.const 43
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 2
  call $~lib/array/Array<i32>#__get
  i32.const 44
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 3
  call $~lib/array/Array<i32>#__get
  i32.const 45
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array<i32>#pop
  global.set $std/array/i
  global.get $std/array/i
  i32.const 45
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array<i32>#get:length
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  global.get $std/array/arr
  local.tee $323
  i32.store $0 offset=332
  global.get $~lib/memory/__stack_pointer
  local.get $323
  i32.load $0
  local.tee $324
  i32.store $0 offset=336
  local.get $324
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  i32.const 2
  i32.shr_s
  i32.const 8
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 0
  call $~lib/array/Array<i32>#__get
  i32.const 42
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 1
  call $~lib/array/Array<i32>#__get
  i32.const 43
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 2
  call $~lib/array/Array<i32>#__get
  i32.const 44
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 2592
  call $~lib/rt/__newArray
  local.tee $328
  i32.store $0 offset=340
  global.get $~lib/memory/__stack_pointer
  local.get $328
  i32.const 2
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/array/Array<i32>#slice
  local.tee $325
  i32.store $0 offset=344
  block $std/array/isArraysEqual<i32>|inlined.12 (result i32)
   local.get $325
   local.set $331
   global.get $~lib/memory/__stack_pointer
   i32.const 3
   i32.const 2
   i32.const 3
   i32.const 2640
   call $~lib/rt/__newArray
   local.tee $332
   i32.store $0 offset=348
   i32.const 0
   local.set $333
   local.get $333
   i32.eqz
   if
    local.get $331
    call $~lib/array/Array<i32>#get:length
    local.set $333
    local.get $333
    local.get $332
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.12
    end
    local.get $331
    local.get $332
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.12
    end
   end
   i32.const 0
   local.set $334
   loop $for-loop|31
    local.get $334
    local.get $333
    i32.lt_s
    local.set $335
    local.get $335
    if
     i32.const 0
     drop
     local.get $331
     local.get $334
     call $~lib/array/Array<i32>#__get
     local.get $332
     local.get $334
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.12
     end
     local.get $334
     i32.const 1
     i32.add
     local.set $334
     br $for-loop|31
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $328
  i32.const 2
  i32.const 4
  call $~lib/array/Array<i32>#slice
  local.tee $325
  i32.store $0 offset=344
  block $std/array/isArraysEqual<i32>|inlined.13 (result i32)
   local.get $325
   local.set $338
   global.get $~lib/memory/__stack_pointer
   i32.const 2
   i32.const 2
   i32.const 3
   i32.const 2672
   call $~lib/rt/__newArray
   local.tee $339
   i32.store $0 offset=352
   i32.const 0
   local.set $340
   local.get $340
   i32.eqz
   if
    local.get $338
    call $~lib/array/Array<i32>#get:length
    local.set $340
    local.get $340
    local.get $339
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.13
    end
    local.get $338
    local.get $339
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.13
    end
   end
   i32.const 0
   local.set $341
   loop $for-loop|32
    local.get $341
    local.get $340
    i32.lt_s
    local.set $342
    local.get $342
    if
     i32.const 0
     drop
     local.get $338
     local.get $341
     call $~lib/array/Array<i32>#__get
     local.get $339
     local.get $341
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.13
     end
     local.get $341
     i32.const 1
     i32.add
     local.set $341
     br $for-loop|32
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $328
  i32.const 1
  i32.const 5
  call $~lib/array/Array<i32>#slice
  local.tee $325
  i32.store $0 offset=344
  block $std/array/isArraysEqual<i32>|inlined.14 (result i32)
   local.get $325
   local.set $345
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 2
   i32.const 3
   i32.const 2704
   call $~lib/rt/__newArray
   local.tee $346
   i32.store $0 offset=356
   i32.const 0
   local.set $347
   local.get $347
   i32.eqz
   if
    local.get $345
    call $~lib/array/Array<i32>#get:length
    local.set $347
    local.get $347
    local.get $346
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.14
    end
    local.get $345
    local.get $346
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.14
    end
   end
   i32.const 0
   local.set $348
   loop $for-loop|33
    local.get $348
    local.get $347
    i32.lt_s
    local.set $349
    local.get $349
    if
     i32.const 0
     drop
     local.get $345
     local.get $348
     call $~lib/array/Array<i32>#__get
     local.get $346
     local.get $348
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.14
     end
     local.get $348
     i32.const 1
     i32.add
     local.set $348
     br $for-loop|33
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $328
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/array/Array<i32>#slice
  local.tee $325
  i32.store $0 offset=344
  block $std/array/isArraysEqual<i32>|inlined.15 (result i32)
   local.get $325
   local.set $350
   local.get $328
   local.set $351
   i32.const 0
   local.set $352
   local.get $352
   i32.eqz
   if
    local.get $350
    call $~lib/array/Array<i32>#get:length
    local.set $352
    local.get $352
    local.get $351
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.15
    end
    local.get $350
    local.get $351
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.15
    end
   end
   i32.const 0
   local.set $353
   loop $for-loop|34
    local.get $353
    local.get $352
    i32.lt_s
    local.set $354
    local.get $354
    if
     i32.const 0
     drop
     local.get $350
     local.get $353
     call $~lib/array/Array<i32>#__get
     local.get $351
     local.get $353
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.15
     end
     local.get $353
     i32.const 1
     i32.add
     local.set $353
     br $for-loop|34
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $328
  i32.const -2
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/array/Array<i32>#slice
  local.tee $325
  i32.store $0 offset=344
  block $std/array/isArraysEqual<i32>|inlined.16 (result i32)
   local.get $325
   local.set $357
   global.get $~lib/memory/__stack_pointer
   i32.const 2
   i32.const 2
   i32.const 3
   i32.const 2752
   call $~lib/rt/__newArray
   local.tee $358
   i32.store $0 offset=360
   i32.const 0
   local.set $359
   local.get $359
   i32.eqz
   if
    local.get $357
    call $~lib/array/Array<i32>#get:length
    local.set $359
    local.get $359
    local.get $358
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.16
    end
    local.get $357
    local.get $358
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.16
    end
   end
   i32.const 0
   local.set $360
   loop $for-loop|35
    local.get $360
    local.get $359
    i32.lt_s
    local.set $361
    local.get $361
    if
     i32.const 0
     drop
     local.get $357
     local.get $360
     call $~lib/array/Array<i32>#__get
     local.get $358
     local.get $360
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.16
     end
     local.get $360
     i32.const 1
     i32.add
     local.set $360
     br $for-loop|35
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $328
  i32.const 2
  i32.const -1
  call $~lib/array/Array<i32>#slice
  local.tee $325
  i32.store $0 offset=344
  block $std/array/isArraysEqual<i32>|inlined.17 (result i32)
   local.get $325
   local.set $364
   global.get $~lib/memory/__stack_pointer
   i32.const 2
   i32.const 2
   i32.const 3
   i32.const 2784
   call $~lib/rt/__newArray
   local.tee $365
   i32.store $0 offset=364
   i32.const 0
   local.set $366
   local.get $366
   i32.eqz
   if
    local.get $364
    call $~lib/array/Array<i32>#get:length
    local.set $366
    local.get $366
    local.get $365
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.17
    end
    local.get $364
    local.get $365
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.17
    end
   end
   i32.const 0
   local.set $367
   loop $for-loop|36
    local.get $367
    local.get $366
    i32.lt_s
    local.set $368
    local.get $368
    if
     i32.const 0
     drop
     local.get $364
     local.get $367
     call $~lib/array/Array<i32>#__get
     local.get $365
     local.get $367
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.17
     end
     local.get $367
     i32.const 1
     i32.add
     local.set $367
     br $for-loop|36
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $328
  i32.const -3
  i32.const -1
  call $~lib/array/Array<i32>#slice
  local.tee $325
  i32.store $0 offset=344
  block $std/array/isArraysEqual<i32>|inlined.18 (result i32)
   local.get $325
   local.set $371
   global.get $~lib/memory/__stack_pointer
   i32.const 2
   i32.const 2
   i32.const 3
   i32.const 2816
   call $~lib/rt/__newArray
   local.tee $372
   i32.store $0 offset=368
   i32.const 0
   local.set $373
   local.get $373
   i32.eqz
   if
    local.get $371
    call $~lib/array/Array<i32>#get:length
    local.set $373
    local.get $373
    local.get $372
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.18
    end
    local.get $371
    local.get $372
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.18
    end
   end
   i32.const 0
   local.set $374
   loop $for-loop|37
    local.get $374
    local.get $373
    i32.lt_s
    local.set $375
    local.get $375
    if
     i32.const 0
     drop
     local.get $371
     local.get $374
     call $~lib/array/Array<i32>#__get
     local.get $372
     local.get $374
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.18
     end
     local.get $374
     i32.const 1
     i32.add
     local.set $374
     br $for-loop|37
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $328
  i32.const -1
  i32.const -3
  call $~lib/array/Array<i32>#slice
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array<i32>#get:length
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $328
  i32.const 10
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/array/Array<i32>#slice
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array<i32>#get:length
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array<i32>#reverse
  drop
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array<i32>#get:length
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  global.get $std/array/arr
  local.tee $376
  i32.store $0 offset=372
  global.get $~lib/memory/__stack_pointer
  local.get $376
  i32.load $0
  local.tee $377
  i32.store $0 offset=376
  local.get $377
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  i32.const 2
  i32.shr_s
  i32.const 8
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 0
  call $~lib/array/Array<i32>#__get
  i32.const 44
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 1
  call $~lib/array/Array<i32>#__get
  i32.const 43
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 2
  call $~lib/array/Array<i32>#__get
  i32.const 42
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 43
  call $~lib/array/Array<i32>#push
  drop
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 44
  call $~lib/array/Array<i32>#push
  drop
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.const 0
  i32.const 6
  i32.const 2848
  call $~lib/rt/__newArray
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array<u8>#reverse
  local.tee $380
  i32.store $0 offset=380
  i32.const 0
  local.set $381
  local.get $380
  call $~lib/array/Array<u8>#get:length
  local.set $382
  loop $for-loop|38
   local.get $381
   local.get $382
   i32.lt_s
   local.set $383
   local.get $383
   if
    local.get $380
    local.get $381
    call $~lib/array/Array<u8>#__get
    local.get $380
    call $~lib/array/Array<u8>#get:length
    local.get $381
    i32.sub
    i32.const 1
    i32.sub
    i32.eq
    i32.eqz
    if
     unreachable
    end
    local.get $381
    i32.const 1
    i32.add
    local.set $381
    br $for-loop|38
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.const 0
  i32.const 6
  i32.const 2880
  call $~lib/rt/__newArray
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array<u8>#reverse
  local.tee $386
  i32.store $0 offset=384
  i32.const 0
  local.set $387
  local.get $386
  call $~lib/array/Array<u8>#get:length
  local.set $388
  loop $for-loop|39
   local.get $387
   local.get $388
   i32.lt_s
   local.set $389
   local.get $389
   if
    local.get $386
    local.get $387
    call $~lib/array/Array<u8>#__get
    local.get $386
    call $~lib/array/Array<u8>#get:length
    local.get $387
    i32.sub
    i32.const 1
    i32.sub
    i32.eq
    i32.eqz
    if
     unreachable
    end
    local.get $387
    i32.const 1
    i32.add
    local.set $387
    br $for-loop|39
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 17
  i32.const 0
  i32.const 6
  i32.const 2912
  call $~lib/rt/__newArray
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array<u8>#reverse
  local.tee $392
  i32.store $0 offset=388
  i32.const 0
  local.set $393
  local.get $392
  call $~lib/array/Array<u8>#get:length
  local.set $394
  loop $for-loop|40
   local.get $393
   local.get $394
   i32.lt_s
   local.set $395
   local.get $395
   if
    local.get $392
    local.get $393
    call $~lib/array/Array<u8>#__get
    local.get $392
    call $~lib/array/Array<u8>#get:length
    local.get $393
    i32.sub
    i32.const 1
    i32.sub
    i32.eq
    i32.eqz
    if
     unreachable
    end
    local.get $393
    i32.const 1
    i32.add
    local.set $393
    br $for-loop|40
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 7
  i32.const 1
  i32.const 11
  i32.const 2960
  call $~lib/rt/__newArray
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array<u16>#reverse
  local.tee $398
  i32.store $0 offset=392
  i32.const 0
  local.set $399
  local.get $398
  call $~lib/array/Array<u16>#get:length
  local.set $400
  loop $for-loop|41
   local.get $399
   local.get $400
   i32.lt_s
   local.set $401
   local.get $401
   if
    local.get $398
    local.get $399
    call $~lib/array/Array<u16>#__get
    local.get $398
    call $~lib/array/Array<u16>#get:length
    local.get $399
    i32.sub
    i32.const 1
    i32.sub
    i32.eq
    i32.eqz
    if
     unreachable
    end
    local.get $399
    i32.const 1
    i32.add
    local.set $399
    br $for-loop|41
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.const 1
  i32.const 11
  i32.const 3008
  call $~lib/rt/__newArray
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array<u16>#reverse
  local.tee $404
  i32.store $0 offset=396
  i32.const 0
  local.set $405
  local.get $404
  call $~lib/array/Array<u16>#get:length
  local.set $406
  loop $for-loop|42
   local.get $405
   local.get $406
   i32.lt_s
   local.set $407
   local.get $407
   if
    local.get $404
    local.get $405
    call $~lib/array/Array<u16>#__get
    local.get $404
    call $~lib/array/Array<u16>#get:length
    local.get $405
    i32.sub
    i32.const 1
    i32.sub
    i32.eq
    i32.eqz
    if
     unreachable
    end
    local.get $405
    i32.const 1
    i32.add
    local.set $405
    br $for-loop|42
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 9
  i32.const 1
  i32.const 11
  i32.const 3056
  call $~lib/rt/__newArray
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array<u16>#reverse
  local.tee $410
  i32.store $0 offset=400
  i32.const 0
  local.set $411
  local.get $410
  call $~lib/array/Array<u16>#get:length
  local.set $412
  loop $for-loop|43
   local.get $411
   local.get $412
   i32.lt_s
   local.set $413
   local.get $413
   if
    local.get $410
    local.get $411
    call $~lib/array/Array<u16>#__get
    local.get $410
    call $~lib/array/Array<u16>#get:length
    local.get $411
    i32.sub
    i32.const 1
    i32.sub
    i32.eq
    i32.eqz
    if
     unreachable
    end
    local.get $411
    i32.const 1
    i32.add
    local.set $411
    br $for-loop|43
   end
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 44
  i32.const 0
  call $~lib/array/Array<i32>#indexOf
  global.set $std/array/i
  global.get $std/array/i
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 42
  i32.const 0
  call $~lib/array/Array<i32>#indexOf
  global.set $std/array/i
  global.get $std/array/i
  i32.const 2
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 45
  i32.const 0
  call $~lib/array/Array<i32>#indexOf
  global.set $std/array/i
  global.get $std/array/i
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 43
  i32.const 100
  call $~lib/array/Array<i32>#indexOf
  global.set $std/array/i
  global.get $std/array/i
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 43
  i32.const -100
  call $~lib/array/Array<i32>#indexOf
  global.set $std/array/i
  global.get $std/array/i
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 43
  i32.const -2
  call $~lib/array/Array<i32>#indexOf
  global.set $std/array/i
  global.get $std/array/i
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 43
  i32.const -4
  call $~lib/array/Array<i32>#indexOf
  global.set $std/array/i
  global.get $std/array/i
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 43
  i32.const 0
  call $~lib/array/Array<i32>#indexOf
  global.set $std/array/i
  global.get $std/array/i
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 43
  i32.const 1
  call $~lib/array/Array<i32>#indexOf
  global.set $std/array/i
  global.get $std/array/i
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 43
  i32.const 2
  call $~lib/array/Array<i32>#indexOf
  global.set $std/array/i
  global.get $std/array/i
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 1
  i32.const 2
  i32.const 8
  i32.const 3104
  call $~lib/rt/__newArray
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  f32.const nan:0x400000
  i32.const 0
  call $~lib/array/Array<f32>#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 1
  i32.const 3
  i32.const 12
  i32.const 3136
  call $~lib/rt/__newArray
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  f64.const nan:0x8000000000000
  i32.const 0
  call $~lib/array/Array<f64>#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.const 2
  i32.const 3
  i32.const 3168
  call $~lib/rt/__newArray
  local.tee $420
  i32.store $0 offset=404
  local.get $420
  i32.const 2
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/array/Array<i32>#lastIndexOf@varargs
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $420
  i32.const 7
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/array/Array<i32>#lastIndexOf@varargs
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $420
  i32.const 2
  i32.const 3
  call $~lib/array/Array<i32>#lastIndexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $420
  i32.const 2
  i32.const 2
  call $~lib/array/Array<i32>#lastIndexOf
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $420
  i32.const 2
  i32.const -2
  call $~lib/array/Array<i32>#lastIndexOf
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $420
  i32.const 2
  i32.const -1
  call $~lib/array/Array<i32>#lastIndexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 44
  i32.const 0
  call $~lib/array/Array<i32>#includes
  local.set $421
  local.get $421
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 42
  i32.const 0
  call $~lib/array/Array<i32>#includes
  local.set $421
  local.get $421
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 45
  i32.const 0
  call $~lib/array/Array<i32>#includes
  local.set $421
  local.get $421
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 43
  i32.const 100
  call $~lib/array/Array<i32>#includes
  local.set $421
  local.get $421
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 43
  i32.const -100
  call $~lib/array/Array<i32>#includes
  local.set $421
  local.get $421
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 43
  i32.const -2
  call $~lib/array/Array<i32>#includes
  local.set $421
  local.get $421
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 43
  i32.const -4
  call $~lib/array/Array<i32>#includes
  local.set $421
  local.get $421
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 43
  i32.const 0
  call $~lib/array/Array<i32>#includes
  local.set $421
  local.get $421
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 43
  i32.const 1
  call $~lib/array/Array<i32>#includes
  local.set $421
  local.get $421
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 43
  i32.const 2
  call $~lib/array/Array<i32>#includes
  local.set $421
  local.get $421
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 1
  i32.const 2
  i32.const 8
  i32.const 3216
  call $~lib/rt/__newArray
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  f32.const nan:0x400000
  i32.const 0
  call $~lib/array/Array<f32>#includes
  i32.eqz
  if
   unreachable
  end
  i32.const 1
  i32.const 3
  i32.const 12
  i32.const 3248
  call $~lib/rt/__newArray
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  f64.const nan:0x8000000000000
  i32.const 0
  call $~lib/array/Array<f64>#includes
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 1
  i32.const 1
  call $~lib/array/Array<i32>#splice
  drop
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array<i32>#get:length
  i32.const 4
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  global.get $std/array/arr
  local.tee $426
  i32.store $0 offset=408
  global.get $~lib/memory/__stack_pointer
  local.get $426
  i32.load $0
  local.tee $427
  i32.store $0 offset=412
  local.get $427
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  i32.const 2
  i32.shr_s
  i32.const 8
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 0
  call $~lib/array/Array<i32>#__get
  i32.const 44
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 1
  call $~lib/array/Array<i32>#__get
  i32.const 42
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 3280
  call $~lib/rt/__newArray
  local.tee $430
  i32.store $0 offset=416
  block $std/array/isArraysEqual<i32>|inlined.19 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $430
   i32.const 0
   global.get $~lib/builtins/i32.MAX_VALUE
   call $~lib/array/Array<i32>#splice
   local.tee $433
   i32.store $0 offset=420
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 3328
   call $~lib/rt/__newArray
   local.tee $434
   i32.store $0 offset=424
   i32.const 0
   local.set $435
   local.get $435
   i32.eqz
   if
    local.get $433
    call $~lib/array/Array<i32>#get:length
    local.set $435
    local.get $435
    local.get $434
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.19
    end
    local.get $433
    local.get $434
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.19
    end
   end
   i32.const 0
   local.set $436
   loop $for-loop|44
    local.get $436
    local.get $435
    i32.lt_s
    local.set $437
    local.get $437
    if
     i32.const 0
     drop
     local.get $433
     local.get $436
     call $~lib/array/Array<i32>#__get
     local.get $434
     local.get $436
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.19
     end
     local.get $436
     i32.const 1
     i32.add
     local.set $436
     br $for-loop|44
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.20 (result i32)
   local.get $430
   local.set $440
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 2
   i32.const 3
   i32.const 3376
   call $~lib/rt/__newArray
   local.tee $441
   i32.store $0 offset=428
   i32.const 0
   local.set $442
   local.get $442
   i32.eqz
   if
    local.get $440
    call $~lib/array/Array<i32>#get:length
    local.set $442
    local.get $442
    local.get $441
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.20
    end
    local.get $440
    local.get $441
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.20
    end
   end
   i32.const 0
   local.set $443
   loop $for-loop|45
    local.get $443
    local.get $442
    i32.lt_s
    local.set $444
    local.get $444
    if
     i32.const 0
     drop
     local.get $440
     local.get $443
     call $~lib/array/Array<i32>#__get
     local.get $441
     local.get $443
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.20
     end
     local.get $443
     i32.const 1
     i32.add
     local.set $443
     br $for-loop|45
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 3408
  call $~lib/rt/__newArray
  local.tee $430
  i32.store $0 offset=416
  block $std/array/isArraysEqual<i32>|inlined.21 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $430
   i32.const 0
   i32.const 0
   call $~lib/array/Array<i32>#splice
   local.tee $449
   i32.store $0 offset=432
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 2
   i32.const 3
   i32.const 3456
   call $~lib/rt/__newArray
   local.tee $450
   i32.store $0 offset=436
   i32.const 0
   local.set $451
   local.get $451
   i32.eqz
   if
    local.get $449
    call $~lib/array/Array<i32>#get:length
    local.set $451
    local.get $451
    local.get $450
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.21
    end
    local.get $449
    local.get $450
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.21
    end
   end
   i32.const 0
   local.set $452
   loop $for-loop|46
    local.get $452
    local.get $451
    i32.lt_s
    local.set $453
    local.get $453
    if
     i32.const 0
     drop
     local.get $449
     local.get $452
     call $~lib/array/Array<i32>#__get
     local.get $450
     local.get $452
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.21
     end
     local.get $452
     i32.const 1
     i32.add
     local.set $452
     br $for-loop|46
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.22 (result i32)
   local.get $430
   local.set $456
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 3488
   call $~lib/rt/__newArray
   local.tee $457
   i32.store $0 offset=440
   i32.const 0
   local.set $458
   local.get $458
   i32.eqz
   if
    local.get $456
    call $~lib/array/Array<i32>#get:length
    local.set $458
    local.get $458
    local.get $457
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.22
    end
    local.get $456
    local.get $457
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.22
    end
   end
   i32.const 0
   local.set $459
   loop $for-loop|47
    local.get $459
    local.get $458
    i32.lt_s
    local.set $460
    local.get $460
    if
     i32.const 0
     drop
     local.get $456
     local.get $459
     call $~lib/array/Array<i32>#__get
     local.get $457
     local.get $459
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.22
     end
     local.get $459
     i32.const 1
     i32.add
     local.set $459
     br $for-loop|47
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 3536
  call $~lib/rt/__newArray
  local.tee $430
  i32.store $0 offset=416
  block $std/array/isArraysEqual<i32>|inlined.23 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $430
   i32.const 2
   global.get $~lib/builtins/i32.MAX_VALUE
   call $~lib/array/Array<i32>#splice
   local.tee $465
   i32.store $0 offset=444
   global.get $~lib/memory/__stack_pointer
   i32.const 3
   i32.const 2
   i32.const 3
   i32.const 3584
   call $~lib/rt/__newArray
   local.tee $466
   i32.store $0 offset=448
   i32.const 0
   local.set $467
   local.get $467
   i32.eqz
   if
    local.get $465
    call $~lib/array/Array<i32>#get:length
    local.set $467
    local.get $467
    local.get $466
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.23
    end
    local.get $465
    local.get $466
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.23
    end
   end
   i32.const 0
   local.set $468
   loop $for-loop|48
    local.get $468
    local.get $467
    i32.lt_s
    local.set $469
    local.get $469
    if
     i32.const 0
     drop
     local.get $465
     local.get $468
     call $~lib/array/Array<i32>#__get
     local.get $466
     local.get $468
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.23
     end
     local.get $468
     i32.const 1
     i32.add
     local.set $468
     br $for-loop|48
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.24 (result i32)
   local.get $430
   local.set $472
   global.get $~lib/memory/__stack_pointer
   i32.const 2
   i32.const 2
   i32.const 3
   i32.const 3616
   call $~lib/rt/__newArray
   local.tee $473
   i32.store $0 offset=452
   i32.const 0
   local.set $474
   local.get $474
   i32.eqz
   if
    local.get $472
    call $~lib/array/Array<i32>#get:length
    local.set $474
    local.get $474
    local.get $473
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.24
    end
    local.get $472
    local.get $473
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.24
    end
   end
   i32.const 0
   local.set $475
   loop $for-loop|49
    local.get $475
    local.get $474
    i32.lt_s
    local.set $476
    local.get $476
    if
     i32.const 0
     drop
     local.get $472
     local.get $475
     call $~lib/array/Array<i32>#__get
     local.get $473
     local.get $475
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.24
     end
     local.get $475
     i32.const 1
     i32.add
     local.set $475
     br $for-loop|49
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 3648
  call $~lib/rt/__newArray
  local.tee $430
  i32.store $0 offset=416
  block $std/array/isArraysEqual<i32>|inlined.25 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $430
   i32.const 2
   i32.const 2
   call $~lib/array/Array<i32>#splice
   local.tee $481
   i32.store $0 offset=456
   global.get $~lib/memory/__stack_pointer
   i32.const 2
   i32.const 2
   i32.const 3
   i32.const 3696
   call $~lib/rt/__newArray
   local.tee $482
   i32.store $0 offset=460
   i32.const 0
   local.set $483
   local.get $483
   i32.eqz
   if
    local.get $481
    call $~lib/array/Array<i32>#get:length
    local.set $483
    local.get $483
    local.get $482
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.25
    end
    local.get $481
    local.get $482
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.25
    end
   end
   i32.const 0
   local.set $484
   loop $for-loop|50
    local.get $484
    local.get $483
    i32.lt_s
    local.set $485
    local.get $485
    if
     i32.const 0
     drop
     local.get $481
     local.get $484
     call $~lib/array/Array<i32>#__get
     local.get $482
     local.get $484
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.25
     end
     local.get $484
     i32.const 1
     i32.add
     local.set $484
     br $for-loop|50
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.26 (result i32)
   local.get $430
   local.set $488
   global.get $~lib/memory/__stack_pointer
   i32.const 3
   i32.const 2
   i32.const 3
   i32.const 3728
   call $~lib/rt/__newArray
   local.tee $489
   i32.store $0 offset=464
   i32.const 0
   local.set $490
   local.get $490
   i32.eqz
   if
    local.get $488
    call $~lib/array/Array<i32>#get:length
    local.set $490
    local.get $490
    local.get $489
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.26
    end
    local.get $488
    local.get $489
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.26
    end
   end
   i32.const 0
   local.set $491
   loop $for-loop|51
    local.get $491
    local.get $490
    i32.lt_s
    local.set $492
    local.get $492
    if
     i32.const 0
     drop
     local.get $488
     local.get $491
     call $~lib/array/Array<i32>#__get
     local.get $489
     local.get $491
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.26
     end
     local.get $491
     i32.const 1
     i32.add
     local.set $491
     br $for-loop|51
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 3760
  call $~lib/rt/__newArray
  local.tee $430
  i32.store $0 offset=416
  block $std/array/isArraysEqual<i32>|inlined.27 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $430
   i32.const 0
   i32.const 1
   call $~lib/array/Array<i32>#splice
   local.tee $497
   i32.store $0 offset=468
   global.get $~lib/memory/__stack_pointer
   i32.const 1
   i32.const 2
   i32.const 3
   i32.const 3808
   call $~lib/rt/__newArray
   local.tee $498
   i32.store $0 offset=472
   i32.const 0
   local.set $499
   local.get $499
   i32.eqz
   if
    local.get $497
    call $~lib/array/Array<i32>#get:length
    local.set $499
    local.get $499
    local.get $498
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.27
    end
    local.get $497
    local.get $498
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.27
    end
   end
   i32.const 0
   local.set $500
   loop $for-loop|52
    local.get $500
    local.get $499
    i32.lt_s
    local.set $501
    local.get $501
    if
     i32.const 0
     drop
     local.get $497
     local.get $500
     call $~lib/array/Array<i32>#__get
     local.get $498
     local.get $500
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.27
     end
     local.get $500
     i32.const 1
     i32.add
     local.set $500
     br $for-loop|52
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.28 (result i32)
   local.get $430
   local.set $504
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 2
   i32.const 3
   i32.const 3840
   call $~lib/rt/__newArray
   local.tee $505
   i32.store $0 offset=476
   i32.const 0
   local.set $506
   local.get $506
   i32.eqz
   if
    local.get $504
    call $~lib/array/Array<i32>#get:length
    local.set $506
    local.get $506
    local.get $505
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.28
    end
    local.get $504
    local.get $505
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.28
    end
   end
   i32.const 0
   local.set $507
   loop $for-loop|53
    local.get $507
    local.get $506
    i32.lt_s
    local.set $508
    local.get $508
    if
     i32.const 0
     drop
     local.get $504
     local.get $507
     call $~lib/array/Array<i32>#__get
     local.get $505
     local.get $507
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.28
     end
     local.get $507
     i32.const 1
     i32.add
     local.set $507
     br $for-loop|53
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 3888
  call $~lib/rt/__newArray
  local.tee $430
  i32.store $0 offset=416
  block $std/array/isArraysEqual<i32>|inlined.29 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $430
   i32.const -1
   global.get $~lib/builtins/i32.MAX_VALUE
   call $~lib/array/Array<i32>#splice
   local.tee $513
   i32.store $0 offset=480
   global.get $~lib/memory/__stack_pointer
   i32.const 1
   i32.const 2
   i32.const 3
   i32.const 3936
   call $~lib/rt/__newArray
   local.tee $514
   i32.store $0 offset=484
   i32.const 0
   local.set $515
   local.get $515
   i32.eqz
   if
    local.get $513
    call $~lib/array/Array<i32>#get:length
    local.set $515
    local.get $515
    local.get $514
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.29
    end
    local.get $513
    local.get $514
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.29
    end
   end
   i32.const 0
   local.set $516
   loop $for-loop|54
    local.get $516
    local.get $515
    i32.lt_s
    local.set $517
    local.get $517
    if
     i32.const 0
     drop
     local.get $513
     local.get $516
     call $~lib/array/Array<i32>#__get
     local.get $514
     local.get $516
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.29
     end
     local.get $516
     i32.const 1
     i32.add
     local.set $516
     br $for-loop|54
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.30 (result i32)
   local.get $430
   local.set $520
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 2
   i32.const 3
   i32.const 3968
   call $~lib/rt/__newArray
   local.tee $521
   i32.store $0 offset=488
   i32.const 0
   local.set $522
   local.get $522
   i32.eqz
   if
    local.get $520
    call $~lib/array/Array<i32>#get:length
    local.set $522
    local.get $522
    local.get $521
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.30
    end
    local.get $520
    local.get $521
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.30
    end
   end
   i32.const 0
   local.set $523
   loop $for-loop|55
    local.get $523
    local.get $522
    i32.lt_s
    local.set $524
    local.get $524
    if
     i32.const 0
     drop
     local.get $520
     local.get $523
     call $~lib/array/Array<i32>#__get
     local.get $521
     local.get $523
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.30
     end
     local.get $523
     i32.const 1
     i32.add
     local.set $523
     br $for-loop|55
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 4016
  call $~lib/rt/__newArray
  local.tee $430
  i32.store $0 offset=416
  block $std/array/isArraysEqual<i32>|inlined.31 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $430
   i32.const -2
   global.get $~lib/builtins/i32.MAX_VALUE
   call $~lib/array/Array<i32>#splice
   local.tee $529
   i32.store $0 offset=492
   global.get $~lib/memory/__stack_pointer
   i32.const 2
   i32.const 2
   i32.const 3
   i32.const 4064
   call $~lib/rt/__newArray
   local.tee $530
   i32.store $0 offset=496
   i32.const 0
   local.set $531
   local.get $531
   i32.eqz
   if
    local.get $529
    call $~lib/array/Array<i32>#get:length
    local.set $531
    local.get $531
    local.get $530
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.31
    end
    local.get $529
    local.get $530
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.31
    end
   end
   i32.const 0
   local.set $532
   loop $for-loop|56
    local.get $532
    local.get $531
    i32.lt_s
    local.set $533
    local.get $533
    if
     i32.const 0
     drop
     local.get $529
     local.get $532
     call $~lib/array/Array<i32>#__get
     local.get $530
     local.get $532
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.31
     end
     local.get $532
     i32.const 1
     i32.add
     local.set $532
     br $for-loop|56
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.32 (result i32)
   local.get $430
   local.set $536
   global.get $~lib/memory/__stack_pointer
   i32.const 3
   i32.const 2
   i32.const 3
   i32.const 4096
   call $~lib/rt/__newArray
   local.tee $537
   i32.store $0 offset=500
   i32.const 0
   local.set $538
   local.get $538
   i32.eqz
   if
    local.get $536
    call $~lib/array/Array<i32>#get:length
    local.set $538
    local.get $538
    local.get $537
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.32
    end
    local.get $536
    local.get $537
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.32
    end
   end
   i32.const 0
   local.set $539
   loop $for-loop|57
    local.get $539
    local.get $538
    i32.lt_s
    local.set $540
    local.get $540
    if
     i32.const 0
     drop
     local.get $536
     local.get $539
     call $~lib/array/Array<i32>#__get
     local.get $537
     local.get $539
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.32
     end
     local.get $539
     i32.const 1
     i32.add
     local.set $539
     br $for-loop|57
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 4128
  call $~lib/rt/__newArray
  local.tee $430
  i32.store $0 offset=416
  block $std/array/isArraysEqual<i32>|inlined.33 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $430
   i32.const -2
   i32.const 1
   call $~lib/array/Array<i32>#splice
   local.tee $545
   i32.store $0 offset=504
   global.get $~lib/memory/__stack_pointer
   i32.const 1
   i32.const 2
   i32.const 3
   i32.const 4176
   call $~lib/rt/__newArray
   local.tee $546
   i32.store $0 offset=508
   i32.const 0
   local.set $547
   local.get $547
   i32.eqz
   if
    local.get $545
    call $~lib/array/Array<i32>#get:length
    local.set $547
    local.get $547
    local.get $546
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.33
    end
    local.get $545
    local.get $546
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.33
    end
   end
   i32.const 0
   local.set $548
   loop $for-loop|58
    local.get $548
    local.get $547
    i32.lt_s
    local.set $549
    local.get $549
    if
     i32.const 0
     drop
     local.get $545
     local.get $548
     call $~lib/array/Array<i32>#__get
     local.get $546
     local.get $548
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.33
     end
     local.get $548
     i32.const 1
     i32.add
     local.set $548
     br $for-loop|58
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.34 (result i32)
   local.get $430
   local.set $552
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 2
   i32.const 3
   i32.const 4208
   call $~lib/rt/__newArray
   local.tee $553
   i32.store $0 offset=512
   i32.const 0
   local.set $554
   local.get $554
   i32.eqz
   if
    local.get $552
    call $~lib/array/Array<i32>#get:length
    local.set $554
    local.get $554
    local.get $553
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.34
    end
    local.get $552
    local.get $553
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.34
    end
   end
   i32.const 0
   local.set $555
   loop $for-loop|59
    local.get $555
    local.get $554
    i32.lt_s
    local.set $556
    local.get $556
    if
     i32.const 0
     drop
     local.get $552
     local.get $555
     call $~lib/array/Array<i32>#__get
     local.get $553
     local.get $555
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.34
     end
     local.get $555
     i32.const 1
     i32.add
     local.set $555
     br $for-loop|59
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 4256
  call $~lib/rt/__newArray
  local.tee $430
  i32.store $0 offset=416
  block $std/array/isArraysEqual<i32>|inlined.35 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $430
   i32.const -7
   i32.const 1
   call $~lib/array/Array<i32>#splice
   local.tee $561
   i32.store $0 offset=516
   global.get $~lib/memory/__stack_pointer
   i32.const 1
   i32.const 2
   i32.const 3
   i32.const 4304
   call $~lib/rt/__newArray
   local.tee $562
   i32.store $0 offset=520
   i32.const 0
   local.set $563
   local.get $563
   i32.eqz
   if
    local.get $561
    call $~lib/array/Array<i32>#get:length
    local.set $563
    local.get $563
    local.get $562
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.35
    end
    local.get $561
    local.get $562
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.35
    end
   end
   i32.const 0
   local.set $564
   loop $for-loop|60
    local.get $564
    local.get $563
    i32.lt_s
    local.set $565
    local.get $565
    if
     i32.const 0
     drop
     local.get $561
     local.get $564
     call $~lib/array/Array<i32>#__get
     local.get $562
     local.get $564
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.35
     end
     local.get $564
     i32.const 1
     i32.add
     local.set $564
     br $for-loop|60
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.36 (result i32)
   local.get $430
   local.set $568
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 2
   i32.const 3
   i32.const 4336
   call $~lib/rt/__newArray
   local.tee $569
   i32.store $0 offset=524
   i32.const 0
   local.set $570
   local.get $570
   i32.eqz
   if
    local.get $568
    call $~lib/array/Array<i32>#get:length
    local.set $570
    local.get $570
    local.get $569
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.36
    end
    local.get $568
    local.get $569
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.36
    end
   end
   i32.const 0
   local.set $571
   loop $for-loop|61
    local.get $571
    local.get $570
    i32.lt_s
    local.set $572
    local.get $572
    if
     i32.const 0
     drop
     local.get $568
     local.get $571
     call $~lib/array/Array<i32>#__get
     local.get $569
     local.get $571
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.36
     end
     local.get $571
     i32.const 1
     i32.add
     local.set $571
     br $for-loop|61
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 4384
  call $~lib/rt/__newArray
  local.tee $430
  i32.store $0 offset=416
  block $std/array/isArraysEqual<i32>|inlined.37 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $430
   i32.const -2
   i32.const -1
   call $~lib/array/Array<i32>#splice
   local.tee $577
   i32.store $0 offset=528
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 2
   i32.const 3
   i32.const 4432
   call $~lib/rt/__newArray
   local.tee $578
   i32.store $0 offset=532
   i32.const 0
   local.set $579
   local.get $579
   i32.eqz
   if
    local.get $577
    call $~lib/array/Array<i32>#get:length
    local.set $579
    local.get $579
    local.get $578
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.37
    end
    local.get $577
    local.get $578
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.37
    end
   end
   i32.const 0
   local.set $580
   loop $for-loop|62
    local.get $580
    local.get $579
    i32.lt_s
    local.set $581
    local.get $581
    if
     i32.const 0
     drop
     local.get $577
     local.get $580
     call $~lib/array/Array<i32>#__get
     local.get $578
     local.get $580
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.37
     end
     local.get $580
     i32.const 1
     i32.add
     local.set $580
     br $for-loop|62
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.38 (result i32)
   local.get $430
   local.set $584
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 4464
   call $~lib/rt/__newArray
   local.tee $585
   i32.store $0 offset=536
   i32.const 0
   local.set $586
   local.get $586
   i32.eqz
   if
    local.get $584
    call $~lib/array/Array<i32>#get:length
    local.set $586
    local.get $586
    local.get $585
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.38
    end
    local.get $584
    local.get $585
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.38
    end
   end
   i32.const 0
   local.set $587
   loop $for-loop|63
    local.get $587
    local.get $586
    i32.lt_s
    local.set $588
    local.get $588
    if
     i32.const 0
     drop
     local.get $584
     local.get $587
     call $~lib/array/Array<i32>#__get
     local.get $585
     local.get $587
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.38
     end
     local.get $587
     i32.const 1
     i32.add
     local.set $587
     br $for-loop|63
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 4512
  call $~lib/rt/__newArray
  local.tee $430
  i32.store $0 offset=416
  block $std/array/isArraysEqual<i32>|inlined.39 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $430
   i32.const 1
   i32.const -2
   call $~lib/array/Array<i32>#splice
   local.tee $593
   i32.store $0 offset=540
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 2
   i32.const 3
   i32.const 4560
   call $~lib/rt/__newArray
   local.tee $594
   i32.store $0 offset=544
   i32.const 0
   local.set $595
   local.get $595
   i32.eqz
   if
    local.get $593
    call $~lib/array/Array<i32>#get:length
    local.set $595
    local.get $595
    local.get $594
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.39
    end
    local.get $593
    local.get $594
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.39
    end
   end
   i32.const 0
   local.set $596
   loop $for-loop|64
    local.get $596
    local.get $595
    i32.lt_s
    local.set $597
    local.get $597
    if
     i32.const 0
     drop
     local.get $593
     local.get $596
     call $~lib/array/Array<i32>#__get
     local.get $594
     local.get $596
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.39
     end
     local.get $596
     i32.const 1
     i32.add
     local.set $596
     br $for-loop|64
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.40 (result i32)
   local.get $430
   local.set $600
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 4592
   call $~lib/rt/__newArray
   local.tee $601
   i32.store $0 offset=548
   i32.const 0
   local.set $602
   local.get $602
   i32.eqz
   if
    local.get $600
    call $~lib/array/Array<i32>#get:length
    local.set $602
    local.get $602
    local.get $601
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.40
    end
    local.get $600
    local.get $601
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.40
    end
   end
   i32.const 0
   local.set $603
   loop $for-loop|65
    local.get $603
    local.get $602
    i32.lt_s
    local.set $604
    local.get $604
    if
     i32.const 0
     drop
     local.get $600
     local.get $603
     call $~lib/array/Array<i32>#__get
     local.get $601
     local.get $603
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.40
     end
     local.get $603
     i32.const 1
     i32.add
     local.set $603
     br $for-loop|65
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 4640
  call $~lib/rt/__newArray
  local.tee $430
  i32.store $0 offset=416
  block $std/array/isArraysEqual<i32>|inlined.41 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $430
   i32.const 4
   i32.const 0
   call $~lib/array/Array<i32>#splice
   local.tee $609
   i32.store $0 offset=552
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 2
   i32.const 3
   i32.const 4688
   call $~lib/rt/__newArray
   local.tee $610
   i32.store $0 offset=556
   i32.const 0
   local.set $611
   local.get $611
   i32.eqz
   if
    local.get $609
    call $~lib/array/Array<i32>#get:length
    local.set $611
    local.get $611
    local.get $610
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.41
    end
    local.get $609
    local.get $610
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.41
    end
   end
   i32.const 0
   local.set $612
   loop $for-loop|66
    local.get $612
    local.get $611
    i32.lt_s
    local.set $613
    local.get $613
    if
     i32.const 0
     drop
     local.get $609
     local.get $612
     call $~lib/array/Array<i32>#__get
     local.get $610
     local.get $612
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.41
     end
     local.get $612
     i32.const 1
     i32.add
     local.set $612
     br $for-loop|66
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.42 (result i32)
   local.get $430
   local.set $616
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 4720
   call $~lib/rt/__newArray
   local.tee $617
   i32.store $0 offset=560
   i32.const 0
   local.set $618
   local.get $618
   i32.eqz
   if
    local.get $616
    call $~lib/array/Array<i32>#get:length
    local.set $618
    local.get $618
    local.get $617
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.42
    end
    local.get $616
    local.get $617
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.42
    end
   end
   i32.const 0
   local.set $619
   loop $for-loop|67
    local.get $619
    local.get $618
    i32.lt_s
    local.set $620
    local.get $620
    if
     i32.const 0
     drop
     local.get $616
     local.get $619
     call $~lib/array/Array<i32>#__get
     local.get $617
     local.get $619
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.42
     end
     local.get $619
     i32.const 1
     i32.add
     local.set $619
     br $for-loop|67
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 4768
  call $~lib/rt/__newArray
  local.tee $430
  i32.store $0 offset=416
  block $std/array/isArraysEqual<i32>|inlined.43 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $430
   i32.const 7
   i32.const 0
   call $~lib/array/Array<i32>#splice
   local.tee $625
   i32.store $0 offset=564
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 2
   i32.const 3
   i32.const 4816
   call $~lib/rt/__newArray
   local.tee $626
   i32.store $0 offset=568
   i32.const 0
   local.set $627
   local.get $627
   i32.eqz
   if
    local.get $625
    call $~lib/array/Array<i32>#get:length
    local.set $627
    local.get $627
    local.get $626
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.43
    end
    local.get $625
    local.get $626
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.43
    end
   end
   i32.const 0
   local.set $628
   loop $for-loop|68
    local.get $628
    local.get $627
    i32.lt_s
    local.set $629
    local.get $629
    if
     i32.const 0
     drop
     local.get $625
     local.get $628
     call $~lib/array/Array<i32>#__get
     local.get $626
     local.get $628
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.43
     end
     local.get $628
     i32.const 1
     i32.add
     local.set $628
     br $for-loop|68
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.44 (result i32)
   local.get $430
   local.set $632
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 4848
   call $~lib/rt/__newArray
   local.tee $633
   i32.store $0 offset=572
   i32.const 0
   local.set $634
   local.get $634
   i32.eqz
   if
    local.get $632
    call $~lib/array/Array<i32>#get:length
    local.set $634
    local.get $634
    local.get $633
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.44
    end
    local.get $632
    local.get $633
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.44
    end
   end
   i32.const 0
   local.set $635
   loop $for-loop|69
    local.get $635
    local.get $634
    i32.lt_s
    local.set $636
    local.get $636
    if
     i32.const 0
     drop
     local.get $632
     local.get $635
     call $~lib/array/Array<i32>#__get
     local.get $633
     local.get $635
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.44
     end
     local.get $635
     i32.const 1
     i32.add
     local.set $635
     br $for-loop|69
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 4896
  call $~lib/rt/__newArray
  local.tee $430
  i32.store $0 offset=416
  block $std/array/isArraysEqual<i32>|inlined.45 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $430
   i32.const 7
   i32.const 5
   call $~lib/array/Array<i32>#splice
   local.tee $641
   i32.store $0 offset=576
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 2
   i32.const 3
   i32.const 4944
   call $~lib/rt/__newArray
   local.tee $642
   i32.store $0 offset=580
   i32.const 0
   local.set $643
   local.get $643
   i32.eqz
   if
    local.get $641
    call $~lib/array/Array<i32>#get:length
    local.set $643
    local.get $643
    local.get $642
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.45
    end
    local.get $641
    local.get $642
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.45
    end
   end
   i32.const 0
   local.set $644
   loop $for-loop|70
    local.get $644
    local.get $643
    i32.lt_s
    local.set $645
    local.get $645
    if
     i32.const 0
     drop
     local.get $641
     local.get $644
     call $~lib/array/Array<i32>#__get
     local.get $642
     local.get $644
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.45
     end
     local.get $644
     i32.const 1
     i32.add
     local.set $644
     br $for-loop|70
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.46 (result i32)
   local.get $430
   local.set $648
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 4976
   call $~lib/rt/__newArray
   local.tee $649
   i32.store $0 offset=584
   i32.const 0
   local.set $650
   local.get $650
   i32.eqz
   if
    local.get $648
    call $~lib/array/Array<i32>#get:length
    local.set $650
    local.get $650
    local.get $649
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.46
    end
    local.get $648
    local.get $649
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.46
    end
   end
   i32.const 0
   local.set $651
   loop $for-loop|71
    local.get $651
    local.get $650
    i32.lt_s
    local.set $652
    local.get $652
    if
     i32.const 0
     drop
     local.get $648
     local.get $651
     call $~lib/array/Array<i32>#__get
     local.get $649
     local.get $651
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.46
     end
     local.get $651
     i32.const 1
     i32.add
     local.set $651
     br $for-loop|71
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 2
  i32.const 9
  i32.const 5024
  call $~lib/rt/__newArray
  local.tee $655
  i32.store $0 offset=588
  global.get $~lib/memory/__stack_pointer
  local.get $655
  i32.const 1
  i32.const 2
  call $~lib/array/Array<std/array/Ref>#splice
  local.tee $656
  i32.store $0 offset=592
  local.get $656
  call $~lib/array/Array<std/array/Ref>#get:length
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $655
  call $~lib/array/Array<std/array/Ref>#get:length
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 5
  i32.const 2
  i32.const 9
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $657
  i32.store $0 offset=596
  global.get $~lib/memory/__stack_pointer
  local.get $657
  i32.load $0 offset=4
  local.tee $658
  i32.store $0 offset=600
  local.get $657
  i32.const 0
  i32.const 0
  local.set $659
  i32.const 1
  local.set $660
  local.get $659
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 4
   call $~lib/rt/itcms/__new
   local.tee $659
   i32.store $0 offset=604
  end
  local.get $659
  local.get $660
  call $std/array/Ref#set:v
  local.get $659
  call $~lib/array/Array<std/array/Ref>#__uset
  local.get $657
  i32.const 1
  i32.const 0
  local.set $661
  i32.const 2
  local.set $662
  local.get $661
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 4
   call $~lib/rt/itcms/__new
   local.tee $661
   i32.store $0 offset=608
  end
  local.get $661
  local.get $662
  call $std/array/Ref#set:v
  local.get $661
  call $~lib/array/Array<std/array/Ref>#__uset
  local.get $657
  i32.const 2
  i32.const 0
  local.set $663
  i32.const 3
  local.set $664
  local.get $663
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 4
   call $~lib/rt/itcms/__new
   local.tee $663
   i32.store $0 offset=612
  end
  local.get $663
  local.get $664
  call $std/array/Ref#set:v
  local.get $663
  call $~lib/array/Array<std/array/Ref>#__uset
  local.get $657
  i32.const 3
  i32.const 0
  local.set $665
  i32.const 4
  local.set $666
  local.get $665
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 4
   call $~lib/rt/itcms/__new
   local.tee $665
   i32.store $0 offset=616
  end
  local.get $665
  local.get $666
  call $std/array/Ref#set:v
  local.get $665
  call $~lib/array/Array<std/array/Ref>#__uset
  local.get $657
  i32.const 4
  i32.const 0
  local.set $667
  i32.const 5
  local.set $668
  local.get $667
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 4
   call $~lib/rt/itcms/__new
   local.tee $667
   i32.store $0 offset=620
  end
  local.get $667
  local.get $668
  call $std/array/Ref#set:v
  local.get $667
  call $~lib/array/Array<std/array/Ref>#__uset
  local.get $657
  local.tee $655
  i32.store $0 offset=588
  global.get $~lib/memory/__stack_pointer
  local.get $655
  i32.const 2
  i32.const 2
  call $~lib/array/Array<std/array/Ref>#splice
  local.tee $656
  i32.store $0 offset=592
  local.get $656
  call $~lib/array/Array<std/array/Ref>#get:length
  i32.const 2
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $656
  i32.const 0
  call $~lib/array/Array<std/array/Ref>#__get
  i32.load $0
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $656
  i32.const 1
  call $~lib/array/Array<std/array/Ref>#__get
  i32.load $0
  i32.const 4
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $655
  call $~lib/array/Array<std/array/Ref>#get:length
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $655
  i32.const 0
  call $~lib/array/Array<std/array/Ref>#__get
  i32.load $0
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $655
  i32.const 1
  call $~lib/array/Array<std/array/Ref>#__get
  i32.load $0
  i32.const 2
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $655
  i32.const 2
  call $~lib/array/Array<std/array/Ref>#__get
  i32.load $0
  i32.const 5
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 3
  i32.const 2
  i32.const 13
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $669
  i32.store $0 offset=624
  global.get $~lib/memory/__stack_pointer
  local.get $669
  i32.load $0 offset=4
  local.tee $670
  i32.store $0 offset=628
  local.get $669
  i32.const 0
  i32.const 0
  local.set $671
  i32.const 1
  local.set $672
  local.get $671
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 4
   call $~lib/rt/itcms/__new
   local.tee $671
   i32.store $0 offset=632
  end
  local.get $671
  local.get $672
  call $std/array/Ref#set:v
  local.get $671
  call $~lib/array/Array<std/array/Ref|null>#__uset
  local.get $669
  i32.const 1
  i32.const 0
  call $~lib/array/Array<std/array/Ref|null>#__uset
  local.get $669
  i32.const 2
  i32.const 0
  local.set $673
  i32.const 2
  local.set $674
  local.get $673
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 4
   call $~lib/rt/itcms/__new
   local.tee $673
   i32.store $0 offset=636
  end
  local.get $673
  local.get $674
  call $std/array/Ref#set:v
  local.get $673
  call $~lib/array/Array<std/array/Ref|null>#__uset
  local.get $669
  local.tee $675
  i32.store $0 offset=640
  global.get $~lib/memory/__stack_pointer
  local.get $675
  i32.const 0
  i32.const 1
  call $~lib/array/Array<std/array/Ref|null>#splice
  local.tee $676
  i32.store $0 offset=644
  local.get $676
  call $~lib/array/Array<std/array/Ref|null>#get:length
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $676
  i32.const 0
  call $~lib/array/Array<std/array/Ref|null>#__get
  local.tee $677
  i32.store $0 offset=648
  local.get $677
  if (result i32)
   local.get $677
  else
   unreachable
  end
  i32.load $0
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $675
  call $~lib/array/Array<std/array/Ref|null>#get:length
  i32.const 2
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $675
  i32.const 0
  call $~lib/array/Array<std/array/Ref|null>#__get
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $675
  i32.const 1
  call $~lib/array/Array<std/array/Ref|null>#__get
  local.tee $678
  i32.store $0 offset=652
  local.get $678
  if (result i32)
   local.get $678
  else
   unreachable
  end
  i32.load $0
  i32.const 2
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 0
  i32.const 0
  call $~lib/array/Array<i32>#__set
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 1
  i32.const 1
  call $~lib/array/Array<i32>#__set
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 2
  i32.const 2
  call $~lib/array/Array<i32>#__set
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 3
  i32.const 3
  call $~lib/array/Array<i32>#__set
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 5184
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0 offset=184
  local.get $1150
  call $~lib/array/Array<i32>#findIndex
  global.set $std/array/i
  global.get $std/array/i
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 5216
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0 offset=184
  local.get $1150
  call $~lib/array/Array<i32>#findIndex
  global.set $std/array/i
  global.get $std/array/i
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 5248
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0 offset=184
  local.get $1150
  call $~lib/array/Array<i32>#findIndex
  global.set $std/array/i
  global.get $std/array/i
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 5280
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0 offset=184
  local.get $1150
  call $~lib/array/Array<i32>#findIndex
  global.set $std/array/i
  global.get $std/array/i
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array<i32>#get:length
  i32.const 8
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 5312
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0 offset=184
  local.get $1150
  call $~lib/array/Array<i32>#findIndex
  global.set $std/array/i
  global.get $std/array/i
  i32.const -1
  i32.ne
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 5344
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0 offset=184
  local.get $1150
  call $~lib/array/Array<i32>#findIndex
  global.set $std/array/i
  global.get $std/array/i
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array<i32>#get:length
  i32.const 2
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 2
  call $~lib/array/Array<i32>#push
  drop
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 3
  call $~lib/array/Array<i32>#push
  drop
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.const 2
  i32.const 3
  i32.const 5376
  call $~lib/rt/__newArray
  local.tee $681
  i32.store $0 offset=656
  local.get $681
  i32.const 5424
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0 offset=184
  local.get $1150
  call $~lib/array/Array<i32>#findLastIndex
  global.set $std/array/i
  global.get $std/array/i
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $681
  i32.const 5456
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0 offset=184
  local.get $1150
  call $~lib/array/Array<i32>#findLastIndex
  global.set $std/array/i
  global.get $std/array/i
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $681
  i32.const 5488
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0 offset=184
  local.get $1150
  call $~lib/array/Array<i32>#findLastIndex
  global.set $std/array/i
  global.get $std/array/i
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $681
  i32.const 5520
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0 offset=184
  local.get $1150
  call $~lib/array/Array<i32>#findLastIndex
  global.set $std/array/i
  global.get $std/array/i
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 5552
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0 offset=184
  local.get $1150
  call $~lib/array/Array<i32>#every
  local.set $682
  local.get $682
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 5584
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0 offset=184
  local.get $1150
  call $~lib/array/Array<i32>#every
  local.set $682
  local.get $682
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 5616
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0 offset=184
  local.get $1150
  call $~lib/array/Array<i32>#every
  local.set $682
  local.get $682
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array<i32>#get:length
  i32.const 8
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 5648
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0 offset=184
  local.get $1150
  call $~lib/array/Array<i32>#every
  local.set $682
  local.get $682
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 5680
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0 offset=184
  local.get $1150
  call $~lib/array/Array<i32>#every
  local.set $682
  local.get $682
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array<i32>#get:length
  i32.const 2
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 2
  call $~lib/array/Array<i32>#push
  drop
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 3
  call $~lib/array/Array<i32>#push
  drop
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 5712
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0 offset=184
  local.get $1150
  call $~lib/array/Array<i32>#some
  local.set $683
  local.get $683
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 5744
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0 offset=184
  local.get $1150
  call $~lib/array/Array<i32>#some
  local.set $683
  local.get $683
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 5776
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0 offset=184
  local.get $1150
  call $~lib/array/Array<i32>#some
  local.set $683
  local.get $683
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array<i32>#get:length
  i32.const 8
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 5808
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0 offset=184
  local.get $1150
  call $~lib/array/Array<i32>#some
  local.set $683
  local.get $683
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 5840
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0 offset=184
  local.get $1150
  call $~lib/array/Array<i32>#some
  local.set $683
  local.get $683
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array<i32>#get:length
  i32.const 2
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 2
  call $~lib/array/Array<i32>#push
  drop
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 3
  call $~lib/array/Array<i32>#push
  drop
  i32.const 0
  global.set $std/array/i
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 5872
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0 offset=184
  local.get $1150
  call $~lib/array/Array<i32>#forEach
  global.get $std/array/i
  i32.const 6
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  global.set $std/array/i
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 5904
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0 offset=184
  local.get $1150
  call $~lib/array/Array<i32>#forEach
  global.get $std/array/i
  i32.const 6
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array<i32>#get:length
  i32.const 8
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  global.set $std/array/i
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 5936
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0 offset=184
  local.get $1150
  call $~lib/array/Array<i32>#forEach
  global.get $std/array/i
  i32.const 406
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array<i32>#pop
  drop
  i32.const 0
  global.set $std/array/i
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 5968
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0 offset=184
  local.get $1150
  call $~lib/array/Array<i32>#forEach
  global.get $std/array/i
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array<i32>#get:length
  i32.const 2
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 2
  call $~lib/array/Array<i32>#push
  drop
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 3
  call $~lib/array/Array<i32>#push
  drop
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 6000
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0 offset=184
  local.get $1150
  call $~lib/array/Array<i32>#forEach
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array<i32>#get:length
  i32.const 100
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $684
  loop $for-loop|72
   local.get $684
   i32.const 100
   i32.lt_s
   local.set $685
   local.get $685
   if
    global.get $std/array/arr
    local.set $1150
    global.get $~lib/memory/__stack_pointer
    local.get $1150
    i32.store $0
    local.get $1150
    call $~lib/array/Array<i32>#pop
    drop
    local.get $684
    i32.const 1
    i32.add
    local.set $684
    br $for-loop|72
   end
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 0
  call $~lib/array/Array<i32>#push
  drop
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 1
  call $~lib/array/Array<i32>#push
  drop
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 2
  call $~lib/array/Array<i32>#push
  drop
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 3
  call $~lib/array/Array<i32>#push
  drop
  global.get $~lib/memory/__stack_pointer
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 6064
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0 offset=184
  local.get $1150
  call $~lib/array/Array<i32>#map<~lib/string/String>
  local.tee $686
  i32.store $0 offset=660
  global.get $~lib/memory/__stack_pointer
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 6096
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0 offset=184
  local.get $1150
  call $~lib/array/Array<i32>#map<f32>
  local.tee $687
  i32.store $0 offset=664
  local.get $687
  call $~lib/array/Array<f32>#get:length
  i32.const 4
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $687
  i32.const 0
  call $~lib/array/Array<f32>#__get
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 0
  call $~lib/array/Array<i32>#__get
  f32.convert_i32_s
  f32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  global.set $std/array/i
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 6128
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0 offset=184
  local.get $1150
  call $~lib/array/Array<i32>#map<i32>
  drop
  global.get $std/array/i
  i32.const 6
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array<i32>#get:length
  i32.const 8
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  global.set $std/array/i
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 6160
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0 offset=184
  local.get $1150
  call $~lib/array/Array<i32>#map<i32>
  drop
  global.get $std/array/i
  i32.const 406
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array<i32>#pop
  drop
  i32.const 0
  global.set $std/array/i
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 6192
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0 offset=184
  local.get $1150
  call $~lib/array/Array<i32>#map<i32>
  drop
  global.get $std/array/i
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array<i32>#get:length
  i32.const 2
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 2
  call $~lib/array/Array<i32>#push
  drop
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 3
  call $~lib/array/Array<i32>#push
  drop
  global.get $~lib/memory/__stack_pointer
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 6224
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0 offset=184
  local.get $1150
  call $~lib/array/Array<i32>#filter
  local.tee $688
  i32.store $0 offset=668
  local.get $688
  call $~lib/array/Array<i32>#get:length
  i32.const 2
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  global.set $std/array/i
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 6256
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0 offset=184
  local.get $1150
  call $~lib/array/Array<i32>#filter
  drop
  global.get $std/array/i
  i32.const 6
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array<i32>#get:length
  i32.const 8
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  global.set $std/array/i
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 6288
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0 offset=184
  local.get $1150
  call $~lib/array/Array<i32>#filter
  drop
  global.get $std/array/i
  i32.const 406
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array<i32>#pop
  drop
  i32.const 0
  global.set $std/array/i
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 6320
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0 offset=184
  local.get $1150
  call $~lib/array/Array<i32>#filter
  drop
  global.get $std/array/i
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array<i32>#get:length
  i32.const 2
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 2
  call $~lib/array/Array<i32>#push
  drop
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 3
  call $~lib/array/Array<i32>#push
  drop
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 6352
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0 offset=184
  local.get $1150
  i32.const 0
  call $~lib/array/Array<i32>#reduce<i32>
  global.set $std/array/i
  global.get $std/array/i
  i32.const 6
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 6384
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0 offset=184
  local.get $1150
  i32.const 4
  call $~lib/array/Array<i32>#reduce<i32>
  global.set $std/array/i
  global.get $std/array/i
  i32.const 10
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 6416
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0 offset=184
  local.get $1150
  i32.const 0
  call $~lib/array/Array<i32>#reduce<bool>
  local.set $689
  local.get $689
  i32.const 0
  i32.ne
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 6448
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0 offset=184
  local.get $1150
  i32.const 0
  call $~lib/array/Array<i32>#reduce<bool>
  local.set $689
  local.get $689
  i32.const 0
  i32.ne
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 6480
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0 offset=184
  local.get $1150
  i32.const 0
  call $~lib/array/Array<i32>#reduce<i32>
  global.set $std/array/i
  global.get $std/array/i
  i32.const 6
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array<i32>#get:length
  i32.const 8
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 6512
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0 offset=184
  local.get $1150
  i32.const 0
  call $~lib/array/Array<i32>#reduce<i32>
  global.set $std/array/i
  global.get $std/array/i
  i32.const 10
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 6544
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0 offset=184
  local.get $1150
  i32.const 0
  call $~lib/array/Array<i32>#reduce<i32>
  global.set $std/array/i
  global.get $std/array/i
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array<i32>#get:length
  i32.const 2
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 2
  call $~lib/array/Array<i32>#push
  drop
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 3
  call $~lib/array/Array<i32>#push
  drop
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 6576
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0 offset=184
  local.get $1150
  i32.const 0
  call $~lib/array/Array<i32>#reduceRight<i32>
  global.set $std/array/i
  global.get $std/array/i
  i32.const 6
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 6608
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0 offset=184
  local.get $1150
  i32.const 4
  call $~lib/array/Array<i32>#reduceRight<i32>
  global.set $std/array/i
  global.get $std/array/i
  i32.const 10
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 6640
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0 offset=184
  local.get $1150
  i32.const 0
  call $~lib/array/Array<i32>#reduceRight<bool>
  local.set $690
  local.get $690
  i32.const 0
  i32.ne
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 6672
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0 offset=184
  local.get $1150
  i32.const 0
  call $~lib/array/Array<i32>#reduceRight<bool>
  local.set $690
  local.get $690
  i32.const 0
  i32.ne
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 6704
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0 offset=184
  local.get $1150
  i32.const 0
  call $~lib/array/Array<i32>#reduceRight<i32>
  global.set $std/array/i
  global.get $std/array/i
  i32.const 6
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array<i32>#get:length
  i32.const 8
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 6736
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0 offset=184
  local.get $1150
  i32.const 0
  call $~lib/array/Array<i32>#reduceRight<i32>
  global.set $std/array/i
  global.get $std/array/i
  i32.const 10
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 6768
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0 offset=184
  local.get $1150
  i32.const 0
  call $~lib/array/Array<i32>#reduceRight<i32>
  global.set $std/array/i
  global.get $std/array/i
  i32.const 6
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array<i32>#get:length
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 0
  call $~lib/array/Array<i32>#push
  drop
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 1
  call $~lib/array/Array<i32>#push
  drop
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 2
  call $~lib/array/Array<i32>#push
  drop
  global.get $std/array/arr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 3
  call $~lib/array/Array<i32>#push
  drop
  call $~lib/bindings/dom/Math.random
  i64.reinterpret_f64
  call $~lib/math/NativeMath.seedRandom
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 2
  i32.const 23
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $691
  i32.store $0 offset=672
  global.get $~lib/memory/__stack_pointer
  local.get $691
  i32.load $0 offset=4
  local.tee $692
  i32.store $0 offset=676
  local.get $691
  i32.const 0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $std/array/Dim#constructor
  local.tee $693
  i32.store $0 offset=680
  local.get $693
  i32.const 100
  call $std/array/Dim#set:height
  local.get $693
  i32.const 80
  call $std/array/Dim#set:width
  local.get $693
  call $~lib/array/Array<std/array/Dim>#__uset
  local.get $691
  i32.const 1
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $std/array/Dim#constructor
  local.tee $694
  i32.store $0 offset=684
  local.get $694
  i32.const 90
  call $std/array/Dim#set:height
  local.get $694
  i32.const 90
  call $std/array/Dim#set:width
  local.get $694
  call $~lib/array/Array<std/array/Dim>#__uset
  local.get $691
  i32.const 2
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $std/array/Dim#constructor
  local.tee $695
  i32.store $0 offset=688
  local.get $695
  i32.const 70
  call $std/array/Dim#set:height
  local.get $695
  i32.const 95
  call $std/array/Dim#set:width
  local.get $695
  call $~lib/array/Array<std/array/Dim>#__uset
  local.get $691
  i32.const 3
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $std/array/Dim#constructor
  local.tee $696
  i32.store $0 offset=692
  local.get $696
  i32.const 100
  call $std/array/Dim#set:height
  local.get $696
  i32.const 100
  call $std/array/Dim#set:width
  local.get $696
  call $~lib/array/Array<std/array/Dim>#__uset
  local.get $691
  i32.const 4
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $std/array/Dim#constructor
  local.tee $697
  i32.store $0 offset=696
  local.get $697
  i32.const 80
  call $std/array/Dim#set:height
  local.get $697
  i32.const 110
  call $std/array/Dim#set:width
  local.get $697
  call $~lib/array/Array<std/array/Dim>#__uset
  local.get $691
  i32.const 5
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $std/array/Dim#constructor
  local.tee $698
  i32.store $0 offset=700
  local.get $698
  i32.const 110
  call $std/array/Dim#set:height
  local.get $698
  i32.const 115
  call $std/array/Dim#set:width
  local.get $698
  call $~lib/array/Array<std/array/Dim>#__uset
  local.get $691
  i32.const 6
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $std/array/Dim#constructor
  local.tee $699
  i32.store $0 offset=704
  local.get $699
  i32.const 100
  call $std/array/Dim#set:height
  local.get $699
  i32.const 120
  call $std/array/Dim#set:width
  local.get $699
  call $~lib/array/Array<std/array/Dim>#__uset
  local.get $691
  i32.const 7
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $std/array/Dim#constructor
  local.tee $700
  i32.store $0 offset=708
  local.get $700
  i32.const 70
  call $std/array/Dim#set:height
  local.get $700
  i32.const 125
  call $std/array/Dim#set:width
  local.get $700
  call $~lib/array/Array<std/array/Dim>#__uset
  local.get $691
  i32.const 8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $std/array/Dim#constructor
  local.tee $701
  i32.store $0 offset=712
  local.get $701
  i32.const 70
  call $std/array/Dim#set:height
  local.get $701
  i32.const 130
  call $std/array/Dim#set:width
  local.get $701
  call $~lib/array/Array<std/array/Dim>#__uset
  local.get $691
  i32.const 9
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $std/array/Dim#constructor
  local.tee $702
  i32.store $0 offset=716
  local.get $702
  i32.const 100
  call $std/array/Dim#set:height
  local.get $702
  i32.const 135
  call $std/array/Dim#set:width
  local.get $702
  call $~lib/array/Array<std/array/Dim>#__uset
  local.get $691
  i32.const 10
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $std/array/Dim#constructor
  local.tee $703
  i32.store $0 offset=720
  local.get $703
  i32.const 75
  call $std/array/Dim#set:height
  local.get $703
  i32.const 140
  call $std/array/Dim#set:width
  local.get $703
  call $~lib/array/Array<std/array/Dim>#__uset
  local.get $691
  i32.const 11
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $std/array/Dim#constructor
  local.tee $704
  i32.store $0 offset=724
  local.get $704
  i32.const 70
  call $std/array/Dim#set:height
  local.get $704
  i32.const 140
  call $std/array/Dim#set:width
  local.get $704
  call $~lib/array/Array<std/array/Dim>#__uset
  local.get $691
  global.set $std/array/inputStabArr
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 2
  i32.const 23
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $705
  i32.store $0 offset=728
  global.get $~lib/memory/__stack_pointer
  local.get $705
  i32.load $0 offset=4
  local.tee $706
  i32.store $0 offset=732
  local.get $705
  i32.const 0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $std/array/Dim#constructor
  local.tee $707
  i32.store $0 offset=736
  local.get $707
  i32.const 70
  call $std/array/Dim#set:height
  local.get $707
  i32.const 95
  call $std/array/Dim#set:width
  local.get $707
  call $~lib/array/Array<std/array/Dim>#__uset
  local.get $705
  i32.const 1
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $std/array/Dim#constructor
  local.tee $708
  i32.store $0 offset=740
  local.get $708
  i32.const 70
  call $std/array/Dim#set:height
  local.get $708
  i32.const 125
  call $std/array/Dim#set:width
  local.get $708
  call $~lib/array/Array<std/array/Dim>#__uset
  local.get $705
  i32.const 2
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $std/array/Dim#constructor
  local.tee $709
  i32.store $0 offset=744
  local.get $709
  i32.const 70
  call $std/array/Dim#set:height
  local.get $709
  i32.const 130
  call $std/array/Dim#set:width
  local.get $709
  call $~lib/array/Array<std/array/Dim>#__uset
  local.get $705
  i32.const 3
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $std/array/Dim#constructor
  local.tee $710
  i32.store $0 offset=748
  local.get $710
  i32.const 70
  call $std/array/Dim#set:height
  local.get $710
  i32.const 140
  call $std/array/Dim#set:width
  local.get $710
  call $~lib/array/Array<std/array/Dim>#__uset
  local.get $705
  i32.const 4
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $std/array/Dim#constructor
  local.tee $711
  i32.store $0 offset=752
  local.get $711
  i32.const 75
  call $std/array/Dim#set:height
  local.get $711
  i32.const 140
  call $std/array/Dim#set:width
  local.get $711
  call $~lib/array/Array<std/array/Dim>#__uset
  local.get $705
  i32.const 5
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $std/array/Dim#constructor
  local.tee $712
  i32.store $0 offset=756
  local.get $712
  i32.const 80
  call $std/array/Dim#set:height
  local.get $712
  i32.const 110
  call $std/array/Dim#set:width
  local.get $712
  call $~lib/array/Array<std/array/Dim>#__uset
  local.get $705
  i32.const 6
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $std/array/Dim#constructor
  local.tee $713
  i32.store $0 offset=760
  local.get $713
  i32.const 90
  call $std/array/Dim#set:height
  local.get $713
  i32.const 90
  call $std/array/Dim#set:width
  local.get $713
  call $~lib/array/Array<std/array/Dim>#__uset
  local.get $705
  i32.const 7
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $std/array/Dim#constructor
  local.tee $714
  i32.store $0 offset=764
  local.get $714
  i32.const 100
  call $std/array/Dim#set:height
  local.get $714
  i32.const 80
  call $std/array/Dim#set:width
  local.get $714
  call $~lib/array/Array<std/array/Dim>#__uset
  local.get $705
  i32.const 8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $std/array/Dim#constructor
  local.tee $715
  i32.store $0 offset=768
  local.get $715
  i32.const 100
  call $std/array/Dim#set:height
  local.get $715
  i32.const 100
  call $std/array/Dim#set:width
  local.get $715
  call $~lib/array/Array<std/array/Dim>#__uset
  local.get $705
  i32.const 9
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $std/array/Dim#constructor
  local.tee $716
  i32.store $0 offset=772
  local.get $716
  i32.const 100
  call $std/array/Dim#set:height
  local.get $716
  i32.const 120
  call $std/array/Dim#set:width
  local.get $716
  call $~lib/array/Array<std/array/Dim>#__uset
  local.get $705
  i32.const 10
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $std/array/Dim#constructor
  local.tee $717
  i32.store $0 offset=776
  local.get $717
  i32.const 100
  call $std/array/Dim#set:height
  local.get $717
  i32.const 135
  call $std/array/Dim#set:width
  local.get $717
  call $~lib/array/Array<std/array/Dim>#__uset
  local.get $705
  i32.const 11
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $std/array/Dim#constructor
  local.tee $718
  i32.store $0 offset=780
  local.get $718
  i32.const 110
  call $std/array/Dim#set:height
  local.get $718
  i32.const 115
  call $std/array/Dim#set:width
  local.get $718
  call $~lib/array/Array<std/array/Dim>#__uset
  local.get $705
  global.set $std/array/outputStabArr
  global.get $~lib/memory/__stack_pointer
  i32.const 3
  i32.const 2
  i32.const 8
  i32.const 6912
  call $~lib/rt/__newArray
  local.tee $721
  i32.store $0 offset=784
  local.get $721
  i32.const 0
  global.set $~argumentsLength
  i32.const 0
  call $~lib/array/Array<f32>#sort@varargs
  drop
  block $std/array/isArraysEqual<f32>|inlined.7 (result i32)
   local.get $721
   local.set $724
   global.get $~lib/memory/__stack_pointer
   i32.const 3
   i32.const 2
   i32.const 8
   i32.const 6976
   call $~lib/rt/__newArray
   local.tee $725
   i32.store $0 offset=788
   i32.const 0
   local.set $726
   local.get $726
   i32.eqz
   if
    local.get $724
    call $~lib/array/Array<f32>#get:length
    local.set $726
    local.get $726
    local.get $725
    call $~lib/array/Array<f32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<f32>|inlined.7
    end
    local.get $724
    local.get $725
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<f32>|inlined.7
    end
   end
   i32.const 0
   local.set $727
   loop $for-loop|73
    local.get $727
    local.get $726
    i32.lt_s
    local.set $728
    local.get $728
    if
     block $for-continue|73
      i32.const 1
      drop
      local.get $724
      local.get $727
      call $~lib/array/Array<f32>#__get
      local.tee $729
      local.get $729
      f32.ne
      if (result i32)
       local.get $725
       local.get $727
       call $~lib/array/Array<f32>#__get
       local.tee $730
       local.get $730
       f32.ne
      else
       i32.const 0
      end
      if
       br $for-continue|73
      end
      local.get $724
      local.get $727
      call $~lib/array/Array<f32>#__get
      f64.promote_f32
      local.set $731
      local.get $731
      i64.reinterpret_f64
      i64.const 63
      i64.shr_u
      i64.const 0
      i64.ne
      i32.const 0
      i32.ne
      local.get $725
      local.get $727
      call $~lib/array/Array<f32>#__get
      f64.promote_f32
      local.set $732
      local.get $732
      i64.reinterpret_f64
      i64.const 63
      i64.shr_u
      i64.const 0
      i64.ne
      i32.const 0
      i32.ne
      i32.ne
      if
       i32.const 0
       br $std/array/isArraysEqual<f32>|inlined.7
      end
      local.get $724
      local.get $727
      call $~lib/array/Array<f32>#__get
      local.get $725
      local.get $727
      call $~lib/array/Array<f32>#__get
      f32.ne
      if
       i32.const 0
       br $std/array/isArraysEqual<f32>|inlined.7
      end
     end
     local.get $727
     i32.const 1
     i32.add
     local.set $727
     br $for-loop|73
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.const 2
  i32.const 8
  i32.const 7008
  call $~lib/rt/__newArray
  local.tee $735
  i32.store $0 offset=792
  local.get $735
  i32.const 0
  global.set $~argumentsLength
  i32.const 0
  call $~lib/array/Array<f32>#sort@varargs
  drop
  block $std/array/isArraysEqual<f32>|inlined.8 (result i32)
   local.get $735
   local.set $738
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 2
   i32.const 8
   i32.const 7072
   call $~lib/rt/__newArray
   local.tee $739
   i32.store $0 offset=796
   i32.const 0
   local.set $740
   local.get $740
   i32.eqz
   if
    local.get $738
    call $~lib/array/Array<f32>#get:length
    local.set $740
    local.get $740
    local.get $739
    call $~lib/array/Array<f32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<f32>|inlined.8
    end
    local.get $738
    local.get $739
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<f32>|inlined.8
    end
   end
   i32.const 0
   local.set $741
   loop $for-loop|74
    local.get $741
    local.get $740
    i32.lt_s
    local.set $742
    local.get $742
    if
     block $for-continue|74
      i32.const 1
      drop
      local.get $738
      local.get $741
      call $~lib/array/Array<f32>#__get
      local.tee $743
      local.get $743
      f32.ne
      if (result i32)
       local.get $739
       local.get $741
       call $~lib/array/Array<f32>#__get
       local.tee $744
       local.get $744
       f32.ne
      else
       i32.const 0
      end
      if
       br $for-continue|74
      end
      local.get $738
      local.get $741
      call $~lib/array/Array<f32>#__get
      f64.promote_f32
      local.set $745
      local.get $745
      i64.reinterpret_f64
      i64.const 63
      i64.shr_u
      i64.const 0
      i64.ne
      i32.const 0
      i32.ne
      local.get $739
      local.get $741
      call $~lib/array/Array<f32>#__get
      f64.promote_f32
      local.set $746
      local.get $746
      i64.reinterpret_f64
      i64.const 63
      i64.shr_u
      i64.const 0
      i64.ne
      i32.const 0
      i32.ne
      i32.ne
      if
       i32.const 0
       br $std/array/isArraysEqual<f32>|inlined.8
      end
      local.get $738
      local.get $741
      call $~lib/array/Array<f32>#__get
      local.get $739
      local.get $741
      call $~lib/array/Array<f32>#__get
      f32.ne
      if
       i32.const 0
       br $std/array/isArraysEqual<f32>|inlined.8
      end
     end
     local.get $741
     i32.const 1
     i32.add
     local.set $741
     br $for-loop|74
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 7
  i32.const 3
  i32.const 12
  i32.const 7136
  call $~lib/rt/__newArray
  local.tee $749
  i32.store $0 offset=800
  local.get $749
  i32.const 0
  global.set $~argumentsLength
  i32.const 0
  call $~lib/array/Array<f64>#sort@varargs
  drop
  block $std/array/isArraysEqual<f64>|inlined.0 (result i32)
   local.get $749
   local.set $752
   global.get $~lib/memory/__stack_pointer
   i32.const 7
   i32.const 3
   i32.const 12
   i32.const 7248
   call $~lib/rt/__newArray
   local.tee $753
   i32.store $0 offset=804
   i32.const 0
   local.set $754
   local.get $754
   i32.eqz
   if
    local.get $752
    call $~lib/array/Array<f64>#get:length
    local.set $754
    local.get $754
    local.get $753
    call $~lib/array/Array<f64>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<f64>|inlined.0
    end
    local.get $752
    local.get $753
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<f64>|inlined.0
    end
   end
   i32.const 0
   local.set $755
   loop $for-loop|75
    local.get $755
    local.get $754
    i32.lt_s
    local.set $756
    local.get $756
    if
     block $for-continue|75
      i32.const 1
      drop
      local.get $752
      local.get $755
      call $~lib/array/Array<f64>#__get
      local.tee $757
      local.get $757
      f64.ne
      if (result i32)
       local.get $753
       local.get $755
       call $~lib/array/Array<f64>#__get
       local.tee $758
       local.get $758
       f64.ne
      else
       i32.const 0
      end
      if
       br $for-continue|75
      end
      local.get $752
      local.get $755
      call $~lib/array/Array<f64>#__get
      local.set $759
      local.get $759
      i64.reinterpret_f64
      i64.const 63
      i64.shr_u
      i64.const 0
      i64.ne
      i32.const 0
      i32.ne
      local.get $753
      local.get $755
      call $~lib/array/Array<f64>#__get
      local.set $760
      local.get $760
      i64.reinterpret_f64
      i64.const 63
      i64.shr_u
      i64.const 0
      i64.ne
      i32.const 0
      i32.ne
      i32.ne
      if
       i32.const 0
       br $std/array/isArraysEqual<f64>|inlined.0
      end
      local.get $752
      local.get $755
      call $~lib/array/Array<f64>#__get
      local.get $753
      local.get $755
      call $~lib/array/Array<f64>#__get
      f64.ne
      if
       i32.const 0
       br $std/array/isArraysEqual<f64>|inlined.0
      end
     end
     local.get $755
     i32.const 1
     i32.add
     local.set $755
     br $for-loop|75
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 7328
  call $~lib/rt/__newArray
  local.tee $763
  i32.store $0 offset=808
  local.get $763
  i32.const 0
  global.set $~argumentsLength
  i32.const 0
  call $~lib/array/Array<i32>#sort@varargs
  drop
  block $std/array/isArraysEqual<i32>|inlined.47 (result i32)
   local.get $763
   local.set $766
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 7408
   call $~lib/rt/__newArray
   local.tee $767
   i32.store $0 offset=812
   i32.const 0
   local.set $768
   local.get $768
   i32.eqz
   if
    local.get $766
    call $~lib/array/Array<i32>#get:length
    local.set $768
    local.get $768
    local.get $767
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.47
    end
    local.get $766
    local.get $767
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.47
    end
   end
   i32.const 0
   local.set $769
   loop $for-loop|76
    local.get $769
    local.get $768
    i32.lt_s
    local.set $770
    local.get $770
    if
     i32.const 0
     drop
     local.get $766
     local.get $769
     call $~lib/array/Array<i32>#__get
     local.get $767
     local.get $769
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.47
     end
     local.get $769
     i32.const 1
     i32.add
     local.set $769
     br $for-loop|76
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 5
  i32.const 2
  i32.const 7
  i32.const 7456
  call $~lib/rt/__newArray
  local.tee $773
  i32.store $0 offset=816
  local.get $773
  i32.const 0
  global.set $~argumentsLength
  i32.const 0
  call $~lib/array/Array<u32>#sort@varargs
  drop
  block $std/array/isArraysEqual<u32>|inlined.6 (result i32)
   local.get $773
   local.set $776
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 7
   i32.const 7536
   call $~lib/rt/__newArray
   local.tee $777
   i32.store $0 offset=820
   i32.const 0
   local.set $778
   local.get $778
   i32.eqz
   if
    local.get $776
    call $~lib/array/Array<u32>#get:length
    local.set $778
    local.get $778
    local.get $777
    call $~lib/array/Array<u32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<u32>|inlined.6
    end
    local.get $776
    local.get $777
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<u32>|inlined.6
    end
   end
   i32.const 0
   local.set $779
   loop $for-loop|77
    local.get $779
    local.get $778
    i32.lt_s
    local.set $780
    local.get $780
    if
     i32.const 0
     drop
     local.get $776
     local.get $779
     call $~lib/array/Array<u32>#__get
     local.get $777
     local.get $779
     call $~lib/array/Array<u32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<u32>|inlined.6
     end
     local.get $779
     i32.const 1
     i32.add
     local.set $779
     br $for-loop|77
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 2
  i32.const 3
  i32.const 7584
  call $~lib/rt/__newArray
  local.tee $783
  i32.store $0 offset=824
  global.get $~lib/memory/__stack_pointer
  i32.const 1
  i32.const 2
  i32.const 3
  i32.const 7616
  call $~lib/rt/__newArray
  local.tee $786
  i32.store $0 offset=828
  global.get $~lib/memory/__stack_pointer
  i32.const 2
  i32.const 2
  i32.const 3
  i32.const 7648
  call $~lib/rt/__newArray
  local.tee $789
  i32.store $0 offset=832
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.const 2
  i32.const 3
  i32.const 7680
  call $~lib/rt/__newArray
  local.tee $792
  i32.store $0 offset=836
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.const 2
  i32.const 3
  i32.const 7728
  call $~lib/rt/__newArray
  local.tee $795
  i32.store $0 offset=840
  global.get $~lib/memory/__stack_pointer
  i32.const 64
  local.set $796
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $796
  call $~lib/array/Array<i32>#constructor
  local.tee $797
  i32.store $0 offset=844
  i32.const 0
  local.set $798
  loop $for-loop|78
   local.get $798
   local.get $796
   i32.lt_s
   local.set $799
   local.get $799
   if
    local.get $797
    local.get $798
    local.get $796
    i32.const 1
    i32.sub
    local.get $798
    i32.sub
    call $~lib/array/Array<i32>#__set
    local.get $798
    i32.const 1
    i32.add
    local.set $798
    br $for-loop|78
   end
  end
  local.get $797
  local.tee $800
  i32.store $0 offset=848
  global.get $~lib/memory/__stack_pointer
  i32.const 128
  local.set $801
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $801
  call $~lib/array/Array<i32>#constructor
  local.tee $802
  i32.store $0 offset=852
  i32.const 0
  local.set $803
  loop $for-loop|79
   local.get $803
   local.get $801
   i32.lt_s
   local.set $804
   local.get $804
   if
    local.get $802
    local.get $803
    local.get $801
    i32.const 1
    i32.sub
    local.get $803
    i32.sub
    call $~lib/array/Array<i32>#__set
    local.get $803
    i32.const 1
    i32.add
    local.set $803
    br $for-loop|79
   end
  end
  local.get $802
  local.tee $805
  i32.store $0 offset=856
  global.get $~lib/memory/__stack_pointer
  i32.const 1024
  local.set $806
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $806
  call $~lib/array/Array<i32>#constructor
  local.tee $807
  i32.store $0 offset=860
  i32.const 0
  local.set $808
  loop $for-loop|80
   local.get $808
   local.get $806
   i32.lt_s
   local.set $809
   local.get $809
   if
    local.get $807
    local.get $808
    local.get $806
    i32.const 1
    i32.sub
    local.get $808
    i32.sub
    call $~lib/array/Array<i32>#__set
    local.get $808
    i32.const 1
    i32.add
    local.set $808
    br $for-loop|80
   end
  end
  local.get $807
  local.tee $810
  i32.store $0 offset=864
  global.get $~lib/memory/__stack_pointer
  i32.const 10000
  local.set $811
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $811
  call $~lib/array/Array<i32>#constructor
  local.tee $812
  i32.store $0 offset=868
  i32.const 0
  local.set $813
  loop $for-loop|81
   local.get $813
   local.get $811
   i32.lt_s
   local.set $814
   local.get $814
   if
    local.get $812
    local.get $813
    local.get $811
    i32.const 1
    i32.sub
    local.get $813
    i32.sub
    call $~lib/array/Array<i32>#__set
    local.get $813
    i32.const 1
    i32.add
    local.set $813
    br $for-loop|81
   end
  end
  local.get $812
  local.tee $815
  i32.store $0 offset=872
  global.get $~lib/memory/__stack_pointer
  i32.const 512
  local.set $816
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $816
  call $~lib/array/Array<i32>#constructor
  local.tee $817
  i32.store $0 offset=876
  i32.const 0
  local.set $818
  loop $for-loop|82
   local.get $818
   local.get $816
   i32.lt_s
   local.set $819
   local.get $819
   if
    local.get $817
    local.get $818
    call $~lib/math/NativeMath.random
    local.get $816
    f64.convert_i32_s
    f64.mul
    i32.trunc_sat_f64_s
    call $~lib/array/Array<i32>#__set
    local.get $818
    i32.const 1
    i32.add
    local.set $818
    br $for-loop|82
   end
  end
  local.get $817
  local.tee $820
  i32.store $0 offset=880
  local.get $783
  local.set $821
  local.get $821
  local.set $822
  global.get $~lib/memory/__stack_pointer
  block $~lib/util/sort/COMPARATOR<i32>|inlined.1 (result i32)
   i32.const 1
   drop
   i32.const 4
   i32.const 4
   i32.le_u
   drop
   i32.const 7776
   br $~lib/util/sort/COMPARATOR<i32>|inlined.1
  end
  local.tee $823
  i32.store $0 offset=884
  block $std/array/isSorted<i32>|inlined.0 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $822
   local.get $823
   call $~lib/array/Array<i32>#sort
   local.tee $824
   i32.store $0 offset=888
   local.get $823
   local.set $825
   i32.const 1
   local.set $826
   local.get $824
   call $~lib/array/Array<i32>#get:length
   local.set $827
   loop $for-loop|83
    local.get $826
    local.get $827
    i32.lt_s
    local.set $828
    local.get $828
    if
     local.get $824
     local.get $826
     i32.const 1
     i32.sub
     call $~lib/array/Array<i32>#__get
     local.get $824
     local.get $826
     call $~lib/array/Array<i32>#__get
     i32.const 2
     global.set $~argumentsLength
     local.get $825
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     if
      i32.const 0
      br $std/array/isSorted<i32>|inlined.0
     end
     local.get $826
     i32.const 1
     i32.add
     local.set $826
     br $for-loop|83
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $786
  local.set $829
  local.get $829
  local.set $830
  global.get $~lib/memory/__stack_pointer
  block $~lib/util/sort/COMPARATOR<i32>|inlined.2 (result i32)
   i32.const 1
   drop
   i32.const 4
   i32.const 4
   i32.le_u
   drop
   i32.const 7808
   br $~lib/util/sort/COMPARATOR<i32>|inlined.2
  end
  local.tee $831
  i32.store $0 offset=892
  block $std/array/isSorted<i32>|inlined.1 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $830
   local.get $831
   call $~lib/array/Array<i32>#sort
   local.tee $832
   i32.store $0 offset=896
   local.get $831
   local.set $833
   i32.const 1
   local.set $834
   local.get $832
   call $~lib/array/Array<i32>#get:length
   local.set $835
   loop $for-loop|84
    local.get $834
    local.get $835
    i32.lt_s
    local.set $836
    local.get $836
    if
     local.get $832
     local.get $834
     i32.const 1
     i32.sub
     call $~lib/array/Array<i32>#__get
     local.get $832
     local.get $834
     call $~lib/array/Array<i32>#__get
     i32.const 2
     global.set $~argumentsLength
     local.get $833
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     if
      i32.const 0
      br $std/array/isSorted<i32>|inlined.1
     end
     local.get $834
     i32.const 1
     i32.add
     local.set $834
     br $for-loop|84
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.48 (result i32)
   local.get $786
   local.set $839
   global.get $~lib/memory/__stack_pointer
   i32.const 1
   i32.const 2
   i32.const 3
   i32.const 7840
   call $~lib/rt/__newArray
   local.tee $840
   i32.store $0 offset=900
   i32.const 0
   local.set $841
   local.get $841
   i32.eqz
   if
    local.get $839
    call $~lib/array/Array<i32>#get:length
    local.set $841
    local.get $841
    local.get $840
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.48
    end
    local.get $839
    local.get $840
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.48
    end
   end
   i32.const 0
   local.set $842
   loop $for-loop|85
    local.get $842
    local.get $841
    i32.lt_s
    local.set $843
    local.get $843
    if
     i32.const 0
     drop
     local.get $839
     local.get $842
     call $~lib/array/Array<i32>#__get
     local.get $840
     local.get $842
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.48
     end
     local.get $842
     i32.const 1
     i32.add
     local.set $842
     br $for-loop|85
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $789
  local.set $844
  local.get $844
  local.set $845
  global.get $~lib/memory/__stack_pointer
  block $~lib/util/sort/COMPARATOR<i32>|inlined.3 (result i32)
   i32.const 1
   drop
   i32.const 4
   i32.const 4
   i32.le_u
   drop
   i32.const 7872
   br $~lib/util/sort/COMPARATOR<i32>|inlined.3
  end
  local.tee $846
  i32.store $0 offset=904
  block $std/array/isSorted<i32>|inlined.2 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $845
   local.get $846
   call $~lib/array/Array<i32>#sort
   local.tee $847
   i32.store $0 offset=908
   local.get $846
   local.set $848
   i32.const 1
   local.set $849
   local.get $847
   call $~lib/array/Array<i32>#get:length
   local.set $850
   loop $for-loop|86
    local.get $849
    local.get $850
    i32.lt_s
    local.set $851
    local.get $851
    if
     local.get $847
     local.get $849
     i32.const 1
     i32.sub
     call $~lib/array/Array<i32>#__get
     local.get $847
     local.get $849
     call $~lib/array/Array<i32>#__get
     i32.const 2
     global.set $~argumentsLength
     local.get $848
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     if
      i32.const 0
      br $std/array/isSorted<i32>|inlined.2
     end
     local.get $849
     i32.const 1
     i32.add
     local.set $849
     br $for-loop|86
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.49 (result i32)
   local.get $789
   local.set $854
   global.get $~lib/memory/__stack_pointer
   i32.const 2
   i32.const 2
   i32.const 3
   i32.const 7904
   call $~lib/rt/__newArray
   local.tee $855
   i32.store $0 offset=912
   i32.const 0
   local.set $856
   local.get $856
   i32.eqz
   if
    local.get $854
    call $~lib/array/Array<i32>#get:length
    local.set $856
    local.get $856
    local.get $855
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.49
    end
    local.get $854
    local.get $855
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.49
    end
   end
   i32.const 0
   local.set $857
   loop $for-loop|87
    local.get $857
    local.get $856
    i32.lt_s
    local.set $858
    local.get $858
    if
     i32.const 0
     drop
     local.get $854
     local.get $857
     call $~lib/array/Array<i32>#__get
     local.get $855
     local.get $857
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.49
     end
     local.get $857
     i32.const 1
     i32.add
     local.set $857
     br $for-loop|87
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $792
  local.set $859
  local.get $859
  local.set $860
  global.get $~lib/memory/__stack_pointer
  block $~lib/util/sort/COMPARATOR<i32>|inlined.4 (result i32)
   i32.const 1
   drop
   i32.const 4
   i32.const 4
   i32.le_u
   drop
   i32.const 7936
   br $~lib/util/sort/COMPARATOR<i32>|inlined.4
  end
  local.tee $861
  i32.store $0 offset=916
  block $std/array/isSorted<i32>|inlined.3 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $860
   local.get $861
   call $~lib/array/Array<i32>#sort
   local.tee $862
   i32.store $0 offset=920
   local.get $861
   local.set $863
   i32.const 1
   local.set $864
   local.get $862
   call $~lib/array/Array<i32>#get:length
   local.set $865
   loop $for-loop|88
    local.get $864
    local.get $865
    i32.lt_s
    local.set $866
    local.get $866
    if
     local.get $862
     local.get $864
     i32.const 1
     i32.sub
     call $~lib/array/Array<i32>#__get
     local.get $862
     local.get $864
     call $~lib/array/Array<i32>#__get
     i32.const 2
     global.set $~argumentsLength
     local.get $863
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     if
      i32.const 0
      br $std/array/isSorted<i32>|inlined.3
     end
     local.get $864
     i32.const 1
     i32.add
     local.set $864
     br $for-loop|88
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.50 (result i32)
   local.get $792
   local.set $867
   local.get $795
   local.set $868
   i32.const 0
   local.set $869
   local.get $869
   i32.eqz
   if
    local.get $867
    call $~lib/array/Array<i32>#get:length
    local.set $869
    local.get $869
    local.get $868
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.50
    end
    local.get $867
    local.get $868
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.50
    end
   end
   i32.const 0
   local.set $870
   loop $for-loop|89
    local.get $870
    local.get $869
    i32.lt_s
    local.set $871
    local.get $871
    if
     i32.const 0
     drop
     local.get $867
     local.get $870
     call $~lib/array/Array<i32>#__get
     local.get $868
     local.get $870
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.50
     end
     local.get $870
     i32.const 1
     i32.add
     local.set $870
     br $for-loop|89
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $800
  local.set $872
  local.get $872
  local.set $873
  global.get $~lib/memory/__stack_pointer
  block $~lib/util/sort/COMPARATOR<i32>|inlined.5 (result i32)
   i32.const 1
   drop
   i32.const 4
   i32.const 4
   i32.le_u
   drop
   i32.const 7968
   br $~lib/util/sort/COMPARATOR<i32>|inlined.5
  end
  local.tee $874
  i32.store $0 offset=924
  block $std/array/isSorted<i32>|inlined.4 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $873
   local.get $874
   call $~lib/array/Array<i32>#sort
   local.tee $875
   i32.store $0 offset=928
   local.get $874
   local.set $876
   i32.const 1
   local.set $877
   local.get $875
   call $~lib/array/Array<i32>#get:length
   local.set $878
   loop $for-loop|90
    local.get $877
    local.get $878
    i32.lt_s
    local.set $879
    local.get $879
    if
     local.get $875
     local.get $877
     i32.const 1
     i32.sub
     call $~lib/array/Array<i32>#__get
     local.get $875
     local.get $877
     call $~lib/array/Array<i32>#__get
     i32.const 2
     global.set $~argumentsLength
     local.get $876
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     if
      i32.const 0
      br $std/array/isSorted<i32>|inlined.4
     end
     local.get $877
     i32.const 1
     i32.add
     local.set $877
     br $for-loop|90
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.51 (result i32)
   local.get $800
   local.set $880
   local.get $795
   local.set $881
   i32.const 4
   local.set $882
   local.get $882
   i32.eqz
   if
    local.get $880
    call $~lib/array/Array<i32>#get:length
    local.set $882
    local.get $882
    local.get $881
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.51
    end
    local.get $880
    local.get $881
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.51
    end
   end
   i32.const 0
   local.set $883
   loop $for-loop|91
    local.get $883
    local.get $882
    i32.lt_s
    local.set $884
    local.get $884
    if
     i32.const 0
     drop
     local.get $880
     local.get $883
     call $~lib/array/Array<i32>#__get
     local.get $881
     local.get $883
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.51
     end
     local.get $883
     i32.const 1
     i32.add
     local.set $883
     br $for-loop|91
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $805
  local.set $885
  local.get $885
  local.set $886
  global.get $~lib/memory/__stack_pointer
  block $~lib/util/sort/COMPARATOR<i32>|inlined.6 (result i32)
   i32.const 1
   drop
   i32.const 4
   i32.const 4
   i32.le_u
   drop
   i32.const 8000
   br $~lib/util/sort/COMPARATOR<i32>|inlined.6
  end
  local.tee $887
  i32.store $0 offset=932
  block $std/array/isSorted<i32>|inlined.5 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $886
   local.get $887
   call $~lib/array/Array<i32>#sort
   local.tee $888
   i32.store $0 offset=936
   local.get $887
   local.set $889
   i32.const 1
   local.set $890
   local.get $888
   call $~lib/array/Array<i32>#get:length
   local.set $891
   loop $for-loop|92
    local.get $890
    local.get $891
    i32.lt_s
    local.set $892
    local.get $892
    if
     local.get $888
     local.get $890
     i32.const 1
     i32.sub
     call $~lib/array/Array<i32>#__get
     local.get $888
     local.get $890
     call $~lib/array/Array<i32>#__get
     i32.const 2
     global.set $~argumentsLength
     local.get $889
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     if
      i32.const 0
      br $std/array/isSorted<i32>|inlined.5
     end
     local.get $890
     i32.const 1
     i32.add
     local.set $890
     br $for-loop|92
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.52 (result i32)
   local.get $805
   local.set $893
   local.get $795
   local.set $894
   i32.const 4
   local.set $895
   local.get $895
   i32.eqz
   if
    local.get $893
    call $~lib/array/Array<i32>#get:length
    local.set $895
    local.get $895
    local.get $894
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.52
    end
    local.get $893
    local.get $894
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.52
    end
   end
   i32.const 0
   local.set $896
   loop $for-loop|93
    local.get $896
    local.get $895
    i32.lt_s
    local.set $897
    local.get $897
    if
     i32.const 0
     drop
     local.get $893
     local.get $896
     call $~lib/array/Array<i32>#__get
     local.get $894
     local.get $896
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.52
     end
     local.get $896
     i32.const 1
     i32.add
     local.set $896
     br $for-loop|93
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $810
  local.set $898
  local.get $898
  local.set $899
  global.get $~lib/memory/__stack_pointer
  block $~lib/util/sort/COMPARATOR<i32>|inlined.7 (result i32)
   i32.const 1
   drop
   i32.const 4
   i32.const 4
   i32.le_u
   drop
   i32.const 8032
   br $~lib/util/sort/COMPARATOR<i32>|inlined.7
  end
  local.tee $900
  i32.store $0 offset=940
  block $std/array/isSorted<i32>|inlined.6 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $899
   local.get $900
   call $~lib/array/Array<i32>#sort
   local.tee $901
   i32.store $0 offset=944
   local.get $900
   local.set $902
   i32.const 1
   local.set $903
   local.get $901
   call $~lib/array/Array<i32>#get:length
   local.set $904
   loop $for-loop|94
    local.get $903
    local.get $904
    i32.lt_s
    local.set $905
    local.get $905
    if
     local.get $901
     local.get $903
     i32.const 1
     i32.sub
     call $~lib/array/Array<i32>#__get
     local.get $901
     local.get $903
     call $~lib/array/Array<i32>#__get
     i32.const 2
     global.set $~argumentsLength
     local.get $902
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     if
      i32.const 0
      br $std/array/isSorted<i32>|inlined.6
     end
     local.get $903
     i32.const 1
     i32.add
     local.set $903
     br $for-loop|94
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.53 (result i32)
   local.get $810
   local.set $906
   local.get $795
   local.set $907
   i32.const 4
   local.set $908
   local.get $908
   i32.eqz
   if
    local.get $906
    call $~lib/array/Array<i32>#get:length
    local.set $908
    local.get $908
    local.get $907
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.53
    end
    local.get $906
    local.get $907
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.53
    end
   end
   i32.const 0
   local.set $909
   loop $for-loop|95
    local.get $909
    local.get $908
    i32.lt_s
    local.set $910
    local.get $910
    if
     i32.const 0
     drop
     local.get $906
     local.get $909
     call $~lib/array/Array<i32>#__get
     local.get $907
     local.get $909
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.53
     end
     local.get $909
     i32.const 1
     i32.add
     local.set $909
     br $for-loop|95
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $815
  local.set $911
  local.get $911
  local.set $912
  global.get $~lib/memory/__stack_pointer
  block $~lib/util/sort/COMPARATOR<i32>|inlined.8 (result i32)
   i32.const 1
   drop
   i32.const 4
   i32.const 4
   i32.le_u
   drop
   i32.const 8064
   br $~lib/util/sort/COMPARATOR<i32>|inlined.8
  end
  local.tee $913
  i32.store $0 offset=948
  block $std/array/isSorted<i32>|inlined.7 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $912
   local.get $913
   call $~lib/array/Array<i32>#sort
   local.tee $914
   i32.store $0 offset=952
   local.get $913
   local.set $915
   i32.const 1
   local.set $916
   local.get $914
   call $~lib/array/Array<i32>#get:length
   local.set $917
   loop $for-loop|96
    local.get $916
    local.get $917
    i32.lt_s
    local.set $918
    local.get $918
    if
     local.get $914
     local.get $916
     i32.const 1
     i32.sub
     call $~lib/array/Array<i32>#__get
     local.get $914
     local.get $916
     call $~lib/array/Array<i32>#__get
     i32.const 2
     global.set $~argumentsLength
     local.get $915
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     if
      i32.const 0
      br $std/array/isSorted<i32>|inlined.7
     end
     local.get $916
     i32.const 1
     i32.add
     local.set $916
     br $for-loop|96
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.54 (result i32)
   local.get $815
   local.set $919
   local.get $795
   local.set $920
   i32.const 4
   local.set $921
   local.get $921
   i32.eqz
   if
    local.get $919
    call $~lib/array/Array<i32>#get:length
    local.set $921
    local.get $921
    local.get $920
    call $~lib/array/Array<i32>#get:length
    i32.ne
    if
     i32.const 0
     br $std/array/isArraysEqual<i32>|inlined.54
    end
    local.get $919
    local.get $920
    i32.eq
    if
     i32.const 1
     br $std/array/isArraysEqual<i32>|inlined.54
    end
   end
   i32.const 0
   local.set $922
   loop $for-loop|97
    local.get $922
    local.get $921
    i32.lt_s
    local.set $923
    local.get $923
    if
     i32.const 0
     drop
     local.get $919
     local.get $922
     call $~lib/array/Array<i32>#__get
     local.get $920
     local.get $922
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/array/isArraysEqual<i32>|inlined.54
     end
     local.get $922
     i32.const 1
     i32.add
     local.set $922
     br $for-loop|97
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $820
  local.set $924
  local.get $924
  local.set $925
  global.get $~lib/memory/__stack_pointer
  block $~lib/util/sort/COMPARATOR<i32>|inlined.9 (result i32)
   i32.const 1
   drop
   i32.const 4
   i32.const 4
   i32.le_u
   drop
   i32.const 8096
   br $~lib/util/sort/COMPARATOR<i32>|inlined.9
  end
  local.tee $926
  i32.store $0 offset=956
  block $std/array/isSorted<i32>|inlined.8 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $925
   local.get $926
   call $~lib/array/Array<i32>#sort
   local.tee $927
   i32.store $0 offset=960
   local.get $926
   local.set $928
   i32.const 1
   local.set $929
   local.get $927
   call $~lib/array/Array<i32>#get:length
   local.set $930
   loop $for-loop|98
    local.get $929
    local.get $930
    i32.lt_s
    local.set $931
    local.get $931
    if
     local.get $927
     local.get $929
     i32.const 1
     i32.sub
     call $~lib/array/Array<i32>#__get
     local.get $927
     local.get $929
     call $~lib/array/Array<i32>#__get
     i32.const 2
     global.set $~argumentsLength
     local.get $928
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     if
      i32.const 0
      br $std/array/isSorted<i32>|inlined.8
     end
     local.get $929
     i32.const 1
     i32.add
     local.set $929
     br $for-loop|98
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  global.get $std/array/inputStabArr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0 offset=964
  local.get $1150
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/array/Array<std/array/Dim>#slice
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  i32.const 8128
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0 offset=184
  local.get $1150
  call $~lib/array/Array<std/array/Dim>#sort
  local.tee $932
  i32.store $0 offset=968
  i32.const 1
  local.set $933
  i32.const 0
  local.set $934
  global.get $std/array/inputStabArr
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array<std/array/Dim>#get:length
  local.set $935
  block $for-break99
   loop $for-loop|99
    local.get $934
    local.get $935
    i32.lt_s
    local.set $936
    local.get $936
    if
     global.get $~lib/memory/__stack_pointer
     local.get $932
     local.get $934
     call $~lib/array/Array<std/array/Dim>#__get
     local.tee $937
     i32.store $0 offset=972
     global.get $~lib/memory/__stack_pointer
     global.get $std/array/outputStabArr
     local.set $1150
     global.get $~lib/memory/__stack_pointer
     local.get $1150
     i32.store $0
     local.get $1150
     local.get $934
     call $~lib/array/Array<std/array/Dim>#__get
     local.tee $938
     i32.store $0 offset=976
     local.get $937
     i32.load $0
     local.get $938
     i32.load $0
     i32.ne
     if (result i32)
      i32.const 1
     else
      local.get $937
      i32.load $0 offset=4
      local.get $938
      i32.load $0 offset=4
      i32.ne
     end
     if
      i32.const 0
      local.set $933
      br $for-break99
     end
     local.get $934
     i32.const 1
     i32.add
     local.set $934
     br $for-loop|99
    end
   end
  end
  local.get $933
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 64
  local.set $939
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $939
  call $~lib/array/Array<i32>#constructor
  local.tee $940
  i32.store $0 offset=980
  i32.const 0
  local.set $941
  loop $for-loop|100
   local.get $941
   local.get $939
   i32.lt_s
   local.set $942
   local.get $942
   if
    local.get $940
    local.get $941
    call $~lib/math/NativeMath.random
    local.get $939
    f64.convert_i32_s
    f64.mul
    i32.trunc_sat_f64_s
    call $~lib/array/Array<i32>#__set
    local.get $941
    i32.const 1
    i32.add
    local.set $941
    br $for-loop|100
   end
  end
  local.get $940
  local.tee $943
  i32.store $0 offset=984
  global.get $~lib/memory/__stack_pointer
  i32.const 257
  local.set $944
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $944
  call $~lib/array/Array<i32>#constructor
  local.tee $945
  i32.store $0 offset=988
  i32.const 0
  local.set $946
  loop $for-loop|101
   local.get $946
   local.get $944
   i32.lt_s
   local.set $947
   local.get $947
   if
    local.get $945
    local.get $946
    call $~lib/math/NativeMath.random
    local.get $944
    f64.convert_i32_s
    f64.mul
    i32.trunc_sat_f64_s
    call $~lib/array/Array<i32>#__set
    local.get $946
    i32.const 1
    i32.add
    local.set $946
    br $for-loop|101
   end
  end
  local.get $945
  local.tee $948
  i32.store $0 offset=992
  local.get $943
  local.set $949
  global.get $~lib/memory/__stack_pointer
  i32.const 8160
  local.tee $950
  i32.store $0 offset=996
  block $std/array/isSorted<i32>|inlined.9 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $949
   local.get $950
   call $~lib/array/Array<i32>#sort
   local.tee $951
   i32.store $0 offset=1000
   local.get $950
   local.set $952
   i32.const 1
   local.set $953
   local.get $951
   call $~lib/array/Array<i32>#get:length
   local.set $954
   loop $for-loop|102
    local.get $953
    local.get $954
    i32.lt_s
    local.set $955
    local.get $955
    if
     local.get $951
     local.get $953
     i32.const 1
     i32.sub
     call $~lib/array/Array<i32>#__get
     local.get $951
     local.get $953
     call $~lib/array/Array<i32>#__get
     i32.const 2
     global.set $~argumentsLength
     local.get $952
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     if
      i32.const 0
      br $std/array/isSorted<i32>|inlined.9
     end
     local.get $953
     i32.const 1
     i32.add
     local.set $953
     br $for-loop|102
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $943
  local.set $956
  global.get $~lib/memory/__stack_pointer
  i32.const 8192
  local.tee $957
  i32.store $0 offset=1004
  block $std/array/isSorted<i32>|inlined.10 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $956
   local.get $957
   call $~lib/array/Array<i32>#sort
   local.tee $958
   i32.store $0 offset=1008
   local.get $957
   local.set $959
   i32.const 1
   local.set $960
   local.get $958
   call $~lib/array/Array<i32>#get:length
   local.set $961
   loop $for-loop|103
    local.get $960
    local.get $961
    i32.lt_s
    local.set $962
    local.get $962
    if
     local.get $958
     local.get $960
     i32.const 1
     i32.sub
     call $~lib/array/Array<i32>#__get
     local.get $958
     local.get $960
     call $~lib/array/Array<i32>#__get
     i32.const 2
     global.set $~argumentsLength
     local.get $959
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     if
      i32.const 0
      br $std/array/isSorted<i32>|inlined.10
     end
     local.get $960
     i32.const 1
     i32.add
     local.set $960
     br $for-loop|103
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $948
  local.set $963
  global.get $~lib/memory/__stack_pointer
  i32.const 8224
  local.tee $964
  i32.store $0 offset=1012
  block $std/array/isSorted<i32>|inlined.11 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $963
   local.get $964
   call $~lib/array/Array<i32>#sort
   local.tee $965
   i32.store $0 offset=1016
   local.get $964
   local.set $966
   i32.const 1
   local.set $967
   local.get $965
   call $~lib/array/Array<i32>#get:length
   local.set $968
   loop $for-loop|104
    local.get $967
    local.get $968
    i32.lt_s
    local.set $969
    local.get $969
    if
     local.get $965
     local.get $967
     i32.const 1
     i32.sub
     call $~lib/array/Array<i32>#__get
     local.get $965
     local.get $967
     call $~lib/array/Array<i32>#__get
     i32.const 2
     global.set $~argumentsLength
     local.get $966
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     if
      i32.const 0
      br $std/array/isSorted<i32>|inlined.11
     end
     local.get $967
     i32.const 1
     i32.add
     local.set $967
     br $for-loop|104
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $948
  local.set $970
  global.get $~lib/memory/__stack_pointer
  i32.const 8256
  local.tee $971
  i32.store $0 offset=1020
  block $std/array/isSorted<i32>|inlined.12 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $970
   local.get $971
   call $~lib/array/Array<i32>#sort
   local.tee $972
   i32.store $0 offset=1024
   local.get $971
   local.set $973
   i32.const 1
   local.set $974
   local.get $972
   call $~lib/array/Array<i32>#get:length
   local.set $975
   loop $for-loop|105
    local.get $974
    local.get $975
    i32.lt_s
    local.set $976
    local.get $976
    if
     local.get $972
     local.get $974
     i32.const 1
     i32.sub
     call $~lib/array/Array<i32>#__get
     local.get $972
     local.get $974
     call $~lib/array/Array<i32>#__get
     i32.const 2
     global.set $~argumentsLength
     local.get $973
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     if
      i32.const 0
      br $std/array/isSorted<i32>|inlined.12
     end
     local.get $974
     i32.const 1
     i32.add
     local.set $974
     br $for-loop|105
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 2
  local.set $977
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $977
  call $~lib/array/Array<~lib/array/Array<i32>>#constructor
  local.tee $978
  i32.store $0 offset=1028
  i32.const 0
  local.set $979
  loop $for-loop|106
   local.get $979
   local.get $977
   i32.lt_s
   local.set $980
   local.get $980
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.const 1
    call $~lib/array/Array<i32>#constructor
    local.tee $981
    i32.store $0 offset=1032
    local.get $981
    i32.const 0
    local.get $977
    i32.const 1
    i32.sub
    local.get $979
    i32.sub
    call $~lib/array/Array<i32>#__set
    local.get $978
    local.get $979
    local.get $981
    call $~lib/array/Array<~lib/array/Array<i32>>#__set
    local.get $979
    i32.const 1
    i32.add
    local.set $979
    br $for-loop|106
   end
  end
  local.get $978
  local.tee $982
  i32.store $0 offset=1036
  local.get $982
  local.set $983
  global.get $~lib/memory/__stack_pointer
  i32.const 8288
  local.tee $984
  i32.store $0 offset=1040
  block $std/array/isSorted<~lib/array/Array<i32>>|inlined.0 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $983
   local.get $984
   call $~lib/array/Array<~lib/array/Array<i32>>#sort
   local.tee $985
   i32.store $0 offset=1044
   local.get $984
   local.set $986
   i32.const 1
   local.set $987
   local.get $985
   call $~lib/array/Array<~lib/array/Array<i32>>#get:length
   local.set $988
   loop $for-loop|107
    local.get $987
    local.get $988
    i32.lt_s
    local.set $989
    local.get $989
    if
     local.get $985
     local.get $987
     i32.const 1
     i32.sub
     call $~lib/array/Array<~lib/array/Array<i32>>#__get
     local.set $1150
     global.get $~lib/memory/__stack_pointer
     local.get $1150
     i32.store $0
     local.get $1150
     local.get $985
     local.get $987
     call $~lib/array/Array<~lib/array/Array<i32>>#__get
     local.set $1150
     global.get $~lib/memory/__stack_pointer
     local.get $1150
     i32.store $0 offset=184
     local.get $1150
     i32.const 2
     global.set $~argumentsLength
     local.get $986
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     if
      i32.const 0
      br $std/array/isSorted<~lib/array/Array<i32>>|inlined.0
     end
     local.get $987
     i32.const 1
     i32.add
     local.set $987
     br $for-loop|107
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 512
  local.set $990
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $990
  call $~lib/array/Array<std/array/Proxy<i32>>#constructor
  local.tee $991
  i32.store $0 offset=1048
  i32.const 0
  local.set $992
  loop $for-loop|108
   local.get $992
   local.get $990
   i32.lt_s
   local.set $993
   local.get $993
   if
    local.get $991
    local.get $992
    i32.const 0
    local.set $994
    local.get $990
    i32.const 1
    i32.sub
    local.get $992
    i32.sub
    local.set $995
    local.get $994
    i32.eqz
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.const 31
     call $~lib/rt/itcms/__new
     local.tee $994
     i32.store $0 offset=1052
    end
    local.get $994
    local.get $995
    call $std/array/Proxy<i32>#set:x
    local.get $994
    local.set $1150
    global.get $~lib/memory/__stack_pointer
    local.get $1150
    i32.store $0 offset=964
    local.get $1150
    call $~lib/array/Array<std/array/Proxy<i32>>#__set
    local.get $992
    i32.const 1
    i32.add
    local.set $992
    br $for-loop|108
   end
  end
  local.get $991
  local.tee $996
  i32.store $0 offset=1056
  local.get $996
  local.set $997
  global.get $~lib/memory/__stack_pointer
  i32.const 8320
  local.tee $998
  i32.store $0 offset=1060
  block $std/array/isSorted<std/array/Proxy<i32>>|inlined.0 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $997
   local.get $998
   call $~lib/array/Array<std/array/Proxy<i32>>#sort
   local.tee $999
   i32.store $0 offset=1064
   local.get $998
   local.set $1000
   i32.const 1
   local.set $1001
   local.get $999
   call $~lib/array/Array<std/array/Proxy<i32>>#get:length
   local.set $1002
   loop $for-loop|109
    local.get $1001
    local.get $1002
    i32.lt_s
    local.set $1003
    local.get $1003
    if
     local.get $999
     local.get $1001
     i32.const 1
     i32.sub
     call $~lib/array/Array<std/array/Proxy<i32>>#__get
     local.set $1150
     global.get $~lib/memory/__stack_pointer
     local.get $1150
     i32.store $0
     local.get $1150
     local.get $999
     local.get $1001
     call $~lib/array/Array<std/array/Proxy<i32>>#__get
     local.set $1150
     global.get $~lib/memory/__stack_pointer
     local.get $1150
     i32.store $0 offset=184
     local.get $1150
     i32.const 2
     global.set $~argumentsLength
     local.get $1000
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     if
      i32.const 0
      br $std/array/isSorted<std/array/Proxy<i32>>|inlined.0
     end
     local.get $1001
     i32.const 1
     i32.add
     local.set $1001
     br $for-loop|109
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.const 2
  i32.const 29
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $1004
  i32.store $0 offset=1068
  global.get $~lib/memory/__stack_pointer
  local.get $1004
  i32.load $0 offset=4
  local.tee $1005
  i32.store $0 offset=1072
  local.get $1004
  i32.const 0
  i32.const 1
  i32.const 2
  i32.const 3
  i32.const 8352
  call $~lib/rt/__newArray
  call $~lib/array/Array<~lib/array/Array<i32>>#__uset
  local.get $1004
  i32.const 1
  i32.const 3
  i32.const 2
  i32.const 3
  i32.const 8384
  call $~lib/rt/__newArray
  call $~lib/array/Array<~lib/array/Array<i32>>#__uset
  local.get $1004
  i32.const 2
  i32.const 3
  i32.const 2
  i32.const 3
  i32.const 8416
  call $~lib/rt/__newArray
  call $~lib/array/Array<~lib/array/Array<i32>>#__uset
  local.get $1004
  i32.const 3
  i32.const 3
  i32.const 2
  i32.const 3
  i32.const 8448
  call $~lib/rt/__newArray
  call $~lib/array/Array<~lib/array/Array<i32>>#__uset
  local.get $1004
  local.tee $1014
  i32.store $0 offset=1076
  global.get $~lib/memory/__stack_pointer
  local.get $1014
  call $~lib/array/Array<~lib/array/Array<i32>>#flat
  local.tee $1015
  i32.store $0 offset=1080
  local.get $1015
  call $~lib/array/Array<i32>#get:length
  i32.const 10
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $1016
  loop $for-loop|110
   local.get $1016
   i32.const 10
   i32.lt_s
   local.set $1017
   local.get $1017
   if
    local.get $1015
    local.get $1016
    call $~lib/array/Array<i32>#__get
    local.get $1016
    i32.eq
    i32.eqz
    if
     unreachable
    end
    local.get $1016
    i32.const 1
    i32.add
    local.set $1016
    br $for-loop|110
   end
  end
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.const 2
  i32.const 35
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $1018
  i32.store $0 offset=1084
  global.get $~lib/memory/__stack_pointer
  local.get $1018
  i32.load $0 offset=4
  local.tee $1019
  i32.store $0 offset=1088
  local.get $1018
  i32.const 0
  i32.const 1
  i32.const 2
  i32.const 34
  i32.const 8512
  call $~lib/rt/__newArray
  call $~lib/array/Array<~lib/array/Array<~lib/string/String|null>>#__uset
  local.get $1018
  i32.const 1
  i32.const 3
  i32.const 2
  i32.const 34
  i32.const 8608
  call $~lib/rt/__newArray
  call $~lib/array/Array<~lib/array/Array<~lib/string/String|null>>#__uset
  local.get $1018
  i32.const 2
  i32.const 3
  i32.const 2
  i32.const 34
  i32.const 8736
  call $~lib/rt/__newArray
  call $~lib/array/Array<~lib/array/Array<~lib/string/String|null>>#__uset
  local.get $1018
  i32.const 3
  i32.const 1
  i32.const 2
  i32.const 34
  i32.const 8800
  call $~lib/rt/__newArray
  call $~lib/array/Array<~lib/array/Array<~lib/string/String|null>>#__uset
  local.get $1018
  local.tee $1028
  i32.store $0 offset=1092
  global.get $~lib/memory/__stack_pointer
  local.get $1028
  call $~lib/array/Array<~lib/array/Array<~lib/string/String|null>>#flat
  local.tee $1029
  i32.store $0 offset=1096
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.const 2
  i32.const 34
  i32.const 8832
  call $~lib/rt/__newArray
  local.tee $1032
  i32.store $0 offset=1100
  local.get $1029
  call $~lib/array/Array<~lib/string/String|null>#get:length
  i32.const 8
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $1033
  loop $for-loop|111
   local.get $1033
   local.get $1032
   call $~lib/array/Array<~lib/string/String|null>#get:length
   i32.lt_s
   local.set $1034
   local.get $1034
   if
    block $~lib/string/String.__eq|inlined.0 (result i32)
     global.get $~lib/memory/__stack_pointer
     local.get $1029
     local.get $1033
     call $~lib/array/Array<~lib/string/String|null>#__get
     local.tee $1035
     i32.store $0 offset=1104
     global.get $~lib/memory/__stack_pointer
     local.get $1032
     local.get $1033
     call $~lib/array/Array<~lib/string/String|null>#__get
     local.tee $1036
     i32.store $0 offset=1108
     local.get $1035
     local.set $1037
     local.get $1036
     local.set $1038
     local.get $1037
     local.get $1038
     i32.eq
     if
      i32.const 1
      br $~lib/string/String.__eq|inlined.0
     end
     local.get $1037
     i32.const 0
     i32.eq
     if (result i32)
      i32.const 1
     else
      local.get $1038
      i32.const 0
      i32.eq
     end
     if
      i32.const 0
      br $~lib/string/String.__eq|inlined.0
     end
     local.get $1035
     call $~lib/string/String#get:length
     local.set $1039
     local.get $1039
     local.get $1036
     call $~lib/string/String#get:length
     i32.ne
     if
      i32.const 0
      br $~lib/string/String.__eq|inlined.0
     end
     local.get $1039
     i32.const 128
     i32.ge_s
     if
      block $~lib/util/raweq/__raweq128|inlined.0 (result i32)
       local.get $1037
       local.set $1040
       local.get $1038
       local.set $1041
       local.get $1040
       local.set $1042
       local.get $1041
       local.set $1043
       local.get $1042
       i64.load $0
       local.get $1043
       i64.load $0
       i64.eq
       i32.eqz
       if
        i32.const 0
        br $~lib/util/raweq/__raweq128|inlined.0
       end
       local.get $1040
       i32.const 8
       i32.add
       local.set $1040
       local.get $1041
       i32.const 8
       i32.add
       local.set $1041
       local.get $1040
       local.set $1044
       local.get $1041
       local.set $1045
       local.get $1044
       i64.load $0
       local.get $1045
       i64.load $0
       i64.eq
       i32.eqz
       if
        i32.const 0
        br $~lib/util/raweq/__raweq128|inlined.0
       end
       local.get $1040
       i32.const 8
       i32.add
       local.set $1040
       local.get $1041
       i32.const 8
       i32.add
       local.set $1041
       local.get $1040
       local.set $1046
       local.get $1041
       local.set $1047
       local.get $1046
       i64.load $0
       local.get $1047
       i64.load $0
       i64.eq
       i32.eqz
       if
        i32.const 0
        br $~lib/util/raweq/__raweq128|inlined.0
       end
       local.get $1040
       i32.const 8
       i32.add
       local.set $1040
       local.get $1041
       i32.const 8
       i32.add
       local.set $1041
       local.get $1040
       local.set $1048
       local.get $1041
       local.set $1049
       local.get $1048
       i64.load $0
       local.get $1049
       i64.load $0
       i64.eq
       i32.eqz
       if
        i32.const 0
        br $~lib/util/raweq/__raweq128|inlined.0
       end
       local.get $1040
       i32.const 8
       i32.add
       local.set $1040
       local.get $1041
       i32.const 8
       i32.add
       local.set $1041
       local.get $1040
       local.set $1050
       local.get $1041
       local.set $1051
       local.get $1050
       i64.load $0
       local.get $1051
       i64.load $0
       i64.eq
       i32.eqz
       if
        i32.const 0
        br $~lib/util/raweq/__raweq128|inlined.0
       end
       local.get $1040
       i32.const 8
       i32.add
       local.set $1040
       local.get $1041
       i32.const 8
       i32.add
       local.set $1041
       local.get $1040
       local.set $1052
       local.get $1041
       local.set $1053
       local.get $1052
       i64.load $0
       local.get $1053
       i64.load $0
       i64.eq
       i32.eqz
       if
        i32.const 0
        br $~lib/util/raweq/__raweq128|inlined.0
       end
       local.get $1040
       i32.const 8
       i32.add
       local.set $1040
       local.get $1041
       i32.const 8
       i32.add
       local.set $1041
       local.get $1040
       local.set $1054
       local.get $1041
       local.set $1055
       local.get $1054
       i64.load $0
       local.get $1055
       i64.load $0
       i64.eq
       i32.eqz
       if
        i32.const 0
        br $~lib/util/raweq/__raweq128|inlined.0
       end
       local.get $1040
       i32.const 8
       i32.add
       local.set $1040
       local.get $1041
       i32.const 8
       i32.add
       local.set $1041
       local.get $1040
       local.set $1056
       local.get $1041
       local.set $1057
       local.get $1056
       i64.load $0
       local.get $1057
       i64.load $0
       i64.eq
       i32.eqz
       if
        i32.const 0
        br $~lib/util/raweq/__raweq128|inlined.0
       end
       local.get $1040
       i32.const 8
       i32.add
       local.set $1040
       local.get $1041
       i32.const 8
       i32.add
       local.set $1041
       local.get $1040
       local.set $1058
       local.get $1041
       local.set $1059
       local.get $1058
       i64.load $0
       local.get $1059
       i64.load $0
       i64.eq
       i32.eqz
       if
        i32.const 0
        br $~lib/util/raweq/__raweq128|inlined.0
       end
       local.get $1040
       i32.const 8
       i32.add
       local.set $1040
       local.get $1041
       i32.const 8
       i32.add
       local.set $1041
       local.get $1040
       local.set $1060
       local.get $1041
       local.set $1061
       local.get $1060
       i64.load $0
       local.get $1061
       i64.load $0
       i64.eq
       i32.eqz
       if
        i32.const 0
        br $~lib/util/raweq/__raweq128|inlined.0
       end
       local.get $1040
       i32.const 8
       i32.add
       local.set $1040
       local.get $1041
       i32.const 8
       i32.add
       local.set $1041
       local.get $1040
       local.set $1062
       local.get $1041
       local.set $1063
       local.get $1062
       i64.load $0
       local.get $1063
       i64.load $0
       i64.eq
       i32.eqz
       if
        i32.const 0
        br $~lib/util/raweq/__raweq128|inlined.0
       end
       local.get $1040
       i32.const 8
       i32.add
       local.set $1040
       local.get $1041
       i32.const 8
       i32.add
       local.set $1041
       local.get $1040
       local.set $1064
       local.get $1041
       local.set $1065
       local.get $1064
       i64.load $0
       local.get $1065
       i64.load $0
       i64.eq
       i32.eqz
       if
        i32.const 0
        br $~lib/util/raweq/__raweq128|inlined.0
       end
       local.get $1040
       i32.const 8
       i32.add
       local.set $1040
       local.get $1041
       i32.const 8
       i32.add
       local.set $1041
       local.get $1040
       local.set $1066
       local.get $1041
       local.set $1067
       local.get $1066
       i64.load $0
       local.get $1067
       i64.load $0
       i64.eq
       i32.eqz
       if
        i32.const 0
        br $~lib/util/raweq/__raweq128|inlined.0
       end
       local.get $1040
       i32.const 8
       i32.add
       local.set $1040
       local.get $1041
       i32.const 8
       i32.add
       local.set $1041
       local.get $1040
       local.set $1068
       local.get $1041
       local.set $1069
       local.get $1068
       i64.load $0
       local.get $1069
       i64.load $0
       i64.eq
       i32.eqz
       if
        i32.const 0
        br $~lib/util/raweq/__raweq128|inlined.0
       end
       local.get $1040
       i32.const 8
       i32.add
       local.set $1040
       local.get $1041
       i32.const 8
       i32.add
       local.set $1041
       local.get $1040
       local.set $1070
       local.get $1041
       local.set $1071
       local.get $1070
       i64.load $0
       local.get $1071
       i64.load $0
       i64.eq
       i32.eqz
       if
        i32.const 0
        br $~lib/util/raweq/__raweq128|inlined.0
       end
       local.get $1040
       i32.const 8
       i32.add
       local.set $1040
       local.get $1041
       i32.const 8
       i32.add
       local.set $1041
       local.get $1040
       i64.load $0
       local.get $1041
       i64.load $0
       i64.eq
      end
      br $~lib/string/String.__eq|inlined.0
     else
      block $~lib/util/equpto/__equpto127|inlined.0 (result i32)
       local.get $1037
       local.set $1072
       local.get $1038
       local.set $1073
       local.get $1039
       local.set $1074
       local.get $1074
       i32.const 64
       i32.ge_u
       if
        block $~lib/util/raweq/__raweq64|inlined.0 (result i32)
         local.get $1072
         local.set $1075
         local.get $1073
         local.set $1076
         local.get $1075
         local.set $1077
         local.get $1076
         local.set $1078
         local.get $1077
         i64.load $0
         local.get $1078
         i64.load $0
         i64.eq
         i32.eqz
         if
          i32.const 0
          br $~lib/util/raweq/__raweq64|inlined.0
         end
         local.get $1075
         i32.const 8
         i32.add
         local.set $1075
         local.get $1076
         i32.const 8
         i32.add
         local.set $1076
         local.get $1075
         local.set $1079
         local.get $1076
         local.set $1080
         local.get $1079
         i64.load $0
         local.get $1080
         i64.load $0
         i64.eq
         i32.eqz
         if
          i32.const 0
          br $~lib/util/raweq/__raweq64|inlined.0
         end
         local.get $1075
         i32.const 8
         i32.add
         local.set $1075
         local.get $1076
         i32.const 8
         i32.add
         local.set $1076
         local.get $1075
         local.set $1081
         local.get $1076
         local.set $1082
         local.get $1081
         i64.load $0
         local.get $1082
         i64.load $0
         i64.eq
         i32.eqz
         if
          i32.const 0
          br $~lib/util/raweq/__raweq64|inlined.0
         end
         local.get $1075
         i32.const 8
         i32.add
         local.set $1075
         local.get $1076
         i32.const 8
         i32.add
         local.set $1076
         local.get $1075
         local.set $1083
         local.get $1076
         local.set $1084
         local.get $1083
         i64.load $0
         local.get $1084
         i64.load $0
         i64.eq
         i32.eqz
         if
          i32.const 0
          br $~lib/util/raweq/__raweq64|inlined.0
         end
         local.get $1075
         i32.const 8
         i32.add
         local.set $1075
         local.get $1076
         i32.const 8
         i32.add
         local.set $1076
         local.get $1075
         local.set $1085
         local.get $1076
         local.set $1086
         local.get $1085
         i64.load $0
         local.get $1086
         i64.load $0
         i64.eq
         i32.eqz
         if
          i32.const 0
          br $~lib/util/raweq/__raweq64|inlined.0
         end
         local.get $1075
         i32.const 8
         i32.add
         local.set $1075
         local.get $1076
         i32.const 8
         i32.add
         local.set $1076
         local.get $1075
         local.set $1087
         local.get $1076
         local.set $1088
         local.get $1087
         i64.load $0
         local.get $1088
         i64.load $0
         i64.eq
         i32.eqz
         if
          i32.const 0
          br $~lib/util/raweq/__raweq64|inlined.0
         end
         local.get $1075
         i32.const 8
         i32.add
         local.set $1075
         local.get $1076
         i32.const 8
         i32.add
         local.set $1076
         local.get $1075
         local.set $1089
         local.get $1076
         local.set $1090
         local.get $1089
         i64.load $0
         local.get $1090
         i64.load $0
         i64.eq
         i32.eqz
         if
          i32.const 0
          br $~lib/util/raweq/__raweq64|inlined.0
         end
         local.get $1075
         i32.const 8
         i32.add
         local.set $1075
         local.get $1076
         i32.const 8
         i32.add
         local.set $1076
         local.get $1075
         i64.load $0
         local.get $1076
         i64.load $0
         i64.eq
        end
        local.set $1091
        local.get $1091
        i32.eqz
        if
         i32.const 0
         br $~lib/util/equpto/__equpto127|inlined.0
        end
        local.get $1072
        i32.const 64
        i32.add
        local.set $1072
        local.get $1073
        i32.const 64
        i32.add
        local.set $1073
        local.get $1074
        i32.const 64
        i32.sub
        local.set $1074
       end
       block $~lib/util/equpto/__equpto63|inlined.0 (result i32)
        local.get $1072
        local.set $1092
        local.get $1073
        local.set $1093
        local.get $1074
        local.set $1094
        local.get $1094
        i32.const 32
        i32.ge_u
        if
         block $~lib/util/raweq/__raweq32|inlined.0 (result i32)
          local.get $1092
          local.set $1095
          local.get $1093
          local.set $1096
          local.get $1095
          local.set $1097
          local.get $1096
          local.set $1098
          local.get $1097
          i64.load $0
          local.get $1098
          i64.load $0
          i64.eq
          i32.eqz
          if
           i32.const 0
           br $~lib/util/raweq/__raweq32|inlined.0
          end
          local.get $1095
          i32.const 8
          i32.add
          local.set $1095
          local.get $1096
          i32.const 8
          i32.add
          local.set $1096
          local.get $1095
          local.set $1099
          local.get $1096
          local.set $1100
          local.get $1099
          i64.load $0
          local.get $1100
          i64.load $0
          i64.eq
          i32.eqz
          if
           i32.const 0
           br $~lib/util/raweq/__raweq32|inlined.0
          end
          local.get $1095
          i32.const 8
          i32.add
          local.set $1095
          local.get $1096
          i32.const 8
          i32.add
          local.set $1096
          local.get $1095
          local.set $1101
          local.get $1096
          local.set $1102
          local.get $1101
          i64.load $0
          local.get $1102
          i64.load $0
          i64.eq
          i32.eqz
          if
           i32.const 0
           br $~lib/util/raweq/__raweq32|inlined.0
          end
          local.get $1095
          i32.const 8
          i32.add
          local.set $1095
          local.get $1096
          i32.const 8
          i32.add
          local.set $1096
          local.get $1095
          i64.load $0
          local.get $1096
          i64.load $0
          i64.eq
         end
         local.set $1103
         local.get $1103
         i32.eqz
         if
          i32.const 0
          br $~lib/util/equpto/__equpto63|inlined.0
         end
         local.get $1092
         i32.const 32
         i32.add
         local.set $1092
         local.get $1093
         i32.const 32
         i32.add
         local.set $1093
         local.get $1094
         i32.const 32
         i32.sub
         local.set $1094
        end
        block $~lib/util/equpto/__equpto31|inlined.0 (result i32)
         local.get $1092
         local.set $1104
         local.get $1093
         local.set $1105
         local.get $1094
         local.set $1106
         local.get $1106
         i32.const 16
         i32.ge_u
         if
          block $~lib/util/raweq/__raweq16|inlined.0 (result i32)
           local.get $1104
           local.set $1107
           local.get $1105
           local.set $1108
           local.get $1107
           local.set $1109
           local.get $1108
           local.set $1110
           local.get $1109
           i64.load $0
           local.get $1110
           i64.load $0
           i64.eq
           i32.eqz
           if
            i32.const 0
            br $~lib/util/raweq/__raweq16|inlined.0
           end
           local.get $1107
           i32.const 8
           i32.add
           local.set $1107
           local.get $1108
           i32.const 8
           i32.add
           local.set $1108
           local.get $1107
           i64.load $0
           local.get $1108
           i64.load $0
           i64.eq
          end
          local.set $1111
          local.get $1111
          i32.eqz
          if
           i32.const 0
           br $~lib/util/equpto/__equpto31|inlined.0
          end
          local.get $1104
          i32.const 16
          i32.add
          local.set $1104
          local.get $1105
          i32.const 16
          i32.add
          local.set $1105
          local.get $1106
          i32.const 16
          i32.sub
          local.set $1106
         end
         block $~lib/util/equpto/__equpto15|inlined.0 (result i32)
          local.get $1104
          local.set $1112
          local.get $1105
          local.set $1113
          local.get $1106
          local.set $1114
          local.get $1114
          i32.const 8
          i32.ge_u
          if
           local.get $1112
           local.set $1115
           local.get $1113
           local.set $1116
           local.get $1115
           i64.load $0
           local.get $1116
           i64.load $0
           i64.eq
           local.set $1117
           local.get $1117
           i32.eqz
           if
            i32.const 0
            br $~lib/util/equpto/__equpto15|inlined.0
           end
           local.get $1112
           i32.const 8
           i32.add
           local.set $1112
           local.get $1113
           i32.const 8
           i32.add
           local.set $1113
           local.get $1114
           i32.const 8
           i32.sub
           local.set $1114
          end
          block $~lib/util/equpto/__equpto7|inlined.0 (result i32)
           local.get $1112
           local.set $1118
           local.get $1113
           local.set $1119
           local.get $1114
           local.set $1120
           local.get $1120
           i32.const 4
           i32.ge_u
           if
            local.get $1118
            local.set $1121
            local.get $1119
            local.set $1122
            local.get $1121
            i32.load $0
            local.get $1122
            i32.load $0
            i32.eq
            local.set $1123
            local.get $1123
            i32.eqz
            if
             i32.const 0
             br $~lib/util/equpto/__equpto7|inlined.0
            end
            local.get $1118
            i32.const 4
            i32.add
            local.set $1118
            local.get $1119
            i32.const 4
            i32.add
            local.set $1119
            local.get $1120
            i32.const 4
            i32.sub
            local.set $1120
           end
           block $~lib/util/equpto/__equpto3|inlined.0 (result i32)
            local.get $1118
            local.set $1124
            local.get $1119
            local.set $1125
            local.get $1120
            local.set $1126
            local.get $1126
            i32.const 2
            i32.ge_u
            if
             local.get $1124
             local.set $1127
             local.get $1125
             local.set $1128
             local.get $1127
             i32.load16_u $0
             local.get $1128
             i32.load16_u $0
             i32.eq
             local.set $1129
             local.get $1129
             i32.eqz
             if
              i32.const 0
              br $~lib/util/equpto/__equpto3|inlined.0
             end
             local.get $1124
             i32.const 2
             i32.add
             local.set $1124
             local.get $1125
             i32.const 2
             i32.add
             local.set $1125
             local.get $1126
             i32.const 2
             i32.sub
             local.set $1126
            end
            local.get $1124
            local.set $1130
            local.get $1125
            local.set $1131
            local.get $1126
            local.set $1132
            local.get $1132
            if (result i32)
             local.get $1130
             local.set $1133
             local.get $1131
             local.set $1134
             local.get $1133
             i32.load8_u $0
             local.get $1134
             i32.load8_u $0
             i32.eq
            else
             i32.const 1
            end
           end
          end
         end
        end
       end
      end
      br $~lib/string/String.__eq|inlined.0
     end
     unreachable
    end
    i32.const 0
    i32.ne
    i32.eqz
    if
     unreachable
    end
    local.get $1033
    i32.const 1
    i32.add
    local.set $1033
    br $for-loop|111
   end
  end
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 2
  i32.const 2
  i32.const 29
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $1135
  i32.store $0 offset=1112
  global.get $~lib/memory/__stack_pointer
  local.get $1135
  i32.load $0 offset=4
  local.tee $1136
  i32.store $0 offset=1116
  local.get $1135
  i32.const 0
  i32.const 0
  i32.const 2
  i32.const 3
  i32.const 8896
  call $~lib/rt/__newArray
  call $~lib/array/Array<~lib/array/Array<i32>>#__uset
  local.get $1135
  i32.const 1
  i32.const 0
  i32.const 2
  i32.const 3
  i32.const 8928
  call $~lib/rt/__newArray
  call $~lib/array/Array<~lib/array/Array<i32>>#__uset
  local.get $1135
  local.tee $1141
  i32.store $0 offset=1120
  local.get $1141
  call $~lib/array/Array<~lib/array/Array<i32>>#flat
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array<i32>#get:length
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 2
  i32.const 2
  i32.const 29
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $1142
  i32.store $0 offset=1124
  global.get $~lib/memory/__stack_pointer
  local.get $1142
  i32.load $0 offset=4
  local.tee $1143
  i32.store $0 offset=1128
  local.get $1142
  i32.const 0
  i32.const 1
  i32.const 2
  i32.const 3
  i32.const 8960
  call $~lib/rt/__newArray
  call $~lib/array/Array<~lib/array/Array<i32>>#__uset
  local.get $1142
  i32.const 1
  i32.const 1
  i32.const 2
  i32.const 3
  i32.const 8992
  call $~lib/rt/__newArray
  call $~lib/array/Array<~lib/array/Array<i32>>#__uset
  local.get $1142
  local.tee $1148
  i32.store $0 offset=1132
  global.get $~lib/memory/__stack_pointer
  local.get $1148
  i32.const 9024
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0 offset=964
  local.get $1150
  call $~lib/array/Array<~lib/array/Array<i32>>#map<~lib/array/Array<i32>>
  local.set $1150
  global.get $~lib/memory/__stack_pointer
  local.get $1150
  i32.store $0
  local.get $1150
  call $~lib/array/Array<~lib/array/Array<i32>>#flat
  local.tee $1149
  i32.store $0 offset=1136
  local.get $1149
  call $~lib/array/Array<i32>#get:length
  i32.const 4
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $1149
  i32.const 0
  call $~lib/array/Array<i32>#__get
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $1149
  i32.const 1
  call $~lib/array/Array<i32>#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $1149
  i32.const 2
  call $~lib/array/Array<i32>#__get
  i32.const 2
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $1149
  i32.const 3
  call $~lib/array/Array<i32>#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  global.set $std/array/arr
  i32.const 0
  global.set $std/array/inputStabArr
  i32.const 0
  global.set $std/array/outputStabArr
  global.get $~lib/memory/__heap_base
  global.set $~lib/memory/__stack_pointer
  call $~lib/rt/itcms/__collect
  global.get $~lib/memory/__stack_pointer
  i32.const 1140
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<i32>#constructor (type $i32_i32_=>_i32) (param $this i32) (param $length i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $bufferSize i32)
  (local $buffer i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 3
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  i32.const 0
  call $~lib/array/Array<i32>#set:buffer
  local.get $this
  i32.const 0
  call $~lib/array/Array<i32>#set:dataStart
  local.get $this
  i32.const 0
  call $~lib/array/Array<i32>#set:byteLength
  local.get $this
  i32.const 0
  call $~lib/array/Array<i32>#set:length_
  local.get $length
  i32.const 1073741820
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   unreachable
  end
  local.get $length
  local.tee $2
  i32.const 8
  local.tee $3
  local.get $2
  local.get $3
  i32.gt_u
  select
  i32.const 2
  i32.shl
  local.set $bufferSize
  global.get $~lib/memory/__stack_pointer
  local.get $bufferSize
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $buffer
  i32.store $0 offset=4
  i32.const 2
  global.get $~lib/shared/runtime/Runtime.Incremental
  i32.ne
  drop
  local.get $this
  local.get $buffer
  call $~lib/array/Array<i32>#set:buffer
  local.get $this
  local.get $buffer
  call $~lib/array/Array<i32>#set:dataStart
  local.get $this
  local.get $bufferSize
  call $~lib/array/Array<i32>#set:byteLength
  local.get $this
  local.get $length
  call $~lib/array/Array<i32>#set:length_
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
 )
 (func $~lib/arraybuffer/ArrayBufferView#constructor (type $i32_i32_i32_=>_i32) (param $this i32) (param $length i32) (param $alignLog2 i32) (result i32)
  (local $buffer i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 2
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  i32.const 0
  call $~lib/arraybuffer/ArrayBufferView#set:buffer
  local.get $this
  i32.const 0
  call $~lib/arraybuffer/ArrayBufferView#set:dataStart
  local.get $this
  i32.const 0
  call $~lib/arraybuffer/ArrayBufferView#set:byteLength
  local.get $length
  i32.const 1073741820
  local.get $alignLog2
  i32.shr_u
  i32.gt_u
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $length
  local.get $alignLog2
  i32.shl
  local.tee $length
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $buffer
  i32.store $0 offset=4
  i32.const 2
  global.get $~lib/shared/runtime/Runtime.Incremental
  i32.ne
  drop
  local.get $this
  local.get $buffer
  call $~lib/arraybuffer/ArrayBufferView#set:buffer
  local.get $this
  local.get $buffer
  call $~lib/arraybuffer/ArrayBufferView#set:dataStart
  local.get $this
  local.get $length
  call $~lib/arraybuffer/ArrayBufferView#set:byteLength
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $~lib/typedarray/Uint8Array#constructor (type $i32_i32_=>_i32) (param $this i32) (param $length i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 5
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.get $length
  i32.const 0
  call $~lib/arraybuffer/ArrayBufferView#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/rt/__newArray (type $i32_i32_i32_i32_=>_i32) (param $length i32) (param $alignLog2 i32) (param $id i32) (param $data i32) (result i32)
  (local $bufferSize i32)
  (local $buffer i32)
  (local $array i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $length
  local.get $alignLog2
  i32.shl
  local.set $bufferSize
  global.get $~lib/memory/__stack_pointer
  local.get $bufferSize
  i32.const 0
  local.get $data
  call $~lib/rt/__newBuffer
  local.tee $buffer
  i32.store $0
  i32.const 16
  local.get $id
  call $~lib/rt/itcms/__new
  local.set $array
  local.get $array
  local.get $buffer
  i32.store $0
  local.get $array
  local.get $buffer
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $array
  local.get $buffer
  i32.store $0 offset=4
  local.get $array
  local.get $bufferSize
  i32.store $0 offset=8
  local.get $array
  local.get $length
  i32.store $0 offset=12
  local.get $array
  local.set $7
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $7
 )
 (func $~lib/array/Array<i32>#concat (type $i32_i32_=>_i32) (param $this i32) (param $other i32) (result i32)
  (local $thisLen i32)
  (local $otherLen i32)
  (local $outLen i32)
  (local $out i32)
  (local $outStart i32)
  (local $thisSize i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  i32.load $0 offset=12
  local.set $thisLen
  local.get $other
  i32.load $0 offset=12
  local.set $otherLen
  local.get $thisLen
  local.get $otherLen
  i32.add
  local.set $outLen
  local.get $outLen
  i32.const 1073741820
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $outLen
  i32.const 2
  i32.const 3
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $out
  i32.store $0
  local.get $out
  i32.load $0 offset=4
  local.set $outStart
  local.get $thisLen
  i32.const 2
  i32.shl
  local.set $thisSize
  i32.const 0
  drop
  local.get $outStart
  local.get $this
  i32.load $0 offset=4
  local.get $thisSize
  memory.copy $0 $0
  local.get $outStart
  local.get $thisSize
  i32.add
  local.get $other
  i32.load $0 offset=4
  local.get $otherLen
  i32.const 2
  i32.shl
  memory.copy $0 $0
  local.get $out
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
 )
 (func $~lib/array/Array<i32>#slice (type $i32_i32_i32_=>_i32) (param $this i32) (param $start i32) (param $end i32) (result i32)
  (local $len i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $slice i32)
  (local $sliceBase i32)
  (local $thisBase i32)
  (local $17 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  i32.load $0 offset=12
  local.set $len
  local.get $start
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $start
   local.get $len
   i32.add
   local.tee $4
   i32.const 0
   local.tee $5
   local.get $4
   local.get $5
   i32.gt_s
   select
  else
   local.get $start
   local.tee $6
   local.get $len
   local.tee $7
   local.get $6
   local.get $7
   i32.lt_s
   select
  end
  local.set $start
  local.get $end
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $end
   local.get $len
   i32.add
   local.tee $8
   i32.const 0
   local.tee $9
   local.get $8
   local.get $9
   i32.gt_s
   select
  else
   local.get $end
   local.tee $10
   local.get $len
   local.tee $11
   local.get $10
   local.get $11
   i32.lt_s
   select
  end
  local.set $end
  local.get $end
  local.get $start
  i32.sub
  local.tee $12
  i32.const 0
  local.tee $13
  local.get $12
  local.get $13
  i32.gt_s
  select
  local.set $len
  global.get $~lib/memory/__stack_pointer
  local.get $len
  i32.const 2
  i32.const 3
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $slice
  i32.store $0
  local.get $slice
  i32.load $0 offset=4
  local.set $sliceBase
  local.get $this
  i32.load $0 offset=4
  local.get $start
  i32.const 2
  i32.shl
  i32.add
  local.set $thisBase
  i32.const 0
  drop
  local.get $sliceBase
  local.get $thisBase
  local.get $len
  i32.const 2
  i32.shl
  memory.copy $0 $0
  local.get $slice
  local.set $17
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $17
 )
 (func $~lib/array/Array<i32>#splice (type $i32_i32_i32_=>_i32) (param $this i32) (param $start i32) (param $deleteCount i32) (result i32)
  (local $len i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $result i32)
  (local $resultStart i32)
  (local $thisStart i32)
  (local $thisBase i32)
  (local $offset i32)
  (local $17 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  i32.load $0 offset=12
  local.set $len
  local.get $start
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $start
   i32.add
   local.tee $4
   i32.const 0
   local.tee $5
   local.get $4
   local.get $5
   i32.gt_s
   select
  else
   local.get $start
   local.tee $6
   local.get $len
   local.tee $7
   local.get $6
   local.get $7
   i32.lt_s
   select
  end
  local.set $start
  local.get $deleteCount
  local.tee $8
  local.get $len
  local.get $start
  i32.sub
  local.tee $9
  local.get $8
  local.get $9
  i32.lt_s
  select
  local.tee $10
  i32.const 0
  local.tee $11
  local.get $10
  local.get $11
  i32.gt_s
  select
  local.set $deleteCount
  global.get $~lib/memory/__stack_pointer
  local.get $deleteCount
  i32.const 2
  i32.const 3
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $result
  i32.store $0
  local.get $result
  i32.load $0 offset=4
  local.set $resultStart
  local.get $this
  i32.load $0 offset=4
  local.set $thisStart
  local.get $thisStart
  local.get $start
  i32.const 2
  i32.shl
  i32.add
  local.set $thisBase
  local.get $resultStart
  local.get $thisBase
  local.get $deleteCount
  i32.const 2
  i32.shl
  memory.copy $0 $0
  local.get $start
  local.get $deleteCount
  i32.add
  local.set $offset
  local.get $len
  local.get $offset
  i32.ne
  if
   local.get $thisBase
   local.get $thisStart
   local.get $offset
   i32.const 2
   i32.shl
   i32.add
   local.get $len
   local.get $offset
   i32.sub
   i32.const 2
   i32.shl
   memory.copy $0 $0
  end
  local.get $this
  local.get $len
  local.get $deleteCount
  i32.sub
  call $~lib/array/Array<i32>#set:length_
  local.get $result
  local.set $17
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $17
 )
 (func $~lib/array/Array<std/array/Ref>#splice (type $i32_i32_i32_=>_i32) (param $this i32) (param $start i32) (param $deleteCount i32) (result i32)
  (local $len i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $result i32)
  (local $resultStart i32)
  (local $thisStart i32)
  (local $thisBase i32)
  (local $offset i32)
  (local $17 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  i32.load $0 offset=12
  local.set $len
  local.get $start
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $start
   i32.add
   local.tee $4
   i32.const 0
   local.tee $5
   local.get $4
   local.get $5
   i32.gt_s
   select
  else
   local.get $start
   local.tee $6
   local.get $len
   local.tee $7
   local.get $6
   local.get $7
   i32.lt_s
   select
  end
  local.set $start
  local.get $deleteCount
  local.tee $8
  local.get $len
  local.get $start
  i32.sub
  local.tee $9
  local.get $8
  local.get $9
  i32.lt_s
  select
  local.tee $10
  i32.const 0
  local.tee $11
  local.get $10
  local.get $11
  i32.gt_s
  select
  local.set $deleteCount
  global.get $~lib/memory/__stack_pointer
  local.get $deleteCount
  i32.const 2
  i32.const 9
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $result
  i32.store $0
  local.get $result
  i32.load $0 offset=4
  local.set $resultStart
  local.get $this
  i32.load $0 offset=4
  local.set $thisStart
  local.get $thisStart
  local.get $start
  i32.const 2
  i32.shl
  i32.add
  local.set $thisBase
  local.get $resultStart
  local.get $thisBase
  local.get $deleteCount
  i32.const 2
  i32.shl
  memory.copy $0 $0
  local.get $start
  local.get $deleteCount
  i32.add
  local.set $offset
  local.get $len
  local.get $offset
  i32.ne
  if
   local.get $thisBase
   local.get $thisStart
   local.get $offset
   i32.const 2
   i32.shl
   i32.add
   local.get $len
   local.get $offset
   i32.sub
   i32.const 2
   i32.shl
   memory.copy $0 $0
  end
  local.get $this
  local.get $len
  local.get $deleteCount
  i32.sub
  call $~lib/array/Array<std/array/Ref>#set:length_
  local.get $result
  local.set $17
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $17
 )
 (func $~lib/array/Array<std/array/Ref>#__get (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $index
  local.get $this
  i32.load $0 offset=12
  i32.ge_u
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.tee $value
  i32.store $0
  i32.const 1
  drop
  i32.const 0
  i32.eqz
  drop
  local.get $value
  i32.eqz
  if
   unreachable
  end
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/array/Array<std/array/Ref|null>#splice (type $i32_i32_i32_=>_i32) (param $this i32) (param $start i32) (param $deleteCount i32) (result i32)
  (local $len i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $result i32)
  (local $resultStart i32)
  (local $thisStart i32)
  (local $thisBase i32)
  (local $offset i32)
  (local $17 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  i32.load $0 offset=12
  local.set $len
  local.get $start
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $start
   i32.add
   local.tee $4
   i32.const 0
   local.tee $5
   local.get $4
   local.get $5
   i32.gt_s
   select
  else
   local.get $start
   local.tee $6
   local.get $len
   local.tee $7
   local.get $6
   local.get $7
   i32.lt_s
   select
  end
  local.set $start
  local.get $deleteCount
  local.tee $8
  local.get $len
  local.get $start
  i32.sub
  local.tee $9
  local.get $8
  local.get $9
  i32.lt_s
  select
  local.tee $10
  i32.const 0
  local.tee $11
  local.get $10
  local.get $11
  i32.gt_s
  select
  local.set $deleteCount
  global.get $~lib/memory/__stack_pointer
  local.get $deleteCount
  i32.const 2
  i32.const 13
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $result
  i32.store $0
  local.get $result
  i32.load $0 offset=4
  local.set $resultStart
  local.get $this
  i32.load $0 offset=4
  local.set $thisStart
  local.get $thisStart
  local.get $start
  i32.const 2
  i32.shl
  i32.add
  local.set $thisBase
  local.get $resultStart
  local.get $thisBase
  local.get $deleteCount
  i32.const 2
  i32.shl
  memory.copy $0 $0
  local.get $start
  local.get $deleteCount
  i32.add
  local.set $offset
  local.get $len
  local.get $offset
  i32.ne
  if
   local.get $thisBase
   local.get $thisStart
   local.get $offset
   i32.const 2
   i32.shl
   i32.add
   local.get $len
   local.get $offset
   i32.sub
   i32.const 2
   i32.shl
   memory.copy $0 $0
  end
  local.get $this
  local.get $len
  local.get $deleteCount
  i32.sub
  call $~lib/array/Array<std/array/Ref|null>#set:length_
  local.get $result
  local.set $17
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $17
 )
 (func $~lib/array/Array<std/array/Ref|null>#__get (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $index
  local.get $this
  i32.load $0 offset=12
  i32.ge_u
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.tee $value
  i32.store $0
  i32.const 1
  drop
  i32.const 1
  i32.eqz
  drop
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/array/Array<i32>#map<~lib/string/String> (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $len i32)
  (local $out i32)
  (local $outStart i32)
  (local $i i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $result i32)
  (local $10 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  i32.load $0 offset=12
  local.set $len
  global.get $~lib/memory/__stack_pointer
  local.get $len
  i32.const 2
  i32.const 16
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $out
  i32.store $0
  local.get $out
  i32.load $0 offset=4
  local.set $outStart
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $len
   local.tee $6
   local.get $this
   i32.load $0 offset=12
   local.tee $7
   local.get $6
   local.get $7
   i32.lt_s
   select
   i32.lt_s
   local.set $8
   local.get $8
   if
    global.get $~lib/memory/__stack_pointer
    local.get $this
    i32.load $0 offset=4
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.get $i
    local.get $this
    i32.const 3
    global.set $~argumentsLength
    local.get $fn
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    local.tee $result
    i32.store $0 offset=4
    local.get $outStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    local.get $result
    i32.store $0
    i32.const 1
    drop
    local.get $out
    local.get $result
    i32.const 1
    call $~lib/rt/itcms/__link
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $out
  local.set $10
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $10
 )
 (func $~lib/array/Array<i32>#map<f32> (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $len i32)
  (local $out i32)
  (local $outStart i32)
  (local $i i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $result f32)
  (local $10 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  i32.load $0 offset=12
  local.set $len
  global.get $~lib/memory/__stack_pointer
  local.get $len
  i32.const 2
  i32.const 8
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $out
  i32.store $0
  local.get $out
  i32.load $0 offset=4
  local.set $outStart
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $len
   local.tee $6
   local.get $this
   i32.load $0 offset=12
   local.tee $7
   local.get $6
   local.get $7
   i32.lt_s
   select
   i32.lt_s
   local.set $8
   local.get $8
   if
    local.get $this
    i32.load $0 offset=4
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.get $i
    local.get $this
    i32.const 3
    global.set $~argumentsLength
    local.get $fn
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_f32)
    local.set $result
    local.get $outStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    local.get $result
    f32.store $0
    i32.const 0
    drop
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $out
  local.set $10
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $10
 )
 (func $~lib/array/Array<i32>#map<i32> (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $len i32)
  (local $out i32)
  (local $outStart i32)
  (local $i i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $result i32)
  (local $10 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  i32.load $0 offset=12
  local.set $len
  global.get $~lib/memory/__stack_pointer
  local.get $len
  i32.const 2
  i32.const 3
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $out
  i32.store $0
  local.get $out
  i32.load $0 offset=4
  local.set $outStart
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $len
   local.tee $6
   local.get $this
   i32.load $0 offset=12
   local.tee $7
   local.get $6
   local.get $7
   i32.lt_s
   select
   i32.lt_s
   local.set $8
   local.get $8
   if
    local.get $this
    i32.load $0 offset=4
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.get $i
    local.get $this
    i32.const 3
    global.set $~argumentsLength
    local.get $fn
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    local.set $result
    local.get $outStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    local.get $result
    i32.store $0
    i32.const 0
    drop
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $out
  local.set $10
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $10
 )
 (func $~lib/array/Array<i32>#filter (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $result i32)
  (local $i i32)
  (local $len i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $value i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 2
  i32.const 3
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $result
  i32.store $0
  i32.const 0
  local.set $i
  local.get $this
  i32.load $0 offset=12
  local.set $len
  loop $for-loop|0
   local.get $i
   local.get $len
   local.tee $5
   local.get $this
   i32.load $0 offset=12
   local.tee $6
   local.get $5
   local.get $6
   i32.lt_s
   select
   i32.lt_s
   local.set $7
   local.get $7
   if
    local.get $this
    i32.load $0 offset=4
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $value
    local.get $value
    local.get $i
    local.get $this
    i32.const 3
    global.set $~argumentsLength
    local.get $fn
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    if
     local.get $result
     local.get $value
     call $~lib/array/Array<i32>#push
     drop
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $result
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
 )
 (func $std/array/Dim#constructor (type $i32_=>_i32) (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 22
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  i32.const 0
  call $std/array/Dim#set:height
  local.get $this
  i32.const 0
  call $std/array/Dim#set:width
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/array/Array<f32>#sort@varargs (type $i32_i32_=>_i32) (param $this i32) (param $comparator i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   block $~lib/util/sort/COMPARATOR<f32>|inlined.0 (result i32)
    i32.const 0
    drop
    i32.const 1
    drop
    i32.const 4
    i32.const 4
    i32.eq
    drop
    i32.const 6944
    br $~lib/util/sort/COMPARATOR<f32>|inlined.0
   end
   local.tee $comparator
   i32.store $0
  end
  local.get $this
  local.get $comparator
  call $~lib/array/Array<f32>#sort
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/array/Array<f64>#sort@varargs (type $i32_i32_=>_i32) (param $this i32) (param $comparator i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   block $~lib/util/sort/COMPARATOR<f64>|inlined.0 (result i32)
    i32.const 0
    drop
    i32.const 1
    drop
    i32.const 8
    i32.const 4
    i32.eq
    drop
    i32.const 7216
    br $~lib/util/sort/COMPARATOR<f64>|inlined.0
   end
   local.tee $comparator
   i32.store $0
  end
  local.get $this
  local.get $comparator
  call $~lib/array/Array<f64>#sort
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/array/Array<i32>#sort@varargs (type $i32_i32_=>_i32) (param $this i32) (param $comparator i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   block $~lib/util/sort/COMPARATOR<i32>|inlined.0 (result i32)
    i32.const 1
    drop
    i32.const 4
    i32.const 4
    i32.le_u
    drop
    i32.const 7376
    br $~lib/util/sort/COMPARATOR<i32>|inlined.0
   end
   local.tee $comparator
   i32.store $0
  end
  local.get $this
  local.get $comparator
  call $~lib/array/Array<i32>#sort
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/array/Array<u32>#sort@varargs (type $i32_i32_=>_i32) (param $this i32) (param $comparator i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   block $~lib/util/sort/COMPARATOR<u32>|inlined.0 (result i32)
    i32.const 1
    drop
    i32.const 0
    drop
    i32.const 7504
    br $~lib/util/sort/COMPARATOR<u32>|inlined.0
   end
   local.tee $comparator
   i32.store $0
  end
  local.get $this
  local.get $comparator
  call $~lib/array/Array<u32>#sort
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/array/Array<std/array/Dim>#slice (type $i32_i32_i32_=>_i32) (param $this i32) (param $start i32) (param $end i32) (result i32)
  (local $len i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $slice i32)
  (local $sliceBase i32)
  (local $thisBase i32)
  (local $off i32)
  (local $end|18 i32)
  (local $19 i32)
  (local $ref i32)
  (local $21 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  i32.load $0 offset=12
  local.set $len
  local.get $start
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $start
   local.get $len
   i32.add
   local.tee $4
   i32.const 0
   local.tee $5
   local.get $4
   local.get $5
   i32.gt_s
   select
  else
   local.get $start
   local.tee $6
   local.get $len
   local.tee $7
   local.get $6
   local.get $7
   i32.lt_s
   select
  end
  local.set $start
  local.get $end
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $end
   local.get $len
   i32.add
   local.tee $8
   i32.const 0
   local.tee $9
   local.get $8
   local.get $9
   i32.gt_s
   select
  else
   local.get $end
   local.tee $10
   local.get $len
   local.tee $11
   local.get $10
   local.get $11
   i32.lt_s
   select
  end
  local.set $end
  local.get $end
  local.get $start
  i32.sub
  local.tee $12
  i32.const 0
  local.tee $13
  local.get $12
  local.get $13
  i32.gt_s
  select
  local.set $len
  global.get $~lib/memory/__stack_pointer
  local.get $len
  i32.const 2
  i32.const 23
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $slice
  i32.store $0
  local.get $slice
  i32.load $0 offset=4
  local.set $sliceBase
  local.get $this
  i32.load $0 offset=4
  local.get $start
  i32.const 2
  i32.shl
  i32.add
  local.set $thisBase
  i32.const 1
  drop
  i32.const 0
  local.set $off
  local.get $len
  i32.const 2
  i32.shl
  local.set $end|18
  loop $while-continue|0
   local.get $off
   local.get $end|18
   i32.lt_u
   local.set $19
   local.get $19
   if
    local.get $thisBase
    local.get $off
    i32.add
    i32.load $0
    local.set $ref
    local.get $sliceBase
    local.get $off
    i32.add
    local.get $ref
    i32.store $0
    local.get $slice
    local.get $ref
    i32.const 1
    call $~lib/rt/itcms/__link
    local.get $off
    i32.const 4
    i32.add
    local.set $off
    br $while-continue|0
   end
  end
  local.get $slice
  local.set $21
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $21
 )
 (func $~lib/array/Array<std/array/Dim>#__get (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $index
  local.get $this
  i32.load $0 offset=12
  i32.ge_u
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.tee $value
  i32.store $0
  i32.const 1
  drop
  i32.const 0
  i32.eqz
  drop
  local.get $value
  i32.eqz
  if
   unreachable
  end
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/array/Array<~lib/array/Array<i32>>#constructor (type $i32_i32_=>_i32) (param $this i32) (param $length i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $bufferSize i32)
  (local $buffer i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 29
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  i32.const 0
  call $~lib/array/Array<~lib/array/Array<i32>>#set:buffer
  local.get $this
  i32.const 0
  call $~lib/array/Array<~lib/array/Array<i32>>#set:dataStart
  local.get $this
  i32.const 0
  call $~lib/array/Array<~lib/array/Array<i32>>#set:byteLength
  local.get $this
  i32.const 0
  call $~lib/array/Array<~lib/array/Array<i32>>#set:length_
  local.get $length
  i32.const 1073741820
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   unreachable
  end
  local.get $length
  local.tee $2
  i32.const 8
  local.tee $3
  local.get $2
  local.get $3
  i32.gt_u
  select
  i32.const 2
  i32.shl
  local.set $bufferSize
  global.get $~lib/memory/__stack_pointer
  local.get $bufferSize
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $buffer
  i32.store $0 offset=4
  i32.const 2
  global.get $~lib/shared/runtime/Runtime.Incremental
  i32.ne
  drop
  local.get $this
  local.get $buffer
  call $~lib/array/Array<~lib/array/Array<i32>>#set:buffer
  local.get $this
  local.get $buffer
  call $~lib/array/Array<~lib/array/Array<i32>>#set:dataStart
  local.get $this
  local.get $bufferSize
  call $~lib/array/Array<~lib/array/Array<i32>>#set:byteLength
  local.get $this
  local.get $length
  call $~lib/array/Array<~lib/array/Array<i32>>#set:length_
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
 )
 (func $~lib/array/Array<~lib/array/Array<i32>>#__get (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $index
  local.get $this
  i32.load $0 offset=12
  i32.ge_u
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.tee $value
  i32.store $0
  i32.const 1
  drop
  i32.const 0
  i32.eqz
  drop
  local.get $value
  i32.eqz
  if
   unreachable
  end
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/array/Array<std/array/Proxy<i32>>#constructor (type $i32_i32_=>_i32) (param $this i32) (param $length i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $bufferSize i32)
  (local $buffer i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 32
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  i32.const 0
  call $~lib/array/Array<std/array/Proxy<i32>>#set:buffer
  local.get $this
  i32.const 0
  call $~lib/array/Array<std/array/Proxy<i32>>#set:dataStart
  local.get $this
  i32.const 0
  call $~lib/array/Array<std/array/Proxy<i32>>#set:byteLength
  local.get $this
  i32.const 0
  call $~lib/array/Array<std/array/Proxy<i32>>#set:length_
  local.get $length
  i32.const 1073741820
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   unreachable
  end
  local.get $length
  local.tee $2
  i32.const 8
  local.tee $3
  local.get $2
  local.get $3
  i32.gt_u
  select
  i32.const 2
  i32.shl
  local.set $bufferSize
  global.get $~lib/memory/__stack_pointer
  local.get $bufferSize
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $buffer
  i32.store $0 offset=4
  i32.const 2
  global.get $~lib/shared/runtime/Runtime.Incremental
  i32.ne
  drop
  local.get $this
  local.get $buffer
  call $~lib/array/Array<std/array/Proxy<i32>>#set:buffer
  local.get $this
  local.get $buffer
  call $~lib/array/Array<std/array/Proxy<i32>>#set:dataStart
  local.get $this
  local.get $bufferSize
  call $~lib/array/Array<std/array/Proxy<i32>>#set:byteLength
  local.get $this
  local.get $length
  call $~lib/array/Array<std/array/Proxy<i32>>#set:length_
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
 )
 (func $~lib/array/Array<std/array/Proxy<i32>>#__get (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $index
  local.get $this
  i32.load $0 offset=12
  i32.ge_u
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.tee $value
  i32.store $0
  i32.const 1
  drop
  i32.const 0
  i32.eqz
  drop
  local.get $value
  i32.eqz
  if
   unreachable
  end
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/array/Array<~lib/array/Array<i32>>#flat (type $i32_=>_i32) (param $this i32) (result i32)
  (local $ptr i32)
  (local $len i32)
  (local $size i32)
  (local $i i32)
  (local $5 i32)
  (local $child i32)
  (local $byteLength i32)
  (local $outBuffer i32)
  (local $outArray i32)
  (local $resultOffset i32)
  (local $i|11 i32)
  (local $12 i32)
  (local $child|13 i32)
  (local $childDataLength i32)
  (local $15 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  i32.const 1
  i32.eqz
  drop
  local.get $this
  i32.load $0 offset=4
  local.set $ptr
  local.get $this
  i32.load $0 offset=12
  local.set $len
  i32.const 0
  local.set $size
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $len
   i32.lt_s
   local.set $5
   local.get $5
   if
    local.get $ptr
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $child
    local.get $size
    local.get $child
    i32.const 0
    i32.eq
    if (result i32)
     i32.const 0
    else
     local.get $child
     i32.load $0 offset=12
    end
    i32.add
    local.set $size
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $size
  i32.const 2
  i32.shl
  local.set $byteLength
  global.get $~lib/memory/__stack_pointer
  local.get $byteLength
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $outBuffer
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.const 3
  call $~lib/rt/itcms/__new
  local.tee $outArray
  i32.store $0 offset=4
  local.get $outArray
  local.get $size
  i32.store $0 offset=12
  local.get $outArray
  local.get $byteLength
  i32.store $0 offset=8
  local.get $outArray
  local.get $outBuffer
  i32.store $0 offset=4
  local.get $outArray
  local.get $outBuffer
  i32.store $0
  local.get $outArray
  local.get $outBuffer
  i32.const 0
  call $~lib/rt/itcms/__link
  i32.const 0
  local.set $resultOffset
  i32.const 0
  local.set $i|11
  loop $for-loop|1
   local.get $i|11
   local.get $len
   i32.lt_s
   local.set $12
   local.get $12
   if
    block $for-continue|1
     local.get $ptr
     local.get $i|11
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.set $child|13
     local.get $child|13
     i32.eqz
     if
      br $for-continue|1
     end
     local.get $child|13
     i32.load $0 offset=12
     i32.const 2
     i32.shl
     local.set $childDataLength
     local.get $outBuffer
     local.get $resultOffset
     i32.add
     local.get $child|13
     i32.load $0 offset=4
     local.get $childDataLength
     memory.copy $0 $0
     local.get $resultOffset
     local.get $childDataLength
     i32.add
     local.set $resultOffset
    end
    local.get $i|11
    i32.const 1
    i32.add
    local.set $i|11
    br $for-loop|1
   end
  end
  i32.const 0
  drop
  local.get $outArray
  local.set $15
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $15
 )
 (func $~lib/array/Array<~lib/array/Array<~lib/string/String|null>>#flat (type $i32_=>_i32) (param $this i32) (result i32)
  (local $ptr i32)
  (local $len i32)
  (local $size i32)
  (local $i i32)
  (local $5 i32)
  (local $child i32)
  (local $byteLength i32)
  (local $outBuffer i32)
  (local $outArray i32)
  (local $resultOffset i32)
  (local $i|11 i32)
  (local $12 i32)
  (local $child|13 i32)
  (local $childDataLength i32)
  (local $i|15 i32)
  (local $16 i32)
  (local $ref i32)
  (local $18 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  i32.const 1
  i32.eqz
  drop
  local.get $this
  i32.load $0 offset=4
  local.set $ptr
  local.get $this
  i32.load $0 offset=12
  local.set $len
  i32.const 0
  local.set $size
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $len
   i32.lt_s
   local.set $5
   local.get $5
   if
    local.get $ptr
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $child
    local.get $size
    local.get $child
    i32.const 0
    i32.eq
    if (result i32)
     i32.const 0
    else
     local.get $child
     i32.load $0 offset=12
    end
    i32.add
    local.set $size
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $size
  i32.const 2
  i32.shl
  local.set $byteLength
  global.get $~lib/memory/__stack_pointer
  local.get $byteLength
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $outBuffer
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.const 34
  call $~lib/rt/itcms/__new
  local.tee $outArray
  i32.store $0 offset=4
  local.get $outArray
  local.get $size
  i32.store $0 offset=12
  local.get $outArray
  local.get $byteLength
  i32.store $0 offset=8
  local.get $outArray
  local.get $outBuffer
  i32.store $0 offset=4
  local.get $outArray
  local.get $outBuffer
  i32.store $0
  local.get $outArray
  local.get $outBuffer
  i32.const 0
  call $~lib/rt/itcms/__link
  i32.const 0
  local.set $resultOffset
  i32.const 0
  local.set $i|11
  loop $for-loop|1
   local.get $i|11
   local.get $len
   i32.lt_s
   local.set $12
   local.get $12
   if
    block $for-continue|1
     local.get $ptr
     local.get $i|11
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.set $child|13
     local.get $child|13
     i32.eqz
     if
      br $for-continue|1
     end
     local.get $child|13
     i32.load $0 offset=12
     i32.const 2
     i32.shl
     local.set $childDataLength
     local.get $outBuffer
     local.get $resultOffset
     i32.add
     local.get $child|13
     i32.load $0 offset=4
     local.get $childDataLength
     memory.copy $0 $0
     local.get $resultOffset
     local.get $childDataLength
     i32.add
     local.set $resultOffset
    end
    local.get $i|11
    i32.const 1
    i32.add
    local.set $i|11
    br $for-loop|1
   end
  end
  i32.const 1
  drop
  i32.const 0
  local.set $i|15
  loop $for-loop|2
   local.get $i|15
   local.get $size
   i32.lt_s
   local.set $16
   local.get $16
   if
    local.get $outBuffer
    local.get $i|15
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $ref
    local.get $outBuffer
    local.get $ref
    i32.const 1
    call $~lib/rt/itcms/__link
    local.get $i|15
    i32.const 1
    i32.add
    local.set $i|15
    br $for-loop|2
   end
  end
  local.get $outArray
  local.set $18
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $18
 )
 (func $~lib/array/Array<~lib/string/String|null>#__get (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $index
  local.get $this
  i32.load $0 offset=12
  i32.ge_u
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.tee $value
  i32.store $0
  i32.const 1
  drop
  i32.const 1
  i32.eqz
  drop
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
)
