(module
 (type $i32_i32_=>_i32 (func_subtype (param i32 i32) (result i32) func))
 (type $i32_i32_i32_=>_i32 (func_subtype (param i32 i32 i32) (result i32) func))
 (type $i32_i32_=>_none (func_subtype (param i32 i32) func))
 (type $i32_i32_i32_=>_none (func_subtype (param i32 i32 i32) func))
 (type $i32_=>_i32 (func_subtype (param i32) (result i32) func))
 (type $i32_i32_i32_i32_=>_i32 (func_subtype (param i32 i32 i32 i32) (result i32) func))
 (type $i64_i32_i32_=>_i32 (func_subtype (param i64 i32 i32) (result i32) func))
 (type $i64_i64_=>_i32 (func_subtype (param i64 i64) (result i32) func))
 (type $f32_i32_i32_=>_i32 (func_subtype (param f32 i32 i32) (result i32) func))
 (type $f64_i32_i32_=>_i32 (func_subtype (param f64 i32 i32) (result i32) func))
 (type $i32_i32_i32_i32_i32_=>_none (func_subtype (param i32 i32 i32 i32 i32) func))
 (type $f64_f64_=>_i32 (func_subtype (param f64 f64) (result i32) func))
 (type $f32_f32_=>_i32 (func_subtype (param f32 f32) (result i32) func))
 (type $i32_i32_i32_i32_i32_i32_=>_none (func_subtype (param i32 i32 i32 i32 i32 i32) func))
 (type $i64_i64_i32_i32_=>_i64 (func_subtype (param i64 i64 i32 i32) (result i64) func))
 (type $i32_i32_=>_i64 (func_subtype (param i32 i32) (result i64) func))
 (type $i32_=>_none (func_subtype (param i32) func))
 (type $none_=>_none (func_subtype func))
 (type $i32_i64_i32_=>_i32 (func_subtype (param i32 i64 i32) (result i32) func))
 (type $i32_i32_=>_f64 (func_subtype (param i32 i32) (result f64) func))
 (type $i32_i32_i64_=>_i64 (func_subtype (param i32 i32 i64) (result i64) func))
 (type $f32_f32_i32_i32_=>_f32 (func_subtype (param f32 f32 i32 i32) (result f32) func))
 (type $f64_f64_i32_i32_=>_f64 (func_subtype (param f64 f64 i32 i32) (result f64) func))
 (type $i32_i32_=>_f32 (func_subtype (param i32 i32) (result f32) func))
 (type $i64_i32_i32_=>_i64 (func_subtype (param i64 i32 i32) (result i64) func))
 (type $i64_i32_i32_=>_none (func_subtype (param i64 i32 i32) func))
 (type $i32_f32_i32_=>_i32 (func_subtype (param i32 f32 i32) (result i32) func))
 (type $i32_f64_i32_=>_i32 (func_subtype (param i32 f64 i32) (result i32) func))
 (type $i32_i32_i64_=>_none (func_subtype (param i32 i32 i64) func))
 (type $i32_i32_f32_=>_f32 (func_subtype (param i32 i32 f32) (result f32) func))
 (type $i32_i32_f64_=>_f64 (func_subtype (param i32 i32 f64) (result f64) func))
 (type $f32_i32_i32_=>_f32 (func_subtype (param f32 i32 i32) (result f32) func))
 (type $f64_i32_i32_=>_f64 (func_subtype (param f64 i32 i32) (result f64) func))
 (type $f32_i32_i32_=>_none (func_subtype (param f32 i32 i32) func))
 (type $f64_i32_i32_=>_none (func_subtype (param f64 i32 i32) func))
 (type $i32_i32_i32_i32_=>_none (func_subtype (param i32 i32 i32 i32) func))
 (type $none_=>_i32 (func_subtype (result i32) func))
 (type $i32_i32_f64_=>_none (func_subtype (param i32 i32 f64) func))
 (type $i32_i32_i32_i32_i32_=>_i32 (func_subtype (param i32 i32 i32 i32 i32) (result i32) func))
 (type $i32_i32_f32_=>_none (func_subtype (param i32 i32 f32) func))
 (type $f32_f32_=>_f32 (func_subtype (param f32 f32) (result f32) func))
 (type $f64_f64_=>_f64 (func_subtype (param f64 f64) (result f64) func))
 (import "env" "abort" (func $~lib/builtins/abort (param i32 i32 i32 i32)))
 (import "env" "_g" (func $~lib/builtins/_g (param i32 i32) (result i32)))
 (global $~lib/typedarray/Int8Array.BYTES_PER_ELEMENT i32 (i32.const 1))
 (global $~lib/typedarray/Uint8Array.BYTES_PER_ELEMENT i32 (i32.const 1))
 (global $~lib/typedarray/Uint8ClampedArray.BYTES_PER_ELEMENT i32 (i32.const 1))
 (global $~lib/typedarray/Int16Array.BYTES_PER_ELEMENT i32 (i32.const 2))
 (global $~lib/typedarray/Uint16Array.BYTES_PER_ELEMENT i32 (i32.const 2))
 (global $~lib/typedarray/Int32Array.BYTES_PER_ELEMENT i32 (i32.const 4))
 (global $~lib/typedarray/Uint32Array.BYTES_PER_ELEMENT i32 (i32.const 4))
 (global $~lib/typedarray/Int64Array.BYTES_PER_ELEMENT i32 (i32.const 8))
 (global $~lib/typedarray/Uint64Array.BYTES_PER_ELEMENT i32 (i32.const 8))
 (global $~lib/typedarray/Float32Array.BYTES_PER_ELEMENT i32 (i32.const 4))
 (global $~lib/typedarray/Float64Array.BYTES_PER_ELEMENT i32 (i32.const 8))
 (global $~lib/shared/runtime/Runtime.Stub i32 (i32.const 0))
 (global $~lib/shared/runtime/Runtime.Minimal i32 (i32.const 1))
 (global $~lib/shared/runtime/Runtime.Incremental i32 (i32.const 2))
 (global $~lib/rt/itcms/total (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/threshold (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/state (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/visitCount (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/pinSpace (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/iter (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/toSpace (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/white (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/fromSpace (mut i32) (i32.const 0))
 (global $~lib/rt/tlsf/ROOT (mut i32) (i32.const 0))
 (global $~lib/native/ASC_LOW_MEMORY_LIMIT i32 (i32.const 0))
 (global $~lib/native/ASC_RUNTIME i32 (i32.const 2))
 (global $~lib/native/ASC_SHRINK_LEVEL i32 (i32.const 0))
 (global $~argumentsLength (mut i32) (i32.const 0))
 (global $~lib/builtins/u32.MAX_VALUE i32 (i32.const -1))
 (global $~lib/builtins/i32.MAX_VALUE i32 (i32.const 2147483647))
 (global $std/typedarray/forEachCallCount (mut i32) (i32.const 0))
 (global $std/typedarray/forEachSelf (mut i32) (i32.const 0))
 (global $std/typedarray/forEachValues i32 (i32.const 5680))
 (global $std/typedarray/testArrayReverseValues i32 (i32.const 6144))
 (global $std/typedarray/testArrayIndexOfAndLastIndexOfValues i32 (i32.const 6256))
 (global $std/typedarray/testArrayWrapValues i32 (i32.const 6368))
 (global $std/typedarray/setSource1 (mut i32) (i32.const 6448))
 (global $std/typedarray/setSource2 (mut i32) (i32.const 6528))
 (global $std/typedarray/setSource3 (mut i32) (i32.const 6624))
 (global $std/typedarray/setSource7 (mut i32) (i32.const 6704))
 (global $~lib/rt/__rtti_base i32 (i32.const 10896))
 (global $~lib/memory/__data_end i32 (i32.const 11524))
 (global $~lib/memory/__stack_pointer (mut i32) (i32.const 44292))
 (global $~lib/memory/__heap_base i32 (i32.const 44292))
 (memory $0 1)
 (data (i32.const 12) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\0e\00\00\00Invalid length\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 60) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\14\00\00\00Allocation too large\00\00\00\00\00\00\00\00")
 (data (i32.const 112) "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 144) "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 172) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\12\00\00\00Index out of range\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 224) "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 252) "\1c\00\00\00\00\00\00\00\00\00\00\00\0e\00\00\00\08\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 284) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\05\00\00\00\01\01\01\04\05\00\00\00\00\00\00\00")
 (data (i32.const 316) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 348) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\05\00\00\00\01\01\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 380) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\05\00\00\00\01\01\00\02\02\00\00\00\00\00\00\00")
 (data (i32.const 412) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\05\00\00\00\01\01\00\02\02\00\00\00\00\00\00\00")
 (data (i32.const 444) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 476) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\05\00\00\00\01\00\00\00\02\00\00\00\00\00\00\00")
 (data (i32.const 508) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 556) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 604) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 652) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\01\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 700) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\01\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 748) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 780) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 828) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\04\00\00\00\05\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 876) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\04\00\00\00\05\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 924) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 972) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1020) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\04\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1068) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\04\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1116) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\03\00\00\00\04\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1164) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\04\00\00\00\05\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1212) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\04\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1260) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\03\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1308) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\03\00\00\00\04\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1356) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1404) "\1c\00\00\00\00\00\00\00\00\00\00\00\11\00\00\00\08\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1436) "\1c\00\00\00\00\00\00\00\00\00\00\00\12\00\00\00\08\00\00\00\03\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1468) "\1c\00\00\00\00\00\00\00\00\00\00\00\13\00\00\00\08\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1500) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1532) "\1c\00\00\00\00\00\00\00\00\00\00\00\15\00\00\00\08\00\00\00\06\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1564) "\1c\00\00\00\00\00\00\00\00\00\00\00\16\00\00\00\08\00\00\00\07\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1596) "\1c\00\00\00\00\00\00\00\00\00\00\00\17\00\00\00\08\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1628) "\1c\00\00\00\00\00\00\00\00\00\00\00\18\00\00\00\08\00\00\00\t\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1660) "\1c\00\00\00\00\00\00\00\00\00\00\00\19\00\00\00\08\00\00\00\n\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1692) "\1c\00\00\00\00\00\00\00\00\00\00\00\1a\00\00\00\08\00\00\00\0b\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1724) "\1c\00\00\00\00\00\00\00\00\00\00\00\1b\00\00\00\08\00\00\00\0c\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1756) "\1c\00\00\00\00\00\00\00\00\00\00\00\11\00\00\00\08\00\00\00\r\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1788) "\1c\00\00\00\00\00\00\00\00\00\00\00\12\00\00\00\08\00\00\00\0e\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1820) "\1c\00\00\00\00\00\00\00\00\00\00\00\13\00\00\00\08\00\00\00\0f\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1852) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00\10\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1884) "\1c\00\00\00\00\00\00\00\00\00\00\00\15\00\00\00\08\00\00\00\11\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1916) "\1c\00\00\00\00\00\00\00\00\00\00\00\16\00\00\00\08\00\00\00\12\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1948) "\1c\00\00\00\00\00\00\00\00\00\00\00\17\00\00\00\08\00\00\00\13\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1980) "\1c\00\00\00\00\00\00\00\00\00\00\00\18\00\00\00\08\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2012) "\1c\00\00\00\00\00\00\00\00\00\00\00\19\00\00\00\08\00\00\00\15\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2044) "\1c\00\00\00\00\00\00\00\00\00\00\00\1a\00\00\00\08\00\00\00\16\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2076) "\1c\00\00\00\00\00\00\00\00\00\00\00\1b\00\00\00\08\00\00\00\17\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2108) "\1c\00\00\00\00\00\00\00\00\00\00\00\1c\00\00\00\08\00\00\00\18\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2140) "\1c\00\00\00\00\00\00\00\00\00\00\00\1d\00\00\00\08\00\00\00\19\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2172) "\1c\00\00\00\00\00\00\00\00\00\00\00\1e\00\00\00\08\00\00\00\1a\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2204) "\1c\00\00\00\00\00\00\00\00\00\00\00\1f\00\00\00\08\00\00\00\1b\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2236) "\1c\00\00\00\00\00\00\00\00\00\00\00 \00\00\00\08\00\00\00\1c\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2268) "\1c\00\00\00\00\00\00\00\00\00\00\00!\00\00\00\08\00\00\00\1d\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2300) "\1c\00\00\00\00\00\00\00\00\00\00\00\"\00\00\00\08\00\00\00\1e\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2332) "\1c\00\00\00\00\00\00\00\00\00\00\00#\00\00\00\08\00\00\00\1f\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2364) "\1c\00\00\00\00\00\00\00\00\00\00\00$\00\00\00\08\00\00\00 \00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2396) "\1c\00\00\00\00\00\00\00\00\00\00\00%\00\00\00\08\00\00\00!\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2428) "\1c\00\00\00\00\00\00\00\00\00\00\00&\00\00\00\08\00\00\00\"\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2460) "\1c\00\00\00\00\00\00\00\00\00\00\00\'\00\00\00\08\00\00\00#\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2492) "\1c\00\00\00\00\00\00\00\00\00\00\00(\00\00\00\08\00\00\00$\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2524) "\1c\00\00\00\00\00\00\00\00\00\00\00)\00\00\00\08\00\00\00%\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2556) "\1c\00\00\00\00\00\00\00\00\00\00\00*\00\00\00\08\00\00\00&\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2588) "\1c\00\00\00\00\00\00\00\00\00\00\00+\00\00\00\08\00\00\00\'\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2620) "\1c\00\00\00\00\00\00\00\00\00\00\00,\00\00\00\08\00\00\00(\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2652) "\1c\00\00\00\00\00\00\00\00\00\00\00-\00\00\00\08\00\00\00)\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2684) "\1c\00\00\00\00\00\00\00\00\00\00\00.\00\00\00\08\00\00\00*\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2716) "\1c\00\00\00\00\00\00\00\00\00\00\00/\00\00\00\08\00\00\00+\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2748) "\1c\00\00\00\00\00\00\00\00\00\00\000\00\00\00\08\00\00\00,\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2780) "\1c\00\00\00\00\00\00\00\00\00\00\001\00\00\00\08\00\00\00-\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2812) "\1c\00\00\00\00\00\00\00\00\00\00\00\'\00\00\00\08\00\00\00.\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2844) "\1c\00\00\00\00\00\00\00\00\00\00\00\'\00\00\00\08\00\00\00/\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2876) "\1c\00\00\00\00\00\00\00\00\00\00\00(\00\00\00\08\00\00\000\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2908) "\1c\00\00\00\00\00\00\00\00\00\00\00(\00\00\00\08\00\00\001\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2940) "\1c\00\00\00\00\00\00\00\00\00\00\00)\00\00\00\08\00\00\002\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2972) "\1c\00\00\00\00\00\00\00\00\00\00\00)\00\00\00\08\00\00\003\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3004) "\1c\00\00\00\00\00\00\00\00\00\00\00*\00\00\00\08\00\00\004\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3036) "\1c\00\00\00\00\00\00\00\00\00\00\00*\00\00\00\08\00\00\005\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3068) "\1c\00\00\00\00\00\00\00\00\00\00\00+\00\00\00\08\00\00\006\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3100) "\1c\00\00\00\00\00\00\00\00\00\00\00+\00\00\00\08\00\00\007\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3132) "\1c\00\00\00\00\00\00\00\00\00\00\00,\00\00\00\08\00\00\008\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3164) "\1c\00\00\00\00\00\00\00\00\00\00\00,\00\00\00\08\00\00\009\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3196) "\1c\00\00\00\00\00\00\00\00\00\00\00-\00\00\00\08\00\00\00:\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3228) "\1c\00\00\00\00\00\00\00\00\00\00\00-\00\00\00\08\00\00\00;\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3260) "\1c\00\00\00\00\00\00\00\00\00\00\00.\00\00\00\08\00\00\00<\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3292) "\1c\00\00\00\00\00\00\00\00\00\00\00.\00\00\00\08\00\00\00=\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3324) "\1c\00\00\00\00\00\00\00\00\00\00\00/\00\00\00\08\00\00\00>\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3356) "\1c\00\00\00\00\00\00\00\00\00\00\00/\00\00\00\08\00\00\00?\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3388) "\1c\00\00\00\00\00\00\00\00\00\00\000\00\00\00\08\00\00\00@\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3420) "\1c\00\00\00\00\00\00\00\00\00\00\000\00\00\00\08\00\00\00A\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3452) "\1c\00\00\00\00\00\00\00\00\00\00\001\00\00\00\08\00\00\00B\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3484) "\1c\00\00\00\00\00\00\00\00\00\00\001\00\00\00\08\00\00\00C\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3516) "\1c\00\00\00\00\00\00\00\00\00\00\00\'\00\00\00\08\00\00\00D\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3548) "\1c\00\00\00\00\00\00\00\00\00\00\00\'\00\00\00\08\00\00\00E\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3580) "\1c\00\00\00\00\00\00\00\00\00\00\00(\00\00\00\08\00\00\00F\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3612) "\1c\00\00\00\00\00\00\00\00\00\00\00(\00\00\00\08\00\00\00G\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3644) "\1c\00\00\00\00\00\00\00\00\00\00\00)\00\00\00\08\00\00\00H\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3676) "\1c\00\00\00\00\00\00\00\00\00\00\00)\00\00\00\08\00\00\00I\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3708) "\1c\00\00\00\00\00\00\00\00\00\00\00*\00\00\00\08\00\00\00J\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3740) "\1c\00\00\00\00\00\00\00\00\00\00\00*\00\00\00\08\00\00\00K\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3772) "\1c\00\00\00\00\00\00\00\00\00\00\00+\00\00\00\08\00\00\00L\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3804) "\1c\00\00\00\00\00\00\00\00\00\00\00+\00\00\00\08\00\00\00M\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3836) "\1c\00\00\00\00\00\00\00\00\00\00\00,\00\00\00\08\00\00\00N\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3868) "\1c\00\00\00\00\00\00\00\00\00\00\00,\00\00\00\08\00\00\00O\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3900) "\1c\00\00\00\00\00\00\00\00\00\00\00-\00\00\00\08\00\00\00P\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3932) "\1c\00\00\00\00\00\00\00\00\00\00\00-\00\00\00\08\00\00\00Q\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3964) "\1c\00\00\00\00\00\00\00\00\00\00\00.\00\00\00\08\00\00\00R\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3996) "\1c\00\00\00\00\00\00\00\00\00\00\00.\00\00\00\08\00\00\00S\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4028) "\1c\00\00\00\00\00\00\00\00\00\00\00/\00\00\00\08\00\00\00T\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4060) "\1c\00\00\00\00\00\00\00\00\00\00\00/\00\00\00\08\00\00\00U\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4092) "\1c\00\00\00\00\00\00\00\00\00\00\000\00\00\00\08\00\00\00V\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4124) "\1c\00\00\00\00\00\00\00\00\00\00\000\00\00\00\08\00\00\00W\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4156) "\1c\00\00\00\00\00\00\00\00\00\00\001\00\00\00\08\00\00\00X\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4188) "\1c\00\00\00\00\00\00\00\00\00\00\001\00\00\00\08\00\00\00Y\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4220) "\1c\00\00\00\00\00\00\00\00\00\00\00\'\00\00\00\08\00\00\00Z\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4252) "\1c\00\00\00\00\00\00\00\00\00\00\00\'\00\00\00\08\00\00\00[\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4284) "\1c\00\00\00\00\00\00\00\00\00\00\00(\00\00\00\08\00\00\00\\\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4316) "\1c\00\00\00\00\00\00\00\00\00\00\00(\00\00\00\08\00\00\00]\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4348) "\1c\00\00\00\00\00\00\00\00\00\00\00)\00\00\00\08\00\00\00^\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4380) "\1c\00\00\00\00\00\00\00\00\00\00\00)\00\00\00\08\00\00\00_\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4412) "\1c\00\00\00\00\00\00\00\00\00\00\00*\00\00\00\08\00\00\00`\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4444) "\1c\00\00\00\00\00\00\00\00\00\00\00*\00\00\00\08\00\00\00a\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4476) "\1c\00\00\00\00\00\00\00\00\00\00\00+\00\00\00\08\00\00\00b\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4508) "\1c\00\00\00\00\00\00\00\00\00\00\00+\00\00\00\08\00\00\00c\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4540) "\1c\00\00\00\00\00\00\00\00\00\00\00,\00\00\00\08\00\00\00d\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4572) "\1c\00\00\00\00\00\00\00\00\00\00\00,\00\00\00\08\00\00\00e\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4604) "\1c\00\00\00\00\00\00\00\00\00\00\00-\00\00\00\08\00\00\00f\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4636) "\1c\00\00\00\00\00\00\00\00\00\00\00-\00\00\00\08\00\00\00g\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4668) "\1c\00\00\00\00\00\00\00\00\00\00\00.\00\00\00\08\00\00\00h\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4700) "\1c\00\00\00\00\00\00\00\00\00\00\00.\00\00\00\08\00\00\00i\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4732) "\1c\00\00\00\00\00\00\00\00\00\00\00/\00\00\00\08\00\00\00j\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4764) "\1c\00\00\00\00\00\00\00\00\00\00\00/\00\00\00\08\00\00\00k\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4796) "\1c\00\00\00\00\00\00\00\00\00\00\000\00\00\00\08\00\00\00l\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4828) "\1c\00\00\00\00\00\00\00\00\00\00\000\00\00\00\08\00\00\00m\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4860) "\1c\00\00\00\00\00\00\00\00\00\00\001\00\00\00\08\00\00\00n\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4892) "\1c\00\00\00\00\00\00\00\00\00\00\001\00\00\00\08\00\00\00o\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4924) "\1c\00\00\00\00\00\00\00\00\00\00\00\'\00\00\00\08\00\00\00p\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4956) "\1c\00\00\00\00\00\00\00\00\00\00\00\'\00\00\00\08\00\00\00q\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4988) "\1c\00\00\00\00\00\00\00\00\00\00\00(\00\00\00\08\00\00\00r\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5020) "\1c\00\00\00\00\00\00\00\00\00\00\00(\00\00\00\08\00\00\00s\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5052) "\1c\00\00\00\00\00\00\00\00\00\00\00)\00\00\00\08\00\00\00t\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5084) "\1c\00\00\00\00\00\00\00\00\00\00\00)\00\00\00\08\00\00\00u\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5116) "\1c\00\00\00\00\00\00\00\00\00\00\00*\00\00\00\08\00\00\00v\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5148) "\1c\00\00\00\00\00\00\00\00\00\00\00*\00\00\00\08\00\00\00w\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5180) "\1c\00\00\00\00\00\00\00\00\00\00\00+\00\00\00\08\00\00\00x\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5212) "\1c\00\00\00\00\00\00\00\00\00\00\00+\00\00\00\08\00\00\00y\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5244) "\1c\00\00\00\00\00\00\00\00\00\00\00,\00\00\00\08\00\00\00z\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5276) "\1c\00\00\00\00\00\00\00\00\00\00\00,\00\00\00\08\00\00\00{\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5308) "\1c\00\00\00\00\00\00\00\00\00\00\00-\00\00\00\08\00\00\00|\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5340) "\1c\00\00\00\00\00\00\00\00\00\00\00-\00\00\00\08\00\00\00}\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5372) "\1c\00\00\00\00\00\00\00\00\00\00\00.\00\00\00\08\00\00\00~\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5404) "\1c\00\00\00\00\00\00\00\00\00\00\00.\00\00\00\08\00\00\00\7f\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5436) "\1c\00\00\00\00\00\00\00\00\00\00\00/\00\00\00\08\00\00\00\80\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5468) "\1c\00\00\00\00\00\00\00\00\00\00\00/\00\00\00\08\00\00\00\81\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5500) "\1c\00\00\00\00\00\00\00\00\00\00\000\00\00\00\08\00\00\00\82\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5532) "\1c\00\00\00\00\00\00\00\00\00\00\000\00\00\00\08\00\00\00\83\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5564) "\1c\00\00\00\00\00\00\00\00\00\00\001\00\00\00\08\00\00\00\84\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5596) "\1c\00\00\00\00\00\00\00\00\00\00\001\00\00\00\08\00\00\00\85\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5628) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\n\00\00\00\0c\00\00\00\0e\00\00\00")
 (data (i32.const 5660) ",\00\00\00\00\00\00\00\00\00\00\00\10\00\00\00\10\00\00\00\10\16\00\00\10\16\00\00\0c\00\00\00\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5708) "\1c\00\00\00\00\00\00\00\00\00\00\002\00\00\00\08\00\00\00\86\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5740) "\1c\00\00\00\00\00\00\00\00\00\00\003\00\00\00\08\00\00\00\87\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5772) "\1c\00\00\00\00\00\00\00\00\00\00\004\00\00\00\08\00\00\00\88\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5804) "\1c\00\00\00\00\00\00\00\00\00\00\005\00\00\00\08\00\00\00\89\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5836) "\1c\00\00\00\00\00\00\00\00\00\00\006\00\00\00\08\00\00\00\8a\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5868) "\1c\00\00\00\00\00\00\00\00\00\00\007\00\00\00\08\00\00\00\8b\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5900) "\1c\00\00\00\00\00\00\00\00\00\00\008\00\00\00\08\00\00\00\8c\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5932) "\1c\00\00\00\00\00\00\00\00\00\00\009\00\00\00\08\00\00\00\8d\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5964) "\1c\00\00\00\00\00\00\00\00\00\00\00:\00\00\00\08\00\00\00\8e\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5996) "\1c\00\00\00\00\00\00\00\00\00\00\00;\00\00\00\08\00\00\00\8f\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6028) "\1c\00\00\00\00\00\00\00\00\00\00\00<\00\00\00\08\00\00\00\90\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6060) "<\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00$\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\06\00\00\00\07\00\00\00\08\00\00\00\t\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6124) ",\00\00\00\00\00\00\00\00\00\00\00\10\00\00\00\10\00\00\00\c0\17\00\00\c0\17\00\00$\00\00\00\t\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6172) "<\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00,\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\06\00\00\00\07\00\00\00\08\00\00\00\t\00\00\00\n\00\00\00")
 (data (i32.const 6236) ",\00\00\00\00\00\00\00\00\00\00\00\10\00\00\00\10\00\00\000\18\00\000\18\00\00,\00\00\00\0b\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6284) "<\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00,\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\06\00\00\00\07\00\00\00\08\00\00\00\t\00\00\00\n\00\00\00")
 (data (i32.const 6348) ",\00\00\00\00\00\00\00\00\00\00\00\10\00\00\00\10\00\00\00\a0\18\00\00\a0\18\00\00,\00\00\00\0b\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6396) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00")
 (data (i32.const 6428) ",\00\00\00\00\00\00\00\00\00\00\00\10\00\00\00\10\00\00\00\10\19\00\00\10\19\00\00\0c\00\00\00\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6476) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\00\00\80@\00\00\a0@\00\00\c0@")
 (data (i32.const 6508) ",\00\00\00\00\00\00\00\00\00\00\00=\00\00\00\10\00\00\00`\19\00\00`\19\00\00\0c\00\00\00\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6556) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\18\00\00\00\00\00\00\00\00\00\f0\7f\00\00\00\00\00\00\f8\7f\00\00\00\00\00\00\f0\ff\00\00\00\00")
 (data (i32.const 6604) ",\00\00\00\00\00\00\00\00\00\00\00>\00\00\00\10\00\00\00\b0\19\00\00\b0\19\00\00\18\00\00\00\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6652) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\03\00\00\00\92\91\90\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6684) ",\00\00\00\00\00\00\00\00\00\00\00\0f\00\00\00\10\00\00\00\10\1a\00\00\10\1a\00\00\03\00\00\00\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6732) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\n\00\00\00\01\02\03\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6764) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\n\00\00\00\01\02\03\04\05\06\00\00\00\00\00\00")
 (data (i32.const 6796) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\n\00\00\00\01\02\03\04\05\06\07\08\t\00\00\00")
 (data (i32.const 6828) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\n\00\00\00\01\02\00\00\00\06\07\08\t\00\00\00")
 (data (i32.const 6860) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\n\00\00\00defg\e8\e9\ea\92\91\90\00\00")
 (data (i32.const 6892) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\n\00\00\00\01\02\03\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6924) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\n\00\00\00\01\02\03\04\05\06\00\00\00\00\00\00")
 (data (i32.const 6956) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\n\00\00\00\01\02\03\04\05\06\07\08\t\00\00\00")
 (data (i32.const 6988) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\n\00\00\00\01\02\00\00\00\06\07\08\t\00\00\00")
 (data (i32.const 7020) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\n\00\00\00defg\e8\e9\ea\92\91\90\00\00")
 (data (i32.const 7052) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\n\00\00\00\01\02\03\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7084) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\n\00\00\00\01\02\03\04\05\06\00\00\00\00\00\00")
 (data (i32.const 7116) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\n\00\00\00\01\02\03\04\05\06\07\08\t\00\00\00")
 (data (i32.const 7148) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\n\00\00\00\01\02\00\00\00\06\07\08\t\00\00\00")
 (data (i32.const 7180) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\n\00\00\00defg\ff\ff\ff\00\00\00\00\00")
 (data (i32.const 7212) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\02\00\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7260) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\02\00\03\00\04\00\05\00\06\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7308) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\02\00\03\00\04\00\05\00\06\00\07\00\08\00\t\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7356) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\02\00\00\00\00\00\00\00\06\00\07\00\08\00\t\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7404) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00d\00e\00f\00g\00\e8\03\e9\03\ea\03\92\ff\91\ff\90\ff\00\00\00\00\00\00\00\00")
 (data (i32.const 7452) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\02\00\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7500) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\02\00\03\00\04\00\05\00\06\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7548) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\02\00\03\00\04\00\05\00\06\00\07\00\08\00\t\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7596) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\02\00\00\00\00\00\00\00\06\00\07\00\08\00\t\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7644) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00d\00e\00f\00g\00\e8\03\e9\03\ea\03\92\ff\91\ff\90\ff\00\00\00\00\00\00\00\00")
 (data (i32.const 7692) "<\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00(\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7756) "<\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00(\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\06\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7820) "<\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00(\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\06\00\00\00\07\00\00\00\08\00\00\00\t\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7884) "<\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00(\00\00\00\01\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\06\00\00\00\07\00\00\00\08\00\00\00\t\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7948) "<\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00(\00\00\00d\00\00\00e\00\00\00f\00\00\00g\00\00\00\e8\03\00\00\e9\03\00\00\ea\03\00\00\92\ff\ff\ff\91\ff\ff\ff\90\ff\ff\ff\00\00\00\00")
 (data (i32.const 8012) "<\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00(\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8076) "<\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00(\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\06\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8140) "<\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00(\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\06\00\00\00\07\00\00\00\08\00\00\00\t\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8204) "<\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00(\00\00\00\01\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\06\00\00\00\07\00\00\00\08\00\00\00\t\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8268) "<\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00(\00\00\00d\00\00\00e\00\00\00f\00\00\00g\00\00\00\e8\03\00\00\e9\03\00\00\ea\03\00\00\92\ff\ff\ff\91\ff\ff\ff\90\ff\ff\ff\00\00\00\00")
 (data (i32.const 8332) "l\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00P\00\00\00\01\00\00\00\00\00\00\00\02\00\00\00\00\00\00\00\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8444) "l\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00P\00\00\00\01\00\00\00\00\00\00\00\02\00\00\00\00\00\00\00\03\00\00\00\00\00\00\00\04\00\00\00\00\00\00\00\05\00\00\00\00\00\00\00\06\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8556) "l\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00P\00\00\00\01\00\00\00\00\00\00\00\02\00\00\00\00\00\00\00\03\00\00\00\00\00\00\00\04\00\00\00\00\00\00\00\05\00\00\00\00\00\00\00\06\00\00\00\00\00\00\00\07\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00\t\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8668) "l\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00P\00\00\00\01\00\00\00\00\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\06\00\00\00\00\00\00\00\07\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00\t\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8780) "l\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00P\00\00\00d\00\00\00\00\00\00\00e\00\00\00\00\00\00\00f\00\00\00\00\00\00\00g\00\00\00\00\00\00\00\e8\03\00\00\00\00\00\00\e9\03\00\00\00\00\00\00\ea\03\00\00\00\00\00\00\92\ff\ff\ff\ff\ff\ff\ff\91\ff\ff\ff\ff\ff\ff\ff\90\ff\ff\ff\ff\ff\ff\ff\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8892) "l\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00P\00\00\00\01\00\00\00\00\00\00\00\02\00\00\00\00\00\00\00\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 9004) "l\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00P\00\00\00\01\00\00\00\00\00\00\00\02\00\00\00\00\00\00\00\03\00\00\00\00\00\00\00\04\00\00\00\00\00\00\00\05\00\00\00\00\00\00\00\06\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 9116) "l\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00P\00\00\00\01\00\00\00\00\00\00\00\02\00\00\00\00\00\00\00\03\00\00\00\00\00\00\00\04\00\00\00\00\00\00\00\05\00\00\00\00\00\00\00\06\00\00\00\00\00\00\00\07\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00\t\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 9228) "l\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00P\00\00\00\01\00\00\00\00\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\06\00\00\00\00\00\00\00\07\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00\t\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 9340) "l\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00P\00\00\00d\00\00\00\00\00\00\00e\00\00\00\00\00\00\00f\00\00\00\00\00\00\00g\00\00\00\00\00\00\00\e8\03\00\00\00\00\00\00\e9\03\00\00\00\00\00\00\ea\03\00\00\00\00\00\00\92\ff\ff\ff\ff\ff\ff\ff\91\ff\ff\ff\ff\ff\ff\ff\90\ff\ff\ff\ff\ff\ff\ff\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 9452) "<\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00(\00\00\00\00\00\80?\00\00\00@\00\00@@\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 9516) "<\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00(\00\00\00\00\00\80?\00\00\00@\00\00@@\00\00\80@\00\00\a0@\00\00\c0@\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 9580) "<\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00(\00\00\00\00\00\80?\00\00\00@\00\00@@\00\00\80@\00\00\a0@\00\00\c0@\00\00\e0@\00\00\00A\00\00\10A\00\00\00\00\00\00\00\00")
 (data (i32.const 9644) "<\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00(\00\00\00\00\00\c8B\00\00\caB\00\00\ccB\00\00\ceB\00\00zD\00@zD\00\80zD\00\00\dc\c2\00\00\de\c2\00\00\e0\c2\00\00\00\00")
 (data (i32.const 9708) "l\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00P\00\00\00\00\00\00\00\00\00\f0?\00\00\00\00\00\00\00@\00\00\00\00\00\00\08@\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 9820) "l\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00P\00\00\00\00\00\00\00\00\00\f0?\00\00\00\00\00\00\00@\00\00\00\00\00\00\08@\00\00\00\00\00\00\10@\00\00\00\00\00\00\14@\00\00\00\00\00\00\18@\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 9932) "l\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00P\00\00\00\00\00\00\00\00\00\f0?\00\00\00\00\00\00\00@\00\00\00\00\00\00\08@\00\00\00\00\00\00\10@\00\00\00\00\00\00\14@\00\00\00\00\00\00\18@\00\00\00\00\00\00\1c@\00\00\00\00\00\00 @\00\00\00\00\00\00\"@\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10044) "l\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00P\00\00\00\00\00\00\00\00\00Y@\00\00\00\00\00@Y@\00\00\00\00\00\80Y@\00\00\00\00\00\c0Y@\00\00\00\00\00@\8f@\00\00\00\00\00H\8f@\00\00\00\00\00P\8f@\00\00\00\00\00\80[\c0\00\00\00\00\00\c0[\c0\00\00\00\00\00\00\\\c0\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10156) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\n\00\00\00\00\ff\00\00\00d\n\ff\ff\00\00\00")
 (data (i32.const 10188) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\n\00\00\00\01\ffd\ff\00\00d\n\ff\00\00\00")
 (data (i32.const 10220) "\1c\00\00\00\00\00\00\00\00\00\00\00E\00\00\00\08\00\00\00\91\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10252) "\1c\00\00\00\00\00\00\00\00\00\00\00E\00\00\00\08\00\00\00\92\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10284) "\1c\00\00\00\00\00\00\00\00\00\00\00F\00\00\00\08\00\00\00\93\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10316) "\1c\00\00\00\00\00\00\00\00\00\00\00F\00\00\00\08\00\00\00\94\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10348) "\1c\00\00\00\00\00\00\00\00\00\00\00F\00\00\00\08\00\00\00\95\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10380) "\1c\00\00\00\00\00\00\00\00\00\00\00F\00\00\00\08\00\00\00\96\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10412) "\1c\00\00\00\00\00\00\00\00\00\00\00G\00\00\00\08\00\00\00\97\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10444) "\1c\00\00\00\00\00\00\00\00\00\00\00G\00\00\00\08\00\00\00\98\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10476) "\1c\00\00\00\00\00\00\00\00\00\00\00H\00\00\00\08\00\00\00\99\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10508) "\1c\00\00\00\00\00\00\00\00\00\00\00H\00\00\00\08\00\00\00\9a\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10540) "\1c\00\00\00\00\00\00\00\00\00\00\00I\00\00\00\08\00\00\00\9b\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10572) "\1c\00\00\00\00\00\00\00\00\00\00\00I\00\00\00\08\00\00\00\9c\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10604) "\1c\00\00\00\00\00\00\00\00\00\00\00J\00\00\00\08\00\00\00\9d\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10636) "\1c\00\00\00\00\00\00\00\00\00\00\00J\00\00\00\08\00\00\00\9e\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10668) "\1c\00\00\00\00\00\00\00\00\00\00\00K\00\00\00\08\00\00\00\9f\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10700) "\1c\00\00\00\00\00\00\00\00\00\00\00K\00\00\00\08\00\00\00\a0\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10732) "\1c\00\00\00\00\00\00\00\00\00\00\00L\00\00\00\08\00\00\00\a1\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10764) "\1c\00\00\00\00\00\00\00\00\00\00\00L\00\00\00\08\00\00\00\a2\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10796) "\1c\00\00\00\00\00\00\00\00\00\00\00M\00\00\00\08\00\00\00\a3\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10828) "\1c\00\00\00\00\00\00\00\00\00\00\00M\00\00\00\08\00\00\00\a4\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10860) "\1c\00\00\00\00\00\00\00\00\00\00\00\0e\00\00\00\08\00\00\00\a5\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10896) "N\00\00\00 \00\00\00\00\00\00\00 \00\00\00\00\00\00\00\00\00\00\00\00\00\00\00A\08\00\00\02\00\00\00A\00\00\00\02\00\00\00A\00\00\00\02\00\00\00\81\08\00\00\02\00\00\00\81\00\00\00\02\00\00\00\01\t\00\00\02\00\00\00\01\01\00\00\02\00\00\00\01\n\00\00\02\00\00\00\01\02\00\00\02\00\00\00\01\19\00\00\02\00\00\00\01\1a\00\00\02\00\00\00\00\00\00\00\00\00\00\00B\08\00\00\00\00\00\00\02\ta\00\00\00\00\00\00B\00\00\00\00\00\00\00\82\08\00\00\00\00\00\00\82\00\00\00\00\00\00\00\02\01\00\00\00\00\00\00\02\n\00\00\00\00\00\00\02\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (table $0 166 166 funcref)
 (elem $0 (i32.const 1) $~lib/util/sort/COMPARATOR<f64>~anonymous|0 $std/typedarray/testReduce<~lib/typedarray/Int8Array,i8>~anonymous|0 $std/typedarray/testReduce<~lib/typedarray/Uint8Array,u8>~anonymous|0 $std/typedarray/testReduce<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|0 $std/typedarray/testReduce<~lib/typedarray/Int16Array,i16>~anonymous|0 $std/typedarray/testReduce<~lib/typedarray/Uint16Array,u16>~anonymous|0 $std/typedarray/testReduce<~lib/typedarray/Int32Array,i32>~anonymous|0 $std/typedarray/testReduce<~lib/typedarray/Uint32Array,u32>~anonymous|0 $std/typedarray/testReduce<~lib/typedarray/Int64Array,i64>~anonymous|0 $std/typedarray/testReduce<~lib/typedarray/Uint64Array,u64>~anonymous|0 $std/typedarray/testReduce<~lib/typedarray/Float32Array,f32>~anonymous|0 $std/typedarray/testReduce<~lib/typedarray/Float64Array,f64>~anonymous|0 $std/typedarray/testReduceRight<~lib/typedarray/Int8Array,i8>~anonymous|0 $std/typedarray/testReduceRight<~lib/typedarray/Uint8Array,u8>~anonymous|0 $std/typedarray/testReduceRight<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|0 $std/typedarray/testReduceRight<~lib/typedarray/Int16Array,i16>~anonymous|0 $std/typedarray/testReduceRight<~lib/typedarray/Uint16Array,u16>~anonymous|0 $std/typedarray/testReduceRight<~lib/typedarray/Int32Array,i32>~anonymous|0 $std/typedarray/testReduceRight<~lib/typedarray/Uint32Array,u32>~anonymous|0 $std/typedarray/testReduceRight<~lib/typedarray/Int64Array,i64>~anonymous|0 $std/typedarray/testReduceRight<~lib/typedarray/Uint64Array,u64>~anonymous|0 $std/typedarray/testReduceRight<~lib/typedarray/Float32Array,f32>~anonymous|0 $std/typedarray/testReduceRight<~lib/typedarray/Float64Array,f64>~anonymous|0 $std/typedarray/testArrayMap<~lib/typedarray/Int8Array,i8>~anonymous|0 $std/typedarray/testArrayMap<~lib/typedarray/Uint8Array,u8>~anonymous|0 $std/typedarray/testArrayMap<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|0 $std/typedarray/testArrayMap<~lib/typedarray/Int16Array,i16>~anonymous|0 $std/typedarray/testArrayMap<~lib/typedarray/Uint16Array,u16>~anonymous|0 $std/typedarray/testArrayMap<~lib/typedarray/Int32Array,i32>~anonymous|0 $std/typedarray/testArrayMap<~lib/typedarray/Uint32Array,u32>~anonymous|0 $std/typedarray/testArrayMap<~lib/typedarray/Int64Array,i64>~anonymous|0 $std/typedarray/testArrayMap<~lib/typedarray/Uint64Array,u64>~anonymous|0 $std/typedarray/testArrayMap<~lib/typedarray/Float32Array,f32>~anonymous|0 $std/typedarray/testArrayMap<~lib/typedarray/Float64Array,f64>~anonymous|0 $std/typedarray/testArrayFilter<~lib/typedarray/Int8Array,i8>~anonymous|0 $std/typedarray/testArrayFilter<~lib/typedarray/Uint8Array,u8>~anonymous|0 $std/typedarray/testArrayFilter<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|0 $std/typedarray/testArrayFilter<~lib/typedarray/Int16Array,i16>~anonymous|0 $std/typedarray/testArrayFilter<~lib/typedarray/Uint16Array,u16>~anonymous|0 $std/typedarray/testArrayFilter<~lib/typedarray/Int32Array,i32>~anonymous|0 $std/typedarray/testArrayFilter<~lib/typedarray/Uint32Array,u32>~anonymous|0 $std/typedarray/testArrayFilter<~lib/typedarray/Int64Array,i64>~anonymous|0 $std/typedarray/testArrayFilter<~lib/typedarray/Uint64Array,u64>~anonymous|0 $std/typedarray/testArrayFilter<~lib/typedarray/Float32Array,f32>~anonymous|0 $std/typedarray/testArrayFilter<~lib/typedarray/Float64Array,f64>~anonymous|0 $std/typedarray/testArraySome<~lib/typedarray/Int8Array,i8>~anonymous|0 $std/typedarray/testArraySome<~lib/typedarray/Int8Array,i8>~anonymous|1 $std/typedarray/testArraySome<~lib/typedarray/Uint8Array,u8>~anonymous|0 $std/typedarray/testArraySome<~lib/typedarray/Uint8Array,u8>~anonymous|1 $std/typedarray/testArraySome<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|0 $std/typedarray/testArraySome<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|1 $std/typedarray/testArraySome<~lib/typedarray/Int16Array,i16>~anonymous|0 $std/typedarray/testArraySome<~lib/typedarray/Int16Array,i16>~anonymous|1 $std/typedarray/testArraySome<~lib/typedarray/Uint16Array,u16>~anonymous|0 $std/typedarray/testArraySome<~lib/typedarray/Uint16Array,u16>~anonymous|1 $std/typedarray/testArraySome<~lib/typedarray/Int32Array,i32>~anonymous|0 $std/typedarray/testArraySome<~lib/typedarray/Int32Array,i32>~anonymous|1 $std/typedarray/testArraySome<~lib/typedarray/Uint32Array,u32>~anonymous|0 $std/typedarray/testArraySome<~lib/typedarray/Uint32Array,u32>~anonymous|1 $std/typedarray/testArraySome<~lib/typedarray/Int64Array,i64>~anonymous|0 $std/typedarray/testArraySome<~lib/typedarray/Int64Array,i64>~anonymous|1 $std/typedarray/testArraySome<~lib/typedarray/Uint64Array,u64>~anonymous|0 $std/typedarray/testArraySome<~lib/typedarray/Uint64Array,u64>~anonymous|1 $std/typedarray/testArraySome<~lib/typedarray/Float32Array,f32>~anonymous|0 $std/typedarray/testArraySome<~lib/typedarray/Float32Array,f32>~anonymous|1 $std/typedarray/testArraySome<~lib/typedarray/Float64Array,f64>~anonymous|0 $std/typedarray/testArraySome<~lib/typedarray/Float64Array,f64>~anonymous|1 $std/typedarray/testArrayFindIndex<~lib/typedarray/Int8Array,i8>~anonymous|0 $std/typedarray/testArrayFindIndex<~lib/typedarray/Int8Array,i8>~anonymous|1 $std/typedarray/testArrayFindIndex<~lib/typedarray/Uint8Array,u8>~anonymous|0 $std/typedarray/testArrayFindIndex<~lib/typedarray/Uint8Array,u8>~anonymous|1 $std/typedarray/testArrayFindIndex<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|0 $std/typedarray/testArrayFindIndex<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|1 $std/typedarray/testArrayFindIndex<~lib/typedarray/Int16Array,i16>~anonymous|0 $std/typedarray/testArrayFindIndex<~lib/typedarray/Int16Array,i16>~anonymous|1 $std/typedarray/testArrayFindIndex<~lib/typedarray/Uint16Array,u16>~anonymous|0 $std/typedarray/testArrayFindIndex<~lib/typedarray/Uint16Array,u16>~anonymous|1 $std/typedarray/testArrayFindIndex<~lib/typedarray/Int32Array,i32>~anonymous|0 $std/typedarray/testArrayFindIndex<~lib/typedarray/Int32Array,i32>~anonymous|1 $std/typedarray/testArrayFindIndex<~lib/typedarray/Uint32Array,u32>~anonymous|0 $std/typedarray/testArrayFindIndex<~lib/typedarray/Uint32Array,u32>~anonymous|1 $std/typedarray/testArrayFindIndex<~lib/typedarray/Int64Array,i64>~anonymous|0 $std/typedarray/testArrayFindIndex<~lib/typedarray/Int64Array,i64>~anonymous|1 $std/typedarray/testArrayFindIndex<~lib/typedarray/Uint64Array,u64>~anonymous|0 $std/typedarray/testArrayFindIndex<~lib/typedarray/Uint64Array,u64>~anonymous|1 $std/typedarray/testArrayFindIndex<~lib/typedarray/Float32Array,f32>~anonymous|0 $std/typedarray/testArrayFindIndex<~lib/typedarray/Float32Array,f32>~anonymous|1 $std/typedarray/testArrayFindIndex<~lib/typedarray/Float64Array,f64>~anonymous|0 $std/typedarray/testArrayFindIndex<~lib/typedarray/Float64Array,f64>~anonymous|1 $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Int8Array,i8>~anonymous|0 $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Int8Array,i8>~anonymous|1 $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Uint8Array,u8>~anonymous|0 $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Uint8Array,u8>~anonymous|1 $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|0 $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|1 $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Int16Array,i16>~anonymous|0 $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Int16Array,i16>~anonymous|1 $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Uint16Array,u16>~anonymous|0 $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Uint16Array,u16>~anonymous|1 $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Int32Array,i32>~anonymous|0 $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Int32Array,i32>~anonymous|1 $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Uint32Array,u32>~anonymous|0 $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Uint32Array,u32>~anonymous|1 $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Int64Array,i64>~anonymous|0 $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Int64Array,i64>~anonymous|1 $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Uint64Array,u64>~anonymous|0 $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Uint64Array,u64>~anonymous|1 $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Float32Array,f32>~anonymous|0 $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Float32Array,f32>~anonymous|1 $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Float64Array,f64>~anonymous|0 $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Float64Array,f64>~anonymous|1 $std/typedarray/testArrayEvery<~lib/typedarray/Int8Array,i8>~anonymous|0 $std/typedarray/testArrayEvery<~lib/typedarray/Int8Array,i8>~anonymous|1 $std/typedarray/testArrayEvery<~lib/typedarray/Uint8Array,u8>~anonymous|0 $std/typedarray/testArrayEvery<~lib/typedarray/Uint8Array,u8>~anonymous|1 $std/typedarray/testArrayEvery<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|0 $std/typedarray/testArrayEvery<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|1 $std/typedarray/testArrayEvery<~lib/typedarray/Int16Array,i16>~anonymous|0 $std/typedarray/testArrayEvery<~lib/typedarray/Int16Array,i16>~anonymous|1 $std/typedarray/testArrayEvery<~lib/typedarray/Uint16Array,u16>~anonymous|0 $std/typedarray/testArrayEvery<~lib/typedarray/Uint16Array,u16>~anonymous|1 $std/typedarray/testArrayEvery<~lib/typedarray/Int32Array,i32>~anonymous|0 $std/typedarray/testArrayEvery<~lib/typedarray/Int32Array,i32>~anonymous|1 $std/typedarray/testArrayEvery<~lib/typedarray/Uint32Array,u32>~anonymous|0 $std/typedarray/testArrayEvery<~lib/typedarray/Uint32Array,u32>~anonymous|1 $std/typedarray/testArrayEvery<~lib/typedarray/Int64Array,i64>~anonymous|0 $std/typedarray/testArrayEvery<~lib/typedarray/Int64Array,i64>~anonymous|1 $std/typedarray/testArrayEvery<~lib/typedarray/Uint64Array,u64>~anonymous|0 $std/typedarray/testArrayEvery<~lib/typedarray/Uint64Array,u64>~anonymous|1 $std/typedarray/testArrayEvery<~lib/typedarray/Float32Array,f32>~anonymous|0 $std/typedarray/testArrayEvery<~lib/typedarray/Float32Array,f32>~anonymous|1 $std/typedarray/testArrayEvery<~lib/typedarray/Float64Array,f64>~anonymous|0 $std/typedarray/testArrayEvery<~lib/typedarray/Float64Array,f64>~anonymous|1 $std/typedarray/testArrayForEach<~lib/typedarray/Int8Array,i8>~anonymous|0 $std/typedarray/testArrayForEach<~lib/typedarray/Uint8Array,u8>~anonymous|0 $std/typedarray/testArrayForEach<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|0 $std/typedarray/testArrayForEach<~lib/typedarray/Int16Array,i16>~anonymous|0 $std/typedarray/testArrayForEach<~lib/typedarray/Uint16Array,u16>~anonymous|0 $std/typedarray/testArrayForEach<~lib/typedarray/Int32Array,i32>~anonymous|0 $std/typedarray/testArrayForEach<~lib/typedarray/Uint32Array,u32>~anonymous|0 $std/typedarray/testArrayForEach<~lib/typedarray/Int64Array,i64>~anonymous|0 $std/typedarray/testArrayForEach<~lib/typedarray/Uint64Array,u64>~anonymous|0 $std/typedarray/testArrayForEach<~lib/typedarray/Float32Array,f32>~anonymous|0 $std/typedarray/testArrayForEach<~lib/typedarray/Float64Array,f64>~anonymous|0 $~lib/util/sort/COMPARATOR<i8>~anonymous|0 $std/typedarray/testArraySort<~lib/typedarray/Int8Array,i8>~anonymous|0 $~lib/util/sort/COMPARATOR<u8>~anonymous|0 $std/typedarray/testArraySort<~lib/typedarray/Uint8Array,u8>~anonymous|0 $~lib/util/sort/COMPARATOR<u8>~anonymous|1 $std/typedarray/testArraySort<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|0 $~lib/util/sort/COMPARATOR<i16>~anonymous|0 $std/typedarray/testArraySort<~lib/typedarray/Int16Array,i16>~anonymous|0 $~lib/util/sort/COMPARATOR<u16>~anonymous|0 $std/typedarray/testArraySort<~lib/typedarray/Uint16Array,u16>~anonymous|0 $~lib/util/sort/COMPARATOR<i32>~anonymous|0 $std/typedarray/testArraySort<~lib/typedarray/Int32Array,i32>~anonymous|0 $~lib/util/sort/COMPARATOR<u32>~anonymous|0 $std/typedarray/testArraySort<~lib/typedarray/Uint32Array,u32>~anonymous|0 $~lib/util/sort/COMPARATOR<i64>~anonymous|0 $std/typedarray/testArraySort<~lib/typedarray/Int64Array,i64>~anonymous|0 $~lib/util/sort/COMPARATOR<u64>~anonymous|0 $std/typedarray/testArraySort<~lib/typedarray/Uint64Array,u64>~anonymous|0 $~lib/util/sort/COMPARATOR<f32>~anonymous|0 $std/typedarray/testArraySort<~lib/typedarray/Float32Array,f32>~anonymous|0 $std/typedarray/testArraySort<~lib/typedarray/Float64Array,f64>~anonymous|0)
 (export "memory" (memory $0))
 (start $~start)
 (func $~lib/rt/itcms/Object#set:nextWithColor (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=4
 )
 (func $~lib/rt/itcms/Object#set:prev (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=8
 )
 (func $~lib/rt/itcms/initLazy (type $i32_=>_i32) (param $space i32) (result i32)
  local.get $space
  local.get $space
  call $~lib/rt/itcms/Object#set:nextWithColor
  local.get $space
  local.get $space
  call $~lib/rt/itcms/Object#set:prev
  local.get $space
 )
 (func $~lib/rt/itcms/Object#get:next (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
 )
 (func $~lib/rt/itcms/Object#get:color (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  i32.const 3
  i32.and
 )
 (func $~lib/rt/itcms/visitRoots (type $i32_=>_none) (param $cookie i32)
  (local $pn i32)
  (local $iter i32)
  (local $3 i32)
  local.get $cookie
  call $~lib/rt/__visit_globals
  global.get $~lib/rt/itcms/pinSpace
  local.set $pn
  local.get $pn
  call $~lib/rt/itcms/Object#get:next
  local.set $iter
  loop $while-continue|0
   local.get $iter
   local.get $pn
   i32.ne
   local.set $3
   local.get $3
   if
    i32.const 1
    drop
    local.get $iter
    call $~lib/rt/itcms/Object#get:color
    i32.const 3
    i32.eq
    i32.eqz
    if
     unreachable
    end
    local.get $iter
    i32.const 20
    i32.add
    local.get $cookie
    call $~lib/rt/__visit_members
    local.get $iter
    call $~lib/rt/itcms/Object#get:next
    local.set $iter
    br $while-continue|0
   end
  end
 )
 (func $~lib/rt/itcms/Object#set:color (type $i32_i32_=>_none) (param $this i32) (param $color i32)
  local.get $this
  local.get $this
  i32.load $0 offset=4
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  local.get $color
  i32.or
  call $~lib/rt/itcms/Object#set:nextWithColor
 )
 (func $~lib/rt/itcms/Object#set:next (type $i32_i32_=>_none) (param $this i32) (param $obj i32)
  local.get $this
  local.get $obj
  local.get $this
  i32.load $0 offset=4
  i32.const 3
  i32.and
  i32.or
  call $~lib/rt/itcms/Object#set:nextWithColor
 )
 (func $~lib/rt/itcms/Object#unlink (type $i32_=>_none) (param $this i32)
  (local $next i32)
  (local $prev i32)
  local.get $this
  call $~lib/rt/itcms/Object#get:next
  local.set $next
  local.get $next
  i32.const 0
  i32.eq
  if
   i32.const 1
   drop
   local.get $this
   i32.load $0 offset=8
   i32.const 0
   i32.eq
   if (result i32)
    local.get $this
    global.get $~lib/memory/__heap_base
    i32.lt_u
   else
    i32.const 0
   end
   i32.eqz
   if
    unreachable
   end
   return
  end
  local.get $this
  i32.load $0 offset=8
  local.set $prev
  i32.const 1
  drop
  local.get $prev
  i32.eqz
  if
   unreachable
  end
  local.get $next
  local.get $prev
  call $~lib/rt/itcms/Object#set:prev
  local.get $prev
  local.get $next
  call $~lib/rt/itcms/Object#set:next
 )
 (func $~lib/rt/__typeinfo (type $i32_=>_i32) (param $id i32) (result i32)
  (local $ptr i32)
  global.get $~lib/rt/__rtti_base
  local.set $ptr
  local.get $id
  local.get $ptr
  i32.load $0
  i32.gt_u
  if
   unreachable
  end
  local.get $ptr
  i32.const 4
  i32.add
  local.get $id
  i32.const 8
  i32.mul
  i32.add
  i32.load $0
 )
 (func $~lib/rt/itcms/Object#get:isPointerfree (type $i32_=>_i32) (param $this i32) (result i32)
  (local $rtId i32)
  local.get $this
  i32.load $0 offset=12
  local.set $rtId
  local.get $rtId
  i32.const 1
  i32.le_u
  if (result i32)
   i32.const 1
  else
   local.get $rtId
   call $~lib/rt/__typeinfo
   i32.const 32
   i32.and
   i32.const 0
   i32.ne
  end
 )
 (func $~lib/rt/itcms/Object#linkTo (type $i32_i32_i32_=>_none) (param $this i32) (param $list i32) (param $withColor i32)
  (local $prev i32)
  local.get $list
  i32.load $0 offset=8
  local.set $prev
  local.get $this
  local.get $list
  local.get $withColor
  i32.or
  call $~lib/rt/itcms/Object#set:nextWithColor
  local.get $this
  local.get $prev
  call $~lib/rt/itcms/Object#set:prev
  local.get $prev
  local.get $this
  call $~lib/rt/itcms/Object#set:next
  local.get $list
  local.get $this
  call $~lib/rt/itcms/Object#set:prev
 )
 (func $~lib/rt/itcms/Object#makeGray (type $i32_=>_none) (param $this i32)
  (local $1 i32)
  local.get $this
  global.get $~lib/rt/itcms/iter
  i32.eq
  if
   local.get $this
   i32.load $0 offset=8
   local.tee $1
   i32.eqz
   if (result i32)
    unreachable
   else
    local.get $1
   end
   global.set $~lib/rt/itcms/iter
  end
  local.get $this
  call $~lib/rt/itcms/Object#unlink
  local.get $this
  global.get $~lib/rt/itcms/toSpace
  local.get $this
  call $~lib/rt/itcms/Object#get:isPointerfree
  if (result i32)
   global.get $~lib/rt/itcms/white
   i32.eqz
  else
   i32.const 2
  end
  call $~lib/rt/itcms/Object#linkTo
 )
 (func $~lib/rt/itcms/__visit (type $i32_i32_=>_none) (param $ptr i32) (param $cookie i32)
  (local $obj i32)
  local.get $ptr
  i32.eqz
  if
   return
  end
  local.get $ptr
  i32.const 20
  i32.sub
  local.set $obj
  i32.const 0
  drop
  local.get $obj
  call $~lib/rt/itcms/Object#get:color
  global.get $~lib/rt/itcms/white
  i32.eq
  if
   local.get $obj
   call $~lib/rt/itcms/Object#makeGray
   global.get $~lib/rt/itcms/visitCount
   i32.const 1
   i32.add
   global.set $~lib/rt/itcms/visitCount
  end
 )
 (func $~lib/rt/itcms/visitStack (type $i32_=>_none) (param $cookie i32)
  (local $ptr i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  local.set $ptr
  loop $while-continue|0
   local.get $ptr
   global.get $~lib/memory/__heap_base
   i32.lt_u
   local.set $2
   local.get $2
   if
    local.get $ptr
    i32.load $0
    local.get $cookie
    call $~lib/rt/itcms/__visit
    local.get $ptr
    i32.const 4
    i32.add
    local.set $ptr
    br $while-continue|0
   end
  end
 )
 (func $~lib/rt/itcms/Object#get:size (type $i32_=>_i32) (param $this i32) (result i32)
  i32.const 4
  local.get $this
  i32.load $0
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  i32.add
 )
 (func $~lib/rt/tlsf/Root#set:flMap (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0
 )
 (func $~lib/rt/common/BLOCK#set:mmInfo (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0
 )
 (func $~lib/rt/tlsf/Block#set:prev (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=4
 )
 (func $~lib/rt/tlsf/Block#set:next (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=8
 )
 (func $~lib/rt/tlsf/removeBlock (type $i32_i32_=>_none) (param $root i32) (param $block i32)
  (local $blockInfo i32)
  (local $size i32)
  (local $fl i32)
  (local $sl i32)
  (local $6 i32)
  (local $7 i32)
  (local $boundedSize i32)
  (local $prev i32)
  (local $next i32)
  (local $root|11 i32)
  (local $fl|12 i32)
  (local $sl|13 i32)
  (local $root|14 i32)
  (local $fl|15 i32)
  (local $sl|16 i32)
  (local $head i32)
  (local $root|18 i32)
  (local $fl|19 i32)
  (local $slMap i32)
  (local $root|21 i32)
  (local $fl|22 i32)
  (local $slMap|23 i32)
  local.get $block
  i32.load $0
  local.set $blockInfo
  i32.const 1
  drop
  local.get $blockInfo
  i32.const 1
  i32.and
  i32.eqz
  if
   unreachable
  end
  local.get $blockInfo
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  local.set $size
  i32.const 1
  drop
  local.get $size
  i32.const 12
  i32.ge_u
  i32.eqz
  if
   unreachable
  end
  local.get $size
  i32.const 256
  i32.lt_u
  if
   i32.const 0
   local.set $fl
   local.get $size
   i32.const 4
   i32.shr_u
   local.set $sl
  else
   local.get $size
   local.tee $6
   i32.const 1073741820
   local.tee $7
   local.get $6
   local.get $7
   i32.lt_u
   select
   local.set $boundedSize
   i32.const 31
   local.get $boundedSize
   i32.clz
   i32.sub
   local.set $fl
   local.get $boundedSize
   local.get $fl
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 1
   i32.const 4
   i32.shl
   i32.xor
   local.set $sl
   local.get $fl
   i32.const 8
   i32.const 1
   i32.sub
   i32.sub
   local.set $fl
  end
  i32.const 1
  drop
  local.get $fl
  i32.const 23
  i32.lt_u
  if (result i32)
   local.get $sl
   i32.const 16
   i32.lt_u
  else
   i32.const 0
  end
  i32.eqz
  if
   unreachable
  end
  local.get $block
  i32.load $0 offset=4
  local.set $prev
  local.get $block
  i32.load $0 offset=8
  local.set $next
  local.get $prev
  if
   local.get $prev
   local.get $next
   call $~lib/rt/tlsf/Block#set:next
  end
  local.get $next
  if
   local.get $next
   local.get $prev
   call $~lib/rt/tlsf/Block#set:prev
  end
  local.get $block
  local.get $root
  local.set $root|11
  local.get $fl
  local.set $fl|12
  local.get $sl
  local.set $sl|13
  local.get $root|11
  local.get $fl|12
  i32.const 4
  i32.shl
  local.get $sl|13
  i32.add
  i32.const 2
  i32.shl
  i32.add
  i32.load $0 offset=96
  i32.eq
  if
   local.get $root
   local.set $root|14
   local.get $fl
   local.set $fl|15
   local.get $sl
   local.set $sl|16
   local.get $next
   local.set $head
   local.get $root|14
   local.get $fl|15
   i32.const 4
   i32.shl
   local.get $sl|16
   i32.add
   i32.const 2
   i32.shl
   i32.add
   local.get $head
   i32.store $0 offset=96
   local.get $next
   i32.eqz
   if
    local.get $root
    local.set $root|18
    local.get $fl
    local.set $fl|19
    local.get $root|18
    local.get $fl|19
    i32.const 2
    i32.shl
    i32.add
    i32.load $0 offset=4
    local.set $slMap
    local.get $root
    local.set $root|21
    local.get $fl
    local.set $fl|22
    local.get $slMap
    i32.const 1
    local.get $sl
    i32.shl
    i32.const -1
    i32.xor
    i32.and
    local.tee $slMap
    local.set $slMap|23
    local.get $root|21
    local.get $fl|22
    i32.const 2
    i32.shl
    i32.add
    local.get $slMap|23
    i32.store $0 offset=4
    local.get $slMap
    i32.eqz
    if
     local.get $root
     local.get $root
     i32.load $0
     i32.const 1
     local.get $fl
     i32.shl
     i32.const -1
     i32.xor
     i32.and
     call $~lib/rt/tlsf/Root#set:flMap
    end
   end
  end
 )
 (func $~lib/rt/tlsf/insertBlock (type $i32_i32_=>_none) (param $root i32) (param $block i32)
  (local $blockInfo i32)
  (local $block|3 i32)
  (local $right i32)
  (local $rightInfo i32)
  (local $block|6 i32)
  (local $block|7 i32)
  (local $left i32)
  (local $leftInfo i32)
  (local $size i32)
  (local $fl i32)
  (local $sl i32)
  (local $13 i32)
  (local $14 i32)
  (local $boundedSize i32)
  (local $root|16 i32)
  (local $fl|17 i32)
  (local $sl|18 i32)
  (local $head i32)
  (local $root|20 i32)
  (local $fl|21 i32)
  (local $sl|22 i32)
  (local $head|23 i32)
  (local $root|24 i32)
  (local $fl|25 i32)
  (local $root|26 i32)
  (local $fl|27 i32)
  (local $slMap i32)
  i32.const 1
  drop
  local.get $block
  i32.eqz
  if
   unreachable
  end
  local.get $block
  i32.load $0
  local.set $blockInfo
  i32.const 1
  drop
  local.get $blockInfo
  i32.const 1
  i32.and
  i32.eqz
  if
   unreachable
  end
  local.get $block
  local.set $block|3
  local.get $block|3
  i32.const 4
  i32.add
  local.get $block|3
  i32.load $0
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  i32.add
  local.set $right
  local.get $right
  i32.load $0
  local.set $rightInfo
  local.get $rightInfo
  i32.const 1
  i32.and
  if
   local.get $root
   local.get $right
   call $~lib/rt/tlsf/removeBlock
   local.get $block
   local.get $blockInfo
   i32.const 4
   i32.add
   local.get $rightInfo
   i32.const 3
   i32.const -1
   i32.xor
   i32.and
   i32.add
   local.tee $blockInfo
   call $~lib/rt/common/BLOCK#set:mmInfo
   local.get $block
   local.set $block|6
   local.get $block|6
   i32.const 4
   i32.add
   local.get $block|6
   i32.load $0
   i32.const 3
   i32.const -1
   i32.xor
   i32.and
   i32.add
   local.set $right
   local.get $right
   i32.load $0
   local.set $rightInfo
  end
  local.get $blockInfo
  i32.const 2
  i32.and
  if
   local.get $block
   local.set $block|7
   local.get $block|7
   i32.const 4
   i32.sub
   i32.load $0
   local.set $left
   local.get $left
   i32.load $0
   local.set $leftInfo
   i32.const 1
   drop
   local.get $leftInfo
   i32.const 1
   i32.and
   i32.eqz
   if
    unreachable
   end
   local.get $root
   local.get $left
   call $~lib/rt/tlsf/removeBlock
   local.get $left
   local.set $block
   local.get $block
   local.get $leftInfo
   i32.const 4
   i32.add
   local.get $blockInfo
   i32.const 3
   i32.const -1
   i32.xor
   i32.and
   i32.add
   local.tee $blockInfo
   call $~lib/rt/common/BLOCK#set:mmInfo
  end
  local.get $right
  local.get $rightInfo
  i32.const 2
  i32.or
  call $~lib/rt/common/BLOCK#set:mmInfo
  local.get $blockInfo
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  local.set $size
  i32.const 1
  drop
  local.get $size
  i32.const 12
  i32.ge_u
  i32.eqz
  if
   unreachable
  end
  i32.const 1
  drop
  local.get $block
  i32.const 4
  i32.add
  local.get $size
  i32.add
  local.get $right
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $right
  i32.const 4
  i32.sub
  local.get $block
  i32.store $0
  local.get $size
  i32.const 256
  i32.lt_u
  if
   i32.const 0
   local.set $fl
   local.get $size
   i32.const 4
   i32.shr_u
   local.set $sl
  else
   local.get $size
   local.tee $13
   i32.const 1073741820
   local.tee $14
   local.get $13
   local.get $14
   i32.lt_u
   select
   local.set $boundedSize
   i32.const 31
   local.get $boundedSize
   i32.clz
   i32.sub
   local.set $fl
   local.get $boundedSize
   local.get $fl
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 1
   i32.const 4
   i32.shl
   i32.xor
   local.set $sl
   local.get $fl
   i32.const 8
   i32.const 1
   i32.sub
   i32.sub
   local.set $fl
  end
  i32.const 1
  drop
  local.get $fl
  i32.const 23
  i32.lt_u
  if (result i32)
   local.get $sl
   i32.const 16
   i32.lt_u
  else
   i32.const 0
  end
  i32.eqz
  if
   unreachable
  end
  local.get $root
  local.set $root|16
  local.get $fl
  local.set $fl|17
  local.get $sl
  local.set $sl|18
  local.get $root|16
  local.get $fl|17
  i32.const 4
  i32.shl
  local.get $sl|18
  i32.add
  i32.const 2
  i32.shl
  i32.add
  i32.load $0 offset=96
  local.set $head
  local.get $block
  i32.const 0
  call $~lib/rt/tlsf/Block#set:prev
  local.get $block
  local.get $head
  call $~lib/rt/tlsf/Block#set:next
  local.get $head
  if
   local.get $head
   local.get $block
   call $~lib/rt/tlsf/Block#set:prev
  end
  local.get $root
  local.set $root|20
  local.get $fl
  local.set $fl|21
  local.get $sl
  local.set $sl|22
  local.get $block
  local.set $head|23
  local.get $root|20
  local.get $fl|21
  i32.const 4
  i32.shl
  local.get $sl|22
  i32.add
  i32.const 2
  i32.shl
  i32.add
  local.get $head|23
  i32.store $0 offset=96
  local.get $root
  local.get $root
  i32.load $0
  i32.const 1
  local.get $fl
  i32.shl
  i32.or
  call $~lib/rt/tlsf/Root#set:flMap
  local.get $root
  local.set $root|26
  local.get $fl
  local.set $fl|27
  local.get $root
  local.set $root|24
  local.get $fl
  local.set $fl|25
  local.get $root|24
  local.get $fl|25
  i32.const 2
  i32.shl
  i32.add
  i32.load $0 offset=4
  i32.const 1
  local.get $sl
  i32.shl
  i32.or
  local.set $slMap
  local.get $root|26
  local.get $fl|27
  i32.const 2
  i32.shl
  i32.add
  local.get $slMap
  i32.store $0 offset=4
 )
 (func $~lib/rt/tlsf/addMemory (type $i32_i32_i32_=>_i32) (param $root i32) (param $start i32) (param $end i32) (result i32)
  (local $root|3 i32)
  (local $tail i32)
  (local $tailInfo i32)
  (local $size i32)
  (local $leftSize i32)
  (local $left i32)
  (local $root|9 i32)
  (local $tail|10 i32)
  i32.const 1
  drop
  local.get $start
  local.get $end
  i32.le_u
  i32.eqz
  if
   unreachable
  end
  local.get $start
  i32.const 4
  i32.add
  i32.const 15
  i32.add
  i32.const 15
  i32.const -1
  i32.xor
  i32.and
  i32.const 4
  i32.sub
  local.set $start
  local.get $end
  i32.const 15
  i32.const -1
  i32.xor
  i32.and
  local.set $end
  local.get $root
  local.set $root|3
  local.get $root|3
  i32.load $0 offset=1568
  local.set $tail
  i32.const 0
  local.set $tailInfo
  local.get $tail
  if
   i32.const 1
   drop
   local.get $start
   local.get $tail
   i32.const 4
   i32.add
   i32.ge_u
   i32.eqz
   if
    unreachable
   end
   local.get $start
   i32.const 16
   i32.sub
   local.get $tail
   i32.eq
   if
    local.get $start
    i32.const 16
    i32.sub
    local.set $start
    local.get $tail
    i32.load $0
    local.set $tailInfo
   else
    nop
   end
  else
   i32.const 1
   drop
   local.get $start
   local.get $root
   i32.const 1572
   i32.add
   i32.ge_u
   i32.eqz
   if
    unreachable
   end
  end
  local.get $end
  local.get $start
  i32.sub
  local.set $size
  local.get $size
  i32.const 4
  i32.const 12
  i32.add
  i32.const 4
  i32.add
  i32.lt_u
  if
   i32.const 0
   return
  end
  local.get $size
  i32.const 2
  i32.const 4
  i32.mul
  i32.sub
  local.set $leftSize
  local.get $start
  local.set $left
  local.get $left
  local.get $leftSize
  i32.const 1
  i32.or
  local.get $tailInfo
  i32.const 2
  i32.and
  i32.or
  call $~lib/rt/common/BLOCK#set:mmInfo
  local.get $left
  i32.const 0
  call $~lib/rt/tlsf/Block#set:prev
  local.get $left
  i32.const 0
  call $~lib/rt/tlsf/Block#set:next
  local.get $start
  i32.const 4
  i32.add
  local.get $leftSize
  i32.add
  local.set $tail
  local.get $tail
  i32.const 0
  i32.const 2
  i32.or
  call $~lib/rt/common/BLOCK#set:mmInfo
  local.get $root
  local.set $root|9
  local.get $tail
  local.set $tail|10
  local.get $root|9
  local.get $tail|10
  i32.store $0 offset=1568
  local.get $root
  local.get $left
  call $~lib/rt/tlsf/insertBlock
  i32.const 1
 )
 (func $~lib/rt/tlsf/initialize (type $none_=>_none)
  (local $rootOffset i32)
  (local $pagesBefore i32)
  (local $pagesNeeded i32)
  (local $root i32)
  (local $root|4 i32)
  (local $tail i32)
  (local $fl i32)
  (local $7 i32)
  (local $root|8 i32)
  (local $fl|9 i32)
  (local $slMap i32)
  (local $sl i32)
  (local $12 i32)
  (local $root|13 i32)
  (local $fl|14 i32)
  (local $sl|15 i32)
  (local $head i32)
  (local $memStart i32)
  i32.const 0
  drop
  global.get $~lib/memory/__heap_base
  i32.const 15
  i32.add
  i32.const 15
  i32.const -1
  i32.xor
  i32.and
  local.set $rootOffset
  memory.size $0
  local.set $pagesBefore
  local.get $rootOffset
  i32.const 1572
  i32.add
  i32.const 65535
  i32.add
  i32.const 65535
  i32.const -1
  i32.xor
  i32.and
  i32.const 16
  i32.shr_u
  local.set $pagesNeeded
  local.get $pagesNeeded
  local.get $pagesBefore
  i32.gt_s
  if (result i32)
   local.get $pagesNeeded
   local.get $pagesBefore
   i32.sub
   memory.grow $0
   i32.const 0
   i32.lt_s
  else
   i32.const 0
  end
  if
   unreachable
  end
  local.get $rootOffset
  local.set $root
  local.get $root
  i32.const 0
  call $~lib/rt/tlsf/Root#set:flMap
  local.get $root
  local.set $root|4
  i32.const 0
  local.set $tail
  local.get $root|4
  local.get $tail
  i32.store $0 offset=1568
  i32.const 0
  local.set $fl
  loop $for-loop|0
   local.get $fl
   i32.const 23
   i32.lt_u
   local.set $7
   local.get $7
   if
    local.get $root
    local.set $root|8
    local.get $fl
    local.set $fl|9
    i32.const 0
    local.set $slMap
    local.get $root|8
    local.get $fl|9
    i32.const 2
    i32.shl
    i32.add
    local.get $slMap
    i32.store $0 offset=4
    i32.const 0
    local.set $sl
    loop $for-loop|1
     local.get $sl
     i32.const 16
     i32.lt_u
     local.set $12
     local.get $12
     if
      local.get $root
      local.set $root|13
      local.get $fl
      local.set $fl|14
      local.get $sl
      local.set $sl|15
      i32.const 0
      local.set $head
      local.get $root|13
      local.get $fl|14
      i32.const 4
      i32.shl
      local.get $sl|15
      i32.add
      i32.const 2
      i32.shl
      i32.add
      local.get $head
      i32.store $0 offset=96
      local.get $sl
      i32.const 1
      i32.add
      local.set $sl
      br $for-loop|1
     end
    end
    local.get $fl
    i32.const 1
    i32.add
    local.set $fl
    br $for-loop|0
   end
  end
  local.get $rootOffset
  i32.const 1572
  i32.add
  local.set $memStart
  i32.const 0
  drop
  local.get $root
  local.get $memStart
  memory.size $0
  i32.const 16
  i32.shl
  call $~lib/rt/tlsf/addMemory
  drop
  local.get $root
  global.set $~lib/rt/tlsf/ROOT
 )
 (func $~lib/rt/tlsf/checkUsedBlock (type $i32_=>_i32) (param $ptr i32) (result i32)
  (local $block i32)
  local.get $ptr
  i32.const 4
  i32.sub
  local.set $block
  local.get $ptr
  i32.const 0
  i32.ne
  if (result i32)
   local.get $ptr
   i32.const 15
   i32.and
   i32.eqz
  else
   i32.const 0
  end
  if (result i32)
   local.get $block
   i32.load $0
   i32.const 1
   i32.and
   i32.eqz
  else
   i32.const 0
  end
  i32.eqz
  if
   unreachable
  end
  local.get $block
 )
 (func $~lib/rt/tlsf/freeBlock (type $i32_i32_=>_none) (param $root i32) (param $block i32)
  i32.const 0
  drop
  local.get $block
  local.get $block
  i32.load $0
  i32.const 1
  i32.or
  call $~lib/rt/common/BLOCK#set:mmInfo
  local.get $root
  local.get $block
  call $~lib/rt/tlsf/insertBlock
 )
 (func $~lib/rt/tlsf/__free (type $i32_=>_none) (param $ptr i32)
  local.get $ptr
  global.get $~lib/memory/__heap_base
  i32.lt_u
  if
   return
  end
  global.get $~lib/rt/tlsf/ROOT
  i32.eqz
  if
   call $~lib/rt/tlsf/initialize
  end
  global.get $~lib/rt/tlsf/ROOT
  local.get $ptr
  call $~lib/rt/tlsf/checkUsedBlock
  call $~lib/rt/tlsf/freeBlock
 )
 (func $~lib/rt/itcms/free (type $i32_=>_none) (param $obj i32)
  local.get $obj
  global.get $~lib/memory/__heap_base
  i32.lt_u
  if
   local.get $obj
   i32.const 0
   call $~lib/rt/itcms/Object#set:nextWithColor
   local.get $obj
   i32.const 0
   call $~lib/rt/itcms/Object#set:prev
  else
   global.get $~lib/rt/itcms/total
   local.get $obj
   call $~lib/rt/itcms/Object#get:size
   i32.sub
   global.set $~lib/rt/itcms/total
   i32.const 0
   drop
   local.get $obj
   i32.const 4
   i32.add
   call $~lib/rt/tlsf/__free
  end
 )
 (func $~lib/rt/itcms/step (type $none_=>_i32) (result i32)
  (local $obj i32)
  (local $1 i32)
  (local $black i32)
  (local $3 i32)
  (local $4 i32)
  (local $from i32)
  block $break|0
   block $case2|0
    block $case1|0
     block $case0|0
      global.get $~lib/rt/itcms/state
      local.set $1
      local.get $1
      i32.const 0
      i32.eq
      br_if $case0|0
      local.get $1
      i32.const 1
      i32.eq
      br_if $case1|0
      local.get $1
      i32.const 2
      i32.eq
      br_if $case2|0
      br $break|0
     end
     i32.const 1
     global.set $~lib/rt/itcms/state
     i32.const 0
     global.set $~lib/rt/itcms/visitCount
     i32.const 0
     call $~lib/rt/itcms/visitRoots
     global.get $~lib/rt/itcms/toSpace
     global.set $~lib/rt/itcms/iter
     global.get $~lib/rt/itcms/visitCount
     i32.const 1
     i32.mul
     return
    end
    global.get $~lib/rt/itcms/white
    i32.eqz
    local.set $black
    global.get $~lib/rt/itcms/iter
    call $~lib/rt/itcms/Object#get:next
    local.set $obj
    loop $while-continue|1
     local.get $obj
     global.get $~lib/rt/itcms/toSpace
     i32.ne
     local.set $3
     local.get $3
     if
      local.get $obj
      global.set $~lib/rt/itcms/iter
      local.get $obj
      call $~lib/rt/itcms/Object#get:color
      local.get $black
      i32.ne
      if
       local.get $obj
       local.get $black
       call $~lib/rt/itcms/Object#set:color
       i32.const 0
       global.set $~lib/rt/itcms/visitCount
       local.get $obj
       i32.const 20
       i32.add
       i32.const 0
       call $~lib/rt/__visit_members
       global.get $~lib/rt/itcms/visitCount
       i32.const 1
       i32.mul
       return
      end
      local.get $obj
      call $~lib/rt/itcms/Object#get:next
      local.set $obj
      br $while-continue|1
     end
    end
    i32.const 0
    global.set $~lib/rt/itcms/visitCount
    i32.const 0
    call $~lib/rt/itcms/visitRoots
    global.get $~lib/rt/itcms/iter
    call $~lib/rt/itcms/Object#get:next
    local.set $obj
    local.get $obj
    global.get $~lib/rt/itcms/toSpace
    i32.eq
    if
     i32.const 0
     call $~lib/rt/itcms/visitStack
     global.get $~lib/rt/itcms/iter
     call $~lib/rt/itcms/Object#get:next
     local.set $obj
     loop $while-continue|2
      local.get $obj
      global.get $~lib/rt/itcms/toSpace
      i32.ne
      local.set $4
      local.get $4
      if
       local.get $obj
       call $~lib/rt/itcms/Object#get:color
       local.get $black
       i32.ne
       if
        local.get $obj
        local.get $black
        call $~lib/rt/itcms/Object#set:color
        local.get $obj
        i32.const 20
        i32.add
        i32.const 0
        call $~lib/rt/__visit_members
       end
       local.get $obj
       call $~lib/rt/itcms/Object#get:next
       local.set $obj
       br $while-continue|2
      end
     end
     global.get $~lib/rt/itcms/fromSpace
     local.set $from
     global.get $~lib/rt/itcms/toSpace
     global.set $~lib/rt/itcms/fromSpace
     local.get $from
     global.set $~lib/rt/itcms/toSpace
     local.get $black
     global.set $~lib/rt/itcms/white
     local.get $from
     call $~lib/rt/itcms/Object#get:next
     global.set $~lib/rt/itcms/iter
     i32.const 2
     global.set $~lib/rt/itcms/state
    end
    global.get $~lib/rt/itcms/visitCount
    i32.const 1
    i32.mul
    return
   end
   global.get $~lib/rt/itcms/iter
   local.set $obj
   local.get $obj
   global.get $~lib/rt/itcms/toSpace
   i32.ne
   if
    local.get $obj
    call $~lib/rt/itcms/Object#get:next
    global.set $~lib/rt/itcms/iter
    i32.const 1
    drop
    local.get $obj
    call $~lib/rt/itcms/Object#get:color
    global.get $~lib/rt/itcms/white
    i32.eqz
    i32.eq
    i32.eqz
    if
     unreachable
    end
    local.get $obj
    call $~lib/rt/itcms/free
    i32.const 10
    return
   end
   global.get $~lib/rt/itcms/toSpace
   global.get $~lib/rt/itcms/toSpace
   call $~lib/rt/itcms/Object#set:nextWithColor
   global.get $~lib/rt/itcms/toSpace
   global.get $~lib/rt/itcms/toSpace
   call $~lib/rt/itcms/Object#set:prev
   i32.const 0
   global.set $~lib/rt/itcms/state
   br $break|0
  end
  i32.const 0
 )
 (func $~lib/rt/itcms/interrupt (type $none_=>_none)
  (local $budget i32)
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 1024
  i32.const 200
  i32.mul
  i32.const 100
  i32.div_u
  local.set $budget
  loop $do-loop|0
   local.get $budget
   call $~lib/rt/itcms/step
   i32.sub
   local.set $budget
   global.get $~lib/rt/itcms/state
   i32.const 0
   i32.eq
   if
    i32.const 0
    drop
    global.get $~lib/rt/itcms/total
    i64.extend_i32_u
    i32.const 200
    i64.extend_i32_u
    i64.mul
    i64.const 100
    i64.div_u
    i32.wrap_i64
    i32.const 1024
    i32.add
    global.set $~lib/rt/itcms/threshold
    i32.const 0
    drop
    return
   end
   local.get $budget
   i32.const 0
   i32.gt_s
   br_if $do-loop|0
  end
  i32.const 0
  drop
  global.get $~lib/rt/itcms/total
  i32.const 1024
  global.get $~lib/rt/itcms/total
  global.get $~lib/rt/itcms/threshold
  i32.sub
  i32.const 1024
  i32.lt_u
  i32.mul
  i32.add
  global.set $~lib/rt/itcms/threshold
  i32.const 0
  drop
 )
 (func $~lib/rt/tlsf/computeSize (type $i32_=>_i32) (param $size i32) (result i32)
  local.get $size
  i32.const 12
  i32.le_u
  if (result i32)
   i32.const 12
  else
   local.get $size
   i32.const 4
   i32.add
   i32.const 15
   i32.add
   i32.const 15
   i32.const -1
   i32.xor
   i32.and
   i32.const 4
   i32.sub
  end
 )
 (func $~lib/rt/tlsf/prepareSize (type $i32_=>_i32) (param $size i32) (result i32)
  local.get $size
  i32.const 1073741820
  i32.gt_u
  if
   unreachable
  end
  local.get $size
  call $~lib/rt/tlsf/computeSize
 )
 (func $~lib/rt/tlsf/searchBlock (type $i32_i32_=>_i32) (param $root i32) (param $size i32) (result i32)
  (local $fl i32)
  (local $sl i32)
  (local $requestSize i32)
  (local $root|5 i32)
  (local $fl|6 i32)
  (local $slMap i32)
  (local $head i32)
  (local $flMap i32)
  (local $root|10 i32)
  (local $fl|11 i32)
  (local $root|12 i32)
  (local $fl|13 i32)
  (local $sl|14 i32)
  (local $root|15 i32)
  (local $fl|16 i32)
  (local $sl|17 i32)
  local.get $size
  i32.const 256
  i32.lt_u
  if
   i32.const 0
   local.set $fl
   local.get $size
   i32.const 4
   i32.shr_u
   local.set $sl
  else
   local.get $size
   i32.const 536870910
   i32.lt_u
   if (result i32)
    local.get $size
    i32.const 1
    i32.const 27
    local.get $size
    i32.clz
    i32.sub
    i32.shl
    i32.add
    i32.const 1
    i32.sub
   else
    local.get $size
   end
   local.set $requestSize
   i32.const 31
   local.get $requestSize
   i32.clz
   i32.sub
   local.set $fl
   local.get $requestSize
   local.get $fl
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 1
   i32.const 4
   i32.shl
   i32.xor
   local.set $sl
   local.get $fl
   i32.const 8
   i32.const 1
   i32.sub
   i32.sub
   local.set $fl
  end
  i32.const 1
  drop
  local.get $fl
  i32.const 23
  i32.lt_u
  if (result i32)
   local.get $sl
   i32.const 16
   i32.lt_u
  else
   i32.const 0
  end
  i32.eqz
  if
   unreachable
  end
  local.get $root
  local.set $root|5
  local.get $fl
  local.set $fl|6
  local.get $root|5
  local.get $fl|6
  i32.const 2
  i32.shl
  i32.add
  i32.load $0 offset=4
  i32.const 0
  i32.const -1
  i32.xor
  local.get $sl
  i32.shl
  i32.and
  local.set $slMap
  i32.const 0
  local.set $head
  local.get $slMap
  i32.eqz
  if
   local.get $root
   i32.load $0
   i32.const 0
   i32.const -1
   i32.xor
   local.get $fl
   i32.const 1
   i32.add
   i32.shl
   i32.and
   local.set $flMap
   local.get $flMap
   i32.eqz
   if
    i32.const 0
    local.set $head
   else
    local.get $flMap
    i32.ctz
    local.set $fl
    local.get $root
    local.set $root|10
    local.get $fl
    local.set $fl|11
    local.get $root|10
    local.get $fl|11
    i32.const 2
    i32.shl
    i32.add
    i32.load $0 offset=4
    local.set $slMap
    i32.const 1
    drop
    local.get $slMap
    i32.eqz
    if
     unreachable
    end
    local.get $root
    local.set $root|12
    local.get $fl
    local.set $fl|13
    local.get $slMap
    i32.ctz
    local.set $sl|14
    local.get $root|12
    local.get $fl|13
    i32.const 4
    i32.shl
    local.get $sl|14
    i32.add
    i32.const 2
    i32.shl
    i32.add
    i32.load $0 offset=96
    local.set $head
   end
  else
   local.get $root
   local.set $root|15
   local.get $fl
   local.set $fl|16
   local.get $slMap
   i32.ctz
   local.set $sl|17
   local.get $root|15
   local.get $fl|16
   i32.const 4
   i32.shl
   local.get $sl|17
   i32.add
   i32.const 2
   i32.shl
   i32.add
   i32.load $0 offset=96
   local.set $head
  end
  local.get $head
 )
 (func $~lib/rt/tlsf/growMemory (type $i32_i32_=>_none) (param $root i32) (param $size i32)
  (local $pagesBefore i32)
  (local $root|3 i32)
  (local $pagesNeeded i32)
  (local $5 i32)
  (local $6 i32)
  (local $pagesWanted i32)
  (local $pagesAfter i32)
  i32.const 0
  drop
  local.get $size
  i32.const 536870910
  i32.lt_u
  if
   local.get $size
   i32.const 1
   i32.const 27
   local.get $size
   i32.clz
   i32.sub
   i32.shl
   i32.const 1
   i32.sub
   i32.add
   local.set $size
  end
  memory.size $0
  local.set $pagesBefore
  local.get $size
  i32.const 4
  local.get $pagesBefore
  i32.const 16
  i32.shl
  i32.const 4
  i32.sub
  local.get $root
  local.set $root|3
  local.get $root|3
  i32.load $0 offset=1568
  i32.ne
  i32.shl
  i32.add
  local.set $size
  local.get $size
  i32.const 65535
  i32.add
  i32.const 65535
  i32.const -1
  i32.xor
  i32.and
  i32.const 16
  i32.shr_u
  local.set $pagesNeeded
  local.get $pagesBefore
  local.tee $5
  local.get $pagesNeeded
  local.tee $6
  local.get $5
  local.get $6
  i32.gt_s
  select
  local.set $pagesWanted
  local.get $pagesWanted
  memory.grow $0
  i32.const 0
  i32.lt_s
  if
   local.get $pagesNeeded
   memory.grow $0
   i32.const 0
   i32.lt_s
   if
    unreachable
   end
  end
  memory.size $0
  local.set $pagesAfter
  local.get $root
  local.get $pagesBefore
  i32.const 16
  i32.shl
  local.get $pagesAfter
  i32.const 16
  i32.shl
  call $~lib/rt/tlsf/addMemory
  drop
 )
 (func $~lib/rt/tlsf/prepareBlock (type $i32_i32_i32_=>_none) (param $root i32) (param $block i32) (param $size i32)
  (local $blockInfo i32)
  (local $remaining i32)
  (local $spare i32)
  (local $block|6 i32)
  (local $block|7 i32)
  local.get $block
  i32.load $0
  local.set $blockInfo
  i32.const 1
  drop
  local.get $size
  i32.const 4
  i32.add
  i32.const 15
  i32.and
  i32.eqz
  i32.eqz
  if
   unreachable
  end
  local.get $blockInfo
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  local.get $size
  i32.sub
  local.set $remaining
  local.get $remaining
  i32.const 4
  i32.const 12
  i32.add
  i32.ge_u
  if
   local.get $block
   local.get $size
   local.get $blockInfo
   i32.const 2
   i32.and
   i32.or
   call $~lib/rt/common/BLOCK#set:mmInfo
   local.get $block
   i32.const 4
   i32.add
   local.get $size
   i32.add
   local.set $spare
   local.get $spare
   local.get $remaining
   i32.const 4
   i32.sub
   i32.const 1
   i32.or
   call $~lib/rt/common/BLOCK#set:mmInfo
   local.get $root
   local.get $spare
   call $~lib/rt/tlsf/insertBlock
  else
   local.get $block
   local.get $blockInfo
   i32.const 1
   i32.const -1
   i32.xor
   i32.and
   call $~lib/rt/common/BLOCK#set:mmInfo
   local.get $block
   local.set $block|7
   local.get $block|7
   i32.const 4
   i32.add
   local.get $block|7
   i32.load $0
   i32.const 3
   i32.const -1
   i32.xor
   i32.and
   i32.add
   local.get $block
   local.set $block|6
   local.get $block|6
   i32.const 4
   i32.add
   local.get $block|6
   i32.load $0
   i32.const 3
   i32.const -1
   i32.xor
   i32.and
   i32.add
   i32.load $0
   i32.const 2
   i32.const -1
   i32.xor
   i32.and
   call $~lib/rt/common/BLOCK#set:mmInfo
  end
 )
 (func $~lib/rt/tlsf/allocateBlock (type $i32_i32_=>_i32) (param $root i32) (param $size i32) (result i32)
  (local $payloadSize i32)
  (local $block i32)
  local.get $size
  call $~lib/rt/tlsf/prepareSize
  local.set $payloadSize
  local.get $root
  local.get $payloadSize
  call $~lib/rt/tlsf/searchBlock
  local.set $block
  local.get $block
  i32.eqz
  if
   local.get $root
   local.get $payloadSize
   call $~lib/rt/tlsf/growMemory
   local.get $root
   local.get $payloadSize
   call $~lib/rt/tlsf/searchBlock
   local.set $block
   i32.const 1
   drop
   local.get $block
   i32.eqz
   if
    unreachable
   end
  end
  i32.const 1
  drop
  local.get $block
  i32.load $0
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  local.get $payloadSize
  i32.ge_u
  i32.eqz
  if
   unreachable
  end
  local.get $root
  local.get $block
  call $~lib/rt/tlsf/removeBlock
  local.get $root
  local.get $block
  local.get $payloadSize
  call $~lib/rt/tlsf/prepareBlock
  i32.const 0
  drop
  local.get $block
 )
 (func $~lib/rt/tlsf/__alloc (type $i32_=>_i32) (param $size i32) (result i32)
  global.get $~lib/rt/tlsf/ROOT
  i32.eqz
  if
   call $~lib/rt/tlsf/initialize
  end
  global.get $~lib/rt/tlsf/ROOT
  local.get $size
  call $~lib/rt/tlsf/allocateBlock
  i32.const 4
  i32.add
 )
 (func $~lib/rt/itcms/Object#set:rtId (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=12
 )
 (func $~lib/rt/itcms/Object#set:rtSize (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=16
 )
 (func $~lib/rt/itcms/__new (type $i32_i32_=>_i32) (param $size i32) (param $id i32) (result i32)
  (local $obj i32)
  (local $ptr i32)
  local.get $size
  i32.const 1073741804
  i32.ge_u
  if
   unreachable
  end
  global.get $~lib/rt/itcms/total
  global.get $~lib/rt/itcms/threshold
  i32.ge_u
  if
   call $~lib/rt/itcms/interrupt
  end
  i32.const 16
  local.get $size
  i32.add
  call $~lib/rt/tlsf/__alloc
  i32.const 4
  i32.sub
  local.set $obj
  local.get $obj
  local.get $id
  call $~lib/rt/itcms/Object#set:rtId
  local.get $obj
  local.get $size
  call $~lib/rt/itcms/Object#set:rtSize
  local.get $obj
  global.get $~lib/rt/itcms/fromSpace
  global.get $~lib/rt/itcms/white
  call $~lib/rt/itcms/Object#linkTo
  global.get $~lib/rt/itcms/total
  local.get $obj
  call $~lib/rt/itcms/Object#get:size
  i32.add
  global.set $~lib/rt/itcms/total
  local.get $obj
  i32.const 20
  i32.add
  local.set $ptr
  local.get $ptr
  i32.const 0
  local.get $size
  memory.fill $0
  local.get $ptr
 )
 (func $~lib/rt/itcms/__link (type $i32_i32_i32_=>_none) (param $parentPtr i32) (param $childPtr i32) (param $expectMultiple i32)
  (local $child i32)
  (local $parent i32)
  (local $parentColor i32)
  local.get $childPtr
  i32.eqz
  if
   return
  end
  i32.const 1
  drop
  local.get $parentPtr
  i32.eqz
  if
   unreachable
  end
  local.get $childPtr
  i32.const 20
  i32.sub
  local.set $child
  local.get $child
  call $~lib/rt/itcms/Object#get:color
  global.get $~lib/rt/itcms/white
  i32.eq
  if
   local.get $parentPtr
   i32.const 20
   i32.sub
   local.set $parent
   local.get $parent
   call $~lib/rt/itcms/Object#get:color
   local.set $parentColor
   local.get $parentColor
   global.get $~lib/rt/itcms/white
   i32.eqz
   i32.eq
   if
    local.get $expectMultiple
    if
     local.get $parent
     call $~lib/rt/itcms/Object#makeGray
    else
     local.get $child
     call $~lib/rt/itcms/Object#makeGray
    end
   else
    local.get $parentColor
    i32.const 3
    i32.eq
    if (result i32)
     global.get $~lib/rt/itcms/state
     i32.const 1
     i32.eq
    else
     i32.const 0
    end
    if
     local.get $child
     call $~lib/rt/itcms/Object#makeGray
    end
   end
  end
 )
 (func $~lib/arraybuffer/ArrayBufferView#set:buffer (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/arraybuffer/ArrayBufferView#set:dataStart (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=4
 )
 (func $~lib/arraybuffer/ArrayBufferView#set:byteLength (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=8
 )
 (func $~lib/arraybuffer/ArrayBufferView#get:byteOffset (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  i32.load $0
  i32.sub
 )
 (func $~lib/typedarray/Int8Array#get:length (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/typedarray/Uint8Array#get:length (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/typedarray/Uint8ClampedArray#get:length (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/typedarray/Int16Array#get:length (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
  i32.const 1
  i32.shr_u
 )
 (func $~lib/typedarray/Uint16Array#get:length (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
  i32.const 1
  i32.shr_u
 )
 (func $~lib/typedarray/Int32Array#get:length (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
  i32.const 2
  i32.shr_u
 )
 (func $~lib/typedarray/Uint32Array#get:length (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
  i32.const 2
  i32.shr_u
 )
 (func $~lib/typedarray/Int64Array#get:length (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
  i32.const 3
  i32.shr_u
 )
 (func $~lib/typedarray/Uint64Array#get:length (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
  i32.const 3
  i32.shr_u
 )
 (func $~lib/typedarray/Float32Array#get:length (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
  i32.const 2
  i32.shr_u
 )
 (func $~lib/typedarray/Float64Array#get:length (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
  i32.const 3
  i32.shr_u
 )
 (func $~lib/typedarray/Int32Array#__set (type $i32_i32_i32_=>_none) (param $this i32) (param $index i32) (param $value i32)
  local.get $index
  local.get $this
  i32.load $0 offset=8
  i32.const 2
  i32.shr_u
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store $0
 )
 (func $~lib/typedarray/Int32Array#__get (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  local.get $index
  local.get $this
  i32.load $0 offset=8
  i32.const 2
  i32.shr_u
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
 )
 (func $~lib/typedarray/Float64Array#__set (type $i32_i32_f64_=>_none) (param $this i32) (param $index i32) (param $value f64)
  local.get $index
  local.get $this
  i32.load $0 offset=8
  i32.const 3
  i32.shr_u
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 3
  i32.shl
  i32.add
  local.get $value
  f64.store $0
 )
 (func $~lib/util/sort/insertionSort<f64> (type $i32_i32_i32_i32_i32_=>_none) (param $ptr i32) (param $left i32) (param $right i32) (param $presorted i32) (param $comparator i32)
  (local $range i32)
  (local $i i32)
  (local $7 i32)
  (local $a f64)
  (local $b f64)
  (local $min f64)
  (local $max f64)
  (local $j i32)
  (local $13 i32)
  (local $14 i32)
  i32.const 0
  i32.const 1
  i32.ge_s
  drop
  local.get $right
  local.get $left
  i32.sub
  i32.const 1
  i32.add
  local.set $range
  local.get $left
  local.get $range
  i32.const 1
  i32.and
  local.get $presorted
  local.get $range
  local.get $presorted
  i32.sub
  i32.const 1
  i32.and
  i32.sub
  local.get $presorted
  i32.const 0
  i32.eq
  select
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $right
   i32.le_s
   local.set $7
   local.get $7
   if
    local.get $ptr
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    f64.load $0
    local.set $a
    local.get $ptr
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    f64.load $0 offset=8
    local.set $b
    local.get $b
    local.set $min
    local.get $a
    local.set $max
    local.get $a
    local.get $b
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $f64_f64_=>_i32)
    i32.const 0
    i32.le_s
    if
     local.get $a
     local.set $min
     local.get $b
     local.set $max
    end
    local.get $i
    i32.const 1
    i32.sub
    local.set $j
    block $while-break|1
     loop $while-continue|1
      local.get $j
      local.get $left
      i32.ge_s
      local.set $13
      local.get $13
      if
       local.get $ptr
       local.get $j
       i32.const 3
       i32.shl
       i32.add
       f64.load $0
       local.set $a
       local.get $a
       local.get $max
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $f64_f64_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $j
        i32.const 3
        i32.shl
        i32.add
        local.get $a
        f64.store $0 offset=16
        local.get $j
        i32.const 1
        i32.sub
        local.set $j
       else
        br $while-break|1
       end
       br $while-continue|1
      end
     end
    end
    local.get $ptr
    local.get $j
    i32.const 3
    i32.shl
    i32.add
    local.get $max
    f64.store $0 offset=16
    block $while-break|2
     loop $while-continue|2
      local.get $j
      local.get $left
      i32.ge_s
      local.set $14
      local.get $14
      if
       local.get $ptr
       local.get $j
       i32.const 3
       i32.shl
       i32.add
       f64.load $0
       local.set $a
       local.get $a
       local.get $min
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $f64_f64_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $j
        i32.const 3
        i32.shl
        i32.add
        local.get $a
        f64.store $0 offset=8
        local.get $j
        i32.const 1
        i32.sub
        local.set $j
       else
        br $while-break|2
       end
       br $while-continue|2
      end
     end
    end
    local.get $ptr
    local.get $j
    i32.const 3
    i32.shl
    i32.add
    local.get $min
    f64.store $0 offset=8
    local.get $i
    i32.const 2
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/util/sort/extendRunRight<f64> (type $i32_i32_i32_i32_=>_i32) (param $ptr i32) (param $i i32) (param $right i32) (param $comparator i32) (result i32)
  (local $j i32)
  (local $5 i32)
  (local $k i32)
  (local $7 i32)
  (local $tmp f64)
  (local $9 i32)
  local.get $i
  local.get $right
  i32.eq
  if
   local.get $i
   return
  end
  local.get $i
  local.set $j
  local.get $ptr
  local.get $j
  i32.const 3
  i32.shl
  i32.add
  f64.load $0
  local.get $ptr
  local.get $j
  i32.const 1
  i32.add
  local.tee $j
  i32.const 3
  i32.shl
  i32.add
  f64.load $0
  i32.const 2
  global.set $~argumentsLength
  local.get $comparator
  i32.load $0
  call_indirect $0 (type $f64_f64_=>_i32)
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 3
     i32.shl
     i32.add
     f64.load $0 offset=8
     local.get $ptr
     local.get $j
     i32.const 3
     i32.shl
     i32.add
     f64.load $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $f64_f64_=>_i32)
     i32.const 31
     i32.shr_u
    else
     i32.const 0
    end
    local.set $5
    local.get $5
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|0
    end
   end
   local.get $j
   local.set $k
   loop $while-continue|1
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     local.get $ptr
     local.get $i
     i32.const 3
     i32.shl
     i32.add
     f64.load $0
     local.set $tmp
     local.get $ptr
     local.get $i
     i32.const 3
     i32.shl
     i32.add
     local.get $ptr
     local.get $k
     i32.const 3
     i32.shl
     i32.add
     f64.load $0
     f64.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     local.get $ptr
     local.get $k
     i32.const 3
     i32.shl
     i32.add
     local.get $tmp
     f64.store $0
     local.get $k
     i32.const 1
     i32.sub
     local.set $k
     br $while-continue|1
    end
   end
  else
   loop $while-continue|2
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 3
     i32.shl
     i32.add
     f64.load $0 offset=8
     local.get $ptr
     local.get $j
     i32.const 3
     i32.shl
     i32.add
     f64.load $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $f64_f64_=>_i32)
     i32.const 0
     i32.ge_s
    else
     i32.const 0
    end
    local.set $9
    local.get $9
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|2
    end
   end
  end
  local.get $j
 )
 (func $~lib/util/sort/nodePower (type $i32_i32_i32_i32_i32_=>_i32) (param $left i32) (param $right i32) (param $startA i32) (param $startB i32) (param $endB i32) (result i32)
  (local $n i64)
  (local $s i32)
  (local $l i32)
  (local $r i32)
  (local $a i64)
  (local $b i64)
  local.get $right
  local.get $left
  i32.sub
  i32.const 1
  i32.add
  i64.extend_i32_u
  local.set $n
  local.get $startB
  local.get $left
  i32.const 1
  i32.shl
  i32.sub
  local.set $s
  local.get $startA
  local.get $s
  i32.add
  local.set $l
  local.get $endB
  local.get $s
  i32.add
  i32.const 1
  i32.add
  local.set $r
  local.get $l
  i64.extend_i32_u
  i64.const 30
  i64.shl
  local.get $n
  i64.div_u
  local.set $a
  local.get $r
  i64.extend_i32_u
  i64.const 30
  i64.shl
  local.get $n
  i64.div_u
  local.set $b
  local.get $a
  local.get $b
  i64.xor
  i32.wrap_i64
  i32.clz
 )
 (func $~lib/util/sort/mergeRuns<f64> (type $i32_i32_i32_i32_i32_i32_=>_none) (param $ptr i32) (param $l i32) (param $m i32) (param $r i32) (param $buffer i32) (param $comparator i32)
  (local $i i32)
  (local $j i32)
  (local $t i32)
  (local $9 i32)
  (local $10 i32)
  (local $k i32)
  (local $12 i32)
  (local $a f64)
  (local $b f64)
  local.get $m
  i32.const 1
  i32.sub
  local.set $m
  local.get $r
  local.get $m
  i32.add
  local.set $t
  local.get $m
  i32.const 1
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $l
   i32.gt_s
   local.set $9
   local.get $9
   if
    local.get $buffer
    local.get $i
    i32.const 1
    i32.sub
    i32.const 3
    i32.shl
    i32.add
    local.get $ptr
    local.get $i
    i32.const 1
    i32.sub
    i32.const 3
    i32.shl
    i32.add
    f64.load $0
    f64.store $0
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  local.get $m
  local.set $j
  loop $for-loop|1
   local.get $j
   local.get $r
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $buffer
    local.get $t
    local.get $j
    i32.sub
    i32.const 3
    i32.shl
    i32.add
    local.get $ptr
    local.get $j
    i32.const 3
    i32.shl
    i32.add
    f64.load $0 offset=8
    f64.store $0
    local.get $j
    i32.const 1
    i32.add
    local.set $j
    br $for-loop|1
   end
  end
  local.get $l
  local.set $k
  loop $for-loop|2
   local.get $k
   local.get $r
   i32.le_s
   local.set $12
   local.get $12
   if
    local.get $buffer
    local.get $j
    i32.const 3
    i32.shl
    i32.add
    f64.load $0
    local.set $a
    local.get $buffer
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    f64.load $0
    local.set $b
    local.get $a
    local.get $b
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $f64_f64_=>_i32)
    i32.const 0
    i32.lt_s
    if
     local.get $ptr
     local.get $k
     i32.const 3
     i32.shl
     i32.add
     local.get $a
     f64.store $0
     local.get $j
     i32.const 1
     i32.sub
     local.set $j
    else
     local.get $ptr
     local.get $k
     i32.const 3
     i32.shl
     i32.add
     local.get $b
     f64.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
    end
    local.get $k
    i32.const 1
    i32.add
    local.set $k
    br $for-loop|2
   end
  end
 )
 (func $~lib/util/sort/SORT<f64> (type $i32_i32_i32_=>_none) (param $ptr i32) (param $len i32) (param $comparator i32)
  (local $3 i32)
  (local $a f64)
  (local $b f64)
  (local $c i32)
  (local $a|7 f64)
  (local $b|8 f64)
  (local $c|9 i32)
  (local $n i32)
  (local $lgPlus2 i32)
  (local $lgPlus2Size i32)
  (local $leftRunStartBuf i32)
  (local $leftRunEndBuf i32)
  (local $i i32)
  (local $16 i32)
  (local $buffer i32)
  (local $hi i32)
  (local $endA i32)
  (local $lenA i32)
  (local $21 i32)
  (local $22 i32)
  (local $top i32)
  (local $startA i32)
  (local $25 i32)
  (local $startB i32)
  (local $endB i32)
  (local $lenB i32)
  (local $29 i32)
  (local $30 i32)
  (local $k i32)
  (local $i|32 i32)
  (local $33 i32)
  (local $start i32)
  (local $i|35 i32)
  (local $36 i32)
  (local $start|37 i32)
  local.get $len
  i32.const 48
  i32.le_s
  if
   local.get $len
   i32.const 1
   i32.le_s
   if
    return
   end
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   block $break|0
    block $case1|0
     block $case0|0
      local.get $len
      local.set $3
      local.get $3
      i32.const 3
      i32.eq
      br_if $case0|0
      local.get $3
      i32.const 2
      i32.eq
      br_if $case1|0
      br $break|0
     end
     local.get $ptr
     f64.load $0
     local.set $a
     local.get $ptr
     f64.load $0 offset=8
     local.set $b
     local.get $a
     local.get $b
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $f64_f64_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $c
     local.get $ptr
     local.get $b
     local.get $a
     local.get $c
     select
     f64.store $0
     local.get $a
     local.get $b
     local.get $c
     select
     local.set $a
     local.get $ptr
     f64.load $0 offset=16
     local.set $b
     local.get $a
     local.get $b
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $f64_f64_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $c
     local.get $ptr
     local.get $b
     local.get $a
     local.get $c
     select
     f64.store $0 offset=8
     local.get $ptr
     local.get $a
     local.get $b
     local.get $c
     select
     f64.store $0 offset=16
    end
    local.get $ptr
    f64.load $0
    local.set $a|7
    local.get $ptr
    f64.load $0 offset=8
    local.set $b|8
    local.get $a|7
    local.get $b|8
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $f64_f64_=>_i32)
    i32.const 0
    i32.gt_s
    local.set $c|9
    local.get $ptr
    local.get $b|8
    local.get $a|7
    local.get $c|9
    select
    f64.store $0
    local.get $ptr
    local.get $a|7
    local.get $b|8
    local.get $c|9
    select
    f64.store $0 offset=8
    return
   end
   local.get $ptr
   i32.const 0
   local.get $len
   i32.const 1
   i32.sub
   i32.const 0
   local.get $comparator
   call $~lib/util/sort/insertionSort<f64>
   return
  end
  local.get $len
  local.set $n
  i32.const 31
  local.get $n
  i32.clz
  i32.sub
  i32.const 2
  i32.add
  local.set $lgPlus2
  local.get $lgPlus2
  i32.const 2
  i32.shl
  local.set $lgPlus2Size
  local.get $lgPlus2Size
  i32.const 1
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $leftRunStartBuf
  local.get $leftRunStartBuf
  local.get $lgPlus2Size
  i32.add
  local.set $leftRunEndBuf
  i32.const 0
  local.set $i
  loop $for-loop|1
   local.get $i
   local.get $lgPlus2
   i32.lt_u
   local.set $16
   local.get $16
   if
    local.get $leftRunStartBuf
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.const -1
    i32.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|1
   end
  end
  local.get $len
  i32.const 3
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $buffer
  local.get $len
  i32.const 1
  i32.sub
  local.set $hi
  local.get $ptr
  i32.const 0
  local.get $hi
  local.get $comparator
  call $~lib/util/sort/extendRunRight<f64>
  local.set $endA
  local.get $endA
  i32.const 1
  i32.add
  local.set $lenA
  local.get $lenA
  i32.const 32
  i32.lt_s
  if
   local.get $hi
   local.tee $21
   i32.const 32
   i32.const 1
   i32.sub
   local.tee $22
   local.get $21
   local.get $22
   i32.lt_s
   select
   local.set $endA
   local.get $ptr
   i32.const 0
   local.get $endA
   local.get $lenA
   local.get $comparator
   call $~lib/util/sort/insertionSort<f64>
  end
  i32.const 0
  local.set $top
  i32.const 0
  local.set $startA
  loop $while-continue|2
   local.get $endA
   local.get $hi
   i32.lt_s
   local.set $25
   local.get $25
   if
    local.get $endA
    i32.const 1
    i32.add
    local.set $startB
    local.get $ptr
    local.get $startB
    local.get $hi
    local.get $comparator
    call $~lib/util/sort/extendRunRight<f64>
    local.set $endB
    local.get $endB
    local.get $startB
    i32.sub
    i32.const 1
    i32.add
    local.set $lenB
    local.get $lenB
    i32.const 32
    i32.lt_s
    if
     local.get $hi
     local.tee $29
     local.get $startB
     i32.const 32
     i32.add
     i32.const 1
     i32.sub
     local.tee $30
     local.get $29
     local.get $30
     i32.lt_s
     select
     local.set $endB
     local.get $ptr
     local.get $startB
     local.get $endB
     local.get $lenB
     local.get $comparator
     call $~lib/util/sort/insertionSort<f64>
    end
    i32.const 0
    local.get $hi
    local.get $startA
    local.get $startB
    local.get $endB
    call $~lib/util/sort/nodePower
    local.set $k
    local.get $top
    local.set $i|32
    loop $for-loop|3
     local.get $i|32
     local.get $k
     i32.gt_u
     local.set $33
     local.get $33
     if
      local.get $leftRunStartBuf
      local.get $i|32
      i32.const 2
      i32.shl
      i32.add
      i32.load $0
      local.set $start
      local.get $start
      i32.const -1
      i32.ne
      if
       local.get $ptr
       local.get $start
       local.get $leftRunEndBuf
       local.get $i|32
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       i32.const 1
       i32.add
       local.get $endA
       local.get $buffer
       local.get $comparator
       call $~lib/util/sort/mergeRuns<f64>
       local.get $start
       local.set $startA
       local.get $leftRunStartBuf
       local.get $i|32
       i32.const 2
       i32.shl
       i32.add
       i32.const -1
       i32.store $0
      end
      local.get $i|32
      i32.const 1
      i32.sub
      local.set $i|32
      br $for-loop|3
     end
    end
    local.get $leftRunStartBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $startA
    i32.store $0
    local.get $leftRunEndBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $endA
    i32.store $0
    local.get $startB
    local.set $startA
    local.get $endB
    local.set $endA
    local.get $k
    local.set $top
    br $while-continue|2
   end
  end
  local.get $top
  local.set $i|35
  loop $for-loop|4
   local.get $i|35
   i32.const 0
   i32.ne
   local.set $36
   local.get $36
   if
    local.get $leftRunStartBuf
    local.get $i|35
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $start|37
    local.get $start|37
    i32.const -1
    i32.ne
    if
     local.get $ptr
     local.get $start|37
     local.get $leftRunEndBuf
     local.get $i|35
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 1
     i32.add
     local.get $hi
     local.get $buffer
     local.get $comparator
     call $~lib/util/sort/mergeRuns<f64>
    end
    local.get $i|35
    i32.const 1
    i32.sub
    local.set $i|35
    br $for-loop|4
   end
  end
  local.get $buffer
  call $~lib/rt/tlsf/__free
  local.get $leftRunStartBuf
  call $~lib/rt/tlsf/__free
 )
 (func $~lib/typedarray/Float64Array#sort (type $i32_i32_=>_i32) (param $this i32) (param $comparator i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Float64Array#get:length
  local.get $comparator
  call $~lib/util/sort/SORT<f64>
  local.get $this
 )
 (func $~lib/util/sort/COMPARATOR<f64>~anonymous|0 (type $f64_f64_=>_i32) (param $a f64) (param $b f64) (result i32)
  (local $ia i64)
  (local $ib i64)
  local.get $a
  i64.reinterpret_f64
  local.set $ia
  local.get $b
  i64.reinterpret_f64
  local.set $ib
  local.get $ia
  local.get $ia
  i64.const 63
  i64.shr_s
  i64.const 1
  i64.shr_u
  i64.xor
  local.set $ia
  local.get $ib
  local.get $ib
  i64.const 63
  i64.shr_s
  i64.const 1
  i64.shr_u
  i64.xor
  local.set $ib
  local.get $ia
  local.get $ib
  i64.gt_s
  local.get $ia
  local.get $ib
  i64.lt_s
  i32.sub
 )
 (func $~lib/typedarray/Float64Array#__get (type $i32_i32_=>_f64) (param $this i32) (param $index i32) (result f64)
  local.get $index
  local.get $this
  i32.load $0 offset=8
  i32.const 3
  i32.shr_u
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 3
  i32.shl
  i32.add
  f64.load $0
 )
 (func $~lib/typedarray/Uint8ClampedArray#__set (type $i32_i32_i32_=>_none) (param $this i32) (param $index i32) (param $value i32)
  local.get $index
  local.get $this
  i32.load $0 offset=8
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.add
  local.get $value
  i32.const 31
  i32.shr_s
  i32.const -1
  i32.xor
  i32.const 255
  local.get $value
  i32.sub
  i32.const 31
  i32.shr_s
  local.get $value
  i32.or
  i32.and
  i32.store8 $0
 )
 (func $~lib/typedarray/Uint8ClampedArray#__get (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  local.get $index
  local.get $this
  i32.load $0 offset=8
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.add
  i32.load8_u $0
 )
 (func $~lib/typedarray/Int8Array#__set (type $i32_i32_i32_=>_none) (param $this i32) (param $index i32) (param $value i32)
  local.get $index
  local.get $this
  i32.load $0 offset=8
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.add
  local.get $value
  i32.store8 $0
 )
 (func $~lib/util/bytes/FILL<u8> (type $i32_i32_i32_i32_i32_=>_none) (param $ptr i32) (param $len i32) (param $value i32) (param $start i32) (param $end i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  local.get $start
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $start
   i32.add
   local.tee $5
   i32.const 0
   local.tee $6
   local.get $5
   local.get $6
   i32.gt_u
   select
  else
   local.get $start
   local.tee $7
   local.get $len
   local.tee $8
   local.get $7
   local.get $8
   i32.lt_s
   select
  end
  local.set $start
  local.get $end
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $end
   i32.add
   local.tee $9
   i32.const 0
   local.tee $10
   local.get $9
   local.get $10
   i32.gt_u
   select
  else
   local.get $end
   local.tee $11
   local.get $len
   local.tee $12
   local.get $11
   local.get $12
   i32.lt_s
   select
  end
  local.set $end
  i32.const 1
  i32.const 1
  i32.eq
  drop
  local.get $start
  local.get $end
  i32.lt_s
  if
   local.get $ptr
   local.get $start
   i32.add
   local.get $value
   local.get $end
   local.get $start
   i32.sub
   memory.fill $0
  end
 )
 (func $~lib/typedarray/Int8Array#fill (type $i32_i32_i32_i32_=>_i32) (param $this i32) (param $value i32) (param $start i32) (param $end i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Int8Array#get:length
  local.get $value
  local.get $start
  local.get $end
  call $~lib/util/bytes/FILL<u8>
  local.get $this
 )
 (func $~lib/rt/__newBuffer (type $i32_i32_i32_=>_i32) (param $size i32) (param $id i32) (param $data i32) (result i32)
  (local $buffer i32)
  local.get $size
  local.get $id
  call $~lib/rt/itcms/__new
  local.set $buffer
  local.get $data
  if
   local.get $buffer
   local.get $data
   local.get $size
   memory.copy $0 $0
  end
  local.get $buffer
 )
 (func $~lib/array/Array<i8>#get:length (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/typedarray/Int8Array#__get (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  local.get $index
  local.get $this
  i32.load $0 offset=8
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.add
  i32.load8_s $0
 )
 (func $~lib/array/Array<i8>#__get (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  local.get $index
  local.get $this
  i32.load $0 offset=12
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 0
  i32.shl
  i32.add
  i32.load8_s $0
  local.set $value
  i32.const 0
  drop
  local.get $value
 )
 (func $~lib/util/bytes/FILL<u32> (type $i32_i32_i32_i32_i32_=>_none) (param $ptr i32) (param $len i32) (param $value i32) (param $start i32) (param $end i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  local.get $start
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $start
   i32.add
   local.tee $5
   i32.const 0
   local.tee $6
   local.get $5
   local.get $6
   i32.gt_u
   select
  else
   local.get $start
   local.tee $7
   local.get $len
   local.tee $8
   local.get $7
   local.get $8
   i32.lt_s
   select
  end
  local.set $start
  local.get $end
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $end
   i32.add
   local.tee $9
   i32.const 0
   local.tee $10
   local.get $9
   local.get $10
   i32.gt_u
   select
  else
   local.get $end
   local.tee $11
   local.get $len
   local.tee $12
   local.get $11
   local.get $12
   i32.lt_s
   select
  end
  local.set $end
  i32.const 4
  i32.const 1
  i32.eq
  drop
  i32.const 0
  i32.const 1
  i32.le_s
  drop
  i32.const 1
  drop
  local.get $value
  i32.const 0
  i32.eq
  local.get $value
  i32.const -1
  i32.eq
  i32.or
  if
   local.get $start
   local.get $end
   i32.lt_s
   if
    local.get $ptr
    local.get $start
    i32.const 2
    i32.shl
    i32.add
    local.get $value
    local.get $end
    local.get $start
    i32.sub
    i32.const 2
    i32.shl
    memory.fill $0
   end
   return
  end
  loop $for-loop|0
   local.get $start
   local.get $end
   i32.lt_s
   local.set $13
   local.get $13
   if
    local.get $ptr
    local.get $start
    i32.const 2
    i32.shl
    i32.add
    local.get $value
    i32.store $0
    local.get $start
    i32.const 1
    i32.add
    local.set $start
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Int32Array#fill (type $i32_i32_i32_i32_=>_i32) (param $this i32) (param $value i32) (param $start i32) (param $end i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Int32Array#get:length
  local.get $value
  local.get $start
  local.get $end
  call $~lib/util/bytes/FILL<u32>
  local.get $this
 )
 (func $~lib/array/Array<i32>#get:length (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/array/Array<i32>#__get (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  local.get $index
  local.get $this
  i32.load $0 offset=12
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.set $value
  i32.const 0
  drop
  local.get $value
 )
 (func $~lib/typedarray/Int32Array#copyWithin (type $i32_i32_i32_i32_=>_i32) (param $this i32) (param $target i32) (param $start i32) (param $end i32) (result i32)
  (local $array i32)
  (local $target|5 i32)
  (local $start|6 i32)
  (local $end|7 i32)
  (local $len i32)
  (local $ptr i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $to i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $from i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $last i32)
  (local $27 i32)
  (local $28 i32)
  (local $count i32)
  local.get $this
  local.set $array
  local.get $target
  local.set $target|5
  local.get $start
  local.set $start|6
  local.get $end
  local.set $end|7
  local.get $array
  call $~lib/typedarray/Int32Array#get:length
  local.set $len
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  local.get $end|7
  local.tee $10
  local.get $len
  local.tee $11
  local.get $10
  local.get $11
  i32.lt_s
  select
  local.set $end|7
  local.get $target|5
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $target|5
   i32.add
   local.tee $12
   i32.const 0
   local.tee $13
   local.get $12
   local.get $13
   i32.gt_s
   select
  else
   local.get $target|5
   local.tee $14
   local.get $len
   local.tee $15
   local.get $14
   local.get $15
   i32.lt_s
   select
  end
  local.set $to
  local.get $start|6
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $start|6
   i32.add
   local.tee $17
   i32.const 0
   local.tee $18
   local.get $17
   local.get $18
   i32.gt_s
   select
  else
   local.get $start|6
   local.tee $19
   local.get $len
   local.tee $20
   local.get $19
   local.get $20
   i32.lt_s
   select
  end
  local.set $from
  local.get $end|7
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $end|7
   i32.add
   local.tee $22
   i32.const 0
   local.tee $23
   local.get $22
   local.get $23
   i32.gt_s
   select
  else
   local.get $end|7
   local.tee $24
   local.get $len
   local.tee $25
   local.get $24
   local.get $25
   i32.lt_s
   select
  end
  local.set $last
  local.get $last
  local.get $from
  i32.sub
  local.tee $27
  local.get $len
  local.get $to
  i32.sub
  local.tee $28
  local.get $27
  local.get $28
  i32.lt_s
  select
  local.set $count
  local.get $ptr
  local.get $to
  i32.const 2
  i32.shl
  i32.add
  local.get $ptr
  local.get $from
  i32.const 2
  i32.shl
  i32.add
  local.get $count
  i32.const 2
  i32.shl
  memory.copy $0 $0
  local.get $array
 )
 (func $std/typedarray/testReduce<~lib/typedarray/Int8Array,i8>~anonymous|0 (type $i32_i32_i32_i32_=>_i32) (param $acc i32) (param $val i32) (param $$2 i32) (param $$3 i32) (result i32)
  local.get $acc
  local.get $val
  i32.add
 )
 (func $~lib/typedarray/Int8Array#reduce<i8> (type $i32_i32_i32_=>_i32) (param $this i32) (param $fn i32) (param $initialValue i32) (result i32)
  (local $array i32)
  (local $fn|4 i32)
  (local $initialValue|5 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $9 i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|4
  local.get $initialValue
  local.set $initialValue|5
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  i32.const 0
  local.set $i
  local.get $array
  call $~lib/typedarray/Int8Array#get:length
  local.set $k
  loop $for-loop|0
   local.get $i
   local.get $k
   i32.lt_s
   local.set $9
   local.get $9
   if
    local.get $initialValue|5
    local.get $ptr
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    i32.load8_s $0
    local.get $i
    local.get $array
    i32.const 4
    global.set $~argumentsLength
    local.get $fn|4
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
    local.set $initialValue|5
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $initialValue|5
 )
 (func $~lib/typedarray/Uint8Array#__set (type $i32_i32_i32_=>_none) (param $this i32) (param $index i32) (param $value i32)
  local.get $index
  local.get $this
  i32.load $0 offset=8
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.add
  local.get $value
  i32.store8 $0
 )
 (func $std/typedarray/testReduce<~lib/typedarray/Uint8Array,u8>~anonymous|0 (type $i32_i32_i32_i32_=>_i32) (param $acc i32) (param $val i32) (param $$2 i32) (param $$3 i32) (result i32)
  local.get $acc
  local.get $val
  i32.add
 )
 (func $~lib/typedarray/Uint8Array#reduce<u8> (type $i32_i32_i32_=>_i32) (param $this i32) (param $fn i32) (param $initialValue i32) (result i32)
  (local $array i32)
  (local $fn|4 i32)
  (local $initialValue|5 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $9 i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|4
  local.get $initialValue
  local.set $initialValue|5
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  i32.const 0
  local.set $i
  local.get $array
  call $~lib/typedarray/Uint8Array#get:length
  local.set $k
  loop $for-loop|0
   local.get $i
   local.get $k
   i32.lt_s
   local.set $9
   local.get $9
   if
    local.get $initialValue|5
    local.get $ptr
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    i32.load8_u $0
    local.get $i
    local.get $array
    i32.const 4
    global.set $~argumentsLength
    local.get $fn|4
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
    local.set $initialValue|5
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $initialValue|5
 )
 (func $std/typedarray/testReduce<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|0 (type $i32_i32_i32_i32_=>_i32) (param $acc i32) (param $val i32) (param $$2 i32) (param $$3 i32) (result i32)
  local.get $acc
  local.get $val
  i32.add
 )
 (func $~lib/typedarray/Uint8ClampedArray#reduce<u8> (type $i32_i32_i32_=>_i32) (param $this i32) (param $fn i32) (param $initialValue i32) (result i32)
  (local $array i32)
  (local $fn|4 i32)
  (local $initialValue|5 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $9 i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|4
  local.get $initialValue
  local.set $initialValue|5
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  i32.const 0
  local.set $i
  local.get $array
  call $~lib/typedarray/Uint8ClampedArray#get:length
  local.set $k
  loop $for-loop|0
   local.get $i
   local.get $k
   i32.lt_s
   local.set $9
   local.get $9
   if
    local.get $initialValue|5
    local.get $ptr
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    i32.load8_u $0
    local.get $i
    local.get $array
    i32.const 4
    global.set $~argumentsLength
    local.get $fn|4
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
    local.set $initialValue|5
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $initialValue|5
 )
 (func $~lib/typedarray/Int16Array#__set (type $i32_i32_i32_=>_none) (param $this i32) (param $index i32) (param $value i32)
  local.get $index
  local.get $this
  i32.load $0 offset=8
  i32.const 1
  i32.shr_u
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 1
  i32.shl
  i32.add
  local.get $value
  i32.store16 $0
 )
 (func $std/typedarray/testReduce<~lib/typedarray/Int16Array,i16>~anonymous|0 (type $i32_i32_i32_i32_=>_i32) (param $acc i32) (param $val i32) (param $$2 i32) (param $$3 i32) (result i32)
  local.get $acc
  local.get $val
  i32.add
 )
 (func $~lib/typedarray/Int16Array#reduce<i16> (type $i32_i32_i32_=>_i32) (param $this i32) (param $fn i32) (param $initialValue i32) (result i32)
  (local $array i32)
  (local $fn|4 i32)
  (local $initialValue|5 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $9 i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|4
  local.get $initialValue
  local.set $initialValue|5
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  i32.const 0
  local.set $i
  local.get $array
  call $~lib/typedarray/Int16Array#get:length
  local.set $k
  loop $for-loop|0
   local.get $i
   local.get $k
   i32.lt_s
   local.set $9
   local.get $9
   if
    local.get $initialValue|5
    local.get $ptr
    local.get $i
    i32.const 1
    i32.shl
    i32.add
    i32.load16_s $0
    local.get $i
    local.get $array
    i32.const 4
    global.set $~argumentsLength
    local.get $fn|4
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
    local.set $initialValue|5
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $initialValue|5
 )
 (func $~lib/typedarray/Uint16Array#__set (type $i32_i32_i32_=>_none) (param $this i32) (param $index i32) (param $value i32)
  local.get $index
  local.get $this
  i32.load $0 offset=8
  i32.const 1
  i32.shr_u
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 1
  i32.shl
  i32.add
  local.get $value
  i32.store16 $0
 )
 (func $std/typedarray/testReduce<~lib/typedarray/Uint16Array,u16>~anonymous|0 (type $i32_i32_i32_i32_=>_i32) (param $acc i32) (param $val i32) (param $$2 i32) (param $$3 i32) (result i32)
  local.get $acc
  local.get $val
  i32.add
 )
 (func $~lib/typedarray/Uint16Array#reduce<u16> (type $i32_i32_i32_=>_i32) (param $this i32) (param $fn i32) (param $initialValue i32) (result i32)
  (local $array i32)
  (local $fn|4 i32)
  (local $initialValue|5 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $9 i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|4
  local.get $initialValue
  local.set $initialValue|5
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  i32.const 0
  local.set $i
  local.get $array
  call $~lib/typedarray/Uint16Array#get:length
  local.set $k
  loop $for-loop|0
   local.get $i
   local.get $k
   i32.lt_s
   local.set $9
   local.get $9
   if
    local.get $initialValue|5
    local.get $ptr
    local.get $i
    i32.const 1
    i32.shl
    i32.add
    i32.load16_u $0
    local.get $i
    local.get $array
    i32.const 4
    global.set $~argumentsLength
    local.get $fn|4
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
    local.set $initialValue|5
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $initialValue|5
 )
 (func $std/typedarray/testReduce<~lib/typedarray/Int32Array,i32>~anonymous|0 (type $i32_i32_i32_i32_=>_i32) (param $acc i32) (param $val i32) (param $$2 i32) (param $$3 i32) (result i32)
  local.get $acc
  local.get $val
  i32.add
 )
 (func $~lib/typedarray/Int32Array#reduce<i32> (type $i32_i32_i32_=>_i32) (param $this i32) (param $fn i32) (param $initialValue i32) (result i32)
  (local $array i32)
  (local $fn|4 i32)
  (local $initialValue|5 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $9 i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|4
  local.get $initialValue
  local.set $initialValue|5
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  i32.const 0
  local.set $i
  local.get $array
  call $~lib/typedarray/Int32Array#get:length
  local.set $k
  loop $for-loop|0
   local.get $i
   local.get $k
   i32.lt_s
   local.set $9
   local.get $9
   if
    local.get $initialValue|5
    local.get $ptr
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.get $i
    local.get $array
    i32.const 4
    global.set $~argumentsLength
    local.get $fn|4
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
    local.set $initialValue|5
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $initialValue|5
 )
 (func $~lib/typedarray/Uint32Array#__set (type $i32_i32_i32_=>_none) (param $this i32) (param $index i32) (param $value i32)
  local.get $index
  local.get $this
  i32.load $0 offset=8
  i32.const 2
  i32.shr_u
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store $0
 )
 (func $std/typedarray/testReduce<~lib/typedarray/Uint32Array,u32>~anonymous|0 (type $i32_i32_i32_i32_=>_i32) (param $acc i32) (param $val i32) (param $$2 i32) (param $$3 i32) (result i32)
  local.get $acc
  local.get $val
  i32.add
 )
 (func $~lib/typedarray/Uint32Array#reduce<u32> (type $i32_i32_i32_=>_i32) (param $this i32) (param $fn i32) (param $initialValue i32) (result i32)
  (local $array i32)
  (local $fn|4 i32)
  (local $initialValue|5 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $9 i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|4
  local.get $initialValue
  local.set $initialValue|5
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  i32.const 0
  local.set $i
  local.get $array
  call $~lib/typedarray/Uint32Array#get:length
  local.set $k
  loop $for-loop|0
   local.get $i
   local.get $k
   i32.lt_s
   local.set $9
   local.get $9
   if
    local.get $initialValue|5
    local.get $ptr
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.get $i
    local.get $array
    i32.const 4
    global.set $~argumentsLength
    local.get $fn|4
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
    local.set $initialValue|5
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $initialValue|5
 )
 (func $~lib/typedarray/Int64Array#__set (type $i32_i32_i64_=>_none) (param $this i32) (param $index i32) (param $value i64)
  local.get $index
  local.get $this
  i32.load $0 offset=8
  i32.const 3
  i32.shr_u
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 3
  i32.shl
  i32.add
  local.get $value
  i64.store $0
 )
 (func $std/typedarray/testReduce<~lib/typedarray/Int64Array,i64>~anonymous|0 (type $i64_i64_i32_i32_=>_i64) (param $acc i64) (param $val i64) (param $$2 i32) (param $$3 i32) (result i64)
  local.get $acc
  local.get $val
  i64.add
 )
 (func $~lib/typedarray/Int64Array#reduce<i64> (type $i32_i32_i64_=>_i64) (param $this i32) (param $fn i32) (param $initialValue i64) (result i64)
  (local $array i32)
  (local $fn|4 i32)
  (local $initialValue|5 i64)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $9 i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|4
  local.get $initialValue
  local.set $initialValue|5
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  i32.const 0
  local.set $i
  local.get $array
  call $~lib/typedarray/Int64Array#get:length
  local.set $k
  loop $for-loop|0
   local.get $i
   local.get $k
   i32.lt_s
   local.set $9
   local.get $9
   if
    local.get $initialValue|5
    local.get $ptr
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    local.get $i
    local.get $array
    i32.const 4
    global.set $~argumentsLength
    local.get $fn|4
    i32.load $0
    call_indirect $0 (type $i64_i64_i32_i32_=>_i64)
    local.set $initialValue|5
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $initialValue|5
 )
 (func $~lib/typedarray/Uint64Array#__set (type $i32_i32_i64_=>_none) (param $this i32) (param $index i32) (param $value i64)
  local.get $index
  local.get $this
  i32.load $0 offset=8
  i32.const 3
  i32.shr_u
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 3
  i32.shl
  i32.add
  local.get $value
  i64.store $0
 )
 (func $std/typedarray/testReduce<~lib/typedarray/Uint64Array,u64>~anonymous|0 (type $i64_i64_i32_i32_=>_i64) (param $acc i64) (param $val i64) (param $$2 i32) (param $$3 i32) (result i64)
  local.get $acc
  local.get $val
  i64.add
 )
 (func $~lib/typedarray/Uint64Array#reduce<u64> (type $i32_i32_i64_=>_i64) (param $this i32) (param $fn i32) (param $initialValue i64) (result i64)
  (local $array i32)
  (local $fn|4 i32)
  (local $initialValue|5 i64)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $9 i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|4
  local.get $initialValue
  local.set $initialValue|5
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  i32.const 0
  local.set $i
  local.get $array
  call $~lib/typedarray/Uint64Array#get:length
  local.set $k
  loop $for-loop|0
   local.get $i
   local.get $k
   i32.lt_s
   local.set $9
   local.get $9
   if
    local.get $initialValue|5
    local.get $ptr
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    local.get $i
    local.get $array
    i32.const 4
    global.set $~argumentsLength
    local.get $fn|4
    i32.load $0
    call_indirect $0 (type $i64_i64_i32_i32_=>_i64)
    local.set $initialValue|5
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $initialValue|5
 )
 (func $~lib/typedarray/Float32Array#__set (type $i32_i32_f32_=>_none) (param $this i32) (param $index i32) (param $value f32)
  local.get $index
  local.get $this
  i32.load $0 offset=8
  i32.const 2
  i32.shr_u
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  f32.store $0
 )
 (func $std/typedarray/testReduce<~lib/typedarray/Float32Array,f32>~anonymous|0 (type $f32_f32_i32_i32_=>_f32) (param $acc f32) (param $val f32) (param $$2 i32) (param $$3 i32) (result f32)
  local.get $acc
  local.get $val
  f32.add
 )
 (func $~lib/typedarray/Float32Array#reduce<f32> (type $i32_i32_f32_=>_f32) (param $this i32) (param $fn i32) (param $initialValue f32) (result f32)
  (local $array i32)
  (local $fn|4 i32)
  (local $initialValue|5 f32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $9 i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|4
  local.get $initialValue
  local.set $initialValue|5
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  i32.const 0
  local.set $i
  local.get $array
  call $~lib/typedarray/Float32Array#get:length
  local.set $k
  loop $for-loop|0
   local.get $i
   local.get $k
   i32.lt_s
   local.set $9
   local.get $9
   if
    local.get $initialValue|5
    local.get $ptr
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    f32.load $0
    local.get $i
    local.get $array
    i32.const 4
    global.set $~argumentsLength
    local.get $fn|4
    i32.load $0
    call_indirect $0 (type $f32_f32_i32_i32_=>_f32)
    local.set $initialValue|5
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $initialValue|5
 )
 (func $std/typedarray/testReduce<~lib/typedarray/Float64Array,f64>~anonymous|0 (type $f64_f64_i32_i32_=>_f64) (param $acc f64) (param $val f64) (param $$2 i32) (param $$3 i32) (result f64)
  local.get $acc
  local.get $val
  f64.add
 )
 (func $~lib/typedarray/Float64Array#reduce<f64> (type $i32_i32_f64_=>_f64) (param $this i32) (param $fn i32) (param $initialValue f64) (result f64)
  (local $array i32)
  (local $fn|4 i32)
  (local $initialValue|5 f64)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $9 i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|4
  local.get $initialValue
  local.set $initialValue|5
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  i32.const 0
  local.set $i
  local.get $array
  call $~lib/typedarray/Float64Array#get:length
  local.set $k
  loop $for-loop|0
   local.get $i
   local.get $k
   i32.lt_s
   local.set $9
   local.get $9
   if
    local.get $initialValue|5
    local.get $ptr
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    f64.load $0
    local.get $i
    local.get $array
    i32.const 4
    global.set $~argumentsLength
    local.get $fn|4
    i32.load $0
    call_indirect $0 (type $f64_f64_i32_i32_=>_f64)
    local.set $initialValue|5
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $initialValue|5
 )
 (func $~lib/typedarray/Int8Array#at (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  (local $len i32)
  local.get $this
  i32.load $0 offset=8
  local.set $len
  local.get $index
  i32.const 0
  local.get $len
  local.get $index
  i32.const 0
  i32.ge_s
  select
  i32.add
  local.set $index
  local.get $index
  local.get $len
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.add
  i32.load8_s $0
 )
 (func $~lib/typedarray/Uint8Array#at (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  (local $len i32)
  local.get $this
  i32.load $0 offset=8
  local.set $len
  local.get $index
  i32.const 0
  local.get $len
  local.get $index
  i32.const 0
  i32.ge_s
  select
  i32.add
  local.set $index
  local.get $index
  local.get $len
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.add
  i32.load8_u $0
 )
 (func $~lib/typedarray/Uint8ClampedArray#at (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  (local $len i32)
  local.get $this
  i32.load $0 offset=8
  local.set $len
  local.get $index
  i32.const 0
  local.get $len
  local.get $index
  i32.const 0
  i32.ge_s
  select
  i32.add
  local.set $index
  local.get $index
  local.get $len
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.add
  i32.load8_u $0
 )
 (func $~lib/typedarray/Int16Array#at (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  (local $len i32)
  local.get $this
  i32.load $0 offset=8
  i32.const 1
  i32.shr_u
  local.set $len
  local.get $index
  i32.const 0
  local.get $len
  local.get $index
  i32.const 0
  i32.ge_s
  select
  i32.add
  local.set $index
  local.get $index
  local.get $len
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 1
  i32.shl
  i32.add
  i32.load16_s $0
 )
 (func $~lib/typedarray/Uint16Array#at (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  (local $len i32)
  local.get $this
  i32.load $0 offset=8
  i32.const 1
  i32.shr_u
  local.set $len
  local.get $index
  i32.const 0
  local.get $len
  local.get $index
  i32.const 0
  i32.ge_s
  select
  i32.add
  local.set $index
  local.get $index
  local.get $len
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 1
  i32.shl
  i32.add
  i32.load16_u $0
 )
 (func $~lib/typedarray/Int32Array#at (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  (local $len i32)
  local.get $this
  i32.load $0 offset=8
  i32.const 2
  i32.shr_u
  local.set $len
  local.get $index
  i32.const 0
  local.get $len
  local.get $index
  i32.const 0
  i32.ge_s
  select
  i32.add
  local.set $index
  local.get $index
  local.get $len
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
 )
 (func $~lib/typedarray/Uint32Array#at (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  (local $len i32)
  local.get $this
  i32.load $0 offset=8
  i32.const 2
  i32.shr_u
  local.set $len
  local.get $index
  i32.const 0
  local.get $len
  local.get $index
  i32.const 0
  i32.ge_s
  select
  i32.add
  local.set $index
  local.get $index
  local.get $len
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
 )
 (func $~lib/typedarray/Int64Array#at (type $i32_i32_=>_i64) (param $this i32) (param $index i32) (result i64)
  (local $len i32)
  local.get $this
  i32.load $0 offset=8
  i32.const 3
  i32.shr_u
  local.set $len
  local.get $index
  i32.const 0
  local.get $len
  local.get $index
  i32.const 0
  i32.ge_s
  select
  i32.add
  local.set $index
  local.get $index
  local.get $len
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 3
  i32.shl
  i32.add
  i64.load $0
 )
 (func $~lib/typedarray/Uint64Array#at (type $i32_i32_=>_i64) (param $this i32) (param $index i32) (result i64)
  (local $len i32)
  local.get $this
  i32.load $0 offset=8
  i32.const 3
  i32.shr_u
  local.set $len
  local.get $index
  i32.const 0
  local.get $len
  local.get $index
  i32.const 0
  i32.ge_s
  select
  i32.add
  local.set $index
  local.get $index
  local.get $len
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 3
  i32.shl
  i32.add
  i64.load $0
 )
 (func $~lib/typedarray/Float32Array#at (type $i32_i32_=>_f32) (param $this i32) (param $index i32) (result f32)
  (local $len i32)
  local.get $this
  i32.load $0 offset=8
  i32.const 2
  i32.shr_u
  local.set $len
  local.get $index
  i32.const 0
  local.get $len
  local.get $index
  i32.const 0
  i32.ge_s
  select
  i32.add
  local.set $index
  local.get $index
  local.get $len
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  f32.load $0
 )
 (func $~lib/typedarray/Float64Array#at (type $i32_i32_=>_f64) (param $this i32) (param $index i32) (result f64)
  (local $len i32)
  local.get $this
  i32.load $0 offset=8
  i32.const 3
  i32.shr_u
  local.set $len
  local.get $index
  i32.const 0
  local.get $len
  local.get $index
  i32.const 0
  i32.ge_s
  select
  i32.add
  local.set $index
  local.get $index
  local.get $len
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 3
  i32.shl
  i32.add
  f64.load $0
 )
 (func $std/typedarray/testReduceRight<~lib/typedarray/Int8Array,i8>~anonymous|0 (type $i32_i32_i32_i32_=>_i32) (param $acc i32) (param $val i32) (param $$2 i32) (param $$3 i32) (result i32)
  local.get $acc
  local.get $val
  i32.add
 )
 (func $~lib/typedarray/Int8Array#reduceRight<i8> (type $i32_i32_i32_=>_i32) (param $this i32) (param $fn i32) (param $initialValue i32) (result i32)
  (local $array i32)
  (local $fn|4 i32)
  (local $initialValue|5 i32)
  (local $ptr i32)
  (local $i i32)
  (local $8 i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|4
  local.get $initialValue
  local.set $initialValue|5
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  local.get $array
  call $~lib/typedarray/Int8Array#get:length
  i32.const 1
  i32.sub
  local.set $i
  loop $for-loop|0
   local.get $i
   i32.const 0
   i32.ge_s
   local.set $8
   local.get $8
   if
    local.get $initialValue|5
    local.get $ptr
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    i32.load8_s $0
    local.get $i
    local.get $array
    i32.const 4
    global.set $~argumentsLength
    local.get $fn|4
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
    local.set $initialValue|5
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  local.get $initialValue|5
 )
 (func $std/typedarray/testReduceRight<~lib/typedarray/Uint8Array,u8>~anonymous|0 (type $i32_i32_i32_i32_=>_i32) (param $acc i32) (param $val i32) (param $$2 i32) (param $$3 i32) (result i32)
  local.get $acc
  local.get $val
  i32.add
 )
 (func $~lib/typedarray/Uint8Array#reduceRight<u8> (type $i32_i32_i32_=>_i32) (param $this i32) (param $fn i32) (param $initialValue i32) (result i32)
  (local $array i32)
  (local $fn|4 i32)
  (local $initialValue|5 i32)
  (local $ptr i32)
  (local $i i32)
  (local $8 i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|4
  local.get $initialValue
  local.set $initialValue|5
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  local.get $array
  call $~lib/typedarray/Uint8Array#get:length
  i32.const 1
  i32.sub
  local.set $i
  loop $for-loop|0
   local.get $i
   i32.const 0
   i32.ge_s
   local.set $8
   local.get $8
   if
    local.get $initialValue|5
    local.get $ptr
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    i32.load8_u $0
    local.get $i
    local.get $array
    i32.const 4
    global.set $~argumentsLength
    local.get $fn|4
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
    local.set $initialValue|5
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  local.get $initialValue|5
 )
 (func $std/typedarray/testReduceRight<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|0 (type $i32_i32_i32_i32_=>_i32) (param $acc i32) (param $val i32) (param $$2 i32) (param $$3 i32) (result i32)
  local.get $acc
  local.get $val
  i32.add
 )
 (func $~lib/typedarray/Uint8ClampedArray#reduceRight<u8> (type $i32_i32_i32_=>_i32) (param $this i32) (param $fn i32) (param $initialValue i32) (result i32)
  (local $array i32)
  (local $fn|4 i32)
  (local $initialValue|5 i32)
  (local $ptr i32)
  (local $i i32)
  (local $8 i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|4
  local.get $initialValue
  local.set $initialValue|5
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  local.get $array
  call $~lib/typedarray/Uint8ClampedArray#get:length
  i32.const 1
  i32.sub
  local.set $i
  loop $for-loop|0
   local.get $i
   i32.const 0
   i32.ge_s
   local.set $8
   local.get $8
   if
    local.get $initialValue|5
    local.get $ptr
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    i32.load8_u $0
    local.get $i
    local.get $array
    i32.const 4
    global.set $~argumentsLength
    local.get $fn|4
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
    local.set $initialValue|5
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  local.get $initialValue|5
 )
 (func $std/typedarray/testReduceRight<~lib/typedarray/Int16Array,i16>~anonymous|0 (type $i32_i32_i32_i32_=>_i32) (param $acc i32) (param $val i32) (param $$2 i32) (param $$3 i32) (result i32)
  local.get $acc
  local.get $val
  i32.add
 )
 (func $~lib/typedarray/Int16Array#reduceRight<i16> (type $i32_i32_i32_=>_i32) (param $this i32) (param $fn i32) (param $initialValue i32) (result i32)
  (local $array i32)
  (local $fn|4 i32)
  (local $initialValue|5 i32)
  (local $ptr i32)
  (local $i i32)
  (local $8 i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|4
  local.get $initialValue
  local.set $initialValue|5
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  local.get $array
  call $~lib/typedarray/Int16Array#get:length
  i32.const 1
  i32.sub
  local.set $i
  loop $for-loop|0
   local.get $i
   i32.const 0
   i32.ge_s
   local.set $8
   local.get $8
   if
    local.get $initialValue|5
    local.get $ptr
    local.get $i
    i32.const 1
    i32.shl
    i32.add
    i32.load16_s $0
    local.get $i
    local.get $array
    i32.const 4
    global.set $~argumentsLength
    local.get $fn|4
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
    local.set $initialValue|5
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  local.get $initialValue|5
 )
 (func $std/typedarray/testReduceRight<~lib/typedarray/Uint16Array,u16>~anonymous|0 (type $i32_i32_i32_i32_=>_i32) (param $acc i32) (param $val i32) (param $$2 i32) (param $$3 i32) (result i32)
  local.get $acc
  local.get $val
  i32.add
 )
 (func $~lib/typedarray/Uint16Array#reduceRight<u16> (type $i32_i32_i32_=>_i32) (param $this i32) (param $fn i32) (param $initialValue i32) (result i32)
  (local $array i32)
  (local $fn|4 i32)
  (local $initialValue|5 i32)
  (local $ptr i32)
  (local $i i32)
  (local $8 i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|4
  local.get $initialValue
  local.set $initialValue|5
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  local.get $array
  call $~lib/typedarray/Uint16Array#get:length
  i32.const 1
  i32.sub
  local.set $i
  loop $for-loop|0
   local.get $i
   i32.const 0
   i32.ge_s
   local.set $8
   local.get $8
   if
    local.get $initialValue|5
    local.get $ptr
    local.get $i
    i32.const 1
    i32.shl
    i32.add
    i32.load16_u $0
    local.get $i
    local.get $array
    i32.const 4
    global.set $~argumentsLength
    local.get $fn|4
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
    local.set $initialValue|5
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  local.get $initialValue|5
 )
 (func $std/typedarray/testReduceRight<~lib/typedarray/Int32Array,i32>~anonymous|0 (type $i32_i32_i32_i32_=>_i32) (param $acc i32) (param $val i32) (param $$2 i32) (param $$3 i32) (result i32)
  local.get $acc
  local.get $val
  i32.add
 )
 (func $~lib/typedarray/Int32Array#reduceRight<i32> (type $i32_i32_i32_=>_i32) (param $this i32) (param $fn i32) (param $initialValue i32) (result i32)
  (local $array i32)
  (local $fn|4 i32)
  (local $initialValue|5 i32)
  (local $ptr i32)
  (local $i i32)
  (local $8 i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|4
  local.get $initialValue
  local.set $initialValue|5
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  local.get $array
  call $~lib/typedarray/Int32Array#get:length
  i32.const 1
  i32.sub
  local.set $i
  loop $for-loop|0
   local.get $i
   i32.const 0
   i32.ge_s
   local.set $8
   local.get $8
   if
    local.get $initialValue|5
    local.get $ptr
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.get $i
    local.get $array
    i32.const 4
    global.set $~argumentsLength
    local.get $fn|4
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
    local.set $initialValue|5
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  local.get $initialValue|5
 )
 (func $std/typedarray/testReduceRight<~lib/typedarray/Uint32Array,u32>~anonymous|0 (type $i32_i32_i32_i32_=>_i32) (param $acc i32) (param $val i32) (param $$2 i32) (param $$3 i32) (result i32)
  local.get $acc
  local.get $val
  i32.add
 )
 (func $~lib/typedarray/Uint32Array#reduceRight<u32> (type $i32_i32_i32_=>_i32) (param $this i32) (param $fn i32) (param $initialValue i32) (result i32)
  (local $array i32)
  (local $fn|4 i32)
  (local $initialValue|5 i32)
  (local $ptr i32)
  (local $i i32)
  (local $8 i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|4
  local.get $initialValue
  local.set $initialValue|5
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  local.get $array
  call $~lib/typedarray/Uint32Array#get:length
  i32.const 1
  i32.sub
  local.set $i
  loop $for-loop|0
   local.get $i
   i32.const 0
   i32.ge_s
   local.set $8
   local.get $8
   if
    local.get $initialValue|5
    local.get $ptr
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.get $i
    local.get $array
    i32.const 4
    global.set $~argumentsLength
    local.get $fn|4
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
    local.set $initialValue|5
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  local.get $initialValue|5
 )
 (func $std/typedarray/testReduceRight<~lib/typedarray/Int64Array,i64>~anonymous|0 (type $i64_i64_i32_i32_=>_i64) (param $acc i64) (param $val i64) (param $$2 i32) (param $$3 i32) (result i64)
  local.get $acc
  local.get $val
  i64.add
 )
 (func $~lib/typedarray/Int64Array#reduceRight<i64> (type $i32_i32_i64_=>_i64) (param $this i32) (param $fn i32) (param $initialValue i64) (result i64)
  (local $array i32)
  (local $fn|4 i32)
  (local $initialValue|5 i64)
  (local $ptr i32)
  (local $i i32)
  (local $8 i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|4
  local.get $initialValue
  local.set $initialValue|5
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  local.get $array
  call $~lib/typedarray/Int64Array#get:length
  i32.const 1
  i32.sub
  local.set $i
  loop $for-loop|0
   local.get $i
   i32.const 0
   i32.ge_s
   local.set $8
   local.get $8
   if
    local.get $initialValue|5
    local.get $ptr
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    local.get $i
    local.get $array
    i32.const 4
    global.set $~argumentsLength
    local.get $fn|4
    i32.load $0
    call_indirect $0 (type $i64_i64_i32_i32_=>_i64)
    local.set $initialValue|5
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  local.get $initialValue|5
 )
 (func $std/typedarray/testReduceRight<~lib/typedarray/Uint64Array,u64>~anonymous|0 (type $i64_i64_i32_i32_=>_i64) (param $acc i64) (param $val i64) (param $$2 i32) (param $$3 i32) (result i64)
  local.get $acc
  local.get $val
  i64.add
 )
 (func $~lib/typedarray/Uint64Array#reduceRight<u64> (type $i32_i32_i64_=>_i64) (param $this i32) (param $fn i32) (param $initialValue i64) (result i64)
  (local $array i32)
  (local $fn|4 i32)
  (local $initialValue|5 i64)
  (local $ptr i32)
  (local $i i32)
  (local $8 i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|4
  local.get $initialValue
  local.set $initialValue|5
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  local.get $array
  call $~lib/typedarray/Uint64Array#get:length
  i32.const 1
  i32.sub
  local.set $i
  loop $for-loop|0
   local.get $i
   i32.const 0
   i32.ge_s
   local.set $8
   local.get $8
   if
    local.get $initialValue|5
    local.get $ptr
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    local.get $i
    local.get $array
    i32.const 4
    global.set $~argumentsLength
    local.get $fn|4
    i32.load $0
    call_indirect $0 (type $i64_i64_i32_i32_=>_i64)
    local.set $initialValue|5
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  local.get $initialValue|5
 )
 (func $std/typedarray/testReduceRight<~lib/typedarray/Float32Array,f32>~anonymous|0 (type $f32_f32_i32_i32_=>_f32) (param $acc f32) (param $val f32) (param $$2 i32) (param $$3 i32) (result f32)
  local.get $acc
  local.get $val
  f32.add
 )
 (func $~lib/typedarray/Float32Array#reduceRight<f32> (type $i32_i32_f32_=>_f32) (param $this i32) (param $fn i32) (param $initialValue f32) (result f32)
  (local $array i32)
  (local $fn|4 i32)
  (local $initialValue|5 f32)
  (local $ptr i32)
  (local $i i32)
  (local $8 i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|4
  local.get $initialValue
  local.set $initialValue|5
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  local.get $array
  call $~lib/typedarray/Float32Array#get:length
  i32.const 1
  i32.sub
  local.set $i
  loop $for-loop|0
   local.get $i
   i32.const 0
   i32.ge_s
   local.set $8
   local.get $8
   if
    local.get $initialValue|5
    local.get $ptr
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    f32.load $0
    local.get $i
    local.get $array
    i32.const 4
    global.set $~argumentsLength
    local.get $fn|4
    i32.load $0
    call_indirect $0 (type $f32_f32_i32_i32_=>_f32)
    local.set $initialValue|5
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  local.get $initialValue|5
 )
 (func $std/typedarray/testReduceRight<~lib/typedarray/Float64Array,f64>~anonymous|0 (type $f64_f64_i32_i32_=>_f64) (param $acc f64) (param $val f64) (param $$2 i32) (param $$3 i32) (result f64)
  local.get $acc
  local.get $val
  f64.add
 )
 (func $~lib/typedarray/Float64Array#reduceRight<f64> (type $i32_i32_f64_=>_f64) (param $this i32) (param $fn i32) (param $initialValue f64) (result f64)
  (local $array i32)
  (local $fn|4 i32)
  (local $initialValue|5 f64)
  (local $ptr i32)
  (local $i i32)
  (local $8 i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|4
  local.get $initialValue
  local.set $initialValue|5
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  local.get $array
  call $~lib/typedarray/Float64Array#get:length
  i32.const 1
  i32.sub
  local.set $i
  loop $for-loop|0
   local.get $i
   i32.const 0
   i32.ge_s
   local.set $8
   local.get $8
   if
    local.get $initialValue|5
    local.get $ptr
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    f64.load $0
    local.get $i
    local.get $array
    i32.const 4
    global.set $~argumentsLength
    local.get $fn|4
    i32.load $0
    call_indirect $0 (type $f64_f64_i32_i32_=>_f64)
    local.set $initialValue|5
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  local.get $initialValue|5
 )
 (func $std/typedarray/testArrayMap<~lib/typedarray/Int8Array,i8>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  local.get $value
  i32.mul
 )
 (func $std/typedarray/testArrayMap<~lib/typedarray/Uint8Array,u8>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  local.get $value
  i32.mul
 )
 (func $~lib/typedarray/Uint8Array#__get (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  local.get $index
  local.get $this
  i32.load $0 offset=8
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.add
  i32.load8_u $0
 )
 (func $std/typedarray/testArrayMap<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  local.get $value
  i32.mul
 )
 (func $std/typedarray/testArrayMap<~lib/typedarray/Int16Array,i16>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  local.get $value
  i32.mul
 )
 (func $~lib/typedarray/Int16Array#__get (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  local.get $index
  local.get $this
  i32.load $0 offset=8
  i32.const 1
  i32.shr_u
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 1
  i32.shl
  i32.add
  i32.load16_s $0
 )
 (func $std/typedarray/testArrayMap<~lib/typedarray/Uint16Array,u16>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  local.get $value
  i32.mul
 )
 (func $~lib/typedarray/Uint16Array#__get (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  local.get $index
  local.get $this
  i32.load $0 offset=8
  i32.const 1
  i32.shr_u
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 1
  i32.shl
  i32.add
  i32.load16_u $0
 )
 (func $std/typedarray/testArrayMap<~lib/typedarray/Int32Array,i32>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  local.get $value
  i32.mul
 )
 (func $std/typedarray/testArrayMap<~lib/typedarray/Uint32Array,u32>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  local.get $value
  i32.mul
 )
 (func $~lib/typedarray/Uint32Array#__get (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  local.get $index
  local.get $this
  i32.load $0 offset=8
  i32.const 2
  i32.shr_u
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
 )
 (func $std/typedarray/testArrayMap<~lib/typedarray/Int64Array,i64>~anonymous|0 (type $i64_i32_i32_=>_i64) (param $value i64) (param $$1 i32) (param $$2 i32) (result i64)
  local.get $value
  local.get $value
  i64.mul
 )
 (func $~lib/typedarray/Int64Array#__get (type $i32_i32_=>_i64) (param $this i32) (param $index i32) (result i64)
  local.get $index
  local.get $this
  i32.load $0 offset=8
  i32.const 3
  i32.shr_u
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 3
  i32.shl
  i32.add
  i64.load $0
 )
 (func $std/typedarray/testArrayMap<~lib/typedarray/Uint64Array,u64>~anonymous|0 (type $i64_i32_i32_=>_i64) (param $value i64) (param $$1 i32) (param $$2 i32) (result i64)
  local.get $value
  local.get $value
  i64.mul
 )
 (func $~lib/typedarray/Uint64Array#__get (type $i32_i32_=>_i64) (param $this i32) (param $index i32) (result i64)
  local.get $index
  local.get $this
  i32.load $0 offset=8
  i32.const 3
  i32.shr_u
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 3
  i32.shl
  i32.add
  i64.load $0
 )
 (func $std/typedarray/testArrayMap<~lib/typedarray/Float32Array,f32>~anonymous|0 (type $f32_i32_i32_=>_f32) (param $value f32) (param $$1 i32) (param $$2 i32) (result f32)
  local.get $value
  local.get $value
  f32.mul
 )
 (func $~lib/typedarray/Float32Array#__get (type $i32_i32_=>_f32) (param $this i32) (param $index i32) (result f32)
  local.get $index
  local.get $this
  i32.load $0 offset=8
  i32.const 2
  i32.shr_u
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  f32.load $0
 )
 (func $std/typedarray/testArrayMap<~lib/typedarray/Float64Array,f64>~anonymous|0 (type $f64_i32_i32_=>_f64) (param $value f64) (param $$1 i32) (param $$2 i32) (result f64)
  local.get $value
  local.get $value
  f64.mul
 )
 (func $std/typedarray/testArrayFilter<~lib/typedarray/Int8Array,i8>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.extend8_s
  i32.const 2
  i32.gt_s
 )
 (func $~lib/rt/itcms/__renew (type $i32_i32_=>_i32) (param $oldPtr i32) (param $size i32) (result i32)
  (local $oldObj i32)
  (local $newPtr i32)
  (local $4 i32)
  (local $5 i32)
  local.get $oldPtr
  i32.const 20
  i32.sub
  local.set $oldObj
  local.get $size
  local.get $oldObj
  i32.load $0
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  i32.const 16
  i32.sub
  i32.le_u
  if
   local.get $oldObj
   local.get $size
   call $~lib/rt/itcms/Object#set:rtSize
   local.get $oldPtr
   return
  end
  local.get $size
  local.get $oldObj
  i32.load $0 offset=12
  call $~lib/rt/itcms/__new
  local.set $newPtr
  local.get $newPtr
  local.get $oldPtr
  local.get $size
  local.tee $4
  local.get $oldObj
  i32.load $0 offset=16
  local.tee $5
  local.get $4
  local.get $5
  i32.lt_u
  select
  memory.copy $0 $0
  local.get $newPtr
 )
 (func $std/typedarray/testArrayFilter<~lib/typedarray/Uint8Array,u8>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 255
  i32.and
  i32.const 2
  i32.gt_u
 )
 (func $std/typedarray/testArrayFilter<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 255
  i32.and
  i32.const 2
  i32.gt_u
 )
 (func $std/typedarray/testArrayFilter<~lib/typedarray/Int16Array,i16>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.extend16_s
  i32.const 2
  i32.gt_s
 )
 (func $std/typedarray/testArrayFilter<~lib/typedarray/Uint16Array,u16>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 65535
  i32.and
  i32.const 2
  i32.gt_u
 )
 (func $std/typedarray/testArrayFilter<~lib/typedarray/Int32Array,i32>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 2
  i32.gt_s
 )
 (func $std/typedarray/testArrayFilter<~lib/typedarray/Uint32Array,u32>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 2
  i32.gt_u
 )
 (func $std/typedarray/testArrayFilter<~lib/typedarray/Int64Array,i64>~anonymous|0 (type $i64_i32_i32_=>_i32) (param $value i64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i64.const 2
  i64.gt_s
 )
 (func $std/typedarray/testArrayFilter<~lib/typedarray/Uint64Array,u64>~anonymous|0 (type $i64_i32_i32_=>_i32) (param $value i64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i64.const 2
  i64.gt_u
 )
 (func $std/typedarray/testArrayFilter<~lib/typedarray/Float32Array,f32>~anonymous|0 (type $f32_i32_i32_=>_i32) (param $value f32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  f32.const 2
  f32.gt
 )
 (func $std/typedarray/testArrayFilter<~lib/typedarray/Float64Array,f64>~anonymous|0 (type $f64_i32_i32_=>_i32) (param $value f64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  f64.const 2
  f64.gt
 )
 (func $std/typedarray/testArraySome<~lib/typedarray/Int8Array,i8>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.extend8_s
  i32.const 2
  i32.eq
 )
 (func $~lib/typedarray/Int8Array#some (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  block $~lib/typedarray/SOME<~lib/typedarray/Int8Array,i8>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   i32.const 0
   local.set $i
   local.get $array
   call $~lib/typedarray/Int8Array#get:length
   local.set $k
   loop $for-loop|0
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     local.get $ptr
     local.get $i
     i32.const 0
     i32.shl
     i32.add
     i32.load8_s $0
     local.get $i
     local.get $array
     i32.const 3
     global.set $~argumentsLength
     local.get $fn|3
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     if
      i32.const 1
      br $~lib/typedarray/SOME<~lib/typedarray/Int8Array,i8>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   i32.const 0
  end
 )
 (func $std/typedarray/testArraySome<~lib/typedarray/Int8Array,i8>~anonymous|1 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.extend8_s
  i32.const 0
  i32.eq
 )
 (func $std/typedarray/testArraySome<~lib/typedarray/Uint8Array,u8>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 255
  i32.and
  i32.const 2
  i32.eq
 )
 (func $~lib/typedarray/Uint8Array#some (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  block $~lib/typedarray/SOME<~lib/typedarray/Uint8Array,u8>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   i32.const 0
   local.set $i
   local.get $array
   call $~lib/typedarray/Uint8Array#get:length
   local.set $k
   loop $for-loop|0
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     local.get $ptr
     local.get $i
     i32.const 0
     i32.shl
     i32.add
     i32.load8_u $0
     local.get $i
     local.get $array
     i32.const 3
     global.set $~argumentsLength
     local.get $fn|3
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     if
      i32.const 1
      br $~lib/typedarray/SOME<~lib/typedarray/Uint8Array,u8>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   i32.const 0
  end
 )
 (func $std/typedarray/testArraySome<~lib/typedarray/Uint8Array,u8>~anonymous|1 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 255
  i32.and
  i32.const 0
  i32.eq
 )
 (func $std/typedarray/testArraySome<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 255
  i32.and
  i32.const 2
  i32.eq
 )
 (func $~lib/typedarray/Uint8ClampedArray#some (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  block $~lib/typedarray/SOME<~lib/typedarray/Uint8ClampedArray,u8>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   i32.const 0
   local.set $i
   local.get $array
   call $~lib/typedarray/Uint8ClampedArray#get:length
   local.set $k
   loop $for-loop|0
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     local.get $ptr
     local.get $i
     i32.const 0
     i32.shl
     i32.add
     i32.load8_u $0
     local.get $i
     local.get $array
     i32.const 3
     global.set $~argumentsLength
     local.get $fn|3
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     if
      i32.const 1
      br $~lib/typedarray/SOME<~lib/typedarray/Uint8ClampedArray,u8>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   i32.const 0
  end
 )
 (func $std/typedarray/testArraySome<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|1 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 255
  i32.and
  i32.const 0
  i32.eq
 )
 (func $std/typedarray/testArraySome<~lib/typedarray/Int16Array,i16>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.extend16_s
  i32.const 2
  i32.eq
 )
 (func $~lib/typedarray/Int16Array#some (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  block $~lib/typedarray/SOME<~lib/typedarray/Int16Array,i16>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   i32.const 0
   local.set $i
   local.get $array
   call $~lib/typedarray/Int16Array#get:length
   local.set $k
   loop $for-loop|0
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     local.get $ptr
     local.get $i
     i32.const 1
     i32.shl
     i32.add
     i32.load16_s $0
     local.get $i
     local.get $array
     i32.const 3
     global.set $~argumentsLength
     local.get $fn|3
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     if
      i32.const 1
      br $~lib/typedarray/SOME<~lib/typedarray/Int16Array,i16>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   i32.const 0
  end
 )
 (func $std/typedarray/testArraySome<~lib/typedarray/Int16Array,i16>~anonymous|1 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.extend16_s
  i32.const 0
  i32.eq
 )
 (func $std/typedarray/testArraySome<~lib/typedarray/Uint16Array,u16>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 65535
  i32.and
  i32.const 2
  i32.eq
 )
 (func $~lib/typedarray/Uint16Array#some (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  block $~lib/typedarray/SOME<~lib/typedarray/Uint16Array,u16>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   i32.const 0
   local.set $i
   local.get $array
   call $~lib/typedarray/Uint16Array#get:length
   local.set $k
   loop $for-loop|0
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     local.get $ptr
     local.get $i
     i32.const 1
     i32.shl
     i32.add
     i32.load16_u $0
     local.get $i
     local.get $array
     i32.const 3
     global.set $~argumentsLength
     local.get $fn|3
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     if
      i32.const 1
      br $~lib/typedarray/SOME<~lib/typedarray/Uint16Array,u16>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   i32.const 0
  end
 )
 (func $std/typedarray/testArraySome<~lib/typedarray/Uint16Array,u16>~anonymous|1 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 65535
  i32.and
  i32.const 0
  i32.eq
 )
 (func $std/typedarray/testArraySome<~lib/typedarray/Int32Array,i32>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 2
  i32.eq
 )
 (func $~lib/typedarray/Int32Array#some (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  block $~lib/typedarray/SOME<~lib/typedarray/Int32Array,i32>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   i32.const 0
   local.set $i
   local.get $array
   call $~lib/typedarray/Int32Array#get:length
   local.set $k
   loop $for-loop|0
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     local.get $ptr
     local.get $i
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.get $i
     local.get $array
     i32.const 3
     global.set $~argumentsLength
     local.get $fn|3
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     if
      i32.const 1
      br $~lib/typedarray/SOME<~lib/typedarray/Int32Array,i32>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   i32.const 0
  end
 )
 (func $std/typedarray/testArraySome<~lib/typedarray/Int32Array,i32>~anonymous|1 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 0
  i32.eq
 )
 (func $std/typedarray/testArraySome<~lib/typedarray/Uint32Array,u32>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 2
  i32.eq
 )
 (func $~lib/typedarray/Uint32Array#some (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  block $~lib/typedarray/SOME<~lib/typedarray/Uint32Array,u32>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   i32.const 0
   local.set $i
   local.get $array
   call $~lib/typedarray/Uint32Array#get:length
   local.set $k
   loop $for-loop|0
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     local.get $ptr
     local.get $i
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.get $i
     local.get $array
     i32.const 3
     global.set $~argumentsLength
     local.get $fn|3
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     if
      i32.const 1
      br $~lib/typedarray/SOME<~lib/typedarray/Uint32Array,u32>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   i32.const 0
  end
 )
 (func $std/typedarray/testArraySome<~lib/typedarray/Uint32Array,u32>~anonymous|1 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 0
  i32.eq
 )
 (func $std/typedarray/testArraySome<~lib/typedarray/Int64Array,i64>~anonymous|0 (type $i64_i32_i32_=>_i32) (param $value i64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i64.const 2
  i64.eq
 )
 (func $~lib/typedarray/Int64Array#some (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  block $~lib/typedarray/SOME<~lib/typedarray/Int64Array,i64>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   i32.const 0
   local.set $i
   local.get $array
   call $~lib/typedarray/Int64Array#get:length
   local.set $k
   loop $for-loop|0
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     local.get $ptr
     local.get $i
     i32.const 3
     i32.shl
     i32.add
     i64.load $0
     local.get $i
     local.get $array
     i32.const 3
     global.set $~argumentsLength
     local.get $fn|3
     i32.load $0
     call_indirect $0 (type $i64_i32_i32_=>_i32)
     if
      i32.const 1
      br $~lib/typedarray/SOME<~lib/typedarray/Int64Array,i64>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   i32.const 0
  end
 )
 (func $std/typedarray/testArraySome<~lib/typedarray/Int64Array,i64>~anonymous|1 (type $i64_i32_i32_=>_i32) (param $value i64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i64.const 0
  i64.eq
 )
 (func $std/typedarray/testArraySome<~lib/typedarray/Uint64Array,u64>~anonymous|0 (type $i64_i32_i32_=>_i32) (param $value i64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i64.const 2
  i64.eq
 )
 (func $~lib/typedarray/Uint64Array#some (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  block $~lib/typedarray/SOME<~lib/typedarray/Uint64Array,u64>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   i32.const 0
   local.set $i
   local.get $array
   call $~lib/typedarray/Uint64Array#get:length
   local.set $k
   loop $for-loop|0
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     local.get $ptr
     local.get $i
     i32.const 3
     i32.shl
     i32.add
     i64.load $0
     local.get $i
     local.get $array
     i32.const 3
     global.set $~argumentsLength
     local.get $fn|3
     i32.load $0
     call_indirect $0 (type $i64_i32_i32_=>_i32)
     if
      i32.const 1
      br $~lib/typedarray/SOME<~lib/typedarray/Uint64Array,u64>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   i32.const 0
  end
 )
 (func $std/typedarray/testArraySome<~lib/typedarray/Uint64Array,u64>~anonymous|1 (type $i64_i32_i32_=>_i32) (param $value i64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i64.const 0
  i64.eq
 )
 (func $std/typedarray/testArraySome<~lib/typedarray/Float32Array,f32>~anonymous|0 (type $f32_i32_i32_=>_i32) (param $value f32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  f32.const 2
  f32.eq
 )
 (func $~lib/typedarray/Float32Array#some (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  block $~lib/typedarray/SOME<~lib/typedarray/Float32Array,f32>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   i32.const 0
   local.set $i
   local.get $array
   call $~lib/typedarray/Float32Array#get:length
   local.set $k
   loop $for-loop|0
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     local.get $ptr
     local.get $i
     i32.const 2
     i32.shl
     i32.add
     f32.load $0
     local.get $i
     local.get $array
     i32.const 3
     global.set $~argumentsLength
     local.get $fn|3
     i32.load $0
     call_indirect $0 (type $f32_i32_i32_=>_i32)
     if
      i32.const 1
      br $~lib/typedarray/SOME<~lib/typedarray/Float32Array,f32>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   i32.const 0
  end
 )
 (func $std/typedarray/testArraySome<~lib/typedarray/Float32Array,f32>~anonymous|1 (type $f32_i32_i32_=>_i32) (param $value f32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  f32.const 0
  f32.eq
 )
 (func $std/typedarray/testArraySome<~lib/typedarray/Float64Array,f64>~anonymous|0 (type $f64_i32_i32_=>_i32) (param $value f64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  f64.const 2
  f64.eq
 )
 (func $~lib/typedarray/Float64Array#some (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  block $~lib/typedarray/SOME<~lib/typedarray/Float64Array,f64>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   i32.const 0
   local.set $i
   local.get $array
   call $~lib/typedarray/Float64Array#get:length
   local.set $k
   loop $for-loop|0
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     local.get $ptr
     local.get $i
     i32.const 3
     i32.shl
     i32.add
     f64.load $0
     local.get $i
     local.get $array
     i32.const 3
     global.set $~argumentsLength
     local.get $fn|3
     i32.load $0
     call_indirect $0 (type $f64_i32_i32_=>_i32)
     if
      i32.const 1
      br $~lib/typedarray/SOME<~lib/typedarray/Float64Array,f64>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   i32.const 0
  end
 )
 (func $std/typedarray/testArraySome<~lib/typedarray/Float64Array,f64>~anonymous|1 (type $f64_i32_i32_=>_i32) (param $value f64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  f64.const 0
  f64.eq
 )
 (func $std/typedarray/testArrayFindIndex<~lib/typedarray/Int8Array,i8>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.extend8_s
  i32.const 2
  i32.eq
 )
 (func $~lib/typedarray/Int8Array#findIndex (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  block $~lib/typedarray/FIND_INDEX<~lib/typedarray/Int8Array,i8>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   i32.const 0
   local.set $i
   local.get $array
   call $~lib/typedarray/Int8Array#get:length
   local.set $k
   loop $for-loop|0
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     local.get $ptr
     local.get $i
     i32.const 0
     i32.shl
     i32.add
     i32.load8_s $0
     local.get $i
     local.get $array
     i32.const 3
     global.set $~argumentsLength
     local.get $fn|3
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     if
      local.get $i
      br $~lib/typedarray/FIND_INDEX<~lib/typedarray/Int8Array,i8>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   i32.const -1
  end
 )
 (func $std/typedarray/testArrayFindIndex<~lib/typedarray/Int8Array,i8>~anonymous|1 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.extend8_s
  i32.const 4
  i32.eq
 )
 (func $std/typedarray/testArrayFindIndex<~lib/typedarray/Uint8Array,u8>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 255
  i32.and
  i32.const 2
  i32.eq
 )
 (func $~lib/typedarray/Uint8Array#findIndex (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  block $~lib/typedarray/FIND_INDEX<~lib/typedarray/Uint8Array,u8>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   i32.const 0
   local.set $i
   local.get $array
   call $~lib/typedarray/Uint8Array#get:length
   local.set $k
   loop $for-loop|0
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     local.get $ptr
     local.get $i
     i32.const 0
     i32.shl
     i32.add
     i32.load8_u $0
     local.get $i
     local.get $array
     i32.const 3
     global.set $~argumentsLength
     local.get $fn|3
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     if
      local.get $i
      br $~lib/typedarray/FIND_INDEX<~lib/typedarray/Uint8Array,u8>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   i32.const -1
  end
 )
 (func $std/typedarray/testArrayFindIndex<~lib/typedarray/Uint8Array,u8>~anonymous|1 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 255
  i32.and
  i32.const 4
  i32.eq
 )
 (func $std/typedarray/testArrayFindIndex<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 255
  i32.and
  i32.const 2
  i32.eq
 )
 (func $~lib/typedarray/Uint8ClampedArray#findIndex (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  block $~lib/typedarray/FIND_INDEX<~lib/typedarray/Uint8ClampedArray,u8>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   i32.const 0
   local.set $i
   local.get $array
   call $~lib/typedarray/Uint8ClampedArray#get:length
   local.set $k
   loop $for-loop|0
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     local.get $ptr
     local.get $i
     i32.const 0
     i32.shl
     i32.add
     i32.load8_u $0
     local.get $i
     local.get $array
     i32.const 3
     global.set $~argumentsLength
     local.get $fn|3
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     if
      local.get $i
      br $~lib/typedarray/FIND_INDEX<~lib/typedarray/Uint8ClampedArray,u8>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   i32.const -1
  end
 )
 (func $std/typedarray/testArrayFindIndex<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|1 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 255
  i32.and
  i32.const 4
  i32.eq
 )
 (func $std/typedarray/testArrayFindIndex<~lib/typedarray/Int16Array,i16>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.extend16_s
  i32.const 2
  i32.eq
 )
 (func $~lib/typedarray/Int16Array#findIndex (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  block $~lib/typedarray/FIND_INDEX<~lib/typedarray/Int16Array,i16>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   i32.const 0
   local.set $i
   local.get $array
   call $~lib/typedarray/Int16Array#get:length
   local.set $k
   loop $for-loop|0
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     local.get $ptr
     local.get $i
     i32.const 1
     i32.shl
     i32.add
     i32.load16_s $0
     local.get $i
     local.get $array
     i32.const 3
     global.set $~argumentsLength
     local.get $fn|3
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     if
      local.get $i
      br $~lib/typedarray/FIND_INDEX<~lib/typedarray/Int16Array,i16>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   i32.const -1
  end
 )
 (func $std/typedarray/testArrayFindIndex<~lib/typedarray/Int16Array,i16>~anonymous|1 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.extend16_s
  i32.const 4
  i32.eq
 )
 (func $std/typedarray/testArrayFindIndex<~lib/typedarray/Uint16Array,u16>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 65535
  i32.and
  i32.const 2
  i32.eq
 )
 (func $~lib/typedarray/Uint16Array#findIndex (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  block $~lib/typedarray/FIND_INDEX<~lib/typedarray/Uint16Array,u16>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   i32.const 0
   local.set $i
   local.get $array
   call $~lib/typedarray/Uint16Array#get:length
   local.set $k
   loop $for-loop|0
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     local.get $ptr
     local.get $i
     i32.const 1
     i32.shl
     i32.add
     i32.load16_u $0
     local.get $i
     local.get $array
     i32.const 3
     global.set $~argumentsLength
     local.get $fn|3
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     if
      local.get $i
      br $~lib/typedarray/FIND_INDEX<~lib/typedarray/Uint16Array,u16>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   i32.const -1
  end
 )
 (func $std/typedarray/testArrayFindIndex<~lib/typedarray/Uint16Array,u16>~anonymous|1 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 65535
  i32.and
  i32.const 4
  i32.eq
 )
 (func $std/typedarray/testArrayFindIndex<~lib/typedarray/Int32Array,i32>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 2
  i32.eq
 )
 (func $~lib/typedarray/Int32Array#findIndex (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  block $~lib/typedarray/FIND_INDEX<~lib/typedarray/Int32Array,i32>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   i32.const 0
   local.set $i
   local.get $array
   call $~lib/typedarray/Int32Array#get:length
   local.set $k
   loop $for-loop|0
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     local.get $ptr
     local.get $i
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.get $i
     local.get $array
     i32.const 3
     global.set $~argumentsLength
     local.get $fn|3
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     if
      local.get $i
      br $~lib/typedarray/FIND_INDEX<~lib/typedarray/Int32Array,i32>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   i32.const -1
  end
 )
 (func $std/typedarray/testArrayFindIndex<~lib/typedarray/Int32Array,i32>~anonymous|1 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 4
  i32.eq
 )
 (func $std/typedarray/testArrayFindIndex<~lib/typedarray/Uint32Array,u32>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 2
  i32.eq
 )
 (func $~lib/typedarray/Uint32Array#findIndex (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  block $~lib/typedarray/FIND_INDEX<~lib/typedarray/Uint32Array,u32>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   i32.const 0
   local.set $i
   local.get $array
   call $~lib/typedarray/Uint32Array#get:length
   local.set $k
   loop $for-loop|0
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     local.get $ptr
     local.get $i
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.get $i
     local.get $array
     i32.const 3
     global.set $~argumentsLength
     local.get $fn|3
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     if
      local.get $i
      br $~lib/typedarray/FIND_INDEX<~lib/typedarray/Uint32Array,u32>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   i32.const -1
  end
 )
 (func $std/typedarray/testArrayFindIndex<~lib/typedarray/Uint32Array,u32>~anonymous|1 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 4
  i32.eq
 )
 (func $std/typedarray/testArrayFindIndex<~lib/typedarray/Int64Array,i64>~anonymous|0 (type $i64_i32_i32_=>_i32) (param $value i64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i64.const 2
  i64.eq
 )
 (func $~lib/typedarray/Int64Array#findIndex (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  block $~lib/typedarray/FIND_INDEX<~lib/typedarray/Int64Array,i64>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   i32.const 0
   local.set $i
   local.get $array
   call $~lib/typedarray/Int64Array#get:length
   local.set $k
   loop $for-loop|0
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     local.get $ptr
     local.get $i
     i32.const 3
     i32.shl
     i32.add
     i64.load $0
     local.get $i
     local.get $array
     i32.const 3
     global.set $~argumentsLength
     local.get $fn|3
     i32.load $0
     call_indirect $0 (type $i64_i32_i32_=>_i32)
     if
      local.get $i
      br $~lib/typedarray/FIND_INDEX<~lib/typedarray/Int64Array,i64>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   i32.const -1
  end
 )
 (func $std/typedarray/testArrayFindIndex<~lib/typedarray/Int64Array,i64>~anonymous|1 (type $i64_i32_i32_=>_i32) (param $value i64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i64.const 4
  i64.eq
 )
 (func $std/typedarray/testArrayFindIndex<~lib/typedarray/Uint64Array,u64>~anonymous|0 (type $i64_i32_i32_=>_i32) (param $value i64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i64.const 2
  i64.eq
 )
 (func $~lib/typedarray/Uint64Array#findIndex (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  block $~lib/typedarray/FIND_INDEX<~lib/typedarray/Uint64Array,u64>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   i32.const 0
   local.set $i
   local.get $array
   call $~lib/typedarray/Uint64Array#get:length
   local.set $k
   loop $for-loop|0
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     local.get $ptr
     local.get $i
     i32.const 3
     i32.shl
     i32.add
     i64.load $0
     local.get $i
     local.get $array
     i32.const 3
     global.set $~argumentsLength
     local.get $fn|3
     i32.load $0
     call_indirect $0 (type $i64_i32_i32_=>_i32)
     if
      local.get $i
      br $~lib/typedarray/FIND_INDEX<~lib/typedarray/Uint64Array,u64>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   i32.const -1
  end
 )
 (func $std/typedarray/testArrayFindIndex<~lib/typedarray/Uint64Array,u64>~anonymous|1 (type $i64_i32_i32_=>_i32) (param $value i64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i64.const 4
  i64.eq
 )
 (func $std/typedarray/testArrayFindIndex<~lib/typedarray/Float32Array,f32>~anonymous|0 (type $f32_i32_i32_=>_i32) (param $value f32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  f32.const 2
  f32.eq
 )
 (func $~lib/typedarray/Float32Array#findIndex (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  block $~lib/typedarray/FIND_INDEX<~lib/typedarray/Float32Array,f32>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   i32.const 0
   local.set $i
   local.get $array
   call $~lib/typedarray/Float32Array#get:length
   local.set $k
   loop $for-loop|0
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     local.get $ptr
     local.get $i
     i32.const 2
     i32.shl
     i32.add
     f32.load $0
     local.get $i
     local.get $array
     i32.const 3
     global.set $~argumentsLength
     local.get $fn|3
     i32.load $0
     call_indirect $0 (type $f32_i32_i32_=>_i32)
     if
      local.get $i
      br $~lib/typedarray/FIND_INDEX<~lib/typedarray/Float32Array,f32>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   i32.const -1
  end
 )
 (func $std/typedarray/testArrayFindIndex<~lib/typedarray/Float32Array,f32>~anonymous|1 (type $f32_i32_i32_=>_i32) (param $value f32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  f32.const 4
  f32.eq
 )
 (func $std/typedarray/testArrayFindIndex<~lib/typedarray/Float64Array,f64>~anonymous|0 (type $f64_i32_i32_=>_i32) (param $value f64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  f64.const 2
  f64.eq
 )
 (func $~lib/typedarray/Float64Array#findIndex (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  block $~lib/typedarray/FIND_INDEX<~lib/typedarray/Float64Array,f64>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   i32.const 0
   local.set $i
   local.get $array
   call $~lib/typedarray/Float64Array#get:length
   local.set $k
   loop $for-loop|0
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     local.get $ptr
     local.get $i
     i32.const 3
     i32.shl
     i32.add
     f64.load $0
     local.get $i
     local.get $array
     i32.const 3
     global.set $~argumentsLength
     local.get $fn|3
     i32.load $0
     call_indirect $0 (type $f64_i32_i32_=>_i32)
     if
      local.get $i
      br $~lib/typedarray/FIND_INDEX<~lib/typedarray/Float64Array,f64>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   i32.const -1
  end
 )
 (func $std/typedarray/testArrayFindIndex<~lib/typedarray/Float64Array,f64>~anonymous|1 (type $f64_i32_i32_=>_i32) (param $value f64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  f64.const 4
  f64.eq
 )
 (func $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Int8Array,i8>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.extend8_s
  i32.const 2
  i32.eq
 )
 (func $~lib/typedarray/Int8Array#findLastIndex (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $6 i32)
  block $~lib/typedarray/FIND_LAST_INDEX<~lib/typedarray/Int8Array,i8>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   local.get $array
   call $~lib/typedarray/Int8Array#get:length
   i32.const 1
   i32.sub
   local.set $i
   loop $for-loop|0
    local.get $i
    i32.const 0
    i32.ge_s
    local.set $6
    local.get $6
    if
     local.get $ptr
     local.get $i
     i32.const 0
     i32.shl
     i32.add
     i32.load8_s $0
     local.get $i
     local.get $array
     i32.const 3
     global.set $~argumentsLength
     local.get $fn|3
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     if
      local.get $i
      br $~lib/typedarray/FIND_LAST_INDEX<~lib/typedarray/Int8Array,i8>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.sub
     local.set $i
     br $for-loop|0
    end
   end
   i32.const -1
  end
 )
 (func $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Int8Array,i8>~anonymous|1 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.extend8_s
  i32.const 4
  i32.eq
 )
 (func $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Uint8Array,u8>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 255
  i32.and
  i32.const 2
  i32.eq
 )
 (func $~lib/typedarray/Uint8Array#findLastIndex (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $6 i32)
  block $~lib/typedarray/FIND_LAST_INDEX<~lib/typedarray/Uint8Array,u8>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   local.get $array
   call $~lib/typedarray/Uint8Array#get:length
   i32.const 1
   i32.sub
   local.set $i
   loop $for-loop|0
    local.get $i
    i32.const 0
    i32.ge_s
    local.set $6
    local.get $6
    if
     local.get $ptr
     local.get $i
     i32.const 0
     i32.shl
     i32.add
     i32.load8_u $0
     local.get $i
     local.get $array
     i32.const 3
     global.set $~argumentsLength
     local.get $fn|3
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     if
      local.get $i
      br $~lib/typedarray/FIND_LAST_INDEX<~lib/typedarray/Uint8Array,u8>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.sub
     local.set $i
     br $for-loop|0
    end
   end
   i32.const -1
  end
 )
 (func $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Uint8Array,u8>~anonymous|1 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 255
  i32.and
  i32.const 4
  i32.eq
 )
 (func $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 255
  i32.and
  i32.const 2
  i32.eq
 )
 (func $~lib/typedarray/Uint8ClampedArray#findLastIndex (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $6 i32)
  block $~lib/typedarray/FIND_LAST_INDEX<~lib/typedarray/Uint8ClampedArray,u8>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   local.get $array
   call $~lib/typedarray/Uint8ClampedArray#get:length
   i32.const 1
   i32.sub
   local.set $i
   loop $for-loop|0
    local.get $i
    i32.const 0
    i32.ge_s
    local.set $6
    local.get $6
    if
     local.get $ptr
     local.get $i
     i32.const 0
     i32.shl
     i32.add
     i32.load8_u $0
     local.get $i
     local.get $array
     i32.const 3
     global.set $~argumentsLength
     local.get $fn|3
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     if
      local.get $i
      br $~lib/typedarray/FIND_LAST_INDEX<~lib/typedarray/Uint8ClampedArray,u8>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.sub
     local.set $i
     br $for-loop|0
    end
   end
   i32.const -1
  end
 )
 (func $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|1 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 255
  i32.and
  i32.const 4
  i32.eq
 )
 (func $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Int16Array,i16>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.extend16_s
  i32.const 2
  i32.eq
 )
 (func $~lib/typedarray/Int16Array#findLastIndex (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $6 i32)
  block $~lib/typedarray/FIND_LAST_INDEX<~lib/typedarray/Int16Array,i16>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   local.get $array
   call $~lib/typedarray/Int16Array#get:length
   i32.const 1
   i32.sub
   local.set $i
   loop $for-loop|0
    local.get $i
    i32.const 0
    i32.ge_s
    local.set $6
    local.get $6
    if
     local.get $ptr
     local.get $i
     i32.const 1
     i32.shl
     i32.add
     i32.load16_s $0
     local.get $i
     local.get $array
     i32.const 3
     global.set $~argumentsLength
     local.get $fn|3
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     if
      local.get $i
      br $~lib/typedarray/FIND_LAST_INDEX<~lib/typedarray/Int16Array,i16>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.sub
     local.set $i
     br $for-loop|0
    end
   end
   i32.const -1
  end
 )
 (func $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Int16Array,i16>~anonymous|1 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.extend16_s
  i32.const 4
  i32.eq
 )
 (func $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Uint16Array,u16>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 65535
  i32.and
  i32.const 2
  i32.eq
 )
 (func $~lib/typedarray/Uint16Array#findLastIndex (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $6 i32)
  block $~lib/typedarray/FIND_LAST_INDEX<~lib/typedarray/Uint16Array,u16>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   local.get $array
   call $~lib/typedarray/Uint16Array#get:length
   i32.const 1
   i32.sub
   local.set $i
   loop $for-loop|0
    local.get $i
    i32.const 0
    i32.ge_s
    local.set $6
    local.get $6
    if
     local.get $ptr
     local.get $i
     i32.const 1
     i32.shl
     i32.add
     i32.load16_u $0
     local.get $i
     local.get $array
     i32.const 3
     global.set $~argumentsLength
     local.get $fn|3
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     if
      local.get $i
      br $~lib/typedarray/FIND_LAST_INDEX<~lib/typedarray/Uint16Array,u16>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.sub
     local.set $i
     br $for-loop|0
    end
   end
   i32.const -1
  end
 )
 (func $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Uint16Array,u16>~anonymous|1 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 65535
  i32.and
  i32.const 4
  i32.eq
 )
 (func $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Int32Array,i32>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 2
  i32.eq
 )
 (func $~lib/typedarray/Int32Array#findLastIndex (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $6 i32)
  block $~lib/typedarray/FIND_LAST_INDEX<~lib/typedarray/Int32Array,i32>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   local.get $array
   call $~lib/typedarray/Int32Array#get:length
   i32.const 1
   i32.sub
   local.set $i
   loop $for-loop|0
    local.get $i
    i32.const 0
    i32.ge_s
    local.set $6
    local.get $6
    if
     local.get $ptr
     local.get $i
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.get $i
     local.get $array
     i32.const 3
     global.set $~argumentsLength
     local.get $fn|3
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     if
      local.get $i
      br $~lib/typedarray/FIND_LAST_INDEX<~lib/typedarray/Int32Array,i32>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.sub
     local.set $i
     br $for-loop|0
    end
   end
   i32.const -1
  end
 )
 (func $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Int32Array,i32>~anonymous|1 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 4
  i32.eq
 )
 (func $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Uint32Array,u32>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 2
  i32.eq
 )
 (func $~lib/typedarray/Uint32Array#findLastIndex (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $6 i32)
  block $~lib/typedarray/FIND_LAST_INDEX<~lib/typedarray/Uint32Array,u32>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   local.get $array
   call $~lib/typedarray/Uint32Array#get:length
   i32.const 1
   i32.sub
   local.set $i
   loop $for-loop|0
    local.get $i
    i32.const 0
    i32.ge_s
    local.set $6
    local.get $6
    if
     local.get $ptr
     local.get $i
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.get $i
     local.get $array
     i32.const 3
     global.set $~argumentsLength
     local.get $fn|3
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     if
      local.get $i
      br $~lib/typedarray/FIND_LAST_INDEX<~lib/typedarray/Uint32Array,u32>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.sub
     local.set $i
     br $for-loop|0
    end
   end
   i32.const -1
  end
 )
 (func $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Uint32Array,u32>~anonymous|1 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 4
  i32.eq
 )
 (func $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Int64Array,i64>~anonymous|0 (type $i64_i32_i32_=>_i32) (param $value i64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i64.const 2
  i64.eq
 )
 (func $~lib/typedarray/Int64Array#findLastIndex (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $6 i32)
  block $~lib/typedarray/FIND_LAST_INDEX<~lib/typedarray/Int64Array,i64>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   local.get $array
   call $~lib/typedarray/Int64Array#get:length
   i32.const 1
   i32.sub
   local.set $i
   loop $for-loop|0
    local.get $i
    i32.const 0
    i32.ge_s
    local.set $6
    local.get $6
    if
     local.get $ptr
     local.get $i
     i32.const 3
     i32.shl
     i32.add
     i64.load $0
     local.get $i
     local.get $array
     i32.const 3
     global.set $~argumentsLength
     local.get $fn|3
     i32.load $0
     call_indirect $0 (type $i64_i32_i32_=>_i32)
     if
      local.get $i
      br $~lib/typedarray/FIND_LAST_INDEX<~lib/typedarray/Int64Array,i64>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.sub
     local.set $i
     br $for-loop|0
    end
   end
   i32.const -1
  end
 )
 (func $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Int64Array,i64>~anonymous|1 (type $i64_i32_i32_=>_i32) (param $value i64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i64.const 4
  i64.eq
 )
 (func $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Uint64Array,u64>~anonymous|0 (type $i64_i32_i32_=>_i32) (param $value i64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i64.const 2
  i64.eq
 )
 (func $~lib/typedarray/Uint64Array#findLastIndex (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $6 i32)
  block $~lib/typedarray/FIND_LAST_INDEX<~lib/typedarray/Uint64Array,u64>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   local.get $array
   call $~lib/typedarray/Uint64Array#get:length
   i32.const 1
   i32.sub
   local.set $i
   loop $for-loop|0
    local.get $i
    i32.const 0
    i32.ge_s
    local.set $6
    local.get $6
    if
     local.get $ptr
     local.get $i
     i32.const 3
     i32.shl
     i32.add
     i64.load $0
     local.get $i
     local.get $array
     i32.const 3
     global.set $~argumentsLength
     local.get $fn|3
     i32.load $0
     call_indirect $0 (type $i64_i32_i32_=>_i32)
     if
      local.get $i
      br $~lib/typedarray/FIND_LAST_INDEX<~lib/typedarray/Uint64Array,u64>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.sub
     local.set $i
     br $for-loop|0
    end
   end
   i32.const -1
  end
 )
 (func $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Uint64Array,u64>~anonymous|1 (type $i64_i32_i32_=>_i32) (param $value i64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i64.const 4
  i64.eq
 )
 (func $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Float32Array,f32>~anonymous|0 (type $f32_i32_i32_=>_i32) (param $value f32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  f32.const 2
  f32.eq
 )
 (func $~lib/typedarray/Float32Array#findLastIndex (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $6 i32)
  block $~lib/typedarray/FIND_LAST_INDEX<~lib/typedarray/Float32Array,f32>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   local.get $array
   call $~lib/typedarray/Float32Array#get:length
   i32.const 1
   i32.sub
   local.set $i
   loop $for-loop|0
    local.get $i
    i32.const 0
    i32.ge_s
    local.set $6
    local.get $6
    if
     local.get $ptr
     local.get $i
     i32.const 2
     i32.shl
     i32.add
     f32.load $0
     local.get $i
     local.get $array
     i32.const 3
     global.set $~argumentsLength
     local.get $fn|3
     i32.load $0
     call_indirect $0 (type $f32_i32_i32_=>_i32)
     if
      local.get $i
      br $~lib/typedarray/FIND_LAST_INDEX<~lib/typedarray/Float32Array,f32>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.sub
     local.set $i
     br $for-loop|0
    end
   end
   i32.const -1
  end
 )
 (func $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Float32Array,f32>~anonymous|1 (type $f32_i32_i32_=>_i32) (param $value f32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  f32.const 4
  f32.eq
 )
 (func $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Float64Array,f64>~anonymous|0 (type $f64_i32_i32_=>_i32) (param $value f64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  f64.const 2
  f64.eq
 )
 (func $~lib/typedarray/Float64Array#findLastIndex (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $6 i32)
  block $~lib/typedarray/FIND_LAST_INDEX<~lib/typedarray/Float64Array,f64>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   local.get $array
   call $~lib/typedarray/Float64Array#get:length
   i32.const 1
   i32.sub
   local.set $i
   loop $for-loop|0
    local.get $i
    i32.const 0
    i32.ge_s
    local.set $6
    local.get $6
    if
     local.get $ptr
     local.get $i
     i32.const 3
     i32.shl
     i32.add
     f64.load $0
     local.get $i
     local.get $array
     i32.const 3
     global.set $~argumentsLength
     local.get $fn|3
     i32.load $0
     call_indirect $0 (type $f64_i32_i32_=>_i32)
     if
      local.get $i
      br $~lib/typedarray/FIND_LAST_INDEX<~lib/typedarray/Float64Array,f64>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.sub
     local.set $i
     br $for-loop|0
    end
   end
   i32.const -1
  end
 )
 (func $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Float64Array,f64>~anonymous|1 (type $f64_i32_i32_=>_i32) (param $value f64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  f64.const 4
  f64.eq
 )
 (func $std/typedarray/testArrayEvery<~lib/typedarray/Int8Array,i8>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.extend8_s
  i32.const 2
  i32.rem_s
  i32.const 0
  i32.eq
 )
 (func $~lib/typedarray/Int8Array#every (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  block $~lib/typedarray/EVERY<~lib/typedarray/Int8Array,i8>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   i32.const 0
   local.set $i
   local.get $array
   call $~lib/typedarray/Int8Array#get:length
   local.set $k
   loop $for-loop|0
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     block $for-continue|0
      local.get $ptr
      local.get $i
      i32.const 0
      i32.shl
      i32.add
      i32.load8_s $0
      local.get $i
      local.get $array
      i32.const 3
      global.set $~argumentsLength
      local.get $fn|3
      i32.load $0
      call_indirect $0 (type $i32_i32_i32_=>_i32)
      if
       br $for-continue|0
      end
      i32.const 0
      br $~lib/typedarray/EVERY<~lib/typedarray/Int8Array,i8>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   i32.const 1
  end
 )
 (func $std/typedarray/testArrayEvery<~lib/typedarray/Int8Array,i8>~anonymous|1 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.extend8_s
  i32.const 2
  i32.eq
 )
 (func $std/typedarray/testArrayEvery<~lib/typedarray/Uint8Array,u8>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 255
  i32.and
  i32.const 2
  i32.rem_u
  i32.const 0
  i32.eq
 )
 (func $~lib/typedarray/Uint8Array#every (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  block $~lib/typedarray/EVERY<~lib/typedarray/Uint8Array,u8>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   i32.const 0
   local.set $i
   local.get $array
   call $~lib/typedarray/Uint8Array#get:length
   local.set $k
   loop $for-loop|0
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     block $for-continue|0
      local.get $ptr
      local.get $i
      i32.const 0
      i32.shl
      i32.add
      i32.load8_u $0
      local.get $i
      local.get $array
      i32.const 3
      global.set $~argumentsLength
      local.get $fn|3
      i32.load $0
      call_indirect $0 (type $i32_i32_i32_=>_i32)
      if
       br $for-continue|0
      end
      i32.const 0
      br $~lib/typedarray/EVERY<~lib/typedarray/Uint8Array,u8>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   i32.const 1
  end
 )
 (func $std/typedarray/testArrayEvery<~lib/typedarray/Uint8Array,u8>~anonymous|1 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 255
  i32.and
  i32.const 2
  i32.eq
 )
 (func $std/typedarray/testArrayEvery<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 255
  i32.and
  i32.const 2
  i32.rem_u
  i32.const 0
  i32.eq
 )
 (func $~lib/typedarray/Uint8ClampedArray#every (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  block $~lib/typedarray/EVERY<~lib/typedarray/Uint8ClampedArray,u8>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   i32.const 0
   local.set $i
   local.get $array
   call $~lib/typedarray/Uint8ClampedArray#get:length
   local.set $k
   loop $for-loop|0
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     block $for-continue|0
      local.get $ptr
      local.get $i
      i32.const 0
      i32.shl
      i32.add
      i32.load8_u $0
      local.get $i
      local.get $array
      i32.const 3
      global.set $~argumentsLength
      local.get $fn|3
      i32.load $0
      call_indirect $0 (type $i32_i32_i32_=>_i32)
      if
       br $for-continue|0
      end
      i32.const 0
      br $~lib/typedarray/EVERY<~lib/typedarray/Uint8ClampedArray,u8>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   i32.const 1
  end
 )
 (func $std/typedarray/testArrayEvery<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|1 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 255
  i32.and
  i32.const 2
  i32.eq
 )
 (func $std/typedarray/testArrayEvery<~lib/typedarray/Int16Array,i16>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.extend16_s
  i32.const 2
  i32.rem_s
  i32.const 0
  i32.eq
 )
 (func $~lib/typedarray/Int16Array#every (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  block $~lib/typedarray/EVERY<~lib/typedarray/Int16Array,i16>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   i32.const 0
   local.set $i
   local.get $array
   call $~lib/typedarray/Int16Array#get:length
   local.set $k
   loop $for-loop|0
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     block $for-continue|0
      local.get $ptr
      local.get $i
      i32.const 1
      i32.shl
      i32.add
      i32.load16_s $0
      local.get $i
      local.get $array
      i32.const 3
      global.set $~argumentsLength
      local.get $fn|3
      i32.load $0
      call_indirect $0 (type $i32_i32_i32_=>_i32)
      if
       br $for-continue|0
      end
      i32.const 0
      br $~lib/typedarray/EVERY<~lib/typedarray/Int16Array,i16>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   i32.const 1
  end
 )
 (func $std/typedarray/testArrayEvery<~lib/typedarray/Int16Array,i16>~anonymous|1 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.extend16_s
  i32.const 2
  i32.eq
 )
 (func $std/typedarray/testArrayEvery<~lib/typedarray/Uint16Array,u16>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 65535
  i32.and
  i32.const 2
  i32.rem_u
  i32.const 0
  i32.eq
 )
 (func $~lib/typedarray/Uint16Array#every (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  block $~lib/typedarray/EVERY<~lib/typedarray/Uint16Array,u16>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   i32.const 0
   local.set $i
   local.get $array
   call $~lib/typedarray/Uint16Array#get:length
   local.set $k
   loop $for-loop|0
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     block $for-continue|0
      local.get $ptr
      local.get $i
      i32.const 1
      i32.shl
      i32.add
      i32.load16_u $0
      local.get $i
      local.get $array
      i32.const 3
      global.set $~argumentsLength
      local.get $fn|3
      i32.load $0
      call_indirect $0 (type $i32_i32_i32_=>_i32)
      if
       br $for-continue|0
      end
      i32.const 0
      br $~lib/typedarray/EVERY<~lib/typedarray/Uint16Array,u16>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   i32.const 1
  end
 )
 (func $std/typedarray/testArrayEvery<~lib/typedarray/Uint16Array,u16>~anonymous|1 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 65535
  i32.and
  i32.const 2
  i32.eq
 )
 (func $std/typedarray/testArrayEvery<~lib/typedarray/Int32Array,i32>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 2
  i32.rem_s
  i32.const 0
  i32.eq
 )
 (func $~lib/typedarray/Int32Array#every (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  block $~lib/typedarray/EVERY<~lib/typedarray/Int32Array,i32>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   i32.const 0
   local.set $i
   local.get $array
   call $~lib/typedarray/Int32Array#get:length
   local.set $k
   loop $for-loop|0
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     block $for-continue|0
      local.get $ptr
      local.get $i
      i32.const 2
      i32.shl
      i32.add
      i32.load $0
      local.get $i
      local.get $array
      i32.const 3
      global.set $~argumentsLength
      local.get $fn|3
      i32.load $0
      call_indirect $0 (type $i32_i32_i32_=>_i32)
      if
       br $for-continue|0
      end
      i32.const 0
      br $~lib/typedarray/EVERY<~lib/typedarray/Int32Array,i32>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   i32.const 1
  end
 )
 (func $std/typedarray/testArrayEvery<~lib/typedarray/Int32Array,i32>~anonymous|1 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 2
  i32.eq
 )
 (func $std/typedarray/testArrayEvery<~lib/typedarray/Uint32Array,u32>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 2
  i32.rem_u
  i32.const 0
  i32.eq
 )
 (func $~lib/typedarray/Uint32Array#every (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  block $~lib/typedarray/EVERY<~lib/typedarray/Uint32Array,u32>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   i32.const 0
   local.set $i
   local.get $array
   call $~lib/typedarray/Uint32Array#get:length
   local.set $k
   loop $for-loop|0
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     block $for-continue|0
      local.get $ptr
      local.get $i
      i32.const 2
      i32.shl
      i32.add
      i32.load $0
      local.get $i
      local.get $array
      i32.const 3
      global.set $~argumentsLength
      local.get $fn|3
      i32.load $0
      call_indirect $0 (type $i32_i32_i32_=>_i32)
      if
       br $for-continue|0
      end
      i32.const 0
      br $~lib/typedarray/EVERY<~lib/typedarray/Uint32Array,u32>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   i32.const 1
  end
 )
 (func $std/typedarray/testArrayEvery<~lib/typedarray/Uint32Array,u32>~anonymous|1 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 2
  i32.eq
 )
 (func $std/typedarray/testArrayEvery<~lib/typedarray/Int64Array,i64>~anonymous|0 (type $i64_i32_i32_=>_i32) (param $value i64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i64.const 2
  i64.rem_s
  i64.const 0
  i64.eq
 )
 (func $~lib/typedarray/Int64Array#every (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  block $~lib/typedarray/EVERY<~lib/typedarray/Int64Array,i64>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   i32.const 0
   local.set $i
   local.get $array
   call $~lib/typedarray/Int64Array#get:length
   local.set $k
   loop $for-loop|0
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     block $for-continue|0
      local.get $ptr
      local.get $i
      i32.const 3
      i32.shl
      i32.add
      i64.load $0
      local.get $i
      local.get $array
      i32.const 3
      global.set $~argumentsLength
      local.get $fn|3
      i32.load $0
      call_indirect $0 (type $i64_i32_i32_=>_i32)
      if
       br $for-continue|0
      end
      i32.const 0
      br $~lib/typedarray/EVERY<~lib/typedarray/Int64Array,i64>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   i32.const 1
  end
 )
 (func $std/typedarray/testArrayEvery<~lib/typedarray/Int64Array,i64>~anonymous|1 (type $i64_i32_i32_=>_i32) (param $value i64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i64.const 2
  i64.eq
 )
 (func $std/typedarray/testArrayEvery<~lib/typedarray/Uint64Array,u64>~anonymous|0 (type $i64_i32_i32_=>_i32) (param $value i64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i64.const 2
  i64.rem_u
  i64.const 0
  i64.eq
 )
 (func $~lib/typedarray/Uint64Array#every (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  block $~lib/typedarray/EVERY<~lib/typedarray/Uint64Array,u64>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   i32.const 0
   local.set $i
   local.get $array
   call $~lib/typedarray/Uint64Array#get:length
   local.set $k
   loop $for-loop|0
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     block $for-continue|0
      local.get $ptr
      local.get $i
      i32.const 3
      i32.shl
      i32.add
      i64.load $0
      local.get $i
      local.get $array
      i32.const 3
      global.set $~argumentsLength
      local.get $fn|3
      i32.load $0
      call_indirect $0 (type $i64_i32_i32_=>_i32)
      if
       br $for-continue|0
      end
      i32.const 0
      br $~lib/typedarray/EVERY<~lib/typedarray/Uint64Array,u64>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   i32.const 1
  end
 )
 (func $std/typedarray/testArrayEvery<~lib/typedarray/Uint64Array,u64>~anonymous|1 (type $i64_i32_i32_=>_i32) (param $value i64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i64.const 2
  i64.eq
 )
 (func $~lib/math/NativeMathf.mod (type $f32_f32_=>_f32) (param $x f32) (param $y f32) (result f32)
  (local $ux i32)
  (local $uy i32)
  (local $ex i32)
  (local $ey i32)
  (local $sm i32)
  (local $uy1 i32)
  (local $m f32)
  (local $ux1 i32)
  (local $10 i32)
  (local $shift i32)
  local.get $y
  f32.abs
  f32.const 1
  f32.eq
  if
   local.get $x
   local.get $x
   f32.trunc
   f32.sub
   local.get $x
   f32.copysign
   return
  end
  local.get $x
  i32.reinterpret_f32
  local.set $ux
  local.get $y
  i32.reinterpret_f32
  local.set $uy
  local.get $ux
  i32.const 23
  i32.shr_u
  i32.const 255
  i32.and
  local.set $ex
  local.get $uy
  i32.const 23
  i32.shr_u
  i32.const 255
  i32.and
  local.set $ey
  local.get $ux
  i32.const -2147483648
  i32.and
  local.set $sm
  local.get $uy
  i32.const 1
  i32.shl
  local.set $uy1
  local.get $uy1
  i32.const 0
  i32.eq
  if (result i32)
   i32.const 1
  else
   local.get $ex
   i32.const 255
   i32.eq
  end
  if (result i32)
   i32.const 1
  else
   local.get $y
   local.get $y
   f32.ne
  end
  if
   local.get $x
   local.get $y
   f32.mul
   local.set $m
   local.get $m
   local.get $m
   f32.div
   return
  end
  local.get $ux
  i32.const 1
  i32.shl
  local.set $ux1
  local.get $ux1
  local.get $uy1
  i32.le_u
  if
   local.get $x
   local.get $ux1
   local.get $uy1
   i32.ne
   f32.convert_i32_u
   f32.mul
   return
  end
  local.get $ex
  i32.eqz
  if
   local.get $ex
   local.get $ux
   i32.const 9
   i32.shl
   i32.clz
   i32.sub
   local.set $ex
   local.get $ux
   i32.const 1
   local.get $ex
   i32.sub
   i32.shl
   local.set $ux
  else
   local.get $ux
   i32.const -1
   i32.const 9
   i32.shr_u
   i32.and
   local.set $ux
   local.get $ux
   i32.const 1
   i32.const 23
   i32.shl
   i32.or
   local.set $ux
  end
  local.get $ey
  i32.eqz
  if
   local.get $ey
   local.get $uy
   i32.const 9
   i32.shl
   i32.clz
   i32.sub
   local.set $ey
   local.get $uy
   i32.const 1
   local.get $ey
   i32.sub
   i32.shl
   local.set $uy
  else
   local.get $uy
   i32.const -1
   i32.const 9
   i32.shr_u
   i32.and
   local.set $uy
   local.get $uy
   i32.const 1
   i32.const 23
   i32.shl
   i32.or
   local.set $uy
  end
  loop $while-continue|0
   local.get $ex
   local.get $ey
   i32.gt_s
   local.set $10
   local.get $10
   if
    local.get $ux
    local.get $uy
    i32.ge_u
    if
     local.get $ux
     local.get $uy
     i32.eq
     if
      f32.const 0
      local.get $x
      f32.mul
      return
     end
     local.get $ux
     local.get $uy
     i32.sub
     local.set $ux
    end
    local.get $ux
    i32.const 1
    i32.shl
    local.set $ux
    local.get $ex
    i32.const 1
    i32.sub
    local.set $ex
    br $while-continue|0
   end
  end
  local.get $ux
  local.get $uy
  i32.ge_u
  if
   local.get $ux
   local.get $uy
   i32.eq
   if
    f32.const 0
    local.get $x
    f32.mul
    return
   end
   local.get $ux
   local.get $uy
   i32.sub
   local.set $ux
  end
  local.get $ux
  i32.const 8
  i32.shl
  i32.clz
  local.set $shift
  local.get $ex
  local.get $shift
  i32.sub
  local.set $ex
  local.get $ux
  local.get $shift
  i32.shl
  local.set $ux
  local.get $ex
  i32.const 0
  i32.gt_s
  if
   local.get $ux
   i32.const 1
   i32.const 23
   i32.shl
   i32.sub
   local.set $ux
   local.get $ux
   local.get $ex
   i32.const 23
   i32.shl
   i32.or
   local.set $ux
  else
   local.get $ux
   i32.const 0
   local.get $ex
   i32.sub
   i32.const 1
   i32.add
   i32.shr_u
   local.set $ux
  end
  local.get $ux
  local.get $sm
  i32.or
  f32.reinterpret_i32
 )
 (func $std/typedarray/testArrayEvery<~lib/typedarray/Float32Array,f32>~anonymous|0 (type $f32_i32_i32_=>_i32) (param $value f32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  f32.const 2
  call $~lib/math/NativeMathf.mod
  f32.const 0
  f32.eq
 )
 (func $~lib/typedarray/Float32Array#every (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  block $~lib/typedarray/EVERY<~lib/typedarray/Float32Array,f32>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   i32.const 0
   local.set $i
   local.get $array
   call $~lib/typedarray/Float32Array#get:length
   local.set $k
   loop $for-loop|0
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     block $for-continue|0
      local.get $ptr
      local.get $i
      i32.const 2
      i32.shl
      i32.add
      f32.load $0
      local.get $i
      local.get $array
      i32.const 3
      global.set $~argumentsLength
      local.get $fn|3
      i32.load $0
      call_indirect $0 (type $f32_i32_i32_=>_i32)
      if
       br $for-continue|0
      end
      i32.const 0
      br $~lib/typedarray/EVERY<~lib/typedarray/Float32Array,f32>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   i32.const 1
  end
 )
 (func $std/typedarray/testArrayEvery<~lib/typedarray/Float32Array,f32>~anonymous|1 (type $f32_i32_i32_=>_i32) (param $value f32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  f32.const 2
  f32.eq
 )
 (func $~lib/math/NativeMath.mod (type $f64_f64_=>_f64) (param $x f64) (param $y f64) (result f64)
  (local $ux i64)
  (local $uy i64)
  (local $ex i64)
  (local $ey i64)
  (local $sx i64)
  (local $uy1 i64)
  (local $m f64)
  (local $ux1 i64)
  (local $10 i32)
  (local $shift i64)
  local.get $y
  f64.abs
  f64.const 1
  f64.eq
  if
   local.get $x
   local.get $x
   f64.trunc
   f64.sub
   local.get $x
   f64.copysign
   return
  end
  local.get $x
  i64.reinterpret_f64
  local.set $ux
  local.get $y
  i64.reinterpret_f64
  local.set $uy
  local.get $ux
  i64.const 52
  i64.shr_u
  i64.const 2047
  i64.and
  local.set $ex
  local.get $uy
  i64.const 52
  i64.shr_u
  i64.const 2047
  i64.and
  local.set $ey
  local.get $ux
  i64.const 63
  i64.shr_u
  local.set $sx
  local.get $uy
  i64.const 1
  i64.shl
  local.set $uy1
  local.get $uy1
  i64.const 0
  i64.eq
  if (result i32)
   i32.const 1
  else
   local.get $ex
   i64.const 2047
   i64.eq
  end
  if (result i32)
   i32.const 1
  else
   local.get $y
   local.get $y
   f64.ne
  end
  if
   local.get $x
   local.get $y
   f64.mul
   local.set $m
   local.get $m
   local.get $m
   f64.div
   return
  end
  local.get $ux
  i64.const 1
  i64.shl
  local.set $ux1
  local.get $ux1
  local.get $uy1
  i64.le_u
  if
   local.get $x
   local.get $ux1
   local.get $uy1
   i64.ne
   f64.convert_i32_u
   f64.mul
   return
  end
  local.get $ex
  i64.const 0
  i64.ne
  i32.eqz
  if
   local.get $ex
   local.get $ux
   i64.const 12
   i64.shl
   i64.clz
   i64.sub
   local.set $ex
   local.get $ux
   i64.const 1
   local.get $ex
   i64.sub
   i64.shl
   local.set $ux
  else
   local.get $ux
   i64.const -1
   i64.const 12
   i64.shr_u
   i64.and
   local.set $ux
   local.get $ux
   i64.const 1
   i64.const 52
   i64.shl
   i64.or
   local.set $ux
  end
  local.get $ey
  i64.const 0
  i64.ne
  i32.eqz
  if
   local.get $ey
   local.get $uy
   i64.const 12
   i64.shl
   i64.clz
   i64.sub
   local.set $ey
   local.get $uy
   i64.const 1
   local.get $ey
   i64.sub
   i64.shl
   local.set $uy
  else
   local.get $uy
   i64.const -1
   i64.const 12
   i64.shr_u
   i64.and
   local.set $uy
   local.get $uy
   i64.const 1
   i64.const 52
   i64.shl
   i64.or
   local.set $uy
  end
  loop $while-continue|0
   local.get $ex
   local.get $ey
   i64.gt_s
   local.set $10
   local.get $10
   if
    local.get $ux
    local.get $uy
    i64.ge_u
    if
     local.get $ux
     local.get $uy
     i64.eq
     if
      f64.const 0
      local.get $x
      f64.mul
      return
     end
     local.get $ux
     local.get $uy
     i64.sub
     local.set $ux
    end
    local.get $ux
    i64.const 1
    i64.shl
    local.set $ux
    local.get $ex
    i64.const 1
    i64.sub
    local.set $ex
    br $while-continue|0
   end
  end
  local.get $ux
  local.get $uy
  i64.ge_u
  if
   local.get $ux
   local.get $uy
   i64.eq
   if
    f64.const 0
    local.get $x
    f64.mul
    return
   end
   local.get $ux
   local.get $uy
   i64.sub
   local.set $ux
  end
  local.get $ux
  i64.const 11
  i64.shl
  i64.clz
  local.set $shift
  local.get $ex
  local.get $shift
  i64.sub
  local.set $ex
  local.get $ux
  local.get $shift
  i64.shl
  local.set $ux
  local.get $ex
  i64.const 0
  i64.gt_s
  if
   local.get $ux
   i64.const 1
   i64.const 52
   i64.shl
   i64.sub
   local.set $ux
   local.get $ux
   local.get $ex
   i64.const 52
   i64.shl
   i64.or
   local.set $ux
  else
   local.get $ux
   i64.const 0
   local.get $ex
   i64.sub
   i64.const 1
   i64.add
   i64.shr_u
   local.set $ux
  end
  local.get $ux
  local.get $sx
  i64.const 63
  i64.shl
  i64.or
  f64.reinterpret_i64
 )
 (func $std/typedarray/testArrayEvery<~lib/typedarray/Float64Array,f64>~anonymous|0 (type $f64_i32_i32_=>_i32) (param $value f64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  f64.const 2
  call $~lib/math/NativeMath.mod
  f64.const 0
  f64.eq
 )
 (func $~lib/typedarray/Float64Array#every (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  block $~lib/typedarray/EVERY<~lib/typedarray/Float64Array,f64>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   i32.const 0
   local.set $i
   local.get $array
   call $~lib/typedarray/Float64Array#get:length
   local.set $k
   loop $for-loop|0
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     block $for-continue|0
      local.get $ptr
      local.get $i
      i32.const 3
      i32.shl
      i32.add
      f64.load $0
      local.get $i
      local.get $array
      i32.const 3
      global.set $~argumentsLength
      local.get $fn|3
      i32.load $0
      call_indirect $0 (type $f64_i32_i32_=>_i32)
      if
       br $for-continue|0
      end
      i32.const 0
      br $~lib/typedarray/EVERY<~lib/typedarray/Float64Array,f64>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   i32.const 1
  end
 )
 (func $std/typedarray/testArrayEvery<~lib/typedarray/Float64Array,f64>~anonymous|1 (type $f64_i32_i32_=>_i32) (param $value f64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  f64.const 2
  f64.eq
 )
 (func $~lib/typedarray/Int8Array#forEach (type $i32_i32_=>_none) (param $this i32) (param $fn i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|3
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  i32.const 0
  local.set $i
  local.get $array
  call $~lib/typedarray/Int8Array#get:length
  local.set $k
  loop $for-loop|0
   local.get $i
   local.get $k
   i32.lt_s
   local.set $7
   local.get $7
   if
    local.get $ptr
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    i32.load8_s $0
    local.get $i
    local.get $array
    i32.const 3
    global.set $~argumentsLength
    local.get $fn|3
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_none)
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint8Array#forEach (type $i32_i32_=>_none) (param $this i32) (param $fn i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|3
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  i32.const 0
  local.set $i
  local.get $array
  call $~lib/typedarray/Uint8Array#get:length
  local.set $k
  loop $for-loop|0
   local.get $i
   local.get $k
   i32.lt_s
   local.set $7
   local.get $7
   if
    local.get $ptr
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    i32.load8_u $0
    local.get $i
    local.get $array
    i32.const 3
    global.set $~argumentsLength
    local.get $fn|3
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_none)
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint8ClampedArray#forEach (type $i32_i32_=>_none) (param $this i32) (param $fn i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|3
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  i32.const 0
  local.set $i
  local.get $array
  call $~lib/typedarray/Uint8ClampedArray#get:length
  local.set $k
  loop $for-loop|0
   local.get $i
   local.get $k
   i32.lt_s
   local.set $7
   local.get $7
   if
    local.get $ptr
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    i32.load8_u $0
    local.get $i
    local.get $array
    i32.const 3
    global.set $~argumentsLength
    local.get $fn|3
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_none)
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Int16Array#forEach (type $i32_i32_=>_none) (param $this i32) (param $fn i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|3
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  i32.const 0
  local.set $i
  local.get $array
  call $~lib/typedarray/Int16Array#get:length
  local.set $k
  loop $for-loop|0
   local.get $i
   local.get $k
   i32.lt_s
   local.set $7
   local.get $7
   if
    local.get $ptr
    local.get $i
    i32.const 1
    i32.shl
    i32.add
    i32.load16_s $0
    local.get $i
    local.get $array
    i32.const 3
    global.set $~argumentsLength
    local.get $fn|3
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_none)
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint16Array#forEach (type $i32_i32_=>_none) (param $this i32) (param $fn i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|3
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  i32.const 0
  local.set $i
  local.get $array
  call $~lib/typedarray/Uint16Array#get:length
  local.set $k
  loop $for-loop|0
   local.get $i
   local.get $k
   i32.lt_s
   local.set $7
   local.get $7
   if
    local.get $ptr
    local.get $i
    i32.const 1
    i32.shl
    i32.add
    i32.load16_u $0
    local.get $i
    local.get $array
    i32.const 3
    global.set $~argumentsLength
    local.get $fn|3
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_none)
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Int32Array#forEach (type $i32_i32_=>_none) (param $this i32) (param $fn i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|3
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  i32.const 0
  local.set $i
  local.get $array
  call $~lib/typedarray/Int32Array#get:length
  local.set $k
  loop $for-loop|0
   local.get $i
   local.get $k
   i32.lt_s
   local.set $7
   local.get $7
   if
    local.get $ptr
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.get $i
    local.get $array
    i32.const 3
    global.set $~argumentsLength
    local.get $fn|3
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_none)
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint32Array#forEach (type $i32_i32_=>_none) (param $this i32) (param $fn i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|3
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  i32.const 0
  local.set $i
  local.get $array
  call $~lib/typedarray/Uint32Array#get:length
  local.set $k
  loop $for-loop|0
   local.get $i
   local.get $k
   i32.lt_s
   local.set $7
   local.get $7
   if
    local.get $ptr
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.get $i
    local.get $array
    i32.const 3
    global.set $~argumentsLength
    local.get $fn|3
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_none)
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Int64Array#forEach (type $i32_i32_=>_none) (param $this i32) (param $fn i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|3
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  i32.const 0
  local.set $i
  local.get $array
  call $~lib/typedarray/Int64Array#get:length
  local.set $k
  loop $for-loop|0
   local.get $i
   local.get $k
   i32.lt_s
   local.set $7
   local.get $7
   if
    local.get $ptr
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    local.get $i
    local.get $array
    i32.const 3
    global.set $~argumentsLength
    local.get $fn|3
    i32.load $0
    call_indirect $0 (type $i64_i32_i32_=>_none)
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint64Array#forEach (type $i32_i32_=>_none) (param $this i32) (param $fn i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|3
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  i32.const 0
  local.set $i
  local.get $array
  call $~lib/typedarray/Uint64Array#get:length
  local.set $k
  loop $for-loop|0
   local.get $i
   local.get $k
   i32.lt_s
   local.set $7
   local.get $7
   if
    local.get $ptr
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    local.get $i
    local.get $array
    i32.const 3
    global.set $~argumentsLength
    local.get $fn|3
    i32.load $0
    call_indirect $0 (type $i64_i32_i32_=>_none)
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Float32Array#forEach (type $i32_i32_=>_none) (param $this i32) (param $fn i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|3
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  i32.const 0
  local.set $i
  local.get $array
  call $~lib/typedarray/Float32Array#get:length
  local.set $k
  loop $for-loop|0
   local.get $i
   local.get $k
   i32.lt_s
   local.set $7
   local.get $7
   if
    local.get $ptr
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    f32.load $0
    local.get $i
    local.get $array
    i32.const 3
    global.set $~argumentsLength
    local.get $fn|3
    i32.load $0
    call_indirect $0 (type $f32_i32_i32_=>_none)
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Float64Array#forEach (type $i32_i32_=>_none) (param $this i32) (param $fn i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|3
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  i32.const 0
  local.set $i
  local.get $array
  call $~lib/typedarray/Float64Array#get:length
  local.set $k
  loop $for-loop|0
   local.get $i
   local.get $k
   i32.lt_s
   local.set $7
   local.get $7
   if
    local.get $ptr
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    f64.load $0
    local.get $i
    local.get $array
    i32.const 3
    global.set $~argumentsLength
    local.get $fn|3
    i32.load $0
    call_indirect $0 (type $f64_i32_i32_=>_none)
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/util/bytes/REVERSE<u8> (type $i32_i32_=>_none) (param $ptr i32) (param $len i32)
  (local $i i32)
  (local $tail i32)
  (local $hlen i32)
  (local $5 i32)
  (local $front i32)
  (local $back i32)
  (local $8 i64)
  (local $9 i64)
  (local $temp i64)
  (local $11 i64)
  (local $12 i64)
  (local $13 i32)
  (local $front|14 i32)
  (local $back|15 i32)
  (local $temp|16 i32)
  local.get $len
  i32.const 1
  i32.gt_u
  if
   i32.const 0
   local.set $i
   local.get $len
   i32.const 1
   i32.shr_u
   local.set $hlen
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   i32.const 1
   i32.const 1
   i32.eq
   drop
   local.get $len
   i32.const 8
   i32.sub
   local.set $tail
   loop $while-continue|0
    local.get $i
    i32.const 7
    i32.add
    local.get $hlen
    i32.lt_u
    local.set $5
    local.get $5
    if
     local.get $ptr
     local.get $i
     i32.add
     local.set $front
     local.get $ptr
     local.get $tail
     i32.add
     local.get $i
     i32.sub
     local.set $back
     local.get $front
     i64.load $0
     local.tee $8
     i64.const 8
     i64.shr_u
     i64.const 71777214294589695
     i64.and
     local.get $8
     i64.const 71777214294589695
     i64.and
     i64.const 8
     i64.shl
     i64.or
     local.tee $9
     i64.const 16
     i64.shr_u
     i64.const 281470681808895
     i64.and
     local.get $9
     i64.const 281470681808895
     i64.and
     i64.const 16
     i64.shl
     i64.or
     i64.const 32
     i64.rotr
     local.set $temp
     local.get $front
     local.get $back
     i64.load $0
     local.tee $11
     i64.const 8
     i64.shr_u
     i64.const 71777214294589695
     i64.and
     local.get $11
     i64.const 71777214294589695
     i64.and
     i64.const 8
     i64.shl
     i64.or
     local.tee $12
     i64.const 16
     i64.shr_u
     i64.const 281470681808895
     i64.and
     local.get $12
     i64.const 281470681808895
     i64.and
     i64.const 16
     i64.shl
     i64.or
     i64.const 32
     i64.rotr
     i64.store $0
     local.get $back
     local.get $temp
     i64.store $0
     local.get $i
     i32.const 8
     i32.add
     local.set $i
     br $while-continue|0
    end
   end
   i32.const 1
   i32.const 2
   i32.eq
   drop
   local.get $len
   i32.const 1
   i32.sub
   local.set $tail
   loop $while-continue|1
    local.get $i
    local.get $hlen
    i32.lt_u
    local.set $13
    local.get $13
    if
     local.get $ptr
     local.get $i
     i32.const 0
     i32.shl
     i32.add
     local.set $front|14
     local.get $ptr
     local.get $tail
     local.get $i
     i32.sub
     i32.const 0
     i32.shl
     i32.add
     local.set $back|15
     local.get $front|14
     i32.load8_u $0
     local.set $temp|16
     local.get $front|14
     local.get $back|15
     i32.load8_u $0
     i32.store8 $0
     local.get $back|15
     local.get $temp|16
     i32.store8 $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $while-continue|1
    end
   end
  end
 )
 (func $~lib/typedarray/Int8Array#reverse (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Int8Array#get:length
  call $~lib/util/bytes/REVERSE<u8>
  local.get $this
 )
 (func $~lib/typedarray/Uint8Array#reverse (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Uint8Array#get:length
  call $~lib/util/bytes/REVERSE<u8>
  local.get $this
 )
 (func $~lib/typedarray/Uint8ClampedArray#reverse (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Uint8ClampedArray#get:length
  call $~lib/util/bytes/REVERSE<u8>
  local.get $this
 )
 (func $~lib/util/bytes/REVERSE<u16> (type $i32_i32_=>_none) (param $ptr i32) (param $len i32)
  (local $i i32)
  (local $tail i32)
  (local $hlen i32)
  (local $5 i32)
  (local $front i32)
  (local $back i32)
  (local $temp i32)
  (local $9 i32)
  (local $front|10 i32)
  (local $back|11 i32)
  (local $temp|12 i32)
  local.get $len
  i32.const 1
  i32.gt_u
  if
   i32.const 0
   local.set $i
   local.get $len
   i32.const 1
   i32.shr_u
   local.set $hlen
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   i32.const 2
   i32.const 1
   i32.eq
   drop
   i32.const 2
   i32.const 2
   i32.eq
   drop
   local.get $len
   i32.const 2
   i32.sub
   local.set $tail
   loop $while-continue|0
    local.get $i
    i32.const 1
    i32.add
    local.get $hlen
    i32.lt_u
    local.set $5
    local.get $5
    if
     local.get $ptr
     local.get $i
     i32.const 1
     i32.shl
     i32.add
     local.set $front
     local.get $ptr
     local.get $tail
     local.get $i
     i32.sub
     i32.const 1
     i32.shl
     i32.add
     local.set $back
     local.get $back
     i32.load $0
     i32.const 16
     i32.rotr
     local.set $temp
     local.get $back
     local.get $front
     i32.load $0
     i32.const 16
     i32.rotr
     i32.store $0
     local.get $front
     local.get $temp
     i32.store $0
     local.get $i
     i32.const 2
     i32.add
     local.set $i
     br $while-continue|0
    end
   end
   local.get $len
   i32.const 1
   i32.sub
   local.set $tail
   loop $while-continue|1
    local.get $i
    local.get $hlen
    i32.lt_u
    local.set $9
    local.get $9
    if
     local.get $ptr
     local.get $i
     i32.const 1
     i32.shl
     i32.add
     local.set $front|10
     local.get $ptr
     local.get $tail
     local.get $i
     i32.sub
     i32.const 1
     i32.shl
     i32.add
     local.set $back|11
     local.get $front|10
     i32.load16_u $0
     local.set $temp|12
     local.get $front|10
     local.get $back|11
     i32.load16_u $0
     i32.store16 $0
     local.get $back|11
     local.get $temp|12
     i32.store16 $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $while-continue|1
    end
   end
  end
 )
 (func $~lib/typedarray/Int16Array#reverse (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Int16Array#get:length
  call $~lib/util/bytes/REVERSE<u16>
  local.get $this
 )
 (func $~lib/typedarray/Uint16Array#reverse (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Uint16Array#get:length
  call $~lib/util/bytes/REVERSE<u16>
  local.get $this
 )
 (func $~lib/util/bytes/REVERSE<u32> (type $i32_i32_=>_none) (param $ptr i32) (param $len i32)
  (local $i i32)
  (local $tail i32)
  (local $hlen i32)
  (local $5 i32)
  (local $front i32)
  (local $back i32)
  (local $temp i32)
  local.get $len
  i32.const 1
  i32.gt_u
  if
   i32.const 0
   local.set $i
   local.get $len
   i32.const 1
   i32.shr_u
   local.set $hlen
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   i32.const 4
   i32.const 1
   i32.eq
   drop
   i32.const 4
   i32.const 2
   i32.eq
   drop
   local.get $len
   i32.const 1
   i32.sub
   local.set $tail
   loop $while-continue|0
    local.get $i
    local.get $hlen
    i32.lt_u
    local.set $5
    local.get $5
    if
     local.get $ptr
     local.get $i
     i32.const 2
     i32.shl
     i32.add
     local.set $front
     local.get $ptr
     local.get $tail
     local.get $i
     i32.sub
     i32.const 2
     i32.shl
     i32.add
     local.set $back
     local.get $front
     i32.load $0
     local.set $temp
     local.get $front
     local.get $back
     i32.load $0
     i32.store $0
     local.get $back
     local.get $temp
     i32.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $while-continue|0
    end
   end
  end
 )
 (func $~lib/typedarray/Int32Array#reverse (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Int32Array#get:length
  call $~lib/util/bytes/REVERSE<u32>
  local.get $this
 )
 (func $~lib/typedarray/Uint32Array#reverse (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Uint32Array#get:length
  call $~lib/util/bytes/REVERSE<u32>
  local.get $this
 )
 (func $~lib/util/bytes/REVERSE<u64> (type $i32_i32_=>_none) (param $ptr i32) (param $len i32)
  (local $i i32)
  (local $tail i32)
  (local $hlen i32)
  (local $5 i32)
  (local $front i32)
  (local $back i32)
  (local $temp i64)
  local.get $len
  i32.const 1
  i32.gt_u
  if
   i32.const 0
   local.set $i
   local.get $len
   i32.const 1
   i32.shr_u
   local.set $hlen
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   i32.const 8
   i32.const 1
   i32.eq
   drop
   i32.const 8
   i32.const 2
   i32.eq
   drop
   local.get $len
   i32.const 1
   i32.sub
   local.set $tail
   loop $while-continue|0
    local.get $i
    local.get $hlen
    i32.lt_u
    local.set $5
    local.get $5
    if
     local.get $ptr
     local.get $i
     i32.const 3
     i32.shl
     i32.add
     local.set $front
     local.get $ptr
     local.get $tail
     local.get $i
     i32.sub
     i32.const 3
     i32.shl
     i32.add
     local.set $back
     local.get $front
     i64.load $0
     local.set $temp
     local.get $front
     local.get $back
     i64.load $0
     i64.store $0
     local.get $back
     local.get $temp
     i64.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $while-continue|0
    end
   end
  end
 )
 (func $~lib/typedarray/Int64Array#reverse (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Int64Array#get:length
  call $~lib/util/bytes/REVERSE<u64>
  local.get $this
 )
 (func $~lib/typedarray/Uint64Array#reverse (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Uint64Array#get:length
  call $~lib/util/bytes/REVERSE<u64>
  local.get $this
 )
 (func $~lib/util/bytes/REVERSE<f32> (type $i32_i32_=>_none) (param $ptr i32) (param $len i32)
  (local $i i32)
  (local $tail i32)
  (local $hlen i32)
  (local $5 i32)
  (local $front i32)
  (local $back i32)
  (local $temp f32)
  local.get $len
  i32.const 1
  i32.gt_u
  if
   i32.const 0
   local.set $i
   local.get $len
   i32.const 1
   i32.shr_u
   local.set $hlen
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   i32.const 4
   i32.const 1
   i32.eq
   drop
   i32.const 4
   i32.const 2
   i32.eq
   drop
   local.get $len
   i32.const 1
   i32.sub
   local.set $tail
   loop $while-continue|0
    local.get $i
    local.get $hlen
    i32.lt_u
    local.set $5
    local.get $5
    if
     local.get $ptr
     local.get $i
     i32.const 2
     i32.shl
     i32.add
     local.set $front
     local.get $ptr
     local.get $tail
     local.get $i
     i32.sub
     i32.const 2
     i32.shl
     i32.add
     local.set $back
     local.get $front
     f32.load $0
     local.set $temp
     local.get $front
     local.get $back
     f32.load $0
     f32.store $0
     local.get $back
     local.get $temp
     f32.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $while-continue|0
    end
   end
  end
 )
 (func $~lib/typedarray/Float32Array#reverse (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Float32Array#get:length
  call $~lib/util/bytes/REVERSE<f32>
  local.get $this
 )
 (func $~lib/util/bytes/REVERSE<f64> (type $i32_i32_=>_none) (param $ptr i32) (param $len i32)
  (local $i i32)
  (local $tail i32)
  (local $hlen i32)
  (local $5 i32)
  (local $front i32)
  (local $back i32)
  (local $temp f64)
  local.get $len
  i32.const 1
  i32.gt_u
  if
   i32.const 0
   local.set $i
   local.get $len
   i32.const 1
   i32.shr_u
   local.set $hlen
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   i32.const 8
   i32.const 1
   i32.eq
   drop
   i32.const 8
   i32.const 2
   i32.eq
   drop
   local.get $len
   i32.const 1
   i32.sub
   local.set $tail
   loop $while-continue|0
    local.get $i
    local.get $hlen
    i32.lt_u
    local.set $5
    local.get $5
    if
     local.get $ptr
     local.get $i
     i32.const 3
     i32.shl
     i32.add
     local.set $front
     local.get $ptr
     local.get $tail
     local.get $i
     i32.sub
     i32.const 3
     i32.shl
     i32.add
     local.set $back
     local.get $front
     f64.load $0
     local.set $temp
     local.get $front
     local.get $back
     f64.load $0
     f64.store $0
     local.get $back
     local.get $temp
     f64.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $while-continue|0
    end
   end
  end
 )
 (func $~lib/typedarray/Float64Array#reverse (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Float64Array#get:length
  call $~lib/util/bytes/REVERSE<f64>
  local.get $this
 )
 (func $~lib/typedarray/Int8Array#indexOf (type $i32_i32_i32_=>_i32) (param $this i32) (param $searchElement i32) (param $fromIndex i32) (result i32)
  (local $array i32)
  (local $searchElement|4 i32)
  (local $fromIndex|5 i32)
  (local $index i32)
  (local $len i32)
  (local $8 i32)
  (local $9 i32)
  (local $dataStart i32)
  (local $11 i32)
  block $~lib/typedarray/INDEX_OF<~lib/typedarray/Int8Array,i8>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $searchElement
   local.set $searchElement|4
   local.get $fromIndex
   local.set $fromIndex|5
   local.get $fromIndex|5
   local.set $index
   local.get $array
   call $~lib/typedarray/Int8Array#get:length
   local.set $len
   local.get $len
   i32.const 0
   i32.eq
   if (result i32)
    i32.const 1
   else
    local.get $index
    local.get $len
    i32.ge_s
   end
   if
    i32.const -1
    br $~lib/typedarray/INDEX_OF<~lib/typedarray/Int8Array,i8>|inlined.0
   end
   local.get $index
   i32.const 0
   i32.lt_s
   if
    local.get $len
    local.get $index
    i32.add
    local.tee $8
    i32.const 0
    local.tee $9
    local.get $8
    local.get $9
    i32.gt_s
    select
    local.set $index
   end
   local.get $array
   i32.load $0 offset=4
   local.set $dataStart
   loop $while-continue|0
    local.get $index
    local.get $len
    i32.lt_s
    local.set $11
    local.get $11
    if
     local.get $dataStart
     local.get $index
     i32.const 0
     i32.shl
     i32.add
     i32.load8_s $0
     local.get $searchElement|4
     i32.extend8_s
     i32.eq
     if
      local.get $index
      br $~lib/typedarray/INDEX_OF<~lib/typedarray/Int8Array,i8>|inlined.0
     end
     local.get $index
     i32.const 1
     i32.add
     local.set $index
     br $while-continue|0
    end
   end
   i32.const -1
  end
 )
 (func $~lib/typedarray/Int8Array#lastIndexOf (type $i32_i32_i32_=>_i32) (param $this i32) (param $searchElement i32) (param $fromIndex i32) (result i32)
  (local $array i32)
  (local $searchElement|4 i32)
  (local $fromIndex|5 i32)
  (local $index i32)
  (local $len i32)
  (local $dataStart i32)
  (local $9 i32)
  block $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Int8Array,i8>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $searchElement
   local.set $searchElement|4
   local.get $fromIndex
   local.set $fromIndex|5
   local.get $fromIndex|5
   local.set $index
   local.get $array
   call $~lib/typedarray/Int8Array#get:length
   local.set $len
   local.get $len
   i32.const 0
   i32.eq
   if
    i32.const -1
    br $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Int8Array,i8>|inlined.0
   end
   local.get $index
   i32.const 0
   i32.lt_s
   if
    local.get $len
    local.get $index
    i32.add
    local.set $index
   else
    local.get $index
    local.get $len
    i32.ge_s
    if
     local.get $len
     i32.const 1
     i32.sub
     local.set $index
    end
   end
   local.get $array
   i32.load $0 offset=4
   local.set $dataStart
   loop $while-continue|0
    local.get $index
    i32.const 0
    i32.ge_s
    local.set $9
    local.get $9
    if
     local.get $dataStart
     local.get $index
     i32.const 0
     i32.shl
     i32.add
     i32.load8_s $0
     local.get $searchElement|4
     i32.extend8_s
     i32.eq
     if
      local.get $index
      br $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Int8Array,i8>|inlined.0
     end
     local.get $index
     i32.const 1
     i32.sub
     local.set $index
     br $while-continue|0
    end
   end
   i32.const -1
  end
 )
 (func $~lib/typedarray/Int8Array#lastIndexOf@varargs (type $i32_i32_i32_=>_i32) (param $this i32) (param $searchElement i32) (param $fromIndex i32) (result i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   local.get $this
   call $~lib/typedarray/Int8Array#get:length
   local.set $fromIndex
  end
  local.get $this
  local.get $searchElement
  local.get $fromIndex
  call $~lib/typedarray/Int8Array#lastIndexOf
 )
 (func $~lib/typedarray/Uint8Array#indexOf (type $i32_i32_i32_=>_i32) (param $this i32) (param $searchElement i32) (param $fromIndex i32) (result i32)
  (local $array i32)
  (local $searchElement|4 i32)
  (local $fromIndex|5 i32)
  (local $index i32)
  (local $len i32)
  (local $8 i32)
  (local $9 i32)
  (local $dataStart i32)
  (local $11 i32)
  block $~lib/typedarray/INDEX_OF<~lib/typedarray/Uint8Array,u8>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $searchElement
   local.set $searchElement|4
   local.get $fromIndex
   local.set $fromIndex|5
   local.get $fromIndex|5
   local.set $index
   local.get $array
   call $~lib/typedarray/Uint8Array#get:length
   local.set $len
   local.get $len
   i32.const 0
   i32.eq
   if (result i32)
    i32.const 1
   else
    local.get $index
    local.get $len
    i32.ge_s
   end
   if
    i32.const -1
    br $~lib/typedarray/INDEX_OF<~lib/typedarray/Uint8Array,u8>|inlined.0
   end
   local.get $index
   i32.const 0
   i32.lt_s
   if
    local.get $len
    local.get $index
    i32.add
    local.tee $8
    i32.const 0
    local.tee $9
    local.get $8
    local.get $9
    i32.gt_s
    select
    local.set $index
   end
   local.get $array
   i32.load $0 offset=4
   local.set $dataStart
   loop $while-continue|0
    local.get $index
    local.get $len
    i32.lt_s
    local.set $11
    local.get $11
    if
     local.get $dataStart
     local.get $index
     i32.const 0
     i32.shl
     i32.add
     i32.load8_u $0
     local.get $searchElement|4
     i32.const 255
     i32.and
     i32.eq
     if
      local.get $index
      br $~lib/typedarray/INDEX_OF<~lib/typedarray/Uint8Array,u8>|inlined.0
     end
     local.get $index
     i32.const 1
     i32.add
     local.set $index
     br $while-continue|0
    end
   end
   i32.const -1
  end
 )
 (func $~lib/typedarray/Uint8Array#lastIndexOf (type $i32_i32_i32_=>_i32) (param $this i32) (param $searchElement i32) (param $fromIndex i32) (result i32)
  (local $array i32)
  (local $searchElement|4 i32)
  (local $fromIndex|5 i32)
  (local $index i32)
  (local $len i32)
  (local $dataStart i32)
  (local $9 i32)
  block $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Uint8Array,u8>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $searchElement
   local.set $searchElement|4
   local.get $fromIndex
   local.set $fromIndex|5
   local.get $fromIndex|5
   local.set $index
   local.get $array
   call $~lib/typedarray/Uint8Array#get:length
   local.set $len
   local.get $len
   i32.const 0
   i32.eq
   if
    i32.const -1
    br $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Uint8Array,u8>|inlined.0
   end
   local.get $index
   i32.const 0
   i32.lt_s
   if
    local.get $len
    local.get $index
    i32.add
    local.set $index
   else
    local.get $index
    local.get $len
    i32.ge_s
    if
     local.get $len
     i32.const 1
     i32.sub
     local.set $index
    end
   end
   local.get $array
   i32.load $0 offset=4
   local.set $dataStart
   loop $while-continue|0
    local.get $index
    i32.const 0
    i32.ge_s
    local.set $9
    local.get $9
    if
     local.get $dataStart
     local.get $index
     i32.const 0
     i32.shl
     i32.add
     i32.load8_u $0
     local.get $searchElement|4
     i32.const 255
     i32.and
     i32.eq
     if
      local.get $index
      br $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Uint8Array,u8>|inlined.0
     end
     local.get $index
     i32.const 1
     i32.sub
     local.set $index
     br $while-continue|0
    end
   end
   i32.const -1
  end
 )
 (func $~lib/typedarray/Uint8Array#lastIndexOf@varargs (type $i32_i32_i32_=>_i32) (param $this i32) (param $searchElement i32) (param $fromIndex i32) (result i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   local.get $this
   call $~lib/typedarray/Uint8Array#get:length
   local.set $fromIndex
  end
  local.get $this
  local.get $searchElement
  local.get $fromIndex
  call $~lib/typedarray/Uint8Array#lastIndexOf
 )
 (func $~lib/typedarray/Uint8ClampedArray#indexOf (type $i32_i32_i32_=>_i32) (param $this i32) (param $searchElement i32) (param $fromIndex i32) (result i32)
  (local $array i32)
  (local $searchElement|4 i32)
  (local $fromIndex|5 i32)
  (local $index i32)
  (local $len i32)
  (local $8 i32)
  (local $9 i32)
  (local $dataStart i32)
  (local $11 i32)
  block $~lib/typedarray/INDEX_OF<~lib/typedarray/Uint8ClampedArray,u8>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $searchElement
   local.set $searchElement|4
   local.get $fromIndex
   local.set $fromIndex|5
   local.get $fromIndex|5
   local.set $index
   local.get $array
   call $~lib/typedarray/Uint8ClampedArray#get:length
   local.set $len
   local.get $len
   i32.const 0
   i32.eq
   if (result i32)
    i32.const 1
   else
    local.get $index
    local.get $len
    i32.ge_s
   end
   if
    i32.const -1
    br $~lib/typedarray/INDEX_OF<~lib/typedarray/Uint8ClampedArray,u8>|inlined.0
   end
   local.get $index
   i32.const 0
   i32.lt_s
   if
    local.get $len
    local.get $index
    i32.add
    local.tee $8
    i32.const 0
    local.tee $9
    local.get $8
    local.get $9
    i32.gt_s
    select
    local.set $index
   end
   local.get $array
   i32.load $0 offset=4
   local.set $dataStart
   loop $while-continue|0
    local.get $index
    local.get $len
    i32.lt_s
    local.set $11
    local.get $11
    if
     local.get $dataStart
     local.get $index
     i32.const 0
     i32.shl
     i32.add
     i32.load8_u $0
     local.get $searchElement|4
     i32.const 255
     i32.and
     i32.eq
     if
      local.get $index
      br $~lib/typedarray/INDEX_OF<~lib/typedarray/Uint8ClampedArray,u8>|inlined.0
     end
     local.get $index
     i32.const 1
     i32.add
     local.set $index
     br $while-continue|0
    end
   end
   i32.const -1
  end
 )
 (func $~lib/typedarray/Uint8ClampedArray#lastIndexOf (type $i32_i32_i32_=>_i32) (param $this i32) (param $searchElement i32) (param $fromIndex i32) (result i32)
  (local $array i32)
  (local $searchElement|4 i32)
  (local $fromIndex|5 i32)
  (local $index i32)
  (local $len i32)
  (local $dataStart i32)
  (local $9 i32)
  block $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Uint8ClampedArray,u8>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $searchElement
   local.set $searchElement|4
   local.get $fromIndex
   local.set $fromIndex|5
   local.get $fromIndex|5
   local.set $index
   local.get $array
   call $~lib/typedarray/Uint8ClampedArray#get:length
   local.set $len
   local.get $len
   i32.const 0
   i32.eq
   if
    i32.const -1
    br $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Uint8ClampedArray,u8>|inlined.0
   end
   local.get $index
   i32.const 0
   i32.lt_s
   if
    local.get $len
    local.get $index
    i32.add
    local.set $index
   else
    local.get $index
    local.get $len
    i32.ge_s
    if
     local.get $len
     i32.const 1
     i32.sub
     local.set $index
    end
   end
   local.get $array
   i32.load $0 offset=4
   local.set $dataStart
   loop $while-continue|0
    local.get $index
    i32.const 0
    i32.ge_s
    local.set $9
    local.get $9
    if
     local.get $dataStart
     local.get $index
     i32.const 0
     i32.shl
     i32.add
     i32.load8_u $0
     local.get $searchElement|4
     i32.const 255
     i32.and
     i32.eq
     if
      local.get $index
      br $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Uint8ClampedArray,u8>|inlined.0
     end
     local.get $index
     i32.const 1
     i32.sub
     local.set $index
     br $while-continue|0
    end
   end
   i32.const -1
  end
 )
 (func $~lib/typedarray/Uint8ClampedArray#lastIndexOf@varargs (type $i32_i32_i32_=>_i32) (param $this i32) (param $searchElement i32) (param $fromIndex i32) (result i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   local.get $this
   call $~lib/typedarray/Uint8ClampedArray#get:length
   local.set $fromIndex
  end
  local.get $this
  local.get $searchElement
  local.get $fromIndex
  call $~lib/typedarray/Uint8ClampedArray#lastIndexOf
 )
 (func $~lib/typedarray/Int16Array#indexOf (type $i32_i32_i32_=>_i32) (param $this i32) (param $searchElement i32) (param $fromIndex i32) (result i32)
  (local $array i32)
  (local $searchElement|4 i32)
  (local $fromIndex|5 i32)
  (local $index i32)
  (local $len i32)
  (local $8 i32)
  (local $9 i32)
  (local $dataStart i32)
  (local $11 i32)
  block $~lib/typedarray/INDEX_OF<~lib/typedarray/Int16Array,i16>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $searchElement
   local.set $searchElement|4
   local.get $fromIndex
   local.set $fromIndex|5
   local.get $fromIndex|5
   local.set $index
   local.get $array
   call $~lib/typedarray/Int16Array#get:length
   local.set $len
   local.get $len
   i32.const 0
   i32.eq
   if (result i32)
    i32.const 1
   else
    local.get $index
    local.get $len
    i32.ge_s
   end
   if
    i32.const -1
    br $~lib/typedarray/INDEX_OF<~lib/typedarray/Int16Array,i16>|inlined.0
   end
   local.get $index
   i32.const 0
   i32.lt_s
   if
    local.get $len
    local.get $index
    i32.add
    local.tee $8
    i32.const 0
    local.tee $9
    local.get $8
    local.get $9
    i32.gt_s
    select
    local.set $index
   end
   local.get $array
   i32.load $0 offset=4
   local.set $dataStart
   loop $while-continue|0
    local.get $index
    local.get $len
    i32.lt_s
    local.set $11
    local.get $11
    if
     local.get $dataStart
     local.get $index
     i32.const 1
     i32.shl
     i32.add
     i32.load16_s $0
     local.get $searchElement|4
     i32.extend16_s
     i32.eq
     if
      local.get $index
      br $~lib/typedarray/INDEX_OF<~lib/typedarray/Int16Array,i16>|inlined.0
     end
     local.get $index
     i32.const 1
     i32.add
     local.set $index
     br $while-continue|0
    end
   end
   i32.const -1
  end
 )
 (func $~lib/typedarray/Int16Array#lastIndexOf (type $i32_i32_i32_=>_i32) (param $this i32) (param $searchElement i32) (param $fromIndex i32) (result i32)
  (local $array i32)
  (local $searchElement|4 i32)
  (local $fromIndex|5 i32)
  (local $index i32)
  (local $len i32)
  (local $dataStart i32)
  (local $9 i32)
  block $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Int16Array,i16>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $searchElement
   local.set $searchElement|4
   local.get $fromIndex
   local.set $fromIndex|5
   local.get $fromIndex|5
   local.set $index
   local.get $array
   call $~lib/typedarray/Int16Array#get:length
   local.set $len
   local.get $len
   i32.const 0
   i32.eq
   if
    i32.const -1
    br $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Int16Array,i16>|inlined.0
   end
   local.get $index
   i32.const 0
   i32.lt_s
   if
    local.get $len
    local.get $index
    i32.add
    local.set $index
   else
    local.get $index
    local.get $len
    i32.ge_s
    if
     local.get $len
     i32.const 1
     i32.sub
     local.set $index
    end
   end
   local.get $array
   i32.load $0 offset=4
   local.set $dataStart
   loop $while-continue|0
    local.get $index
    i32.const 0
    i32.ge_s
    local.set $9
    local.get $9
    if
     local.get $dataStart
     local.get $index
     i32.const 1
     i32.shl
     i32.add
     i32.load16_s $0
     local.get $searchElement|4
     i32.extend16_s
     i32.eq
     if
      local.get $index
      br $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Int16Array,i16>|inlined.0
     end
     local.get $index
     i32.const 1
     i32.sub
     local.set $index
     br $while-continue|0
    end
   end
   i32.const -1
  end
 )
 (func $~lib/typedarray/Int16Array#lastIndexOf@varargs (type $i32_i32_i32_=>_i32) (param $this i32) (param $searchElement i32) (param $fromIndex i32) (result i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   local.get $this
   call $~lib/typedarray/Int16Array#get:length
   local.set $fromIndex
  end
  local.get $this
  local.get $searchElement
  local.get $fromIndex
  call $~lib/typedarray/Int16Array#lastIndexOf
 )
 (func $~lib/typedarray/Uint16Array#indexOf (type $i32_i32_i32_=>_i32) (param $this i32) (param $searchElement i32) (param $fromIndex i32) (result i32)
  (local $array i32)
  (local $searchElement|4 i32)
  (local $fromIndex|5 i32)
  (local $index i32)
  (local $len i32)
  (local $8 i32)
  (local $9 i32)
  (local $dataStart i32)
  (local $11 i32)
  block $~lib/typedarray/INDEX_OF<~lib/typedarray/Uint16Array,u16>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $searchElement
   local.set $searchElement|4
   local.get $fromIndex
   local.set $fromIndex|5
   local.get $fromIndex|5
   local.set $index
   local.get $array
   call $~lib/typedarray/Uint16Array#get:length
   local.set $len
   local.get $len
   i32.const 0
   i32.eq
   if (result i32)
    i32.const 1
   else
    local.get $index
    local.get $len
    i32.ge_s
   end
   if
    i32.const -1
    br $~lib/typedarray/INDEX_OF<~lib/typedarray/Uint16Array,u16>|inlined.0
   end
   local.get $index
   i32.const 0
   i32.lt_s
   if
    local.get $len
    local.get $index
    i32.add
    local.tee $8
    i32.const 0
    local.tee $9
    local.get $8
    local.get $9
    i32.gt_s
    select
    local.set $index
   end
   local.get $array
   i32.load $0 offset=4
   local.set $dataStart
   loop $while-continue|0
    local.get $index
    local.get $len
    i32.lt_s
    local.set $11
    local.get $11
    if
     local.get $dataStart
     local.get $index
     i32.const 1
     i32.shl
     i32.add
     i32.load16_u $0
     local.get $searchElement|4
     i32.const 65535
     i32.and
     i32.eq
     if
      local.get $index
      br $~lib/typedarray/INDEX_OF<~lib/typedarray/Uint16Array,u16>|inlined.0
     end
     local.get $index
     i32.const 1
     i32.add
     local.set $index
     br $while-continue|0
    end
   end
   i32.const -1
  end
 )
 (func $~lib/typedarray/Uint16Array#lastIndexOf (type $i32_i32_i32_=>_i32) (param $this i32) (param $searchElement i32) (param $fromIndex i32) (result i32)
  (local $array i32)
  (local $searchElement|4 i32)
  (local $fromIndex|5 i32)
  (local $index i32)
  (local $len i32)
  (local $dataStart i32)
  (local $9 i32)
  block $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Uint16Array,u16>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $searchElement
   local.set $searchElement|4
   local.get $fromIndex
   local.set $fromIndex|5
   local.get $fromIndex|5
   local.set $index
   local.get $array
   call $~lib/typedarray/Uint16Array#get:length
   local.set $len
   local.get $len
   i32.const 0
   i32.eq
   if
    i32.const -1
    br $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Uint16Array,u16>|inlined.0
   end
   local.get $index
   i32.const 0
   i32.lt_s
   if
    local.get $len
    local.get $index
    i32.add
    local.set $index
   else
    local.get $index
    local.get $len
    i32.ge_s
    if
     local.get $len
     i32.const 1
     i32.sub
     local.set $index
    end
   end
   local.get $array
   i32.load $0 offset=4
   local.set $dataStart
   loop $while-continue|0
    local.get $index
    i32.const 0
    i32.ge_s
    local.set $9
    local.get $9
    if
     local.get $dataStart
     local.get $index
     i32.const 1
     i32.shl
     i32.add
     i32.load16_u $0
     local.get $searchElement|4
     i32.const 65535
     i32.and
     i32.eq
     if
      local.get $index
      br $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Uint16Array,u16>|inlined.0
     end
     local.get $index
     i32.const 1
     i32.sub
     local.set $index
     br $while-continue|0
    end
   end
   i32.const -1
  end
 )
 (func $~lib/typedarray/Uint16Array#lastIndexOf@varargs (type $i32_i32_i32_=>_i32) (param $this i32) (param $searchElement i32) (param $fromIndex i32) (result i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   local.get $this
   call $~lib/typedarray/Uint16Array#get:length
   local.set $fromIndex
  end
  local.get $this
  local.get $searchElement
  local.get $fromIndex
  call $~lib/typedarray/Uint16Array#lastIndexOf
 )
 (func $~lib/typedarray/Int32Array#indexOf (type $i32_i32_i32_=>_i32) (param $this i32) (param $searchElement i32) (param $fromIndex i32) (result i32)
  (local $array i32)
  (local $searchElement|4 i32)
  (local $fromIndex|5 i32)
  (local $index i32)
  (local $len i32)
  (local $8 i32)
  (local $9 i32)
  (local $dataStart i32)
  (local $11 i32)
  block $~lib/typedarray/INDEX_OF<~lib/typedarray/Int32Array,i32>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $searchElement
   local.set $searchElement|4
   local.get $fromIndex
   local.set $fromIndex|5
   local.get $fromIndex|5
   local.set $index
   local.get $array
   call $~lib/typedarray/Int32Array#get:length
   local.set $len
   local.get $len
   i32.const 0
   i32.eq
   if (result i32)
    i32.const 1
   else
    local.get $index
    local.get $len
    i32.ge_s
   end
   if
    i32.const -1
    br $~lib/typedarray/INDEX_OF<~lib/typedarray/Int32Array,i32>|inlined.0
   end
   local.get $index
   i32.const 0
   i32.lt_s
   if
    local.get $len
    local.get $index
    i32.add
    local.tee $8
    i32.const 0
    local.tee $9
    local.get $8
    local.get $9
    i32.gt_s
    select
    local.set $index
   end
   local.get $array
   i32.load $0 offset=4
   local.set $dataStart
   loop $while-continue|0
    local.get $index
    local.get $len
    i32.lt_s
    local.set $11
    local.get $11
    if
     local.get $dataStart
     local.get $index
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.get $searchElement|4
     i32.eq
     if
      local.get $index
      br $~lib/typedarray/INDEX_OF<~lib/typedarray/Int32Array,i32>|inlined.0
     end
     local.get $index
     i32.const 1
     i32.add
     local.set $index
     br $while-continue|0
    end
   end
   i32.const -1
  end
 )
 (func $~lib/typedarray/Int32Array#lastIndexOf (type $i32_i32_i32_=>_i32) (param $this i32) (param $searchElement i32) (param $fromIndex i32) (result i32)
  (local $array i32)
  (local $searchElement|4 i32)
  (local $fromIndex|5 i32)
  (local $index i32)
  (local $len i32)
  (local $dataStart i32)
  (local $9 i32)
  block $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Int32Array,i32>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $searchElement
   local.set $searchElement|4
   local.get $fromIndex
   local.set $fromIndex|5
   local.get $fromIndex|5
   local.set $index
   local.get $array
   call $~lib/typedarray/Int32Array#get:length
   local.set $len
   local.get $len
   i32.const 0
   i32.eq
   if
    i32.const -1
    br $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Int32Array,i32>|inlined.0
   end
   local.get $index
   i32.const 0
   i32.lt_s
   if
    local.get $len
    local.get $index
    i32.add
    local.set $index
   else
    local.get $index
    local.get $len
    i32.ge_s
    if
     local.get $len
     i32.const 1
     i32.sub
     local.set $index
    end
   end
   local.get $array
   i32.load $0 offset=4
   local.set $dataStart
   loop $while-continue|0
    local.get $index
    i32.const 0
    i32.ge_s
    local.set $9
    local.get $9
    if
     local.get $dataStart
     local.get $index
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.get $searchElement|4
     i32.eq
     if
      local.get $index
      br $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Int32Array,i32>|inlined.0
     end
     local.get $index
     i32.const 1
     i32.sub
     local.set $index
     br $while-continue|0
    end
   end
   i32.const -1
  end
 )
 (func $~lib/typedarray/Int32Array#lastIndexOf@varargs (type $i32_i32_i32_=>_i32) (param $this i32) (param $searchElement i32) (param $fromIndex i32) (result i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   local.get $this
   call $~lib/typedarray/Int32Array#get:length
   local.set $fromIndex
  end
  local.get $this
  local.get $searchElement
  local.get $fromIndex
  call $~lib/typedarray/Int32Array#lastIndexOf
 )
 (func $~lib/typedarray/Uint32Array#indexOf (type $i32_i32_i32_=>_i32) (param $this i32) (param $searchElement i32) (param $fromIndex i32) (result i32)
  (local $array i32)
  (local $searchElement|4 i32)
  (local $fromIndex|5 i32)
  (local $index i32)
  (local $len i32)
  (local $8 i32)
  (local $9 i32)
  (local $dataStart i32)
  (local $11 i32)
  block $~lib/typedarray/INDEX_OF<~lib/typedarray/Uint32Array,u32>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $searchElement
   local.set $searchElement|4
   local.get $fromIndex
   local.set $fromIndex|5
   local.get $fromIndex|5
   local.set $index
   local.get $array
   call $~lib/typedarray/Uint32Array#get:length
   local.set $len
   local.get $len
   i32.const 0
   i32.eq
   if (result i32)
    i32.const 1
   else
    local.get $index
    local.get $len
    i32.ge_s
   end
   if
    i32.const -1
    br $~lib/typedarray/INDEX_OF<~lib/typedarray/Uint32Array,u32>|inlined.0
   end
   local.get $index
   i32.const 0
   i32.lt_s
   if
    local.get $len
    local.get $index
    i32.add
    local.tee $8
    i32.const 0
    local.tee $9
    local.get $8
    local.get $9
    i32.gt_s
    select
    local.set $index
   end
   local.get $array
   i32.load $0 offset=4
   local.set $dataStart
   loop $while-continue|0
    local.get $index
    local.get $len
    i32.lt_s
    local.set $11
    local.get $11
    if
     local.get $dataStart
     local.get $index
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.get $searchElement|4
     i32.eq
     if
      local.get $index
      br $~lib/typedarray/INDEX_OF<~lib/typedarray/Uint32Array,u32>|inlined.0
     end
     local.get $index
     i32.const 1
     i32.add
     local.set $index
     br $while-continue|0
    end
   end
   i32.const -1
  end
 )
 (func $~lib/typedarray/Uint32Array#lastIndexOf (type $i32_i32_i32_=>_i32) (param $this i32) (param $searchElement i32) (param $fromIndex i32) (result i32)
  (local $array i32)
  (local $searchElement|4 i32)
  (local $fromIndex|5 i32)
  (local $index i32)
  (local $len i32)
  (local $dataStart i32)
  (local $9 i32)
  block $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Uint32Array,u32>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $searchElement
   local.set $searchElement|4
   local.get $fromIndex
   local.set $fromIndex|5
   local.get $fromIndex|5
   local.set $index
   local.get $array
   call $~lib/typedarray/Uint32Array#get:length
   local.set $len
   local.get $len
   i32.const 0
   i32.eq
   if
    i32.const -1
    br $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Uint32Array,u32>|inlined.0
   end
   local.get $index
   i32.const 0
   i32.lt_s
   if
    local.get $len
    local.get $index
    i32.add
    local.set $index
   else
    local.get $index
    local.get $len
    i32.ge_s
    if
     local.get $len
     i32.const 1
     i32.sub
     local.set $index
    end
   end
   local.get $array
   i32.load $0 offset=4
   local.set $dataStart
   loop $while-continue|0
    local.get $index
    i32.const 0
    i32.ge_s
    local.set $9
    local.get $9
    if
     local.get $dataStart
     local.get $index
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.get $searchElement|4
     i32.eq
     if
      local.get $index
      br $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Uint32Array,u32>|inlined.0
     end
     local.get $index
     i32.const 1
     i32.sub
     local.set $index
     br $while-continue|0
    end
   end
   i32.const -1
  end
 )
 (func $~lib/typedarray/Uint32Array#lastIndexOf@varargs (type $i32_i32_i32_=>_i32) (param $this i32) (param $searchElement i32) (param $fromIndex i32) (result i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   local.get $this
   call $~lib/typedarray/Uint32Array#get:length
   local.set $fromIndex
  end
  local.get $this
  local.get $searchElement
  local.get $fromIndex
  call $~lib/typedarray/Uint32Array#lastIndexOf
 )
 (func $~lib/typedarray/Int64Array#indexOf (type $i32_i64_i32_=>_i32) (param $this i32) (param $searchElement i64) (param $fromIndex i32) (result i32)
  (local $array i32)
  (local $searchElement|4 i64)
  (local $fromIndex|5 i32)
  (local $index i32)
  (local $len i32)
  (local $8 i32)
  (local $9 i32)
  (local $dataStart i32)
  (local $11 i32)
  block $~lib/typedarray/INDEX_OF<~lib/typedarray/Int64Array,i64>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $searchElement
   local.set $searchElement|4
   local.get $fromIndex
   local.set $fromIndex|5
   local.get $fromIndex|5
   local.set $index
   local.get $array
   call $~lib/typedarray/Int64Array#get:length
   local.set $len
   local.get $len
   i32.const 0
   i32.eq
   if (result i32)
    i32.const 1
   else
    local.get $index
    local.get $len
    i32.ge_s
   end
   if
    i32.const -1
    br $~lib/typedarray/INDEX_OF<~lib/typedarray/Int64Array,i64>|inlined.0
   end
   local.get $index
   i32.const 0
   i32.lt_s
   if
    local.get $len
    local.get $index
    i32.add
    local.tee $8
    i32.const 0
    local.tee $9
    local.get $8
    local.get $9
    i32.gt_s
    select
    local.set $index
   end
   local.get $array
   i32.load $0 offset=4
   local.set $dataStart
   loop $while-continue|0
    local.get $index
    local.get $len
    i32.lt_s
    local.set $11
    local.get $11
    if
     local.get $dataStart
     local.get $index
     i32.const 3
     i32.shl
     i32.add
     i64.load $0
     local.get $searchElement|4
     i64.eq
     if
      local.get $index
      br $~lib/typedarray/INDEX_OF<~lib/typedarray/Int64Array,i64>|inlined.0
     end
     local.get $index
     i32.const 1
     i32.add
     local.set $index
     br $while-continue|0
    end
   end
   i32.const -1
  end
 )
 (func $~lib/typedarray/Int64Array#lastIndexOf (type $i32_i64_i32_=>_i32) (param $this i32) (param $searchElement i64) (param $fromIndex i32) (result i32)
  (local $array i32)
  (local $searchElement|4 i64)
  (local $fromIndex|5 i32)
  (local $index i32)
  (local $len i32)
  (local $dataStart i32)
  (local $9 i32)
  block $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Int64Array,i64>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $searchElement
   local.set $searchElement|4
   local.get $fromIndex
   local.set $fromIndex|5
   local.get $fromIndex|5
   local.set $index
   local.get $array
   call $~lib/typedarray/Int64Array#get:length
   local.set $len
   local.get $len
   i32.const 0
   i32.eq
   if
    i32.const -1
    br $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Int64Array,i64>|inlined.0
   end
   local.get $index
   i32.const 0
   i32.lt_s
   if
    local.get $len
    local.get $index
    i32.add
    local.set $index
   else
    local.get $index
    local.get $len
    i32.ge_s
    if
     local.get $len
     i32.const 1
     i32.sub
     local.set $index
    end
   end
   local.get $array
   i32.load $0 offset=4
   local.set $dataStart
   loop $while-continue|0
    local.get $index
    i32.const 0
    i32.ge_s
    local.set $9
    local.get $9
    if
     local.get $dataStart
     local.get $index
     i32.const 3
     i32.shl
     i32.add
     i64.load $0
     local.get $searchElement|4
     i64.eq
     if
      local.get $index
      br $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Int64Array,i64>|inlined.0
     end
     local.get $index
     i32.const 1
     i32.sub
     local.set $index
     br $while-continue|0
    end
   end
   i32.const -1
  end
 )
 (func $~lib/typedarray/Int64Array#lastIndexOf@varargs (type $i32_i64_i32_=>_i32) (param $this i32) (param $searchElement i64) (param $fromIndex i32) (result i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   local.get $this
   call $~lib/typedarray/Int64Array#get:length
   local.set $fromIndex
  end
  local.get $this
  local.get $searchElement
  local.get $fromIndex
  call $~lib/typedarray/Int64Array#lastIndexOf
 )
 (func $~lib/typedarray/Uint64Array#indexOf (type $i32_i64_i32_=>_i32) (param $this i32) (param $searchElement i64) (param $fromIndex i32) (result i32)
  (local $array i32)
  (local $searchElement|4 i64)
  (local $fromIndex|5 i32)
  (local $index i32)
  (local $len i32)
  (local $8 i32)
  (local $9 i32)
  (local $dataStart i32)
  (local $11 i32)
  block $~lib/typedarray/INDEX_OF<~lib/typedarray/Uint64Array,u64>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $searchElement
   local.set $searchElement|4
   local.get $fromIndex
   local.set $fromIndex|5
   local.get $fromIndex|5
   local.set $index
   local.get $array
   call $~lib/typedarray/Uint64Array#get:length
   local.set $len
   local.get $len
   i32.const 0
   i32.eq
   if (result i32)
    i32.const 1
   else
    local.get $index
    local.get $len
    i32.ge_s
   end
   if
    i32.const -1
    br $~lib/typedarray/INDEX_OF<~lib/typedarray/Uint64Array,u64>|inlined.0
   end
   local.get $index
   i32.const 0
   i32.lt_s
   if
    local.get $len
    local.get $index
    i32.add
    local.tee $8
    i32.const 0
    local.tee $9
    local.get $8
    local.get $9
    i32.gt_s
    select
    local.set $index
   end
   local.get $array
   i32.load $0 offset=4
   local.set $dataStart
   loop $while-continue|0
    local.get $index
    local.get $len
    i32.lt_s
    local.set $11
    local.get $11
    if
     local.get $dataStart
     local.get $index
     i32.const 3
     i32.shl
     i32.add
     i64.load $0
     local.get $searchElement|4
     i64.eq
     if
      local.get $index
      br $~lib/typedarray/INDEX_OF<~lib/typedarray/Uint64Array,u64>|inlined.0
     end
     local.get $index
     i32.const 1
     i32.add
     local.set $index
     br $while-continue|0
    end
   end
   i32.const -1
  end
 )
 (func $~lib/typedarray/Uint64Array#lastIndexOf (type $i32_i64_i32_=>_i32) (param $this i32) (param $searchElement i64) (param $fromIndex i32) (result i32)
  (local $array i32)
  (local $searchElement|4 i64)
  (local $fromIndex|5 i32)
  (local $index i32)
  (local $len i32)
  (local $dataStart i32)
  (local $9 i32)
  block $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Uint64Array,u64>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $searchElement
   local.set $searchElement|4
   local.get $fromIndex
   local.set $fromIndex|5
   local.get $fromIndex|5
   local.set $index
   local.get $array
   call $~lib/typedarray/Uint64Array#get:length
   local.set $len
   local.get $len
   i32.const 0
   i32.eq
   if
    i32.const -1
    br $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Uint64Array,u64>|inlined.0
   end
   local.get $index
   i32.const 0
   i32.lt_s
   if
    local.get $len
    local.get $index
    i32.add
    local.set $index
   else
    local.get $index
    local.get $len
    i32.ge_s
    if
     local.get $len
     i32.const 1
     i32.sub
     local.set $index
    end
   end
   local.get $array
   i32.load $0 offset=4
   local.set $dataStart
   loop $while-continue|0
    local.get $index
    i32.const 0
    i32.ge_s
    local.set $9
    local.get $9
    if
     local.get $dataStart
     local.get $index
     i32.const 3
     i32.shl
     i32.add
     i64.load $0
     local.get $searchElement|4
     i64.eq
     if
      local.get $index
      br $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Uint64Array,u64>|inlined.0
     end
     local.get $index
     i32.const 1
     i32.sub
     local.set $index
     br $while-continue|0
    end
   end
   i32.const -1
  end
 )
 (func $~lib/typedarray/Uint64Array#lastIndexOf@varargs (type $i32_i64_i32_=>_i32) (param $this i32) (param $searchElement i64) (param $fromIndex i32) (result i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   local.get $this
   call $~lib/typedarray/Uint64Array#get:length
   local.set $fromIndex
  end
  local.get $this
  local.get $searchElement
  local.get $fromIndex
  call $~lib/typedarray/Uint64Array#lastIndexOf
 )
 (func $~lib/typedarray/Float32Array#indexOf (type $i32_f32_i32_=>_i32) (param $this i32) (param $searchElement f32) (param $fromIndex i32) (result i32)
  (local $array i32)
  (local $searchElement|4 f32)
  (local $fromIndex|5 i32)
  (local $index i32)
  (local $len i32)
  (local $8 i32)
  (local $9 i32)
  (local $dataStart i32)
  (local $11 i32)
  block $~lib/typedarray/INDEX_OF<~lib/typedarray/Float32Array,f32>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $searchElement
   local.set $searchElement|4
   local.get $fromIndex
   local.set $fromIndex|5
   local.get $fromIndex|5
   local.set $index
   local.get $array
   call $~lib/typedarray/Float32Array#get:length
   local.set $len
   local.get $len
   i32.const 0
   i32.eq
   if (result i32)
    i32.const 1
   else
    local.get $index
    local.get $len
    i32.ge_s
   end
   if
    i32.const -1
    br $~lib/typedarray/INDEX_OF<~lib/typedarray/Float32Array,f32>|inlined.0
   end
   local.get $index
   i32.const 0
   i32.lt_s
   if
    local.get $len
    local.get $index
    i32.add
    local.tee $8
    i32.const 0
    local.tee $9
    local.get $8
    local.get $9
    i32.gt_s
    select
    local.set $index
   end
   local.get $array
   i32.load $0 offset=4
   local.set $dataStart
   loop $while-continue|0
    local.get $index
    local.get $len
    i32.lt_s
    local.set $11
    local.get $11
    if
     local.get $dataStart
     local.get $index
     i32.const 2
     i32.shl
     i32.add
     f32.load $0
     local.get $searchElement|4
     f32.eq
     if
      local.get $index
      br $~lib/typedarray/INDEX_OF<~lib/typedarray/Float32Array,f32>|inlined.0
     end
     local.get $index
     i32.const 1
     i32.add
     local.set $index
     br $while-continue|0
    end
   end
   i32.const -1
  end
 )
 (func $~lib/typedarray/Float32Array#lastIndexOf (type $i32_f32_i32_=>_i32) (param $this i32) (param $searchElement f32) (param $fromIndex i32) (result i32)
  (local $array i32)
  (local $searchElement|4 f32)
  (local $fromIndex|5 i32)
  (local $index i32)
  (local $len i32)
  (local $dataStart i32)
  (local $9 i32)
  block $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Float32Array,f32>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $searchElement
   local.set $searchElement|4
   local.get $fromIndex
   local.set $fromIndex|5
   local.get $fromIndex|5
   local.set $index
   local.get $array
   call $~lib/typedarray/Float32Array#get:length
   local.set $len
   local.get $len
   i32.const 0
   i32.eq
   if
    i32.const -1
    br $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Float32Array,f32>|inlined.0
   end
   local.get $index
   i32.const 0
   i32.lt_s
   if
    local.get $len
    local.get $index
    i32.add
    local.set $index
   else
    local.get $index
    local.get $len
    i32.ge_s
    if
     local.get $len
     i32.const 1
     i32.sub
     local.set $index
    end
   end
   local.get $array
   i32.load $0 offset=4
   local.set $dataStart
   loop $while-continue|0
    local.get $index
    i32.const 0
    i32.ge_s
    local.set $9
    local.get $9
    if
     local.get $dataStart
     local.get $index
     i32.const 2
     i32.shl
     i32.add
     f32.load $0
     local.get $searchElement|4
     f32.eq
     if
      local.get $index
      br $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Float32Array,f32>|inlined.0
     end
     local.get $index
     i32.const 1
     i32.sub
     local.set $index
     br $while-continue|0
    end
   end
   i32.const -1
  end
 )
 (func $~lib/typedarray/Float32Array#lastIndexOf@varargs (type $i32_f32_i32_=>_i32) (param $this i32) (param $searchElement f32) (param $fromIndex i32) (result i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   local.get $this
   call $~lib/typedarray/Float32Array#get:length
   local.set $fromIndex
  end
  local.get $this
  local.get $searchElement
  local.get $fromIndex
  call $~lib/typedarray/Float32Array#lastIndexOf
 )
 (func $~lib/typedarray/Float64Array#indexOf (type $i32_f64_i32_=>_i32) (param $this i32) (param $searchElement f64) (param $fromIndex i32) (result i32)
  (local $array i32)
  (local $searchElement|4 f64)
  (local $fromIndex|5 i32)
  (local $index i32)
  (local $len i32)
  (local $8 i32)
  (local $9 i32)
  (local $dataStart i32)
  (local $11 i32)
  block $~lib/typedarray/INDEX_OF<~lib/typedarray/Float64Array,f64>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $searchElement
   local.set $searchElement|4
   local.get $fromIndex
   local.set $fromIndex|5
   local.get $fromIndex|5
   local.set $index
   local.get $array
   call $~lib/typedarray/Float64Array#get:length
   local.set $len
   local.get $len
   i32.const 0
   i32.eq
   if (result i32)
    i32.const 1
   else
    local.get $index
    local.get $len
    i32.ge_s
   end
   if
    i32.const -1
    br $~lib/typedarray/INDEX_OF<~lib/typedarray/Float64Array,f64>|inlined.0
   end
   local.get $index
   i32.const 0
   i32.lt_s
   if
    local.get $len
    local.get $index
    i32.add
    local.tee $8
    i32.const 0
    local.tee $9
    local.get $8
    local.get $9
    i32.gt_s
    select
    local.set $index
   end
   local.get $array
   i32.load $0 offset=4
   local.set $dataStart
   loop $while-continue|0
    local.get $index
    local.get $len
    i32.lt_s
    local.set $11
    local.get $11
    if
     local.get $dataStart
     local.get $index
     i32.const 3
     i32.shl
     i32.add
     f64.load $0
     local.get $searchElement|4
     f64.eq
     if
      local.get $index
      br $~lib/typedarray/INDEX_OF<~lib/typedarray/Float64Array,f64>|inlined.0
     end
     local.get $index
     i32.const 1
     i32.add
     local.set $index
     br $while-continue|0
    end
   end
   i32.const -1
  end
 )
 (func $~lib/typedarray/Float64Array#lastIndexOf (type $i32_f64_i32_=>_i32) (param $this i32) (param $searchElement f64) (param $fromIndex i32) (result i32)
  (local $array i32)
  (local $searchElement|4 f64)
  (local $fromIndex|5 i32)
  (local $index i32)
  (local $len i32)
  (local $dataStart i32)
  (local $9 i32)
  block $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Float64Array,f64>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $searchElement
   local.set $searchElement|4
   local.get $fromIndex
   local.set $fromIndex|5
   local.get $fromIndex|5
   local.set $index
   local.get $array
   call $~lib/typedarray/Float64Array#get:length
   local.set $len
   local.get $len
   i32.const 0
   i32.eq
   if
    i32.const -1
    br $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Float64Array,f64>|inlined.0
   end
   local.get $index
   i32.const 0
   i32.lt_s
   if
    local.get $len
    local.get $index
    i32.add
    local.set $index
   else
    local.get $index
    local.get $len
    i32.ge_s
    if
     local.get $len
     i32.const 1
     i32.sub
     local.set $index
    end
   end
   local.get $array
   i32.load $0 offset=4
   local.set $dataStart
   loop $while-continue|0
    local.get $index
    i32.const 0
    i32.ge_s
    local.set $9
    local.get $9
    if
     local.get $dataStart
     local.get $index
     i32.const 3
     i32.shl
     i32.add
     f64.load $0
     local.get $searchElement|4
     f64.eq
     if
      local.get $index
      br $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Float64Array,f64>|inlined.0
     end
     local.get $index
     i32.const 1
     i32.sub
     local.set $index
     br $while-continue|0
    end
   end
   i32.const -1
  end
 )
 (func $~lib/typedarray/Float64Array#lastIndexOf@varargs (type $i32_f64_i32_=>_i32) (param $this i32) (param $searchElement f64) (param $fromIndex i32) (result i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   local.get $this
   call $~lib/typedarray/Float64Array#get:length
   local.set $fromIndex
  end
  local.get $this
  local.get $searchElement
  local.get $fromIndex
  call $~lib/typedarray/Float64Array#lastIndexOf
 )
 (func $~lib/typedarray/Float64Array#includes (type $i32_f64_i32_=>_i32) (param $this i32) (param $searchElement f64) (param $fromIndex i32) (result i32)
  (local $array i32)
  (local $searchElement|4 f64)
  (local $fromIndex|5 i32)
  (local $index i32)
  (local $len i32)
  (local $8 i32)
  (local $9 i32)
  (local $dataStart i32)
  (local $11 i32)
  (local $elem f64)
  block $~lib/typedarray/INCLUDES<~lib/typedarray/Float64Array,f64>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $searchElement
   local.set $searchElement|4
   local.get $fromIndex
   local.set $fromIndex|5
   i32.const 1
   drop
   local.get $fromIndex|5
   local.set $index
   local.get $array
   call $~lib/typedarray/Float64Array#get:length
   local.set $len
   local.get $len
   i32.const 0
   i32.eq
   if (result i32)
    i32.const 1
   else
    local.get $index
    local.get $len
    i32.ge_s
   end
   if
    i32.const 0
    br $~lib/typedarray/INCLUDES<~lib/typedarray/Float64Array,f64>|inlined.0
   end
   local.get $index
   i32.const 0
   i32.lt_s
   if
    local.get $len
    local.get $index
    i32.add
    local.tee $8
    i32.const 0
    local.tee $9
    local.get $8
    local.get $9
    i32.gt_s
    select
    local.set $index
   end
   local.get $array
   i32.load $0 offset=4
   local.set $dataStart
   loop $while-continue|0
    local.get $index
    local.get $len
    i32.lt_s
    local.set $11
    local.get $11
    if
     local.get $dataStart
     local.get $index
     i32.const 3
     i32.shl
     i32.add
     f64.load $0
     local.set $elem
     local.get $elem
     local.get $searchElement|4
     f64.eq
     if (result i32)
      i32.const 1
     else
      local.get $elem
      local.get $elem
      f64.ne
      local.get $searchElement|4
      local.get $searchElement|4
      f64.ne
      i32.and
     end
     if
      i32.const 1
      br $~lib/typedarray/INCLUDES<~lib/typedarray/Float64Array,f64>|inlined.0
     end
     local.get $index
     i32.const 1
     i32.add
     local.set $index
     br $while-continue|0
    end
   end
   i32.const 0
   br $~lib/typedarray/INCLUDES<~lib/typedarray/Float64Array,f64>|inlined.0
  end
 )
 (func $~lib/typedarray/Float32Array#includes (type $i32_f32_i32_=>_i32) (param $this i32) (param $searchElement f32) (param $fromIndex i32) (result i32)
  (local $array i32)
  (local $searchElement|4 f32)
  (local $fromIndex|5 i32)
  (local $index i32)
  (local $len i32)
  (local $8 i32)
  (local $9 i32)
  (local $dataStart i32)
  (local $11 i32)
  (local $elem f32)
  block $~lib/typedarray/INCLUDES<~lib/typedarray/Float32Array,f32>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $searchElement
   local.set $searchElement|4
   local.get $fromIndex
   local.set $fromIndex|5
   i32.const 1
   drop
   local.get $fromIndex|5
   local.set $index
   local.get $array
   call $~lib/typedarray/Float32Array#get:length
   local.set $len
   local.get $len
   i32.const 0
   i32.eq
   if (result i32)
    i32.const 1
   else
    local.get $index
    local.get $len
    i32.ge_s
   end
   if
    i32.const 0
    br $~lib/typedarray/INCLUDES<~lib/typedarray/Float32Array,f32>|inlined.0
   end
   local.get $index
   i32.const 0
   i32.lt_s
   if
    local.get $len
    local.get $index
    i32.add
    local.tee $8
    i32.const 0
    local.tee $9
    local.get $8
    local.get $9
    i32.gt_s
    select
    local.set $index
   end
   local.get $array
   i32.load $0 offset=4
   local.set $dataStart
   loop $while-continue|0
    local.get $index
    local.get $len
    i32.lt_s
    local.set $11
    local.get $11
    if
     local.get $dataStart
     local.get $index
     i32.const 2
     i32.shl
     i32.add
     f32.load $0
     local.set $elem
     local.get $elem
     local.get $searchElement|4
     f32.eq
     if (result i32)
      i32.const 1
     else
      local.get $elem
      local.get $elem
      f32.ne
      local.get $searchElement|4
      local.get $searchElement|4
      f32.ne
      i32.and
     end
     if
      i32.const 1
      br $~lib/typedarray/INCLUDES<~lib/typedarray/Float32Array,f32>|inlined.0
     end
     local.get $index
     i32.const 1
     i32.add
     local.set $index
     br $while-continue|0
    end
   end
   i32.const 0
   br $~lib/typedarray/INCLUDES<~lib/typedarray/Float32Array,f32>|inlined.0
  end
 )
 (func $~lib/arraybuffer/ArrayBuffer#get:byteLength (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.const 20
  i32.sub
  i32.load $0 offset=16
 )
 (func $~lib/typedarray/Uint8Array.wrap@varargs (type $i32_i32_i32_=>_i32) (param $buffer i32) (param $byteOffset i32) (param $length i32) (result i32)
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~argumentsLength
      i32.const 1
      i32.sub
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    i32.const 0
    local.set $byteOffset
   end
   i32.const -1
   local.set $length
  end
  local.get $buffer
  local.get $byteOffset
  local.get $length
  call $~lib/typedarray/Uint8Array.wrap
 )
 (func $~lib/typedarray/Int8Array.wrap@varargs (type $i32_i32_i32_=>_i32) (param $buffer i32) (param $byteOffset i32) (param $length i32) (result i32)
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~argumentsLength
      i32.const 1
      i32.sub
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    i32.const 0
    local.set $byteOffset
   end
   i32.const -1
   local.set $length
  end
  local.get $buffer
  local.get $byteOffset
  local.get $length
  call $~lib/typedarray/Int8Array.wrap
 )
 (func $~lib/typedarray/Uint8ClampedArray.wrap@varargs (type $i32_i32_i32_=>_i32) (param $buffer i32) (param $byteOffset i32) (param $length i32) (result i32)
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~argumentsLength
      i32.const 1
      i32.sub
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    i32.const 0
    local.set $byteOffset
   end
   i32.const -1
   local.set $length
  end
  local.get $buffer
  local.get $byteOffset
  local.get $length
  call $~lib/typedarray/Uint8ClampedArray.wrap
 )
 (func $~lib/typedarray/Int16Array.wrap@varargs (type $i32_i32_i32_=>_i32) (param $buffer i32) (param $byteOffset i32) (param $length i32) (result i32)
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~argumentsLength
      i32.const 1
      i32.sub
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    i32.const 0
    local.set $byteOffset
   end
   i32.const -1
   local.set $length
  end
  local.get $buffer
  local.get $byteOffset
  local.get $length
  call $~lib/typedarray/Int16Array.wrap
 )
 (func $~lib/typedarray/Uint16Array.wrap@varargs (type $i32_i32_i32_=>_i32) (param $buffer i32) (param $byteOffset i32) (param $length i32) (result i32)
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~argumentsLength
      i32.const 1
      i32.sub
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    i32.const 0
    local.set $byteOffset
   end
   i32.const -1
   local.set $length
  end
  local.get $buffer
  local.get $byteOffset
  local.get $length
  call $~lib/typedarray/Uint16Array.wrap
 )
 (func $~lib/typedarray/Int32Array.wrap@varargs (type $i32_i32_i32_=>_i32) (param $buffer i32) (param $byteOffset i32) (param $length i32) (result i32)
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~argumentsLength
      i32.const 1
      i32.sub
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    i32.const 0
    local.set $byteOffset
   end
   i32.const -1
   local.set $length
  end
  local.get $buffer
  local.get $byteOffset
  local.get $length
  call $~lib/typedarray/Int32Array.wrap
 )
 (func $~lib/typedarray/Uint32Array.wrap@varargs (type $i32_i32_i32_=>_i32) (param $buffer i32) (param $byteOffset i32) (param $length i32) (result i32)
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~argumentsLength
      i32.const 1
      i32.sub
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    i32.const 0
    local.set $byteOffset
   end
   i32.const -1
   local.set $length
  end
  local.get $buffer
  local.get $byteOffset
  local.get $length
  call $~lib/typedarray/Uint32Array.wrap
 )
 (func $~lib/typedarray/Int64Array.wrap@varargs (type $i32_i32_i32_=>_i32) (param $buffer i32) (param $byteOffset i32) (param $length i32) (result i32)
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~argumentsLength
      i32.const 1
      i32.sub
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    i32.const 0
    local.set $byteOffset
   end
   i32.const -1
   local.set $length
  end
  local.get $buffer
  local.get $byteOffset
  local.get $length
  call $~lib/typedarray/Int64Array.wrap
 )
 (func $~lib/typedarray/Uint64Array.wrap@varargs (type $i32_i32_i32_=>_i32) (param $buffer i32) (param $byteOffset i32) (param $length i32) (result i32)
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~argumentsLength
      i32.const 1
      i32.sub
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    i32.const 0
    local.set $byteOffset
   end
   i32.const -1
   local.set $length
  end
  local.get $buffer
  local.get $byteOffset
  local.get $length
  call $~lib/typedarray/Uint64Array.wrap
 )
 (func $~lib/typedarray/Float32Array.wrap@varargs (type $i32_i32_i32_=>_i32) (param $buffer i32) (param $byteOffset i32) (param $length i32) (result i32)
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~argumentsLength
      i32.const 1
      i32.sub
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    i32.const 0
    local.set $byteOffset
   end
   i32.const -1
   local.set $length
  end
  local.get $buffer
  local.get $byteOffset
  local.get $length
  call $~lib/typedarray/Float32Array.wrap
 )
 (func $~lib/typedarray/Float64Array.wrap@varargs (type $i32_i32_i32_=>_i32) (param $buffer i32) (param $byteOffset i32) (param $length i32) (result i32)
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~argumentsLength
      i32.const 1
      i32.sub
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    i32.const 0
    local.set $byteOffset
   end
   i32.const -1
   local.set $length
  end
  local.get $buffer
  local.get $byteOffset
  local.get $length
  call $~lib/typedarray/Float64Array.wrap
 )
 (func $~lib/typedarray/Int8Array#set<~lib/array/Array<i32>> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/array/Array<i32>#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Int8Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 0
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 0
  i32.const 2
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $ptr
    local.get $value
    i32.store8 $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Int8Array#__uget (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.add
  i32.load8_s $0
 )
 (func $~lib/array/Array<i8>#__uget (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 0
  i32.shl
  i32.add
  i32.load8_s $0
 )
 (func $~lib/array/Array<f32>#get:length (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/typedarray/Int8Array#set<~lib/array/Array<f32>> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value f32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/array/Array<f32>#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Int8Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 0
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 1
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    f32.load $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    i32.eqz
    drop
    local.get $ptr
    local.get $value
    local.get $value
    f32.sub
    f32.const 0
    f32.eq
    if (result i32)
     local.get $value
     i32.trunc_sat_f32_s
    else
     i32.const 0
    end
    i32.store8 $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Int8Array#set<~lib/typedarray/Int64Array> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i64)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/typedarray/Int64Array#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Int8Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 0
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 0
  i32.const 3
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $ptr
    local.get $value
    i32.wrap_i64
    i32.store8 $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/array/Array<f64>#get:length (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/typedarray/Int8Array#set<~lib/array/Array<f64>> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value f64)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/array/Array<f64>#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Int8Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 0
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 1
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    f64.load $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    i32.eqz
    drop
    local.get $ptr
    local.get $value
    local.get $value
    f64.sub
    f64.const 0
    f64.eq
    if (result i32)
     local.get $value
     i32.trunc_sat_f64_s
    else
     i32.const 0
    end
    i32.store8 $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Int8Array#set<~lib/typedarray/Uint8Array> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/typedarray/Uint8Array#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Int8Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 0
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 0
  i32.eqz
  drop
  local.get $targetStart
  local.get $sourceStart
  local.get $sourceLen
  i32.const 0
  i32.shl
  memory.copy $0 $0
 )
 (func $~lib/typedarray/Int8Array#set<~lib/typedarray/Int16Array> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/typedarray/Int16Array#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Int8Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 0
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 0
  i32.const 1
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 1
    i32.shl
    i32.add
    i32.load16_s $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $ptr
    local.get $value
    i32.store8 $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Int8Array#set<~lib/array/Array<i8>> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/array/Array<i8>#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Int8Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 0
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 0
  i32.eqz
  drop
  local.get $targetStart
  local.get $sourceStart
  local.get $sourceLen
  i32.const 0
  i32.shl
  memory.copy $0 $0
 )
 (func $~lib/typedarray/Uint8Array#set<~lib/array/Array<i32>> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/array/Array<i32>#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Uint8Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 0
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 0
  i32.const 2
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $ptr
    local.get $value
    i32.store8 $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/array/Array<u8>#get:length (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/typedarray/Uint8Array#__uget (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.add
  i32.load8_u $0
 )
 (func $~lib/array/Array<u8>#__uget (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 0
  i32.shl
  i32.add
  i32.load8_u $0
 )
 (func $~lib/typedarray/Uint8Array#set<~lib/array/Array<f32>> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value f32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/array/Array<f32>#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Uint8Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 0
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 1
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    f32.load $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    i32.eqz
    drop
    local.get $ptr
    local.get $value
    local.get $value
    f32.sub
    f32.const 0
    f32.eq
    if (result i32)
     local.get $value
     i32.trunc_sat_f32_u
    else
     i32.const 0
    end
    i32.store8 $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint8Array#set<~lib/typedarray/Int64Array> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i64)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/typedarray/Int64Array#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Uint8Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 0
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 0
  i32.const 3
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $ptr
    local.get $value
    i32.wrap_i64
    i32.store8 $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint8Array#set<~lib/array/Array<f64>> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value f64)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/array/Array<f64>#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Uint8Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 0
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 1
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    f64.load $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    i32.eqz
    drop
    local.get $ptr
    local.get $value
    local.get $value
    f64.sub
    f64.const 0
    f64.eq
    if (result i32)
     local.get $value
     i32.trunc_sat_f64_u
    else
     i32.const 0
    end
    i32.store8 $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint8Array#set<~lib/typedarray/Uint8Array> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/typedarray/Uint8Array#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Uint8Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 0
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 0
  i32.eqz
  drop
  local.get $targetStart
  local.get $sourceStart
  local.get $sourceLen
  i32.const 0
  i32.shl
  memory.copy $0 $0
 )
 (func $~lib/typedarray/Uint8Array#set<~lib/typedarray/Int16Array> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/typedarray/Int16Array#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Uint8Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 0
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 0
  i32.const 1
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 1
    i32.shl
    i32.add
    i32.load16_s $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $ptr
    local.get $value
    i32.store8 $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint8Array#set<~lib/array/Array<i8>> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/array/Array<i8>#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Uint8Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 0
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 0
  i32.eqz
  drop
  local.get $targetStart
  local.get $sourceStart
  local.get $sourceLen
  i32.const 0
  i32.shl
  memory.copy $0 $0
 )
 (func $~lib/typedarray/Uint8ClampedArray#set<~lib/array/Array<i32>> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/array/Array<i32>#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Uint8ClampedArray#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 0
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 0
  i32.const 2
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $value
    i32.const 1
    drop
    i32.const 0
    drop
    i32.const 1
    i32.eqz
    drop
    i32.const 1
    i32.const 4
    i32.le_u
    drop
    local.get $ptr
    local.get $value
    i32.const 31
    i32.shr_s
    i32.const -1
    i32.xor
    i32.const 255
    local.get $value
    i32.sub
    i32.const 31
    i32.shr_s
    local.get $value
    i32.or
    i32.and
    i32.store8 $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint8ClampedArray#__uget (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.add
  i32.load8_u $0
 )
 (func $~lib/typedarray/Uint8ClampedArray#set<~lib/array/Array<f32>> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value f32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/array/Array<f32>#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Uint8ClampedArray#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 0
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 1
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    f32.load $0
    local.set $value
    i32.const 1
    drop
    i32.const 1
    drop
    local.get $ptr
    local.get $value
    local.get $value
    f32.sub
    f32.const 0
    f32.eq
    if (result i32)
     f32.const 0
     f32.const 255
     local.get $value
     f32.min
     f32.max
     i32.trunc_sat_f32_u
    else
     i32.const 0
    end
    i32.store8 $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint8ClampedArray#set<~lib/typedarray/Int64Array> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i64)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/typedarray/Int64Array#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Uint8ClampedArray#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 0
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 0
  i32.const 3
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    local.set $value
    i32.const 1
    drop
    i32.const 0
    drop
    i32.const 1
    i32.eqz
    drop
    i32.const 1
    i32.const 4
    i32.le_u
    drop
    local.get $ptr
    local.get $value
    i32.wrap_i64
    i32.const 31
    i32.shr_s
    i32.const -1
    i32.xor
    i64.extend_i32_s
    i32.const 255
    local.get $value
    i32.wrap_i64
    i32.sub
    i32.const 31
    i32.shr_s
    i64.extend_i32_s
    local.get $value
    i64.or
    i64.and
    i64.store8 $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint8ClampedArray#set<~lib/array/Array<f64>> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value f64)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/array/Array<f64>#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Uint8ClampedArray#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 0
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 1
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    f64.load $0
    local.set $value
    i32.const 1
    drop
    i32.const 1
    drop
    local.get $ptr
    local.get $value
    local.get $value
    f64.sub
    f64.const 0
    f64.eq
    if (result i32)
     f64.const 0
     f64.const 255
     local.get $value
     f64.min
     f64.max
     i32.trunc_sat_f64_u
    else
     i32.const 0
    end
    i32.store8 $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint8ClampedArray#set<~lib/typedarray/Uint8Array> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/typedarray/Uint8Array#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Uint8ClampedArray#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 0
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 0
  i32.eqz
  drop
  local.get $targetStart
  local.get $sourceStart
  local.get $sourceLen
  i32.const 0
  i32.shl
  memory.copy $0 $0
 )
 (func $~lib/typedarray/Uint8ClampedArray#set<~lib/typedarray/Int16Array> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/typedarray/Int16Array#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Uint8ClampedArray#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 0
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 0
  i32.const 1
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 1
    i32.shl
    i32.add
    i32.load16_s $0
    local.set $value
    i32.const 1
    drop
    i32.const 0
    drop
    i32.const 1
    i32.eqz
    drop
    i32.const 1
    i32.const 4
    i32.le_u
    drop
    local.get $ptr
    local.get $value
    i32.const 31
    i32.shr_s
    i32.const -1
    i32.xor
    i32.const 255
    local.get $value
    i32.sub
    i32.const 31
    i32.shr_s
    local.get $value
    i32.or
    i32.and
    i32.store8 $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint8ClampedArray#set<~lib/array/Array<i8>> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/array/Array<i8>#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Uint8ClampedArray#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 0
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 1
  i32.eqz
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    i32.load8_s $0
    local.set $value
    i32.const 1
    drop
    i32.const 0
    drop
    i32.const 1
    i32.eqz
    drop
    i32.const 1
    i32.const 4
    i32.le_u
    drop
    local.get $ptr
    local.get $value
    i32.const 31
    i32.shr_s
    i32.const -1
    i32.xor
    i32.const 255
    local.get $value
    i32.sub
    i32.const 31
    i32.shr_s
    local.get $value
    i32.or
    i32.and
    i32.store8 $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Int16Array#set<~lib/array/Array<i32>> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/array/Array<i32>#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Int16Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 1
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 1
  i32.const 2
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 1
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $ptr
    local.get $value
    i32.store16 $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/array/Array<i16>#get:length (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/typedarray/Int16Array#__uget (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 1
  i32.shl
  i32.add
  i32.load16_s $0
 )
 (func $~lib/array/Array<i16>#__uget (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 1
  i32.shl
  i32.add
  i32.load16_s $0
 )
 (func $~lib/typedarray/Int16Array#set<~lib/array/Array<f32>> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value f32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/array/Array<f32>#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Int16Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 1
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 1
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 1
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    f32.load $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    i32.eqz
    drop
    local.get $ptr
    local.get $value
    local.get $value
    f32.sub
    f32.const 0
    f32.eq
    if (result i32)
     local.get $value
     i32.trunc_sat_f32_s
    else
     i32.const 0
    end
    i32.store16 $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Int16Array#set<~lib/typedarray/Int64Array> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i64)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/typedarray/Int64Array#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Int16Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 1
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 1
  i32.const 3
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 1
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $ptr
    local.get $value
    i32.wrap_i64
    i32.store16 $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Int16Array#set<~lib/array/Array<f64>> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value f64)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/array/Array<f64>#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Int16Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 1
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 1
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 1
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    f64.load $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    i32.eqz
    drop
    local.get $ptr
    local.get $value
    local.get $value
    f64.sub
    f64.const 0
    f64.eq
    if (result i32)
     local.get $value
     i32.trunc_sat_f64_s
    else
     i32.const 0
    end
    i32.store16 $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Int16Array#set<~lib/typedarray/Uint8Array> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/typedarray/Uint8Array#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Int16Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 1
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 1
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 1
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    i32.load8_u $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $ptr
    local.get $value
    i32.store16 $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Int16Array#set<~lib/typedarray/Int16Array> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/typedarray/Int16Array#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Int16Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 1
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 0
  i32.eqz
  drop
  local.get $targetStart
  local.get $sourceStart
  local.get $sourceLen
  i32.const 1
  i32.shl
  memory.copy $0 $0
 )
 (func $~lib/typedarray/Int16Array#set<~lib/array/Array<i8>> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/array/Array<i8>#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Int16Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 1
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 1
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 1
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    i32.load8_s $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $ptr
    local.get $value
    i32.store16 $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint16Array#set<~lib/array/Array<i32>> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/array/Array<i32>#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Uint16Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 1
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 1
  i32.const 2
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 1
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $ptr
    local.get $value
    i32.store16 $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/array/Array<u16>#get:length (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/typedarray/Uint16Array#__uget (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 1
  i32.shl
  i32.add
  i32.load16_u $0
 )
 (func $~lib/array/Array<u16>#__uget (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 1
  i32.shl
  i32.add
  i32.load16_u $0
 )
 (func $~lib/typedarray/Uint16Array#set<~lib/array/Array<f32>> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value f32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/array/Array<f32>#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Uint16Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 1
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 1
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 1
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    f32.load $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    i32.eqz
    drop
    local.get $ptr
    local.get $value
    local.get $value
    f32.sub
    f32.const 0
    f32.eq
    if (result i32)
     local.get $value
     i32.trunc_sat_f32_u
    else
     i32.const 0
    end
    i32.store16 $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint16Array#set<~lib/typedarray/Int64Array> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i64)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/typedarray/Int64Array#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Uint16Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 1
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 1
  i32.const 3
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 1
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $ptr
    local.get $value
    i32.wrap_i64
    i32.store16 $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint16Array#set<~lib/array/Array<f64>> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value f64)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/array/Array<f64>#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Uint16Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 1
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 1
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 1
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    f64.load $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    i32.eqz
    drop
    local.get $ptr
    local.get $value
    local.get $value
    f64.sub
    f64.const 0
    f64.eq
    if (result i32)
     local.get $value
     i32.trunc_sat_f64_u
    else
     i32.const 0
    end
    i32.store16 $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint16Array#set<~lib/typedarray/Uint8Array> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/typedarray/Uint8Array#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Uint16Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 1
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 1
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 1
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    i32.load8_u $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $ptr
    local.get $value
    i32.store16 $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint16Array#set<~lib/typedarray/Int16Array> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/typedarray/Int16Array#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Uint16Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 1
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 0
  i32.eqz
  drop
  local.get $targetStart
  local.get $sourceStart
  local.get $sourceLen
  i32.const 1
  i32.shl
  memory.copy $0 $0
 )
 (func $~lib/typedarray/Uint16Array#set<~lib/array/Array<i8>> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/array/Array<i8>#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Uint16Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 1
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 1
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 1
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    i32.load8_s $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $ptr
    local.get $value
    i32.store16 $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Int32Array#set<~lib/array/Array<i32>> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/array/Array<i32>#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Int32Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 2
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 0
  i32.eqz
  drop
  local.get $targetStart
  local.get $sourceStart
  local.get $sourceLen
  i32.const 2
  i32.shl
  memory.copy $0 $0
 )
 (func $~lib/typedarray/Int32Array#__uget (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
 )
 (func $~lib/array/Array<i32>#__uget (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
 )
 (func $~lib/typedarray/Int32Array#set<~lib/array/Array<f32>> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value f32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/array/Array<f32>#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Int32Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 2
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 1
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    f32.load $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    i32.eqz
    drop
    local.get $ptr
    local.get $value
    local.get $value
    f32.sub
    f32.const 0
    f32.eq
    if (result i32)
     local.get $value
     i32.trunc_sat_f32_s
    else
     i32.const 0
    end
    i32.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Int32Array#set<~lib/typedarray/Int64Array> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i64)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/typedarray/Int64Array#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Int32Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 2
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 2
  i32.const 3
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $ptr
    local.get $value
    i32.wrap_i64
    i32.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Int32Array#set<~lib/array/Array<f64>> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value f64)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/array/Array<f64>#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Int32Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 2
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 1
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    f64.load $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    i32.eqz
    drop
    local.get $ptr
    local.get $value
    local.get $value
    f64.sub
    f64.const 0
    f64.eq
    if (result i32)
     local.get $value
     i32.trunc_sat_f64_s
    else
     i32.const 0
    end
    i32.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Int32Array#set<~lib/typedarray/Uint8Array> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/typedarray/Uint8Array#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Int32Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 2
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 2
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    i32.load8_u $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $ptr
    local.get $value
    i32.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Int32Array#set<~lib/typedarray/Int16Array> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/typedarray/Int16Array#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Int32Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 2
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 2
  i32.const 1
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 1
    i32.shl
    i32.add
    i32.load16_s $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $ptr
    local.get $value
    i32.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Int32Array#set<~lib/array/Array<i8>> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/array/Array<i8>#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Int32Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 2
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 2
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    i32.load8_s $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $ptr
    local.get $value
    i32.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint32Array#set<~lib/array/Array<i32>> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/array/Array<i32>#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Uint32Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 2
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 0
  i32.eqz
  drop
  local.get $targetStart
  local.get $sourceStart
  local.get $sourceLen
  i32.const 2
  i32.shl
  memory.copy $0 $0
 )
 (func $~lib/array/Array<u32>#get:length (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/typedarray/Uint32Array#__uget (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
 )
 (func $~lib/array/Array<u32>#__uget (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
 )
 (func $~lib/typedarray/Uint32Array#set<~lib/array/Array<f32>> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value f32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/array/Array<f32>#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Uint32Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 2
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 1
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    f32.load $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    i32.eqz
    drop
    local.get $ptr
    local.get $value
    local.get $value
    f32.sub
    f32.const 0
    f32.eq
    if (result i32)
     local.get $value
     i32.trunc_sat_f32_u
    else
     i32.const 0
    end
    i32.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint32Array#set<~lib/typedarray/Int64Array> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i64)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/typedarray/Int64Array#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Uint32Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 2
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 2
  i32.const 3
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $ptr
    local.get $value
    i32.wrap_i64
    i32.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint32Array#set<~lib/array/Array<f64>> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value f64)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/array/Array<f64>#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Uint32Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 2
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 1
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    f64.load $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    i32.eqz
    drop
    local.get $ptr
    local.get $value
    local.get $value
    f64.sub
    f64.const 0
    f64.eq
    if (result i32)
     local.get $value
     i32.trunc_sat_f64_u
    else
     i32.const 0
    end
    i32.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint32Array#set<~lib/typedarray/Uint8Array> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/typedarray/Uint8Array#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Uint32Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 2
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 2
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    i32.load8_u $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $ptr
    local.get $value
    i32.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint32Array#set<~lib/typedarray/Int16Array> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/typedarray/Int16Array#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Uint32Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 2
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 2
  i32.const 1
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 1
    i32.shl
    i32.add
    i32.load16_s $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $ptr
    local.get $value
    i32.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint32Array#set<~lib/array/Array<i8>> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/array/Array<i8>#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Uint32Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 2
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 2
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    i32.load8_s $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $ptr
    local.get $value
    i32.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Int64Array#set<~lib/array/Array<i32>> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/array/Array<i32>#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Int64Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 3
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 3
  i32.const 2
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $ptr
    local.get $value
    i64.extend_i32_s
    i64.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/array/Array<i64>#get:length (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/typedarray/Int64Array#__uget (type $i32_i32_=>_i64) (param $this i32) (param $index i32) (result i64)
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 3
  i32.shl
  i32.add
  i64.load $0
 )
 (func $~lib/array/Array<i64>#__uget (type $i32_i32_=>_i64) (param $this i32) (param $index i32) (result i64)
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 3
  i32.shl
  i32.add
  i64.load $0
 )
 (func $~lib/typedarray/Int64Array#set<~lib/array/Array<f32>> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value f32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/array/Array<f32>#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Int64Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 3
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 1
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    f32.load $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    i32.eqz
    drop
    local.get $ptr
    local.get $value
    local.get $value
    f32.sub
    f32.const 0
    f32.eq
    if (result i64)
     local.get $value
     i64.trunc_sat_f32_s
    else
     i64.const 0
    end
    i64.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Int64Array#set<~lib/typedarray/Int64Array> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/typedarray/Int64Array#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Int64Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 3
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 0
  i32.eqz
  drop
  local.get $targetStart
  local.get $sourceStart
  local.get $sourceLen
  i32.const 3
  i32.shl
  memory.copy $0 $0
 )
 (func $~lib/typedarray/Int64Array#set<~lib/array/Array<f64>> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value f64)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/array/Array<f64>#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Int64Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 3
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 1
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    f64.load $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    i32.eqz
    drop
    local.get $ptr
    local.get $value
    local.get $value
    f64.sub
    f64.const 0
    f64.eq
    if (result i64)
     local.get $value
     i64.trunc_sat_f64_s
    else
     i64.const 0
    end
    i64.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Int64Array#set<~lib/typedarray/Uint8Array> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/typedarray/Uint8Array#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Int64Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 3
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 3
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    i32.load8_u $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $ptr
    local.get $value
    i64.extend_i32_u
    i64.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Int64Array#set<~lib/typedarray/Int16Array> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/typedarray/Int16Array#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Int64Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 3
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 3
  i32.const 1
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 1
    i32.shl
    i32.add
    i32.load16_s $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $ptr
    local.get $value
    i64.extend_i32_s
    i64.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Int64Array#set<~lib/array/Array<i8>> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/array/Array<i8>#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Int64Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 3
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 3
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    i32.load8_s $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $ptr
    local.get $value
    i64.extend_i32_s
    i64.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint64Array#set<~lib/array/Array<i32>> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/array/Array<i32>#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Uint64Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 3
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 3
  i32.const 2
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $ptr
    local.get $value
    i64.extend_i32_s
    i64.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/array/Array<u64>#get:length (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/typedarray/Uint64Array#__uget (type $i32_i32_=>_i64) (param $this i32) (param $index i32) (result i64)
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 3
  i32.shl
  i32.add
  i64.load $0
 )
 (func $~lib/array/Array<u64>#__uget (type $i32_i32_=>_i64) (param $this i32) (param $index i32) (result i64)
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 3
  i32.shl
  i32.add
  i64.load $0
 )
 (func $~lib/typedarray/Uint64Array#set<~lib/array/Array<f32>> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value f32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/array/Array<f32>#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Uint64Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 3
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 1
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    f32.load $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    i32.eqz
    drop
    local.get $ptr
    local.get $value
    local.get $value
    f32.sub
    f32.const 0
    f32.eq
    if (result i64)
     local.get $value
     i64.trunc_sat_f32_u
    else
     i64.const 0
    end
    i64.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint64Array#set<~lib/typedarray/Int64Array> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/typedarray/Int64Array#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Uint64Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 3
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 0
  i32.eqz
  drop
  local.get $targetStart
  local.get $sourceStart
  local.get $sourceLen
  i32.const 3
  i32.shl
  memory.copy $0 $0
 )
 (func $~lib/typedarray/Uint64Array#set<~lib/array/Array<f64>> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value f64)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/array/Array<f64>#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Uint64Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 3
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 1
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    f64.load $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    i32.eqz
    drop
    local.get $ptr
    local.get $value
    local.get $value
    f64.sub
    f64.const 0
    f64.eq
    if (result i64)
     local.get $value
     i64.trunc_sat_f64_u
    else
     i64.const 0
    end
    i64.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint64Array#set<~lib/typedarray/Uint8Array> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/typedarray/Uint8Array#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Uint64Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 3
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 3
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    i32.load8_u $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $ptr
    local.get $value
    i64.extend_i32_u
    i64.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint64Array#set<~lib/typedarray/Int16Array> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/typedarray/Int16Array#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Uint64Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 3
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 3
  i32.const 1
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 1
    i32.shl
    i32.add
    i32.load16_s $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $ptr
    local.get $value
    i64.extend_i32_s
    i64.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint64Array#set<~lib/array/Array<i8>> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/array/Array<i8>#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Uint64Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 3
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 3
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    i32.load8_s $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $ptr
    local.get $value
    i64.extend_i32_s
    i64.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Float32Array#set<~lib/array/Array<i32>> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/array/Array<i32>#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Float32Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 2
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 0
  i32.const 1
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $ptr
    local.get $value
    f32.convert_i32_s
    f32.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Float32Array#__uget (type $i32_i32_=>_f32) (param $this i32) (param $index i32) (result f32)
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  f32.load $0
 )
 (func $~lib/array/Array<f32>#__uget (type $i32_i32_=>_f32) (param $this i32) (param $index i32) (result f32)
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  f32.load $0
 )
 (func $~lib/typedarray/Float32Array#set<~lib/array/Array<f32>> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/array/Array<f32>#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Float32Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 2
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 0
  i32.eqz
  drop
  local.get $targetStart
  local.get $sourceStart
  local.get $sourceLen
  i32.const 2
  i32.shl
  memory.copy $0 $0
 )
 (func $~lib/typedarray/Float32Array#set<~lib/typedarray/Int64Array> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i64)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/typedarray/Int64Array#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Float32Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 2
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 0
  i32.const 1
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $ptr
    local.get $value
    f32.convert_i64_s
    f32.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Float32Array#set<~lib/typedarray/Uint8Array> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/typedarray/Uint8Array#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Float32Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 2
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 0
  i32.const 1
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    i32.load8_u $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $ptr
    local.get $value
    f32.convert_i32_u
    f32.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Float32Array#set<~lib/typedarray/Int16Array> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/typedarray/Int16Array#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Float32Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 2
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 0
  i32.const 1
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 1
    i32.shl
    i32.add
    i32.load16_s $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $ptr
    local.get $value
    f32.convert_i32_s
    f32.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Float32Array#set<~lib/array/Array<i8>> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/array/Array<i8>#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Float32Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 2
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 0
  i32.const 1
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    i32.load8_s $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $ptr
    local.get $value
    f32.convert_i32_s
    f32.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Float64Array#set<~lib/array/Array<i32>> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/array/Array<i32>#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Float64Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 3
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 0
  i32.const 1
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $ptr
    local.get $value
    f64.convert_i32_s
    f64.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Float64Array#__uget (type $i32_i32_=>_f64) (param $this i32) (param $index i32) (result f64)
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 3
  i32.shl
  i32.add
  f64.load $0
 )
 (func $~lib/array/Array<f64>#__uget (type $i32_i32_=>_f64) (param $this i32) (param $index i32) (result f64)
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 3
  i32.shl
  i32.add
  f64.load $0
 )
 (func $~lib/typedarray/Float64Array#set<~lib/array/Array<f32>> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value f32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/array/Array<f32>#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Float64Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 3
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 3
  i32.const 2
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    f32.load $0
    local.set $value
    i32.const 0
    drop
    i32.const 1
    i32.eqz
    drop
    local.get $ptr
    local.get $value
    f64.promote_f32
    f64.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Float64Array#set<~lib/typedarray/Int64Array> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i64)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/typedarray/Int64Array#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Float64Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 3
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 0
  i32.const 1
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $ptr
    local.get $value
    f64.convert_i64_s
    f64.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Float64Array#set<~lib/typedarray/Uint8Array> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/typedarray/Uint8Array#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Float64Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 3
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 0
  i32.const 1
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    i32.load8_u $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $ptr
    local.get $value
    f64.convert_i32_u
    f64.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Float64Array#set<~lib/typedarray/Int16Array> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/typedarray/Int16Array#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Float64Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 3
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 0
  i32.const 1
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 1
    i32.shl
    i32.add
    i32.load16_s $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $ptr
    local.get $value
    f64.convert_i32_s
    f64.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Float64Array#set<~lib/array/Array<i8>> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/array/Array<i8>#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Float64Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 3
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 0
  i32.const 1
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    i32.load8_s $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $ptr
    local.get $value
    f64.convert_i32_s
    f64.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint8ClampedArray#set<~lib/typedarray/Float32Array> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value f32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/typedarray/Float32Array#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Uint8ClampedArray#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 0
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 1
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    f32.load $0
    local.set $value
    i32.const 1
    drop
    i32.const 1
    drop
    local.get $ptr
    local.get $value
    local.get $value
    f32.sub
    f32.const 0
    f32.eq
    if (result i32)
     f32.const 0
     f32.const 255
     local.get $value
     f32.min
     f32.max
     i32.trunc_sat_f32_u
    else
     i32.const 0
    end
    i32.store8 $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint8ClampedArray#set<~lib/typedarray/Int32Array> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/typedarray/Int32Array#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Uint8ClampedArray#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 0
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 0
  i32.const 2
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $value
    i32.const 1
    drop
    i32.const 0
    drop
    i32.const 1
    i32.eqz
    drop
    i32.const 1
    i32.const 4
    i32.le_u
    drop
    local.get $ptr
    local.get $value
    i32.const 31
    i32.shr_s
    i32.const -1
    i32.xor
    i32.const 255
    local.get $value
    i32.sub
    i32.const 31
    i32.shr_s
    local.get $value
    i32.or
    i32.and
    i32.store8 $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint8ClampedArray#set<~lib/typedarray/Uint32Array> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i32)
  (local $13 i32)
  (local $14 i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/typedarray/Uint32Array#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Uint8ClampedArray#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 0
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 0
  i32.const 2
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $value
    i32.const 1
    drop
    i32.const 0
    drop
    i32.const 0
    i32.eqz
    drop
    local.get $ptr
    i32.const 255
    local.tee $13
    local.get $value
    local.tee $14
    local.get $13
    local.get $14
    i32.lt_u
    select
    i32.store8 $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/util/sort/insertionSort<i8> (type $i32_i32_i32_i32_i32_=>_none) (param $ptr i32) (param $left i32) (param $right i32) (param $presorted i32) (param $comparator i32)
  (local $range i32)
  (local $i i32)
  (local $7 i32)
  (local $a i32)
  (local $b i32)
  (local $min i32)
  (local $max i32)
  (local $j i32)
  (local $13 i32)
  (local $14 i32)
  i32.const 0
  i32.const 1
  i32.ge_s
  drop
  local.get $right
  local.get $left
  i32.sub
  i32.const 1
  i32.add
  local.set $range
  local.get $left
  local.get $range
  i32.const 1
  i32.and
  local.get $presorted
  local.get $range
  local.get $presorted
  i32.sub
  i32.const 1
  i32.and
  i32.sub
  local.get $presorted
  i32.const 0
  i32.eq
  select
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $right
   i32.le_s
   local.set $7
   local.get $7
   if
    local.get $ptr
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    i32.load8_s $0
    local.set $a
    local.get $ptr
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    i32.load8_s $0 offset=1
    local.set $b
    local.get $b
    local.set $min
    local.get $a
    local.set $max
    local.get $a
    local.get $b
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.le_s
    if
     local.get $a
     local.set $min
     local.get $b
     local.set $max
    end
    local.get $i
    i32.const 1
    i32.sub
    local.set $j
    block $while-break|1
     loop $while-continue|1
      local.get $j
      local.get $left
      i32.ge_s
      local.set $13
      local.get $13
      if
       local.get $ptr
       local.get $j
       i32.const 0
       i32.shl
       i32.add
       i32.load8_s $0
       local.set $a
       local.get $a
       local.get $max
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $j
        i32.const 0
        i32.shl
        i32.add
        local.get $a
        i32.store8 $0 offset=2
        local.get $j
        i32.const 1
        i32.sub
        local.set $j
       else
        br $while-break|1
       end
       br $while-continue|1
      end
     end
    end
    local.get $ptr
    local.get $j
    i32.const 0
    i32.shl
    i32.add
    local.get $max
    i32.store8 $0 offset=2
    block $while-break|2
     loop $while-continue|2
      local.get $j
      local.get $left
      i32.ge_s
      local.set $14
      local.get $14
      if
       local.get $ptr
       local.get $j
       i32.const 0
       i32.shl
       i32.add
       i32.load8_s $0
       local.set $a
       local.get $a
       local.get $min
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $j
        i32.const 0
        i32.shl
        i32.add
        local.get $a
        i32.store8 $0 offset=1
        local.get $j
        i32.const 1
        i32.sub
        local.set $j
       else
        br $while-break|2
       end
       br $while-continue|2
      end
     end
    end
    local.get $ptr
    local.get $j
    i32.const 0
    i32.shl
    i32.add
    local.get $min
    i32.store8 $0 offset=1
    local.get $i
    i32.const 2
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/util/sort/extendRunRight<i8> (type $i32_i32_i32_i32_=>_i32) (param $ptr i32) (param $i i32) (param $right i32) (param $comparator i32) (result i32)
  (local $j i32)
  (local $5 i32)
  (local $k i32)
  (local $7 i32)
  (local $tmp i32)
  (local $9 i32)
  local.get $i
  local.get $right
  i32.eq
  if
   local.get $i
   return
  end
  local.get $i
  local.set $j
  local.get $ptr
  local.get $j
  i32.const 0
  i32.shl
  i32.add
  i32.load8_s $0
  local.get $ptr
  local.get $j
  i32.const 1
  i32.add
  local.tee $j
  i32.const 0
  i32.shl
  i32.add
  i32.load8_s $0
  i32.const 2
  global.set $~argumentsLength
  local.get $comparator
  i32.load $0
  call_indirect $0 (type $i32_i32_=>_i32)
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 0
     i32.shl
     i32.add
     i32.load8_s $0 offset=1
     local.get $ptr
     local.get $j
     i32.const 0
     i32.shl
     i32.add
     i32.load8_s $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 31
     i32.shr_u
    else
     i32.const 0
    end
    local.set $5
    local.get $5
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|0
    end
   end
   local.get $j
   local.set $k
   loop $while-continue|1
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     local.get $ptr
     local.get $i
     i32.const 0
     i32.shl
     i32.add
     i32.load8_s $0
     local.set $tmp
     local.get $ptr
     local.get $i
     i32.const 0
     i32.shl
     i32.add
     local.get $ptr
     local.get $k
     i32.const 0
     i32.shl
     i32.add
     i32.load8_s $0
     i32.store8 $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     local.get $ptr
     local.get $k
     i32.const 0
     i32.shl
     i32.add
     local.get $tmp
     i32.store8 $0
     local.get $k
     i32.const 1
     i32.sub
     local.set $k
     br $while-continue|1
    end
   end
  else
   loop $while-continue|2
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 0
     i32.shl
     i32.add
     i32.load8_s $0 offset=1
     local.get $ptr
     local.get $j
     i32.const 0
     i32.shl
     i32.add
     i32.load8_s $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.ge_s
    else
     i32.const 0
    end
    local.set $9
    local.get $9
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|2
    end
   end
  end
  local.get $j
 )
 (func $~lib/util/sort/mergeRuns<i8> (type $i32_i32_i32_i32_i32_i32_=>_none) (param $ptr i32) (param $l i32) (param $m i32) (param $r i32) (param $buffer i32) (param $comparator i32)
  (local $i i32)
  (local $j i32)
  (local $t i32)
  (local $9 i32)
  (local $10 i32)
  (local $k i32)
  (local $12 i32)
  (local $a i32)
  (local $b i32)
  local.get $m
  i32.const 1
  i32.sub
  local.set $m
  local.get $r
  local.get $m
  i32.add
  local.set $t
  local.get $m
  i32.const 1
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $l
   i32.gt_s
   local.set $9
   local.get $9
   if
    local.get $buffer
    local.get $i
    i32.const 1
    i32.sub
    i32.const 0
    i32.shl
    i32.add
    local.get $ptr
    local.get $i
    i32.const 1
    i32.sub
    i32.const 0
    i32.shl
    i32.add
    i32.load8_s $0
    i32.store8 $0
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  local.get $m
  local.set $j
  loop $for-loop|1
   local.get $j
   local.get $r
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $buffer
    local.get $t
    local.get $j
    i32.sub
    i32.const 0
    i32.shl
    i32.add
    local.get $ptr
    local.get $j
    i32.const 0
    i32.shl
    i32.add
    i32.load8_s $0 offset=1
    i32.store8 $0
    local.get $j
    i32.const 1
    i32.add
    local.set $j
    br $for-loop|1
   end
  end
  local.get $l
  local.set $k
  loop $for-loop|2
   local.get $k
   local.get $r
   i32.le_s
   local.set $12
   local.get $12
   if
    local.get $buffer
    local.get $j
    i32.const 0
    i32.shl
    i32.add
    i32.load8_s $0
    local.set $a
    local.get $buffer
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    i32.load8_s $0
    local.set $b
    local.get $a
    local.get $b
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.lt_s
    if
     local.get $ptr
     local.get $k
     i32.const 0
     i32.shl
     i32.add
     local.get $a
     i32.store8 $0
     local.get $j
     i32.const 1
     i32.sub
     local.set $j
    else
     local.get $ptr
     local.get $k
     i32.const 0
     i32.shl
     i32.add
     local.get $b
     i32.store8 $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
    end
    local.get $k
    i32.const 1
    i32.add
    local.set $k
    br $for-loop|2
   end
  end
 )
 (func $~lib/util/sort/SORT<i8> (type $i32_i32_i32_=>_none) (param $ptr i32) (param $len i32) (param $comparator i32)
  (local $3 i32)
  (local $a i32)
  (local $b i32)
  (local $c i32)
  (local $a|7 i32)
  (local $b|8 i32)
  (local $c|9 i32)
  (local $n i32)
  (local $lgPlus2 i32)
  (local $lgPlus2Size i32)
  (local $leftRunStartBuf i32)
  (local $leftRunEndBuf i32)
  (local $i i32)
  (local $16 i32)
  (local $buffer i32)
  (local $hi i32)
  (local $endA i32)
  (local $lenA i32)
  (local $21 i32)
  (local $22 i32)
  (local $top i32)
  (local $startA i32)
  (local $25 i32)
  (local $startB i32)
  (local $endB i32)
  (local $lenB i32)
  (local $29 i32)
  (local $30 i32)
  (local $k i32)
  (local $i|32 i32)
  (local $33 i32)
  (local $start i32)
  (local $i|35 i32)
  (local $36 i32)
  (local $start|37 i32)
  local.get $len
  i32.const 48
  i32.le_s
  if
   local.get $len
   i32.const 1
   i32.le_s
   if
    return
   end
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   block $break|0
    block $case1|0
     block $case0|0
      local.get $len
      local.set $3
      local.get $3
      i32.const 3
      i32.eq
      br_if $case0|0
      local.get $3
      i32.const 2
      i32.eq
      br_if $case1|0
      br $break|0
     end
     local.get $ptr
     i32.load8_s $0
     local.set $a
     local.get $ptr
     i32.load8_s $0 offset=1
     local.set $b
     local.get $a
     local.get $b
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $c
     local.get $ptr
     local.get $b
     local.get $a
     local.get $c
     select
     i32.store8 $0
     local.get $a
     local.get $b
     local.get $c
     select
     local.set $a
     local.get $ptr
     i32.load8_s $0 offset=2
     local.set $b
     local.get $a
     local.get $b
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $c
     local.get $ptr
     local.get $b
     local.get $a
     local.get $c
     select
     i32.store8 $0 offset=1
     local.get $ptr
     local.get $a
     local.get $b
     local.get $c
     select
     i32.store8 $0 offset=2
    end
    local.get $ptr
    i32.load8_s $0
    local.set $a|7
    local.get $ptr
    i32.load8_s $0 offset=1
    local.set $b|8
    local.get $a|7
    local.get $b|8
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.gt_s
    local.set $c|9
    local.get $ptr
    local.get $b|8
    local.get $a|7
    local.get $c|9
    select
    i32.store8 $0
    local.get $ptr
    local.get $a|7
    local.get $b|8
    local.get $c|9
    select
    i32.store8 $0 offset=1
    return
   end
   local.get $ptr
   i32.const 0
   local.get $len
   i32.const 1
   i32.sub
   i32.const 0
   local.get $comparator
   call $~lib/util/sort/insertionSort<i8>
   return
  end
  local.get $len
  local.set $n
  i32.const 31
  local.get $n
  i32.clz
  i32.sub
  i32.const 2
  i32.add
  local.set $lgPlus2
  local.get $lgPlus2
  i32.const 2
  i32.shl
  local.set $lgPlus2Size
  local.get $lgPlus2Size
  i32.const 1
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $leftRunStartBuf
  local.get $leftRunStartBuf
  local.get $lgPlus2Size
  i32.add
  local.set $leftRunEndBuf
  i32.const 0
  local.set $i
  loop $for-loop|1
   local.get $i
   local.get $lgPlus2
   i32.lt_u
   local.set $16
   local.get $16
   if
    local.get $leftRunStartBuf
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.const -1
    i32.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|1
   end
  end
  local.get $len
  i32.const 0
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $buffer
  local.get $len
  i32.const 1
  i32.sub
  local.set $hi
  local.get $ptr
  i32.const 0
  local.get $hi
  local.get $comparator
  call $~lib/util/sort/extendRunRight<i8>
  local.set $endA
  local.get $endA
  i32.const 1
  i32.add
  local.set $lenA
  local.get $lenA
  i32.const 32
  i32.lt_s
  if
   local.get $hi
   local.tee $21
   i32.const 32
   i32.const 1
   i32.sub
   local.tee $22
   local.get $21
   local.get $22
   i32.lt_s
   select
   local.set $endA
   local.get $ptr
   i32.const 0
   local.get $endA
   local.get $lenA
   local.get $comparator
   call $~lib/util/sort/insertionSort<i8>
  end
  i32.const 0
  local.set $top
  i32.const 0
  local.set $startA
  loop $while-continue|2
   local.get $endA
   local.get $hi
   i32.lt_s
   local.set $25
   local.get $25
   if
    local.get $endA
    i32.const 1
    i32.add
    local.set $startB
    local.get $ptr
    local.get $startB
    local.get $hi
    local.get $comparator
    call $~lib/util/sort/extendRunRight<i8>
    local.set $endB
    local.get $endB
    local.get $startB
    i32.sub
    i32.const 1
    i32.add
    local.set $lenB
    local.get $lenB
    i32.const 32
    i32.lt_s
    if
     local.get $hi
     local.tee $29
     local.get $startB
     i32.const 32
     i32.add
     i32.const 1
     i32.sub
     local.tee $30
     local.get $29
     local.get $30
     i32.lt_s
     select
     local.set $endB
     local.get $ptr
     local.get $startB
     local.get $endB
     local.get $lenB
     local.get $comparator
     call $~lib/util/sort/insertionSort<i8>
    end
    i32.const 0
    local.get $hi
    local.get $startA
    local.get $startB
    local.get $endB
    call $~lib/util/sort/nodePower
    local.set $k
    local.get $top
    local.set $i|32
    loop $for-loop|3
     local.get $i|32
     local.get $k
     i32.gt_u
     local.set $33
     local.get $33
     if
      local.get $leftRunStartBuf
      local.get $i|32
      i32.const 2
      i32.shl
      i32.add
      i32.load $0
      local.set $start
      local.get $start
      i32.const -1
      i32.ne
      if
       local.get $ptr
       local.get $start
       local.get $leftRunEndBuf
       local.get $i|32
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       i32.const 1
       i32.add
       local.get $endA
       local.get $buffer
       local.get $comparator
       call $~lib/util/sort/mergeRuns<i8>
       local.get $start
       local.set $startA
       local.get $leftRunStartBuf
       local.get $i|32
       i32.const 2
       i32.shl
       i32.add
       i32.const -1
       i32.store $0
      end
      local.get $i|32
      i32.const 1
      i32.sub
      local.set $i|32
      br $for-loop|3
     end
    end
    local.get $leftRunStartBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $startA
    i32.store $0
    local.get $leftRunEndBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $endA
    i32.store $0
    local.get $startB
    local.set $startA
    local.get $endB
    local.set $endA
    local.get $k
    local.set $top
    br $while-continue|2
   end
  end
  local.get $top
  local.set $i|35
  loop $for-loop|4
   local.get $i|35
   i32.const 0
   i32.ne
   local.set $36
   local.get $36
   if
    local.get $leftRunStartBuf
    local.get $i|35
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $start|37
    local.get $start|37
    i32.const -1
    i32.ne
    if
     local.get $ptr
     local.get $start|37
     local.get $leftRunEndBuf
     local.get $i|35
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 1
     i32.add
     local.get $hi
     local.get $buffer
     local.get $comparator
     call $~lib/util/sort/mergeRuns<i8>
    end
    local.get $i|35
    i32.const 1
    i32.sub
    local.set $i|35
    br $for-loop|4
   end
  end
  local.get $buffer
  call $~lib/rt/tlsf/__free
  local.get $leftRunStartBuf
  call $~lib/rt/tlsf/__free
 )
 (func $~lib/typedarray/Int8Array#sort (type $i32_i32_=>_i32) (param $this i32) (param $comparator i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Int8Array#get:length
  local.get $comparator
  call $~lib/util/sort/SORT<i8>
  local.get $this
 )
 (func $~lib/util/sort/COMPARATOR<i8>~anonymous|0 (type $i32_i32_=>_i32) (param $a i32) (param $b i32) (result i32)
  local.get $a
  i32.extend8_s
  local.get $b
  i32.extend8_s
  i32.sub
 )
 (func $std/typedarray/testArraySort<~lib/typedarray/Int8Array,i8>~anonymous|0 (type $i32_i32_=>_i32) (param $a i32) (param $b i32) (result i32)
  local.get $b
  i32.extend8_s
  local.get $a
  i32.extend8_s
  i32.gt_s
  local.get $b
  i32.extend8_s
  local.get $a
  i32.extend8_s
  i32.lt_s
  i32.sub
 )
 (func $~lib/util/sort/insertionSort<u8> (type $i32_i32_i32_i32_i32_=>_none) (param $ptr i32) (param $left i32) (param $right i32) (param $presorted i32) (param $comparator i32)
  (local $range i32)
  (local $i i32)
  (local $7 i32)
  (local $a i32)
  (local $b i32)
  (local $min i32)
  (local $max i32)
  (local $j i32)
  (local $13 i32)
  (local $14 i32)
  i32.const 0
  i32.const 1
  i32.ge_s
  drop
  local.get $right
  local.get $left
  i32.sub
  i32.const 1
  i32.add
  local.set $range
  local.get $left
  local.get $range
  i32.const 1
  i32.and
  local.get $presorted
  local.get $range
  local.get $presorted
  i32.sub
  i32.const 1
  i32.and
  i32.sub
  local.get $presorted
  i32.const 0
  i32.eq
  select
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $right
   i32.le_s
   local.set $7
   local.get $7
   if
    local.get $ptr
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    i32.load8_u $0
    local.set $a
    local.get $ptr
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    i32.load8_u $0 offset=1
    local.set $b
    local.get $b
    local.set $min
    local.get $a
    local.set $max
    local.get $a
    local.get $b
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.le_s
    if
     local.get $a
     local.set $min
     local.get $b
     local.set $max
    end
    local.get $i
    i32.const 1
    i32.sub
    local.set $j
    block $while-break|1
     loop $while-continue|1
      local.get $j
      local.get $left
      i32.ge_s
      local.set $13
      local.get $13
      if
       local.get $ptr
       local.get $j
       i32.const 0
       i32.shl
       i32.add
       i32.load8_u $0
       local.set $a
       local.get $a
       local.get $max
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $j
        i32.const 0
        i32.shl
        i32.add
        local.get $a
        i32.store8 $0 offset=2
        local.get $j
        i32.const 1
        i32.sub
        local.set $j
       else
        br $while-break|1
       end
       br $while-continue|1
      end
     end
    end
    local.get $ptr
    local.get $j
    i32.const 0
    i32.shl
    i32.add
    local.get $max
    i32.store8 $0 offset=2
    block $while-break|2
     loop $while-continue|2
      local.get $j
      local.get $left
      i32.ge_s
      local.set $14
      local.get $14
      if
       local.get $ptr
       local.get $j
       i32.const 0
       i32.shl
       i32.add
       i32.load8_u $0
       local.set $a
       local.get $a
       local.get $min
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $j
        i32.const 0
        i32.shl
        i32.add
        local.get $a
        i32.store8 $0 offset=1
        local.get $j
        i32.const 1
        i32.sub
        local.set $j
       else
        br $while-break|2
       end
       br $while-continue|2
      end
     end
    end
    local.get $ptr
    local.get $j
    i32.const 0
    i32.shl
    i32.add
    local.get $min
    i32.store8 $0 offset=1
    local.get $i
    i32.const 2
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/util/sort/extendRunRight<u8> (type $i32_i32_i32_i32_=>_i32) (param $ptr i32) (param $i i32) (param $right i32) (param $comparator i32) (result i32)
  (local $j i32)
  (local $5 i32)
  (local $k i32)
  (local $7 i32)
  (local $tmp i32)
  (local $9 i32)
  local.get $i
  local.get $right
  i32.eq
  if
   local.get $i
   return
  end
  local.get $i
  local.set $j
  local.get $ptr
  local.get $j
  i32.const 0
  i32.shl
  i32.add
  i32.load8_u $0
  local.get $ptr
  local.get $j
  i32.const 1
  i32.add
  local.tee $j
  i32.const 0
  i32.shl
  i32.add
  i32.load8_u $0
  i32.const 2
  global.set $~argumentsLength
  local.get $comparator
  i32.load $0
  call_indirect $0 (type $i32_i32_=>_i32)
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 0
     i32.shl
     i32.add
     i32.load8_u $0 offset=1
     local.get $ptr
     local.get $j
     i32.const 0
     i32.shl
     i32.add
     i32.load8_u $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 31
     i32.shr_u
    else
     i32.const 0
    end
    local.set $5
    local.get $5
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|0
    end
   end
   local.get $j
   local.set $k
   loop $while-continue|1
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     local.get $ptr
     local.get $i
     i32.const 0
     i32.shl
     i32.add
     i32.load8_u $0
     local.set $tmp
     local.get $ptr
     local.get $i
     i32.const 0
     i32.shl
     i32.add
     local.get $ptr
     local.get $k
     i32.const 0
     i32.shl
     i32.add
     i32.load8_u $0
     i32.store8 $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     local.get $ptr
     local.get $k
     i32.const 0
     i32.shl
     i32.add
     local.get $tmp
     i32.store8 $0
     local.get $k
     i32.const 1
     i32.sub
     local.set $k
     br $while-continue|1
    end
   end
  else
   loop $while-continue|2
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 0
     i32.shl
     i32.add
     i32.load8_u $0 offset=1
     local.get $ptr
     local.get $j
     i32.const 0
     i32.shl
     i32.add
     i32.load8_u $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.ge_s
    else
     i32.const 0
    end
    local.set $9
    local.get $9
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|2
    end
   end
  end
  local.get $j
 )
 (func $~lib/util/sort/mergeRuns<u8> (type $i32_i32_i32_i32_i32_i32_=>_none) (param $ptr i32) (param $l i32) (param $m i32) (param $r i32) (param $buffer i32) (param $comparator i32)
  (local $i i32)
  (local $j i32)
  (local $t i32)
  (local $9 i32)
  (local $10 i32)
  (local $k i32)
  (local $12 i32)
  (local $a i32)
  (local $b i32)
  local.get $m
  i32.const 1
  i32.sub
  local.set $m
  local.get $r
  local.get $m
  i32.add
  local.set $t
  local.get $m
  i32.const 1
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $l
   i32.gt_s
   local.set $9
   local.get $9
   if
    local.get $buffer
    local.get $i
    i32.const 1
    i32.sub
    i32.const 0
    i32.shl
    i32.add
    local.get $ptr
    local.get $i
    i32.const 1
    i32.sub
    i32.const 0
    i32.shl
    i32.add
    i32.load8_u $0
    i32.store8 $0
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  local.get $m
  local.set $j
  loop $for-loop|1
   local.get $j
   local.get $r
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $buffer
    local.get $t
    local.get $j
    i32.sub
    i32.const 0
    i32.shl
    i32.add
    local.get $ptr
    local.get $j
    i32.const 0
    i32.shl
    i32.add
    i32.load8_u $0 offset=1
    i32.store8 $0
    local.get $j
    i32.const 1
    i32.add
    local.set $j
    br $for-loop|1
   end
  end
  local.get $l
  local.set $k
  loop $for-loop|2
   local.get $k
   local.get $r
   i32.le_s
   local.set $12
   local.get $12
   if
    local.get $buffer
    local.get $j
    i32.const 0
    i32.shl
    i32.add
    i32.load8_u $0
    local.set $a
    local.get $buffer
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    i32.load8_u $0
    local.set $b
    local.get $a
    local.get $b
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.lt_s
    if
     local.get $ptr
     local.get $k
     i32.const 0
     i32.shl
     i32.add
     local.get $a
     i32.store8 $0
     local.get $j
     i32.const 1
     i32.sub
     local.set $j
    else
     local.get $ptr
     local.get $k
     i32.const 0
     i32.shl
     i32.add
     local.get $b
     i32.store8 $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
    end
    local.get $k
    i32.const 1
    i32.add
    local.set $k
    br $for-loop|2
   end
  end
 )
 (func $~lib/util/sort/SORT<u8> (type $i32_i32_i32_=>_none) (param $ptr i32) (param $len i32) (param $comparator i32)
  (local $3 i32)
  (local $a i32)
  (local $b i32)
  (local $c i32)
  (local $a|7 i32)
  (local $b|8 i32)
  (local $c|9 i32)
  (local $n i32)
  (local $lgPlus2 i32)
  (local $lgPlus2Size i32)
  (local $leftRunStartBuf i32)
  (local $leftRunEndBuf i32)
  (local $i i32)
  (local $16 i32)
  (local $buffer i32)
  (local $hi i32)
  (local $endA i32)
  (local $lenA i32)
  (local $21 i32)
  (local $22 i32)
  (local $top i32)
  (local $startA i32)
  (local $25 i32)
  (local $startB i32)
  (local $endB i32)
  (local $lenB i32)
  (local $29 i32)
  (local $30 i32)
  (local $k i32)
  (local $i|32 i32)
  (local $33 i32)
  (local $start i32)
  (local $i|35 i32)
  (local $36 i32)
  (local $start|37 i32)
  local.get $len
  i32.const 48
  i32.le_s
  if
   local.get $len
   i32.const 1
   i32.le_s
   if
    return
   end
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   block $break|0
    block $case1|0
     block $case0|0
      local.get $len
      local.set $3
      local.get $3
      i32.const 3
      i32.eq
      br_if $case0|0
      local.get $3
      i32.const 2
      i32.eq
      br_if $case1|0
      br $break|0
     end
     local.get $ptr
     i32.load8_u $0
     local.set $a
     local.get $ptr
     i32.load8_u $0 offset=1
     local.set $b
     local.get $a
     local.get $b
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $c
     local.get $ptr
     local.get $b
     local.get $a
     local.get $c
     select
     i32.store8 $0
     local.get $a
     local.get $b
     local.get $c
     select
     local.set $a
     local.get $ptr
     i32.load8_u $0 offset=2
     local.set $b
     local.get $a
     local.get $b
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $c
     local.get $ptr
     local.get $b
     local.get $a
     local.get $c
     select
     i32.store8 $0 offset=1
     local.get $ptr
     local.get $a
     local.get $b
     local.get $c
     select
     i32.store8 $0 offset=2
    end
    local.get $ptr
    i32.load8_u $0
    local.set $a|7
    local.get $ptr
    i32.load8_u $0 offset=1
    local.set $b|8
    local.get $a|7
    local.get $b|8
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.gt_s
    local.set $c|9
    local.get $ptr
    local.get $b|8
    local.get $a|7
    local.get $c|9
    select
    i32.store8 $0
    local.get $ptr
    local.get $a|7
    local.get $b|8
    local.get $c|9
    select
    i32.store8 $0 offset=1
    return
   end
   local.get $ptr
   i32.const 0
   local.get $len
   i32.const 1
   i32.sub
   i32.const 0
   local.get $comparator
   call $~lib/util/sort/insertionSort<u8>
   return
  end
  local.get $len
  local.set $n
  i32.const 31
  local.get $n
  i32.clz
  i32.sub
  i32.const 2
  i32.add
  local.set $lgPlus2
  local.get $lgPlus2
  i32.const 2
  i32.shl
  local.set $lgPlus2Size
  local.get $lgPlus2Size
  i32.const 1
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $leftRunStartBuf
  local.get $leftRunStartBuf
  local.get $lgPlus2Size
  i32.add
  local.set $leftRunEndBuf
  i32.const 0
  local.set $i
  loop $for-loop|1
   local.get $i
   local.get $lgPlus2
   i32.lt_u
   local.set $16
   local.get $16
   if
    local.get $leftRunStartBuf
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.const -1
    i32.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|1
   end
  end
  local.get $len
  i32.const 0
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $buffer
  local.get $len
  i32.const 1
  i32.sub
  local.set $hi
  local.get $ptr
  i32.const 0
  local.get $hi
  local.get $comparator
  call $~lib/util/sort/extendRunRight<u8>
  local.set $endA
  local.get $endA
  i32.const 1
  i32.add
  local.set $lenA
  local.get $lenA
  i32.const 32
  i32.lt_s
  if
   local.get $hi
   local.tee $21
   i32.const 32
   i32.const 1
   i32.sub
   local.tee $22
   local.get $21
   local.get $22
   i32.lt_s
   select
   local.set $endA
   local.get $ptr
   i32.const 0
   local.get $endA
   local.get $lenA
   local.get $comparator
   call $~lib/util/sort/insertionSort<u8>
  end
  i32.const 0
  local.set $top
  i32.const 0
  local.set $startA
  loop $while-continue|2
   local.get $endA
   local.get $hi
   i32.lt_s
   local.set $25
   local.get $25
   if
    local.get $endA
    i32.const 1
    i32.add
    local.set $startB
    local.get $ptr
    local.get $startB
    local.get $hi
    local.get $comparator
    call $~lib/util/sort/extendRunRight<u8>
    local.set $endB
    local.get $endB
    local.get $startB
    i32.sub
    i32.const 1
    i32.add
    local.set $lenB
    local.get $lenB
    i32.const 32
    i32.lt_s
    if
     local.get $hi
     local.tee $29
     local.get $startB
     i32.const 32
     i32.add
     i32.const 1
     i32.sub
     local.tee $30
     local.get $29
     local.get $30
     i32.lt_s
     select
     local.set $endB
     local.get $ptr
     local.get $startB
     local.get $endB
     local.get $lenB
     local.get $comparator
     call $~lib/util/sort/insertionSort<u8>
    end
    i32.const 0
    local.get $hi
    local.get $startA
    local.get $startB
    local.get $endB
    call $~lib/util/sort/nodePower
    local.set $k
    local.get $top
    local.set $i|32
    loop $for-loop|3
     local.get $i|32
     local.get $k
     i32.gt_u
     local.set $33
     local.get $33
     if
      local.get $leftRunStartBuf
      local.get $i|32
      i32.const 2
      i32.shl
      i32.add
      i32.load $0
      local.set $start
      local.get $start
      i32.const -1
      i32.ne
      if
       local.get $ptr
       local.get $start
       local.get $leftRunEndBuf
       local.get $i|32
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       i32.const 1
       i32.add
       local.get $endA
       local.get $buffer
       local.get $comparator
       call $~lib/util/sort/mergeRuns<u8>
       local.get $start
       local.set $startA
       local.get $leftRunStartBuf
       local.get $i|32
       i32.const 2
       i32.shl
       i32.add
       i32.const -1
       i32.store $0
      end
      local.get $i|32
      i32.const 1
      i32.sub
      local.set $i|32
      br $for-loop|3
     end
    end
    local.get $leftRunStartBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $startA
    i32.store $0
    local.get $leftRunEndBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $endA
    i32.store $0
    local.get $startB
    local.set $startA
    local.get $endB
    local.set $endA
    local.get $k
    local.set $top
    br $while-continue|2
   end
  end
  local.get $top
  local.set $i|35
  loop $for-loop|4
   local.get $i|35
   i32.const 0
   i32.ne
   local.set $36
   local.get $36
   if
    local.get $leftRunStartBuf
    local.get $i|35
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $start|37
    local.get $start|37
    i32.const -1
    i32.ne
    if
     local.get $ptr
     local.get $start|37
     local.get $leftRunEndBuf
     local.get $i|35
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 1
     i32.add
     local.get $hi
     local.get $buffer
     local.get $comparator
     call $~lib/util/sort/mergeRuns<u8>
    end
    local.get $i|35
    i32.const 1
    i32.sub
    local.set $i|35
    br $for-loop|4
   end
  end
  local.get $buffer
  call $~lib/rt/tlsf/__free
  local.get $leftRunStartBuf
  call $~lib/rt/tlsf/__free
 )
 (func $~lib/typedarray/Uint8Array#sort (type $i32_i32_=>_i32) (param $this i32) (param $comparator i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Uint8Array#get:length
  local.get $comparator
  call $~lib/util/sort/SORT<u8>
  local.get $this
 )
 (func $~lib/util/sort/COMPARATOR<u8>~anonymous|0 (type $i32_i32_=>_i32) (param $a i32) (param $b i32) (result i32)
  local.get $a
  i32.const 255
  i32.and
  local.get $b
  i32.const 255
  i32.and
  i32.gt_u
  local.get $a
  i32.const 255
  i32.and
  local.get $b
  i32.const 255
  i32.and
  i32.lt_u
  i32.sub
 )
 (func $std/typedarray/testArraySort<~lib/typedarray/Uint8Array,u8>~anonymous|0 (type $i32_i32_=>_i32) (param $a i32) (param $b i32) (result i32)
  local.get $b
  i32.const 255
  i32.and
  local.get $a
  i32.const 255
  i32.and
  i32.gt_u
  local.get $b
  i32.const 255
  i32.and
  local.get $a
  i32.const 255
  i32.and
  i32.lt_u
  i32.sub
 )
 (func $~lib/typedarray/Uint8ClampedArray#sort (type $i32_i32_=>_i32) (param $this i32) (param $comparator i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Uint8ClampedArray#get:length
  local.get $comparator
  call $~lib/util/sort/SORT<u8>
  local.get $this
 )
 (func $~lib/util/sort/COMPARATOR<u8>~anonymous|1 (type $i32_i32_=>_i32) (param $a i32) (param $b i32) (result i32)
  local.get $a
  i32.const 255
  i32.and
  local.get $b
  i32.const 255
  i32.and
  i32.gt_u
  local.get $a
  i32.const 255
  i32.and
  local.get $b
  i32.const 255
  i32.and
  i32.lt_u
  i32.sub
 )
 (func $std/typedarray/testArraySort<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|0 (type $i32_i32_=>_i32) (param $a i32) (param $b i32) (result i32)
  local.get $b
  i32.const 255
  i32.and
  local.get $a
  i32.const 255
  i32.and
  i32.gt_u
  local.get $b
  i32.const 255
  i32.and
  local.get $a
  i32.const 255
  i32.and
  i32.lt_u
  i32.sub
 )
 (func $~lib/util/sort/insertionSort<i16> (type $i32_i32_i32_i32_i32_=>_none) (param $ptr i32) (param $left i32) (param $right i32) (param $presorted i32) (param $comparator i32)
  (local $range i32)
  (local $i i32)
  (local $7 i32)
  (local $a i32)
  (local $b i32)
  (local $min i32)
  (local $max i32)
  (local $j i32)
  (local $13 i32)
  (local $14 i32)
  i32.const 0
  i32.const 1
  i32.ge_s
  drop
  local.get $right
  local.get $left
  i32.sub
  i32.const 1
  i32.add
  local.set $range
  local.get $left
  local.get $range
  i32.const 1
  i32.and
  local.get $presorted
  local.get $range
  local.get $presorted
  i32.sub
  i32.const 1
  i32.and
  i32.sub
  local.get $presorted
  i32.const 0
  i32.eq
  select
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $right
   i32.le_s
   local.set $7
   local.get $7
   if
    local.get $ptr
    local.get $i
    i32.const 1
    i32.shl
    i32.add
    i32.load16_s $0
    local.set $a
    local.get $ptr
    local.get $i
    i32.const 1
    i32.shl
    i32.add
    i32.load16_s $0 offset=2
    local.set $b
    local.get $b
    local.set $min
    local.get $a
    local.set $max
    local.get $a
    local.get $b
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.le_s
    if
     local.get $a
     local.set $min
     local.get $b
     local.set $max
    end
    local.get $i
    i32.const 1
    i32.sub
    local.set $j
    block $while-break|1
     loop $while-continue|1
      local.get $j
      local.get $left
      i32.ge_s
      local.set $13
      local.get $13
      if
       local.get $ptr
       local.get $j
       i32.const 1
       i32.shl
       i32.add
       i32.load16_s $0
       local.set $a
       local.get $a
       local.get $max
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $j
        i32.const 1
        i32.shl
        i32.add
        local.get $a
        i32.store16 $0 offset=4
        local.get $j
        i32.const 1
        i32.sub
        local.set $j
       else
        br $while-break|1
       end
       br $while-continue|1
      end
     end
    end
    local.get $ptr
    local.get $j
    i32.const 1
    i32.shl
    i32.add
    local.get $max
    i32.store16 $0 offset=4
    block $while-break|2
     loop $while-continue|2
      local.get $j
      local.get $left
      i32.ge_s
      local.set $14
      local.get $14
      if
       local.get $ptr
       local.get $j
       i32.const 1
       i32.shl
       i32.add
       i32.load16_s $0
       local.set $a
       local.get $a
       local.get $min
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $j
        i32.const 1
        i32.shl
        i32.add
        local.get $a
        i32.store16 $0 offset=2
        local.get $j
        i32.const 1
        i32.sub
        local.set $j
       else
        br $while-break|2
       end
       br $while-continue|2
      end
     end
    end
    local.get $ptr
    local.get $j
    i32.const 1
    i32.shl
    i32.add
    local.get $min
    i32.store16 $0 offset=2
    local.get $i
    i32.const 2
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/util/sort/extendRunRight<i16> (type $i32_i32_i32_i32_=>_i32) (param $ptr i32) (param $i i32) (param $right i32) (param $comparator i32) (result i32)
  (local $j i32)
  (local $5 i32)
  (local $k i32)
  (local $7 i32)
  (local $tmp i32)
  (local $9 i32)
  local.get $i
  local.get $right
  i32.eq
  if
   local.get $i
   return
  end
  local.get $i
  local.set $j
  local.get $ptr
  local.get $j
  i32.const 1
  i32.shl
  i32.add
  i32.load16_s $0
  local.get $ptr
  local.get $j
  i32.const 1
  i32.add
  local.tee $j
  i32.const 1
  i32.shl
  i32.add
  i32.load16_s $0
  i32.const 2
  global.set $~argumentsLength
  local.get $comparator
  i32.load $0
  call_indirect $0 (type $i32_i32_=>_i32)
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 1
     i32.shl
     i32.add
     i32.load16_s $0 offset=2
     local.get $ptr
     local.get $j
     i32.const 1
     i32.shl
     i32.add
     i32.load16_s $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 31
     i32.shr_u
    else
     i32.const 0
    end
    local.set $5
    local.get $5
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|0
    end
   end
   local.get $j
   local.set $k
   loop $while-continue|1
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     local.get $ptr
     local.get $i
     i32.const 1
     i32.shl
     i32.add
     i32.load16_s $0
     local.set $tmp
     local.get $ptr
     local.get $i
     i32.const 1
     i32.shl
     i32.add
     local.get $ptr
     local.get $k
     i32.const 1
     i32.shl
     i32.add
     i32.load16_s $0
     i32.store16 $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     local.get $ptr
     local.get $k
     i32.const 1
     i32.shl
     i32.add
     local.get $tmp
     i32.store16 $0
     local.get $k
     i32.const 1
     i32.sub
     local.set $k
     br $while-continue|1
    end
   end
  else
   loop $while-continue|2
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 1
     i32.shl
     i32.add
     i32.load16_s $0 offset=2
     local.get $ptr
     local.get $j
     i32.const 1
     i32.shl
     i32.add
     i32.load16_s $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.ge_s
    else
     i32.const 0
    end
    local.set $9
    local.get $9
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|2
    end
   end
  end
  local.get $j
 )
 (func $~lib/util/sort/mergeRuns<i16> (type $i32_i32_i32_i32_i32_i32_=>_none) (param $ptr i32) (param $l i32) (param $m i32) (param $r i32) (param $buffer i32) (param $comparator i32)
  (local $i i32)
  (local $j i32)
  (local $t i32)
  (local $9 i32)
  (local $10 i32)
  (local $k i32)
  (local $12 i32)
  (local $a i32)
  (local $b i32)
  local.get $m
  i32.const 1
  i32.sub
  local.set $m
  local.get $r
  local.get $m
  i32.add
  local.set $t
  local.get $m
  i32.const 1
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $l
   i32.gt_s
   local.set $9
   local.get $9
   if
    local.get $buffer
    local.get $i
    i32.const 1
    i32.sub
    i32.const 1
    i32.shl
    i32.add
    local.get $ptr
    local.get $i
    i32.const 1
    i32.sub
    i32.const 1
    i32.shl
    i32.add
    i32.load16_s $0
    i32.store16 $0
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  local.get $m
  local.set $j
  loop $for-loop|1
   local.get $j
   local.get $r
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $buffer
    local.get $t
    local.get $j
    i32.sub
    i32.const 1
    i32.shl
    i32.add
    local.get $ptr
    local.get $j
    i32.const 1
    i32.shl
    i32.add
    i32.load16_s $0 offset=2
    i32.store16 $0
    local.get $j
    i32.const 1
    i32.add
    local.set $j
    br $for-loop|1
   end
  end
  local.get $l
  local.set $k
  loop $for-loop|2
   local.get $k
   local.get $r
   i32.le_s
   local.set $12
   local.get $12
   if
    local.get $buffer
    local.get $j
    i32.const 1
    i32.shl
    i32.add
    i32.load16_s $0
    local.set $a
    local.get $buffer
    local.get $i
    i32.const 1
    i32.shl
    i32.add
    i32.load16_s $0
    local.set $b
    local.get $a
    local.get $b
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.lt_s
    if
     local.get $ptr
     local.get $k
     i32.const 1
     i32.shl
     i32.add
     local.get $a
     i32.store16 $0
     local.get $j
     i32.const 1
     i32.sub
     local.set $j
    else
     local.get $ptr
     local.get $k
     i32.const 1
     i32.shl
     i32.add
     local.get $b
     i32.store16 $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
    end
    local.get $k
    i32.const 1
    i32.add
    local.set $k
    br $for-loop|2
   end
  end
 )
 (func $~lib/util/sort/SORT<i16> (type $i32_i32_i32_=>_none) (param $ptr i32) (param $len i32) (param $comparator i32)
  (local $3 i32)
  (local $a i32)
  (local $b i32)
  (local $c i32)
  (local $a|7 i32)
  (local $b|8 i32)
  (local $c|9 i32)
  (local $n i32)
  (local $lgPlus2 i32)
  (local $lgPlus2Size i32)
  (local $leftRunStartBuf i32)
  (local $leftRunEndBuf i32)
  (local $i i32)
  (local $16 i32)
  (local $buffer i32)
  (local $hi i32)
  (local $endA i32)
  (local $lenA i32)
  (local $21 i32)
  (local $22 i32)
  (local $top i32)
  (local $startA i32)
  (local $25 i32)
  (local $startB i32)
  (local $endB i32)
  (local $lenB i32)
  (local $29 i32)
  (local $30 i32)
  (local $k i32)
  (local $i|32 i32)
  (local $33 i32)
  (local $start i32)
  (local $i|35 i32)
  (local $36 i32)
  (local $start|37 i32)
  local.get $len
  i32.const 48
  i32.le_s
  if
   local.get $len
   i32.const 1
   i32.le_s
   if
    return
   end
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   block $break|0
    block $case1|0
     block $case0|0
      local.get $len
      local.set $3
      local.get $3
      i32.const 3
      i32.eq
      br_if $case0|0
      local.get $3
      i32.const 2
      i32.eq
      br_if $case1|0
      br $break|0
     end
     local.get $ptr
     i32.load16_s $0
     local.set $a
     local.get $ptr
     i32.load16_s $0 offset=2
     local.set $b
     local.get $a
     local.get $b
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $c
     local.get $ptr
     local.get $b
     local.get $a
     local.get $c
     select
     i32.store16 $0
     local.get $a
     local.get $b
     local.get $c
     select
     local.set $a
     local.get $ptr
     i32.load16_s $0 offset=4
     local.set $b
     local.get $a
     local.get $b
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $c
     local.get $ptr
     local.get $b
     local.get $a
     local.get $c
     select
     i32.store16 $0 offset=2
     local.get $ptr
     local.get $a
     local.get $b
     local.get $c
     select
     i32.store16 $0 offset=4
    end
    local.get $ptr
    i32.load16_s $0
    local.set $a|7
    local.get $ptr
    i32.load16_s $0 offset=2
    local.set $b|8
    local.get $a|7
    local.get $b|8
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.gt_s
    local.set $c|9
    local.get $ptr
    local.get $b|8
    local.get $a|7
    local.get $c|9
    select
    i32.store16 $0
    local.get $ptr
    local.get $a|7
    local.get $b|8
    local.get $c|9
    select
    i32.store16 $0 offset=2
    return
   end
   local.get $ptr
   i32.const 0
   local.get $len
   i32.const 1
   i32.sub
   i32.const 0
   local.get $comparator
   call $~lib/util/sort/insertionSort<i16>
   return
  end
  local.get $len
  local.set $n
  i32.const 31
  local.get $n
  i32.clz
  i32.sub
  i32.const 2
  i32.add
  local.set $lgPlus2
  local.get $lgPlus2
  i32.const 2
  i32.shl
  local.set $lgPlus2Size
  local.get $lgPlus2Size
  i32.const 1
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $leftRunStartBuf
  local.get $leftRunStartBuf
  local.get $lgPlus2Size
  i32.add
  local.set $leftRunEndBuf
  i32.const 0
  local.set $i
  loop $for-loop|1
   local.get $i
   local.get $lgPlus2
   i32.lt_u
   local.set $16
   local.get $16
   if
    local.get $leftRunStartBuf
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.const -1
    i32.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|1
   end
  end
  local.get $len
  i32.const 1
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $buffer
  local.get $len
  i32.const 1
  i32.sub
  local.set $hi
  local.get $ptr
  i32.const 0
  local.get $hi
  local.get $comparator
  call $~lib/util/sort/extendRunRight<i16>
  local.set $endA
  local.get $endA
  i32.const 1
  i32.add
  local.set $lenA
  local.get $lenA
  i32.const 32
  i32.lt_s
  if
   local.get $hi
   local.tee $21
   i32.const 32
   i32.const 1
   i32.sub
   local.tee $22
   local.get $21
   local.get $22
   i32.lt_s
   select
   local.set $endA
   local.get $ptr
   i32.const 0
   local.get $endA
   local.get $lenA
   local.get $comparator
   call $~lib/util/sort/insertionSort<i16>
  end
  i32.const 0
  local.set $top
  i32.const 0
  local.set $startA
  loop $while-continue|2
   local.get $endA
   local.get $hi
   i32.lt_s
   local.set $25
   local.get $25
   if
    local.get $endA
    i32.const 1
    i32.add
    local.set $startB
    local.get $ptr
    local.get $startB
    local.get $hi
    local.get $comparator
    call $~lib/util/sort/extendRunRight<i16>
    local.set $endB
    local.get $endB
    local.get $startB
    i32.sub
    i32.const 1
    i32.add
    local.set $lenB
    local.get $lenB
    i32.const 32
    i32.lt_s
    if
     local.get $hi
     local.tee $29
     local.get $startB
     i32.const 32
     i32.add
     i32.const 1
     i32.sub
     local.tee $30
     local.get $29
     local.get $30
     i32.lt_s
     select
     local.set $endB
     local.get $ptr
     local.get $startB
     local.get $endB
     local.get $lenB
     local.get $comparator
     call $~lib/util/sort/insertionSort<i16>
    end
    i32.const 0
    local.get $hi
    local.get $startA
    local.get $startB
    local.get $endB
    call $~lib/util/sort/nodePower
    local.set $k
    local.get $top
    local.set $i|32
    loop $for-loop|3
     local.get $i|32
     local.get $k
     i32.gt_u
     local.set $33
     local.get $33
     if
      local.get $leftRunStartBuf
      local.get $i|32
      i32.const 2
      i32.shl
      i32.add
      i32.load $0
      local.set $start
      local.get $start
      i32.const -1
      i32.ne
      if
       local.get $ptr
       local.get $start
       local.get $leftRunEndBuf
       local.get $i|32
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       i32.const 1
       i32.add
       local.get $endA
       local.get $buffer
       local.get $comparator
       call $~lib/util/sort/mergeRuns<i16>
       local.get $start
       local.set $startA
       local.get $leftRunStartBuf
       local.get $i|32
       i32.const 2
       i32.shl
       i32.add
       i32.const -1
       i32.store $0
      end
      local.get $i|32
      i32.const 1
      i32.sub
      local.set $i|32
      br $for-loop|3
     end
    end
    local.get $leftRunStartBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $startA
    i32.store $0
    local.get $leftRunEndBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $endA
    i32.store $0
    local.get $startB
    local.set $startA
    local.get $endB
    local.set $endA
    local.get $k
    local.set $top
    br $while-continue|2
   end
  end
  local.get $top
  local.set $i|35
  loop $for-loop|4
   local.get $i|35
   i32.const 0
   i32.ne
   local.set $36
   local.get $36
   if
    local.get $leftRunStartBuf
    local.get $i|35
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $start|37
    local.get $start|37
    i32.const -1
    i32.ne
    if
     local.get $ptr
     local.get $start|37
     local.get $leftRunEndBuf
     local.get $i|35
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 1
     i32.add
     local.get $hi
     local.get $buffer
     local.get $comparator
     call $~lib/util/sort/mergeRuns<i16>
    end
    local.get $i|35
    i32.const 1
    i32.sub
    local.set $i|35
    br $for-loop|4
   end
  end
  local.get $buffer
  call $~lib/rt/tlsf/__free
  local.get $leftRunStartBuf
  call $~lib/rt/tlsf/__free
 )
 (func $~lib/typedarray/Int16Array#sort (type $i32_i32_=>_i32) (param $this i32) (param $comparator i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Int16Array#get:length
  local.get $comparator
  call $~lib/util/sort/SORT<i16>
  local.get $this
 )
 (func $~lib/util/sort/COMPARATOR<i16>~anonymous|0 (type $i32_i32_=>_i32) (param $a i32) (param $b i32) (result i32)
  local.get $a
  i32.extend16_s
  local.get $b
  i32.extend16_s
  i32.sub
 )
 (func $std/typedarray/testArraySort<~lib/typedarray/Int16Array,i16>~anonymous|0 (type $i32_i32_=>_i32) (param $a i32) (param $b i32) (result i32)
  local.get $b
  i32.extend16_s
  local.get $a
  i32.extend16_s
  i32.gt_s
  local.get $b
  i32.extend16_s
  local.get $a
  i32.extend16_s
  i32.lt_s
  i32.sub
 )
 (func $~lib/util/sort/insertionSort<u16> (type $i32_i32_i32_i32_i32_=>_none) (param $ptr i32) (param $left i32) (param $right i32) (param $presorted i32) (param $comparator i32)
  (local $range i32)
  (local $i i32)
  (local $7 i32)
  (local $a i32)
  (local $b i32)
  (local $min i32)
  (local $max i32)
  (local $j i32)
  (local $13 i32)
  (local $14 i32)
  i32.const 0
  i32.const 1
  i32.ge_s
  drop
  local.get $right
  local.get $left
  i32.sub
  i32.const 1
  i32.add
  local.set $range
  local.get $left
  local.get $range
  i32.const 1
  i32.and
  local.get $presorted
  local.get $range
  local.get $presorted
  i32.sub
  i32.const 1
  i32.and
  i32.sub
  local.get $presorted
  i32.const 0
  i32.eq
  select
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $right
   i32.le_s
   local.set $7
   local.get $7
   if
    local.get $ptr
    local.get $i
    i32.const 1
    i32.shl
    i32.add
    i32.load16_u $0
    local.set $a
    local.get $ptr
    local.get $i
    i32.const 1
    i32.shl
    i32.add
    i32.load16_u $0 offset=2
    local.set $b
    local.get $b
    local.set $min
    local.get $a
    local.set $max
    local.get $a
    local.get $b
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.le_s
    if
     local.get $a
     local.set $min
     local.get $b
     local.set $max
    end
    local.get $i
    i32.const 1
    i32.sub
    local.set $j
    block $while-break|1
     loop $while-continue|1
      local.get $j
      local.get $left
      i32.ge_s
      local.set $13
      local.get $13
      if
       local.get $ptr
       local.get $j
       i32.const 1
       i32.shl
       i32.add
       i32.load16_u $0
       local.set $a
       local.get $a
       local.get $max
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $j
        i32.const 1
        i32.shl
        i32.add
        local.get $a
        i32.store16 $0 offset=4
        local.get $j
        i32.const 1
        i32.sub
        local.set $j
       else
        br $while-break|1
       end
       br $while-continue|1
      end
     end
    end
    local.get $ptr
    local.get $j
    i32.const 1
    i32.shl
    i32.add
    local.get $max
    i32.store16 $0 offset=4
    block $while-break|2
     loop $while-continue|2
      local.get $j
      local.get $left
      i32.ge_s
      local.set $14
      local.get $14
      if
       local.get $ptr
       local.get $j
       i32.const 1
       i32.shl
       i32.add
       i32.load16_u $0
       local.set $a
       local.get $a
       local.get $min
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $j
        i32.const 1
        i32.shl
        i32.add
        local.get $a
        i32.store16 $0 offset=2
        local.get $j
        i32.const 1
        i32.sub
        local.set $j
       else
        br $while-break|2
       end
       br $while-continue|2
      end
     end
    end
    local.get $ptr
    local.get $j
    i32.const 1
    i32.shl
    i32.add
    local.get $min
    i32.store16 $0 offset=2
    local.get $i
    i32.const 2
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/util/sort/extendRunRight<u16> (type $i32_i32_i32_i32_=>_i32) (param $ptr i32) (param $i i32) (param $right i32) (param $comparator i32) (result i32)
  (local $j i32)
  (local $5 i32)
  (local $k i32)
  (local $7 i32)
  (local $tmp i32)
  (local $9 i32)
  local.get $i
  local.get $right
  i32.eq
  if
   local.get $i
   return
  end
  local.get $i
  local.set $j
  local.get $ptr
  local.get $j
  i32.const 1
  i32.shl
  i32.add
  i32.load16_u $0
  local.get $ptr
  local.get $j
  i32.const 1
  i32.add
  local.tee $j
  i32.const 1
  i32.shl
  i32.add
  i32.load16_u $0
  i32.const 2
  global.set $~argumentsLength
  local.get $comparator
  i32.load $0
  call_indirect $0 (type $i32_i32_=>_i32)
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 1
     i32.shl
     i32.add
     i32.load16_u $0 offset=2
     local.get $ptr
     local.get $j
     i32.const 1
     i32.shl
     i32.add
     i32.load16_u $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 31
     i32.shr_u
    else
     i32.const 0
    end
    local.set $5
    local.get $5
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|0
    end
   end
   local.get $j
   local.set $k
   loop $while-continue|1
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     local.get $ptr
     local.get $i
     i32.const 1
     i32.shl
     i32.add
     i32.load16_u $0
     local.set $tmp
     local.get $ptr
     local.get $i
     i32.const 1
     i32.shl
     i32.add
     local.get $ptr
     local.get $k
     i32.const 1
     i32.shl
     i32.add
     i32.load16_u $0
     i32.store16 $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     local.get $ptr
     local.get $k
     i32.const 1
     i32.shl
     i32.add
     local.get $tmp
     i32.store16 $0
     local.get $k
     i32.const 1
     i32.sub
     local.set $k
     br $while-continue|1
    end
   end
  else
   loop $while-continue|2
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 1
     i32.shl
     i32.add
     i32.load16_u $0 offset=2
     local.get $ptr
     local.get $j
     i32.const 1
     i32.shl
     i32.add
     i32.load16_u $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.ge_s
    else
     i32.const 0
    end
    local.set $9
    local.get $9
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|2
    end
   end
  end
  local.get $j
 )
 (func $~lib/util/sort/mergeRuns<u16> (type $i32_i32_i32_i32_i32_i32_=>_none) (param $ptr i32) (param $l i32) (param $m i32) (param $r i32) (param $buffer i32) (param $comparator i32)
  (local $i i32)
  (local $j i32)
  (local $t i32)
  (local $9 i32)
  (local $10 i32)
  (local $k i32)
  (local $12 i32)
  (local $a i32)
  (local $b i32)
  local.get $m
  i32.const 1
  i32.sub
  local.set $m
  local.get $r
  local.get $m
  i32.add
  local.set $t
  local.get $m
  i32.const 1
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $l
   i32.gt_s
   local.set $9
   local.get $9
   if
    local.get $buffer
    local.get $i
    i32.const 1
    i32.sub
    i32.const 1
    i32.shl
    i32.add
    local.get $ptr
    local.get $i
    i32.const 1
    i32.sub
    i32.const 1
    i32.shl
    i32.add
    i32.load16_u $0
    i32.store16 $0
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  local.get $m
  local.set $j
  loop $for-loop|1
   local.get $j
   local.get $r
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $buffer
    local.get $t
    local.get $j
    i32.sub
    i32.const 1
    i32.shl
    i32.add
    local.get $ptr
    local.get $j
    i32.const 1
    i32.shl
    i32.add
    i32.load16_u $0 offset=2
    i32.store16 $0
    local.get $j
    i32.const 1
    i32.add
    local.set $j
    br $for-loop|1
   end
  end
  local.get $l
  local.set $k
  loop $for-loop|2
   local.get $k
   local.get $r
   i32.le_s
   local.set $12
   local.get $12
   if
    local.get $buffer
    local.get $j
    i32.const 1
    i32.shl
    i32.add
    i32.load16_u $0
    local.set $a
    local.get $buffer
    local.get $i
    i32.const 1
    i32.shl
    i32.add
    i32.load16_u $0
    local.set $b
    local.get $a
    local.get $b
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.lt_s
    if
     local.get $ptr
     local.get $k
     i32.const 1
     i32.shl
     i32.add
     local.get $a
     i32.store16 $0
     local.get $j
     i32.const 1
     i32.sub
     local.set $j
    else
     local.get $ptr
     local.get $k
     i32.const 1
     i32.shl
     i32.add
     local.get $b
     i32.store16 $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
    end
    local.get $k
    i32.const 1
    i32.add
    local.set $k
    br $for-loop|2
   end
  end
 )
 (func $~lib/util/sort/SORT<u16> (type $i32_i32_i32_=>_none) (param $ptr i32) (param $len i32) (param $comparator i32)
  (local $3 i32)
  (local $a i32)
  (local $b i32)
  (local $c i32)
  (local $a|7 i32)
  (local $b|8 i32)
  (local $c|9 i32)
  (local $n i32)
  (local $lgPlus2 i32)
  (local $lgPlus2Size i32)
  (local $leftRunStartBuf i32)
  (local $leftRunEndBuf i32)
  (local $i i32)
  (local $16 i32)
  (local $buffer i32)
  (local $hi i32)
  (local $endA i32)
  (local $lenA i32)
  (local $21 i32)
  (local $22 i32)
  (local $top i32)
  (local $startA i32)
  (local $25 i32)
  (local $startB i32)
  (local $endB i32)
  (local $lenB i32)
  (local $29 i32)
  (local $30 i32)
  (local $k i32)
  (local $i|32 i32)
  (local $33 i32)
  (local $start i32)
  (local $i|35 i32)
  (local $36 i32)
  (local $start|37 i32)
  local.get $len
  i32.const 48
  i32.le_s
  if
   local.get $len
   i32.const 1
   i32.le_s
   if
    return
   end
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   block $break|0
    block $case1|0
     block $case0|0
      local.get $len
      local.set $3
      local.get $3
      i32.const 3
      i32.eq
      br_if $case0|0
      local.get $3
      i32.const 2
      i32.eq
      br_if $case1|0
      br $break|0
     end
     local.get $ptr
     i32.load16_u $0
     local.set $a
     local.get $ptr
     i32.load16_u $0 offset=2
     local.set $b
     local.get $a
     local.get $b
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $c
     local.get $ptr
     local.get $b
     local.get $a
     local.get $c
     select
     i32.store16 $0
     local.get $a
     local.get $b
     local.get $c
     select
     local.set $a
     local.get $ptr
     i32.load16_u $0 offset=4
     local.set $b
     local.get $a
     local.get $b
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $c
     local.get $ptr
     local.get $b
     local.get $a
     local.get $c
     select
     i32.store16 $0 offset=2
     local.get $ptr
     local.get $a
     local.get $b
     local.get $c
     select
     i32.store16 $0 offset=4
    end
    local.get $ptr
    i32.load16_u $0
    local.set $a|7
    local.get $ptr
    i32.load16_u $0 offset=2
    local.set $b|8
    local.get $a|7
    local.get $b|8
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.gt_s
    local.set $c|9
    local.get $ptr
    local.get $b|8
    local.get $a|7
    local.get $c|9
    select
    i32.store16 $0
    local.get $ptr
    local.get $a|7
    local.get $b|8
    local.get $c|9
    select
    i32.store16 $0 offset=2
    return
   end
   local.get $ptr
   i32.const 0
   local.get $len
   i32.const 1
   i32.sub
   i32.const 0
   local.get $comparator
   call $~lib/util/sort/insertionSort<u16>
   return
  end
  local.get $len
  local.set $n
  i32.const 31
  local.get $n
  i32.clz
  i32.sub
  i32.const 2
  i32.add
  local.set $lgPlus2
  local.get $lgPlus2
  i32.const 2
  i32.shl
  local.set $lgPlus2Size
  local.get $lgPlus2Size
  i32.const 1
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $leftRunStartBuf
  local.get $leftRunStartBuf
  local.get $lgPlus2Size
  i32.add
  local.set $leftRunEndBuf
  i32.const 0
  local.set $i
  loop $for-loop|1
   local.get $i
   local.get $lgPlus2
   i32.lt_u
   local.set $16
   local.get $16
   if
    local.get $leftRunStartBuf
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.const -1
    i32.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|1
   end
  end
  local.get $len
  i32.const 1
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $buffer
  local.get $len
  i32.const 1
  i32.sub
  local.set $hi
  local.get $ptr
  i32.const 0
  local.get $hi
  local.get $comparator
  call $~lib/util/sort/extendRunRight<u16>
  local.set $endA
  local.get $endA
  i32.const 1
  i32.add
  local.set $lenA
  local.get $lenA
  i32.const 32
  i32.lt_s
  if
   local.get $hi
   local.tee $21
   i32.const 32
   i32.const 1
   i32.sub
   local.tee $22
   local.get $21
   local.get $22
   i32.lt_s
   select
   local.set $endA
   local.get $ptr
   i32.const 0
   local.get $endA
   local.get $lenA
   local.get $comparator
   call $~lib/util/sort/insertionSort<u16>
  end
  i32.const 0
  local.set $top
  i32.const 0
  local.set $startA
  loop $while-continue|2
   local.get $endA
   local.get $hi
   i32.lt_s
   local.set $25
   local.get $25
   if
    local.get $endA
    i32.const 1
    i32.add
    local.set $startB
    local.get $ptr
    local.get $startB
    local.get $hi
    local.get $comparator
    call $~lib/util/sort/extendRunRight<u16>
    local.set $endB
    local.get $endB
    local.get $startB
    i32.sub
    i32.const 1
    i32.add
    local.set $lenB
    local.get $lenB
    i32.const 32
    i32.lt_s
    if
     local.get $hi
     local.tee $29
     local.get $startB
     i32.const 32
     i32.add
     i32.const 1
     i32.sub
     local.tee $30
     local.get $29
     local.get $30
     i32.lt_s
     select
     local.set $endB
     local.get $ptr
     local.get $startB
     local.get $endB
     local.get $lenB
     local.get $comparator
     call $~lib/util/sort/insertionSort<u16>
    end
    i32.const 0
    local.get $hi
    local.get $startA
    local.get $startB
    local.get $endB
    call $~lib/util/sort/nodePower
    local.set $k
    local.get $top
    local.set $i|32
    loop $for-loop|3
     local.get $i|32
     local.get $k
     i32.gt_u
     local.set $33
     local.get $33
     if
      local.get $leftRunStartBuf
      local.get $i|32
      i32.const 2
      i32.shl
      i32.add
      i32.load $0
      local.set $start
      local.get $start
      i32.const -1
      i32.ne
      if
       local.get $ptr
       local.get $start
       local.get $leftRunEndBuf
       local.get $i|32
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       i32.const 1
       i32.add
       local.get $endA
       local.get $buffer
       local.get $comparator
       call $~lib/util/sort/mergeRuns<u16>
       local.get $start
       local.set $startA
       local.get $leftRunStartBuf
       local.get $i|32
       i32.const 2
       i32.shl
       i32.add
       i32.const -1
       i32.store $0
      end
      local.get $i|32
      i32.const 1
      i32.sub
      local.set $i|32
      br $for-loop|3
     end
    end
    local.get $leftRunStartBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $startA
    i32.store $0
    local.get $leftRunEndBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $endA
    i32.store $0
    local.get $startB
    local.set $startA
    local.get $endB
    local.set $endA
    local.get $k
    local.set $top
    br $while-continue|2
   end
  end
  local.get $top
  local.set $i|35
  loop $for-loop|4
   local.get $i|35
   i32.const 0
   i32.ne
   local.set $36
   local.get $36
   if
    local.get $leftRunStartBuf
    local.get $i|35
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $start|37
    local.get $start|37
    i32.const -1
    i32.ne
    if
     local.get $ptr
     local.get $start|37
     local.get $leftRunEndBuf
     local.get $i|35
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 1
     i32.add
     local.get $hi
     local.get $buffer
     local.get $comparator
     call $~lib/util/sort/mergeRuns<u16>
    end
    local.get $i|35
    i32.const 1
    i32.sub
    local.set $i|35
    br $for-loop|4
   end
  end
  local.get $buffer
  call $~lib/rt/tlsf/__free
  local.get $leftRunStartBuf
  call $~lib/rt/tlsf/__free
 )
 (func $~lib/typedarray/Uint16Array#sort (type $i32_i32_=>_i32) (param $this i32) (param $comparator i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Uint16Array#get:length
  local.get $comparator
  call $~lib/util/sort/SORT<u16>
  local.get $this
 )
 (func $~lib/util/sort/COMPARATOR<u16>~anonymous|0 (type $i32_i32_=>_i32) (param $a i32) (param $b i32) (result i32)
  local.get $a
  i32.const 65535
  i32.and
  local.get $b
  i32.const 65535
  i32.and
  i32.gt_u
  local.get $a
  i32.const 65535
  i32.and
  local.get $b
  i32.const 65535
  i32.and
  i32.lt_u
  i32.sub
 )
 (func $std/typedarray/testArraySort<~lib/typedarray/Uint16Array,u16>~anonymous|0 (type $i32_i32_=>_i32) (param $a i32) (param $b i32) (result i32)
  local.get $b
  i32.const 65535
  i32.and
  local.get $a
  i32.const 65535
  i32.and
  i32.gt_u
  local.get $b
  i32.const 65535
  i32.and
  local.get $a
  i32.const 65535
  i32.and
  i32.lt_u
  i32.sub
 )
 (func $~lib/util/sort/insertionSort<i32> (type $i32_i32_i32_i32_i32_=>_none) (param $ptr i32) (param $left i32) (param $right i32) (param $presorted i32) (param $comparator i32)
  (local $range i32)
  (local $i i32)
  (local $7 i32)
  (local $a i32)
  (local $b i32)
  (local $min i32)
  (local $max i32)
  (local $j i32)
  (local $13 i32)
  (local $14 i32)
  i32.const 0
  i32.const 1
  i32.ge_s
  drop
  local.get $right
  local.get $left
  i32.sub
  i32.const 1
  i32.add
  local.set $range
  local.get $left
  local.get $range
  i32.const 1
  i32.and
  local.get $presorted
  local.get $range
  local.get $presorted
  i32.sub
  i32.const 1
  i32.and
  i32.sub
  local.get $presorted
  i32.const 0
  i32.eq
  select
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $right
   i32.le_s
   local.set $7
   local.get $7
   if
    local.get $ptr
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $a
    local.get $ptr
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0 offset=4
    local.set $b
    local.get $b
    local.set $min
    local.get $a
    local.set $max
    local.get $a
    local.get $b
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.le_s
    if
     local.get $a
     local.set $min
     local.get $b
     local.set $max
    end
    local.get $i
    i32.const 1
    i32.sub
    local.set $j
    block $while-break|1
     loop $while-continue|1
      local.get $j
      local.get $left
      i32.ge_s
      local.set $13
      local.get $13
      if
       local.get $ptr
       local.get $j
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       local.set $a
       local.get $a
       local.get $max
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $j
        i32.const 2
        i32.shl
        i32.add
        local.get $a
        i32.store $0 offset=8
        local.get $j
        i32.const 1
        i32.sub
        local.set $j
       else
        br $while-break|1
       end
       br $while-continue|1
      end
     end
    end
    local.get $ptr
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    local.get $max
    i32.store $0 offset=8
    block $while-break|2
     loop $while-continue|2
      local.get $j
      local.get $left
      i32.ge_s
      local.set $14
      local.get $14
      if
       local.get $ptr
       local.get $j
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       local.set $a
       local.get $a
       local.get $min
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $j
        i32.const 2
        i32.shl
        i32.add
        local.get $a
        i32.store $0 offset=4
        local.get $j
        i32.const 1
        i32.sub
        local.set $j
       else
        br $while-break|2
       end
       br $while-continue|2
      end
     end
    end
    local.get $ptr
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    local.get $min
    i32.store $0 offset=4
    local.get $i
    i32.const 2
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/util/sort/extendRunRight<i32> (type $i32_i32_i32_i32_=>_i32) (param $ptr i32) (param $i i32) (param $right i32) (param $comparator i32) (result i32)
  (local $j i32)
  (local $5 i32)
  (local $k i32)
  (local $7 i32)
  (local $tmp i32)
  (local $9 i32)
  local.get $i
  local.get $right
  i32.eq
  if
   local.get $i
   return
  end
  local.get $i
  local.set $j
  local.get $ptr
  local.get $j
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.get $ptr
  local.get $j
  i32.const 1
  i32.add
  local.tee $j
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  i32.const 2
  global.set $~argumentsLength
  local.get $comparator
  i32.load $0
  call_indirect $0 (type $i32_i32_=>_i32)
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     i32.load $0 offset=4
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 31
     i32.shr_u
    else
     i32.const 0
    end
    local.set $5
    local.get $5
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|0
    end
   end
   local.get $j
   local.set $k
   loop $while-continue|1
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     local.get $ptr
     local.get $i
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.set $tmp
     local.get $ptr
     local.get $i
     i32.const 2
     i32.shl
     i32.add
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     local.get $tmp
     i32.store $0
     local.get $k
     i32.const 1
     i32.sub
     local.set $k
     br $while-continue|1
    end
   end
  else
   loop $while-continue|2
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     i32.load $0 offset=4
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.ge_s
    else
     i32.const 0
    end
    local.set $9
    local.get $9
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|2
    end
   end
  end
  local.get $j
 )
 (func $~lib/util/sort/mergeRuns<i32> (type $i32_i32_i32_i32_i32_i32_=>_none) (param $ptr i32) (param $l i32) (param $m i32) (param $r i32) (param $buffer i32) (param $comparator i32)
  (local $i i32)
  (local $j i32)
  (local $t i32)
  (local $9 i32)
  (local $10 i32)
  (local $k i32)
  (local $12 i32)
  (local $a i32)
  (local $b i32)
  local.get $m
  i32.const 1
  i32.sub
  local.set $m
  local.get $r
  local.get $m
  i32.add
  local.set $t
  local.get $m
  i32.const 1
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $l
   i32.gt_s
   local.set $9
   local.get $9
   if
    local.get $buffer
    local.get $i
    i32.const 1
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    local.get $ptr
    local.get $i
    i32.const 1
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    i32.store $0
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  local.get $m
  local.set $j
  loop $for-loop|1
   local.get $j
   local.get $r
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $buffer
    local.get $t
    local.get $j
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    local.get $ptr
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    i32.load $0 offset=4
    i32.store $0
    local.get $j
    i32.const 1
    i32.add
    local.set $j
    br $for-loop|1
   end
  end
  local.get $l
  local.set $k
  loop $for-loop|2
   local.get $k
   local.get $r
   i32.le_s
   local.set $12
   local.get $12
   if
    local.get $buffer
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $a
    local.get $buffer
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $b
    local.get $a
    local.get $b
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.lt_s
    if
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     local.get $a
     i32.store $0
     local.get $j
     i32.const 1
     i32.sub
     local.set $j
    else
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     local.get $b
     i32.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
    end
    local.get $k
    i32.const 1
    i32.add
    local.set $k
    br $for-loop|2
   end
  end
 )
 (func $~lib/util/sort/SORT<i32> (type $i32_i32_i32_=>_none) (param $ptr i32) (param $len i32) (param $comparator i32)
  (local $3 i32)
  (local $a i32)
  (local $b i32)
  (local $c i32)
  (local $a|7 i32)
  (local $b|8 i32)
  (local $c|9 i32)
  (local $n i32)
  (local $lgPlus2 i32)
  (local $lgPlus2Size i32)
  (local $leftRunStartBuf i32)
  (local $leftRunEndBuf i32)
  (local $i i32)
  (local $16 i32)
  (local $buffer i32)
  (local $hi i32)
  (local $endA i32)
  (local $lenA i32)
  (local $21 i32)
  (local $22 i32)
  (local $top i32)
  (local $startA i32)
  (local $25 i32)
  (local $startB i32)
  (local $endB i32)
  (local $lenB i32)
  (local $29 i32)
  (local $30 i32)
  (local $k i32)
  (local $i|32 i32)
  (local $33 i32)
  (local $start i32)
  (local $i|35 i32)
  (local $36 i32)
  (local $start|37 i32)
  local.get $len
  i32.const 48
  i32.le_s
  if
   local.get $len
   i32.const 1
   i32.le_s
   if
    return
   end
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   block $break|0
    block $case1|0
     block $case0|0
      local.get $len
      local.set $3
      local.get $3
      i32.const 3
      i32.eq
      br_if $case0|0
      local.get $3
      i32.const 2
      i32.eq
      br_if $case1|0
      br $break|0
     end
     local.get $ptr
     i32.load $0
     local.set $a
     local.get $ptr
     i32.load $0 offset=4
     local.set $b
     local.get $a
     local.get $b
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $c
     local.get $ptr
     local.get $b
     local.get $a
     local.get $c
     select
     i32.store $0
     local.get $a
     local.get $b
     local.get $c
     select
     local.set $a
     local.get $ptr
     i32.load $0 offset=8
     local.set $b
     local.get $a
     local.get $b
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $c
     local.get $ptr
     local.get $b
     local.get $a
     local.get $c
     select
     i32.store $0 offset=4
     local.get $ptr
     local.get $a
     local.get $b
     local.get $c
     select
     i32.store $0 offset=8
    end
    local.get $ptr
    i32.load $0
    local.set $a|7
    local.get $ptr
    i32.load $0 offset=4
    local.set $b|8
    local.get $a|7
    local.get $b|8
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.gt_s
    local.set $c|9
    local.get $ptr
    local.get $b|8
    local.get $a|7
    local.get $c|9
    select
    i32.store $0
    local.get $ptr
    local.get $a|7
    local.get $b|8
    local.get $c|9
    select
    i32.store $0 offset=4
    return
   end
   local.get $ptr
   i32.const 0
   local.get $len
   i32.const 1
   i32.sub
   i32.const 0
   local.get $comparator
   call $~lib/util/sort/insertionSort<i32>
   return
  end
  local.get $len
  local.set $n
  i32.const 31
  local.get $n
  i32.clz
  i32.sub
  i32.const 2
  i32.add
  local.set $lgPlus2
  local.get $lgPlus2
  i32.const 2
  i32.shl
  local.set $lgPlus2Size
  local.get $lgPlus2Size
  i32.const 1
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $leftRunStartBuf
  local.get $leftRunStartBuf
  local.get $lgPlus2Size
  i32.add
  local.set $leftRunEndBuf
  i32.const 0
  local.set $i
  loop $for-loop|1
   local.get $i
   local.get $lgPlus2
   i32.lt_u
   local.set $16
   local.get $16
   if
    local.get $leftRunStartBuf
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.const -1
    i32.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|1
   end
  end
  local.get $len
  i32.const 2
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $buffer
  local.get $len
  i32.const 1
  i32.sub
  local.set $hi
  local.get $ptr
  i32.const 0
  local.get $hi
  local.get $comparator
  call $~lib/util/sort/extendRunRight<i32>
  local.set $endA
  local.get $endA
  i32.const 1
  i32.add
  local.set $lenA
  local.get $lenA
  i32.const 32
  i32.lt_s
  if
   local.get $hi
   local.tee $21
   i32.const 32
   i32.const 1
   i32.sub
   local.tee $22
   local.get $21
   local.get $22
   i32.lt_s
   select
   local.set $endA
   local.get $ptr
   i32.const 0
   local.get $endA
   local.get $lenA
   local.get $comparator
   call $~lib/util/sort/insertionSort<i32>
  end
  i32.const 0
  local.set $top
  i32.const 0
  local.set $startA
  loop $while-continue|2
   local.get $endA
   local.get $hi
   i32.lt_s
   local.set $25
   local.get $25
   if
    local.get $endA
    i32.const 1
    i32.add
    local.set $startB
    local.get $ptr
    local.get $startB
    local.get $hi
    local.get $comparator
    call $~lib/util/sort/extendRunRight<i32>
    local.set $endB
    local.get $endB
    local.get $startB
    i32.sub
    i32.const 1
    i32.add
    local.set $lenB
    local.get $lenB
    i32.const 32
    i32.lt_s
    if
     local.get $hi
     local.tee $29
     local.get $startB
     i32.const 32
     i32.add
     i32.const 1
     i32.sub
     local.tee $30
     local.get $29
     local.get $30
     i32.lt_s
     select
     local.set $endB
     local.get $ptr
     local.get $startB
     local.get $endB
     local.get $lenB
     local.get $comparator
     call $~lib/util/sort/insertionSort<i32>
    end
    i32.const 0
    local.get $hi
    local.get $startA
    local.get $startB
    local.get $endB
    call $~lib/util/sort/nodePower
    local.set $k
    local.get $top
    local.set $i|32
    loop $for-loop|3
     local.get $i|32
     local.get $k
     i32.gt_u
     local.set $33
     local.get $33
     if
      local.get $leftRunStartBuf
      local.get $i|32
      i32.const 2
      i32.shl
      i32.add
      i32.load $0
      local.set $start
      local.get $start
      i32.const -1
      i32.ne
      if
       local.get $ptr
       local.get $start
       local.get $leftRunEndBuf
       local.get $i|32
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       i32.const 1
       i32.add
       local.get $endA
       local.get $buffer
       local.get $comparator
       call $~lib/util/sort/mergeRuns<i32>
       local.get $start
       local.set $startA
       local.get $leftRunStartBuf
       local.get $i|32
       i32.const 2
       i32.shl
       i32.add
       i32.const -1
       i32.store $0
      end
      local.get $i|32
      i32.const 1
      i32.sub
      local.set $i|32
      br $for-loop|3
     end
    end
    local.get $leftRunStartBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $startA
    i32.store $0
    local.get $leftRunEndBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $endA
    i32.store $0
    local.get $startB
    local.set $startA
    local.get $endB
    local.set $endA
    local.get $k
    local.set $top
    br $while-continue|2
   end
  end
  local.get $top
  local.set $i|35
  loop $for-loop|4
   local.get $i|35
   i32.const 0
   i32.ne
   local.set $36
   local.get $36
   if
    local.get $leftRunStartBuf
    local.get $i|35
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $start|37
    local.get $start|37
    i32.const -1
    i32.ne
    if
     local.get $ptr
     local.get $start|37
     local.get $leftRunEndBuf
     local.get $i|35
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 1
     i32.add
     local.get $hi
     local.get $buffer
     local.get $comparator
     call $~lib/util/sort/mergeRuns<i32>
    end
    local.get $i|35
    i32.const 1
    i32.sub
    local.set $i|35
    br $for-loop|4
   end
  end
  local.get $buffer
  call $~lib/rt/tlsf/__free
  local.get $leftRunStartBuf
  call $~lib/rt/tlsf/__free
 )
 (func $~lib/typedarray/Int32Array#sort (type $i32_i32_=>_i32) (param $this i32) (param $comparator i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Int32Array#get:length
  local.get $comparator
  call $~lib/util/sort/SORT<i32>
  local.get $this
 )
 (func $~lib/util/sort/COMPARATOR<i32>~anonymous|0 (type $i32_i32_=>_i32) (param $a i32) (param $b i32) (result i32)
  local.get $a
  local.get $b
  i32.sub
 )
 (func $std/typedarray/testArraySort<~lib/typedarray/Int32Array,i32>~anonymous|0 (type $i32_i32_=>_i32) (param $a i32) (param $b i32) (result i32)
  local.get $b
  local.get $a
  i32.gt_s
  local.get $b
  local.get $a
  i32.lt_s
  i32.sub
 )
 (func $~lib/util/sort/insertionSort<u32> (type $i32_i32_i32_i32_i32_=>_none) (param $ptr i32) (param $left i32) (param $right i32) (param $presorted i32) (param $comparator i32)
  (local $range i32)
  (local $i i32)
  (local $7 i32)
  (local $a i32)
  (local $b i32)
  (local $min i32)
  (local $max i32)
  (local $j i32)
  (local $13 i32)
  (local $14 i32)
  i32.const 0
  i32.const 1
  i32.ge_s
  drop
  local.get $right
  local.get $left
  i32.sub
  i32.const 1
  i32.add
  local.set $range
  local.get $left
  local.get $range
  i32.const 1
  i32.and
  local.get $presorted
  local.get $range
  local.get $presorted
  i32.sub
  i32.const 1
  i32.and
  i32.sub
  local.get $presorted
  i32.const 0
  i32.eq
  select
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $right
   i32.le_s
   local.set $7
   local.get $7
   if
    local.get $ptr
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $a
    local.get $ptr
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0 offset=4
    local.set $b
    local.get $b
    local.set $min
    local.get $a
    local.set $max
    local.get $a
    local.get $b
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.le_s
    if
     local.get $a
     local.set $min
     local.get $b
     local.set $max
    end
    local.get $i
    i32.const 1
    i32.sub
    local.set $j
    block $while-break|1
     loop $while-continue|1
      local.get $j
      local.get $left
      i32.ge_s
      local.set $13
      local.get $13
      if
       local.get $ptr
       local.get $j
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       local.set $a
       local.get $a
       local.get $max
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $j
        i32.const 2
        i32.shl
        i32.add
        local.get $a
        i32.store $0 offset=8
        local.get $j
        i32.const 1
        i32.sub
        local.set $j
       else
        br $while-break|1
       end
       br $while-continue|1
      end
     end
    end
    local.get $ptr
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    local.get $max
    i32.store $0 offset=8
    block $while-break|2
     loop $while-continue|2
      local.get $j
      local.get $left
      i32.ge_s
      local.set $14
      local.get $14
      if
       local.get $ptr
       local.get $j
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       local.set $a
       local.get $a
       local.get $min
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $j
        i32.const 2
        i32.shl
        i32.add
        local.get $a
        i32.store $0 offset=4
        local.get $j
        i32.const 1
        i32.sub
        local.set $j
       else
        br $while-break|2
       end
       br $while-continue|2
      end
     end
    end
    local.get $ptr
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    local.get $min
    i32.store $0 offset=4
    local.get $i
    i32.const 2
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/util/sort/extendRunRight<u32> (type $i32_i32_i32_i32_=>_i32) (param $ptr i32) (param $i i32) (param $right i32) (param $comparator i32) (result i32)
  (local $j i32)
  (local $5 i32)
  (local $k i32)
  (local $7 i32)
  (local $tmp i32)
  (local $9 i32)
  local.get $i
  local.get $right
  i32.eq
  if
   local.get $i
   return
  end
  local.get $i
  local.set $j
  local.get $ptr
  local.get $j
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.get $ptr
  local.get $j
  i32.const 1
  i32.add
  local.tee $j
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  i32.const 2
  global.set $~argumentsLength
  local.get $comparator
  i32.load $0
  call_indirect $0 (type $i32_i32_=>_i32)
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     i32.load $0 offset=4
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 31
     i32.shr_u
    else
     i32.const 0
    end
    local.set $5
    local.get $5
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|0
    end
   end
   local.get $j
   local.set $k
   loop $while-continue|1
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     local.get $ptr
     local.get $i
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.set $tmp
     local.get $ptr
     local.get $i
     i32.const 2
     i32.shl
     i32.add
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     local.get $tmp
     i32.store $0
     local.get $k
     i32.const 1
     i32.sub
     local.set $k
     br $while-continue|1
    end
   end
  else
   loop $while-continue|2
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     i32.load $0 offset=4
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.ge_s
    else
     i32.const 0
    end
    local.set $9
    local.get $9
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|2
    end
   end
  end
  local.get $j
 )
 (func $~lib/util/sort/mergeRuns<u32> (type $i32_i32_i32_i32_i32_i32_=>_none) (param $ptr i32) (param $l i32) (param $m i32) (param $r i32) (param $buffer i32) (param $comparator i32)
  (local $i i32)
  (local $j i32)
  (local $t i32)
  (local $9 i32)
  (local $10 i32)
  (local $k i32)
  (local $12 i32)
  (local $a i32)
  (local $b i32)
  local.get $m
  i32.const 1
  i32.sub
  local.set $m
  local.get $r
  local.get $m
  i32.add
  local.set $t
  local.get $m
  i32.const 1
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $l
   i32.gt_s
   local.set $9
   local.get $9
   if
    local.get $buffer
    local.get $i
    i32.const 1
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    local.get $ptr
    local.get $i
    i32.const 1
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    i32.store $0
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  local.get $m
  local.set $j
  loop $for-loop|1
   local.get $j
   local.get $r
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $buffer
    local.get $t
    local.get $j
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    local.get $ptr
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    i32.load $0 offset=4
    i32.store $0
    local.get $j
    i32.const 1
    i32.add
    local.set $j
    br $for-loop|1
   end
  end
  local.get $l
  local.set $k
  loop $for-loop|2
   local.get $k
   local.get $r
   i32.le_s
   local.set $12
   local.get $12
   if
    local.get $buffer
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $a
    local.get $buffer
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $b
    local.get $a
    local.get $b
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.lt_s
    if
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     local.get $a
     i32.store $0
     local.get $j
     i32.const 1
     i32.sub
     local.set $j
    else
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     local.get $b
     i32.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
    end
    local.get $k
    i32.const 1
    i32.add
    local.set $k
    br $for-loop|2
   end
  end
 )
 (func $~lib/util/sort/SORT<u32> (type $i32_i32_i32_=>_none) (param $ptr i32) (param $len i32) (param $comparator i32)
  (local $3 i32)
  (local $a i32)
  (local $b i32)
  (local $c i32)
  (local $a|7 i32)
  (local $b|8 i32)
  (local $c|9 i32)
  (local $n i32)
  (local $lgPlus2 i32)
  (local $lgPlus2Size i32)
  (local $leftRunStartBuf i32)
  (local $leftRunEndBuf i32)
  (local $i i32)
  (local $16 i32)
  (local $buffer i32)
  (local $hi i32)
  (local $endA i32)
  (local $lenA i32)
  (local $21 i32)
  (local $22 i32)
  (local $top i32)
  (local $startA i32)
  (local $25 i32)
  (local $startB i32)
  (local $endB i32)
  (local $lenB i32)
  (local $29 i32)
  (local $30 i32)
  (local $k i32)
  (local $i|32 i32)
  (local $33 i32)
  (local $start i32)
  (local $i|35 i32)
  (local $36 i32)
  (local $start|37 i32)
  local.get $len
  i32.const 48
  i32.le_s
  if
   local.get $len
   i32.const 1
   i32.le_s
   if
    return
   end
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   block $break|0
    block $case1|0
     block $case0|0
      local.get $len
      local.set $3
      local.get $3
      i32.const 3
      i32.eq
      br_if $case0|0
      local.get $3
      i32.const 2
      i32.eq
      br_if $case1|0
      br $break|0
     end
     local.get $ptr
     i32.load $0
     local.set $a
     local.get $ptr
     i32.load $0 offset=4
     local.set $b
     local.get $a
     local.get $b
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $c
     local.get $ptr
     local.get $b
     local.get $a
     local.get $c
     select
     i32.store $0
     local.get $a
     local.get $b
     local.get $c
     select
     local.set $a
     local.get $ptr
     i32.load $0 offset=8
     local.set $b
     local.get $a
     local.get $b
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $c
     local.get $ptr
     local.get $b
     local.get $a
     local.get $c
     select
     i32.store $0 offset=4
     local.get $ptr
     local.get $a
     local.get $b
     local.get $c
     select
     i32.store $0 offset=8
    end
    local.get $ptr
    i32.load $0
    local.set $a|7
    local.get $ptr
    i32.load $0 offset=4
    local.set $b|8
    local.get $a|7
    local.get $b|8
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.gt_s
    local.set $c|9
    local.get $ptr
    local.get $b|8
    local.get $a|7
    local.get $c|9
    select
    i32.store $0
    local.get $ptr
    local.get $a|7
    local.get $b|8
    local.get $c|9
    select
    i32.store $0 offset=4
    return
   end
   local.get $ptr
   i32.const 0
   local.get $len
   i32.const 1
   i32.sub
   i32.const 0
   local.get $comparator
   call $~lib/util/sort/insertionSort<u32>
   return
  end
  local.get $len
  local.set $n
  i32.const 31
  local.get $n
  i32.clz
  i32.sub
  i32.const 2
  i32.add
  local.set $lgPlus2
  local.get $lgPlus2
  i32.const 2
  i32.shl
  local.set $lgPlus2Size
  local.get $lgPlus2Size
  i32.const 1
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $leftRunStartBuf
  local.get $leftRunStartBuf
  local.get $lgPlus2Size
  i32.add
  local.set $leftRunEndBuf
  i32.const 0
  local.set $i
  loop $for-loop|1
   local.get $i
   local.get $lgPlus2
   i32.lt_u
   local.set $16
   local.get $16
   if
    local.get $leftRunStartBuf
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.const -1
    i32.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|1
   end
  end
  local.get $len
  i32.const 2
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $buffer
  local.get $len
  i32.const 1
  i32.sub
  local.set $hi
  local.get $ptr
  i32.const 0
  local.get $hi
  local.get $comparator
  call $~lib/util/sort/extendRunRight<u32>
  local.set $endA
  local.get $endA
  i32.const 1
  i32.add
  local.set $lenA
  local.get $lenA
  i32.const 32
  i32.lt_s
  if
   local.get $hi
   local.tee $21
   i32.const 32
   i32.const 1
   i32.sub
   local.tee $22
   local.get $21
   local.get $22
   i32.lt_s
   select
   local.set $endA
   local.get $ptr
   i32.const 0
   local.get $endA
   local.get $lenA
   local.get $comparator
   call $~lib/util/sort/insertionSort<u32>
  end
  i32.const 0
  local.set $top
  i32.const 0
  local.set $startA
  loop $while-continue|2
   local.get $endA
   local.get $hi
   i32.lt_s
   local.set $25
   local.get $25
   if
    local.get $endA
    i32.const 1
    i32.add
    local.set $startB
    local.get $ptr
    local.get $startB
    local.get $hi
    local.get $comparator
    call $~lib/util/sort/extendRunRight<u32>
    local.set $endB
    local.get $endB
    local.get $startB
    i32.sub
    i32.const 1
    i32.add
    local.set $lenB
    local.get $lenB
    i32.const 32
    i32.lt_s
    if
     local.get $hi
     local.tee $29
     local.get $startB
     i32.const 32
     i32.add
     i32.const 1
     i32.sub
     local.tee $30
     local.get $29
     local.get $30
     i32.lt_s
     select
     local.set $endB
     local.get $ptr
     local.get $startB
     local.get $endB
     local.get $lenB
     local.get $comparator
     call $~lib/util/sort/insertionSort<u32>
    end
    i32.const 0
    local.get $hi
    local.get $startA
    local.get $startB
    local.get $endB
    call $~lib/util/sort/nodePower
    local.set $k
    local.get $top
    local.set $i|32
    loop $for-loop|3
     local.get $i|32
     local.get $k
     i32.gt_u
     local.set $33
     local.get $33
     if
      local.get $leftRunStartBuf
      local.get $i|32
      i32.const 2
      i32.shl
      i32.add
      i32.load $0
      local.set $start
      local.get $start
      i32.const -1
      i32.ne
      if
       local.get $ptr
       local.get $start
       local.get $leftRunEndBuf
       local.get $i|32
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       i32.const 1
       i32.add
       local.get $endA
       local.get $buffer
       local.get $comparator
       call $~lib/util/sort/mergeRuns<u32>
       local.get $start
       local.set $startA
       local.get $leftRunStartBuf
       local.get $i|32
       i32.const 2
       i32.shl
       i32.add
       i32.const -1
       i32.store $0
      end
      local.get $i|32
      i32.const 1
      i32.sub
      local.set $i|32
      br $for-loop|3
     end
    end
    local.get $leftRunStartBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $startA
    i32.store $0
    local.get $leftRunEndBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $endA
    i32.store $0
    local.get $startB
    local.set $startA
    local.get $endB
    local.set $endA
    local.get $k
    local.set $top
    br $while-continue|2
   end
  end
  local.get $top
  local.set $i|35
  loop $for-loop|4
   local.get $i|35
   i32.const 0
   i32.ne
   local.set $36
   local.get $36
   if
    local.get $leftRunStartBuf
    local.get $i|35
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $start|37
    local.get $start|37
    i32.const -1
    i32.ne
    if
     local.get $ptr
     local.get $start|37
     local.get $leftRunEndBuf
     local.get $i|35
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 1
     i32.add
     local.get $hi
     local.get $buffer
     local.get $comparator
     call $~lib/util/sort/mergeRuns<u32>
    end
    local.get $i|35
    i32.const 1
    i32.sub
    local.set $i|35
    br $for-loop|4
   end
  end
  local.get $buffer
  call $~lib/rt/tlsf/__free
  local.get $leftRunStartBuf
  call $~lib/rt/tlsf/__free
 )
 (func $~lib/typedarray/Uint32Array#sort (type $i32_i32_=>_i32) (param $this i32) (param $comparator i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Uint32Array#get:length
  local.get $comparator
  call $~lib/util/sort/SORT<u32>
  local.get $this
 )
 (func $~lib/util/sort/COMPARATOR<u32>~anonymous|0 (type $i32_i32_=>_i32) (param $a i32) (param $b i32) (result i32)
  local.get $a
  local.get $b
  i32.gt_u
  local.get $a
  local.get $b
  i32.lt_u
  i32.sub
 )
 (func $std/typedarray/testArraySort<~lib/typedarray/Uint32Array,u32>~anonymous|0 (type $i32_i32_=>_i32) (param $a i32) (param $b i32) (result i32)
  local.get $b
  local.get $a
  i32.gt_u
  local.get $b
  local.get $a
  i32.lt_u
  i32.sub
 )
 (func $~lib/util/sort/insertionSort<i64> (type $i32_i32_i32_i32_i32_=>_none) (param $ptr i32) (param $left i32) (param $right i32) (param $presorted i32) (param $comparator i32)
  (local $range i32)
  (local $i i32)
  (local $7 i32)
  (local $a i64)
  (local $b i64)
  (local $min i64)
  (local $max i64)
  (local $j i32)
  (local $13 i32)
  (local $14 i32)
  i32.const 0
  i32.const 1
  i32.ge_s
  drop
  local.get $right
  local.get $left
  i32.sub
  i32.const 1
  i32.add
  local.set $range
  local.get $left
  local.get $range
  i32.const 1
  i32.and
  local.get $presorted
  local.get $range
  local.get $presorted
  i32.sub
  i32.const 1
  i32.and
  i32.sub
  local.get $presorted
  i32.const 0
  i32.eq
  select
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $right
   i32.le_s
   local.set $7
   local.get $7
   if
    local.get $ptr
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    local.set $a
    local.get $ptr
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    i64.load $0 offset=8
    local.set $b
    local.get $b
    local.set $min
    local.get $a
    local.set $max
    local.get $a
    local.get $b
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i64_i64_=>_i32)
    i32.const 0
    i32.le_s
    if
     local.get $a
     local.set $min
     local.get $b
     local.set $max
    end
    local.get $i
    i32.const 1
    i32.sub
    local.set $j
    block $while-break|1
     loop $while-continue|1
      local.get $j
      local.get $left
      i32.ge_s
      local.set $13
      local.get $13
      if
       local.get $ptr
       local.get $j
       i32.const 3
       i32.shl
       i32.add
       i64.load $0
       local.set $a
       local.get $a
       local.get $max
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $i64_i64_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $j
        i32.const 3
        i32.shl
        i32.add
        local.get $a
        i64.store $0 offset=16
        local.get $j
        i32.const 1
        i32.sub
        local.set $j
       else
        br $while-break|1
       end
       br $while-continue|1
      end
     end
    end
    local.get $ptr
    local.get $j
    i32.const 3
    i32.shl
    i32.add
    local.get $max
    i64.store $0 offset=16
    block $while-break|2
     loop $while-continue|2
      local.get $j
      local.get $left
      i32.ge_s
      local.set $14
      local.get $14
      if
       local.get $ptr
       local.get $j
       i32.const 3
       i32.shl
       i32.add
       i64.load $0
       local.set $a
       local.get $a
       local.get $min
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $i64_i64_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $j
        i32.const 3
        i32.shl
        i32.add
        local.get $a
        i64.store $0 offset=8
        local.get $j
        i32.const 1
        i32.sub
        local.set $j
       else
        br $while-break|2
       end
       br $while-continue|2
      end
     end
    end
    local.get $ptr
    local.get $j
    i32.const 3
    i32.shl
    i32.add
    local.get $min
    i64.store $0 offset=8
    local.get $i
    i32.const 2
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/util/sort/extendRunRight<i64> (type $i32_i32_i32_i32_=>_i32) (param $ptr i32) (param $i i32) (param $right i32) (param $comparator i32) (result i32)
  (local $j i32)
  (local $5 i32)
  (local $k i32)
  (local $7 i32)
  (local $tmp i64)
  (local $9 i32)
  local.get $i
  local.get $right
  i32.eq
  if
   local.get $i
   return
  end
  local.get $i
  local.set $j
  local.get $ptr
  local.get $j
  i32.const 3
  i32.shl
  i32.add
  i64.load $0
  local.get $ptr
  local.get $j
  i32.const 1
  i32.add
  local.tee $j
  i32.const 3
  i32.shl
  i32.add
  i64.load $0
  i32.const 2
  global.set $~argumentsLength
  local.get $comparator
  i32.load $0
  call_indirect $0 (type $i64_i64_=>_i32)
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 3
     i32.shl
     i32.add
     i64.load $0 offset=8
     local.get $ptr
     local.get $j
     i32.const 3
     i32.shl
     i32.add
     i64.load $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i64_i64_=>_i32)
     i32.const 31
     i32.shr_u
    else
     i32.const 0
    end
    local.set $5
    local.get $5
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|0
    end
   end
   local.get $j
   local.set $k
   loop $while-continue|1
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     local.get $ptr
     local.get $i
     i32.const 3
     i32.shl
     i32.add
     i64.load $0
     local.set $tmp
     local.get $ptr
     local.get $i
     i32.const 3
     i32.shl
     i32.add
     local.get $ptr
     local.get $k
     i32.const 3
     i32.shl
     i32.add
     i64.load $0
     i64.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     local.get $ptr
     local.get $k
     i32.const 3
     i32.shl
     i32.add
     local.get $tmp
     i64.store $0
     local.get $k
     i32.const 1
     i32.sub
     local.set $k
     br $while-continue|1
    end
   end
  else
   loop $while-continue|2
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 3
     i32.shl
     i32.add
     i64.load $0 offset=8
     local.get $ptr
     local.get $j
     i32.const 3
     i32.shl
     i32.add
     i64.load $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i64_i64_=>_i32)
     i32.const 0
     i32.ge_s
    else
     i32.const 0
    end
    local.set $9
    local.get $9
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|2
    end
   end
  end
  local.get $j
 )
 (func $~lib/util/sort/mergeRuns<i64> (type $i32_i32_i32_i32_i32_i32_=>_none) (param $ptr i32) (param $l i32) (param $m i32) (param $r i32) (param $buffer i32) (param $comparator i32)
  (local $i i32)
  (local $j i32)
  (local $t i32)
  (local $9 i32)
  (local $10 i32)
  (local $k i32)
  (local $12 i32)
  (local $a i64)
  (local $b i64)
  local.get $m
  i32.const 1
  i32.sub
  local.set $m
  local.get $r
  local.get $m
  i32.add
  local.set $t
  local.get $m
  i32.const 1
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $l
   i32.gt_s
   local.set $9
   local.get $9
   if
    local.get $buffer
    local.get $i
    i32.const 1
    i32.sub
    i32.const 3
    i32.shl
    i32.add
    local.get $ptr
    local.get $i
    i32.const 1
    i32.sub
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    i64.store $0
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  local.get $m
  local.set $j
  loop $for-loop|1
   local.get $j
   local.get $r
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $buffer
    local.get $t
    local.get $j
    i32.sub
    i32.const 3
    i32.shl
    i32.add
    local.get $ptr
    local.get $j
    i32.const 3
    i32.shl
    i32.add
    i64.load $0 offset=8
    i64.store $0
    local.get $j
    i32.const 1
    i32.add
    local.set $j
    br $for-loop|1
   end
  end
  local.get $l
  local.set $k
  loop $for-loop|2
   local.get $k
   local.get $r
   i32.le_s
   local.set $12
   local.get $12
   if
    local.get $buffer
    local.get $j
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    local.set $a
    local.get $buffer
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    local.set $b
    local.get $a
    local.get $b
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i64_i64_=>_i32)
    i32.const 0
    i32.lt_s
    if
     local.get $ptr
     local.get $k
     i32.const 3
     i32.shl
     i32.add
     local.get $a
     i64.store $0
     local.get $j
     i32.const 1
     i32.sub
     local.set $j
    else
     local.get $ptr
     local.get $k
     i32.const 3
     i32.shl
     i32.add
     local.get $b
     i64.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
    end
    local.get $k
    i32.const 1
    i32.add
    local.set $k
    br $for-loop|2
   end
  end
 )
 (func $~lib/util/sort/SORT<i64> (type $i32_i32_i32_=>_none) (param $ptr i32) (param $len i32) (param $comparator i32)
  (local $3 i32)
  (local $a i64)
  (local $b i64)
  (local $c i32)
  (local $a|7 i64)
  (local $b|8 i64)
  (local $c|9 i32)
  (local $n i32)
  (local $lgPlus2 i32)
  (local $lgPlus2Size i32)
  (local $leftRunStartBuf i32)
  (local $leftRunEndBuf i32)
  (local $i i32)
  (local $16 i32)
  (local $buffer i32)
  (local $hi i32)
  (local $endA i32)
  (local $lenA i32)
  (local $21 i32)
  (local $22 i32)
  (local $top i32)
  (local $startA i32)
  (local $25 i32)
  (local $startB i32)
  (local $endB i32)
  (local $lenB i32)
  (local $29 i32)
  (local $30 i32)
  (local $k i32)
  (local $i|32 i32)
  (local $33 i32)
  (local $start i32)
  (local $i|35 i32)
  (local $36 i32)
  (local $start|37 i32)
  local.get $len
  i32.const 48
  i32.le_s
  if
   local.get $len
   i32.const 1
   i32.le_s
   if
    return
   end
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   block $break|0
    block $case1|0
     block $case0|0
      local.get $len
      local.set $3
      local.get $3
      i32.const 3
      i32.eq
      br_if $case0|0
      local.get $3
      i32.const 2
      i32.eq
      br_if $case1|0
      br $break|0
     end
     local.get $ptr
     i64.load $0
     local.set $a
     local.get $ptr
     i64.load $0 offset=8
     local.set $b
     local.get $a
     local.get $b
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i64_i64_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $c
     local.get $ptr
     local.get $b
     local.get $a
     local.get $c
     select
     i64.store $0
     local.get $a
     local.get $b
     local.get $c
     select
     local.set $a
     local.get $ptr
     i64.load $0 offset=16
     local.set $b
     local.get $a
     local.get $b
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i64_i64_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $c
     local.get $ptr
     local.get $b
     local.get $a
     local.get $c
     select
     i64.store $0 offset=8
     local.get $ptr
     local.get $a
     local.get $b
     local.get $c
     select
     i64.store $0 offset=16
    end
    local.get $ptr
    i64.load $0
    local.set $a|7
    local.get $ptr
    i64.load $0 offset=8
    local.set $b|8
    local.get $a|7
    local.get $b|8
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i64_i64_=>_i32)
    i32.const 0
    i32.gt_s
    local.set $c|9
    local.get $ptr
    local.get $b|8
    local.get $a|7
    local.get $c|9
    select
    i64.store $0
    local.get $ptr
    local.get $a|7
    local.get $b|8
    local.get $c|9
    select
    i64.store $0 offset=8
    return
   end
   local.get $ptr
   i32.const 0
   local.get $len
   i32.const 1
   i32.sub
   i32.const 0
   local.get $comparator
   call $~lib/util/sort/insertionSort<i64>
   return
  end
  local.get $len
  local.set $n
  i32.const 31
  local.get $n
  i32.clz
  i32.sub
  i32.const 2
  i32.add
  local.set $lgPlus2
  local.get $lgPlus2
  i32.const 2
  i32.shl
  local.set $lgPlus2Size
  local.get $lgPlus2Size
  i32.const 1
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $leftRunStartBuf
  local.get $leftRunStartBuf
  local.get $lgPlus2Size
  i32.add
  local.set $leftRunEndBuf
  i32.const 0
  local.set $i
  loop $for-loop|1
   local.get $i
   local.get $lgPlus2
   i32.lt_u
   local.set $16
   local.get $16
   if
    local.get $leftRunStartBuf
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.const -1
    i32.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|1
   end
  end
  local.get $len
  i32.const 3
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $buffer
  local.get $len
  i32.const 1
  i32.sub
  local.set $hi
  local.get $ptr
  i32.const 0
  local.get $hi
  local.get $comparator
  call $~lib/util/sort/extendRunRight<i64>
  local.set $endA
  local.get $endA
  i32.const 1
  i32.add
  local.set $lenA
  local.get $lenA
  i32.const 32
  i32.lt_s
  if
   local.get $hi
   local.tee $21
   i32.const 32
   i32.const 1
   i32.sub
   local.tee $22
   local.get $21
   local.get $22
   i32.lt_s
   select
   local.set $endA
   local.get $ptr
   i32.const 0
   local.get $endA
   local.get $lenA
   local.get $comparator
   call $~lib/util/sort/insertionSort<i64>
  end
  i32.const 0
  local.set $top
  i32.const 0
  local.set $startA
  loop $while-continue|2
   local.get $endA
   local.get $hi
   i32.lt_s
   local.set $25
   local.get $25
   if
    local.get $endA
    i32.const 1
    i32.add
    local.set $startB
    local.get $ptr
    local.get $startB
    local.get $hi
    local.get $comparator
    call $~lib/util/sort/extendRunRight<i64>
    local.set $endB
    local.get $endB
    local.get $startB
    i32.sub
    i32.const 1
    i32.add
    local.set $lenB
    local.get $lenB
    i32.const 32
    i32.lt_s
    if
     local.get $hi
     local.tee $29
     local.get $startB
     i32.const 32
     i32.add
     i32.const 1
     i32.sub
     local.tee $30
     local.get $29
     local.get $30
     i32.lt_s
     select
     local.set $endB
     local.get $ptr
     local.get $startB
     local.get $endB
     local.get $lenB
     local.get $comparator
     call $~lib/util/sort/insertionSort<i64>
    end
    i32.const 0
    local.get $hi
    local.get $startA
    local.get $startB
    local.get $endB
    call $~lib/util/sort/nodePower
    local.set $k
    local.get $top
    local.set $i|32
    loop $for-loop|3
     local.get $i|32
     local.get $k
     i32.gt_u
     local.set $33
     local.get $33
     if
      local.get $leftRunStartBuf
      local.get $i|32
      i32.const 2
      i32.shl
      i32.add
      i32.load $0
      local.set $start
      local.get $start
      i32.const -1
      i32.ne
      if
       local.get $ptr
       local.get $start
       local.get $leftRunEndBuf
       local.get $i|32
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       i32.const 1
       i32.add
       local.get $endA
       local.get $buffer
       local.get $comparator
       call $~lib/util/sort/mergeRuns<i64>
       local.get $start
       local.set $startA
       local.get $leftRunStartBuf
       local.get $i|32
       i32.const 2
       i32.shl
       i32.add
       i32.const -1
       i32.store $0
      end
      local.get $i|32
      i32.const 1
      i32.sub
      local.set $i|32
      br $for-loop|3
     end
    end
    local.get $leftRunStartBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $startA
    i32.store $0
    local.get $leftRunEndBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $endA
    i32.store $0
    local.get $startB
    local.set $startA
    local.get $endB
    local.set $endA
    local.get $k
    local.set $top
    br $while-continue|2
   end
  end
  local.get $top
  local.set $i|35
  loop $for-loop|4
   local.get $i|35
   i32.const 0
   i32.ne
   local.set $36
   local.get $36
   if
    local.get $leftRunStartBuf
    local.get $i|35
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $start|37
    local.get $start|37
    i32.const -1
    i32.ne
    if
     local.get $ptr
     local.get $start|37
     local.get $leftRunEndBuf
     local.get $i|35
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 1
     i32.add
     local.get $hi
     local.get $buffer
     local.get $comparator
     call $~lib/util/sort/mergeRuns<i64>
    end
    local.get $i|35
    i32.const 1
    i32.sub
    local.set $i|35
    br $for-loop|4
   end
  end
  local.get $buffer
  call $~lib/rt/tlsf/__free
  local.get $leftRunStartBuf
  call $~lib/rt/tlsf/__free
 )
 (func $~lib/typedarray/Int64Array#sort (type $i32_i32_=>_i32) (param $this i32) (param $comparator i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Int64Array#get:length
  local.get $comparator
  call $~lib/util/sort/SORT<i64>
  local.get $this
 )
 (func $~lib/util/sort/COMPARATOR<i64>~anonymous|0 (type $i64_i64_=>_i32) (param $a i64) (param $b i64) (result i32)
  local.get $a
  local.get $b
  i64.gt_s
  local.get $a
  local.get $b
  i64.lt_s
  i32.sub
 )
 (func $std/typedarray/testArraySort<~lib/typedarray/Int64Array,i64>~anonymous|0 (type $i64_i64_=>_i32) (param $a i64) (param $b i64) (result i32)
  local.get $b
  local.get $a
  i64.gt_s
  local.get $b
  local.get $a
  i64.lt_s
  i32.sub
 )
 (func $~lib/util/sort/insertionSort<u64> (type $i32_i32_i32_i32_i32_=>_none) (param $ptr i32) (param $left i32) (param $right i32) (param $presorted i32) (param $comparator i32)
  (local $range i32)
  (local $i i32)
  (local $7 i32)
  (local $a i64)
  (local $b i64)
  (local $min i64)
  (local $max i64)
  (local $j i32)
  (local $13 i32)
  (local $14 i32)
  i32.const 0
  i32.const 1
  i32.ge_s
  drop
  local.get $right
  local.get $left
  i32.sub
  i32.const 1
  i32.add
  local.set $range
  local.get $left
  local.get $range
  i32.const 1
  i32.and
  local.get $presorted
  local.get $range
  local.get $presorted
  i32.sub
  i32.const 1
  i32.and
  i32.sub
  local.get $presorted
  i32.const 0
  i32.eq
  select
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $right
   i32.le_s
   local.set $7
   local.get $7
   if
    local.get $ptr
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    local.set $a
    local.get $ptr
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    i64.load $0 offset=8
    local.set $b
    local.get $b
    local.set $min
    local.get $a
    local.set $max
    local.get $a
    local.get $b
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i64_i64_=>_i32)
    i32.const 0
    i32.le_s
    if
     local.get $a
     local.set $min
     local.get $b
     local.set $max
    end
    local.get $i
    i32.const 1
    i32.sub
    local.set $j
    block $while-break|1
     loop $while-continue|1
      local.get $j
      local.get $left
      i32.ge_s
      local.set $13
      local.get $13
      if
       local.get $ptr
       local.get $j
       i32.const 3
       i32.shl
       i32.add
       i64.load $0
       local.set $a
       local.get $a
       local.get $max
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $i64_i64_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $j
        i32.const 3
        i32.shl
        i32.add
        local.get $a
        i64.store $0 offset=16
        local.get $j
        i32.const 1
        i32.sub
        local.set $j
       else
        br $while-break|1
       end
       br $while-continue|1
      end
     end
    end
    local.get $ptr
    local.get $j
    i32.const 3
    i32.shl
    i32.add
    local.get $max
    i64.store $0 offset=16
    block $while-break|2
     loop $while-continue|2
      local.get $j
      local.get $left
      i32.ge_s
      local.set $14
      local.get $14
      if
       local.get $ptr
       local.get $j
       i32.const 3
       i32.shl
       i32.add
       i64.load $0
       local.set $a
       local.get $a
       local.get $min
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $i64_i64_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $j
        i32.const 3
        i32.shl
        i32.add
        local.get $a
        i64.store $0 offset=8
        local.get $j
        i32.const 1
        i32.sub
        local.set $j
       else
        br $while-break|2
       end
       br $while-continue|2
      end
     end
    end
    local.get $ptr
    local.get $j
    i32.const 3
    i32.shl
    i32.add
    local.get $min
    i64.store $0 offset=8
    local.get $i
    i32.const 2
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/util/sort/extendRunRight<u64> (type $i32_i32_i32_i32_=>_i32) (param $ptr i32) (param $i i32) (param $right i32) (param $comparator i32) (result i32)
  (local $j i32)
  (local $5 i32)
  (local $k i32)
  (local $7 i32)
  (local $tmp i64)
  (local $9 i32)
  local.get $i
  local.get $right
  i32.eq
  if
   local.get $i
   return
  end
  local.get $i
  local.set $j
  local.get $ptr
  local.get $j
  i32.const 3
  i32.shl
  i32.add
  i64.load $0
  local.get $ptr
  local.get $j
  i32.const 1
  i32.add
  local.tee $j
  i32.const 3
  i32.shl
  i32.add
  i64.load $0
  i32.const 2
  global.set $~argumentsLength
  local.get $comparator
  i32.load $0
  call_indirect $0 (type $i64_i64_=>_i32)
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 3
     i32.shl
     i32.add
     i64.load $0 offset=8
     local.get $ptr
     local.get $j
     i32.const 3
     i32.shl
     i32.add
     i64.load $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i64_i64_=>_i32)
     i32.const 31
     i32.shr_u
    else
     i32.const 0
    end
    local.set $5
    local.get $5
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|0
    end
   end
   local.get $j
   local.set $k
   loop $while-continue|1
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     local.get $ptr
     local.get $i
     i32.const 3
     i32.shl
     i32.add
     i64.load $0
     local.set $tmp
     local.get $ptr
     local.get $i
     i32.const 3
     i32.shl
     i32.add
     local.get $ptr
     local.get $k
     i32.const 3
     i32.shl
     i32.add
     i64.load $0
     i64.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     local.get $ptr
     local.get $k
     i32.const 3
     i32.shl
     i32.add
     local.get $tmp
     i64.store $0
     local.get $k
     i32.const 1
     i32.sub
     local.set $k
     br $while-continue|1
    end
   end
  else
   loop $while-continue|2
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 3
     i32.shl
     i32.add
     i64.load $0 offset=8
     local.get $ptr
     local.get $j
     i32.const 3
     i32.shl
     i32.add
     i64.load $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i64_i64_=>_i32)
     i32.const 0
     i32.ge_s
    else
     i32.const 0
    end
    local.set $9
    local.get $9
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|2
    end
   end
  end
  local.get $j
 )
 (func $~lib/util/sort/mergeRuns<u64> (type $i32_i32_i32_i32_i32_i32_=>_none) (param $ptr i32) (param $l i32) (param $m i32) (param $r i32) (param $buffer i32) (param $comparator i32)
  (local $i i32)
  (local $j i32)
  (local $t i32)
  (local $9 i32)
  (local $10 i32)
  (local $k i32)
  (local $12 i32)
  (local $a i64)
  (local $b i64)
  local.get $m
  i32.const 1
  i32.sub
  local.set $m
  local.get $r
  local.get $m
  i32.add
  local.set $t
  local.get $m
  i32.const 1
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $l
   i32.gt_s
   local.set $9
   local.get $9
   if
    local.get $buffer
    local.get $i
    i32.const 1
    i32.sub
    i32.const 3
    i32.shl
    i32.add
    local.get $ptr
    local.get $i
    i32.const 1
    i32.sub
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    i64.store $0
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  local.get $m
  local.set $j
  loop $for-loop|1
   local.get $j
   local.get $r
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $buffer
    local.get $t
    local.get $j
    i32.sub
    i32.const 3
    i32.shl
    i32.add
    local.get $ptr
    local.get $j
    i32.const 3
    i32.shl
    i32.add
    i64.load $0 offset=8
    i64.store $0
    local.get $j
    i32.const 1
    i32.add
    local.set $j
    br $for-loop|1
   end
  end
  local.get $l
  local.set $k
  loop $for-loop|2
   local.get $k
   local.get $r
   i32.le_s
   local.set $12
   local.get $12
   if
    local.get $buffer
    local.get $j
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    local.set $a
    local.get $buffer
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    local.set $b
    local.get $a
    local.get $b
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i64_i64_=>_i32)
    i32.const 0
    i32.lt_s
    if
     local.get $ptr
     local.get $k
     i32.const 3
     i32.shl
     i32.add
     local.get $a
     i64.store $0
     local.get $j
     i32.const 1
     i32.sub
     local.set $j
    else
     local.get $ptr
     local.get $k
     i32.const 3
     i32.shl
     i32.add
     local.get $b
     i64.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
    end
    local.get $k
    i32.const 1
    i32.add
    local.set $k
    br $for-loop|2
   end
  end
 )
 (func $~lib/util/sort/SORT<u64> (type $i32_i32_i32_=>_none) (param $ptr i32) (param $len i32) (param $comparator i32)
  (local $3 i32)
  (local $a i64)
  (local $b i64)
  (local $c i32)
  (local $a|7 i64)
  (local $b|8 i64)
  (local $c|9 i32)
  (local $n i32)
  (local $lgPlus2 i32)
  (local $lgPlus2Size i32)
  (local $leftRunStartBuf i32)
  (local $leftRunEndBuf i32)
  (local $i i32)
  (local $16 i32)
  (local $buffer i32)
  (local $hi i32)
  (local $endA i32)
  (local $lenA i32)
  (local $21 i32)
  (local $22 i32)
  (local $top i32)
  (local $startA i32)
  (local $25 i32)
  (local $startB i32)
  (local $endB i32)
  (local $lenB i32)
  (local $29 i32)
  (local $30 i32)
  (local $k i32)
  (local $i|32 i32)
  (local $33 i32)
  (local $start i32)
  (local $i|35 i32)
  (local $36 i32)
  (local $start|37 i32)
  local.get $len
  i32.const 48
  i32.le_s
  if
   local.get $len
   i32.const 1
   i32.le_s
   if
    return
   end
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   block $break|0
    block $case1|0
     block $case0|0
      local.get $len
      local.set $3
      local.get $3
      i32.const 3
      i32.eq
      br_if $case0|0
      local.get $3
      i32.const 2
      i32.eq
      br_if $case1|0
      br $break|0
     end
     local.get $ptr
     i64.load $0
     local.set $a
     local.get $ptr
     i64.load $0 offset=8
     local.set $b
     local.get $a
     local.get $b
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i64_i64_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $c
     local.get $ptr
     local.get $b
     local.get $a
     local.get $c
     select
     i64.store $0
     local.get $a
     local.get $b
     local.get $c
     select
     local.set $a
     local.get $ptr
     i64.load $0 offset=16
     local.set $b
     local.get $a
     local.get $b
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i64_i64_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $c
     local.get $ptr
     local.get $b
     local.get $a
     local.get $c
     select
     i64.store $0 offset=8
     local.get $ptr
     local.get $a
     local.get $b
     local.get $c
     select
     i64.store $0 offset=16
    end
    local.get $ptr
    i64.load $0
    local.set $a|7
    local.get $ptr
    i64.load $0 offset=8
    local.set $b|8
    local.get $a|7
    local.get $b|8
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i64_i64_=>_i32)
    i32.const 0
    i32.gt_s
    local.set $c|9
    local.get $ptr
    local.get $b|8
    local.get $a|7
    local.get $c|9
    select
    i64.store $0
    local.get $ptr
    local.get $a|7
    local.get $b|8
    local.get $c|9
    select
    i64.store $0 offset=8
    return
   end
   local.get $ptr
   i32.const 0
   local.get $len
   i32.const 1
   i32.sub
   i32.const 0
   local.get $comparator
   call $~lib/util/sort/insertionSort<u64>
   return
  end
  local.get $len
  local.set $n
  i32.const 31
  local.get $n
  i32.clz
  i32.sub
  i32.const 2
  i32.add
  local.set $lgPlus2
  local.get $lgPlus2
  i32.const 2
  i32.shl
  local.set $lgPlus2Size
  local.get $lgPlus2Size
  i32.const 1
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $leftRunStartBuf
  local.get $leftRunStartBuf
  local.get $lgPlus2Size
  i32.add
  local.set $leftRunEndBuf
  i32.const 0
  local.set $i
  loop $for-loop|1
   local.get $i
   local.get $lgPlus2
   i32.lt_u
   local.set $16
   local.get $16
   if
    local.get $leftRunStartBuf
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.const -1
    i32.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|1
   end
  end
  local.get $len
  i32.const 3
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $buffer
  local.get $len
  i32.const 1
  i32.sub
  local.set $hi
  local.get $ptr
  i32.const 0
  local.get $hi
  local.get $comparator
  call $~lib/util/sort/extendRunRight<u64>
  local.set $endA
  local.get $endA
  i32.const 1
  i32.add
  local.set $lenA
  local.get $lenA
  i32.const 32
  i32.lt_s
  if
   local.get $hi
   local.tee $21
   i32.const 32
   i32.const 1
   i32.sub
   local.tee $22
   local.get $21
   local.get $22
   i32.lt_s
   select
   local.set $endA
   local.get $ptr
   i32.const 0
   local.get $endA
   local.get $lenA
   local.get $comparator
   call $~lib/util/sort/insertionSort<u64>
  end
  i32.const 0
  local.set $top
  i32.const 0
  local.set $startA
  loop $while-continue|2
   local.get $endA
   local.get $hi
   i32.lt_s
   local.set $25
   local.get $25
   if
    local.get $endA
    i32.const 1
    i32.add
    local.set $startB
    local.get $ptr
    local.get $startB
    local.get $hi
    local.get $comparator
    call $~lib/util/sort/extendRunRight<u64>
    local.set $endB
    local.get $endB
    local.get $startB
    i32.sub
    i32.const 1
    i32.add
    local.set $lenB
    local.get $lenB
    i32.const 32
    i32.lt_s
    if
     local.get $hi
     local.tee $29
     local.get $startB
     i32.const 32
     i32.add
     i32.const 1
     i32.sub
     local.tee $30
     local.get $29
     local.get $30
     i32.lt_s
     select
     local.set $endB
     local.get $ptr
     local.get $startB
     local.get $endB
     local.get $lenB
     local.get $comparator
     call $~lib/util/sort/insertionSort<u64>
    end
    i32.const 0
    local.get $hi
    local.get $startA
    local.get $startB
    local.get $endB
    call $~lib/util/sort/nodePower
    local.set $k
    local.get $top
    local.set $i|32
    loop $for-loop|3
     local.get $i|32
     local.get $k
     i32.gt_u
     local.set $33
     local.get $33
     if
      local.get $leftRunStartBuf
      local.get $i|32
      i32.const 2
      i32.shl
      i32.add
      i32.load $0
      local.set $start
      local.get $start
      i32.const -1
      i32.ne
      if
       local.get $ptr
       local.get $start
       local.get $leftRunEndBuf
       local.get $i|32
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       i32.const 1
       i32.add
       local.get $endA
       local.get $buffer
       local.get $comparator
       call $~lib/util/sort/mergeRuns<u64>
       local.get $start
       local.set $startA
       local.get $leftRunStartBuf
       local.get $i|32
       i32.const 2
       i32.shl
       i32.add
       i32.const -1
       i32.store $0
      end
      local.get $i|32
      i32.const 1
      i32.sub
      local.set $i|32
      br $for-loop|3
     end
    end
    local.get $leftRunStartBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $startA
    i32.store $0
    local.get $leftRunEndBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $endA
    i32.store $0
    local.get $startB
    local.set $startA
    local.get $endB
    local.set $endA
    local.get $k
    local.set $top
    br $while-continue|2
   end
  end
  local.get $top
  local.set $i|35
  loop $for-loop|4
   local.get $i|35
   i32.const 0
   i32.ne
   local.set $36
   local.get $36
   if
    local.get $leftRunStartBuf
    local.get $i|35
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $start|37
    local.get $start|37
    i32.const -1
    i32.ne
    if
     local.get $ptr
     local.get $start|37
     local.get $leftRunEndBuf
     local.get $i|35
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 1
     i32.add
     local.get $hi
     local.get $buffer
     local.get $comparator
     call $~lib/util/sort/mergeRuns<u64>
    end
    local.get $i|35
    i32.const 1
    i32.sub
    local.set $i|35
    br $for-loop|4
   end
  end
  local.get $buffer
  call $~lib/rt/tlsf/__free
  local.get $leftRunStartBuf
  call $~lib/rt/tlsf/__free
 )
 (func $~lib/typedarray/Uint64Array#sort (type $i32_i32_=>_i32) (param $this i32) (param $comparator i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Uint64Array#get:length
  local.get $comparator
  call $~lib/util/sort/SORT<u64>
  local.get $this
 )
 (func $~lib/util/sort/COMPARATOR<u64>~anonymous|0 (type $i64_i64_=>_i32) (param $a i64) (param $b i64) (result i32)
  local.get $a
  local.get $b
  i64.gt_u
  local.get $a
  local.get $b
  i64.lt_u
  i32.sub
 )
 (func $std/typedarray/testArraySort<~lib/typedarray/Uint64Array,u64>~anonymous|0 (type $i64_i64_=>_i32) (param $a i64) (param $b i64) (result i32)
  local.get $b
  local.get $a
  i64.gt_u
  local.get $b
  local.get $a
  i64.lt_u
  i32.sub
 )
 (func $~lib/util/sort/insertionSort<f32> (type $i32_i32_i32_i32_i32_=>_none) (param $ptr i32) (param $left i32) (param $right i32) (param $presorted i32) (param $comparator i32)
  (local $range i32)
  (local $i i32)
  (local $7 i32)
  (local $a f32)
  (local $b f32)
  (local $min f32)
  (local $max f32)
  (local $j i32)
  (local $13 i32)
  (local $14 i32)
  i32.const 0
  i32.const 1
  i32.ge_s
  drop
  local.get $right
  local.get $left
  i32.sub
  i32.const 1
  i32.add
  local.set $range
  local.get $left
  local.get $range
  i32.const 1
  i32.and
  local.get $presorted
  local.get $range
  local.get $presorted
  i32.sub
  i32.const 1
  i32.and
  i32.sub
  local.get $presorted
  i32.const 0
  i32.eq
  select
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $right
   i32.le_s
   local.set $7
   local.get $7
   if
    local.get $ptr
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    f32.load $0
    local.set $a
    local.get $ptr
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    f32.load $0 offset=4
    local.set $b
    local.get $b
    local.set $min
    local.get $a
    local.set $max
    local.get $a
    local.get $b
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $f32_f32_=>_i32)
    i32.const 0
    i32.le_s
    if
     local.get $a
     local.set $min
     local.get $b
     local.set $max
    end
    local.get $i
    i32.const 1
    i32.sub
    local.set $j
    block $while-break|1
     loop $while-continue|1
      local.get $j
      local.get $left
      i32.ge_s
      local.set $13
      local.get $13
      if
       local.get $ptr
       local.get $j
       i32.const 2
       i32.shl
       i32.add
       f32.load $0
       local.set $a
       local.get $a
       local.get $max
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $f32_f32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $j
        i32.const 2
        i32.shl
        i32.add
        local.get $a
        f32.store $0 offset=8
        local.get $j
        i32.const 1
        i32.sub
        local.set $j
       else
        br $while-break|1
       end
       br $while-continue|1
      end
     end
    end
    local.get $ptr
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    local.get $max
    f32.store $0 offset=8
    block $while-break|2
     loop $while-continue|2
      local.get $j
      local.get $left
      i32.ge_s
      local.set $14
      local.get $14
      if
       local.get $ptr
       local.get $j
       i32.const 2
       i32.shl
       i32.add
       f32.load $0
       local.set $a
       local.get $a
       local.get $min
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $f32_f32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $j
        i32.const 2
        i32.shl
        i32.add
        local.get $a
        f32.store $0 offset=4
        local.get $j
        i32.const 1
        i32.sub
        local.set $j
       else
        br $while-break|2
       end
       br $while-continue|2
      end
     end
    end
    local.get $ptr
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    local.get $min
    f32.store $0 offset=4
    local.get $i
    i32.const 2
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/util/sort/extendRunRight<f32> (type $i32_i32_i32_i32_=>_i32) (param $ptr i32) (param $i i32) (param $right i32) (param $comparator i32) (result i32)
  (local $j i32)
  (local $5 i32)
  (local $k i32)
  (local $7 i32)
  (local $tmp f32)
  (local $9 i32)
  local.get $i
  local.get $right
  i32.eq
  if
   local.get $i
   return
  end
  local.get $i
  local.set $j
  local.get $ptr
  local.get $j
  i32.const 2
  i32.shl
  i32.add
  f32.load $0
  local.get $ptr
  local.get $j
  i32.const 1
  i32.add
  local.tee $j
  i32.const 2
  i32.shl
  i32.add
  f32.load $0
  i32.const 2
  global.set $~argumentsLength
  local.get $comparator
  i32.load $0
  call_indirect $0 (type $f32_f32_=>_i32)
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     f32.load $0 offset=4
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     f32.load $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $f32_f32_=>_i32)
     i32.const 31
     i32.shr_u
    else
     i32.const 0
    end
    local.set $5
    local.get $5
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|0
    end
   end
   local.get $j
   local.set $k
   loop $while-continue|1
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     local.get $ptr
     local.get $i
     i32.const 2
     i32.shl
     i32.add
     f32.load $0
     local.set $tmp
     local.get $ptr
     local.get $i
     i32.const 2
     i32.shl
     i32.add
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     f32.load $0
     f32.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     local.get $tmp
     f32.store $0
     local.get $k
     i32.const 1
     i32.sub
     local.set $k
     br $while-continue|1
    end
   end
  else
   loop $while-continue|2
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     f32.load $0 offset=4
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     f32.load $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $f32_f32_=>_i32)
     i32.const 0
     i32.ge_s
    else
     i32.const 0
    end
    local.set $9
    local.get $9
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|2
    end
   end
  end
  local.get $j
 )
 (func $~lib/util/sort/mergeRuns<f32> (type $i32_i32_i32_i32_i32_i32_=>_none) (param $ptr i32) (param $l i32) (param $m i32) (param $r i32) (param $buffer i32) (param $comparator i32)
  (local $i i32)
  (local $j i32)
  (local $t i32)
  (local $9 i32)
  (local $10 i32)
  (local $k i32)
  (local $12 i32)
  (local $a f32)
  (local $b f32)
  local.get $m
  i32.const 1
  i32.sub
  local.set $m
  local.get $r
  local.get $m
  i32.add
  local.set $t
  local.get $m
  i32.const 1
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $l
   i32.gt_s
   local.set $9
   local.get $9
   if
    local.get $buffer
    local.get $i
    i32.const 1
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    local.get $ptr
    local.get $i
    i32.const 1
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    f32.load $0
    f32.store $0
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  local.get $m
  local.set $j
  loop $for-loop|1
   local.get $j
   local.get $r
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $buffer
    local.get $t
    local.get $j
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    local.get $ptr
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    f32.load $0 offset=4
    f32.store $0
    local.get $j
    i32.const 1
    i32.add
    local.set $j
    br $for-loop|1
   end
  end
  local.get $l
  local.set $k
  loop $for-loop|2
   local.get $k
   local.get $r
   i32.le_s
   local.set $12
   local.get $12
   if
    local.get $buffer
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    f32.load $0
    local.set $a
    local.get $buffer
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    f32.load $0
    local.set $b
    local.get $a
    local.get $b
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $f32_f32_=>_i32)
    i32.const 0
    i32.lt_s
    if
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     local.get $a
     f32.store $0
     local.get $j
     i32.const 1
     i32.sub
     local.set $j
    else
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     local.get $b
     f32.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
    end
    local.get $k
    i32.const 1
    i32.add
    local.set $k
    br $for-loop|2
   end
  end
 )
 (func $~lib/util/sort/SORT<f32> (type $i32_i32_i32_=>_none) (param $ptr i32) (param $len i32) (param $comparator i32)
  (local $3 i32)
  (local $a f32)
  (local $b f32)
  (local $c i32)
  (local $a|7 f32)
  (local $b|8 f32)
  (local $c|9 i32)
  (local $n i32)
  (local $lgPlus2 i32)
  (local $lgPlus2Size i32)
  (local $leftRunStartBuf i32)
  (local $leftRunEndBuf i32)
  (local $i i32)
  (local $16 i32)
  (local $buffer i32)
  (local $hi i32)
  (local $endA i32)
  (local $lenA i32)
  (local $21 i32)
  (local $22 i32)
  (local $top i32)
  (local $startA i32)
  (local $25 i32)
  (local $startB i32)
  (local $endB i32)
  (local $lenB i32)
  (local $29 i32)
  (local $30 i32)
  (local $k i32)
  (local $i|32 i32)
  (local $33 i32)
  (local $start i32)
  (local $i|35 i32)
  (local $36 i32)
  (local $start|37 i32)
  local.get $len
  i32.const 48
  i32.le_s
  if
   local.get $len
   i32.const 1
   i32.le_s
   if
    return
   end
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   block $break|0
    block $case1|0
     block $case0|0
      local.get $len
      local.set $3
      local.get $3
      i32.const 3
      i32.eq
      br_if $case0|0
      local.get $3
      i32.const 2
      i32.eq
      br_if $case1|0
      br $break|0
     end
     local.get $ptr
     f32.load $0
     local.set $a
     local.get $ptr
     f32.load $0 offset=4
     local.set $b
     local.get $a
     local.get $b
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $f32_f32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $c
     local.get $ptr
     local.get $b
     local.get $a
     local.get $c
     select
     f32.store $0
     local.get $a
     local.get $b
     local.get $c
     select
     local.set $a
     local.get $ptr
     f32.load $0 offset=8
     local.set $b
     local.get $a
     local.get $b
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $f32_f32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $c
     local.get $ptr
     local.get $b
     local.get $a
     local.get $c
     select
     f32.store $0 offset=4
     local.get $ptr
     local.get $a
     local.get $b
     local.get $c
     select
     f32.store $0 offset=8
    end
    local.get $ptr
    f32.load $0
    local.set $a|7
    local.get $ptr
    f32.load $0 offset=4
    local.set $b|8
    local.get $a|7
    local.get $b|8
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $f32_f32_=>_i32)
    i32.const 0
    i32.gt_s
    local.set $c|9
    local.get $ptr
    local.get $b|8
    local.get $a|7
    local.get $c|9
    select
    f32.store $0
    local.get $ptr
    local.get $a|7
    local.get $b|8
    local.get $c|9
    select
    f32.store $0 offset=4
    return
   end
   local.get $ptr
   i32.const 0
   local.get $len
   i32.const 1
   i32.sub
   i32.const 0
   local.get $comparator
   call $~lib/util/sort/insertionSort<f32>
   return
  end
  local.get $len
  local.set $n
  i32.const 31
  local.get $n
  i32.clz
  i32.sub
  i32.const 2
  i32.add
  local.set $lgPlus2
  local.get $lgPlus2
  i32.const 2
  i32.shl
  local.set $lgPlus2Size
  local.get $lgPlus2Size
  i32.const 1
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $leftRunStartBuf
  local.get $leftRunStartBuf
  local.get $lgPlus2Size
  i32.add
  local.set $leftRunEndBuf
  i32.const 0
  local.set $i
  loop $for-loop|1
   local.get $i
   local.get $lgPlus2
   i32.lt_u
   local.set $16
   local.get $16
   if
    local.get $leftRunStartBuf
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.const -1
    i32.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|1
   end
  end
  local.get $len
  i32.const 2
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $buffer
  local.get $len
  i32.const 1
  i32.sub
  local.set $hi
  local.get $ptr
  i32.const 0
  local.get $hi
  local.get $comparator
  call $~lib/util/sort/extendRunRight<f32>
  local.set $endA
  local.get $endA
  i32.const 1
  i32.add
  local.set $lenA
  local.get $lenA
  i32.const 32
  i32.lt_s
  if
   local.get $hi
   local.tee $21
   i32.const 32
   i32.const 1
   i32.sub
   local.tee $22
   local.get $21
   local.get $22
   i32.lt_s
   select
   local.set $endA
   local.get $ptr
   i32.const 0
   local.get $endA
   local.get $lenA
   local.get $comparator
   call $~lib/util/sort/insertionSort<f32>
  end
  i32.const 0
  local.set $top
  i32.const 0
  local.set $startA
  loop $while-continue|2
   local.get $endA
   local.get $hi
   i32.lt_s
   local.set $25
   local.get $25
   if
    local.get $endA
    i32.const 1
    i32.add
    local.set $startB
    local.get $ptr
    local.get $startB
    local.get $hi
    local.get $comparator
    call $~lib/util/sort/extendRunRight<f32>
    local.set $endB
    local.get $endB
    local.get $startB
    i32.sub
    i32.const 1
    i32.add
    local.set $lenB
    local.get $lenB
    i32.const 32
    i32.lt_s
    if
     local.get $hi
     local.tee $29
     local.get $startB
     i32.const 32
     i32.add
     i32.const 1
     i32.sub
     local.tee $30
     local.get $29
     local.get $30
     i32.lt_s
     select
     local.set $endB
     local.get $ptr
     local.get $startB
     local.get $endB
     local.get $lenB
     local.get $comparator
     call $~lib/util/sort/insertionSort<f32>
    end
    i32.const 0
    local.get $hi
    local.get $startA
    local.get $startB
    local.get $endB
    call $~lib/util/sort/nodePower
    local.set $k
    local.get $top
    local.set $i|32
    loop $for-loop|3
     local.get $i|32
     local.get $k
     i32.gt_u
     local.set $33
     local.get $33
     if
      local.get $leftRunStartBuf
      local.get $i|32
      i32.const 2
      i32.shl
      i32.add
      i32.load $0
      local.set $start
      local.get $start
      i32.const -1
      i32.ne
      if
       local.get $ptr
       local.get $start
       local.get $leftRunEndBuf
       local.get $i|32
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       i32.const 1
       i32.add
       local.get $endA
       local.get $buffer
       local.get $comparator
       call $~lib/util/sort/mergeRuns<f32>
       local.get $start
       local.set $startA
       local.get $leftRunStartBuf
       local.get $i|32
       i32.const 2
       i32.shl
       i32.add
       i32.const -1
       i32.store $0
      end
      local.get $i|32
      i32.const 1
      i32.sub
      local.set $i|32
      br $for-loop|3
     end
    end
    local.get $leftRunStartBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $startA
    i32.store $0
    local.get $leftRunEndBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $endA
    i32.store $0
    local.get $startB
    local.set $startA
    local.get $endB
    local.set $endA
    local.get $k
    local.set $top
    br $while-continue|2
   end
  end
  local.get $top
  local.set $i|35
  loop $for-loop|4
   local.get $i|35
   i32.const 0
   i32.ne
   local.set $36
   local.get $36
   if
    local.get $leftRunStartBuf
    local.get $i|35
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $start|37
    local.get $start|37
    i32.const -1
    i32.ne
    if
     local.get $ptr
     local.get $start|37
     local.get $leftRunEndBuf
     local.get $i|35
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 1
     i32.add
     local.get $hi
     local.get $buffer
     local.get $comparator
     call $~lib/util/sort/mergeRuns<f32>
    end
    local.get $i|35
    i32.const 1
    i32.sub
    local.set $i|35
    br $for-loop|4
   end
  end
  local.get $buffer
  call $~lib/rt/tlsf/__free
  local.get $leftRunStartBuf
  call $~lib/rt/tlsf/__free
 )
 (func $~lib/typedarray/Float32Array#sort (type $i32_i32_=>_i32) (param $this i32) (param $comparator i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Float32Array#get:length
  local.get $comparator
  call $~lib/util/sort/SORT<f32>
  local.get $this
 )
 (func $~lib/util/sort/COMPARATOR<f32>~anonymous|0 (type $f32_f32_=>_i32) (param $a f32) (param $b f32) (result i32)
  (local $ia i32)
  (local $ib i32)
  local.get $a
  i32.reinterpret_f32
  local.set $ia
  local.get $b
  i32.reinterpret_f32
  local.set $ib
  local.get $ia
  local.get $ia
  i32.const 31
  i32.shr_s
  i32.const 1
  i32.shr_u
  i32.xor
  local.set $ia
  local.get $ib
  local.get $ib
  i32.const 31
  i32.shr_s
  i32.const 1
  i32.shr_u
  i32.xor
  local.set $ib
  local.get $ia
  local.get $ib
  i32.gt_s
  local.get $ia
  local.get $ib
  i32.lt_s
  i32.sub
 )
 (func $std/typedarray/testArraySort<~lib/typedarray/Float32Array,f32>~anonymous|0 (type $f32_f32_=>_i32) (param $a f32) (param $b f32) (result i32)
  local.get $b
  local.get $a
  f32.gt
  local.get $b
  local.get $a
  f32.lt
  i32.sub
 )
 (func $std/typedarray/testArraySort<~lib/typedarray/Float64Array,f64>~anonymous|0 (type $f64_f64_=>_i32) (param $a f64) (param $b f64) (result i32)
  local.get $b
  local.get $a
  f64.gt
  local.get $b
  local.get $a
  f64.lt
  i32.sub
 )
 (func $~lib/rt/itcms/__collect (type $none_=>_none)
  (local $0 i32)
  (local $1 i32)
  i32.const 0
  drop
  global.get $~lib/rt/itcms/state
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    global.get $~lib/rt/itcms/state
    i32.const 0
    i32.ne
    local.set $0
    local.get $0
    if
     call $~lib/rt/itcms/step
     drop
     br $while-continue|0
    end
   end
  end
  call $~lib/rt/itcms/step
  drop
  loop $while-continue|1
   global.get $~lib/rt/itcms/state
   i32.const 0
   i32.ne
   local.set $1
   local.get $1
   if
    call $~lib/rt/itcms/step
    drop
    br $while-continue|1
   end
  end
  global.get $~lib/rt/itcms/total
  i64.extend_i32_u
  i32.const 200
  i64.extend_i32_u
  i64.mul
  i64.const 100
  i64.div_u
  i32.wrap_i64
  i32.const 1024
  i32.add
  global.set $~lib/rt/itcms/threshold
  i32.const 0
  drop
  i32.const 0
  drop
 )
 (func $~lib/rt/__visit_globals (type $i32_=>_none) (param $0 i32)
  (local $1 i32)
  global.get $std/typedarray/forEachValues
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $std/typedarray/testArrayReverseValues
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $std/typedarray/testArrayIndexOfAndLastIndexOfValues
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $std/typedarray/testArrayWrapValues
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $std/typedarray/setSource1
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $std/typedarray/setSource2
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $std/typedarray/setSource3
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $std/typedarray/setSource7
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  i32.const 192
  local.get $0
  call $~lib/rt/itcms/__visit
  i32.const 32
  local.get $0
  call $~lib/rt/itcms/__visit
  i32.const 80
  local.get $0
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/arraybuffer/ArrayBufferView~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  i32.load $0
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/typedarray/Int8Array~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/arraybuffer/ArrayBufferView~visit
 )
 (func $~lib/typedarray/Uint8Array~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/arraybuffer/ArrayBufferView~visit
 )
 (func $~lib/typedarray/Uint8ClampedArray~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/arraybuffer/ArrayBufferView~visit
 )
 (func $~lib/typedarray/Int16Array~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/arraybuffer/ArrayBufferView~visit
 )
 (func $~lib/typedarray/Uint16Array~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/arraybuffer/ArrayBufferView~visit
 )
 (func $~lib/typedarray/Int32Array~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/arraybuffer/ArrayBufferView~visit
 )
 (func $~lib/typedarray/Uint32Array~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/arraybuffer/ArrayBufferView~visit
 )
 (func $~lib/typedarray/Int64Array~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/arraybuffer/ArrayBufferView~visit
 )
 (func $~lib/typedarray/Uint64Array~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/arraybuffer/ArrayBufferView~visit
 )
 (func $~lib/typedarray/Float32Array~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/arraybuffer/ArrayBufferView~visit
 )
 (func $~lib/typedarray/Float64Array~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/arraybuffer/ArrayBufferView~visit
 )
 (func $~lib/function/Function<%28f64%2Cf64%29=>i32>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28f64%2Cf64%29=>i32>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28f64%2Cf64%29=>i32>#__visit
 )
 (func $~lib/array/Array<i8>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  i32.const 0
  drop
  local.get $this
  i32.load $0
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<i8>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/array/Array<i8>#__visit
 )
 (func $~lib/array/Array<i32>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  i32.const 0
  drop
  local.get $this
  i32.load $0
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<i32>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/array/Array<i32>#__visit
 )
 (func $~lib/function/Function<%28i8%2Ci8%2Ci32%2C~lib/typedarray/Int8Array%29=>i8>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28i8%2Ci8%2Ci32%2C~lib/typedarray/Int8Array%29=>i8>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28i8%2Ci8%2Ci32%2C~lib/typedarray/Int8Array%29=>i8>#__visit
 )
 (func $~lib/function/Function<%28u8%2Cu8%2Ci32%2C~lib/typedarray/Uint8Array%29=>u8>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28u8%2Cu8%2Ci32%2C~lib/typedarray/Uint8Array%29=>u8>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28u8%2Cu8%2Ci32%2C~lib/typedarray/Uint8Array%29=>u8>#__visit
 )
 (func $~lib/function/Function<%28u8%2Cu8%2Ci32%2C~lib/typedarray/Uint8ClampedArray%29=>u8>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28u8%2Cu8%2Ci32%2C~lib/typedarray/Uint8ClampedArray%29=>u8>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28u8%2Cu8%2Ci32%2C~lib/typedarray/Uint8ClampedArray%29=>u8>#__visit
 )
 (func $~lib/function/Function<%28i16%2Ci16%2Ci32%2C~lib/typedarray/Int16Array%29=>i16>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28i16%2Ci16%2Ci32%2C~lib/typedarray/Int16Array%29=>i16>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28i16%2Ci16%2Ci32%2C~lib/typedarray/Int16Array%29=>i16>#__visit
 )
 (func $~lib/function/Function<%28u16%2Cu16%2Ci32%2C~lib/typedarray/Uint16Array%29=>u16>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28u16%2Cu16%2Ci32%2C~lib/typedarray/Uint16Array%29=>u16>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28u16%2Cu16%2Ci32%2C~lib/typedarray/Uint16Array%29=>u16>#__visit
 )
 (func $~lib/function/Function<%28i32%2Ci32%2Ci32%2C~lib/typedarray/Int32Array%29=>i32>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28i32%2Ci32%2Ci32%2C~lib/typedarray/Int32Array%29=>i32>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28i32%2Ci32%2Ci32%2C~lib/typedarray/Int32Array%29=>i32>#__visit
 )
 (func $~lib/function/Function<%28u32%2Cu32%2Ci32%2C~lib/typedarray/Uint32Array%29=>u32>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28u32%2Cu32%2Ci32%2C~lib/typedarray/Uint32Array%29=>u32>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28u32%2Cu32%2Ci32%2C~lib/typedarray/Uint32Array%29=>u32>#__visit
 )
 (func $~lib/function/Function<%28i64%2Ci64%2Ci32%2C~lib/typedarray/Int64Array%29=>i64>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28i64%2Ci64%2Ci32%2C~lib/typedarray/Int64Array%29=>i64>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28i64%2Ci64%2Ci32%2C~lib/typedarray/Int64Array%29=>i64>#__visit
 )
 (func $~lib/function/Function<%28u64%2Cu64%2Ci32%2C~lib/typedarray/Uint64Array%29=>u64>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28u64%2Cu64%2Ci32%2C~lib/typedarray/Uint64Array%29=>u64>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28u64%2Cu64%2Ci32%2C~lib/typedarray/Uint64Array%29=>u64>#__visit
 )
 (func $~lib/function/Function<%28f32%2Cf32%2Ci32%2C~lib/typedarray/Float32Array%29=>f32>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28f32%2Cf32%2Ci32%2C~lib/typedarray/Float32Array%29=>f32>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28f32%2Cf32%2Ci32%2C~lib/typedarray/Float32Array%29=>f32>#__visit
 )
 (func $~lib/function/Function<%28f64%2Cf64%2Ci32%2C~lib/typedarray/Float64Array%29=>f64>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28f64%2Cf64%2Ci32%2C~lib/typedarray/Float64Array%29=>f64>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28f64%2Cf64%2Ci32%2C~lib/typedarray/Float64Array%29=>f64>#__visit
 )
 (func $~lib/function/Function<%28i8%2Ci32%2C~lib/typedarray/Int8Array%29=>i8>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28i8%2Ci32%2C~lib/typedarray/Int8Array%29=>i8>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28i8%2Ci32%2C~lib/typedarray/Int8Array%29=>i8>#__visit
 )
 (func $~lib/function/Function<%28u8%2Ci32%2C~lib/typedarray/Uint8Array%29=>u8>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28u8%2Ci32%2C~lib/typedarray/Uint8Array%29=>u8>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28u8%2Ci32%2C~lib/typedarray/Uint8Array%29=>u8>#__visit
 )
 (func $~lib/function/Function<%28u8%2Ci32%2C~lib/typedarray/Uint8ClampedArray%29=>u8>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28u8%2Ci32%2C~lib/typedarray/Uint8ClampedArray%29=>u8>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28u8%2Ci32%2C~lib/typedarray/Uint8ClampedArray%29=>u8>#__visit
 )
 (func $~lib/function/Function<%28i16%2Ci32%2C~lib/typedarray/Int16Array%29=>i16>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28i16%2Ci32%2C~lib/typedarray/Int16Array%29=>i16>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28i16%2Ci32%2C~lib/typedarray/Int16Array%29=>i16>#__visit
 )
 (func $~lib/function/Function<%28u16%2Ci32%2C~lib/typedarray/Uint16Array%29=>u16>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28u16%2Ci32%2C~lib/typedarray/Uint16Array%29=>u16>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28u16%2Ci32%2C~lib/typedarray/Uint16Array%29=>u16>#__visit
 )
 (func $~lib/function/Function<%28i32%2Ci32%2C~lib/typedarray/Int32Array%29=>i32>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28i32%2Ci32%2C~lib/typedarray/Int32Array%29=>i32>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28i32%2Ci32%2C~lib/typedarray/Int32Array%29=>i32>#__visit
 )
 (func $~lib/function/Function<%28u32%2Ci32%2C~lib/typedarray/Uint32Array%29=>u32>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28u32%2Ci32%2C~lib/typedarray/Uint32Array%29=>u32>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28u32%2Ci32%2C~lib/typedarray/Uint32Array%29=>u32>#__visit
 )
 (func $~lib/function/Function<%28i64%2Ci32%2C~lib/typedarray/Int64Array%29=>i64>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28i64%2Ci32%2C~lib/typedarray/Int64Array%29=>i64>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28i64%2Ci32%2C~lib/typedarray/Int64Array%29=>i64>#__visit
 )
 (func $~lib/function/Function<%28u64%2Ci32%2C~lib/typedarray/Uint64Array%29=>u64>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28u64%2Ci32%2C~lib/typedarray/Uint64Array%29=>u64>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28u64%2Ci32%2C~lib/typedarray/Uint64Array%29=>u64>#__visit
 )
 (func $~lib/function/Function<%28f32%2Ci32%2C~lib/typedarray/Float32Array%29=>f32>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28f32%2Ci32%2C~lib/typedarray/Float32Array%29=>f32>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28f32%2Ci32%2C~lib/typedarray/Float32Array%29=>f32>#__visit
 )
 (func $~lib/function/Function<%28f64%2Ci32%2C~lib/typedarray/Float64Array%29=>f64>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28f64%2Ci32%2C~lib/typedarray/Float64Array%29=>f64>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28f64%2Ci32%2C~lib/typedarray/Float64Array%29=>f64>#__visit
 )
 (func $~lib/function/Function<%28i8%2Ci32%2C~lib/typedarray/Int8Array%29=>bool>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28i8%2Ci32%2C~lib/typedarray/Int8Array%29=>bool>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28i8%2Ci32%2C~lib/typedarray/Int8Array%29=>bool>#__visit
 )
 (func $~lib/function/Function<%28u8%2Ci32%2C~lib/typedarray/Uint8Array%29=>bool>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28u8%2Ci32%2C~lib/typedarray/Uint8Array%29=>bool>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28u8%2Ci32%2C~lib/typedarray/Uint8Array%29=>bool>#__visit
 )
 (func $~lib/function/Function<%28u8%2Ci32%2C~lib/typedarray/Uint8ClampedArray%29=>bool>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28u8%2Ci32%2C~lib/typedarray/Uint8ClampedArray%29=>bool>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28u8%2Ci32%2C~lib/typedarray/Uint8ClampedArray%29=>bool>#__visit
 )
 (func $~lib/function/Function<%28i16%2Ci32%2C~lib/typedarray/Int16Array%29=>bool>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28i16%2Ci32%2C~lib/typedarray/Int16Array%29=>bool>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28i16%2Ci32%2C~lib/typedarray/Int16Array%29=>bool>#__visit
 )
 (func $~lib/function/Function<%28u16%2Ci32%2C~lib/typedarray/Uint16Array%29=>bool>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28u16%2Ci32%2C~lib/typedarray/Uint16Array%29=>bool>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28u16%2Ci32%2C~lib/typedarray/Uint16Array%29=>bool>#__visit
 )
 (func $~lib/function/Function<%28i32%2Ci32%2C~lib/typedarray/Int32Array%29=>bool>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28i32%2Ci32%2C~lib/typedarray/Int32Array%29=>bool>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28i32%2Ci32%2C~lib/typedarray/Int32Array%29=>bool>#__visit
 )
 (func $~lib/function/Function<%28u32%2Ci32%2C~lib/typedarray/Uint32Array%29=>bool>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28u32%2Ci32%2C~lib/typedarray/Uint32Array%29=>bool>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28u32%2Ci32%2C~lib/typedarray/Uint32Array%29=>bool>#__visit
 )
 (func $~lib/function/Function<%28i64%2Ci32%2C~lib/typedarray/Int64Array%29=>bool>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28i64%2Ci32%2C~lib/typedarray/Int64Array%29=>bool>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28i64%2Ci32%2C~lib/typedarray/Int64Array%29=>bool>#__visit
 )
 (func $~lib/function/Function<%28u64%2Ci32%2C~lib/typedarray/Uint64Array%29=>bool>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28u64%2Ci32%2C~lib/typedarray/Uint64Array%29=>bool>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28u64%2Ci32%2C~lib/typedarray/Uint64Array%29=>bool>#__visit
 )
 (func $~lib/function/Function<%28f32%2Ci32%2C~lib/typedarray/Float32Array%29=>bool>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28f32%2Ci32%2C~lib/typedarray/Float32Array%29=>bool>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28f32%2Ci32%2C~lib/typedarray/Float32Array%29=>bool>#__visit
 )
 (func $~lib/function/Function<%28f64%2Ci32%2C~lib/typedarray/Float64Array%29=>bool>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28f64%2Ci32%2C~lib/typedarray/Float64Array%29=>bool>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28f64%2Ci32%2C~lib/typedarray/Float64Array%29=>bool>#__visit
 )
 (func $~lib/function/Function<%28i8%2Ci32%2C~lib/typedarray/Int8Array%29=>void>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28i8%2Ci32%2C~lib/typedarray/Int8Array%29=>void>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28i8%2Ci32%2C~lib/typedarray/Int8Array%29=>void>#__visit
 )
 (func $~lib/function/Function<%28u8%2Ci32%2C~lib/typedarray/Uint8Array%29=>void>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28u8%2Ci32%2C~lib/typedarray/Uint8Array%29=>void>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28u8%2Ci32%2C~lib/typedarray/Uint8Array%29=>void>#__visit
 )
 (func $~lib/function/Function<%28u8%2Ci32%2C~lib/typedarray/Uint8ClampedArray%29=>void>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28u8%2Ci32%2C~lib/typedarray/Uint8ClampedArray%29=>void>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28u8%2Ci32%2C~lib/typedarray/Uint8ClampedArray%29=>void>#__visit
 )
 (func $~lib/function/Function<%28i16%2Ci32%2C~lib/typedarray/Int16Array%29=>void>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28i16%2Ci32%2C~lib/typedarray/Int16Array%29=>void>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28i16%2Ci32%2C~lib/typedarray/Int16Array%29=>void>#__visit
 )
 (func $~lib/function/Function<%28u16%2Ci32%2C~lib/typedarray/Uint16Array%29=>void>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28u16%2Ci32%2C~lib/typedarray/Uint16Array%29=>void>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28u16%2Ci32%2C~lib/typedarray/Uint16Array%29=>void>#__visit
 )
 (func $~lib/function/Function<%28i32%2Ci32%2C~lib/typedarray/Int32Array%29=>void>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28i32%2Ci32%2C~lib/typedarray/Int32Array%29=>void>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28i32%2Ci32%2C~lib/typedarray/Int32Array%29=>void>#__visit
 )
 (func $~lib/function/Function<%28u32%2Ci32%2C~lib/typedarray/Uint32Array%29=>void>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28u32%2Ci32%2C~lib/typedarray/Uint32Array%29=>void>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28u32%2Ci32%2C~lib/typedarray/Uint32Array%29=>void>#__visit
 )
 (func $~lib/function/Function<%28i64%2Ci32%2C~lib/typedarray/Int64Array%29=>void>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28i64%2Ci32%2C~lib/typedarray/Int64Array%29=>void>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28i64%2Ci32%2C~lib/typedarray/Int64Array%29=>void>#__visit
 )
 (func $~lib/function/Function<%28u64%2Ci32%2C~lib/typedarray/Uint64Array%29=>void>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28u64%2Ci32%2C~lib/typedarray/Uint64Array%29=>void>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28u64%2Ci32%2C~lib/typedarray/Uint64Array%29=>void>#__visit
 )
 (func $~lib/function/Function<%28f32%2Ci32%2C~lib/typedarray/Float32Array%29=>void>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28f32%2Ci32%2C~lib/typedarray/Float32Array%29=>void>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28f32%2Ci32%2C~lib/typedarray/Float32Array%29=>void>#__visit
 )
 (func $~lib/function/Function<%28f64%2Ci32%2C~lib/typedarray/Float64Array%29=>void>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28f64%2Ci32%2C~lib/typedarray/Float64Array%29=>void>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28f64%2Ci32%2C~lib/typedarray/Float64Array%29=>void>#__visit
 )
 (func $~lib/array/Array<f32>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  i32.const 0
  drop
  local.get $this
  i32.load $0
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<f32>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/array/Array<f32>#__visit
 )
 (func $~lib/array/Array<f64>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  i32.const 0
  drop
  local.get $this
  i32.load $0
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<f64>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/array/Array<f64>#__visit
 )
 (func $~lib/array/Array<u8>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  i32.const 0
  drop
  local.get $this
  i32.load $0
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<u8>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/array/Array<u8>#__visit
 )
 (func $~lib/array/Array<i16>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  i32.const 0
  drop
  local.get $this
  i32.load $0
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<i16>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/array/Array<i16>#__visit
 )
 (func $~lib/array/Array<u16>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  i32.const 0
  drop
  local.get $this
  i32.load $0
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<u16>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/array/Array<u16>#__visit
 )
 (func $~lib/array/Array<u32>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  i32.const 0
  drop
  local.get $this
  i32.load $0
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<u32>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/array/Array<u32>#__visit
 )
 (func $~lib/array/Array<i64>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  i32.const 0
  drop
  local.get $this
  i32.load $0
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<i64>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/array/Array<i64>#__visit
 )
 (func $~lib/array/Array<u64>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  i32.const 0
  drop
  local.get $this
  i32.load $0
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<u64>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/array/Array<u64>#__visit
 )
 (func $~lib/function/Function<%28i8%2Ci8%29=>i32>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28i8%2Ci8%29=>i32>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28i8%2Ci8%29=>i32>#__visit
 )
 (func $~lib/function/Function<%28u8%2Cu8%29=>i32>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28u8%2Cu8%29=>i32>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28u8%2Cu8%29=>i32>#__visit
 )
 (func $~lib/function/Function<%28i16%2Ci16%29=>i32>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28i16%2Ci16%29=>i32>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28i16%2Ci16%29=>i32>#__visit
 )
 (func $~lib/function/Function<%28u16%2Cu16%29=>i32>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28u16%2Cu16%29=>i32>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28u16%2Cu16%29=>i32>#__visit
 )
 (func $~lib/function/Function<%28i32%2Ci32%29=>i32>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28i32%2Ci32%29=>i32>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28i32%2Ci32%29=>i32>#__visit
 )
 (func $~lib/function/Function<%28u32%2Cu32%29=>i32>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28u32%2Cu32%29=>i32>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28u32%2Cu32%29=>i32>#__visit
 )
 (func $~lib/function/Function<%28i64%2Ci64%29=>i32>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28i64%2Ci64%29=>i32>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28i64%2Ci64%29=>i32>#__visit
 )
 (func $~lib/function/Function<%28u64%2Cu64%29=>i32>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28u64%2Cu64%29=>i32>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28u64%2Cu64%29=>i32>#__visit
 )
 (func $~lib/function/Function<%28f32%2Cf32%29=>i32>#__visit (type $i32_i32_=>_none) (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28f32%2Cf32%29=>i32>~visit (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28f32%2Cf32%29=>i32>#__visit
 )
 (func $~lib/rt/__visit_members (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  block $invalid
   block $~lib/function/Function<%28f32%2Cf32%29=>i32>
    block $~lib/function/Function<%28u64%2Cu64%29=>i32>
     block $~lib/function/Function<%28i64%2Ci64%29=>i32>
      block $~lib/function/Function<%28u32%2Cu32%29=>i32>
       block $~lib/function/Function<%28i32%2Ci32%29=>i32>
        block $~lib/function/Function<%28u16%2Cu16%29=>i32>
         block $~lib/function/Function<%28i16%2Ci16%29=>i32>
          block $~lib/function/Function<%28u8%2Cu8%29=>i32>
           block $~lib/function/Function<%28i8%2Ci8%29=>i32>
            block $~lib/array/Array<u64>
             block $~lib/array/Array<i64>
              block $~lib/array/Array<u32>
               block $~lib/array/Array<u16>
                block $~lib/array/Array<i16>
                 block $~lib/array/Array<u8>
                  block $~lib/array/Array<f64>
                   block $~lib/array/Array<f32>
                    block $~lib/function/Function<%28f64%2Ci32%2C~lib/typedarray/Float64Array%29=>void>
                     block $~lib/function/Function<%28f32%2Ci32%2C~lib/typedarray/Float32Array%29=>void>
                      block $~lib/function/Function<%28u64%2Ci32%2C~lib/typedarray/Uint64Array%29=>void>
                       block $~lib/function/Function<%28i64%2Ci32%2C~lib/typedarray/Int64Array%29=>void>
                        block $~lib/function/Function<%28u32%2Ci32%2C~lib/typedarray/Uint32Array%29=>void>
                         block $~lib/function/Function<%28i32%2Ci32%2C~lib/typedarray/Int32Array%29=>void>
                          block $~lib/function/Function<%28u16%2Ci32%2C~lib/typedarray/Uint16Array%29=>void>
                           block $~lib/function/Function<%28i16%2Ci32%2C~lib/typedarray/Int16Array%29=>void>
                            block $~lib/function/Function<%28u8%2Ci32%2C~lib/typedarray/Uint8ClampedArray%29=>void>
                             block $~lib/function/Function<%28u8%2Ci32%2C~lib/typedarray/Uint8Array%29=>void>
                              block $~lib/function/Function<%28i8%2Ci32%2C~lib/typedarray/Int8Array%29=>void>
                               block $~lib/function/Function<%28f64%2Ci32%2C~lib/typedarray/Float64Array%29=>bool>
                                block $~lib/function/Function<%28f32%2Ci32%2C~lib/typedarray/Float32Array%29=>bool>
                                 block $~lib/function/Function<%28u64%2Ci32%2C~lib/typedarray/Uint64Array%29=>bool>
                                  block $~lib/function/Function<%28i64%2Ci32%2C~lib/typedarray/Int64Array%29=>bool>
                                   block $~lib/function/Function<%28u32%2Ci32%2C~lib/typedarray/Uint32Array%29=>bool>
                                    block $~lib/function/Function<%28i32%2Ci32%2C~lib/typedarray/Int32Array%29=>bool>
                                     block $~lib/function/Function<%28u16%2Ci32%2C~lib/typedarray/Uint16Array%29=>bool>
                                      block $~lib/function/Function<%28i16%2Ci32%2C~lib/typedarray/Int16Array%29=>bool>
                                       block $~lib/function/Function<%28u8%2Ci32%2C~lib/typedarray/Uint8ClampedArray%29=>bool>
                                        block $~lib/function/Function<%28u8%2Ci32%2C~lib/typedarray/Uint8Array%29=>bool>
                                         block $~lib/function/Function<%28i8%2Ci32%2C~lib/typedarray/Int8Array%29=>bool>
                                          block $~lib/function/Function<%28f64%2Ci32%2C~lib/typedarray/Float64Array%29=>f64>
                                           block $~lib/function/Function<%28f32%2Ci32%2C~lib/typedarray/Float32Array%29=>f32>
                                            block $~lib/function/Function<%28u64%2Ci32%2C~lib/typedarray/Uint64Array%29=>u64>
                                             block $~lib/function/Function<%28i64%2Ci32%2C~lib/typedarray/Int64Array%29=>i64>
                                              block $~lib/function/Function<%28u32%2Ci32%2C~lib/typedarray/Uint32Array%29=>u32>
                                               block $~lib/function/Function<%28i32%2Ci32%2C~lib/typedarray/Int32Array%29=>i32>
                                                block $~lib/function/Function<%28u16%2Ci32%2C~lib/typedarray/Uint16Array%29=>u16>
                                                 block $~lib/function/Function<%28i16%2Ci32%2C~lib/typedarray/Int16Array%29=>i16>
                                                  block $~lib/function/Function<%28u8%2Ci32%2C~lib/typedarray/Uint8ClampedArray%29=>u8>
                                                   block $~lib/function/Function<%28u8%2Ci32%2C~lib/typedarray/Uint8Array%29=>u8>
                                                    block $~lib/function/Function<%28i8%2Ci32%2C~lib/typedarray/Int8Array%29=>i8>
                                                     block $~lib/function/Function<%28f64%2Cf64%2Ci32%2C~lib/typedarray/Float64Array%29=>f64>
                                                      block $~lib/function/Function<%28f32%2Cf32%2Ci32%2C~lib/typedarray/Float32Array%29=>f32>
                                                       block $~lib/function/Function<%28u64%2Cu64%2Ci32%2C~lib/typedarray/Uint64Array%29=>u64>
                                                        block $~lib/function/Function<%28i64%2Ci64%2Ci32%2C~lib/typedarray/Int64Array%29=>i64>
                                                         block $~lib/function/Function<%28u32%2Cu32%2Ci32%2C~lib/typedarray/Uint32Array%29=>u32>
                                                          block $~lib/function/Function<%28i32%2Ci32%2Ci32%2C~lib/typedarray/Int32Array%29=>i32>
                                                           block $~lib/function/Function<%28u16%2Cu16%2Ci32%2C~lib/typedarray/Uint16Array%29=>u16>
                                                            block $~lib/function/Function<%28i16%2Ci16%2Ci32%2C~lib/typedarray/Int16Array%29=>i16>
                                                             block $~lib/function/Function<%28u8%2Cu8%2Ci32%2C~lib/typedarray/Uint8ClampedArray%29=>u8>
                                                              block $~lib/function/Function<%28u8%2Cu8%2Ci32%2C~lib/typedarray/Uint8Array%29=>u8>
                                                               block $~lib/function/Function<%28i8%2Ci8%2Ci32%2C~lib/typedarray/Int8Array%29=>i8>
                                                                block $~lib/array/Array<i32>
                                                                 block $~lib/array/Array<i8>
                                                                  block $~lib/function/Function<%28f64%2Cf64%29=>i32>
                                                                   block $~lib/typedarray/Float64Array
                                                                    block $~lib/typedarray/Float32Array
                                                                     block $~lib/typedarray/Uint64Array
                                                                      block $~lib/typedarray/Int64Array
                                                                       block $~lib/typedarray/Uint32Array
                                                                        block $~lib/typedarray/Int32Array
                                                                         block $~lib/typedarray/Uint16Array
                                                                          block $~lib/typedarray/Int16Array
                                                                           block $~lib/typedarray/Uint8ClampedArray
                                                                            block $~lib/typedarray/Uint8Array
                                                                             block $~lib/typedarray/Int8Array
                                                                              block $~lib/arraybuffer/ArrayBufferView
                                                                               block $~lib/string/String
                                                                                block $~lib/arraybuffer/ArrayBuffer
                                                                                 local.get $0
                                                                                 i32.const 8
                                                                                 i32.sub
                                                                                 i32.load $0
                                                                                 br_table $~lib/arraybuffer/ArrayBuffer $~lib/string/String $~lib/arraybuffer/ArrayBufferView $~lib/typedarray/Int8Array $~lib/typedarray/Uint8Array $~lib/typedarray/Uint8ClampedArray $~lib/typedarray/Int16Array $~lib/typedarray/Uint16Array $~lib/typedarray/Int32Array $~lib/typedarray/Uint32Array $~lib/typedarray/Int64Array $~lib/typedarray/Uint64Array $~lib/typedarray/Float32Array $~lib/typedarray/Float64Array $~lib/function/Function<%28f64%2Cf64%29=>i32> $~lib/array/Array<i8> $~lib/array/Array<i32> $~lib/function/Function<%28i8%2Ci8%2Ci32%2C~lib/typedarray/Int8Array%29=>i8> $~lib/function/Function<%28u8%2Cu8%2Ci32%2C~lib/typedarray/Uint8Array%29=>u8> $~lib/function/Function<%28u8%2Cu8%2Ci32%2C~lib/typedarray/Uint8ClampedArray%29=>u8> $~lib/function/Function<%28i16%2Ci16%2Ci32%2C~lib/typedarray/Int16Array%29=>i16> $~lib/function/Function<%28u16%2Cu16%2Ci32%2C~lib/typedarray/Uint16Array%29=>u16> $~lib/function/Function<%28i32%2Ci32%2Ci32%2C~lib/typedarray/Int32Array%29=>i32> $~lib/function/Function<%28u32%2Cu32%2Ci32%2C~lib/typedarray/Uint32Array%29=>u32> $~lib/function/Function<%28i64%2Ci64%2Ci32%2C~lib/typedarray/Int64Array%29=>i64> $~lib/function/Function<%28u64%2Cu64%2Ci32%2C~lib/typedarray/Uint64Array%29=>u64> $~lib/function/Function<%28f32%2Cf32%2Ci32%2C~lib/typedarray/Float32Array%29=>f32> $~lib/function/Function<%28f64%2Cf64%2Ci32%2C~lib/typedarray/Float64Array%29=>f64> $~lib/function/Function<%28i8%2Ci32%2C~lib/typedarray/Int8Array%29=>i8> $~lib/function/Function<%28u8%2Ci32%2C~lib/typedarray/Uint8Array%29=>u8> $~lib/function/Function<%28u8%2Ci32%2C~lib/typedarray/Uint8ClampedArray%29=>u8> $~lib/function/Function<%28i16%2Ci32%2C~lib/typedarray/Int16Array%29=>i16> $~lib/function/Function<%28u16%2Ci32%2C~lib/typedarray/Uint16Array%29=>u16> $~lib/function/Function<%28i32%2Ci32%2C~lib/typedarray/Int32Array%29=>i32> $~lib/function/Function<%28u32%2Ci32%2C~lib/typedarray/Uint32Array%29=>u32> $~lib/function/Function<%28i64%2Ci32%2C~lib/typedarray/Int64Array%29=>i64> $~lib/function/Function<%28u64%2Ci32%2C~lib/typedarray/Uint64Array%29=>u64> $~lib/function/Function<%28f32%2Ci32%2C~lib/typedarray/Float32Array%29=>f32> $~lib/function/Function<%28f64%2Ci32%2C~lib/typedarray/Float64Array%29=>f64> $~lib/function/Function<%28i8%2Ci32%2C~lib/typedarray/Int8Array%29=>bool> $~lib/function/Function<%28u8%2Ci32%2C~lib/typedarray/Uint8Array%29=>bool> $~lib/function/Function<%28u8%2Ci32%2C~lib/typedarray/Uint8ClampedArray%29=>bool> $~lib/function/Function<%28i16%2Ci32%2C~lib/typedarray/Int16Array%29=>bool> $~lib/function/Function<%28u16%2Ci32%2C~lib/typedarray/Uint16Array%29=>bool> $~lib/function/Function<%28i32%2Ci32%2C~lib/typedarray/Int32Array%29=>bool> $~lib/function/Function<%28u32%2Ci32%2C~lib/typedarray/Uint32Array%29=>bool> $~lib/function/Function<%28i64%2Ci32%2C~lib/typedarray/Int64Array%29=>bool> $~lib/function/Function<%28u64%2Ci32%2C~lib/typedarray/Uint64Array%29=>bool> $~lib/function/Function<%28f32%2Ci32%2C~lib/typedarray/Float32Array%29=>bool> $~lib/function/Function<%28f64%2Ci32%2C~lib/typedarray/Float64Array%29=>bool> $~lib/function/Function<%28i8%2Ci32%2C~lib/typedarray/Int8Array%29=>void> $~lib/function/Function<%28u8%2Ci32%2C~lib/typedarray/Uint8Array%29=>void> $~lib/function/Function<%28u8%2Ci32%2C~lib/typedarray/Uint8ClampedArray%29=>void> $~lib/function/Function<%28i16%2Ci32%2C~lib/typedarray/Int16Array%29=>void> $~lib/function/Function<%28u16%2Ci32%2C~lib/typedarray/Uint16Array%29=>void> $~lib/function/Function<%28i32%2Ci32%2C~lib/typedarray/Int32Array%29=>void> $~lib/function/Function<%28u32%2Ci32%2C~lib/typedarray/Uint32Array%29=>void> $~lib/function/Function<%28i64%2Ci32%2C~lib/typedarray/Int64Array%29=>void> $~lib/function/Function<%28u64%2Ci32%2C~lib/typedarray/Uint64Array%29=>void> $~lib/function/Function<%28f32%2Ci32%2C~lib/typedarray/Float32Array%29=>void> $~lib/function/Function<%28f64%2Ci32%2C~lib/typedarray/Float64Array%29=>void> $~lib/array/Array<f32> $~lib/array/Array<f64> $~lib/array/Array<u8> $~lib/array/Array<i16> $~lib/array/Array<u16> $~lib/array/Array<u32> $~lib/array/Array<i64> $~lib/array/Array<u64> $~lib/function/Function<%28i8%2Ci8%29=>i32> $~lib/function/Function<%28u8%2Cu8%29=>i32> $~lib/function/Function<%28i16%2Ci16%29=>i32> $~lib/function/Function<%28u16%2Cu16%29=>i32> $~lib/function/Function<%28i32%2Ci32%29=>i32> $~lib/function/Function<%28u32%2Cu32%29=>i32> $~lib/function/Function<%28i64%2Ci64%29=>i32> $~lib/function/Function<%28u64%2Cu64%29=>i32> $~lib/function/Function<%28f32%2Cf32%29=>i32> $invalid
                                                                                end
                                                                                return
                                                                               end
                                                                               return
                                                                              end
                                                                              local.get $0
                                                                              local.get $1
                                                                              call $~lib/arraybuffer/ArrayBufferView~visit
                                                                              return
                                                                             end
                                                                             local.get $0
                                                                             local.get $1
                                                                             call $~lib/typedarray/Int8Array~visit
                                                                             return
                                                                            end
                                                                            local.get $0
                                                                            local.get $1
                                                                            call $~lib/typedarray/Uint8Array~visit
                                                                            return
                                                                           end
                                                                           local.get $0
                                                                           local.get $1
                                                                           call $~lib/typedarray/Uint8ClampedArray~visit
                                                                           return
                                                                          end
                                                                          local.get $0
                                                                          local.get $1
                                                                          call $~lib/typedarray/Int16Array~visit
                                                                          return
                                                                         end
                                                                         local.get $0
                                                                         local.get $1
                                                                         call $~lib/typedarray/Uint16Array~visit
                                                                         return
                                                                        end
                                                                        local.get $0
                                                                        local.get $1
                                                                        call $~lib/typedarray/Int32Array~visit
                                                                        return
                                                                       end
                                                                       local.get $0
                                                                       local.get $1
                                                                       call $~lib/typedarray/Uint32Array~visit
                                                                       return
                                                                      end
                                                                      local.get $0
                                                                      local.get $1
                                                                      call $~lib/typedarray/Int64Array~visit
                                                                      return
                                                                     end
                                                                     local.get $0
                                                                     local.get $1
                                                                     call $~lib/typedarray/Uint64Array~visit
                                                                     return
                                                                    end
                                                                    local.get $0
                                                                    local.get $1
                                                                    call $~lib/typedarray/Float32Array~visit
                                                                    return
                                                                   end
                                                                   local.get $0
                                                                   local.get $1
                                                                   call $~lib/typedarray/Float64Array~visit
                                                                   return
                                                                  end
                                                                  local.get $0
                                                                  local.get $1
                                                                  call $~lib/function/Function<%28f64%2Cf64%29=>i32>~visit
                                                                  return
                                                                 end
                                                                 local.get $0
                                                                 local.get $1
                                                                 call $~lib/array/Array<i8>~visit
                                                                 return
                                                                end
                                                                local.get $0
                                                                local.get $1
                                                                call $~lib/array/Array<i32>~visit
                                                                return
                                                               end
                                                               local.get $0
                                                               local.get $1
                                                               call $~lib/function/Function<%28i8%2Ci8%2Ci32%2C~lib/typedarray/Int8Array%29=>i8>~visit
                                                               return
                                                              end
                                                              local.get $0
                                                              local.get $1
                                                              call $~lib/function/Function<%28u8%2Cu8%2Ci32%2C~lib/typedarray/Uint8Array%29=>u8>~visit
                                                              return
                                                             end
                                                             local.get $0
                                                             local.get $1
                                                             call $~lib/function/Function<%28u8%2Cu8%2Ci32%2C~lib/typedarray/Uint8ClampedArray%29=>u8>~visit
                                                             return
                                                            end
                                                            local.get $0
                                                            local.get $1
                                                            call $~lib/function/Function<%28i16%2Ci16%2Ci32%2C~lib/typedarray/Int16Array%29=>i16>~visit
                                                            return
                                                           end
                                                           local.get $0
                                                           local.get $1
                                                           call $~lib/function/Function<%28u16%2Cu16%2Ci32%2C~lib/typedarray/Uint16Array%29=>u16>~visit
                                                           return
                                                          end
                                                          local.get $0
                                                          local.get $1
                                                          call $~lib/function/Function<%28i32%2Ci32%2Ci32%2C~lib/typedarray/Int32Array%29=>i32>~visit
                                                          return
                                                         end
                                                         local.get $0
                                                         local.get $1
                                                         call $~lib/function/Function<%28u32%2Cu32%2Ci32%2C~lib/typedarray/Uint32Array%29=>u32>~visit
                                                         return
                                                        end
                                                        local.get $0
                                                        local.get $1
                                                        call $~lib/function/Function<%28i64%2Ci64%2Ci32%2C~lib/typedarray/Int64Array%29=>i64>~visit
                                                        return
                                                       end
                                                       local.get $0
                                                       local.get $1
                                                       call $~lib/function/Function<%28u64%2Cu64%2Ci32%2C~lib/typedarray/Uint64Array%29=>u64>~visit
                                                       return
                                                      end
                                                      local.get $0
                                                      local.get $1
                                                      call $~lib/function/Function<%28f32%2Cf32%2Ci32%2C~lib/typedarray/Float32Array%29=>f32>~visit
                                                      return
                                                     end
                                                     local.get $0
                                                     local.get $1
                                                     call $~lib/function/Function<%28f64%2Cf64%2Ci32%2C~lib/typedarray/Float64Array%29=>f64>~visit
                                                     return
                                                    end
                                                    local.get $0
                                                    local.get $1
                                                    call $~lib/function/Function<%28i8%2Ci32%2C~lib/typedarray/Int8Array%29=>i8>~visit
                                                    return
                                                   end
                                                   local.get $0
                                                   local.get $1
                                                   call $~lib/function/Function<%28u8%2Ci32%2C~lib/typedarray/Uint8Array%29=>u8>~visit
                                                   return
                                                  end
                                                  local.get $0
                                                  local.get $1
                                                  call $~lib/function/Function<%28u8%2Ci32%2C~lib/typedarray/Uint8ClampedArray%29=>u8>~visit
                                                  return
                                                 end
                                                 local.get $0
                                                 local.get $1
                                                 call $~lib/function/Function<%28i16%2Ci32%2C~lib/typedarray/Int16Array%29=>i16>~visit
                                                 return
                                                end
                                                local.get $0
                                                local.get $1
                                                call $~lib/function/Function<%28u16%2Ci32%2C~lib/typedarray/Uint16Array%29=>u16>~visit
                                                return
                                               end
                                               local.get $0
                                               local.get $1
                                               call $~lib/function/Function<%28i32%2Ci32%2C~lib/typedarray/Int32Array%29=>i32>~visit
                                               return
                                              end
                                              local.get $0
                                              local.get $1
                                              call $~lib/function/Function<%28u32%2Ci32%2C~lib/typedarray/Uint32Array%29=>u32>~visit
                                              return
                                             end
                                             local.get $0
                                             local.get $1
                                             call $~lib/function/Function<%28i64%2Ci32%2C~lib/typedarray/Int64Array%29=>i64>~visit
                                             return
                                            end
                                            local.get $0
                                            local.get $1
                                            call $~lib/function/Function<%28u64%2Ci32%2C~lib/typedarray/Uint64Array%29=>u64>~visit
                                            return
                                           end
                                           local.get $0
                                           local.get $1
                                           call $~lib/function/Function<%28f32%2Ci32%2C~lib/typedarray/Float32Array%29=>f32>~visit
                                           return
                                          end
                                          local.get $0
                                          local.get $1
                                          call $~lib/function/Function<%28f64%2Ci32%2C~lib/typedarray/Float64Array%29=>f64>~visit
                                          return
                                         end
                                         local.get $0
                                         local.get $1
                                         call $~lib/function/Function<%28i8%2Ci32%2C~lib/typedarray/Int8Array%29=>bool>~visit
                                         return
                                        end
                                        local.get $0
                                        local.get $1
                                        call $~lib/function/Function<%28u8%2Ci32%2C~lib/typedarray/Uint8Array%29=>bool>~visit
                                        return
                                       end
                                       local.get $0
                                       local.get $1
                                       call $~lib/function/Function<%28u8%2Ci32%2C~lib/typedarray/Uint8ClampedArray%29=>bool>~visit
                                       return
                                      end
                                      local.get $0
                                      local.get $1
                                      call $~lib/function/Function<%28i16%2Ci32%2C~lib/typedarray/Int16Array%29=>bool>~visit
                                      return
                                     end
                                     local.get $0
                                     local.get $1
                                     call $~lib/function/Function<%28u16%2Ci32%2C~lib/typedarray/Uint16Array%29=>bool>~visit
                                     return
                                    end
                                    local.get $0
                                    local.get $1
                                    call $~lib/function/Function<%28i32%2Ci32%2C~lib/typedarray/Int32Array%29=>bool>~visit
                                    return
                                   end
                                   local.get $0
                                   local.get $1
                                   call $~lib/function/Function<%28u32%2Ci32%2C~lib/typedarray/Uint32Array%29=>bool>~visit
                                   return
                                  end
                                  local.get $0
                                  local.get $1
                                  call $~lib/function/Function<%28i64%2Ci32%2C~lib/typedarray/Int64Array%29=>bool>~visit
                                  return
                                 end
                                 local.get $0
                                 local.get $1
                                 call $~lib/function/Function<%28u64%2Ci32%2C~lib/typedarray/Uint64Array%29=>bool>~visit
                                 return
                                end
                                local.get $0
                                local.get $1
                                call $~lib/function/Function<%28f32%2Ci32%2C~lib/typedarray/Float32Array%29=>bool>~visit
                                return
                               end
                               local.get $0
                               local.get $1
                               call $~lib/function/Function<%28f64%2Ci32%2C~lib/typedarray/Float64Array%29=>bool>~visit
                               return
                              end
                              local.get $0
                              local.get $1
                              call $~lib/function/Function<%28i8%2Ci32%2C~lib/typedarray/Int8Array%29=>void>~visit
                              return
                             end
                             local.get $0
                             local.get $1
                             call $~lib/function/Function<%28u8%2Ci32%2C~lib/typedarray/Uint8Array%29=>void>~visit
                             return
                            end
                            local.get $0
                            local.get $1
                            call $~lib/function/Function<%28u8%2Ci32%2C~lib/typedarray/Uint8ClampedArray%29=>void>~visit
                            return
                           end
                           local.get $0
                           local.get $1
                           call $~lib/function/Function<%28i16%2Ci32%2C~lib/typedarray/Int16Array%29=>void>~visit
                           return
                          end
                          local.get $0
                          local.get $1
                          call $~lib/function/Function<%28u16%2Ci32%2C~lib/typedarray/Uint16Array%29=>void>~visit
                          return
                         end
                         local.get $0
                         local.get $1
                         call $~lib/function/Function<%28i32%2Ci32%2C~lib/typedarray/Int32Array%29=>void>~visit
                         return
                        end
                        local.get $0
                        local.get $1
                        call $~lib/function/Function<%28u32%2Ci32%2C~lib/typedarray/Uint32Array%29=>void>~visit
                        return
                       end
                       local.get $0
                       local.get $1
                       call $~lib/function/Function<%28i64%2Ci32%2C~lib/typedarray/Int64Array%29=>void>~visit
                       return
                      end
                      local.get $0
                      local.get $1
                      call $~lib/function/Function<%28u64%2Ci32%2C~lib/typedarray/Uint64Array%29=>void>~visit
                      return
                     end
                     local.get $0
                     local.get $1
                     call $~lib/function/Function<%28f32%2Ci32%2C~lib/typedarray/Float32Array%29=>void>~visit
                     return
                    end
                    local.get $0
                    local.get $1
                    call $~lib/function/Function<%28f64%2Ci32%2C~lib/typedarray/Float64Array%29=>void>~visit
                    return
                   end
                   local.get $0
                   local.get $1
                   call $~lib/array/Array<f32>~visit
                   return
                  end
                  local.get $0
                  local.get $1
                  call $~lib/array/Array<f64>~visit
                  return
                 end
                 local.get $0
                 local.get $1
                 call $~lib/array/Array<u8>~visit
                 return
                end
                local.get $0
                local.get $1
                call $~lib/array/Array<i16>~visit
                return
               end
               local.get $0
               local.get $1
               call $~lib/array/Array<u16>~visit
               return
              end
              local.get $0
              local.get $1
              call $~lib/array/Array<u32>~visit
              return
             end
             local.get $0
             local.get $1
             call $~lib/array/Array<i64>~visit
             return
            end
            local.get $0
            local.get $1
            call $~lib/array/Array<u64>~visit
            return
           end
           local.get $0
           local.get $1
           call $~lib/function/Function<%28i8%2Ci8%29=>i32>~visit
           return
          end
          local.get $0
          local.get $1
          call $~lib/function/Function<%28u8%2Cu8%29=>i32>~visit
          return
         end
         local.get $0
         local.get $1
         call $~lib/function/Function<%28i16%2Ci16%29=>i32>~visit
         return
        end
        local.get $0
        local.get $1
        call $~lib/function/Function<%28u16%2Cu16%29=>i32>~visit
        return
       end
       local.get $0
       local.get $1
       call $~lib/function/Function<%28i32%2Ci32%29=>i32>~visit
       return
      end
      local.get $0
      local.get $1
      call $~lib/function/Function<%28u32%2Cu32%29=>i32>~visit
      return
     end
     local.get $0
     local.get $1
     call $~lib/function/Function<%28i64%2Ci64%29=>i32>~visit
     return
    end
    local.get $0
    local.get $1
    call $~lib/function/Function<%28u64%2Cu64%29=>i32>~visit
    return
   end
   local.get $0
   local.get $1
   call $~lib/function/Function<%28f32%2Cf32%29=>i32>~visit
   return
  end
  unreachable
 )
 (func $~start (type $none_=>_none)
  call $start:std/typedarray
 )
 (func $~stack_check (type $none_=>_none)
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__data_end
  i32.lt_s
  if
   unreachable
  end
 )
 (func $std/typedarray/testArrayForEach<~lib/typedarray/Int8Array,i8>~anonymous|0 (type $i32_i32_i32_=>_none) (param $value i32) (param $index i32) (param $self i32)
  (local $matchedValue i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  global.get $std/typedarray/forEachValues
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  local.get $index
  call $~lib/array/Array<i32>#__get
  local.set $matchedValue
  local.get $value
  i32.extend8_s
  local.get $matchedValue
  i32.extend8_s
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $index
  global.get $std/typedarray/forEachCallCount
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/typedarray/forEachSelf
  local.get $self
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/typedarray/forEachCallCount
  i32.const 1
  i32.add
  global.set $std/typedarray/forEachCallCount
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayForEach<~lib/typedarray/Uint8Array,u8>~anonymous|0 (type $i32_i32_i32_=>_none) (param $value i32) (param $index i32) (param $self i32)
  (local $matchedValue i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  global.get $std/typedarray/forEachValues
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  local.get $index
  call $~lib/array/Array<i32>#__get
  local.set $matchedValue
  local.get $value
  i32.const 255
  i32.and
  local.get $matchedValue
  i32.const 255
  i32.and
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $index
  global.get $std/typedarray/forEachCallCount
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/typedarray/forEachSelf
  local.get $self
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/typedarray/forEachCallCount
  i32.const 1
  i32.add
  global.set $std/typedarray/forEachCallCount
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayForEach<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|0 (type $i32_i32_i32_=>_none) (param $value i32) (param $index i32) (param $self i32)
  (local $matchedValue i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  global.get $std/typedarray/forEachValues
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  local.get $index
  call $~lib/array/Array<i32>#__get
  local.set $matchedValue
  local.get $value
  i32.const 255
  i32.and
  local.get $matchedValue
  i32.const 255
  i32.and
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $index
  global.get $std/typedarray/forEachCallCount
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/typedarray/forEachSelf
  local.get $self
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/typedarray/forEachCallCount
  i32.const 1
  i32.add
  global.set $std/typedarray/forEachCallCount
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayForEach<~lib/typedarray/Int16Array,i16>~anonymous|0 (type $i32_i32_i32_=>_none) (param $value i32) (param $index i32) (param $self i32)
  (local $matchedValue i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  global.get $std/typedarray/forEachValues
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  local.get $index
  call $~lib/array/Array<i32>#__get
  local.set $matchedValue
  local.get $value
  i32.extend16_s
  local.get $matchedValue
  i32.extend16_s
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $index
  global.get $std/typedarray/forEachCallCount
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/typedarray/forEachSelf
  local.get $self
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/typedarray/forEachCallCount
  i32.const 1
  i32.add
  global.set $std/typedarray/forEachCallCount
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayForEach<~lib/typedarray/Uint16Array,u16>~anonymous|0 (type $i32_i32_i32_=>_none) (param $value i32) (param $index i32) (param $self i32)
  (local $matchedValue i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  global.get $std/typedarray/forEachValues
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  local.get $index
  call $~lib/array/Array<i32>#__get
  local.set $matchedValue
  local.get $value
  i32.const 65535
  i32.and
  local.get $matchedValue
  i32.const 65535
  i32.and
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $index
  global.get $std/typedarray/forEachCallCount
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/typedarray/forEachSelf
  local.get $self
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/typedarray/forEachCallCount
  i32.const 1
  i32.add
  global.set $std/typedarray/forEachCallCount
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayForEach<~lib/typedarray/Int32Array,i32>~anonymous|0 (type $i32_i32_i32_=>_none) (param $value i32) (param $index i32) (param $self i32)
  (local $matchedValue i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  global.get $std/typedarray/forEachValues
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  local.get $index
  call $~lib/array/Array<i32>#__get
  local.set $matchedValue
  local.get $value
  local.get $matchedValue
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $index
  global.get $std/typedarray/forEachCallCount
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/typedarray/forEachSelf
  local.get $self
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/typedarray/forEachCallCount
  i32.const 1
  i32.add
  global.set $std/typedarray/forEachCallCount
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayForEach<~lib/typedarray/Uint32Array,u32>~anonymous|0 (type $i32_i32_i32_=>_none) (param $value i32) (param $index i32) (param $self i32)
  (local $matchedValue i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  global.get $std/typedarray/forEachValues
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  local.get $index
  call $~lib/array/Array<i32>#__get
  local.set $matchedValue
  local.get $value
  local.get $matchedValue
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $index
  global.get $std/typedarray/forEachCallCount
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/typedarray/forEachSelf
  local.get $self
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/typedarray/forEachCallCount
  i32.const 1
  i32.add
  global.set $std/typedarray/forEachCallCount
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayForEach<~lib/typedarray/Int64Array,i64>~anonymous|0 (type $i64_i32_i32_=>_none) (param $value i64) (param $index i32) (param $self i32)
  (local $matchedValue i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  global.get $std/typedarray/forEachValues
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  local.get $index
  call $~lib/array/Array<i32>#__get
  local.set $matchedValue
  local.get $value
  local.get $matchedValue
  i64.extend_i32_s
  i64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $index
  global.get $std/typedarray/forEachCallCount
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/typedarray/forEachSelf
  local.get $self
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/typedarray/forEachCallCount
  i32.const 1
  i32.add
  global.set $std/typedarray/forEachCallCount
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayForEach<~lib/typedarray/Uint64Array,u64>~anonymous|0 (type $i64_i32_i32_=>_none) (param $value i64) (param $index i32) (param $self i32)
  (local $matchedValue i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  global.get $std/typedarray/forEachValues
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  local.get $index
  call $~lib/array/Array<i32>#__get
  local.set $matchedValue
  local.get $value
  local.get $matchedValue
  i64.extend_i32_s
  i64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $index
  global.get $std/typedarray/forEachCallCount
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/typedarray/forEachSelf
  local.get $self
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/typedarray/forEachCallCount
  i32.const 1
  i32.add
  global.set $std/typedarray/forEachCallCount
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayForEach<~lib/typedarray/Float32Array,f32>~anonymous|0 (type $f32_i32_i32_=>_none) (param $value f32) (param $index i32) (param $self i32)
  (local $matchedValue i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  global.get $std/typedarray/forEachValues
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  local.get $index
  call $~lib/array/Array<i32>#__get
  local.set $matchedValue
  local.get $value
  local.get $matchedValue
  f32.convert_i32_s
  f32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $index
  global.get $std/typedarray/forEachCallCount
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/typedarray/forEachSelf
  local.get $self
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/typedarray/forEachCallCount
  i32.const 1
  i32.add
  global.set $std/typedarray/forEachCallCount
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayForEach<~lib/typedarray/Float64Array,f64>~anonymous|0 (type $f64_i32_i32_=>_none) (param $value f64) (param $index i32) (param $self i32)
  (local $matchedValue i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  global.get $std/typedarray/forEachValues
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  local.get $index
  call $~lib/array/Array<i32>#__get
  local.set $matchedValue
  local.get $value
  local.get $matchedValue
  f64.convert_i32_s
  f64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $index
  global.get $std/typedarray/forEachCallCount
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/typedarray/forEachSelf
  local.get $self
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/typedarray/forEachCallCount
  i32.const 1
  i32.add
  global.set $std/typedarray/forEachCallCount
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $start:std/typedarray (type $none_=>_none)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local $27 i32)
  (local $28 i32)
  (local $29 i32)
  (local $30 i32)
  (local $31 i32)
  (local $32 i32)
  (local $33 i32)
  (local $34 i32)
  (local $35 i32)
  (local $36 i32)
  (local $37 i32)
  (local $38 i32)
  (local $39 i32)
  (local $40 i32)
  (local $41 i32)
  (local $42 i32)
  (local $43 i32)
  (local $44 i32)
  (local $45 i32)
  (local $46 i32)
  (local $47 i32)
  (local $48 i32)
  (local $49 i32)
  (local $50 i32)
  (local $51 i32)
  (local $52 i32)
  (local $53 i32)
  (local $54 i32)
  (local $55 i32)
  (local $56 i32)
  (local $57 i32)
  (local $58 i32)
  (local $59 i32)
  (local $60 i32)
  (local $61 i32)
  (local $62 i32)
  (local $63 i32)
  (local $64 i32)
  (local $65 i32)
  (local $66 i32)
  (local $67 i32)
  (local $68 i32)
  (local $69 i32)
  (local $70 i32)
  (local $71 i32)
  (local $72 i32)
  (local $73 i32)
  (local $74 i32)
  (local $75 i32)
  (local $76 i32)
  (local $77 i32)
  (local $78 i32)
  (local $79 i32)
  (local $80 i32)
  (local $81 i32)
  (local $82 i32)
  (local $83 i32)
  (local $84 i32)
  (local $85 i32)
  (local $86 i32)
  (local $87 i32)
  (local $88 i32)
  (local $89 i32)
  (local $90 i32)
  (local $91 i32)
  (local $92 i32)
  (local $93 i32)
  (local $94 i32)
  (local $95 i32)
  (local $96 i32)
  (local $97 i32)
  (local $98 i32)
  (local $99 i32)
  (local $100 i32)
  (local $101 i32)
  (local $102 i32)
  (local $103 i32)
  (local $104 i32)
  (local $105 i32)
  (local $106 i32)
  (local $107 i32)
  (local $108 i32)
  (local $109 i32)
  (local $110 i32)
  (local $111 i32)
  (local $112 i32)
  (local $113 i32)
  (local $114 i32)
  (local $115 i32)
  (local $116 i32)
  (local $117 i32)
  (local $118 i32)
  (local $119 i32)
  (local $120 i32)
  (local $121 i32)
  (local $122 i32)
  (local $123 i32)
  (local $124 i32)
  (local $125 i32)
  (local $126 i32)
  (local $127 i32)
  (local $128 i32)
  (local $129 i32)
  (local $130 i32)
  (local $131 i32)
  (local $132 i32)
  (local $133 i32)
  (local $134 i32)
  (local $135 i32)
  (local $136 i32)
  (local $137 i32)
  (local $138 i32)
  (local $139 i32)
  (local $140 i32)
  (local $141 i32)
  (local $142 i32)
  (local $143 i32)
  (local $144 i32)
  (local $145 i32)
  (local $146 i32)
  (local $147 i32)
  (local $148 i32)
  (local $149 i32)
  (local $150 i32)
  (local $151 i32)
  (local $152 i32)
  (local $153 i32)
  (local $154 i32)
  (local $155 i32)
  (local $156 i32)
  (local $157 i32)
  (local $158 i32)
  (local $159 i32)
  (local $160 i32)
  (local $161 i32)
  (local $162 i32)
  (local $163 i32)
  (local $164 i32)
  (local $165 i32)
  (local $166 i32)
  (local $167 i32)
  (local $168 i32)
  (local $169 i32)
  (local $170 i32)
  (local $171 i32)
  (local $172 i32)
  (local $173 i32)
  (local $174 i32)
  (local $175 i32)
  (local $176 i32)
  (local $177 i32)
  (local $178 i32)
  (local $179 i32)
  (local $180 i32)
  (local $181 i32)
  (local $182 i32)
  (local $183 i32)
  (local $184 i32)
  (local $185 i32)
  (local $186 i32)
  (local $187 i32)
  (local $188 i32)
  (local $189 i32)
  (local $190 i32)
  (local $191 i32)
  (local $192 i32)
  (local $193 i32)
  (local $194 i32)
  (local $195 i32)
  (local $196 i32)
  (local $197 i32)
  (local $198 i32)
  (local $199 i32)
  (local $200 i32)
  (local $201 i32)
  (local $202 i32)
  (local $203 i32)
  (local $204 i32)
  (local $205 i32)
  (local $206 i32)
  (local $207 i32)
  (local $208 i32)
  (local $209 i32)
  (local $210 i32)
  (local $211 i32)
  (local $212 i32)
  (local $213 i32)
  (local $214 i32)
  (local $215 i32)
  (local $216 i32)
  (local $217 i32)
  (local $218 i32)
  (local $219 i32)
  (local $220 i32)
  (local $221 i32)
  (local $222 i32)
  (local $223 i32)
  (local $224 i32)
  (local $225 i32)
  (local $226 i32)
  (local $227 i32)
  (local $228 i32)
  (local $229 i32)
  (local $230 i32)
  (local $231 i32)
  (local $232 i32)
  (local $233 i32)
  (local $234 i32)
  (local $235 i32)
  (local $236 i32)
  (local $237 i32)
  (local $238 i32)
  (local $239 i64)
  (local $240 i32)
  (local $241 i64)
  (local $242 i32)
  (local $243 f32)
  (local $244 i32)
  (local $245 f64)
  (local $246 i32)
  (local $247 i32)
  (local $248 i32)
  (local $249 i32)
  (local $250 i32)
  (local $251 i32)
  (local $252 i32)
  (local $253 i32)
  (local $254 i32)
  (local $255 i32)
  (local $256 i32)
  (local $257 i32)
  (local $258 i32)
  (local $259 i32)
  (local $260 i32)
  (local $261 i32)
  (local $262 i32)
  (local $263 i32)
  (local $264 i32)
  (local $265 i32)
  (local $266 i32)
  (local $267 i32)
  (local $268 i32)
  (local $269 i32)
  (local $270 i32)
  (local $271 i32)
  (local $272 i64)
  (local $273 i32)
  (local $274 i64)
  (local $275 i32)
  (local $276 f32)
  (local $277 i32)
  (local $278 f64)
  (local $279 i32)
  (local $280 i32)
  (local $281 i32)
  (local $282 i32)
  (local $283 i32)
  (local $284 i32)
  (local $285 i32)
  (local $286 i32)
  (local $287 i32)
  (local $288 i32)
  (local $289 i32)
  (local $290 i32)
  (local $291 i32)
  (local $292 i32)
  (local $293 i32)
  (local $294 i32)
  (local $295 i32)
  (local $296 i32)
  (local $297 i32)
  (local $298 i32)
  (local $299 i32)
  (local $300 i32)
  (local $301 i32)
  (local $302 i32)
  (local $303 i32)
  (local $304 i32)
  (local $305 i32)
  (local $306 i32)
  (local $307 i32)
  (local $308 i32)
  (local $309 i32)
  (local $310 i32)
  (local $311 i32)
  (local $312 i32)
  (local $313 i32)
  (local $314 i32)
  (local $315 i32)
  (local $316 i32)
  (local $317 i32)
  (local $318 i32)
  (local $319 i32)
  (local $320 i32)
  (local $321 i32)
  (local $322 i32)
  (local $323 i32)
  (local $324 i32)
  (local $325 i32)
  (local $326 i32)
  (local $327 i32)
  (local $328 i32)
  (local $329 i32)
  (local $330 i32)
  (local $331 i32)
  (local $332 i32)
  (local $333 i32)
  (local $334 i32)
  (local $335 i32)
  (local $336 i32)
  (local $337 i32)
  (local $338 i32)
  (local $339 i32)
  (local $340 i32)
  (local $341 i32)
  (local $342 i32)
  (local $343 i32)
  (local $344 i32)
  (local $345 i32)
  (local $346 i32)
  (local $347 i32)
  (local $348 i32)
  (local $349 i32)
  (local $350 i32)
  (local $351 i32)
  (local $352 i32)
  (local $353 i32)
  (local $354 i32)
  (local $355 i32)
  (local $356 i32)
  (local $357 i32)
  (local $358 i32)
  (local $359 i32)
  (local $360 i32)
  (local $361 i32)
  (local $362 i32)
  (local $363 i32)
  (local $364 i32)
  (local $365 i32)
  (local $366 i32)
  (local $367 i32)
  (local $368 i32)
  (local $369 i32)
  (local $370 i32)
  (local $371 i32)
  (local $372 i32)
  (local $373 i32)
  (local $374 i32)
  (local $375 i32)
  (local $376 i32)
  (local $377 i32)
  (local $378 i32)
  (local $379 i32)
  (local $380 i32)
  (local $381 i32)
  (local $382 i32)
  (local $383 i32)
  (local $384 i32)
  (local $385 i32)
  (local $386 i32)
  (local $387 i32)
  (local $388 i32)
  (local $389 i32)
  (local $390 i32)
  (local $391 i32)
  (local $392 i32)
  (local $393 i32)
  (local $394 i32)
  (local $395 i32)
  (local $396 i32)
  (local $397 i32)
  (local $398 i32)
  (local $399 i32)
  (local $400 i32)
  (local $401 i32)
  (local $402 i32)
  (local $403 i32)
  (local $404 i32)
  (local $405 i32)
  (local $406 i32)
  (local $407 i32)
  (local $408 i32)
  (local $409 i32)
  (local $410 i32)
  (local $411 i32)
  (local $412 i32)
  (local $413 i32)
  (local $414 i32)
  (local $415 i32)
  (local $416 i32)
  (local $417 i32)
  (local $418 i32)
  (local $419 i32)
  (local $420 i32)
  (local $421 i32)
  (local $422 i32)
  (local $423 i32)
  (local $424 i32)
  (local $425 i32)
  (local $426 i32)
  (local $427 i32)
  (local $428 i32)
  (local $429 i32)
  (local $430 i32)
  (local $431 i32)
  (local $432 i32)
  (local $433 i32)
  (local $434 i32)
  (local $435 i32)
  (local $436 i32)
  (local $437 i32)
  (local $438 i32)
  (local $439 i32)
  (local $440 i32)
  (local $441 i32)
  (local $442 i32)
  (local $443 i32)
  (local $444 i32)
  (local $445 i32)
  (local $446 i32)
  (local $447 i32)
  (local $448 i32)
  (local $449 i32)
  (local $450 i32)
  (local $451 i32)
  (local $452 i32)
  (local $453 i32)
  (local $454 i32)
  (local $455 i32)
  (local $456 i32)
  (local $457 i32)
  (local $458 i32)
  (local $459 i32)
  (local $460 i32)
  (local $461 i32)
  (local $462 i32)
  (local $463 i32)
  (local $464 i32)
  (local $465 i32)
  (local $466 i32)
  (local $467 i32)
  (local $468 i32)
  (local $469 i32)
  (local $470 i32)
  (local $471 i32)
  (local $472 i32)
  (local $473 i32)
  (local $474 i32)
  (local $475 i32)
  (local $476 i32)
  (local $477 i32)
  (local $478 i32)
  (local $479 i32)
  (local $480 i32)
  (local $481 i32)
  (local $482 i32)
  (local $483 i32)
  (local $484 i32)
  (local $485 i32)
  (local $486 i32)
  (local $487 i32)
  (local $488 i32)
  (local $489 i32)
  (local $490 i32)
  (local $491 i32)
  (local $492 i32)
  (local $493 i32)
  (local $494 i32)
  (local $495 i32)
  (local $496 i32)
  (local $497 i32)
  (local $498 i32)
  (local $499 i32)
  (local $500 i32)
  (local $501 i32)
  (local $502 i32)
  (local $503 i32)
  (local $504 i32)
  (local $505 i32)
  (local $506 i32)
  (local $507 i32)
  (local $508 i32)
  (local $509 i32)
  (local $510 i32)
  (local $511 i32)
  (local $512 i32)
  (local $513 i32)
  (local $514 i32)
  (local $515 i32)
  (local $516 i32)
  (local $517 i32)
  (local $518 i32)
  (local $519 i32)
  (local $520 i32)
  (local $521 i32)
  (local $522 i32)
  (local $523 i32)
  (local $524 i32)
  (local $525 i32)
  (local $526 i32)
  (local $527 i32)
  (local $528 i32)
  (local $529 i32)
  (local $530 i32)
  (local $531 i32)
  (local $532 i32)
  (local $533 i32)
  (local $534 i32)
  (local $535 i32)
  (local $536 i32)
  (local $537 i32)
  (local $538 i32)
  (local $539 i32)
  (local $540 i32)
  (local $541 i32)
  (local $542 i32)
  (local $543 i32)
  (local $544 i32)
  (local $545 i32)
  (local $546 i32)
  (local $547 i32)
  (local $548 i32)
  (local $549 i32)
  (local $550 i32)
  (local $551 i32)
  (local $552 i32)
  (local $553 i32)
  (local $554 i32)
  (local $555 i32)
  (local $556 i32)
  (local $557 i32)
  (local $558 i32)
  (local $559 i32)
  (local $560 i32)
  (local $561 i32)
  (local $562 i32)
  (local $563 i32)
  (local $564 i32)
  (local $565 i32)
  (local $566 i32)
  (local $567 i32)
  (local $568 i32)
  (local $569 i32)
  (local $570 i32)
  (local $571 i32)
  (local $572 i32)
  (local $573 i32)
  (local $574 i32)
  (local $575 i32)
  (local $576 i32)
  (local $577 i32)
  (local $578 i32)
  (local $579 i32)
  (local $580 i32)
  (local $581 i32)
  (local $582 i32)
  (local $583 i32)
  (local $584 i32)
  (local $585 i32)
  (local $586 i32)
  (local $587 i32)
  (local $588 i32)
  (local $589 i32)
  (local $590 i32)
  (local $591 i32)
  (local $592 i32)
  (local $593 i32)
  (local $594 i32)
  (local $595 i32)
  (local $596 i32)
  (local $597 i32)
  (local $598 i32)
  (local $599 i32)
  (local $600 i32)
  (local $601 i32)
  (local $602 i32)
  (local $603 i32)
  (local $604 i32)
  (local $605 i32)
  (local $606 i32)
  (local $607 i32)
  (local $608 i32)
  (local $609 i32)
  (local $610 i32)
  (local $611 i32)
  (local $612 i32)
  (local $613 i32)
  (local $614 i32)
  (local $615 i32)
  (local $616 i32)
  (local $617 i32)
  (local $618 i32)
  (local $619 i32)
  (local $620 i32)
  (local $621 i32)
  (local $622 i32)
  (local $623 i32)
  (local $624 i32)
  (local $625 i32)
  (local $626 i32)
  (local $627 i32)
  (local $628 i32)
  (local $629 i32)
  (local $630 i32)
  (local $631 i32)
  (local $632 i32)
  (local $633 i32)
  (local $634 i32)
  (local $635 i32)
  (local $636 i32)
  (local $637 i32)
  (local $638 i32)
  (local $639 i32)
  (local $640 i32)
  (local $641 i32)
  (local $642 i32)
  (local $643 i32)
  (local $644 i32)
  (local $645 i32)
  (local $646 i32)
  (local $647 i32)
  (local $648 i32)
  (local $649 i32)
  (local $650 i32)
  (local $651 i32)
  (local $652 i32)
  (local $653 i32)
  (local $654 i32)
  (local $655 i32)
  (local $656 i32)
  (local $657 i32)
  (local $658 i32)
  (local $659 i32)
  (local $660 i32)
  (local $661 i32)
  (local $662 i32)
  (local $663 i32)
  (local $664 i32)
  (local $665 i32)
  (local $666 i32)
  (local $667 i32)
  (local $668 i32)
  (local $669 i32)
  (local $670 i32)
  (local $671 i32)
  (local $672 i32)
  (local $673 i32)
  (local $674 i32)
  (local $675 i32)
  (local $676 i32)
  (local $677 i32)
  (local $678 i32)
  (local $679 i32)
  (local $680 i32)
  (local $681 i32)
  (local $682 i32)
  (local $683 i32)
  (local $684 i32)
  (local $685 i32)
  (local $686 i32)
  (local $687 i32)
  (local $688 i32)
  (local $689 i32)
  (local $690 i32)
  (local $691 i32)
  (local $692 i32)
  (local $693 i32)
  (local $694 i32)
  (local $695 i32)
  (local $696 i32)
  (local $697 i32)
  (local $698 i32)
  (local $699 i32)
  (local $700 i32)
  (local $701 i32)
  (local $702 i32)
  (local $703 i32)
  (local $704 i32)
  (local $705 i32)
  (local $706 i32)
  (local $707 i32)
  (local $708 i32)
  (local $709 i32)
  (local $710 i32)
  (local $711 i32)
  (local $712 i32)
  (local $713 i32)
  (local $714 i32)
  (local $715 i32)
  (local $716 i32)
  (local $717 i32)
  (local $718 i32)
  (local $719 i32)
  (local $720 i32)
  (local $721 i32)
  (local $722 i32)
  (local $723 i32)
  (local $724 i32)
  (local $725 i32)
  (local $726 i32)
  (local $727 i32)
  (local $728 i32)
  (local $729 i32)
  (local $730 i32)
  (local $731 i32)
  (local $732 i32)
  (local $733 i32)
  (local $734 i32)
  (local $735 i32)
  (local $736 i32)
  (local $737 i32)
  (local $738 i32)
  (local $739 i32)
  (local $740 i32)
  (local $741 i32)
  (local $742 i32)
  (local $743 i32)
  (local $744 i32)
  (local $745 i32)
  (local $746 i32)
  (local $747 i32)
  (local $748 i32)
  (local $749 i32)
  (local $750 i32)
  (local $751 i32)
  (local $752 i32)
  (local $753 i32)
  (local $754 i32)
  (local $755 i32)
  (local $756 i32)
  (local $757 i32)
  (local $758 i32)
  (local $759 i32)
  (local $760 i32)
  (local $761 i32)
  (local $762 i32)
  (local $763 i32)
  (local $764 i32)
  (local $765 i32)
  (local $766 i32)
  (local $767 i32)
  (local $768 i32)
  (local $769 i32)
  (local $770 i32)
  (local $771 i32)
  (local $772 i32)
  (local $773 i32)
  (local $774 i32)
  (local $775 i32)
  (local $776 i32)
  (local $777 i32)
  (local $778 i32)
  (local $779 i32)
  (local $780 i32)
  (local $781 i32)
  (local $782 i32)
  (local $783 i32)
  (local $784 i32)
  (local $785 i32)
  (local $786 i32)
  (local $787 i32)
  (local $788 i32)
  (local $789 i32)
  (local $790 i32)
  (local $791 i32)
  (local $792 i32)
  (local $793 i32)
  (local $794 i32)
  (local $795 i32)
  (local $796 i32)
  (local $797 i32)
  (local $798 i32)
  (local $799 i32)
  (local $800 i32)
  (local $801 i32)
  (local $802 i32)
  (local $803 i32)
  (local $804 i32)
  (local $805 i32)
  (local $806 i32)
  (local $807 i32)
  (local $808 i32)
  (local $809 i32)
  (local $810 i32)
  (local $811 i32)
  (local $812 i32)
  (local $813 i32)
  (local $814 i32)
  (local $815 i32)
  (local $816 i32)
  (local $817 i32)
  (local $818 i32)
  (local $819 i32)
  (local $820 i32)
  (local $821 i32)
  (local $822 i32)
  (local $823 i32)
  (local $824 i32)
  (local $825 i32)
  (local $826 i32)
  (local $827 i32)
  (local $828 i32)
  (local $829 i32)
  (local $830 i32)
  (local $831 i32)
  (local $832 i32)
  (local $833 i32)
  (local $834 i32)
  (local $835 i32)
  (local $836 i32)
  (local $837 i32)
  (local $838 i32)
  (local $839 i32)
  (local $840 i32)
  (local $841 i32)
  (local $842 i32)
  (local $843 i32)
  (local $844 i32)
  (local $845 i32)
  (local $846 i32)
  (local $847 i32)
  (local $848 i32)
  (local $849 i32)
  (local $850 i32)
  (local $851 i32)
  (local $852 i32)
  (local $853 i32)
  (local $854 i32)
  (local $855 i32)
  (local $856 i32)
  (local $857 i32)
  (local $858 i32)
  (local $859 i32)
  (local $860 i32)
  (local $861 i32)
  (local $862 i32)
  (local $863 i32)
  (local $864 i32)
  (local $865 i32)
  (local $866 i32)
  (local $867 i32)
  (local $868 i32)
  (local $869 i32)
  (local $870 i32)
  (local $871 i32)
  (local $872 i32)
  (local $873 i32)
  (local $874 i32)
  (local $875 i32)
  (local $876 i32)
  (local $877 i32)
  (local $878 i32)
  (local $879 i32)
  (local $880 i32)
  (local $881 i32)
  (local $882 i32)
  (local $883 i32)
  (local $884 i32)
  (local $885 i32)
  (local $886 i32)
  (local $887 i32)
  (local $888 i32)
  (local $889 i32)
  (local $890 i32)
  (local $891 i32)
  (local $892 i32)
  (local $893 i32)
  (local $894 i32)
  (local $895 i32)
  (local $896 i32)
  (local $897 i32)
  (local $898 i32)
  (local $899 i32)
  (local $900 i32)
  (local $901 i32)
  (local $902 i32)
  (local $903 i32)
  (local $904 i32)
  (local $905 i32)
  (local $906 i32)
  (local $907 i32)
  (local $908 i32)
  (local $909 i32)
  (local $910 i32)
  (local $911 i32)
  (local $912 i32)
  (local $913 i32)
  (local $914 i32)
  (local $915 i32)
  (local $916 i32)
  (local $917 i32)
  (local $918 i32)
  (local $919 i32)
  (local $920 i32)
  (local $921 i32)
  (local $922 i32)
  (local $923 i32)
  (local $924 i32)
  (local $925 i32)
  (local $926 i32)
  (local $927 i32)
  (local $928 i32)
  (local $929 i32)
  (local $930 i32)
  (local $931 i32)
  (local $932 i32)
  (local $933 i32)
  (local $934 i32)
  (local $935 i32)
  (local $936 i32)
  (local $937 i32)
  (local $938 i32)
  (local $939 i32)
  (local $940 i32)
  (local $941 i32)
  (local $942 i32)
  (local $943 i32)
  (local $944 i32)
  (local $945 i32)
  (local $946 i32)
  (local $947 i32)
  (local $948 i32)
  (local $949 i32)
  (local $950 i32)
  (local $951 i32)
  (local $952 i32)
  (local $953 i32)
  (local $954 i32)
  (local $955 i32)
  (local $956 i32)
  (local $957 i32)
  (local $958 i32)
  (local $959 i32)
  (local $960 i32)
  (local $961 i32)
  (local $962 i32)
  (local $963 i32)
  (local $964 i32)
  (local $965 i32)
  (local $966 i32)
  (local $967 i32)
  (local $968 i32)
  (local $969 i32)
  (local $970 i32)
  (local $971 i32)
  (local $972 i32)
  (local $973 i32)
  (local $974 i32)
  (local $975 i32)
  (local $976 i32)
  (local $977 i32)
  (local $978 i32)
  (local $979 i32)
  (local $980 i32)
  (local $981 i32)
  (local $982 i32)
  (local $983 i32)
  (local $984 i32)
  (local $985 i32)
  (local $986 i32)
  (local $987 i32)
  (local $988 i32)
  (local $989 i32)
  (local $990 i32)
  (local $991 i32)
  (local $992 i32)
  (local $993 i32)
  (local $994 i32)
  (local $995 i32)
  (local $996 i32)
  (local $997 i32)
  (local $998 i32)
  (local $999 i32)
  (local $1000 i32)
  (local $1001 i32)
  (local $1002 i32)
  (local $1003 i32)
  (local $1004 i32)
  (local $1005 i32)
  (local $1006 i32)
  (local $1007 i32)
  (local $1008 i32)
  (local $1009 i32)
  (local $1010 i32)
  (local $1011 i32)
  (local $1012 i32)
  (local $1013 i32)
  (local $1014 i32)
  (local $1015 i32)
  (local $1016 i32)
  (local $1017 i32)
  (local $1018 i32)
  (local $1019 i32)
  (local $1020 i32)
  (local $1021 i32)
  (local $1022 i32)
  (local $1023 i32)
  (local $1024 i32)
  (local $1025 i32)
  (local $1026 i32)
  (local $1027 i32)
  (local $1028 i32)
  (local $1029 i32)
  (local $1030 i32)
  (local $1031 i32)
  (local $1032 i32)
  (local $1033 i32)
  (local $1034 i32)
  (local $1035 i32)
  (local $1036 i32)
  (local $1037 i32)
  (local $1038 i32)
  (local $1039 i32)
  (local $1040 i32)
  (local $1041 i32)
  (local $1042 i32)
  (local $1043 i32)
  (local $1044 i32)
  (local $1045 i32)
  (local $1046 i32)
  (local $1047 i32)
  (local $1048 i32)
  (local $1049 i32)
  (local $1050 i32)
  (local $1051 i32)
  (local $1052 i32)
  (local $1053 i32)
  (local $1054 i32)
  (local $1055 i32)
  (local $1056 i32)
  (local $1057 i32)
  (local $1058 i32)
  (local $1059 i32)
  (local $1060 i32)
  (local $1061 i32)
  (local $1062 i32)
  (local $1063 i32)
  (local $1064 i32)
  (local $1065 i32)
  (local $1066 i32)
  (local $1067 i32)
  (local $1068 i32)
  (local $1069 i32)
  (local $1070 i32)
  (local $1071 i32)
  (local $1072 i32)
  (local $1073 i32)
  (local $1074 i32)
  (local $1075 i32)
  (local $1076 i32)
  (local $1077 i32)
  (local $1078 i32)
  (local $1079 i32)
  (local $1080 i32)
  (local $1081 i32)
  (local $1082 i32)
  (local $1083 i32)
  (local $1084 i32)
  (local $1085 i32)
  (local $1086 i32)
  (local $1087 i32)
  (local $1088 i32)
  (local $1089 i32)
  (local $1090 i32)
  (local $1091 i32)
  (local $1092 i32)
  (local $1093 i32)
  (local $1094 i32)
  (local $1095 i32)
  (local $1096 i32)
  (local $1097 i32)
  (local $1098 i32)
  (local $1099 i32)
  (local $1100 i32)
  (local $1101 i32)
  (local $1102 i32)
  (local $1103 i32)
  (local $1104 i64)
  (local $1105 i64)
  (local $1106 i32)
  (local $1107 i32)
  (local $1108 i32)
  (local $1109 i32)
  (local $1110 i32)
  (local $1111 i32)
  (local $1112 i32)
  (local $1113 i64)
  (local $1114 i64)
  (local $1115 i32)
  (local $1116 i32)
  (local $1117 i32)
  (local $1118 i32)
  (local $1119 i32)
  (local $1120 i32)
  (local $1121 i32)
  (local $1122 i64)
  (local $1123 i64)
  (local $1124 i32)
  (local $1125 i32)
  (local $1126 i32)
  (local $1127 i32)
  (local $1128 i32)
  (local $1129 i32)
  (local $1130 i32)
  (local $1131 i64)
  (local $1132 i64)
  (local $1133 i32)
  (local $1134 i32)
  (local $1135 i32)
  (local $1136 i32)
  (local $1137 i32)
  (local $1138 i32)
  (local $1139 i32)
  (local $1140 i64)
  (local $1141 i64)
  (local $1142 i32)
  (local $1143 i32)
  (local $1144 i32)
  (local $1145 i32)
  (local $1146 i32)
  (local $1147 i32)
  (local $1148 i32)
  (local $1149 i32)
  (local $1150 i32)
  (local $1151 i32)
  (local $1152 i32)
  (local $1153 i64)
  (local $1154 i64)
  (local $1155 i32)
  (local $1156 i32)
  (local $1157 i32)
  (local $1158 i32)
  (local $1159 i32)
  (local $1160 i32)
  (local $1161 i32)
  (local $1162 i64)
  (local $1163 i64)
  (local $1164 i32)
  (local $1165 i32)
  (local $1166 i32)
  (local $1167 i32)
  (local $1168 i32)
  (local $1169 i32)
  (local $1170 i32)
  (local $1171 i64)
  (local $1172 i64)
  (local $1173 i32)
  (local $1174 i32)
  (local $1175 i32)
  (local $1176 i32)
  (local $1177 i32)
  (local $1178 i32)
  (local $1179 i32)
  (local $1180 i64)
  (local $1181 i64)
  (local $1182 i32)
  (local $1183 i32)
  (local $1184 i32)
  (local $1185 i32)
  (local $1186 i32)
  (local $1187 i32)
  (local $1188 i32)
  (local $1189 i64)
  (local $1190 i64)
  (local $1191 i32)
  (local $1192 i32)
  (local $1193 i32)
  (local $1194 i32)
  (local $1195 i32)
  (local $1196 i32)
  (local $1197 i32)
  (local $1198 i32)
  (local $1199 i32)
  (local $1200 i32)
  (local $1201 i32)
  (local $1202 f32)
  (local $1203 f32)
  (local $1204 i32)
  (local $1205 i32)
  (local $1206 i32)
  (local $1207 i32)
  (local $1208 i32)
  (local $1209 i32)
  (local $1210 i32)
  (local $1211 f32)
  (local $1212 f32)
  (local $1213 i32)
  (local $1214 i32)
  (local $1215 i32)
  (local $1216 i32)
  (local $1217 i32)
  (local $1218 i32)
  (local $1219 i32)
  (local $1220 f32)
  (local $1221 f32)
  (local $1222 i32)
  (local $1223 i32)
  (local $1224 i32)
  (local $1225 i32)
  (local $1226 i32)
  (local $1227 i32)
  (local $1228 i32)
  (local $1229 f32)
  (local $1230 f32)
  (local $1231 i32)
  (local $1232 i32)
  (local $1233 i32)
  (local $1234 i32)
  (local $1235 i32)
  (local $1236 i32)
  (local $1237 i32)
  (local $1238 i32)
  (local $1239 i32)
  (local $1240 i32)
  (local $1241 i32)
  (local $1242 f64)
  (local $1243 f64)
  (local $1244 i32)
  (local $1245 i32)
  (local $1246 i32)
  (local $1247 i32)
  (local $1248 i32)
  (local $1249 i32)
  (local $1250 i32)
  (local $1251 f64)
  (local $1252 f64)
  (local $1253 i32)
  (local $1254 i32)
  (local $1255 i32)
  (local $1256 i32)
  (local $1257 i32)
  (local $1258 i32)
  (local $1259 i32)
  (local $1260 f64)
  (local $1261 f64)
  (local $1262 i32)
  (local $1263 i32)
  (local $1264 i32)
  (local $1265 i32)
  (local $1266 i32)
  (local $1267 i32)
  (local $1268 i32)
  (local $1269 f64)
  (local $1270 f64)
  (local $1271 i32)
  (local $1272 i32)
  (local $1273 i32)
  (local $1274 i32)
  (local $1275 i32)
  (local $1276 i32)
  (local $1277 i32)
  (local $1278 i32)
  (local $1279 i32)
  (local $1280 i32)
  (local $1281 i32)
  (local $1282 i32)
  (local $1283 i32)
  (local $1284 i32)
  (local $1285 i32)
  (local $1286 i32)
  (local $1287 i32)
  (local $1288 i32)
  (local $1289 i32)
  (local $1290 i32)
  (local $1291 i32)
  (local $1292 i32)
  (local $1293 i32)
  (local $1294 i32)
  (local $1295 i32)
  (local $1296 i32)
  (local $1297 i32)
  (local $1298 i32)
  (local $1299 i32)
  (local $1300 i32)
  (local $1301 i32)
  (local $1302 i32)
  (local $1303 i32)
  (local $1304 i32)
  (local $1305 i32)
  (local $1306 i32)
  (local $1307 i32)
  (local $1308 i32)
  (local $1309 i32)
  (local $1310 i32)
  (local $1311 i32)
  (local $1312 i32)
  (local $1313 i32)
  (local $1314 i32)
  (local $1315 i32)
  (local $1316 i32)
  (local $1317 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 1856
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 1856
  memory.fill $0
  global.get $~lib/typedarray/Int8Array.BYTES_PER_ELEMENT
  i32.const 1
  i32.eq
  drop
  global.get $~lib/typedarray/Uint8Array.BYTES_PER_ELEMENT
  i32.const 1
  i32.eq
  drop
  global.get $~lib/typedarray/Uint8ClampedArray.BYTES_PER_ELEMENT
  i32.const 1
  i32.eq
  drop
  global.get $~lib/typedarray/Int16Array.BYTES_PER_ELEMENT
  i32.const 2
  i32.eq
  drop
  global.get $~lib/typedarray/Uint16Array.BYTES_PER_ELEMENT
  i32.const 2
  i32.eq
  drop
  global.get $~lib/typedarray/Int32Array.BYTES_PER_ELEMENT
  i32.const 4
  i32.eq
  drop
  global.get $~lib/typedarray/Uint32Array.BYTES_PER_ELEMENT
  i32.const 4
  i32.eq
  drop
  global.get $~lib/typedarray/Int64Array.BYTES_PER_ELEMENT
  i32.const 8
  i32.eq
  drop
  global.get $~lib/typedarray/Uint64Array.BYTES_PER_ELEMENT
  i32.const 8
  i32.eq
  drop
  global.get $~lib/typedarray/Float32Array.BYTES_PER_ELEMENT
  i32.const 4
  i32.eq
  drop
  global.get $~lib/typedarray/Float64Array.BYTES_PER_ELEMENT
  i32.const 8
  i32.eq
  drop
  memory.size $0
  i32.const 16
  i32.shl
  global.get $~lib/memory/__heap_base
  i32.sub
  i32.const 1
  i32.shr_u
  global.set $~lib/rt/itcms/threshold
  i32.const 112
  call $~lib/rt/itcms/initLazy
  global.set $~lib/rt/itcms/pinSpace
  i32.const 144
  call $~lib/rt/itcms/initLazy
  global.set $~lib/rt/itcms/toSpace
  i32.const 224
  call $~lib/rt/itcms/initLazy
  global.set $~lib/rt/itcms/fromSpace
  i32.const 0
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $0
  call $~lib/typedarray/Int8Array#constructor
  local.tee $1
  i32.store $0
  local.get $1
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $1
  i32.load $0 offset=8
  local.get $0
  global.get $~lib/typedarray/Int8Array.BYTES_PER_ELEMENT
  i32.mul
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $1
  call $~lib/typedarray/Int8Array#get:length
  local.get $0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $0
  call $~lib/typedarray/Uint8Array#constructor
  local.tee $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $2
  i32.load $0 offset=8
  local.get $0
  global.get $~lib/typedarray/Uint8Array.BYTES_PER_ELEMENT
  i32.mul
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $2
  call $~lib/typedarray/Uint8Array#get:length
  local.get $0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $0
  call $~lib/typedarray/Uint8ClampedArray#constructor
  local.tee $3
  i32.store $0 offset=8
  local.get $3
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $3
  i32.load $0 offset=8
  local.get $0
  global.get $~lib/typedarray/Uint8Array.BYTES_PER_ELEMENT
  i32.mul
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $3
  call $~lib/typedarray/Uint8ClampedArray#get:length
  local.get $0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $0
  call $~lib/typedarray/Int16Array#constructor
  local.tee $4
  i32.store $0 offset=12
  local.get $4
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $4
  i32.load $0 offset=8
  local.get $0
  global.get $~lib/typedarray/Int16Array.BYTES_PER_ELEMENT
  i32.mul
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $4
  call $~lib/typedarray/Int16Array#get:length
  local.get $0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $0
  call $~lib/typedarray/Uint16Array#constructor
  local.tee $5
  i32.store $0 offset=16
  local.get $5
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $5
  i32.load $0 offset=8
  local.get $0
  global.get $~lib/typedarray/Uint16Array.BYTES_PER_ELEMENT
  i32.mul
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $5
  call $~lib/typedarray/Uint16Array#get:length
  local.get $0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $0
  call $~lib/typedarray/Int32Array#constructor
  local.tee $6
  i32.store $0 offset=20
  local.get $6
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $6
  i32.load $0 offset=8
  local.get $0
  global.get $~lib/typedarray/Int32Array.BYTES_PER_ELEMENT
  i32.mul
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $6
  call $~lib/typedarray/Int32Array#get:length
  local.get $0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $0
  call $~lib/typedarray/Uint32Array#constructor
  local.tee $7
  i32.store $0 offset=24
  local.get $7
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $7
  i32.load $0 offset=8
  local.get $0
  global.get $~lib/typedarray/Uint32Array.BYTES_PER_ELEMENT
  i32.mul
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $7
  call $~lib/typedarray/Uint32Array#get:length
  local.get $0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $0
  call $~lib/typedarray/Int64Array#constructor
  local.tee $8
  i32.store $0 offset=28
  local.get $8
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $8
  i32.load $0 offset=8
  local.get $0
  global.get $~lib/typedarray/Int64Array.BYTES_PER_ELEMENT
  i32.mul
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $8
  call $~lib/typedarray/Int64Array#get:length
  local.get $0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $0
  call $~lib/typedarray/Uint64Array#constructor
  local.tee $9
  i32.store $0 offset=32
  local.get $9
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $9
  i32.load $0 offset=8
  local.get $0
  global.get $~lib/typedarray/Uint64Array.BYTES_PER_ELEMENT
  i32.mul
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $9
  call $~lib/typedarray/Uint64Array#get:length
  local.get $0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $0
  call $~lib/typedarray/Float32Array#constructor
  local.tee $10
  i32.store $0 offset=36
  local.get $10
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $10
  i32.load $0 offset=8
  local.get $0
  global.get $~lib/typedarray/Float32Array.BYTES_PER_ELEMENT
  i32.mul
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $10
  call $~lib/typedarray/Float32Array#get:length
  local.get $0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $0
  call $~lib/typedarray/Float64Array#constructor
  local.tee $11
  i32.store $0 offset=40
  local.get $11
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $11
  i32.load $0 offset=8
  local.get $0
  global.get $~lib/typedarray/Float64Array.BYTES_PER_ELEMENT
  i32.mul
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $11
  call $~lib/typedarray/Float64Array#get:length
  local.get $0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 5
  local.set $12
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $12
  call $~lib/typedarray/Int8Array#constructor
  local.tee $13
  i32.store $0 offset=44
  local.get $13
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $13
  i32.load $0 offset=8
  local.get $12
  global.get $~lib/typedarray/Int8Array.BYTES_PER_ELEMENT
  i32.mul
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $13
  call $~lib/typedarray/Int8Array#get:length
  local.get $12
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $12
  call $~lib/typedarray/Uint8Array#constructor
  local.tee $14
  i32.store $0 offset=48
  local.get $14
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $14
  i32.load $0 offset=8
  local.get $12
  global.get $~lib/typedarray/Uint8Array.BYTES_PER_ELEMENT
  i32.mul
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $14
  call $~lib/typedarray/Uint8Array#get:length
  local.get $12
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $12
  call $~lib/typedarray/Uint8ClampedArray#constructor
  local.tee $15
  i32.store $0 offset=52
  local.get $15
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $15
  i32.load $0 offset=8
  local.get $12
  global.get $~lib/typedarray/Uint8Array.BYTES_PER_ELEMENT
  i32.mul
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $15
  call $~lib/typedarray/Uint8ClampedArray#get:length
  local.get $12
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $12
  call $~lib/typedarray/Int16Array#constructor
  local.tee $16
  i32.store $0 offset=56
  local.get $16
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $16
  i32.load $0 offset=8
  local.get $12
  global.get $~lib/typedarray/Int16Array.BYTES_PER_ELEMENT
  i32.mul
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $16
  call $~lib/typedarray/Int16Array#get:length
  local.get $12
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $12
  call $~lib/typedarray/Uint16Array#constructor
  local.tee $17
  i32.store $0 offset=60
  local.get $17
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $17
  i32.load $0 offset=8
  local.get $12
  global.get $~lib/typedarray/Uint16Array.BYTES_PER_ELEMENT
  i32.mul
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $17
  call $~lib/typedarray/Uint16Array#get:length
  local.get $12
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $12
  call $~lib/typedarray/Int32Array#constructor
  local.tee $18
  i32.store $0 offset=64
  local.get $18
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $18
  i32.load $0 offset=8
  local.get $12
  global.get $~lib/typedarray/Int32Array.BYTES_PER_ELEMENT
  i32.mul
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $18
  call $~lib/typedarray/Int32Array#get:length
  local.get $12
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $12
  call $~lib/typedarray/Uint32Array#constructor
  local.tee $19
  i32.store $0 offset=68
  local.get $19
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $19
  i32.load $0 offset=8
  local.get $12
  global.get $~lib/typedarray/Uint32Array.BYTES_PER_ELEMENT
  i32.mul
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $19
  call $~lib/typedarray/Uint32Array#get:length
  local.get $12
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $12
  call $~lib/typedarray/Int64Array#constructor
  local.tee $20
  i32.store $0 offset=72
  local.get $20
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $20
  i32.load $0 offset=8
  local.get $12
  global.get $~lib/typedarray/Int64Array.BYTES_PER_ELEMENT
  i32.mul
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $20
  call $~lib/typedarray/Int64Array#get:length
  local.get $12
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $12
  call $~lib/typedarray/Uint64Array#constructor
  local.tee $21
  i32.store $0 offset=76
  local.get $21
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $21
  i32.load $0 offset=8
  local.get $12
  global.get $~lib/typedarray/Uint64Array.BYTES_PER_ELEMENT
  i32.mul
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $21
  call $~lib/typedarray/Uint64Array#get:length
  local.get $12
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $12
  call $~lib/typedarray/Float32Array#constructor
  local.tee $22
  i32.store $0 offset=80
  local.get $22
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $22
  i32.load $0 offset=8
  local.get $12
  global.get $~lib/typedarray/Float32Array.BYTES_PER_ELEMENT
  i32.mul
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $22
  call $~lib/typedarray/Float32Array#get:length
  local.get $12
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $12
  call $~lib/typedarray/Float64Array#constructor
  local.tee $23
  i32.store $0 offset=84
  local.get $23
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $23
  i32.load $0 offset=8
  local.get $12
  global.get $~lib/typedarray/Float64Array.BYTES_PER_ELEMENT
  i32.mul
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $23
  call $~lib/typedarray/Float64Array#get:length
  local.get $12
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int32Array#constructor
  local.tee $24
  i32.store $0 offset=88
  local.get $24
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int32Array#__set
  local.get $24
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int32Array#__set
  local.get $24
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int32Array#__set
  local.get $24
  call $~lib/typedarray/Int32Array#get:length
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $24
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $24
  i32.load $0 offset=8
  i32.const 3
  i32.const 4
  i32.mul
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $24
  i32.const 0
  call $~lib/typedarray/Int32Array#__get
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $24
  i32.const 1
  call $~lib/typedarray/Int32Array#__get
  i32.const 2
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $24
  i32.const 2
  call $~lib/typedarray/Int32Array#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $24
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int32Array#subarray
  local.tee $24
  i32.store $0 offset=88
  local.get $24
  call $~lib/typedarray/Int32Array#get:length
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $24
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 1
  i32.const 4
  i32.mul
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $24
  i32.load $0 offset=8
  i32.const 1
  i32.const 4
  i32.mul
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $24
  i32.const 0
  call $~lib/typedarray/Int32Array#__get
  i32.const 2
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 8
  call $~lib/typedarray/Float64Array#constructor
  local.tee $25
  i32.store $0 offset=92
  local.get $25
  i32.const 0
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $25
  i32.const 1
  f64.const 2
  call $~lib/typedarray/Float64Array#__set
  local.get $25
  i32.const 2
  f64.const 7
  call $~lib/typedarray/Float64Array#__set
  local.get $25
  i32.const 3
  f64.const 6
  call $~lib/typedarray/Float64Array#__set
  local.get $25
  i32.const 4
  f64.const 5
  call $~lib/typedarray/Float64Array#__set
  local.get $25
  i32.const 5
  f64.const 4
  call $~lib/typedarray/Float64Array#__set
  local.get $25
  i32.const 6
  f64.const 3
  call $~lib/typedarray/Float64Array#__set
  local.get $25
  i32.const 7
  f64.const 8
  call $~lib/typedarray/Float64Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $25
  i32.const 2
  i32.const 6
  call $~lib/typedarray/Float64Array#subarray
  local.tee $25
  i32.store $0 offset=92
  local.get $25
  call $~lib/typedarray/Float64Array#get:length
  i32.const 4
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $25
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 2
  i32.const 8
  i32.mul
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $25
  i32.load $0 offset=8
  i32.const 4
  i32.const 8
  i32.mul
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $25
  i32.const 0
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Float64Array#sort@varargs
  drop
  local.get $25
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.const 4
  f64.eq
  if (result i32)
   local.get $25
   i32.const 1
   call $~lib/typedarray/Float64Array#__get
   f64.const 5
   f64.eq
  else
   i32.const 0
  end
  if (result i32)
   local.get $25
   i32.const 2
   call $~lib/typedarray/Float64Array#__get
   f64.const 6
   f64.eq
  else
   i32.const 0
  end
  if (result i32)
   local.get $25
   i32.const 3
   call $~lib/typedarray/Float64Array#__get
   f64.const 7
   f64.eq
  else
   i32.const 0
  end
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint8ClampedArray#constructor
  local.tee $26
  i32.store $0 offset=96
  local.get $26
  i32.const 0
  i32.const -32
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $26
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $26
  i32.const 2
  i32.const 256
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $26
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#__get
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $26
  i32.const 1
  call $~lib/typedarray/Uint8ClampedArray#__get
  i32.const 2
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $26
  i32.const 2
  call $~lib/typedarray/Uint8ClampedArray#__get
  i32.const 255
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 5
  call $~lib/typedarray/Int8Array#constructor
  local.tee $27
  i32.store $0 offset=100
  local.get $27
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int8Array#__set
  local.get $27
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int8Array#__set
  local.get $27
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int8Array#__set
  local.get $27
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Int8Array#__set
  local.get $27
  i32.const 4
  i32.const 5
  call $~lib/typedarray/Int8Array#__set
  local.get $27
  i32.const 1
  i32.const 1
  i32.const 3
  call $~lib/typedarray/Int8Array#fill
  drop
  block $std/typedarray/isInt8ArrayEqual|inlined.0 (result i32)
   local.get $27
   local.set $30
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 0
   i32.const 15
   i32.const 304
   call $~lib/rt/__newArray
   local.tee $31
   i32.store $0 offset=104
   local.get $30
   call $~lib/typedarray/Int8Array#get:length
   local.get $31
   call $~lib/array/Array<i8>#get:length
   i32.ne
   if
    i32.const 0
    br $std/typedarray/isInt8ArrayEqual|inlined.0
   end
   i32.const 0
   local.set $32
   local.get $30
   call $~lib/typedarray/Int8Array#get:length
   local.set $33
   loop $for-loop|0
    local.get $32
    local.get $33
    i32.lt_s
    local.set $34
    local.get $34
    if
     local.get $30
     local.get $32
     call $~lib/typedarray/Int8Array#__get
     local.get $31
     local.get $32
     call $~lib/array/Array<i8>#__get
     i32.ne
     if
      i32.const 0
      br $std/typedarray/isInt8ArrayEqual|inlined.0
     end
     local.get $32
     i32.const 1
     i32.add
     local.set $32
     br $for-loop|0
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $27
  i32.const 0
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/typedarray/Int8Array#fill
  drop
  block $std/typedarray/isInt8ArrayEqual|inlined.1 (result i32)
   local.get $27
   local.set $37
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 0
   i32.const 15
   i32.const 336
   call $~lib/rt/__newArray
   local.tee $38
   i32.store $0 offset=108
   local.get $37
   call $~lib/typedarray/Int8Array#get:length
   local.get $38
   call $~lib/array/Array<i8>#get:length
   i32.ne
   if
    i32.const 0
    br $std/typedarray/isInt8ArrayEqual|inlined.1
   end
   i32.const 0
   local.set $39
   local.get $37
   call $~lib/typedarray/Int8Array#get:length
   local.set $40
   loop $for-loop|1
    local.get $39
    local.get $40
    i32.lt_s
    local.set $41
    local.get $41
    if
     local.get $37
     local.get $39
     call $~lib/typedarray/Int8Array#__get
     local.get $38
     local.get $39
     call $~lib/array/Array<i8>#__get
     i32.ne
     if
      i32.const 0
      br $std/typedarray/isInt8ArrayEqual|inlined.1
     end
     local.get $39
     i32.const 1
     i32.add
     local.set $39
     br $for-loop|1
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $27
  i32.const 1
  i32.const 0
  i32.const -3
  call $~lib/typedarray/Int8Array#fill
  drop
  block $std/typedarray/isInt8ArrayEqual|inlined.2 (result i32)
   local.get $27
   local.set $44
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 0
   i32.const 15
   i32.const 368
   call $~lib/rt/__newArray
   local.tee $45
   i32.store $0 offset=112
   local.get $44
   call $~lib/typedarray/Int8Array#get:length
   local.get $45
   call $~lib/array/Array<i8>#get:length
   i32.ne
   if
    i32.const 0
    br $std/typedarray/isInt8ArrayEqual|inlined.2
   end
   i32.const 0
   local.set $46
   local.get $44
   call $~lib/typedarray/Int8Array#get:length
   local.set $47
   loop $for-loop|2
    local.get $46
    local.get $47
    i32.lt_s
    local.set $48
    local.get $48
    if
     local.get $44
     local.get $46
     call $~lib/typedarray/Int8Array#__get
     local.get $45
     local.get $46
     call $~lib/array/Array<i8>#__get
     i32.ne
     if
      i32.const 0
      br $std/typedarray/isInt8ArrayEqual|inlined.2
     end
     local.get $46
     i32.const 1
     i32.add
     local.set $46
     br $for-loop|2
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $27
  i32.const 2
  i32.const -2
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/typedarray/Int8Array#fill
  drop
  block $std/typedarray/isInt8ArrayEqual|inlined.3 (result i32)
   local.get $27
   local.set $51
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 0
   i32.const 15
   i32.const 400
   call $~lib/rt/__newArray
   local.tee $52
   i32.store $0 offset=116
   local.get $51
   call $~lib/typedarray/Int8Array#get:length
   local.get $52
   call $~lib/array/Array<i8>#get:length
   i32.ne
   if
    i32.const 0
    br $std/typedarray/isInt8ArrayEqual|inlined.3
   end
   i32.const 0
   local.set $53
   local.get $51
   call $~lib/typedarray/Int8Array#get:length
   local.set $54
   loop $for-loop|3
    local.get $53
    local.get $54
    i32.lt_s
    local.set $55
    local.get $55
    if
     local.get $51
     local.get $53
     call $~lib/typedarray/Int8Array#__get
     local.get $52
     local.get $53
     call $~lib/array/Array<i8>#__get
     i32.ne
     if
      i32.const 0
      br $std/typedarray/isInt8ArrayEqual|inlined.3
     end
     local.get $53
     i32.const 1
     i32.add
     local.set $53
     br $for-loop|3
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $27
  i32.const 0
  i32.const 1
  i32.const 0
  call $~lib/typedarray/Int8Array#fill
  drop
  block $std/typedarray/isInt8ArrayEqual|inlined.4 (result i32)
   local.get $27
   local.set $58
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 0
   i32.const 15
   i32.const 432
   call $~lib/rt/__newArray
   local.tee $59
   i32.store $0 offset=120
   local.get $58
   call $~lib/typedarray/Int8Array#get:length
   local.get $59
   call $~lib/array/Array<i8>#get:length
   i32.ne
   if
    i32.const 0
    br $std/typedarray/isInt8ArrayEqual|inlined.4
   end
   i32.const 0
   local.set $60
   local.get $58
   call $~lib/typedarray/Int8Array#get:length
   local.set $61
   loop $for-loop|4
    local.get $60
    local.get $61
    i32.lt_s
    local.set $62
    local.get $62
    if
     local.get $58
     local.get $60
     call $~lib/typedarray/Int8Array#__get
     local.get $59
     local.get $60
     call $~lib/array/Array<i8>#__get
     i32.ne
     if
      i32.const 0
      br $std/typedarray/isInt8ArrayEqual|inlined.4
     end
     local.get $60
     i32.const 1
     i32.add
     local.set $60
     br $for-loop|4
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $27
  i32.const 1
  i32.const 4
  call $~lib/typedarray/Int8Array#subarray
  local.tee $63
  i32.store $0 offset=124
  local.get $63
  i32.const 0
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/typedarray/Int8Array#fill
  drop
  local.get $63
  call $~lib/typedarray/Int8Array#get:length
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $63
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $63
  i32.load $0 offset=8
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  block $std/typedarray/isInt8ArrayEqual|inlined.5 (result i32)
   local.get $63
   local.set $66
   global.get $~lib/memory/__stack_pointer
   i32.const 3
   i32.const 0
   i32.const 15
   i32.const 464
   call $~lib/rt/__newArray
   local.tee $67
   i32.store $0 offset=128
   local.get $66
   call $~lib/typedarray/Int8Array#get:length
   local.get $67
   call $~lib/array/Array<i8>#get:length
   i32.ne
   if
    i32.const 0
    br $std/typedarray/isInt8ArrayEqual|inlined.5
   end
   i32.const 0
   local.set $68
   local.get $66
   call $~lib/typedarray/Int8Array#get:length
   local.set $69
   loop $for-loop|5
    local.get $68
    local.get $69
    i32.lt_s
    local.set $70
    local.get $70
    if
     local.get $66
     local.get $68
     call $~lib/typedarray/Int8Array#__get
     local.get $67
     local.get $68
     call $~lib/array/Array<i8>#__get
     i32.ne
     if
      i32.const 0
      br $std/typedarray/isInt8ArrayEqual|inlined.5
     end
     local.get $68
     i32.const 1
     i32.add
     local.set $68
     br $for-loop|5
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  block $std/typedarray/isInt8ArrayEqual|inlined.6 (result i32)
   local.get $27
   local.set $73
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 0
   i32.const 15
   i32.const 496
   call $~lib/rt/__newArray
   local.tee $74
   i32.store $0 offset=132
   local.get $73
   call $~lib/typedarray/Int8Array#get:length
   local.get $74
   call $~lib/array/Array<i8>#get:length
   i32.ne
   if
    i32.const 0
    br $std/typedarray/isInt8ArrayEqual|inlined.6
   end
   i32.const 0
   local.set $75
   local.get $73
   call $~lib/typedarray/Int8Array#get:length
   local.set $76
   loop $for-loop|6
    local.get $75
    local.get $76
    i32.lt_s
    local.set $77
    local.get $77
    if
     local.get $73
     local.get $75
     call $~lib/typedarray/Int8Array#__get
     local.get $74
     local.get $75
     call $~lib/array/Array<i8>#__get
     i32.ne
     if
      i32.const 0
      br $std/typedarray/isInt8ArrayEqual|inlined.6
     end
     local.get $75
     i32.const 1
     i32.add
     local.set $75
     br $for-loop|6
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 5
  call $~lib/typedarray/Int32Array#constructor
  local.tee $78
  i32.store $0 offset=136
  local.get $78
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int32Array#__set
  local.get $78
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int32Array#__set
  local.get $78
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int32Array#__set
  local.get $78
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Int32Array#__set
  local.get $78
  i32.const 4
  i32.const 5
  call $~lib/typedarray/Int32Array#__set
  local.get $78
  i32.const 1
  i32.const 1
  i32.const 3
  call $~lib/typedarray/Int32Array#fill
  drop
  block $std/typedarray/isInt32ArrayEqual|inlined.0 (result i32)
   local.get $78
   local.set $81
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 16
   i32.const 528
   call $~lib/rt/__newArray
   local.tee $82
   i32.store $0 offset=140
   local.get $81
   call $~lib/typedarray/Int32Array#get:length
   local.get $82
   call $~lib/array/Array<i32>#get:length
   i32.ne
   if
    i32.const 0
    br $std/typedarray/isInt32ArrayEqual|inlined.0
   end
   i32.const 0
   local.set $83
   local.get $81
   call $~lib/typedarray/Int32Array#get:length
   local.set $84
   loop $for-loop|7
    local.get $83
    local.get $84
    i32.lt_s
    local.set $85
    local.get $85
    if
     local.get $81
     local.get $83
     call $~lib/typedarray/Int32Array#__get
     local.get $82
     local.get $83
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/typedarray/isInt32ArrayEqual|inlined.0
     end
     local.get $83
     i32.const 1
     i32.add
     local.set $83
     br $for-loop|7
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $78
  i32.const 0
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/typedarray/Int32Array#fill
  drop
  block $std/typedarray/isInt32ArrayEqual|inlined.1 (result i32)
   local.get $78
   local.set $88
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 16
   i32.const 576
   call $~lib/rt/__newArray
   local.tee $89
   i32.store $0 offset=144
   local.get $88
   call $~lib/typedarray/Int32Array#get:length
   local.get $89
   call $~lib/array/Array<i32>#get:length
   i32.ne
   if
    i32.const 0
    br $std/typedarray/isInt32ArrayEqual|inlined.1
   end
   i32.const 0
   local.set $90
   local.get $88
   call $~lib/typedarray/Int32Array#get:length
   local.set $91
   loop $for-loop|8
    local.get $90
    local.get $91
    i32.lt_s
    local.set $92
    local.get $92
    if
     local.get $88
     local.get $90
     call $~lib/typedarray/Int32Array#__get
     local.get $89
     local.get $90
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/typedarray/isInt32ArrayEqual|inlined.1
     end
     local.get $90
     i32.const 1
     i32.add
     local.set $90
     br $for-loop|8
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $78
  i32.const 1
  i32.const 0
  i32.const -3
  call $~lib/typedarray/Int32Array#fill
  drop
  block $std/typedarray/isInt32ArrayEqual|inlined.2 (result i32)
   local.get $78
   local.set $95
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 16
   i32.const 624
   call $~lib/rt/__newArray
   local.tee $96
   i32.store $0 offset=148
   local.get $95
   call $~lib/typedarray/Int32Array#get:length
   local.get $96
   call $~lib/array/Array<i32>#get:length
   i32.ne
   if
    i32.const 0
    br $std/typedarray/isInt32ArrayEqual|inlined.2
   end
   i32.const 0
   local.set $97
   local.get $95
   call $~lib/typedarray/Int32Array#get:length
   local.set $98
   loop $for-loop|9
    local.get $97
    local.get $98
    i32.lt_s
    local.set $99
    local.get $99
    if
     local.get $95
     local.get $97
     call $~lib/typedarray/Int32Array#__get
     local.get $96
     local.get $97
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/typedarray/isInt32ArrayEqual|inlined.2
     end
     local.get $97
     i32.const 1
     i32.add
     local.set $97
     br $for-loop|9
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $78
  i32.const 2
  i32.const -2
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/typedarray/Int32Array#fill
  drop
  block $std/typedarray/isInt32ArrayEqual|inlined.3 (result i32)
   local.get $78
   local.set $102
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 16
   i32.const 672
   call $~lib/rt/__newArray
   local.tee $103
   i32.store $0 offset=152
   local.get $102
   call $~lib/typedarray/Int32Array#get:length
   local.get $103
   call $~lib/array/Array<i32>#get:length
   i32.ne
   if
    i32.const 0
    br $std/typedarray/isInt32ArrayEqual|inlined.3
   end
   i32.const 0
   local.set $104
   local.get $102
   call $~lib/typedarray/Int32Array#get:length
   local.set $105
   loop $for-loop|10
    local.get $104
    local.get $105
    i32.lt_s
    local.set $106
    local.get $106
    if
     local.get $102
     local.get $104
     call $~lib/typedarray/Int32Array#__get
     local.get $103
     local.get $104
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/typedarray/isInt32ArrayEqual|inlined.3
     end
     local.get $104
     i32.const 1
     i32.add
     local.set $104
     br $for-loop|10
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $78
  i32.const 0
  i32.const 1
  i32.const 0
  call $~lib/typedarray/Int32Array#fill
  drop
  block $std/typedarray/isInt32ArrayEqual|inlined.4 (result i32)
   local.get $78
   local.set $109
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 16
   i32.const 720
   call $~lib/rt/__newArray
   local.tee $110
   i32.store $0 offset=156
   local.get $109
   call $~lib/typedarray/Int32Array#get:length
   local.get $110
   call $~lib/array/Array<i32>#get:length
   i32.ne
   if
    i32.const 0
    br $std/typedarray/isInt32ArrayEqual|inlined.4
   end
   i32.const 0
   local.set $111
   local.get $109
   call $~lib/typedarray/Int32Array#get:length
   local.set $112
   loop $for-loop|11
    local.get $111
    local.get $112
    i32.lt_s
    local.set $113
    local.get $113
    if
     local.get $109
     local.get $111
     call $~lib/typedarray/Int32Array#__get
     local.get $110
     local.get $111
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/typedarray/isInt32ArrayEqual|inlined.4
     end
     local.get $111
     i32.const 1
     i32.add
     local.set $111
     br $for-loop|11
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $78
  i32.const 1
  i32.const 4
  call $~lib/typedarray/Int32Array#subarray
  local.tee $114
  i32.store $0 offset=160
  local.get $114
  i32.const 0
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/typedarray/Int32Array#fill
  drop
  local.get $114
  call $~lib/typedarray/Int32Array#get:length
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $114
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 1
  i32.const 4
  i32.mul
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $114
  i32.load $0 offset=8
  i32.const 3
  i32.const 4
  i32.mul
  i32.eq
  i32.eqz
  if
   unreachable
  end
  block $std/typedarray/isInt32ArrayEqual|inlined.5 (result i32)
   local.get $114
   local.set $117
   global.get $~lib/memory/__stack_pointer
   i32.const 3
   i32.const 2
   i32.const 16
   i32.const 768
   call $~lib/rt/__newArray
   local.tee $118
   i32.store $0 offset=164
   local.get $117
   call $~lib/typedarray/Int32Array#get:length
   local.get $118
   call $~lib/array/Array<i32>#get:length
   i32.ne
   if
    i32.const 0
    br $std/typedarray/isInt32ArrayEqual|inlined.5
   end
   i32.const 0
   local.set $119
   local.get $117
   call $~lib/typedarray/Int32Array#get:length
   local.set $120
   loop $for-loop|12
    local.get $119
    local.get $120
    i32.lt_s
    local.set $121
    local.get $121
    if
     local.get $117
     local.get $119
     call $~lib/typedarray/Int32Array#__get
     local.get $118
     local.get $119
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/typedarray/isInt32ArrayEqual|inlined.5
     end
     local.get $119
     i32.const 1
     i32.add
     local.set $119
     br $for-loop|12
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  block $std/typedarray/isInt32ArrayEqual|inlined.6 (result i32)
   local.get $78
   local.set $124
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 16
   i32.const 800
   call $~lib/rt/__newArray
   local.tee $125
   i32.store $0 offset=168
   local.get $124
   call $~lib/typedarray/Int32Array#get:length
   local.get $125
   call $~lib/array/Array<i32>#get:length
   i32.ne
   if
    i32.const 0
    br $std/typedarray/isInt32ArrayEqual|inlined.6
   end
   i32.const 0
   local.set $126
   local.get $124
   call $~lib/typedarray/Int32Array#get:length
   local.set $127
   loop $for-loop|13
    local.get $126
    local.get $127
    i32.lt_s
    local.set $128
    local.get $128
    if
     local.get $124
     local.get $126
     call $~lib/typedarray/Int32Array#__get
     local.get $125
     local.get $126
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/typedarray/isInt32ArrayEqual|inlined.6
     end
     local.get $126
     i32.const 1
     i32.add
     local.set $126
     br $for-loop|13
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 6
  call $~lib/typedarray/Int8Array#constructor
  local.tee $129
  i32.store $0 offset=172
  local.get $129
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int8Array#__set
  local.get $129
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int8Array#__set
  local.get $129
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int8Array#__set
  local.get $129
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Int8Array#__set
  local.get $129
  i32.const 4
  i32.const 5
  call $~lib/typedarray/Int8Array#__set
  local.get $129
  i32.const 5
  i32.const 6
  call $~lib/typedarray/Int8Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $129
  i32.const 1
  i32.const 6
  call $~lib/typedarray/Int8Array#subarray
  local.tee $130
  i32.store $0 offset=176
  local.get $130
  i32.const 0
  call $~lib/typedarray/Int8Array#__get
  i32.const 2
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $130
  call $~lib/typedarray/Int8Array#get:length
  i32.const 5
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $130
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $130
  i32.load $0 offset=8
  i32.const 5
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $130
  i32.const 1
  i32.const 5
  call $~lib/typedarray/Int8Array#subarray
  local.tee $131
  i32.store $0 offset=180
  local.get $131
  i32.const 0
  call $~lib/typedarray/Int8Array#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $131
  call $~lib/typedarray/Int8Array#get:length
  i32.const 4
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $131
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 2
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $131
  i32.load $0 offset=8
  i32.const 4
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $131
  i32.const 1
  i32.const 4
  call $~lib/typedarray/Int8Array#subarray
  local.tee $132
  i32.store $0 offset=184
  local.get $132
  i32.const 0
  call $~lib/typedarray/Int8Array#__get
  i32.const 4
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $132
  call $~lib/typedarray/Int8Array#get:length
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $132
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $132
  i32.load $0 offset=8
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 5
  call $~lib/typedarray/Int32Array#constructor
  local.tee $133
  i32.store $0 offset=188
  local.get $133
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int32Array#__set
  local.get $133
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int32Array#__set
  local.get $133
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int32Array#__set
  local.get $133
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Int32Array#__set
  local.get $133
  i32.const 4
  i32.const 5
  call $~lib/typedarray/Int32Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $133
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/typedarray/Int32Array#slice
  local.tee $134
  i32.store $0 offset=192
  block $std/typedarray/isInt32ArrayEqual|inlined.7 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $133
   i32.const 0
   i32.const 3
   global.get $~lib/builtins/i32.MAX_VALUE
   call $~lib/typedarray/Int32Array#copyWithin
   local.tee $137
   i32.store $0 offset=196
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 16
   i32.const 848
   call $~lib/rt/__newArray
   local.tee $138
   i32.store $0 offset=200
   local.get $137
   call $~lib/typedarray/Int32Array#get:length
   local.get $138
   call $~lib/array/Array<i32>#get:length
   i32.ne
   if
    i32.const 0
    br $std/typedarray/isInt32ArrayEqual|inlined.7
   end
   i32.const 0
   local.set $139
   local.get $137
   call $~lib/typedarray/Int32Array#get:length
   local.set $140
   loop $for-loop|14
    local.get $139
    local.get $140
    i32.lt_s
    local.set $141
    local.get $141
    if
     local.get $137
     local.get $139
     call $~lib/typedarray/Int32Array#__get
     local.get $138
     local.get $139
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/typedarray/isInt32ArrayEqual|inlined.7
     end
     local.get $139
     i32.const 1
     i32.add
     local.set $139
     br $for-loop|14
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $134
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/typedarray/Int32Array#slice
  local.tee $133
  i32.store $0 offset=188
  block $std/typedarray/isInt32ArrayEqual|inlined.8 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $133
   i32.const 1
   i32.const 3
   global.get $~lib/builtins/i32.MAX_VALUE
   call $~lib/typedarray/Int32Array#copyWithin
   local.tee $144
   i32.store $0 offset=204
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 16
   i32.const 896
   call $~lib/rt/__newArray
   local.tee $145
   i32.store $0 offset=208
   local.get $144
   call $~lib/typedarray/Int32Array#get:length
   local.get $145
   call $~lib/array/Array<i32>#get:length
   i32.ne
   if
    i32.const 0
    br $std/typedarray/isInt32ArrayEqual|inlined.8
   end
   i32.const 0
   local.set $146
   local.get $144
   call $~lib/typedarray/Int32Array#get:length
   local.set $147
   loop $for-loop|15
    local.get $146
    local.get $147
    i32.lt_s
    local.set $148
    local.get $148
    if
     local.get $144
     local.get $146
     call $~lib/typedarray/Int32Array#__get
     local.get $145
     local.get $146
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/typedarray/isInt32ArrayEqual|inlined.8
     end
     local.get $146
     i32.const 1
     i32.add
     local.set $146
     br $for-loop|15
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $134
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/typedarray/Int32Array#slice
  local.tee $133
  i32.store $0 offset=188
  block $std/typedarray/isInt32ArrayEqual|inlined.9 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $133
   i32.const 1
   i32.const 2
   global.get $~lib/builtins/i32.MAX_VALUE
   call $~lib/typedarray/Int32Array#copyWithin
   local.tee $151
   i32.store $0 offset=212
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 16
   i32.const 944
   call $~lib/rt/__newArray
   local.tee $152
   i32.store $0 offset=216
   local.get $151
   call $~lib/typedarray/Int32Array#get:length
   local.get $152
   call $~lib/array/Array<i32>#get:length
   i32.ne
   if
    i32.const 0
    br $std/typedarray/isInt32ArrayEqual|inlined.9
   end
   i32.const 0
   local.set $153
   local.get $151
   call $~lib/typedarray/Int32Array#get:length
   local.set $154
   loop $for-loop|16
    local.get $153
    local.get $154
    i32.lt_s
    local.set $155
    local.get $155
    if
     local.get $151
     local.get $153
     call $~lib/typedarray/Int32Array#__get
     local.get $152
     local.get $153
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/typedarray/isInt32ArrayEqual|inlined.9
     end
     local.get $153
     i32.const 1
     i32.add
     local.set $153
     br $for-loop|16
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $134
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/typedarray/Int32Array#slice
  local.tee $133
  i32.store $0 offset=188
  block $std/typedarray/isInt32ArrayEqual|inlined.10 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $133
   i32.const 2
   i32.const 2
   global.get $~lib/builtins/i32.MAX_VALUE
   call $~lib/typedarray/Int32Array#copyWithin
   local.tee $158
   i32.store $0 offset=220
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 16
   i32.const 992
   call $~lib/rt/__newArray
   local.tee $159
   i32.store $0 offset=224
   local.get $158
   call $~lib/typedarray/Int32Array#get:length
   local.get $159
   call $~lib/array/Array<i32>#get:length
   i32.ne
   if
    i32.const 0
    br $std/typedarray/isInt32ArrayEqual|inlined.10
   end
   i32.const 0
   local.set $160
   local.get $158
   call $~lib/typedarray/Int32Array#get:length
   local.set $161
   loop $for-loop|17
    local.get $160
    local.get $161
    i32.lt_s
    local.set $162
    local.get $162
    if
     local.get $158
     local.get $160
     call $~lib/typedarray/Int32Array#__get
     local.get $159
     local.get $160
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/typedarray/isInt32ArrayEqual|inlined.10
     end
     local.get $160
     i32.const 1
     i32.add
     local.set $160
     br $for-loop|17
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $134
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/typedarray/Int32Array#slice
  local.tee $133
  i32.store $0 offset=188
  block $std/typedarray/isInt32ArrayEqual|inlined.11 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $133
   i32.const 0
   i32.const 3
   i32.const 4
   call $~lib/typedarray/Int32Array#copyWithin
   local.tee $165
   i32.store $0 offset=228
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 16
   i32.const 1040
   call $~lib/rt/__newArray
   local.tee $166
   i32.store $0 offset=232
   local.get $165
   call $~lib/typedarray/Int32Array#get:length
   local.get $166
   call $~lib/array/Array<i32>#get:length
   i32.ne
   if
    i32.const 0
    br $std/typedarray/isInt32ArrayEqual|inlined.11
   end
   i32.const 0
   local.set $167
   local.get $165
   call $~lib/typedarray/Int32Array#get:length
   local.set $168
   loop $for-loop|18
    local.get $167
    local.get $168
    i32.lt_s
    local.set $169
    local.get $169
    if
     local.get $165
     local.get $167
     call $~lib/typedarray/Int32Array#__get
     local.get $166
     local.get $167
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/typedarray/isInt32ArrayEqual|inlined.11
     end
     local.get $167
     i32.const 1
     i32.add
     local.set $167
     br $for-loop|18
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $134
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/typedarray/Int32Array#slice
  local.tee $133
  i32.store $0 offset=188
  block $std/typedarray/isInt32ArrayEqual|inlined.12 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $133
   i32.const 1
   i32.const 3
   i32.const 4
   call $~lib/typedarray/Int32Array#copyWithin
   local.tee $172
   i32.store $0 offset=236
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 16
   i32.const 1088
   call $~lib/rt/__newArray
   local.tee $173
   i32.store $0 offset=240
   local.get $172
   call $~lib/typedarray/Int32Array#get:length
   local.get $173
   call $~lib/array/Array<i32>#get:length
   i32.ne
   if
    i32.const 0
    br $std/typedarray/isInt32ArrayEqual|inlined.12
   end
   i32.const 0
   local.set $174
   local.get $172
   call $~lib/typedarray/Int32Array#get:length
   local.set $175
   loop $for-loop|19
    local.get $174
    local.get $175
    i32.lt_s
    local.set $176
    local.get $176
    if
     local.get $172
     local.get $174
     call $~lib/typedarray/Int32Array#__get
     local.get $173
     local.get $174
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/typedarray/isInt32ArrayEqual|inlined.12
     end
     local.get $174
     i32.const 1
     i32.add
     local.set $174
     br $for-loop|19
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $134
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/typedarray/Int32Array#slice
  local.tee $133
  i32.store $0 offset=188
  block $std/typedarray/isInt32ArrayEqual|inlined.13 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $133
   i32.const 1
   i32.const 2
   i32.const 4
   call $~lib/typedarray/Int32Array#copyWithin
   local.tee $179
   i32.store $0 offset=244
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 16
   i32.const 1136
   call $~lib/rt/__newArray
   local.tee $180
   i32.store $0 offset=248
   local.get $179
   call $~lib/typedarray/Int32Array#get:length
   local.get $180
   call $~lib/array/Array<i32>#get:length
   i32.ne
   if
    i32.const 0
    br $std/typedarray/isInt32ArrayEqual|inlined.13
   end
   i32.const 0
   local.set $181
   local.get $179
   call $~lib/typedarray/Int32Array#get:length
   local.set $182
   loop $for-loop|20
    local.get $181
    local.get $182
    i32.lt_s
    local.set $183
    local.get $183
    if
     local.get $179
     local.get $181
     call $~lib/typedarray/Int32Array#__get
     local.get $180
     local.get $181
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/typedarray/isInt32ArrayEqual|inlined.13
     end
     local.get $181
     i32.const 1
     i32.add
     local.set $181
     br $for-loop|20
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $134
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/typedarray/Int32Array#slice
  local.tee $133
  i32.store $0 offset=188
  block $std/typedarray/isInt32ArrayEqual|inlined.14 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $133
   i32.const 0
   i32.const -2
   global.get $~lib/builtins/i32.MAX_VALUE
   call $~lib/typedarray/Int32Array#copyWithin
   local.tee $186
   i32.store $0 offset=252
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 16
   i32.const 1184
   call $~lib/rt/__newArray
   local.tee $187
   i32.store $0 offset=256
   local.get $186
   call $~lib/typedarray/Int32Array#get:length
   local.get $187
   call $~lib/array/Array<i32>#get:length
   i32.ne
   if
    i32.const 0
    br $std/typedarray/isInt32ArrayEqual|inlined.14
   end
   i32.const 0
   local.set $188
   local.get $186
   call $~lib/typedarray/Int32Array#get:length
   local.set $189
   loop $for-loop|21
    local.get $188
    local.get $189
    i32.lt_s
    local.set $190
    local.get $190
    if
     local.get $186
     local.get $188
     call $~lib/typedarray/Int32Array#__get
     local.get $187
     local.get $188
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/typedarray/isInt32ArrayEqual|inlined.14
     end
     local.get $188
     i32.const 1
     i32.add
     local.set $188
     br $for-loop|21
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $134
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/typedarray/Int32Array#slice
  local.tee $133
  i32.store $0 offset=188
  block $std/typedarray/isInt32ArrayEqual|inlined.15 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $133
   i32.const 0
   i32.const -2
   i32.const -1
   call $~lib/typedarray/Int32Array#copyWithin
   local.tee $193
   i32.store $0 offset=260
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 16
   i32.const 1232
   call $~lib/rt/__newArray
   local.tee $194
   i32.store $0 offset=264
   local.get $193
   call $~lib/typedarray/Int32Array#get:length
   local.get $194
   call $~lib/array/Array<i32>#get:length
   i32.ne
   if
    i32.const 0
    br $std/typedarray/isInt32ArrayEqual|inlined.15
   end
   i32.const 0
   local.set $195
   local.get $193
   call $~lib/typedarray/Int32Array#get:length
   local.set $196
   loop $for-loop|22
    local.get $195
    local.get $196
    i32.lt_s
    local.set $197
    local.get $197
    if
     local.get $193
     local.get $195
     call $~lib/typedarray/Int32Array#__get
     local.get $194
     local.get $195
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/typedarray/isInt32ArrayEqual|inlined.15
     end
     local.get $195
     i32.const 1
     i32.add
     local.set $195
     br $for-loop|22
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $134
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/typedarray/Int32Array#slice
  local.tee $133
  i32.store $0 offset=188
  block $std/typedarray/isInt32ArrayEqual|inlined.16 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $133
   i32.const -4
   i32.const -3
   i32.const -2
   call $~lib/typedarray/Int32Array#copyWithin
   local.tee $200
   i32.store $0 offset=268
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 16
   i32.const 1280
   call $~lib/rt/__newArray
   local.tee $201
   i32.store $0 offset=272
   local.get $200
   call $~lib/typedarray/Int32Array#get:length
   local.get $201
   call $~lib/array/Array<i32>#get:length
   i32.ne
   if
    i32.const 0
    br $std/typedarray/isInt32ArrayEqual|inlined.16
   end
   i32.const 0
   local.set $202
   local.get $200
   call $~lib/typedarray/Int32Array#get:length
   local.set $203
   loop $for-loop|23
    local.get $202
    local.get $203
    i32.lt_s
    local.set $204
    local.get $204
    if
     local.get $200
     local.get $202
     call $~lib/typedarray/Int32Array#__get
     local.get $201
     local.get $202
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/typedarray/isInt32ArrayEqual|inlined.16
     end
     local.get $202
     i32.const 1
     i32.add
     local.set $202
     br $for-loop|23
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $134
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/typedarray/Int32Array#slice
  local.tee $133
  i32.store $0 offset=188
  block $std/typedarray/isInt32ArrayEqual|inlined.17 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $133
   i32.const -4
   i32.const -3
   i32.const -1
   call $~lib/typedarray/Int32Array#copyWithin
   local.tee $207
   i32.store $0 offset=276
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 16
   i32.const 1328
   call $~lib/rt/__newArray
   local.tee $208
   i32.store $0 offset=280
   local.get $207
   call $~lib/typedarray/Int32Array#get:length
   local.get $208
   call $~lib/array/Array<i32>#get:length
   i32.ne
   if
    i32.const 0
    br $std/typedarray/isInt32ArrayEqual|inlined.17
   end
   i32.const 0
   local.set $209
   local.get $207
   call $~lib/typedarray/Int32Array#get:length
   local.set $210
   loop $for-loop|24
    local.get $209
    local.get $210
    i32.lt_s
    local.set $211
    local.get $211
    if
     local.get $207
     local.get $209
     call $~lib/typedarray/Int32Array#__get
     local.get $208
     local.get $209
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/typedarray/isInt32ArrayEqual|inlined.17
     end
     local.get $209
     i32.const 1
     i32.add
     local.set $209
     br $for-loop|24
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $134
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/typedarray/Int32Array#slice
  local.tee $133
  i32.store $0 offset=188
  block $std/typedarray/isInt32ArrayEqual|inlined.18 (result i32)
   global.get $~lib/memory/__stack_pointer
   local.get $133
   i32.const -4
   i32.const -3
   global.get $~lib/builtins/i32.MAX_VALUE
   call $~lib/typedarray/Int32Array#copyWithin
   local.tee $214
   i32.store $0 offset=284
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 16
   i32.const 1376
   call $~lib/rt/__newArray
   local.tee $215
   i32.store $0 offset=288
   local.get $214
   call $~lib/typedarray/Int32Array#get:length
   local.get $215
   call $~lib/array/Array<i32>#get:length
   i32.ne
   if
    i32.const 0
    br $std/typedarray/isInt32ArrayEqual|inlined.18
   end
   i32.const 0
   local.set $216
   local.get $214
   call $~lib/typedarray/Int32Array#get:length
   local.set $217
   loop $for-loop|25
    local.get $216
    local.get $217
    i32.lt_s
    local.set $218
    local.get $218
    if
     local.get $214
     local.get $216
     call $~lib/typedarray/Int32Array#__get
     local.get $215
     local.get $216
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/typedarray/isInt32ArrayEqual|inlined.18
     end
     local.get $216
     i32.const 1
     i32.add
     local.set $216
     br $for-loop|25
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 5
  call $~lib/typedarray/Int32Array#constructor
  local.tee $219
  i32.store $0 offset=292
  local.get $219
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int32Array#__set
  local.get $219
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int32Array#__set
  local.get $219
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int32Array#__set
  local.get $219
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Int32Array#__set
  local.get $219
  i32.const 4
  i32.const 5
  call $~lib/typedarray/Int32Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $219
  i32.const 1
  i32.const 4
  call $~lib/typedarray/Int32Array#subarray
  local.tee $220
  i32.store $0 offset=296
  local.get $220
  call $~lib/typedarray/Int32Array#get:length
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $220
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 4
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $220
  i32.load $0 offset=8
  i32.const 12
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $219
  i32.const 1
  i32.const 3
  call $~lib/typedarray/Int32Array#slice
  local.tee $221
  i32.store $0 offset=300
  local.get $221
  i32.const 0
  call $~lib/typedarray/Int32Array#__get
  i32.const 2
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $221
  i32.const 1
  call $~lib/typedarray/Int32Array#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $221
  call $~lib/typedarray/Int32Array#get:length
  i32.const 2
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $221
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $221
  i32.load $0 offset=8
  i32.const 8
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $220
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int32Array#slice
  local.tee $222
  i32.store $0 offset=304
  local.get $222
  i32.const 0
  call $~lib/typedarray/Int32Array#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $222
  call $~lib/typedarray/Int32Array#get:length
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $222
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $222
  i32.load $0 offset=8
  i32.const 4
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $219
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/typedarray/Int32Array#slice
  local.tee $223
  i32.store $0 offset=308
  local.get $223
  local.get $219
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $223
  call $~lib/typedarray/Int32Array#get:length
  local.get $219
  call $~lib/typedarray/Int32Array#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $223
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  local.get $219
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $223
  i32.load $0 offset=8
  local.get $219
  i32.load $0 offset=8
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int8Array#constructor
  local.tee $224
  i32.store $0 offset=312
  local.get $224
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int8Array#__set
  local.get $224
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int8Array#__set
  local.get $224
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int8Array#__set
  local.get $224
  i32.const 1424
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  i32.const 0
  call $~lib/typedarray/Int8Array#reduce<i8>
  local.set $225
  local.get $225
  i32.extend8_s
  i32.const 6
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint8Array#constructor
  local.tee $226
  i32.store $0 offset=320
  local.get $226
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint8Array#__set
  local.get $226
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint8Array#__set
  local.get $226
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint8Array#__set
  local.get $226
  i32.const 1456
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  i32.const 0
  call $~lib/typedarray/Uint8Array#reduce<u8>
  local.set $227
  local.get $227
  i32.const 255
  i32.and
  i32.const 6
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint8ClampedArray#constructor
  local.tee $228
  i32.store $0 offset=324
  local.get $228
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $228
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $228
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $228
  i32.const 1488
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#reduce<u8>
  local.set $229
  local.get $229
  i32.const 255
  i32.and
  i32.const 6
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int16Array#constructor
  local.tee $230
  i32.store $0 offset=328
  local.get $230
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int16Array#__set
  local.get $230
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int16Array#__set
  local.get $230
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int16Array#__set
  local.get $230
  i32.const 1520
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  i32.const 0
  call $~lib/typedarray/Int16Array#reduce<i16>
  local.set $231
  local.get $231
  i32.extend16_s
  i32.const 6
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint16Array#constructor
  local.tee $232
  i32.store $0 offset=332
  local.get $232
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint16Array#__set
  local.get $232
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint16Array#__set
  local.get $232
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint16Array#__set
  local.get $232
  i32.const 1552
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  i32.const 0
  call $~lib/typedarray/Uint16Array#reduce<u16>
  local.set $233
  local.get $233
  i32.const 65535
  i32.and
  i32.const 6
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int32Array#constructor
  local.tee $234
  i32.store $0 offset=336
  local.get $234
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int32Array#__set
  local.get $234
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int32Array#__set
  local.get $234
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int32Array#__set
  local.get $234
  i32.const 1584
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  i32.const 0
  call $~lib/typedarray/Int32Array#reduce<i32>
  local.set $235
  local.get $235
  i32.const 6
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint32Array#constructor
  local.tee $236
  i32.store $0 offset=340
  local.get $236
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint32Array#__set
  local.get $236
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint32Array#__set
  local.get $236
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint32Array#__set
  local.get $236
  i32.const 1616
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  i32.const 0
  call $~lib/typedarray/Uint32Array#reduce<u32>
  local.set $237
  local.get $237
  i32.const 6
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int64Array#constructor
  local.tee $238
  i32.store $0 offset=344
  local.get $238
  i32.const 0
  i64.const 1
  call $~lib/typedarray/Int64Array#__set
  local.get $238
  i32.const 1
  i64.const 2
  call $~lib/typedarray/Int64Array#__set
  local.get $238
  i32.const 2
  i64.const 3
  call $~lib/typedarray/Int64Array#__set
  local.get $238
  i32.const 1648
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  i64.const 0
  call $~lib/typedarray/Int64Array#reduce<i64>
  local.set $239
  local.get $239
  i64.const 6
  i64.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint64Array#constructor
  local.tee $240
  i32.store $0 offset=348
  local.get $240
  i32.const 0
  i64.const 1
  call $~lib/typedarray/Uint64Array#__set
  local.get $240
  i32.const 1
  i64.const 2
  call $~lib/typedarray/Uint64Array#__set
  local.get $240
  i32.const 2
  i64.const 3
  call $~lib/typedarray/Uint64Array#__set
  local.get $240
  i32.const 1680
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  i64.const 0
  call $~lib/typedarray/Uint64Array#reduce<u64>
  local.set $241
  local.get $241
  i64.const 6
  i64.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Float32Array#constructor
  local.tee $242
  i32.store $0 offset=352
  local.get $242
  i32.const 0
  f32.const 1
  call $~lib/typedarray/Float32Array#__set
  local.get $242
  i32.const 1
  f32.const 2
  call $~lib/typedarray/Float32Array#__set
  local.get $242
  i32.const 2
  f32.const 3
  call $~lib/typedarray/Float32Array#__set
  local.get $242
  i32.const 1712
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  f32.const 0
  call $~lib/typedarray/Float32Array#reduce<f32>
  local.set $243
  local.get $243
  f32.const 6
  f32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Float64Array#constructor
  local.tee $244
  i32.store $0 offset=356
  local.get $244
  i32.const 0
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $244
  i32.const 1
  f64.const 2
  call $~lib/typedarray/Float64Array#__set
  local.get $244
  i32.const 2
  f64.const 3
  call $~lib/typedarray/Float64Array#__set
  local.get $244
  i32.const 1744
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  f64.const 0
  call $~lib/typedarray/Float64Array#reduce<f64>
  local.set $245
  local.get $245
  f64.const 6
  f64.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int8Array#constructor
  local.tee $246
  i32.store $0 offset=360
  local.get $246
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int8Array#__set
  local.get $246
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int8Array#__set
  local.get $246
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int8Array#__set
  local.get $246
  i32.const 0
  call $~lib/typedarray/Int8Array#at
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $246
  i32.const -1
  call $~lib/typedarray/Int8Array#at
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $246
  i32.const -3
  call $~lib/typedarray/Int8Array#at
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint8Array#constructor
  local.tee $247
  i32.store $0 offset=364
  local.get $247
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint8Array#__set
  local.get $247
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint8Array#__set
  local.get $247
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint8Array#__set
  local.get $247
  i32.const 0
  call $~lib/typedarray/Uint8Array#at
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $247
  i32.const -1
  call $~lib/typedarray/Uint8Array#at
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $247
  i32.const -3
  call $~lib/typedarray/Uint8Array#at
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint8ClampedArray#constructor
  local.tee $248
  i32.store $0 offset=368
  local.get $248
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $248
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $248
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $248
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#at
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $248
  i32.const -1
  call $~lib/typedarray/Uint8ClampedArray#at
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $248
  i32.const -3
  call $~lib/typedarray/Uint8ClampedArray#at
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int16Array#constructor
  local.tee $249
  i32.store $0 offset=372
  local.get $249
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int16Array#__set
  local.get $249
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int16Array#__set
  local.get $249
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int16Array#__set
  local.get $249
  i32.const 0
  call $~lib/typedarray/Int16Array#at
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $249
  i32.const -1
  call $~lib/typedarray/Int16Array#at
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $249
  i32.const -3
  call $~lib/typedarray/Int16Array#at
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint16Array#constructor
  local.tee $250
  i32.store $0 offset=376
  local.get $250
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint16Array#__set
  local.get $250
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint16Array#__set
  local.get $250
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint16Array#__set
  local.get $250
  i32.const 0
  call $~lib/typedarray/Uint16Array#at
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $250
  i32.const -1
  call $~lib/typedarray/Uint16Array#at
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $250
  i32.const -3
  call $~lib/typedarray/Uint16Array#at
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int32Array#constructor
  local.tee $251
  i32.store $0 offset=380
  local.get $251
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int32Array#__set
  local.get $251
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int32Array#__set
  local.get $251
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int32Array#__set
  local.get $251
  i32.const 0
  call $~lib/typedarray/Int32Array#at
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $251
  i32.const -1
  call $~lib/typedarray/Int32Array#at
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $251
  i32.const -3
  call $~lib/typedarray/Int32Array#at
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint32Array#constructor
  local.tee $252
  i32.store $0 offset=384
  local.get $252
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint32Array#__set
  local.get $252
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint32Array#__set
  local.get $252
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint32Array#__set
  local.get $252
  i32.const 0
  call $~lib/typedarray/Uint32Array#at
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $252
  i32.const -1
  call $~lib/typedarray/Uint32Array#at
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $252
  i32.const -3
  call $~lib/typedarray/Uint32Array#at
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int64Array#constructor
  local.tee $253
  i32.store $0 offset=388
  local.get $253
  i32.const 0
  i64.const 1
  call $~lib/typedarray/Int64Array#__set
  local.get $253
  i32.const 1
  i64.const 2
  call $~lib/typedarray/Int64Array#__set
  local.get $253
  i32.const 2
  i64.const 3
  call $~lib/typedarray/Int64Array#__set
  local.get $253
  i32.const 0
  call $~lib/typedarray/Int64Array#at
  i64.const 1
  i64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $253
  i32.const -1
  call $~lib/typedarray/Int64Array#at
  i64.const 3
  i64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $253
  i32.const -3
  call $~lib/typedarray/Int64Array#at
  i64.const 1
  i64.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint64Array#constructor
  local.tee $254
  i32.store $0 offset=392
  local.get $254
  i32.const 0
  i64.const 1
  call $~lib/typedarray/Uint64Array#__set
  local.get $254
  i32.const 1
  i64.const 2
  call $~lib/typedarray/Uint64Array#__set
  local.get $254
  i32.const 2
  i64.const 3
  call $~lib/typedarray/Uint64Array#__set
  local.get $254
  i32.const 0
  call $~lib/typedarray/Uint64Array#at
  i64.const 1
  i64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $254
  i32.const -1
  call $~lib/typedarray/Uint64Array#at
  i64.const 3
  i64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $254
  i32.const -3
  call $~lib/typedarray/Uint64Array#at
  i64.const 1
  i64.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Float32Array#constructor
  local.tee $255
  i32.store $0 offset=396
  local.get $255
  i32.const 0
  f32.const 1
  call $~lib/typedarray/Float32Array#__set
  local.get $255
  i32.const 1
  f32.const 2
  call $~lib/typedarray/Float32Array#__set
  local.get $255
  i32.const 2
  f32.const 3
  call $~lib/typedarray/Float32Array#__set
  local.get $255
  i32.const 0
  call $~lib/typedarray/Float32Array#at
  f32.const 1
  f32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $255
  i32.const -1
  call $~lib/typedarray/Float32Array#at
  f32.const 3
  f32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $255
  i32.const -3
  call $~lib/typedarray/Float32Array#at
  f32.const 1
  f32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Float64Array#constructor
  local.tee $256
  i32.store $0 offset=400
  local.get $256
  i32.const 0
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $256
  i32.const 1
  f64.const 2
  call $~lib/typedarray/Float64Array#__set
  local.get $256
  i32.const 2
  f64.const 3
  call $~lib/typedarray/Float64Array#__set
  local.get $256
  i32.const 0
  call $~lib/typedarray/Float64Array#at
  f64.const 1
  f64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $256
  i32.const -1
  call $~lib/typedarray/Float64Array#at
  f64.const 3
  f64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $256
  i32.const -3
  call $~lib/typedarray/Float64Array#at
  f64.const 1
  f64.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int8Array#constructor
  local.tee $257
  i32.store $0 offset=404
  local.get $257
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int8Array#__set
  local.get $257
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int8Array#__set
  local.get $257
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int8Array#__set
  local.get $257
  i32.const 1776
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  i32.const 0
  call $~lib/typedarray/Int8Array#reduceRight<i8>
  local.set $258
  local.get $258
  i32.extend8_s
  i32.const 6
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint8Array#constructor
  local.tee $259
  i32.store $0 offset=408
  local.get $259
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint8Array#__set
  local.get $259
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint8Array#__set
  local.get $259
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint8Array#__set
  local.get $259
  i32.const 1808
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  i32.const 0
  call $~lib/typedarray/Uint8Array#reduceRight<u8>
  local.set $260
  local.get $260
  i32.const 255
  i32.and
  i32.const 6
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint8ClampedArray#constructor
  local.tee $261
  i32.store $0 offset=412
  local.get $261
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $261
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $261
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $261
  i32.const 1840
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#reduceRight<u8>
  local.set $262
  local.get $262
  i32.const 255
  i32.and
  i32.const 6
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int16Array#constructor
  local.tee $263
  i32.store $0 offset=416
  local.get $263
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int16Array#__set
  local.get $263
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int16Array#__set
  local.get $263
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int16Array#__set
  local.get $263
  i32.const 1872
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  i32.const 0
  call $~lib/typedarray/Int16Array#reduceRight<i16>
  local.set $264
  local.get $264
  i32.extend16_s
  i32.const 6
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint16Array#constructor
  local.tee $265
  i32.store $0 offset=420
  local.get $265
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint16Array#__set
  local.get $265
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint16Array#__set
  local.get $265
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint16Array#__set
  local.get $265
  i32.const 1904
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  i32.const 0
  call $~lib/typedarray/Uint16Array#reduceRight<u16>
  local.set $266
  local.get $266
  i32.const 65535
  i32.and
  i32.const 6
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int32Array#constructor
  local.tee $267
  i32.store $0 offset=424
  local.get $267
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int32Array#__set
  local.get $267
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int32Array#__set
  local.get $267
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int32Array#__set
  local.get $267
  i32.const 1936
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  i32.const 0
  call $~lib/typedarray/Int32Array#reduceRight<i32>
  local.set $268
  local.get $268
  i32.const 6
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint32Array#constructor
  local.tee $269
  i32.store $0 offset=428
  local.get $269
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint32Array#__set
  local.get $269
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint32Array#__set
  local.get $269
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint32Array#__set
  local.get $269
  i32.const 1968
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  i32.const 0
  call $~lib/typedarray/Uint32Array#reduceRight<u32>
  local.set $270
  local.get $270
  i32.const 6
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int64Array#constructor
  local.tee $271
  i32.store $0 offset=432
  local.get $271
  i32.const 0
  i64.const 1
  call $~lib/typedarray/Int64Array#__set
  local.get $271
  i32.const 1
  i64.const 2
  call $~lib/typedarray/Int64Array#__set
  local.get $271
  i32.const 2
  i64.const 3
  call $~lib/typedarray/Int64Array#__set
  local.get $271
  i32.const 2000
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  i64.const 0
  call $~lib/typedarray/Int64Array#reduceRight<i64>
  local.set $272
  local.get $272
  i64.const 6
  i64.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint64Array#constructor
  local.tee $273
  i32.store $0 offset=436
  local.get $273
  i32.const 0
  i64.const 1
  call $~lib/typedarray/Uint64Array#__set
  local.get $273
  i32.const 1
  i64.const 2
  call $~lib/typedarray/Uint64Array#__set
  local.get $273
  i32.const 2
  i64.const 3
  call $~lib/typedarray/Uint64Array#__set
  local.get $273
  i32.const 2032
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  i64.const 0
  call $~lib/typedarray/Uint64Array#reduceRight<u64>
  local.set $274
  local.get $274
  i64.const 6
  i64.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Float32Array#constructor
  local.tee $275
  i32.store $0 offset=440
  local.get $275
  i32.const 0
  f32.const 1
  call $~lib/typedarray/Float32Array#__set
  local.get $275
  i32.const 1
  f32.const 2
  call $~lib/typedarray/Float32Array#__set
  local.get $275
  i32.const 2
  f32.const 3
  call $~lib/typedarray/Float32Array#__set
  local.get $275
  i32.const 2064
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  f32.const 0
  call $~lib/typedarray/Float32Array#reduceRight<f32>
  local.set $276
  local.get $276
  f32.const 6
  f32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Float64Array#constructor
  local.tee $277
  i32.store $0 offset=444
  local.get $277
  i32.const 0
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $277
  i32.const 1
  f64.const 2
  call $~lib/typedarray/Float64Array#__set
  local.get $277
  i32.const 2
  f64.const 3
  call $~lib/typedarray/Float64Array#__set
  local.get $277
  i32.const 2096
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  f64.const 0
  call $~lib/typedarray/Float64Array#reduceRight<f64>
  local.set $278
  local.get $278
  f64.const 6
  f64.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int8Array#constructor
  local.tee $279
  i32.store $0 offset=448
  local.get $279
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int8Array#__set
  local.get $279
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int8Array#__set
  local.get $279
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int8Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $279
  i32.const 2128
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Int8Array#map
  local.tee $280
  i32.store $0 offset=452
  local.get $280
  i32.const 0
  call $~lib/typedarray/Int8Array#__get
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $280
  i32.const 1
  call $~lib/typedarray/Int8Array#__get
  i32.const 4
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $280
  i32.const 2
  call $~lib/typedarray/Int8Array#__get
  i32.const 9
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint8Array#constructor
  local.tee $281
  i32.store $0 offset=456
  local.get $281
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint8Array#__set
  local.get $281
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint8Array#__set
  local.get $281
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint8Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $281
  i32.const 2160
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Uint8Array#map
  local.tee $282
  i32.store $0 offset=460
  local.get $282
  i32.const 0
  call $~lib/typedarray/Uint8Array#__get
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $282
  i32.const 1
  call $~lib/typedarray/Uint8Array#__get
  i32.const 4
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $282
  i32.const 2
  call $~lib/typedarray/Uint8Array#__get
  i32.const 9
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint8ClampedArray#constructor
  local.tee $283
  i32.store $0 offset=464
  local.get $283
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $283
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $283
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint8ClampedArray#__set
  global.get $~lib/memory/__stack_pointer
  local.get $283
  i32.const 2192
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Uint8ClampedArray#map
  local.tee $284
  i32.store $0 offset=468
  local.get $284
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#__get
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $284
  i32.const 1
  call $~lib/typedarray/Uint8ClampedArray#__get
  i32.const 4
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $284
  i32.const 2
  call $~lib/typedarray/Uint8ClampedArray#__get
  i32.const 9
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int16Array#constructor
  local.tee $285
  i32.store $0 offset=472
  local.get $285
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int16Array#__set
  local.get $285
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int16Array#__set
  local.get $285
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int16Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $285
  i32.const 2224
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Int16Array#map
  local.tee $286
  i32.store $0 offset=476
  local.get $286
  i32.const 0
  call $~lib/typedarray/Int16Array#__get
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $286
  i32.const 1
  call $~lib/typedarray/Int16Array#__get
  i32.const 4
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $286
  i32.const 2
  call $~lib/typedarray/Int16Array#__get
  i32.const 9
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint16Array#constructor
  local.tee $287
  i32.store $0 offset=480
  local.get $287
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint16Array#__set
  local.get $287
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint16Array#__set
  local.get $287
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint16Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $287
  i32.const 2256
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Uint16Array#map
  local.tee $288
  i32.store $0 offset=484
  local.get $288
  i32.const 0
  call $~lib/typedarray/Uint16Array#__get
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $288
  i32.const 1
  call $~lib/typedarray/Uint16Array#__get
  i32.const 4
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $288
  i32.const 2
  call $~lib/typedarray/Uint16Array#__get
  i32.const 9
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int32Array#constructor
  local.tee $289
  i32.store $0 offset=488
  local.get $289
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int32Array#__set
  local.get $289
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int32Array#__set
  local.get $289
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int32Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $289
  i32.const 2288
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Int32Array#map
  local.tee $290
  i32.store $0 offset=492
  local.get $290
  i32.const 0
  call $~lib/typedarray/Int32Array#__get
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $290
  i32.const 1
  call $~lib/typedarray/Int32Array#__get
  i32.const 4
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $290
  i32.const 2
  call $~lib/typedarray/Int32Array#__get
  i32.const 9
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint32Array#constructor
  local.tee $291
  i32.store $0 offset=496
  local.get $291
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint32Array#__set
  local.get $291
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint32Array#__set
  local.get $291
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint32Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $291
  i32.const 2320
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Uint32Array#map
  local.tee $292
  i32.store $0 offset=500
  local.get $292
  i32.const 0
  call $~lib/typedarray/Uint32Array#__get
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $292
  i32.const 1
  call $~lib/typedarray/Uint32Array#__get
  i32.const 4
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $292
  i32.const 2
  call $~lib/typedarray/Uint32Array#__get
  i32.const 9
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int64Array#constructor
  local.tee $293
  i32.store $0 offset=504
  local.get $293
  i32.const 0
  i64.const 1
  call $~lib/typedarray/Int64Array#__set
  local.get $293
  i32.const 1
  i64.const 2
  call $~lib/typedarray/Int64Array#__set
  local.get $293
  i32.const 2
  i64.const 3
  call $~lib/typedarray/Int64Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $293
  i32.const 2352
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Int64Array#map
  local.tee $294
  i32.store $0 offset=508
  local.get $294
  i32.const 0
  call $~lib/typedarray/Int64Array#__get
  i64.const 1
  i64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $294
  i32.const 1
  call $~lib/typedarray/Int64Array#__get
  i64.const 4
  i64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $294
  i32.const 2
  call $~lib/typedarray/Int64Array#__get
  i64.const 9
  i64.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint64Array#constructor
  local.tee $295
  i32.store $0 offset=512
  local.get $295
  i32.const 0
  i64.const 1
  call $~lib/typedarray/Uint64Array#__set
  local.get $295
  i32.const 1
  i64.const 2
  call $~lib/typedarray/Uint64Array#__set
  local.get $295
  i32.const 2
  i64.const 3
  call $~lib/typedarray/Uint64Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $295
  i32.const 2384
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Uint64Array#map
  local.tee $296
  i32.store $0 offset=516
  local.get $296
  i32.const 0
  call $~lib/typedarray/Uint64Array#__get
  i64.const 1
  i64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $296
  i32.const 1
  call $~lib/typedarray/Uint64Array#__get
  i64.const 4
  i64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $296
  i32.const 2
  call $~lib/typedarray/Uint64Array#__get
  i64.const 9
  i64.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Float32Array#constructor
  local.tee $297
  i32.store $0 offset=520
  local.get $297
  i32.const 0
  f32.const 1
  call $~lib/typedarray/Float32Array#__set
  local.get $297
  i32.const 1
  f32.const 2
  call $~lib/typedarray/Float32Array#__set
  local.get $297
  i32.const 2
  f32.const 3
  call $~lib/typedarray/Float32Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $297
  i32.const 2416
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Float32Array#map
  local.tee $298
  i32.store $0 offset=524
  local.get $298
  i32.const 0
  call $~lib/typedarray/Float32Array#__get
  f32.const 1
  f32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $298
  i32.const 1
  call $~lib/typedarray/Float32Array#__get
  f32.const 4
  f32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $298
  i32.const 2
  call $~lib/typedarray/Float32Array#__get
  f32.const 9
  f32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Float64Array#constructor
  local.tee $299
  i32.store $0 offset=528
  local.get $299
  i32.const 0
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $299
  i32.const 1
  f64.const 2
  call $~lib/typedarray/Float64Array#__set
  local.get $299
  i32.const 2
  f64.const 3
  call $~lib/typedarray/Float64Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $299
  i32.const 2448
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Float64Array#map
  local.tee $300
  i32.store $0 offset=532
  local.get $300
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.const 1
  f64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $300
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.const 4
  f64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $300
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.const 9
  f64.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 6
  call $~lib/typedarray/Int8Array#constructor
  local.tee $301
  i32.store $0 offset=536
  local.get $301
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int8Array#__set
  local.get $301
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int8Array#__set
  local.get $301
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int8Array#__set
  local.get $301
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Int8Array#__set
  local.get $301
  i32.const 5
  i32.const 5
  call $~lib/typedarray/Int8Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $301
  i32.const 2480
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Int8Array#filter
  local.tee $302
  i32.store $0 offset=540
  local.get $302
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $302
  call $~lib/typedarray/Int8Array#get:length
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $302
  i32.const 0
  call $~lib/typedarray/Int8Array#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $302
  i32.const 1
  call $~lib/typedarray/Int8Array#__get
  i32.const 4
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $302
  i32.const 2
  call $~lib/typedarray/Int8Array#__get
  i32.const 5
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 6
  call $~lib/typedarray/Uint8Array#constructor
  local.tee $303
  i32.store $0 offset=544
  local.get $303
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint8Array#__set
  local.get $303
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint8Array#__set
  local.get $303
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint8Array#__set
  local.get $303
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Uint8Array#__set
  local.get $303
  i32.const 5
  i32.const 5
  call $~lib/typedarray/Uint8Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $303
  i32.const 2512
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Uint8Array#filter
  local.tee $304
  i32.store $0 offset=548
  local.get $304
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $304
  call $~lib/typedarray/Uint8Array#get:length
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $304
  i32.const 0
  call $~lib/typedarray/Uint8Array#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $304
  i32.const 1
  call $~lib/typedarray/Uint8Array#__get
  i32.const 4
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $304
  i32.const 2
  call $~lib/typedarray/Uint8Array#__get
  i32.const 5
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 6
  call $~lib/typedarray/Uint8ClampedArray#constructor
  local.tee $305
  i32.store $0 offset=552
  local.get $305
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $305
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $305
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $305
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $305
  i32.const 5
  i32.const 5
  call $~lib/typedarray/Uint8ClampedArray#__set
  global.get $~lib/memory/__stack_pointer
  local.get $305
  i32.const 2544
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Uint8ClampedArray#filter
  local.tee $306
  i32.store $0 offset=556
  local.get $306
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $306
  call $~lib/typedarray/Uint8ClampedArray#get:length
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $306
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $306
  i32.const 1
  call $~lib/typedarray/Uint8ClampedArray#__get
  i32.const 4
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $306
  i32.const 2
  call $~lib/typedarray/Uint8ClampedArray#__get
  i32.const 5
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 6
  call $~lib/typedarray/Int16Array#constructor
  local.tee $307
  i32.store $0 offset=560
  local.get $307
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int16Array#__set
  local.get $307
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int16Array#__set
  local.get $307
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int16Array#__set
  local.get $307
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Int16Array#__set
  local.get $307
  i32.const 5
  i32.const 5
  call $~lib/typedarray/Int16Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $307
  i32.const 2576
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Int16Array#filter
  local.tee $308
  i32.store $0 offset=564
  local.get $308
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $308
  call $~lib/typedarray/Int16Array#get:length
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $308
  i32.const 0
  call $~lib/typedarray/Int16Array#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $308
  i32.const 1
  call $~lib/typedarray/Int16Array#__get
  i32.const 4
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $308
  i32.const 2
  call $~lib/typedarray/Int16Array#__get
  i32.const 5
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 6
  call $~lib/typedarray/Uint16Array#constructor
  local.tee $309
  i32.store $0 offset=568
  local.get $309
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint16Array#__set
  local.get $309
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint16Array#__set
  local.get $309
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint16Array#__set
  local.get $309
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Uint16Array#__set
  local.get $309
  i32.const 5
  i32.const 5
  call $~lib/typedarray/Uint16Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $309
  i32.const 2608
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Uint16Array#filter
  local.tee $310
  i32.store $0 offset=572
  local.get $310
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $310
  call $~lib/typedarray/Uint16Array#get:length
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $310
  i32.const 0
  call $~lib/typedarray/Uint16Array#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $310
  i32.const 1
  call $~lib/typedarray/Uint16Array#__get
  i32.const 4
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $310
  i32.const 2
  call $~lib/typedarray/Uint16Array#__get
  i32.const 5
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 6
  call $~lib/typedarray/Int32Array#constructor
  local.tee $311
  i32.store $0 offset=576
  local.get $311
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int32Array#__set
  local.get $311
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int32Array#__set
  local.get $311
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int32Array#__set
  local.get $311
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Int32Array#__set
  local.get $311
  i32.const 5
  i32.const 5
  call $~lib/typedarray/Int32Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $311
  i32.const 2640
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Int32Array#filter
  local.tee $312
  i32.store $0 offset=580
  local.get $312
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $312
  call $~lib/typedarray/Int32Array#get:length
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $312
  i32.const 0
  call $~lib/typedarray/Int32Array#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $312
  i32.const 1
  call $~lib/typedarray/Int32Array#__get
  i32.const 4
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $312
  i32.const 2
  call $~lib/typedarray/Int32Array#__get
  i32.const 5
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 6
  call $~lib/typedarray/Uint32Array#constructor
  local.tee $313
  i32.store $0 offset=584
  local.get $313
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint32Array#__set
  local.get $313
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint32Array#__set
  local.get $313
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint32Array#__set
  local.get $313
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Uint32Array#__set
  local.get $313
  i32.const 5
  i32.const 5
  call $~lib/typedarray/Uint32Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $313
  i32.const 2672
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Uint32Array#filter
  local.tee $314
  i32.store $0 offset=588
  local.get $314
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $314
  call $~lib/typedarray/Uint32Array#get:length
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $314
  i32.const 0
  call $~lib/typedarray/Uint32Array#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $314
  i32.const 1
  call $~lib/typedarray/Uint32Array#__get
  i32.const 4
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $314
  i32.const 2
  call $~lib/typedarray/Uint32Array#__get
  i32.const 5
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 6
  call $~lib/typedarray/Int64Array#constructor
  local.tee $315
  i32.store $0 offset=592
  local.get $315
  i32.const 0
  i64.const 1
  call $~lib/typedarray/Int64Array#__set
  local.get $315
  i32.const 1
  i64.const 2
  call $~lib/typedarray/Int64Array#__set
  local.get $315
  i32.const 2
  i64.const 3
  call $~lib/typedarray/Int64Array#__set
  local.get $315
  i32.const 3
  i64.const 4
  call $~lib/typedarray/Int64Array#__set
  local.get $315
  i32.const 5
  i64.const 5
  call $~lib/typedarray/Int64Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $315
  i32.const 2704
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Int64Array#filter
  local.tee $316
  i32.store $0 offset=596
  local.get $316
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $316
  call $~lib/typedarray/Int64Array#get:length
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $316
  i32.const 0
  call $~lib/typedarray/Int64Array#__get
  i64.const 3
  i64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $316
  i32.const 1
  call $~lib/typedarray/Int64Array#__get
  i64.const 4
  i64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $316
  i32.const 2
  call $~lib/typedarray/Int64Array#__get
  i64.const 5
  i64.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 6
  call $~lib/typedarray/Uint64Array#constructor
  local.tee $317
  i32.store $0 offset=600
  local.get $317
  i32.const 0
  i64.const 1
  call $~lib/typedarray/Uint64Array#__set
  local.get $317
  i32.const 1
  i64.const 2
  call $~lib/typedarray/Uint64Array#__set
  local.get $317
  i32.const 2
  i64.const 3
  call $~lib/typedarray/Uint64Array#__set
  local.get $317
  i32.const 3
  i64.const 4
  call $~lib/typedarray/Uint64Array#__set
  local.get $317
  i32.const 5
  i64.const 5
  call $~lib/typedarray/Uint64Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $317
  i32.const 2736
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Uint64Array#filter
  local.tee $318
  i32.store $0 offset=604
  local.get $318
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $318
  call $~lib/typedarray/Uint64Array#get:length
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $318
  i32.const 0
  call $~lib/typedarray/Uint64Array#__get
  i64.const 3
  i64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $318
  i32.const 1
  call $~lib/typedarray/Uint64Array#__get
  i64.const 4
  i64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $318
  i32.const 2
  call $~lib/typedarray/Uint64Array#__get
  i64.const 5
  i64.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 6
  call $~lib/typedarray/Float32Array#constructor
  local.tee $319
  i32.store $0 offset=608
  local.get $319
  i32.const 0
  f32.const 1
  call $~lib/typedarray/Float32Array#__set
  local.get $319
  i32.const 1
  f32.const 2
  call $~lib/typedarray/Float32Array#__set
  local.get $319
  i32.const 2
  f32.const 3
  call $~lib/typedarray/Float32Array#__set
  local.get $319
  i32.const 3
  f32.const 4
  call $~lib/typedarray/Float32Array#__set
  local.get $319
  i32.const 5
  f32.const 5
  call $~lib/typedarray/Float32Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $319
  i32.const 2768
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Float32Array#filter
  local.tee $320
  i32.store $0 offset=612
  local.get $320
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $320
  call $~lib/typedarray/Float32Array#get:length
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $320
  i32.const 0
  call $~lib/typedarray/Float32Array#__get
  f32.const 3
  f32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $320
  i32.const 1
  call $~lib/typedarray/Float32Array#__get
  f32.const 4
  f32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $320
  i32.const 2
  call $~lib/typedarray/Float32Array#__get
  f32.const 5
  f32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 6
  call $~lib/typedarray/Float64Array#constructor
  local.tee $321
  i32.store $0 offset=616
  local.get $321
  i32.const 0
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $321
  i32.const 1
  f64.const 2
  call $~lib/typedarray/Float64Array#__set
  local.get $321
  i32.const 2
  f64.const 3
  call $~lib/typedarray/Float64Array#__set
  local.get $321
  i32.const 3
  f64.const 4
  call $~lib/typedarray/Float64Array#__set
  local.get $321
  i32.const 5
  f64.const 5
  call $~lib/typedarray/Float64Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $321
  i32.const 2800
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Float64Array#filter
  local.tee $322
  i32.store $0 offset=620
  local.get $322
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $322
  call $~lib/typedarray/Float64Array#get:length
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $322
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.const 3
  f64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $322
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.const 4
  f64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $322
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.const 5
  f64.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int8Array#constructor
  local.tee $323
  i32.store $0 offset=624
  local.get $323
  i32.const 0
  i32.const 2
  call $~lib/typedarray/Int8Array#__set
  local.get $323
  i32.const 1
  i32.const 4
  call $~lib/typedarray/Int8Array#__set
  local.get $323
  i32.const 2
  i32.const 6
  call $~lib/typedarray/Int8Array#__set
  local.get $323
  i32.const 2832
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Int8Array#some
  local.set $324
  local.get $324
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $323
  i32.const 2864
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Int8Array#some
  local.set $325
  local.get $325
  i32.eqz
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint8Array#constructor
  local.tee $326
  i32.store $0 offset=628
  local.get $326
  i32.const 0
  i32.const 2
  call $~lib/typedarray/Uint8Array#__set
  local.get $326
  i32.const 1
  i32.const 4
  call $~lib/typedarray/Uint8Array#__set
  local.get $326
  i32.const 2
  i32.const 6
  call $~lib/typedarray/Uint8Array#__set
  local.get $326
  i32.const 2896
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Uint8Array#some
  local.set $327
  local.get $327
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $326
  i32.const 2928
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Uint8Array#some
  local.set $328
  local.get $328
  i32.eqz
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint8ClampedArray#constructor
  local.tee $329
  i32.store $0 offset=632
  local.get $329
  i32.const 0
  i32.const 2
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $329
  i32.const 1
  i32.const 4
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $329
  i32.const 2
  i32.const 6
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $329
  i32.const 2960
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Uint8ClampedArray#some
  local.set $330
  local.get $330
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $329
  i32.const 2992
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Uint8ClampedArray#some
  local.set $331
  local.get $331
  i32.eqz
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int16Array#constructor
  local.tee $332
  i32.store $0 offset=636
  local.get $332
  i32.const 0
  i32.const 2
  call $~lib/typedarray/Int16Array#__set
  local.get $332
  i32.const 1
  i32.const 4
  call $~lib/typedarray/Int16Array#__set
  local.get $332
  i32.const 2
  i32.const 6
  call $~lib/typedarray/Int16Array#__set
  local.get $332
  i32.const 3024
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Int16Array#some
  local.set $333
  local.get $333
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $332
  i32.const 3056
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Int16Array#some
  local.set $334
  local.get $334
  i32.eqz
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint16Array#constructor
  local.tee $335
  i32.store $0 offset=640
  local.get $335
  i32.const 0
  i32.const 2
  call $~lib/typedarray/Uint16Array#__set
  local.get $335
  i32.const 1
  i32.const 4
  call $~lib/typedarray/Uint16Array#__set
  local.get $335
  i32.const 2
  i32.const 6
  call $~lib/typedarray/Uint16Array#__set
  local.get $335
  i32.const 3088
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Uint16Array#some
  local.set $336
  local.get $336
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $335
  i32.const 3120
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Uint16Array#some
  local.set $337
  local.get $337
  i32.eqz
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int32Array#constructor
  local.tee $338
  i32.store $0 offset=644
  local.get $338
  i32.const 0
  i32.const 2
  call $~lib/typedarray/Int32Array#__set
  local.get $338
  i32.const 1
  i32.const 4
  call $~lib/typedarray/Int32Array#__set
  local.get $338
  i32.const 2
  i32.const 6
  call $~lib/typedarray/Int32Array#__set
  local.get $338
  i32.const 3152
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Int32Array#some
  local.set $339
  local.get $339
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $338
  i32.const 3184
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Int32Array#some
  local.set $340
  local.get $340
  i32.eqz
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint32Array#constructor
  local.tee $341
  i32.store $0 offset=648
  local.get $341
  i32.const 0
  i32.const 2
  call $~lib/typedarray/Uint32Array#__set
  local.get $341
  i32.const 1
  i32.const 4
  call $~lib/typedarray/Uint32Array#__set
  local.get $341
  i32.const 2
  i32.const 6
  call $~lib/typedarray/Uint32Array#__set
  local.get $341
  i32.const 3216
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Uint32Array#some
  local.set $342
  local.get $342
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $341
  i32.const 3248
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Uint32Array#some
  local.set $343
  local.get $343
  i32.eqz
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int64Array#constructor
  local.tee $344
  i32.store $0 offset=652
  local.get $344
  i32.const 0
  i64.const 2
  call $~lib/typedarray/Int64Array#__set
  local.get $344
  i32.const 1
  i64.const 4
  call $~lib/typedarray/Int64Array#__set
  local.get $344
  i32.const 2
  i64.const 6
  call $~lib/typedarray/Int64Array#__set
  local.get $344
  i32.const 3280
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Int64Array#some
  local.set $345
  local.get $345
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $344
  i32.const 3312
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Int64Array#some
  local.set $346
  local.get $346
  i32.eqz
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint64Array#constructor
  local.tee $347
  i32.store $0 offset=656
  local.get $347
  i32.const 0
  i64.const 2
  call $~lib/typedarray/Uint64Array#__set
  local.get $347
  i32.const 1
  i64.const 4
  call $~lib/typedarray/Uint64Array#__set
  local.get $347
  i32.const 2
  i64.const 6
  call $~lib/typedarray/Uint64Array#__set
  local.get $347
  i32.const 3344
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Uint64Array#some
  local.set $348
  local.get $348
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $347
  i32.const 3376
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Uint64Array#some
  local.set $349
  local.get $349
  i32.eqz
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Float32Array#constructor
  local.tee $350
  i32.store $0 offset=660
  local.get $350
  i32.const 0
  f32.const 2
  call $~lib/typedarray/Float32Array#__set
  local.get $350
  i32.const 1
  f32.const 4
  call $~lib/typedarray/Float32Array#__set
  local.get $350
  i32.const 2
  f32.const 6
  call $~lib/typedarray/Float32Array#__set
  local.get $350
  i32.const 3408
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Float32Array#some
  local.set $351
  local.get $351
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $350
  i32.const 3440
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Float32Array#some
  local.set $352
  local.get $352
  i32.eqz
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Float64Array#constructor
  local.tee $353
  i32.store $0 offset=664
  local.get $353
  i32.const 0
  f64.const 2
  call $~lib/typedarray/Float64Array#__set
  local.get $353
  i32.const 1
  f64.const 4
  call $~lib/typedarray/Float64Array#__set
  local.get $353
  i32.const 2
  f64.const 6
  call $~lib/typedarray/Float64Array#__set
  local.get $353
  i32.const 3472
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Float64Array#some
  local.set $354
  local.get $354
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $353
  i32.const 3504
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Float64Array#some
  local.set $355
  local.get $355
  i32.eqz
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int8Array#constructor
  local.tee $356
  i32.store $0 offset=668
  local.get $356
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int8Array#__set
  local.get $356
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int8Array#__set
  local.get $356
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int8Array#__set
  local.get $356
  i32.const 3536
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Int8Array#findIndex
  local.set $357
  local.get $357
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $356
  i32.const 3568
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Int8Array#findIndex
  local.set $358
  local.get $358
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint8Array#constructor
  local.tee $359
  i32.store $0 offset=672
  local.get $359
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint8Array#__set
  local.get $359
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint8Array#__set
  local.get $359
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint8Array#__set
  local.get $359
  i32.const 3600
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Uint8Array#findIndex
  local.set $360
  local.get $360
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $359
  i32.const 3632
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Uint8Array#findIndex
  local.set $361
  local.get $361
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint8ClampedArray#constructor
  local.tee $362
  i32.store $0 offset=676
  local.get $362
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $362
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $362
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $362
  i32.const 3664
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Uint8ClampedArray#findIndex
  local.set $363
  local.get $363
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $362
  i32.const 3696
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Uint8ClampedArray#findIndex
  local.set $364
  local.get $364
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int16Array#constructor
  local.tee $365
  i32.store $0 offset=680
  local.get $365
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int16Array#__set
  local.get $365
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int16Array#__set
  local.get $365
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int16Array#__set
  local.get $365
  i32.const 3728
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Int16Array#findIndex
  local.set $366
  local.get $366
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $365
  i32.const 3760
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Int16Array#findIndex
  local.set $367
  local.get $367
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint16Array#constructor
  local.tee $368
  i32.store $0 offset=684
  local.get $368
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint16Array#__set
  local.get $368
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint16Array#__set
  local.get $368
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint16Array#__set
  local.get $368
  i32.const 3792
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Uint16Array#findIndex
  local.set $369
  local.get $369
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $368
  i32.const 3824
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Uint16Array#findIndex
  local.set $370
  local.get $370
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int32Array#constructor
  local.tee $371
  i32.store $0 offset=688
  local.get $371
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int32Array#__set
  local.get $371
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int32Array#__set
  local.get $371
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int32Array#__set
  local.get $371
  i32.const 3856
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Int32Array#findIndex
  local.set $372
  local.get $372
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $371
  i32.const 3888
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Int32Array#findIndex
  local.set $373
  local.get $373
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint32Array#constructor
  local.tee $374
  i32.store $0 offset=692
  local.get $374
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint32Array#__set
  local.get $374
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint32Array#__set
  local.get $374
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint32Array#__set
  local.get $374
  i32.const 3920
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Uint32Array#findIndex
  local.set $375
  local.get $375
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $374
  i32.const 3952
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Uint32Array#findIndex
  local.set $376
  local.get $376
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int64Array#constructor
  local.tee $377
  i32.store $0 offset=696
  local.get $377
  i32.const 0
  i64.const 1
  call $~lib/typedarray/Int64Array#__set
  local.get $377
  i32.const 1
  i64.const 2
  call $~lib/typedarray/Int64Array#__set
  local.get $377
  i32.const 2
  i64.const 3
  call $~lib/typedarray/Int64Array#__set
  local.get $377
  i32.const 3984
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Int64Array#findIndex
  local.set $378
  local.get $378
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $377
  i32.const 4016
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Int64Array#findIndex
  local.set $379
  local.get $379
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint64Array#constructor
  local.tee $380
  i32.store $0 offset=700
  local.get $380
  i32.const 0
  i64.const 1
  call $~lib/typedarray/Uint64Array#__set
  local.get $380
  i32.const 1
  i64.const 2
  call $~lib/typedarray/Uint64Array#__set
  local.get $380
  i32.const 2
  i64.const 3
  call $~lib/typedarray/Uint64Array#__set
  local.get $380
  i32.const 4048
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Uint64Array#findIndex
  local.set $381
  local.get $381
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $380
  i32.const 4080
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Uint64Array#findIndex
  local.set $382
  local.get $382
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Float32Array#constructor
  local.tee $383
  i32.store $0 offset=704
  local.get $383
  i32.const 0
  f32.const 1
  call $~lib/typedarray/Float32Array#__set
  local.get $383
  i32.const 1
  f32.const 2
  call $~lib/typedarray/Float32Array#__set
  local.get $383
  i32.const 2
  f32.const 3
  call $~lib/typedarray/Float32Array#__set
  local.get $383
  i32.const 4112
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Float32Array#findIndex
  local.set $384
  local.get $384
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $383
  i32.const 4144
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Float32Array#findIndex
  local.set $385
  local.get $385
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Float64Array#constructor
  local.tee $386
  i32.store $0 offset=708
  local.get $386
  i32.const 0
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $386
  i32.const 1
  f64.const 2
  call $~lib/typedarray/Float64Array#__set
  local.get $386
  i32.const 2
  f64.const 3
  call $~lib/typedarray/Float64Array#__set
  local.get $386
  i32.const 4176
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Float64Array#findIndex
  local.set $387
  local.get $387
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $386
  i32.const 4208
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Float64Array#findIndex
  local.set $388
  local.get $388
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int8Array#constructor
  local.tee $389
  i32.store $0 offset=712
  local.get $389
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int8Array#__set
  local.get $389
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int8Array#__set
  local.get $389
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int8Array#__set
  local.get $389
  i32.const 4240
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Int8Array#findLastIndex
  local.set $390
  local.get $390
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $389
  i32.const 4272
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Int8Array#findLastIndex
  local.set $391
  local.get $391
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint8Array#constructor
  local.tee $392
  i32.store $0 offset=716
  local.get $392
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint8Array#__set
  local.get $392
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint8Array#__set
  local.get $392
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint8Array#__set
  local.get $392
  i32.const 4304
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Uint8Array#findLastIndex
  local.set $393
  local.get $393
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $392
  i32.const 4336
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Uint8Array#findLastIndex
  local.set $394
  local.get $394
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint8ClampedArray#constructor
  local.tee $395
  i32.store $0 offset=720
  local.get $395
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $395
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $395
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $395
  i32.const 4368
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Uint8ClampedArray#findLastIndex
  local.set $396
  local.get $396
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $395
  i32.const 4400
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Uint8ClampedArray#findLastIndex
  local.set $397
  local.get $397
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int16Array#constructor
  local.tee $398
  i32.store $0 offset=724
  local.get $398
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int16Array#__set
  local.get $398
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int16Array#__set
  local.get $398
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int16Array#__set
  local.get $398
  i32.const 4432
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Int16Array#findLastIndex
  local.set $399
  local.get $399
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $398
  i32.const 4464
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Int16Array#findLastIndex
  local.set $400
  local.get $400
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint16Array#constructor
  local.tee $401
  i32.store $0 offset=728
  local.get $401
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint16Array#__set
  local.get $401
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint16Array#__set
  local.get $401
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint16Array#__set
  local.get $401
  i32.const 4496
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Uint16Array#findLastIndex
  local.set $402
  local.get $402
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $401
  i32.const 4528
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Uint16Array#findLastIndex
  local.set $403
  local.get $403
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int32Array#constructor
  local.tee $404
  i32.store $0 offset=732
  local.get $404
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int32Array#__set
  local.get $404
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int32Array#__set
  local.get $404
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int32Array#__set
  local.get $404
  i32.const 4560
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Int32Array#findLastIndex
  local.set $405
  local.get $405
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $404
  i32.const 4592
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Int32Array#findLastIndex
  local.set $406
  local.get $406
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint32Array#constructor
  local.tee $407
  i32.store $0 offset=736
  local.get $407
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint32Array#__set
  local.get $407
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint32Array#__set
  local.get $407
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint32Array#__set
  local.get $407
  i32.const 4624
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Uint32Array#findLastIndex
  local.set $408
  local.get $408
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $407
  i32.const 4656
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Uint32Array#findLastIndex
  local.set $409
  local.get $409
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int64Array#constructor
  local.tee $410
  i32.store $0 offset=740
  local.get $410
  i32.const 0
  i64.const 1
  call $~lib/typedarray/Int64Array#__set
  local.get $410
  i32.const 1
  i64.const 2
  call $~lib/typedarray/Int64Array#__set
  local.get $410
  i32.const 2
  i64.const 3
  call $~lib/typedarray/Int64Array#__set
  local.get $410
  i32.const 4688
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Int64Array#findLastIndex
  local.set $411
  local.get $411
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $410
  i32.const 4720
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Int64Array#findLastIndex
  local.set $412
  local.get $412
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint64Array#constructor
  local.tee $413
  i32.store $0 offset=744
  local.get $413
  i32.const 0
  i64.const 1
  call $~lib/typedarray/Uint64Array#__set
  local.get $413
  i32.const 1
  i64.const 2
  call $~lib/typedarray/Uint64Array#__set
  local.get $413
  i32.const 2
  i64.const 3
  call $~lib/typedarray/Uint64Array#__set
  local.get $413
  i32.const 4752
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Uint64Array#findLastIndex
  local.set $414
  local.get $414
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $413
  i32.const 4784
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Uint64Array#findLastIndex
  local.set $415
  local.get $415
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Float32Array#constructor
  local.tee $416
  i32.store $0 offset=748
  local.get $416
  i32.const 0
  f32.const 1
  call $~lib/typedarray/Float32Array#__set
  local.get $416
  i32.const 1
  f32.const 2
  call $~lib/typedarray/Float32Array#__set
  local.get $416
  i32.const 2
  f32.const 3
  call $~lib/typedarray/Float32Array#__set
  local.get $416
  i32.const 4816
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Float32Array#findLastIndex
  local.set $417
  local.get $417
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $416
  i32.const 4848
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Float32Array#findLastIndex
  local.set $418
  local.get $418
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Float64Array#constructor
  local.tee $419
  i32.store $0 offset=752
  local.get $419
  i32.const 0
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $419
  i32.const 1
  f64.const 2
  call $~lib/typedarray/Float64Array#__set
  local.get $419
  i32.const 2
  f64.const 3
  call $~lib/typedarray/Float64Array#__set
  local.get $419
  i32.const 4880
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Float64Array#findLastIndex
  local.set $420
  local.get $420
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $419
  i32.const 4912
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Float64Array#findLastIndex
  local.set $421
  local.get $421
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int8Array#constructor
  local.tee $422
  i32.store $0 offset=756
  local.get $422
  i32.const 0
  i32.const 2
  call $~lib/typedarray/Int8Array#__set
  local.get $422
  i32.const 1
  i32.const 4
  call $~lib/typedarray/Int8Array#__set
  local.get $422
  i32.const 2
  i32.const 6
  call $~lib/typedarray/Int8Array#__set
  local.get $422
  i32.const 4944
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Int8Array#every
  local.set $423
  local.get $423
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $422
  i32.const 4976
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Int8Array#every
  local.set $424
  local.get $424
  i32.eqz
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint8Array#constructor
  local.tee $425
  i32.store $0 offset=760
  local.get $425
  i32.const 0
  i32.const 2
  call $~lib/typedarray/Uint8Array#__set
  local.get $425
  i32.const 1
  i32.const 4
  call $~lib/typedarray/Uint8Array#__set
  local.get $425
  i32.const 2
  i32.const 6
  call $~lib/typedarray/Uint8Array#__set
  local.get $425
  i32.const 5008
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Uint8Array#every
  local.set $426
  local.get $426
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $425
  i32.const 5040
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Uint8Array#every
  local.set $427
  local.get $427
  i32.eqz
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint8ClampedArray#constructor
  local.tee $428
  i32.store $0 offset=764
  local.get $428
  i32.const 0
  i32.const 2
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $428
  i32.const 1
  i32.const 4
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $428
  i32.const 2
  i32.const 6
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $428
  i32.const 5072
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Uint8ClampedArray#every
  local.set $429
  local.get $429
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $428
  i32.const 5104
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Uint8ClampedArray#every
  local.set $430
  local.get $430
  i32.eqz
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int16Array#constructor
  local.tee $431
  i32.store $0 offset=768
  local.get $431
  i32.const 0
  i32.const 2
  call $~lib/typedarray/Int16Array#__set
  local.get $431
  i32.const 1
  i32.const 4
  call $~lib/typedarray/Int16Array#__set
  local.get $431
  i32.const 2
  i32.const 6
  call $~lib/typedarray/Int16Array#__set
  local.get $431
  i32.const 5136
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Int16Array#every
  local.set $432
  local.get $432
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $431
  i32.const 5168
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Int16Array#every
  local.set $433
  local.get $433
  i32.eqz
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint16Array#constructor
  local.tee $434
  i32.store $0 offset=772
  local.get $434
  i32.const 0
  i32.const 2
  call $~lib/typedarray/Uint16Array#__set
  local.get $434
  i32.const 1
  i32.const 4
  call $~lib/typedarray/Uint16Array#__set
  local.get $434
  i32.const 2
  i32.const 6
  call $~lib/typedarray/Uint16Array#__set
  local.get $434
  i32.const 5200
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Uint16Array#every
  local.set $435
  local.get $435
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $434
  i32.const 5232
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Uint16Array#every
  local.set $436
  local.get $436
  i32.eqz
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int32Array#constructor
  local.tee $437
  i32.store $0 offset=776
  local.get $437
  i32.const 0
  i32.const 2
  call $~lib/typedarray/Int32Array#__set
  local.get $437
  i32.const 1
  i32.const 4
  call $~lib/typedarray/Int32Array#__set
  local.get $437
  i32.const 2
  i32.const 6
  call $~lib/typedarray/Int32Array#__set
  local.get $437
  i32.const 5264
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Int32Array#every
  local.set $438
  local.get $438
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $437
  i32.const 5296
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Int32Array#every
  local.set $439
  local.get $439
  i32.eqz
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint32Array#constructor
  local.tee $440
  i32.store $0 offset=780
  local.get $440
  i32.const 0
  i32.const 2
  call $~lib/typedarray/Uint32Array#__set
  local.get $440
  i32.const 1
  i32.const 4
  call $~lib/typedarray/Uint32Array#__set
  local.get $440
  i32.const 2
  i32.const 6
  call $~lib/typedarray/Uint32Array#__set
  local.get $440
  i32.const 5328
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Uint32Array#every
  local.set $441
  local.get $441
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $440
  i32.const 5360
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Uint32Array#every
  local.set $442
  local.get $442
  i32.eqz
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int64Array#constructor
  local.tee $443
  i32.store $0 offset=784
  local.get $443
  i32.const 0
  i64.const 2
  call $~lib/typedarray/Int64Array#__set
  local.get $443
  i32.const 1
  i64.const 4
  call $~lib/typedarray/Int64Array#__set
  local.get $443
  i32.const 2
  i64.const 6
  call $~lib/typedarray/Int64Array#__set
  local.get $443
  i32.const 5392
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Int64Array#every
  local.set $444
  local.get $444
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $443
  i32.const 5424
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Int64Array#every
  local.set $445
  local.get $445
  i32.eqz
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint64Array#constructor
  local.tee $446
  i32.store $0 offset=788
  local.get $446
  i32.const 0
  i64.const 2
  call $~lib/typedarray/Uint64Array#__set
  local.get $446
  i32.const 1
  i64.const 4
  call $~lib/typedarray/Uint64Array#__set
  local.get $446
  i32.const 2
  i64.const 6
  call $~lib/typedarray/Uint64Array#__set
  local.get $446
  i32.const 5456
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Uint64Array#every
  local.set $447
  local.get $447
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $446
  i32.const 5488
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Uint64Array#every
  local.set $448
  local.get $448
  i32.eqz
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Float32Array#constructor
  local.tee $449
  i32.store $0 offset=792
  local.get $449
  i32.const 0
  f32.const 2
  call $~lib/typedarray/Float32Array#__set
  local.get $449
  i32.const 1
  f32.const 4
  call $~lib/typedarray/Float32Array#__set
  local.get $449
  i32.const 2
  f32.const 6
  call $~lib/typedarray/Float32Array#__set
  local.get $449
  i32.const 5520
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Float32Array#every
  local.set $450
  local.get $450
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $449
  i32.const 5552
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Float32Array#every
  local.set $451
  local.get $451
  i32.eqz
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Float64Array#constructor
  local.tee $452
  i32.store $0 offset=796
  local.get $452
  i32.const 0
  f64.const 2
  call $~lib/typedarray/Float64Array#__set
  local.get $452
  i32.const 1
  f64.const 4
  call $~lib/typedarray/Float64Array#__set
  local.get $452
  i32.const 2
  f64.const 6
  call $~lib/typedarray/Float64Array#__set
  local.get $452
  i32.const 5584
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Float64Array#every
  local.set $453
  local.get $453
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $452
  i32.const 5616
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Float64Array#every
  local.set $454
  local.get $454
  i32.eqz
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  global.set $std/typedarray/forEachCallCount
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int8Array#constructor
  local.tee $457
  i32.store $0 offset=800
  local.get $457
  global.set $std/typedarray/forEachSelf
  local.get $457
  i32.const 0
  global.get $std/typedarray/forEachValues
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=804
  local.get $1317
  i32.const 0
  call $~lib/array/Array<i32>#__get
  i32.extend8_s
  call $~lib/typedarray/Int8Array#__set
  local.get $457
  i32.const 1
  global.get $std/typedarray/forEachValues
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=804
  local.get $1317
  i32.const 1
  call $~lib/array/Array<i32>#__get
  i32.extend8_s
  call $~lib/typedarray/Int8Array#__set
  local.get $457
  i32.const 2
  global.get $std/typedarray/forEachValues
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=804
  local.get $1317
  i32.const 2
  call $~lib/array/Array<i32>#__get
  i32.extend8_s
  call $~lib/typedarray/Int8Array#__set
  local.get $457
  i32.const 5728
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Int8Array#forEach
  global.get $std/typedarray/forEachCallCount
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  global.set $std/typedarray/forEachCallCount
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint8Array#constructor
  local.tee $458
  i32.store $0 offset=808
  local.get $458
  global.set $std/typedarray/forEachSelf
  local.get $458
  i32.const 0
  global.get $std/typedarray/forEachValues
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=804
  local.get $1317
  i32.const 0
  call $~lib/array/Array<i32>#__get
  i32.const 255
  i32.and
  call $~lib/typedarray/Uint8Array#__set
  local.get $458
  i32.const 1
  global.get $std/typedarray/forEachValues
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=804
  local.get $1317
  i32.const 1
  call $~lib/array/Array<i32>#__get
  i32.const 255
  i32.and
  call $~lib/typedarray/Uint8Array#__set
  local.get $458
  i32.const 2
  global.get $std/typedarray/forEachValues
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=804
  local.get $1317
  i32.const 2
  call $~lib/array/Array<i32>#__get
  i32.const 255
  i32.and
  call $~lib/typedarray/Uint8Array#__set
  local.get $458
  i32.const 5760
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Uint8Array#forEach
  global.get $std/typedarray/forEachCallCount
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  global.set $std/typedarray/forEachCallCount
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint8ClampedArray#constructor
  local.tee $459
  i32.store $0 offset=812
  local.get $459
  global.set $std/typedarray/forEachSelf
  local.get $459
  i32.const 0
  global.get $std/typedarray/forEachValues
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=804
  local.get $1317
  i32.const 0
  call $~lib/array/Array<i32>#__get
  i32.const 255
  i32.and
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $459
  i32.const 1
  global.get $std/typedarray/forEachValues
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=804
  local.get $1317
  i32.const 1
  call $~lib/array/Array<i32>#__get
  i32.const 255
  i32.and
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $459
  i32.const 2
  global.get $std/typedarray/forEachValues
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=804
  local.get $1317
  i32.const 2
  call $~lib/array/Array<i32>#__get
  i32.const 255
  i32.and
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $459
  i32.const 5792
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Uint8ClampedArray#forEach
  global.get $std/typedarray/forEachCallCount
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  global.set $std/typedarray/forEachCallCount
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int16Array#constructor
  local.tee $460
  i32.store $0 offset=816
  local.get $460
  global.set $std/typedarray/forEachSelf
  local.get $460
  i32.const 0
  global.get $std/typedarray/forEachValues
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=804
  local.get $1317
  i32.const 0
  call $~lib/array/Array<i32>#__get
  i32.extend16_s
  call $~lib/typedarray/Int16Array#__set
  local.get $460
  i32.const 1
  global.get $std/typedarray/forEachValues
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=804
  local.get $1317
  i32.const 1
  call $~lib/array/Array<i32>#__get
  i32.extend16_s
  call $~lib/typedarray/Int16Array#__set
  local.get $460
  i32.const 2
  global.get $std/typedarray/forEachValues
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=804
  local.get $1317
  i32.const 2
  call $~lib/array/Array<i32>#__get
  i32.extend16_s
  call $~lib/typedarray/Int16Array#__set
  local.get $460
  i32.const 5824
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Int16Array#forEach
  global.get $std/typedarray/forEachCallCount
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  global.set $std/typedarray/forEachCallCount
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint16Array#constructor
  local.tee $461
  i32.store $0 offset=820
  local.get $461
  global.set $std/typedarray/forEachSelf
  local.get $461
  i32.const 0
  global.get $std/typedarray/forEachValues
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=804
  local.get $1317
  i32.const 0
  call $~lib/array/Array<i32>#__get
  i32.const 65535
  i32.and
  call $~lib/typedarray/Uint16Array#__set
  local.get $461
  i32.const 1
  global.get $std/typedarray/forEachValues
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=804
  local.get $1317
  i32.const 1
  call $~lib/array/Array<i32>#__get
  i32.const 65535
  i32.and
  call $~lib/typedarray/Uint16Array#__set
  local.get $461
  i32.const 2
  global.get $std/typedarray/forEachValues
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=804
  local.get $1317
  i32.const 2
  call $~lib/array/Array<i32>#__get
  i32.const 65535
  i32.and
  call $~lib/typedarray/Uint16Array#__set
  local.get $461
  i32.const 5856
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Uint16Array#forEach
  global.get $std/typedarray/forEachCallCount
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  global.set $std/typedarray/forEachCallCount
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int32Array#constructor
  local.tee $462
  i32.store $0 offset=824
  local.get $462
  global.set $std/typedarray/forEachSelf
  local.get $462
  i32.const 0
  global.get $std/typedarray/forEachValues
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=804
  local.get $1317
  i32.const 0
  call $~lib/array/Array<i32>#__get
  call $~lib/typedarray/Int32Array#__set
  local.get $462
  i32.const 1
  global.get $std/typedarray/forEachValues
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=804
  local.get $1317
  i32.const 1
  call $~lib/array/Array<i32>#__get
  call $~lib/typedarray/Int32Array#__set
  local.get $462
  i32.const 2
  global.get $std/typedarray/forEachValues
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=804
  local.get $1317
  i32.const 2
  call $~lib/array/Array<i32>#__get
  call $~lib/typedarray/Int32Array#__set
  local.get $462
  i32.const 5888
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Int32Array#forEach
  global.get $std/typedarray/forEachCallCount
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  global.set $std/typedarray/forEachCallCount
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint32Array#constructor
  local.tee $463
  i32.store $0 offset=828
  local.get $463
  global.set $std/typedarray/forEachSelf
  local.get $463
  i32.const 0
  global.get $std/typedarray/forEachValues
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=804
  local.get $1317
  i32.const 0
  call $~lib/array/Array<i32>#__get
  call $~lib/typedarray/Uint32Array#__set
  local.get $463
  i32.const 1
  global.get $std/typedarray/forEachValues
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=804
  local.get $1317
  i32.const 1
  call $~lib/array/Array<i32>#__get
  call $~lib/typedarray/Uint32Array#__set
  local.get $463
  i32.const 2
  global.get $std/typedarray/forEachValues
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=804
  local.get $1317
  i32.const 2
  call $~lib/array/Array<i32>#__get
  call $~lib/typedarray/Uint32Array#__set
  local.get $463
  i32.const 5920
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Uint32Array#forEach
  global.get $std/typedarray/forEachCallCount
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  global.set $std/typedarray/forEachCallCount
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int64Array#constructor
  local.tee $464
  i32.store $0 offset=832
  local.get $464
  global.set $std/typedarray/forEachSelf
  local.get $464
  i32.const 0
  global.get $std/typedarray/forEachValues
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=804
  local.get $1317
  i32.const 0
  call $~lib/array/Array<i32>#__get
  i64.extend_i32_s
  call $~lib/typedarray/Int64Array#__set
  local.get $464
  i32.const 1
  global.get $std/typedarray/forEachValues
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=804
  local.get $1317
  i32.const 1
  call $~lib/array/Array<i32>#__get
  i64.extend_i32_s
  call $~lib/typedarray/Int64Array#__set
  local.get $464
  i32.const 2
  global.get $std/typedarray/forEachValues
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=804
  local.get $1317
  i32.const 2
  call $~lib/array/Array<i32>#__get
  i64.extend_i32_s
  call $~lib/typedarray/Int64Array#__set
  local.get $464
  i32.const 5952
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Int64Array#forEach
  global.get $std/typedarray/forEachCallCount
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  global.set $std/typedarray/forEachCallCount
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint64Array#constructor
  local.tee $465
  i32.store $0 offset=836
  local.get $465
  global.set $std/typedarray/forEachSelf
  local.get $465
  i32.const 0
  global.get $std/typedarray/forEachValues
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=804
  local.get $1317
  i32.const 0
  call $~lib/array/Array<i32>#__get
  i64.extend_i32_s
  call $~lib/typedarray/Uint64Array#__set
  local.get $465
  i32.const 1
  global.get $std/typedarray/forEachValues
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=804
  local.get $1317
  i32.const 1
  call $~lib/array/Array<i32>#__get
  i64.extend_i32_s
  call $~lib/typedarray/Uint64Array#__set
  local.get $465
  i32.const 2
  global.get $std/typedarray/forEachValues
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=804
  local.get $1317
  i32.const 2
  call $~lib/array/Array<i32>#__get
  i64.extend_i32_s
  call $~lib/typedarray/Uint64Array#__set
  local.get $465
  i32.const 5984
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Uint64Array#forEach
  global.get $std/typedarray/forEachCallCount
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  global.set $std/typedarray/forEachCallCount
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Float32Array#constructor
  local.tee $466
  i32.store $0 offset=840
  local.get $466
  global.set $std/typedarray/forEachSelf
  local.get $466
  i32.const 0
  global.get $std/typedarray/forEachValues
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=804
  local.get $1317
  i32.const 0
  call $~lib/array/Array<i32>#__get
  f32.convert_i32_s
  call $~lib/typedarray/Float32Array#__set
  local.get $466
  i32.const 1
  global.get $std/typedarray/forEachValues
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=804
  local.get $1317
  i32.const 1
  call $~lib/array/Array<i32>#__get
  f32.convert_i32_s
  call $~lib/typedarray/Float32Array#__set
  local.get $466
  i32.const 2
  global.get $std/typedarray/forEachValues
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=804
  local.get $1317
  i32.const 2
  call $~lib/array/Array<i32>#__get
  f32.convert_i32_s
  call $~lib/typedarray/Float32Array#__set
  local.get $466
  i32.const 6016
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Float32Array#forEach
  global.get $std/typedarray/forEachCallCount
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  global.set $std/typedarray/forEachCallCount
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Float64Array#constructor
  local.tee $467
  i32.store $0 offset=844
  local.get $467
  global.set $std/typedarray/forEachSelf
  local.get $467
  i32.const 0
  global.get $std/typedarray/forEachValues
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=804
  local.get $1317
  i32.const 0
  call $~lib/array/Array<i32>#__get
  f64.convert_i32_s
  call $~lib/typedarray/Float64Array#__set
  local.get $467
  i32.const 1
  global.get $std/typedarray/forEachValues
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=804
  local.get $1317
  i32.const 1
  call $~lib/array/Array<i32>#__get
  f64.convert_i32_s
  call $~lib/typedarray/Float64Array#__set
  local.get $467
  i32.const 2
  global.get $std/typedarray/forEachValues
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=804
  local.get $1317
  i32.const 2
  call $~lib/array/Array<i32>#__get
  f64.convert_i32_s
  call $~lib/typedarray/Float64Array#__set
  local.get $467
  i32.const 6048
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Float64Array#forEach
  global.get $std/typedarray/forEachCallCount
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  global.get $std/typedarray/testArrayReverseValues
  local.tee $470
  i32.store $0 offset=848
  local.get $470
  call $~lib/array/Array<i32>#get:length
  local.set $471
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $471
  call $~lib/typedarray/Int8Array#constructor
  local.tee $472
  i32.store $0 offset=852
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $471
  call $~lib/typedarray/Int8Array#constructor
  local.tee $473
  i32.store $0 offset=856
  i32.const 0
  local.set $474
  loop $for-loop|26
   local.get $474
   local.get $471
   i32.lt_s
   local.set $475
   local.get $475
   if
    local.get $472
    local.get $474
    local.get $470
    local.get $474
    call $~lib/array/Array<i32>#__get
    i32.extend8_s
    call $~lib/typedarray/Int8Array#__set
    local.get $473
    local.get $474
    local.get $470
    local.get $474
    call $~lib/array/Array<i32>#__get
    i32.extend8_s
    call $~lib/typedarray/Int8Array#__set
    local.get $474
    i32.const 1
    i32.add
    local.set $474
    br $for-loop|26
   end
  end
  local.get $472
  call $~lib/typedarray/Int8Array#reverse
  drop
  i32.const 0
  local.set $476
  loop $for-loop|27
   local.get $476
   local.get $471
   i32.lt_s
   local.set $477
   local.get $477
   if
    local.get $472
    local.get $476
    call $~lib/typedarray/Int8Array#__get
    local.get $470
    local.get $471
    i32.const 1
    i32.sub
    local.get $476
    i32.sub
    call $~lib/array/Array<i32>#__get
    i32.extend8_s
    i32.eq
    i32.eqz
    if
     unreachable
    end
    local.get $476
    i32.const 1
    i32.add
    local.set $476
    br $for-loop|27
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $473
  i32.const 4
  i32.const 8
  call $~lib/typedarray/Int8Array#subarray
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=804
  local.get $1317
  call $~lib/typedarray/Int8Array#reverse
  local.tee $478
  i32.store $0 offset=860
  local.get $478
  i32.const 0
  call $~lib/typedarray/Int8Array#__get
  i32.const 8
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $478
  i32.const 1
  call $~lib/typedarray/Int8Array#__get
  i32.const 7
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $478
  i32.const 2
  call $~lib/typedarray/Int8Array#__get
  i32.const 6
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $478
  i32.const 3
  call $~lib/typedarray/Int8Array#__get
  i32.const 5
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  global.get $std/typedarray/testArrayReverseValues
  local.tee $479
  i32.store $0 offset=864
  local.get $479
  call $~lib/array/Array<i32>#get:length
  local.set $480
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $480
  call $~lib/typedarray/Uint8Array#constructor
  local.tee $481
  i32.store $0 offset=868
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $480
  call $~lib/typedarray/Uint8Array#constructor
  local.tee $482
  i32.store $0 offset=872
  i32.const 0
  local.set $483
  loop $for-loop|28
   local.get $483
   local.get $480
   i32.lt_s
   local.set $484
   local.get $484
   if
    local.get $481
    local.get $483
    local.get $479
    local.get $483
    call $~lib/array/Array<i32>#__get
    i32.const 255
    i32.and
    call $~lib/typedarray/Uint8Array#__set
    local.get $482
    local.get $483
    local.get $479
    local.get $483
    call $~lib/array/Array<i32>#__get
    i32.const 255
    i32.and
    call $~lib/typedarray/Uint8Array#__set
    local.get $483
    i32.const 1
    i32.add
    local.set $483
    br $for-loop|28
   end
  end
  local.get $481
  call $~lib/typedarray/Uint8Array#reverse
  drop
  i32.const 0
  local.set $485
  loop $for-loop|29
   local.get $485
   local.get $480
   i32.lt_s
   local.set $486
   local.get $486
   if
    local.get $481
    local.get $485
    call $~lib/typedarray/Uint8Array#__get
    local.get $479
    local.get $480
    i32.const 1
    i32.sub
    local.get $485
    i32.sub
    call $~lib/array/Array<i32>#__get
    i32.const 255
    i32.and
    i32.eq
    i32.eqz
    if
     unreachable
    end
    local.get $485
    i32.const 1
    i32.add
    local.set $485
    br $for-loop|29
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $482
  i32.const 4
  i32.const 8
  call $~lib/typedarray/Uint8Array#subarray
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=804
  local.get $1317
  call $~lib/typedarray/Uint8Array#reverse
  local.tee $487
  i32.store $0 offset=876
  local.get $487
  i32.const 0
  call $~lib/typedarray/Uint8Array#__get
  i32.const 8
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $487
  i32.const 1
  call $~lib/typedarray/Uint8Array#__get
  i32.const 7
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $487
  i32.const 2
  call $~lib/typedarray/Uint8Array#__get
  i32.const 6
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $487
  i32.const 3
  call $~lib/typedarray/Uint8Array#__get
  i32.const 5
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  global.get $std/typedarray/testArrayReverseValues
  local.tee $488
  i32.store $0 offset=880
  local.get $488
  call $~lib/array/Array<i32>#get:length
  local.set $489
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $489
  call $~lib/typedarray/Uint8ClampedArray#constructor
  local.tee $490
  i32.store $0 offset=884
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $489
  call $~lib/typedarray/Uint8ClampedArray#constructor
  local.tee $491
  i32.store $0 offset=888
  i32.const 0
  local.set $492
  loop $for-loop|30
   local.get $492
   local.get $489
   i32.lt_s
   local.set $493
   local.get $493
   if
    local.get $490
    local.get $492
    local.get $488
    local.get $492
    call $~lib/array/Array<i32>#__get
    i32.const 255
    i32.and
    call $~lib/typedarray/Uint8ClampedArray#__set
    local.get $491
    local.get $492
    local.get $488
    local.get $492
    call $~lib/array/Array<i32>#__get
    i32.const 255
    i32.and
    call $~lib/typedarray/Uint8ClampedArray#__set
    local.get $492
    i32.const 1
    i32.add
    local.set $492
    br $for-loop|30
   end
  end
  local.get $490
  call $~lib/typedarray/Uint8ClampedArray#reverse
  drop
  i32.const 0
  local.set $494
  loop $for-loop|31
   local.get $494
   local.get $489
   i32.lt_s
   local.set $495
   local.get $495
   if
    local.get $490
    local.get $494
    call $~lib/typedarray/Uint8ClampedArray#__get
    local.get $488
    local.get $489
    i32.const 1
    i32.sub
    local.get $494
    i32.sub
    call $~lib/array/Array<i32>#__get
    i32.const 255
    i32.and
    i32.eq
    i32.eqz
    if
     unreachable
    end
    local.get $494
    i32.const 1
    i32.add
    local.set $494
    br $for-loop|31
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $491
  i32.const 4
  i32.const 8
  call $~lib/typedarray/Uint8ClampedArray#subarray
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=804
  local.get $1317
  call $~lib/typedarray/Uint8ClampedArray#reverse
  local.tee $496
  i32.store $0 offset=892
  local.get $496
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#__get
  i32.const 8
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $496
  i32.const 1
  call $~lib/typedarray/Uint8ClampedArray#__get
  i32.const 7
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $496
  i32.const 2
  call $~lib/typedarray/Uint8ClampedArray#__get
  i32.const 6
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $496
  i32.const 3
  call $~lib/typedarray/Uint8ClampedArray#__get
  i32.const 5
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  global.get $std/typedarray/testArrayReverseValues
  local.tee $497
  i32.store $0 offset=896
  local.get $497
  call $~lib/array/Array<i32>#get:length
  local.set $498
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $498
  call $~lib/typedarray/Int16Array#constructor
  local.tee $499
  i32.store $0 offset=900
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $498
  call $~lib/typedarray/Int16Array#constructor
  local.tee $500
  i32.store $0 offset=904
  i32.const 0
  local.set $501
  loop $for-loop|32
   local.get $501
   local.get $498
   i32.lt_s
   local.set $502
   local.get $502
   if
    local.get $499
    local.get $501
    local.get $497
    local.get $501
    call $~lib/array/Array<i32>#__get
    i32.extend16_s
    call $~lib/typedarray/Int16Array#__set
    local.get $500
    local.get $501
    local.get $497
    local.get $501
    call $~lib/array/Array<i32>#__get
    i32.extend16_s
    call $~lib/typedarray/Int16Array#__set
    local.get $501
    i32.const 1
    i32.add
    local.set $501
    br $for-loop|32
   end
  end
  local.get $499
  call $~lib/typedarray/Int16Array#reverse
  drop
  i32.const 0
  local.set $503
  loop $for-loop|33
   local.get $503
   local.get $498
   i32.lt_s
   local.set $504
   local.get $504
   if
    local.get $499
    local.get $503
    call $~lib/typedarray/Int16Array#__get
    local.get $497
    local.get $498
    i32.const 1
    i32.sub
    local.get $503
    i32.sub
    call $~lib/array/Array<i32>#__get
    i32.extend16_s
    i32.eq
    i32.eqz
    if
     unreachable
    end
    local.get $503
    i32.const 1
    i32.add
    local.set $503
    br $for-loop|33
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $500
  i32.const 4
  i32.const 8
  call $~lib/typedarray/Int16Array#subarray
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=804
  local.get $1317
  call $~lib/typedarray/Int16Array#reverse
  local.tee $505
  i32.store $0 offset=908
  local.get $505
  i32.const 0
  call $~lib/typedarray/Int16Array#__get
  i32.const 8
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $505
  i32.const 1
  call $~lib/typedarray/Int16Array#__get
  i32.const 7
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $505
  i32.const 2
  call $~lib/typedarray/Int16Array#__get
  i32.const 6
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $505
  i32.const 3
  call $~lib/typedarray/Int16Array#__get
  i32.const 5
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  global.get $std/typedarray/testArrayReverseValues
  local.tee $506
  i32.store $0 offset=912
  local.get $506
  call $~lib/array/Array<i32>#get:length
  local.set $507
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $507
  call $~lib/typedarray/Uint16Array#constructor
  local.tee $508
  i32.store $0 offset=916
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $507
  call $~lib/typedarray/Uint16Array#constructor
  local.tee $509
  i32.store $0 offset=920
  i32.const 0
  local.set $510
  loop $for-loop|34
   local.get $510
   local.get $507
   i32.lt_s
   local.set $511
   local.get $511
   if
    local.get $508
    local.get $510
    local.get $506
    local.get $510
    call $~lib/array/Array<i32>#__get
    i32.const 65535
    i32.and
    call $~lib/typedarray/Uint16Array#__set
    local.get $509
    local.get $510
    local.get $506
    local.get $510
    call $~lib/array/Array<i32>#__get
    i32.const 65535
    i32.and
    call $~lib/typedarray/Uint16Array#__set
    local.get $510
    i32.const 1
    i32.add
    local.set $510
    br $for-loop|34
   end
  end
  local.get $508
  call $~lib/typedarray/Uint16Array#reverse
  drop
  i32.const 0
  local.set $512
  loop $for-loop|35
   local.get $512
   local.get $507
   i32.lt_s
   local.set $513
   local.get $513
   if
    local.get $508
    local.get $512
    call $~lib/typedarray/Uint16Array#__get
    local.get $506
    local.get $507
    i32.const 1
    i32.sub
    local.get $512
    i32.sub
    call $~lib/array/Array<i32>#__get
    i32.const 65535
    i32.and
    i32.eq
    i32.eqz
    if
     unreachable
    end
    local.get $512
    i32.const 1
    i32.add
    local.set $512
    br $for-loop|35
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $509
  i32.const 4
  i32.const 8
  call $~lib/typedarray/Uint16Array#subarray
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=804
  local.get $1317
  call $~lib/typedarray/Uint16Array#reverse
  local.tee $514
  i32.store $0 offset=924
  local.get $514
  i32.const 0
  call $~lib/typedarray/Uint16Array#__get
  i32.const 8
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $514
  i32.const 1
  call $~lib/typedarray/Uint16Array#__get
  i32.const 7
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $514
  i32.const 2
  call $~lib/typedarray/Uint16Array#__get
  i32.const 6
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $514
  i32.const 3
  call $~lib/typedarray/Uint16Array#__get
  i32.const 5
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  global.get $std/typedarray/testArrayReverseValues
  local.tee $515
  i32.store $0 offset=928
  local.get $515
  call $~lib/array/Array<i32>#get:length
  local.set $516
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $516
  call $~lib/typedarray/Int32Array#constructor
  local.tee $517
  i32.store $0 offset=932
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $516
  call $~lib/typedarray/Int32Array#constructor
  local.tee $518
  i32.store $0 offset=936
  i32.const 0
  local.set $519
  loop $for-loop|36
   local.get $519
   local.get $516
   i32.lt_s
   local.set $520
   local.get $520
   if
    local.get $517
    local.get $519
    local.get $515
    local.get $519
    call $~lib/array/Array<i32>#__get
    call $~lib/typedarray/Int32Array#__set
    local.get $518
    local.get $519
    local.get $515
    local.get $519
    call $~lib/array/Array<i32>#__get
    call $~lib/typedarray/Int32Array#__set
    local.get $519
    i32.const 1
    i32.add
    local.set $519
    br $for-loop|36
   end
  end
  local.get $517
  call $~lib/typedarray/Int32Array#reverse
  drop
  i32.const 0
  local.set $521
  loop $for-loop|37
   local.get $521
   local.get $516
   i32.lt_s
   local.set $522
   local.get $522
   if
    local.get $517
    local.get $521
    call $~lib/typedarray/Int32Array#__get
    local.get $515
    local.get $516
    i32.const 1
    i32.sub
    local.get $521
    i32.sub
    call $~lib/array/Array<i32>#__get
    i32.eq
    i32.eqz
    if
     unreachable
    end
    local.get $521
    i32.const 1
    i32.add
    local.set $521
    br $for-loop|37
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $518
  i32.const 4
  i32.const 8
  call $~lib/typedarray/Int32Array#subarray
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=804
  local.get $1317
  call $~lib/typedarray/Int32Array#reverse
  local.tee $523
  i32.store $0 offset=940
  local.get $523
  i32.const 0
  call $~lib/typedarray/Int32Array#__get
  i32.const 8
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $523
  i32.const 1
  call $~lib/typedarray/Int32Array#__get
  i32.const 7
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $523
  i32.const 2
  call $~lib/typedarray/Int32Array#__get
  i32.const 6
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $523
  i32.const 3
  call $~lib/typedarray/Int32Array#__get
  i32.const 5
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  global.get $std/typedarray/testArrayReverseValues
  local.tee $524
  i32.store $0 offset=944
  local.get $524
  call $~lib/array/Array<i32>#get:length
  local.set $525
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $525
  call $~lib/typedarray/Uint32Array#constructor
  local.tee $526
  i32.store $0 offset=948
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $525
  call $~lib/typedarray/Uint32Array#constructor
  local.tee $527
  i32.store $0 offset=952
  i32.const 0
  local.set $528
  loop $for-loop|38
   local.get $528
   local.get $525
   i32.lt_s
   local.set $529
   local.get $529
   if
    local.get $526
    local.get $528
    local.get $524
    local.get $528
    call $~lib/array/Array<i32>#__get
    call $~lib/typedarray/Uint32Array#__set
    local.get $527
    local.get $528
    local.get $524
    local.get $528
    call $~lib/array/Array<i32>#__get
    call $~lib/typedarray/Uint32Array#__set
    local.get $528
    i32.const 1
    i32.add
    local.set $528
    br $for-loop|38
   end
  end
  local.get $526
  call $~lib/typedarray/Uint32Array#reverse
  drop
  i32.const 0
  local.set $530
  loop $for-loop|39
   local.get $530
   local.get $525
   i32.lt_s
   local.set $531
   local.get $531
   if
    local.get $526
    local.get $530
    call $~lib/typedarray/Uint32Array#__get
    local.get $524
    local.get $525
    i32.const 1
    i32.sub
    local.get $530
    i32.sub
    call $~lib/array/Array<i32>#__get
    i32.eq
    i32.eqz
    if
     unreachable
    end
    local.get $530
    i32.const 1
    i32.add
    local.set $530
    br $for-loop|39
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $527
  i32.const 4
  i32.const 8
  call $~lib/typedarray/Uint32Array#subarray
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=804
  local.get $1317
  call $~lib/typedarray/Uint32Array#reverse
  local.tee $532
  i32.store $0 offset=956
  local.get $532
  i32.const 0
  call $~lib/typedarray/Uint32Array#__get
  i32.const 8
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $532
  i32.const 1
  call $~lib/typedarray/Uint32Array#__get
  i32.const 7
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $532
  i32.const 2
  call $~lib/typedarray/Uint32Array#__get
  i32.const 6
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $532
  i32.const 3
  call $~lib/typedarray/Uint32Array#__get
  i32.const 5
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  global.get $std/typedarray/testArrayReverseValues
  local.tee $533
  i32.store $0 offset=960
  local.get $533
  call $~lib/array/Array<i32>#get:length
  local.set $534
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $534
  call $~lib/typedarray/Int64Array#constructor
  local.tee $535
  i32.store $0 offset=964
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $534
  call $~lib/typedarray/Int64Array#constructor
  local.tee $536
  i32.store $0 offset=968
  i32.const 0
  local.set $537
  loop $for-loop|40
   local.get $537
   local.get $534
   i32.lt_s
   local.set $538
   local.get $538
   if
    local.get $535
    local.get $537
    local.get $533
    local.get $537
    call $~lib/array/Array<i32>#__get
    i64.extend_i32_s
    call $~lib/typedarray/Int64Array#__set
    local.get $536
    local.get $537
    local.get $533
    local.get $537
    call $~lib/array/Array<i32>#__get
    i64.extend_i32_s
    call $~lib/typedarray/Int64Array#__set
    local.get $537
    i32.const 1
    i32.add
    local.set $537
    br $for-loop|40
   end
  end
  local.get $535
  call $~lib/typedarray/Int64Array#reverse
  drop
  i32.const 0
  local.set $539
  loop $for-loop|41
   local.get $539
   local.get $534
   i32.lt_s
   local.set $540
   local.get $540
   if
    local.get $535
    local.get $539
    call $~lib/typedarray/Int64Array#__get
    local.get $533
    local.get $534
    i32.const 1
    i32.sub
    local.get $539
    i32.sub
    call $~lib/array/Array<i32>#__get
    i64.extend_i32_s
    i64.eq
    i32.eqz
    if
     unreachable
    end
    local.get $539
    i32.const 1
    i32.add
    local.set $539
    br $for-loop|41
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $536
  i32.const 4
  i32.const 8
  call $~lib/typedarray/Int64Array#subarray
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=804
  local.get $1317
  call $~lib/typedarray/Int64Array#reverse
  local.tee $541
  i32.store $0 offset=972
  local.get $541
  i32.const 0
  call $~lib/typedarray/Int64Array#__get
  i64.const 8
  i64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $541
  i32.const 1
  call $~lib/typedarray/Int64Array#__get
  i64.const 7
  i64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $541
  i32.const 2
  call $~lib/typedarray/Int64Array#__get
  i64.const 6
  i64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $541
  i32.const 3
  call $~lib/typedarray/Int64Array#__get
  i64.const 5
  i64.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  global.get $std/typedarray/testArrayReverseValues
  local.tee $542
  i32.store $0 offset=976
  local.get $542
  call $~lib/array/Array<i32>#get:length
  local.set $543
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $543
  call $~lib/typedarray/Uint64Array#constructor
  local.tee $544
  i32.store $0 offset=980
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $543
  call $~lib/typedarray/Uint64Array#constructor
  local.tee $545
  i32.store $0 offset=984
  i32.const 0
  local.set $546
  loop $for-loop|42
   local.get $546
   local.get $543
   i32.lt_s
   local.set $547
   local.get $547
   if
    local.get $544
    local.get $546
    local.get $542
    local.get $546
    call $~lib/array/Array<i32>#__get
    i64.extend_i32_s
    call $~lib/typedarray/Uint64Array#__set
    local.get $545
    local.get $546
    local.get $542
    local.get $546
    call $~lib/array/Array<i32>#__get
    i64.extend_i32_s
    call $~lib/typedarray/Uint64Array#__set
    local.get $546
    i32.const 1
    i32.add
    local.set $546
    br $for-loop|42
   end
  end
  local.get $544
  call $~lib/typedarray/Uint64Array#reverse
  drop
  i32.const 0
  local.set $548
  loop $for-loop|43
   local.get $548
   local.get $543
   i32.lt_s
   local.set $549
   local.get $549
   if
    local.get $544
    local.get $548
    call $~lib/typedarray/Uint64Array#__get
    local.get $542
    local.get $543
    i32.const 1
    i32.sub
    local.get $548
    i32.sub
    call $~lib/array/Array<i32>#__get
    i64.extend_i32_s
    i64.eq
    i32.eqz
    if
     unreachable
    end
    local.get $548
    i32.const 1
    i32.add
    local.set $548
    br $for-loop|43
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $545
  i32.const 4
  i32.const 8
  call $~lib/typedarray/Uint64Array#subarray
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=804
  local.get $1317
  call $~lib/typedarray/Uint64Array#reverse
  local.tee $550
  i32.store $0 offset=988
  local.get $550
  i32.const 0
  call $~lib/typedarray/Uint64Array#__get
  i64.const 8
  i64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $550
  i32.const 1
  call $~lib/typedarray/Uint64Array#__get
  i64.const 7
  i64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $550
  i32.const 2
  call $~lib/typedarray/Uint64Array#__get
  i64.const 6
  i64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $550
  i32.const 3
  call $~lib/typedarray/Uint64Array#__get
  i64.const 5
  i64.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  global.get $std/typedarray/testArrayReverseValues
  local.tee $551
  i32.store $0 offset=992
  local.get $551
  call $~lib/array/Array<i32>#get:length
  local.set $552
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $552
  call $~lib/typedarray/Float32Array#constructor
  local.tee $553
  i32.store $0 offset=996
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $552
  call $~lib/typedarray/Float32Array#constructor
  local.tee $554
  i32.store $0 offset=1000
  i32.const 0
  local.set $555
  loop $for-loop|44
   local.get $555
   local.get $552
   i32.lt_s
   local.set $556
   local.get $556
   if
    local.get $553
    local.get $555
    local.get $551
    local.get $555
    call $~lib/array/Array<i32>#__get
    f32.convert_i32_s
    call $~lib/typedarray/Float32Array#__set
    local.get $554
    local.get $555
    local.get $551
    local.get $555
    call $~lib/array/Array<i32>#__get
    f32.convert_i32_s
    call $~lib/typedarray/Float32Array#__set
    local.get $555
    i32.const 1
    i32.add
    local.set $555
    br $for-loop|44
   end
  end
  local.get $553
  call $~lib/typedarray/Float32Array#reverse
  drop
  i32.const 0
  local.set $557
  loop $for-loop|45
   local.get $557
   local.get $552
   i32.lt_s
   local.set $558
   local.get $558
   if
    local.get $553
    local.get $557
    call $~lib/typedarray/Float32Array#__get
    local.get $551
    local.get $552
    i32.const 1
    i32.sub
    local.get $557
    i32.sub
    call $~lib/array/Array<i32>#__get
    f32.convert_i32_s
    f32.eq
    i32.eqz
    if
     unreachable
    end
    local.get $557
    i32.const 1
    i32.add
    local.set $557
    br $for-loop|45
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $554
  i32.const 4
  i32.const 8
  call $~lib/typedarray/Float32Array#subarray
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=804
  local.get $1317
  call $~lib/typedarray/Float32Array#reverse
  local.tee $559
  i32.store $0 offset=1004
  local.get $559
  i32.const 0
  call $~lib/typedarray/Float32Array#__get
  f32.const 8
  f32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $559
  i32.const 1
  call $~lib/typedarray/Float32Array#__get
  f32.const 7
  f32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $559
  i32.const 2
  call $~lib/typedarray/Float32Array#__get
  f32.const 6
  f32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $559
  i32.const 3
  call $~lib/typedarray/Float32Array#__get
  f32.const 5
  f32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  global.get $std/typedarray/testArrayReverseValues
  local.tee $560
  i32.store $0 offset=1008
  local.get $560
  call $~lib/array/Array<i32>#get:length
  local.set $561
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $561
  call $~lib/typedarray/Float64Array#constructor
  local.tee $562
  i32.store $0 offset=1012
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $561
  call $~lib/typedarray/Float64Array#constructor
  local.tee $563
  i32.store $0 offset=1016
  i32.const 0
  local.set $564
  loop $for-loop|46
   local.get $564
   local.get $561
   i32.lt_s
   local.set $565
   local.get $565
   if
    local.get $562
    local.get $564
    local.get $560
    local.get $564
    call $~lib/array/Array<i32>#__get
    f64.convert_i32_s
    call $~lib/typedarray/Float64Array#__set
    local.get $563
    local.get $564
    local.get $560
    local.get $564
    call $~lib/array/Array<i32>#__get
    f64.convert_i32_s
    call $~lib/typedarray/Float64Array#__set
    local.get $564
    i32.const 1
    i32.add
    local.set $564
    br $for-loop|46
   end
  end
  local.get $562
  call $~lib/typedarray/Float64Array#reverse
  drop
  i32.const 0
  local.set $566
  loop $for-loop|47
   local.get $566
   local.get $561
   i32.lt_s
   local.set $567
   local.get $567
   if
    local.get $562
    local.get $566
    call $~lib/typedarray/Float64Array#__get
    local.get $560
    local.get $561
    i32.const 1
    i32.sub
    local.get $566
    i32.sub
    call $~lib/array/Array<i32>#__get
    f64.convert_i32_s
    f64.eq
    i32.eqz
    if
     unreachable
    end
    local.get $566
    i32.const 1
    i32.add
    local.set $566
    br $for-loop|47
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $563
  i32.const 4
  i32.const 8
  call $~lib/typedarray/Float64Array#subarray
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=804
  local.get $1317
  call $~lib/typedarray/Float64Array#reverse
  local.tee $568
  i32.store $0 offset=1020
  local.get $568
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.const 8
  f64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $568
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.const 7
  f64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $568
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.const 6
  f64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $568
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  f64.const 5
  f64.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  global.get $std/typedarray/testArrayIndexOfAndLastIndexOfValues
  local.tee $571
  i32.store $0 offset=1024
  local.get $571
  call $~lib/array/Array<i32>#get:length
  local.set $572
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $572
  call $~lib/typedarray/Int8Array#constructor
  local.tee $573
  i32.store $0 offset=1028
  i32.const 0
  local.set $574
  loop $for-loop|48
   local.get $574
   local.get $572
   i32.lt_s
   local.set $575
   local.get $575
   if
    local.get $573
    local.get $574
    local.get $571
    local.get $574
    call $~lib/array/Array<i32>#__get
    i32.extend8_s
    call $~lib/typedarray/Int8Array#__set
    local.get $574
    i32.const 1
    i32.add
    local.set $574
    br $for-loop|48
   end
  end
  local.get $573
  i32.const 0
  i32.const 0
  call $~lib/typedarray/Int8Array#indexOf
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $573
  i32.const 11
  i32.const 0
  call $~lib/typedarray/Int8Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $573
  i32.const -1
  i32.const 0
  call $~lib/typedarray/Int8Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $573
  i32.const 3
  i32.const 0
  call $~lib/typedarray/Int8Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $573
  i32.const 3
  i32.const 2
  call $~lib/typedarray/Int8Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $573
  i32.const 3
  i32.const 3
  call $~lib/typedarray/Int8Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $573
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Int8Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $573
  i32.const 1
  i32.const 10
  call $~lib/typedarray/Int8Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $573
  i32.const 1
  i32.const -100
  call $~lib/typedarray/Int8Array#indexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $573
  i32.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Int8Array#lastIndexOf@varargs
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $573
  i32.const 11
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Int8Array#lastIndexOf@varargs
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $573
  i32.const -1
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Int8Array#lastIndexOf@varargs
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $573
  i32.const 3
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Int8Array#lastIndexOf@varargs
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $573
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Int8Array#lastIndexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $573
  i32.const 3
  i32.const 3
  call $~lib/typedarray/Int8Array#lastIndexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $573
  i32.const 3
  i32.const 2
  call $~lib/typedarray/Int8Array#lastIndexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $573
  i32.const 1
  i32.const 100
  call $~lib/typedarray/Int8Array#lastIndexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $573
  i32.const 1
  i32.const -10
  call $~lib/typedarray/Int8Array#lastIndexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $573
  i32.const 1
  i32.const -11
  call $~lib/typedarray/Int8Array#lastIndexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $573
  i32.const 4
  i32.const 9
  call $~lib/typedarray/Int8Array#subarray
  local.tee $576
  i32.store $0 offset=1032
  local.get $576
  i32.const 3
  i32.const 0
  call $~lib/typedarray/Int8Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $576
  i32.const 4
  i32.const 0
  call $~lib/typedarray/Int8Array#indexOf
  i32.const 4
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $576
  i32.const 5
  i32.const 0
  call $~lib/typedarray/Int8Array#indexOf
  i32.const 5
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $576
  i32.const 9
  i32.const 0
  call $~lib/typedarray/Int8Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $576
  i32.const 10
  i32.const 0
  call $~lib/typedarray/Int8Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $576
  i32.const 11
  i32.const 0
  call $~lib/typedarray/Int8Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $576
  i32.const 5
  i32.const 1
  call $~lib/typedarray/Int8Array#indexOf
  i32.const 5
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $576
  i32.const 5
  i32.const 2
  call $~lib/typedarray/Int8Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  global.get $std/typedarray/testArrayIndexOfAndLastIndexOfValues
  local.tee $577
  i32.store $0 offset=1036
  local.get $577
  call $~lib/array/Array<i32>#get:length
  local.set $578
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $578
  call $~lib/typedarray/Uint8Array#constructor
  local.tee $579
  i32.store $0 offset=1040
  i32.const 0
  local.set $580
  loop $for-loop|49
   local.get $580
   local.get $578
   i32.lt_s
   local.set $581
   local.get $581
   if
    local.get $579
    local.get $580
    local.get $577
    local.get $580
    call $~lib/array/Array<i32>#__get
    i32.const 255
    i32.and
    call $~lib/typedarray/Uint8Array#__set
    local.get $580
    i32.const 1
    i32.add
    local.set $580
    br $for-loop|49
   end
  end
  local.get $579
  i32.const 0
  i32.const 0
  call $~lib/typedarray/Uint8Array#indexOf
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $579
  i32.const 11
  i32.const 0
  call $~lib/typedarray/Uint8Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $579
  i32.const -1
  i32.const 0
  call $~lib/typedarray/Uint8Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $579
  i32.const 3
  i32.const 0
  call $~lib/typedarray/Uint8Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $579
  i32.const 3
  i32.const 2
  call $~lib/typedarray/Uint8Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $579
  i32.const 3
  i32.const 3
  call $~lib/typedarray/Uint8Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $579
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Uint8Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $579
  i32.const 1
  i32.const 10
  call $~lib/typedarray/Uint8Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $579
  i32.const 1
  i32.const -100
  call $~lib/typedarray/Uint8Array#indexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $579
  i32.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint8Array#lastIndexOf@varargs
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $579
  i32.const 11
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint8Array#lastIndexOf@varargs
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $579
  i32.const -1
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint8Array#lastIndexOf@varargs
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $579
  i32.const 3
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint8Array#lastIndexOf@varargs
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $579
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Uint8Array#lastIndexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $579
  i32.const 3
  i32.const 3
  call $~lib/typedarray/Uint8Array#lastIndexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $579
  i32.const 3
  i32.const 2
  call $~lib/typedarray/Uint8Array#lastIndexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $579
  i32.const 1
  i32.const 100
  call $~lib/typedarray/Uint8Array#lastIndexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $579
  i32.const 1
  i32.const -10
  call $~lib/typedarray/Uint8Array#lastIndexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $579
  i32.const 1
  i32.const -11
  call $~lib/typedarray/Uint8Array#lastIndexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $579
  i32.const 4
  i32.const 9
  call $~lib/typedarray/Uint8Array#subarray
  local.tee $582
  i32.store $0 offset=1044
  local.get $582
  i32.const 3
  i32.const 0
  call $~lib/typedarray/Uint8Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $582
  i32.const 4
  i32.const 0
  call $~lib/typedarray/Uint8Array#indexOf
  i32.const 4
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $582
  i32.const 5
  i32.const 0
  call $~lib/typedarray/Uint8Array#indexOf
  i32.const 5
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $582
  i32.const 9
  i32.const 0
  call $~lib/typedarray/Uint8Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $582
  i32.const 10
  i32.const 0
  call $~lib/typedarray/Uint8Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $582
  i32.const 11
  i32.const 0
  call $~lib/typedarray/Uint8Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $582
  i32.const 5
  i32.const 1
  call $~lib/typedarray/Uint8Array#indexOf
  i32.const 5
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $582
  i32.const 5
  i32.const 2
  call $~lib/typedarray/Uint8Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  global.get $std/typedarray/testArrayIndexOfAndLastIndexOfValues
  local.tee $583
  i32.store $0 offset=1048
  local.get $583
  call $~lib/array/Array<i32>#get:length
  local.set $584
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $584
  call $~lib/typedarray/Uint8ClampedArray#constructor
  local.tee $585
  i32.store $0 offset=1052
  i32.const 0
  local.set $586
  loop $for-loop|50
   local.get $586
   local.get $584
   i32.lt_s
   local.set $587
   local.get $587
   if
    local.get $585
    local.get $586
    local.get $583
    local.get $586
    call $~lib/array/Array<i32>#__get
    i32.const 255
    i32.and
    call $~lib/typedarray/Uint8ClampedArray#__set
    local.get $586
    i32.const 1
    i32.add
    local.set $586
    br $for-loop|50
   end
  end
  local.get $585
  i32.const 0
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#indexOf
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $585
  i32.const 11
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $585
  i32.const -1
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $585
  i32.const 3
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $585
  i32.const 3
  i32.const 2
  call $~lib/typedarray/Uint8ClampedArray#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $585
  i32.const 3
  i32.const 3
  call $~lib/typedarray/Uint8ClampedArray#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $585
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Uint8ClampedArray#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $585
  i32.const 1
  i32.const 10
  call $~lib/typedarray/Uint8ClampedArray#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $585
  i32.const 1
  i32.const -100
  call $~lib/typedarray/Uint8ClampedArray#indexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $585
  i32.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#lastIndexOf@varargs
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $585
  i32.const 11
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#lastIndexOf@varargs
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $585
  i32.const -1
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#lastIndexOf@varargs
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $585
  i32.const 3
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#lastIndexOf@varargs
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $585
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Uint8ClampedArray#lastIndexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $585
  i32.const 3
  i32.const 3
  call $~lib/typedarray/Uint8ClampedArray#lastIndexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $585
  i32.const 3
  i32.const 2
  call $~lib/typedarray/Uint8ClampedArray#lastIndexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $585
  i32.const 1
  i32.const 100
  call $~lib/typedarray/Uint8ClampedArray#lastIndexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $585
  i32.const 1
  i32.const -10
  call $~lib/typedarray/Uint8ClampedArray#lastIndexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $585
  i32.const 1
  i32.const -11
  call $~lib/typedarray/Uint8ClampedArray#lastIndexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $585
  i32.const 4
  i32.const 9
  call $~lib/typedarray/Uint8ClampedArray#subarray
  local.tee $588
  i32.store $0 offset=1056
  local.get $588
  i32.const 3
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $588
  i32.const 4
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#indexOf
  i32.const 4
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $588
  i32.const 5
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#indexOf
  i32.const 5
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $588
  i32.const 9
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $588
  i32.const 10
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $588
  i32.const 11
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $588
  i32.const 5
  i32.const 1
  call $~lib/typedarray/Uint8ClampedArray#indexOf
  i32.const 5
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $588
  i32.const 5
  i32.const 2
  call $~lib/typedarray/Uint8ClampedArray#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  global.get $std/typedarray/testArrayIndexOfAndLastIndexOfValues
  local.tee $589
  i32.store $0 offset=1060
  local.get $589
  call $~lib/array/Array<i32>#get:length
  local.set $590
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $590
  call $~lib/typedarray/Int16Array#constructor
  local.tee $591
  i32.store $0 offset=1064
  i32.const 0
  local.set $592
  loop $for-loop|51
   local.get $592
   local.get $590
   i32.lt_s
   local.set $593
   local.get $593
   if
    local.get $591
    local.get $592
    local.get $589
    local.get $592
    call $~lib/array/Array<i32>#__get
    i32.extend16_s
    call $~lib/typedarray/Int16Array#__set
    local.get $592
    i32.const 1
    i32.add
    local.set $592
    br $for-loop|51
   end
  end
  local.get $591
  i32.const 0
  i32.const 0
  call $~lib/typedarray/Int16Array#indexOf
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $591
  i32.const 11
  i32.const 0
  call $~lib/typedarray/Int16Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $591
  i32.const -1
  i32.const 0
  call $~lib/typedarray/Int16Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $591
  i32.const 3
  i32.const 0
  call $~lib/typedarray/Int16Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $591
  i32.const 3
  i32.const 2
  call $~lib/typedarray/Int16Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $591
  i32.const 3
  i32.const 3
  call $~lib/typedarray/Int16Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $591
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Int16Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $591
  i32.const 1
  i32.const 10
  call $~lib/typedarray/Int16Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $591
  i32.const 1
  i32.const -100
  call $~lib/typedarray/Int16Array#indexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $591
  i32.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Int16Array#lastIndexOf@varargs
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $591
  i32.const 11
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Int16Array#lastIndexOf@varargs
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $591
  i32.const -1
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Int16Array#lastIndexOf@varargs
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $591
  i32.const 3
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Int16Array#lastIndexOf@varargs
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $591
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Int16Array#lastIndexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $591
  i32.const 3
  i32.const 3
  call $~lib/typedarray/Int16Array#lastIndexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $591
  i32.const 3
  i32.const 2
  call $~lib/typedarray/Int16Array#lastIndexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $591
  i32.const 1
  i32.const 100
  call $~lib/typedarray/Int16Array#lastIndexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $591
  i32.const 1
  i32.const -10
  call $~lib/typedarray/Int16Array#lastIndexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $591
  i32.const 1
  i32.const -11
  call $~lib/typedarray/Int16Array#lastIndexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $591
  i32.const 4
  i32.const 9
  call $~lib/typedarray/Int16Array#subarray
  local.tee $594
  i32.store $0 offset=1068
  local.get $594
  i32.const 3
  i32.const 0
  call $~lib/typedarray/Int16Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $594
  i32.const 4
  i32.const 0
  call $~lib/typedarray/Int16Array#indexOf
  i32.const 4
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $594
  i32.const 5
  i32.const 0
  call $~lib/typedarray/Int16Array#indexOf
  i32.const 5
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $594
  i32.const 9
  i32.const 0
  call $~lib/typedarray/Int16Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $594
  i32.const 10
  i32.const 0
  call $~lib/typedarray/Int16Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $594
  i32.const 11
  i32.const 0
  call $~lib/typedarray/Int16Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $594
  i32.const 5
  i32.const 1
  call $~lib/typedarray/Int16Array#indexOf
  i32.const 5
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $594
  i32.const 5
  i32.const 2
  call $~lib/typedarray/Int16Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  global.get $std/typedarray/testArrayIndexOfAndLastIndexOfValues
  local.tee $595
  i32.store $0 offset=1072
  local.get $595
  call $~lib/array/Array<i32>#get:length
  local.set $596
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $596
  call $~lib/typedarray/Uint16Array#constructor
  local.tee $597
  i32.store $0 offset=1076
  i32.const 0
  local.set $598
  loop $for-loop|52
   local.get $598
   local.get $596
   i32.lt_s
   local.set $599
   local.get $599
   if
    local.get $597
    local.get $598
    local.get $595
    local.get $598
    call $~lib/array/Array<i32>#__get
    i32.const 65535
    i32.and
    call $~lib/typedarray/Uint16Array#__set
    local.get $598
    i32.const 1
    i32.add
    local.set $598
    br $for-loop|52
   end
  end
  local.get $597
  i32.const 0
  i32.const 0
  call $~lib/typedarray/Uint16Array#indexOf
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $597
  i32.const 11
  i32.const 0
  call $~lib/typedarray/Uint16Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $597
  i32.const -1
  i32.const 0
  call $~lib/typedarray/Uint16Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $597
  i32.const 3
  i32.const 0
  call $~lib/typedarray/Uint16Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $597
  i32.const 3
  i32.const 2
  call $~lib/typedarray/Uint16Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $597
  i32.const 3
  i32.const 3
  call $~lib/typedarray/Uint16Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $597
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Uint16Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $597
  i32.const 1
  i32.const 10
  call $~lib/typedarray/Uint16Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $597
  i32.const 1
  i32.const -100
  call $~lib/typedarray/Uint16Array#indexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $597
  i32.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint16Array#lastIndexOf@varargs
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $597
  i32.const 11
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint16Array#lastIndexOf@varargs
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $597
  i32.const -1
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint16Array#lastIndexOf@varargs
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $597
  i32.const 3
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint16Array#lastIndexOf@varargs
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $597
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Uint16Array#lastIndexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $597
  i32.const 3
  i32.const 3
  call $~lib/typedarray/Uint16Array#lastIndexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $597
  i32.const 3
  i32.const 2
  call $~lib/typedarray/Uint16Array#lastIndexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $597
  i32.const 1
  i32.const 100
  call $~lib/typedarray/Uint16Array#lastIndexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $597
  i32.const 1
  i32.const -10
  call $~lib/typedarray/Uint16Array#lastIndexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $597
  i32.const 1
  i32.const -11
  call $~lib/typedarray/Uint16Array#lastIndexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $597
  i32.const 4
  i32.const 9
  call $~lib/typedarray/Uint16Array#subarray
  local.tee $600
  i32.store $0 offset=1080
  local.get $600
  i32.const 3
  i32.const 0
  call $~lib/typedarray/Uint16Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $600
  i32.const 4
  i32.const 0
  call $~lib/typedarray/Uint16Array#indexOf
  i32.const 4
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $600
  i32.const 5
  i32.const 0
  call $~lib/typedarray/Uint16Array#indexOf
  i32.const 5
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $600
  i32.const 9
  i32.const 0
  call $~lib/typedarray/Uint16Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $600
  i32.const 10
  i32.const 0
  call $~lib/typedarray/Uint16Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $600
  i32.const 11
  i32.const 0
  call $~lib/typedarray/Uint16Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $600
  i32.const 5
  i32.const 1
  call $~lib/typedarray/Uint16Array#indexOf
  i32.const 5
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $600
  i32.const 5
  i32.const 2
  call $~lib/typedarray/Uint16Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  global.get $std/typedarray/testArrayIndexOfAndLastIndexOfValues
  local.tee $601
  i32.store $0 offset=1084
  local.get $601
  call $~lib/array/Array<i32>#get:length
  local.set $602
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $602
  call $~lib/typedarray/Int32Array#constructor
  local.tee $603
  i32.store $0 offset=1088
  i32.const 0
  local.set $604
  loop $for-loop|53
   local.get $604
   local.get $602
   i32.lt_s
   local.set $605
   local.get $605
   if
    local.get $603
    local.get $604
    local.get $601
    local.get $604
    call $~lib/array/Array<i32>#__get
    call $~lib/typedarray/Int32Array#__set
    local.get $604
    i32.const 1
    i32.add
    local.set $604
    br $for-loop|53
   end
  end
  local.get $603
  i32.const 0
  i32.const 0
  call $~lib/typedarray/Int32Array#indexOf
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $603
  i32.const 11
  i32.const 0
  call $~lib/typedarray/Int32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $603
  i32.const -1
  i32.const 0
  call $~lib/typedarray/Int32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $603
  i32.const 3
  i32.const 0
  call $~lib/typedarray/Int32Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $603
  i32.const 3
  i32.const 2
  call $~lib/typedarray/Int32Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $603
  i32.const 3
  i32.const 3
  call $~lib/typedarray/Int32Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $603
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Int32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $603
  i32.const 1
  i32.const 10
  call $~lib/typedarray/Int32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $603
  i32.const 1
  i32.const -100
  call $~lib/typedarray/Int32Array#indexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $603
  i32.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Int32Array#lastIndexOf@varargs
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $603
  i32.const 11
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Int32Array#lastIndexOf@varargs
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $603
  i32.const -1
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Int32Array#lastIndexOf@varargs
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $603
  i32.const 3
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Int32Array#lastIndexOf@varargs
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $603
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Int32Array#lastIndexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $603
  i32.const 3
  i32.const 3
  call $~lib/typedarray/Int32Array#lastIndexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $603
  i32.const 3
  i32.const 2
  call $~lib/typedarray/Int32Array#lastIndexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $603
  i32.const 1
  i32.const 100
  call $~lib/typedarray/Int32Array#lastIndexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $603
  i32.const 1
  i32.const -10
  call $~lib/typedarray/Int32Array#lastIndexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $603
  i32.const 1
  i32.const -11
  call $~lib/typedarray/Int32Array#lastIndexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $603
  i32.const 4
  i32.const 9
  call $~lib/typedarray/Int32Array#subarray
  local.tee $606
  i32.store $0 offset=1092
  local.get $606
  i32.const 3
  i32.const 0
  call $~lib/typedarray/Int32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $606
  i32.const 4
  i32.const 0
  call $~lib/typedarray/Int32Array#indexOf
  i32.const 4
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $606
  i32.const 5
  i32.const 0
  call $~lib/typedarray/Int32Array#indexOf
  i32.const 5
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $606
  i32.const 9
  i32.const 0
  call $~lib/typedarray/Int32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $606
  i32.const 10
  i32.const 0
  call $~lib/typedarray/Int32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $606
  i32.const 11
  i32.const 0
  call $~lib/typedarray/Int32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $606
  i32.const 5
  i32.const 1
  call $~lib/typedarray/Int32Array#indexOf
  i32.const 5
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $606
  i32.const 5
  i32.const 2
  call $~lib/typedarray/Int32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  global.get $std/typedarray/testArrayIndexOfAndLastIndexOfValues
  local.tee $607
  i32.store $0 offset=1096
  local.get $607
  call $~lib/array/Array<i32>#get:length
  local.set $608
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $608
  call $~lib/typedarray/Uint32Array#constructor
  local.tee $609
  i32.store $0 offset=1100
  i32.const 0
  local.set $610
  loop $for-loop|54
   local.get $610
   local.get $608
   i32.lt_s
   local.set $611
   local.get $611
   if
    local.get $609
    local.get $610
    local.get $607
    local.get $610
    call $~lib/array/Array<i32>#__get
    call $~lib/typedarray/Uint32Array#__set
    local.get $610
    i32.const 1
    i32.add
    local.set $610
    br $for-loop|54
   end
  end
  local.get $609
  i32.const 0
  i32.const 0
  call $~lib/typedarray/Uint32Array#indexOf
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $609
  i32.const 11
  i32.const 0
  call $~lib/typedarray/Uint32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $609
  i32.const -1
  i32.const 0
  call $~lib/typedarray/Uint32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $609
  i32.const 3
  i32.const 0
  call $~lib/typedarray/Uint32Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $609
  i32.const 3
  i32.const 2
  call $~lib/typedarray/Uint32Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $609
  i32.const 3
  i32.const 3
  call $~lib/typedarray/Uint32Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $609
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Uint32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $609
  i32.const 1
  i32.const 10
  call $~lib/typedarray/Uint32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $609
  i32.const 1
  i32.const -100
  call $~lib/typedarray/Uint32Array#indexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $609
  i32.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint32Array#lastIndexOf@varargs
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $609
  i32.const 11
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint32Array#lastIndexOf@varargs
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $609
  i32.const -1
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint32Array#lastIndexOf@varargs
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $609
  i32.const 3
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint32Array#lastIndexOf@varargs
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $609
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Uint32Array#lastIndexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $609
  i32.const 3
  i32.const 3
  call $~lib/typedarray/Uint32Array#lastIndexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $609
  i32.const 3
  i32.const 2
  call $~lib/typedarray/Uint32Array#lastIndexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $609
  i32.const 1
  i32.const 100
  call $~lib/typedarray/Uint32Array#lastIndexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $609
  i32.const 1
  i32.const -10
  call $~lib/typedarray/Uint32Array#lastIndexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $609
  i32.const 1
  i32.const -11
  call $~lib/typedarray/Uint32Array#lastIndexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $609
  i32.const 4
  i32.const 9
  call $~lib/typedarray/Uint32Array#subarray
  local.tee $612
  i32.store $0 offset=1104
  local.get $612
  i32.const 3
  i32.const 0
  call $~lib/typedarray/Uint32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $612
  i32.const 4
  i32.const 0
  call $~lib/typedarray/Uint32Array#indexOf
  i32.const 4
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $612
  i32.const 5
  i32.const 0
  call $~lib/typedarray/Uint32Array#indexOf
  i32.const 5
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $612
  i32.const 9
  i32.const 0
  call $~lib/typedarray/Uint32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $612
  i32.const 10
  i32.const 0
  call $~lib/typedarray/Uint32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $612
  i32.const 11
  i32.const 0
  call $~lib/typedarray/Uint32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $612
  i32.const 5
  i32.const 1
  call $~lib/typedarray/Uint32Array#indexOf
  i32.const 5
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $612
  i32.const 5
  i32.const 2
  call $~lib/typedarray/Uint32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  global.get $std/typedarray/testArrayIndexOfAndLastIndexOfValues
  local.tee $613
  i32.store $0 offset=1108
  local.get $613
  call $~lib/array/Array<i32>#get:length
  local.set $614
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $614
  call $~lib/typedarray/Int64Array#constructor
  local.tee $615
  i32.store $0 offset=1112
  i32.const 0
  local.set $616
  loop $for-loop|55
   local.get $616
   local.get $614
   i32.lt_s
   local.set $617
   local.get $617
   if
    local.get $615
    local.get $616
    local.get $613
    local.get $616
    call $~lib/array/Array<i32>#__get
    i64.extend_i32_s
    call $~lib/typedarray/Int64Array#__set
    local.get $616
    i32.const 1
    i32.add
    local.set $616
    br $for-loop|55
   end
  end
  local.get $615
  i64.const 0
  i32.const 0
  call $~lib/typedarray/Int64Array#indexOf
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $615
  i64.const 11
  i32.const 0
  call $~lib/typedarray/Int64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $615
  i64.const -1
  i32.const 0
  call $~lib/typedarray/Int64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $615
  i64.const 3
  i32.const 0
  call $~lib/typedarray/Int64Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $615
  i64.const 3
  i32.const 2
  call $~lib/typedarray/Int64Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $615
  i64.const 3
  i32.const 3
  call $~lib/typedarray/Int64Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $615
  i64.const 3
  i32.const 4
  call $~lib/typedarray/Int64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $615
  i64.const 1
  i32.const 10
  call $~lib/typedarray/Int64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $615
  i64.const 1
  i32.const -100
  call $~lib/typedarray/Int64Array#indexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $615
  i64.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Int64Array#lastIndexOf@varargs
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $615
  i64.const 11
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Int64Array#lastIndexOf@varargs
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $615
  i64.const -1
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Int64Array#lastIndexOf@varargs
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $615
  i64.const 3
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Int64Array#lastIndexOf@varargs
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $615
  i64.const 3
  i32.const 4
  call $~lib/typedarray/Int64Array#lastIndexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $615
  i64.const 3
  i32.const 3
  call $~lib/typedarray/Int64Array#lastIndexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $615
  i64.const 3
  i32.const 2
  call $~lib/typedarray/Int64Array#lastIndexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $615
  i64.const 1
  i32.const 100
  call $~lib/typedarray/Int64Array#lastIndexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $615
  i64.const 1
  i32.const -10
  call $~lib/typedarray/Int64Array#lastIndexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $615
  i64.const 1
  i32.const -11
  call $~lib/typedarray/Int64Array#lastIndexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $615
  i32.const 4
  i32.const 9
  call $~lib/typedarray/Int64Array#subarray
  local.tee $618
  i32.store $0 offset=1116
  local.get $618
  i64.const 3
  i32.const 0
  call $~lib/typedarray/Int64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $618
  i64.const 4
  i32.const 0
  call $~lib/typedarray/Int64Array#indexOf
  i32.const 4
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $618
  i64.const 5
  i32.const 0
  call $~lib/typedarray/Int64Array#indexOf
  i32.const 5
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $618
  i64.const 9
  i32.const 0
  call $~lib/typedarray/Int64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $618
  i64.const 10
  i32.const 0
  call $~lib/typedarray/Int64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $618
  i64.const 11
  i32.const 0
  call $~lib/typedarray/Int64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $618
  i64.const 5
  i32.const 1
  call $~lib/typedarray/Int64Array#indexOf
  i32.const 5
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $618
  i64.const 5
  i32.const 2
  call $~lib/typedarray/Int64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  global.get $std/typedarray/testArrayIndexOfAndLastIndexOfValues
  local.tee $619
  i32.store $0 offset=1120
  local.get $619
  call $~lib/array/Array<i32>#get:length
  local.set $620
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $620
  call $~lib/typedarray/Uint64Array#constructor
  local.tee $621
  i32.store $0 offset=1124
  i32.const 0
  local.set $622
  loop $for-loop|56
   local.get $622
   local.get $620
   i32.lt_s
   local.set $623
   local.get $623
   if
    local.get $621
    local.get $622
    local.get $619
    local.get $622
    call $~lib/array/Array<i32>#__get
    i64.extend_i32_s
    call $~lib/typedarray/Uint64Array#__set
    local.get $622
    i32.const 1
    i32.add
    local.set $622
    br $for-loop|56
   end
  end
  local.get $621
  i64.const 0
  i32.const 0
  call $~lib/typedarray/Uint64Array#indexOf
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $621
  i64.const 11
  i32.const 0
  call $~lib/typedarray/Uint64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $621
  i64.const -1
  i32.const 0
  call $~lib/typedarray/Uint64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $621
  i64.const 3
  i32.const 0
  call $~lib/typedarray/Uint64Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $621
  i64.const 3
  i32.const 2
  call $~lib/typedarray/Uint64Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $621
  i64.const 3
  i32.const 3
  call $~lib/typedarray/Uint64Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $621
  i64.const 3
  i32.const 4
  call $~lib/typedarray/Uint64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $621
  i64.const 1
  i32.const 10
  call $~lib/typedarray/Uint64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $621
  i64.const 1
  i32.const -100
  call $~lib/typedarray/Uint64Array#indexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $621
  i64.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint64Array#lastIndexOf@varargs
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $621
  i64.const 11
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint64Array#lastIndexOf@varargs
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $621
  i64.const -1
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint64Array#lastIndexOf@varargs
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $621
  i64.const 3
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint64Array#lastIndexOf@varargs
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $621
  i64.const 3
  i32.const 4
  call $~lib/typedarray/Uint64Array#lastIndexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $621
  i64.const 3
  i32.const 3
  call $~lib/typedarray/Uint64Array#lastIndexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $621
  i64.const 3
  i32.const 2
  call $~lib/typedarray/Uint64Array#lastIndexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $621
  i64.const 1
  i32.const 100
  call $~lib/typedarray/Uint64Array#lastIndexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $621
  i64.const 1
  i32.const -10
  call $~lib/typedarray/Uint64Array#lastIndexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $621
  i64.const 1
  i32.const -11
  call $~lib/typedarray/Uint64Array#lastIndexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $621
  i32.const 4
  i32.const 9
  call $~lib/typedarray/Uint64Array#subarray
  local.tee $624
  i32.store $0 offset=1128
  local.get $624
  i64.const 3
  i32.const 0
  call $~lib/typedarray/Uint64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $624
  i64.const 4
  i32.const 0
  call $~lib/typedarray/Uint64Array#indexOf
  i32.const 4
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $624
  i64.const 5
  i32.const 0
  call $~lib/typedarray/Uint64Array#indexOf
  i32.const 5
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $624
  i64.const 9
  i32.const 0
  call $~lib/typedarray/Uint64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $624
  i64.const 10
  i32.const 0
  call $~lib/typedarray/Uint64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $624
  i64.const 11
  i32.const 0
  call $~lib/typedarray/Uint64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $624
  i64.const 5
  i32.const 1
  call $~lib/typedarray/Uint64Array#indexOf
  i32.const 5
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $624
  i64.const 5
  i32.const 2
  call $~lib/typedarray/Uint64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  global.get $std/typedarray/testArrayIndexOfAndLastIndexOfValues
  local.tee $625
  i32.store $0 offset=1132
  local.get $625
  call $~lib/array/Array<i32>#get:length
  local.set $626
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $626
  call $~lib/typedarray/Float32Array#constructor
  local.tee $627
  i32.store $0 offset=1136
  i32.const 0
  local.set $628
  loop $for-loop|57
   local.get $628
   local.get $626
   i32.lt_s
   local.set $629
   local.get $629
   if
    local.get $627
    local.get $628
    local.get $625
    local.get $628
    call $~lib/array/Array<i32>#__get
    f32.convert_i32_s
    call $~lib/typedarray/Float32Array#__set
    local.get $628
    i32.const 1
    i32.add
    local.set $628
    br $for-loop|57
   end
  end
  local.get $627
  f32.const 0
  i32.const 0
  call $~lib/typedarray/Float32Array#indexOf
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $627
  f32.const 11
  i32.const 0
  call $~lib/typedarray/Float32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $627
  f32.const -1
  i32.const 0
  call $~lib/typedarray/Float32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $627
  f32.const 3
  i32.const 0
  call $~lib/typedarray/Float32Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $627
  f32.const 3
  i32.const 2
  call $~lib/typedarray/Float32Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $627
  f32.const 3
  i32.const 3
  call $~lib/typedarray/Float32Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $627
  f32.const 3
  i32.const 4
  call $~lib/typedarray/Float32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $627
  f32.const 1
  i32.const 10
  call $~lib/typedarray/Float32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $627
  f32.const 1
  i32.const -100
  call $~lib/typedarray/Float32Array#indexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $627
  f32.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Float32Array#lastIndexOf@varargs
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $627
  f32.const 11
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Float32Array#lastIndexOf@varargs
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $627
  f32.const -1
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Float32Array#lastIndexOf@varargs
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $627
  f32.const 3
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Float32Array#lastIndexOf@varargs
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $627
  f32.const 3
  i32.const 4
  call $~lib/typedarray/Float32Array#lastIndexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $627
  f32.const 3
  i32.const 3
  call $~lib/typedarray/Float32Array#lastIndexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $627
  f32.const 3
  i32.const 2
  call $~lib/typedarray/Float32Array#lastIndexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $627
  f32.const 1
  i32.const 100
  call $~lib/typedarray/Float32Array#lastIndexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $627
  f32.const 1
  i32.const -10
  call $~lib/typedarray/Float32Array#lastIndexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $627
  f32.const 1
  i32.const -11
  call $~lib/typedarray/Float32Array#lastIndexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $627
  i32.const 4
  i32.const 9
  call $~lib/typedarray/Float32Array#subarray
  local.tee $630
  i32.store $0 offset=1140
  local.get $630
  f32.const 3
  i32.const 0
  call $~lib/typedarray/Float32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $630
  f32.const 4
  i32.const 0
  call $~lib/typedarray/Float32Array#indexOf
  i32.const 4
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $630
  f32.const 5
  i32.const 0
  call $~lib/typedarray/Float32Array#indexOf
  i32.const 5
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $630
  f32.const 9
  i32.const 0
  call $~lib/typedarray/Float32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $630
  f32.const 10
  i32.const 0
  call $~lib/typedarray/Float32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $630
  f32.const 11
  i32.const 0
  call $~lib/typedarray/Float32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $630
  f32.const 5
  i32.const 1
  call $~lib/typedarray/Float32Array#indexOf
  i32.const 5
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $630
  f32.const 5
  i32.const 2
  call $~lib/typedarray/Float32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  global.get $std/typedarray/testArrayIndexOfAndLastIndexOfValues
  local.tee $631
  i32.store $0 offset=1144
  local.get $631
  call $~lib/array/Array<i32>#get:length
  local.set $632
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $632
  call $~lib/typedarray/Float64Array#constructor
  local.tee $633
  i32.store $0 offset=1148
  i32.const 0
  local.set $634
  loop $for-loop|58
   local.get $634
   local.get $632
   i32.lt_s
   local.set $635
   local.get $635
   if
    local.get $633
    local.get $634
    local.get $631
    local.get $634
    call $~lib/array/Array<i32>#__get
    f64.convert_i32_s
    call $~lib/typedarray/Float64Array#__set
    local.get $634
    i32.const 1
    i32.add
    local.set $634
    br $for-loop|58
   end
  end
  local.get $633
  f64.const 0
  i32.const 0
  call $~lib/typedarray/Float64Array#indexOf
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $633
  f64.const 11
  i32.const 0
  call $~lib/typedarray/Float64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $633
  f64.const -1
  i32.const 0
  call $~lib/typedarray/Float64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $633
  f64.const 3
  i32.const 0
  call $~lib/typedarray/Float64Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $633
  f64.const 3
  i32.const 2
  call $~lib/typedarray/Float64Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $633
  f64.const 3
  i32.const 3
  call $~lib/typedarray/Float64Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $633
  f64.const 3
  i32.const 4
  call $~lib/typedarray/Float64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $633
  f64.const 1
  i32.const 10
  call $~lib/typedarray/Float64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $633
  f64.const 1
  i32.const -100
  call $~lib/typedarray/Float64Array#indexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $633
  f64.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Float64Array#lastIndexOf@varargs
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $633
  f64.const 11
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Float64Array#lastIndexOf@varargs
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $633
  f64.const -1
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Float64Array#lastIndexOf@varargs
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $633
  f64.const 3
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Float64Array#lastIndexOf@varargs
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $633
  f64.const 3
  i32.const 4
  call $~lib/typedarray/Float64Array#lastIndexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $633
  f64.const 3
  i32.const 3
  call $~lib/typedarray/Float64Array#lastIndexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $633
  f64.const 3
  i32.const 2
  call $~lib/typedarray/Float64Array#lastIndexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $633
  f64.const 1
  i32.const 100
  call $~lib/typedarray/Float64Array#lastIndexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $633
  f64.const 1
  i32.const -10
  call $~lib/typedarray/Float64Array#lastIndexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $633
  f64.const 1
  i32.const -11
  call $~lib/typedarray/Float64Array#lastIndexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $633
  i32.const 4
  i32.const 9
  call $~lib/typedarray/Float64Array#subarray
  local.tee $636
  i32.store $0 offset=1152
  local.get $636
  f64.const 3
  i32.const 0
  call $~lib/typedarray/Float64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $636
  f64.const 4
  i32.const 0
  call $~lib/typedarray/Float64Array#indexOf
  i32.const 4
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $636
  f64.const 5
  i32.const 0
  call $~lib/typedarray/Float64Array#indexOf
  i32.const 5
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $636
  f64.const 9
  i32.const 0
  call $~lib/typedarray/Float64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $636
  f64.const 10
  i32.const 0
  call $~lib/typedarray/Float64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $636
  f64.const 11
  i32.const 0
  call $~lib/typedarray/Float64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $636
  f64.const 5
  i32.const 1
  call $~lib/typedarray/Float64Array#indexOf
  i32.const 5
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $636
  f64.const 5
  i32.const 2
  call $~lib/typedarray/Float64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Float64Array#constructor
  local.tee $637
  i32.store $0 offset=1156
  local.get $637
  i32.const 0
  f64.const nan:0x8000000000000
  call $~lib/typedarray/Float64Array#__set
  local.get $637
  f64.const nan:0x8000000000000
  i32.const 0
  call $~lib/typedarray/Float64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $637
  f64.const nan:0x8000000000000
  i32.const 0
  call $~lib/typedarray/Float64Array#includes
  i32.const 0
  i32.ne
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Float32Array#constructor
  local.tee $638
  i32.store $0 offset=1160
  local.get $638
  i32.const 0
  f32.const nan:0x400000
  call $~lib/typedarray/Float32Array#__set
  local.get $638
  f32.const nan:0x400000
  i32.const 0
  call $~lib/typedarray/Float32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $638
  f32.const nan:0x400000
  i32.const 0
  call $~lib/typedarray/Float32Array#includes
  i32.const 0
  i32.ne
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 0
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $641
  i32.store $0 offset=1164
  global.get $~lib/memory/__stack_pointer
  local.get $641
  i32.const 0
  i32.const 2
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint8Array.wrap@varargs
  local.tee $642
  i32.store $0 offset=1168
  local.get $642
  call $~lib/typedarray/Uint8Array#get:length
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 2
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $641
  i32.store $0 offset=1164
  global.get $~lib/memory/__stack_pointer
  local.get $641
  i32.const 2
  i32.const 2
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint8Array.wrap@varargs
  local.tee $642
  i32.store $0 offset=1168
  local.get $642
  call $~lib/typedarray/Uint8Array#get:length
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  global.get $std/typedarray/testArrayWrapValues
  local.tee $643
  i32.store $0 offset=1172
  local.get $643
  call $~lib/array/Array<i32>#get:length
  local.set $644
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $644
  call $~lib/typedarray/Int8Array#constructor
  local.tee $645
  i32.store $0 offset=1176
  i32.const 0
  local.set $646
  loop $for-loop|59
   local.get $646
   local.get $644
   i32.lt_s
   local.set $647
   local.get $647
   if
    local.get $645
    local.get $646
    local.get $643
    local.get $646
    call $~lib/array/Array<i32>#__get
    i32.extend8_s
    call $~lib/typedarray/Int8Array#__set
    local.get $646
    i32.const 1
    i32.add
    local.set $646
    br $for-loop|59
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $645
  i32.load $0
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=804
  local.get $1317
  local.get $645
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  local.get $645
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  local.get $645
  i32.load $0 offset=8
  i32.add
  call $~lib/arraybuffer/ArrayBuffer#slice
  local.tee $648
  i32.store $0 offset=1180
  i32.const 1
  drop
  global.get $~lib/memory/__stack_pointer
  local.get $648
  i32.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Int8Array.wrap@varargs
  local.tee $649
  i32.store $0 offset=1184
  i32.const 0
  local.set $650
  loop $for-loop|60
   local.get $650
   local.get $644
   i32.lt_s
   local.set $651
   local.get $651
   if
    local.get $645
    local.get $650
    call $~lib/typedarray/Int8Array#__get
    local.get $649
    local.get $650
    call $~lib/typedarray/Int8Array#__get
    i32.eq
    i32.eqz
    if
     unreachable
    end
    local.get $650
    i32.const 1
    i32.add
    local.set $650
    br $for-loop|60
   end
  end
  global.get $~lib/memory/__stack_pointer
  global.get $std/typedarray/testArrayWrapValues
  local.tee $652
  i32.store $0 offset=1188
  local.get $652
  call $~lib/array/Array<i32>#get:length
  local.set $653
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $653
  call $~lib/typedarray/Uint8Array#constructor
  local.tee $654
  i32.store $0 offset=1192
  i32.const 0
  local.set $655
  loop $for-loop|61
   local.get $655
   local.get $653
   i32.lt_s
   local.set $656
   local.get $656
   if
    local.get $654
    local.get $655
    local.get $652
    local.get $655
    call $~lib/array/Array<i32>#__get
    i32.const 255
    i32.and
    call $~lib/typedarray/Uint8Array#__set
    local.get $655
    i32.const 1
    i32.add
    local.set $655
    br $for-loop|61
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $654
  i32.load $0
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=804
  local.get $1317
  local.get $654
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  local.get $654
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  local.get $654
  i32.load $0 offset=8
  i32.add
  call $~lib/arraybuffer/ArrayBuffer#slice
  local.tee $657
  i32.store $0 offset=1196
  i32.const 0
  drop
  i32.const 1
  drop
  global.get $~lib/memory/__stack_pointer
  local.get $657
  i32.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint8Array.wrap@varargs
  local.tee $658
  i32.store $0 offset=1200
  i32.const 0
  local.set $659
  loop $for-loop|62
   local.get $659
   local.get $653
   i32.lt_s
   local.set $660
   local.get $660
   if
    local.get $654
    local.get $659
    call $~lib/typedarray/Uint8Array#__get
    local.get $658
    local.get $659
    call $~lib/typedarray/Uint8Array#__get
    i32.eq
    i32.eqz
    if
     unreachable
    end
    local.get $659
    i32.const 1
    i32.add
    local.set $659
    br $for-loop|62
   end
  end
  global.get $~lib/memory/__stack_pointer
  global.get $std/typedarray/testArrayWrapValues
  local.tee $661
  i32.store $0 offset=1204
  local.get $661
  call $~lib/array/Array<i32>#get:length
  local.set $662
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $662
  call $~lib/typedarray/Uint8ClampedArray#constructor
  local.tee $663
  i32.store $0 offset=1208
  i32.const 0
  local.set $664
  loop $for-loop|63
   local.get $664
   local.get $662
   i32.lt_s
   local.set $665
   local.get $665
   if
    local.get $663
    local.get $664
    local.get $661
    local.get $664
    call $~lib/array/Array<i32>#__get
    i32.const 255
    i32.and
    call $~lib/typedarray/Uint8ClampedArray#__set
    local.get $664
    i32.const 1
    i32.add
    local.set $664
    br $for-loop|63
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $663
  i32.load $0
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=804
  local.get $1317
  local.get $663
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  local.get $663
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  local.get $663
  i32.load $0 offset=8
  i32.add
  call $~lib/arraybuffer/ArrayBuffer#slice
  local.tee $666
  i32.store $0 offset=1212
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 1
  drop
  global.get $~lib/memory/__stack_pointer
  local.get $666
  i32.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray.wrap@varargs
  local.tee $667
  i32.store $0 offset=1216
  i32.const 0
  local.set $668
  loop $for-loop|64
   local.get $668
   local.get $662
   i32.lt_s
   local.set $669
   local.get $669
   if
    local.get $663
    local.get $668
    call $~lib/typedarray/Uint8ClampedArray#__get
    local.get $667
    local.get $668
    call $~lib/typedarray/Uint8ClampedArray#__get
    i32.eq
    i32.eqz
    if
     unreachable
    end
    local.get $668
    i32.const 1
    i32.add
    local.set $668
    br $for-loop|64
   end
  end
  global.get $~lib/memory/__stack_pointer
  global.get $std/typedarray/testArrayWrapValues
  local.tee $670
  i32.store $0 offset=1220
  local.get $670
  call $~lib/array/Array<i32>#get:length
  local.set $671
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $671
  call $~lib/typedarray/Int16Array#constructor
  local.tee $672
  i32.store $0 offset=1224
  i32.const 0
  local.set $673
  loop $for-loop|65
   local.get $673
   local.get $671
   i32.lt_s
   local.set $674
   local.get $674
   if
    local.get $672
    local.get $673
    local.get $670
    local.get $673
    call $~lib/array/Array<i32>#__get
    i32.extend16_s
    call $~lib/typedarray/Int16Array#__set
    local.get $673
    i32.const 1
    i32.add
    local.set $673
    br $for-loop|65
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $672
  i32.load $0
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=804
  local.get $1317
  local.get $672
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  local.get $672
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  local.get $672
  i32.load $0 offset=8
  i32.add
  call $~lib/arraybuffer/ArrayBuffer#slice
  local.tee $675
  i32.store $0 offset=1228
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 1
  drop
  global.get $~lib/memory/__stack_pointer
  local.get $675
  i32.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Int16Array.wrap@varargs
  local.tee $676
  i32.store $0 offset=1232
  i32.const 0
  local.set $677
  loop $for-loop|66
   local.get $677
   local.get $671
   i32.lt_s
   local.set $678
   local.get $678
   if
    local.get $672
    local.get $677
    call $~lib/typedarray/Int16Array#__get
    local.get $676
    local.get $677
    call $~lib/typedarray/Int16Array#__get
    i32.eq
    i32.eqz
    if
     unreachable
    end
    local.get $677
    i32.const 1
    i32.add
    local.set $677
    br $for-loop|66
   end
  end
  global.get $~lib/memory/__stack_pointer
  global.get $std/typedarray/testArrayWrapValues
  local.tee $679
  i32.store $0 offset=1236
  local.get $679
  call $~lib/array/Array<i32>#get:length
  local.set $680
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $680
  call $~lib/typedarray/Uint16Array#constructor
  local.tee $681
  i32.store $0 offset=1240
  i32.const 0
  local.set $682
  loop $for-loop|67
   local.get $682
   local.get $680
   i32.lt_s
   local.set $683
   local.get $683
   if
    local.get $681
    local.get $682
    local.get $679
    local.get $682
    call $~lib/array/Array<i32>#__get
    i32.const 65535
    i32.and
    call $~lib/typedarray/Uint16Array#__set
    local.get $682
    i32.const 1
    i32.add
    local.set $682
    br $for-loop|67
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $681
  i32.load $0
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=804
  local.get $1317
  local.get $681
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  local.get $681
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  local.get $681
  i32.load $0 offset=8
  i32.add
  call $~lib/arraybuffer/ArrayBuffer#slice
  local.tee $684
  i32.store $0 offset=1244
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 1
  drop
  global.get $~lib/memory/__stack_pointer
  local.get $684
  i32.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint16Array.wrap@varargs
  local.tee $685
  i32.store $0 offset=1248
  i32.const 0
  local.set $686
  loop $for-loop|68
   local.get $686
   local.get $680
   i32.lt_s
   local.set $687
   local.get $687
   if
    local.get $681
    local.get $686
    call $~lib/typedarray/Uint16Array#__get
    local.get $685
    local.get $686
    call $~lib/typedarray/Uint16Array#__get
    i32.eq
    i32.eqz
    if
     unreachable
    end
    local.get $686
    i32.const 1
    i32.add
    local.set $686
    br $for-loop|68
   end
  end
  global.get $~lib/memory/__stack_pointer
  global.get $std/typedarray/testArrayWrapValues
  local.tee $688
  i32.store $0 offset=1252
  local.get $688
  call $~lib/array/Array<i32>#get:length
  local.set $689
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $689
  call $~lib/typedarray/Int32Array#constructor
  local.tee $690
  i32.store $0 offset=1256
  i32.const 0
  local.set $691
  loop $for-loop|69
   local.get $691
   local.get $689
   i32.lt_s
   local.set $692
   local.get $692
   if
    local.get $690
    local.get $691
    local.get $688
    local.get $691
    call $~lib/array/Array<i32>#__get
    call $~lib/typedarray/Int32Array#__set
    local.get $691
    i32.const 1
    i32.add
    local.set $691
    br $for-loop|69
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $690
  i32.load $0
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=804
  local.get $1317
  local.get $690
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  local.get $690
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  local.get $690
  i32.load $0 offset=8
  i32.add
  call $~lib/arraybuffer/ArrayBuffer#slice
  local.tee $693
  i32.store $0 offset=1260
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 1
  drop
  global.get $~lib/memory/__stack_pointer
  local.get $693
  i32.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Int32Array.wrap@varargs
  local.tee $694
  i32.store $0 offset=1264
  i32.const 0
  local.set $695
  loop $for-loop|70
   local.get $695
   local.get $689
   i32.lt_s
   local.set $696
   local.get $696
   if
    local.get $690
    local.get $695
    call $~lib/typedarray/Int32Array#__get
    local.get $694
    local.get $695
    call $~lib/typedarray/Int32Array#__get
    i32.eq
    i32.eqz
    if
     unreachable
    end
    local.get $695
    i32.const 1
    i32.add
    local.set $695
    br $for-loop|70
   end
  end
  global.get $~lib/memory/__stack_pointer
  global.get $std/typedarray/testArrayWrapValues
  local.tee $697
  i32.store $0 offset=1268
  local.get $697
  call $~lib/array/Array<i32>#get:length
  local.set $698
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $698
  call $~lib/typedarray/Uint32Array#constructor
  local.tee $699
  i32.store $0 offset=1272
  i32.const 0
  local.set $700
  loop $for-loop|71
   local.get $700
   local.get $698
   i32.lt_s
   local.set $701
   local.get $701
   if
    local.get $699
    local.get $700
    local.get $697
    local.get $700
    call $~lib/array/Array<i32>#__get
    call $~lib/typedarray/Uint32Array#__set
    local.get $700
    i32.const 1
    i32.add
    local.set $700
    br $for-loop|71
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $699
  i32.load $0
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=804
  local.get $1317
  local.get $699
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  local.get $699
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  local.get $699
  i32.load $0 offset=8
  i32.add
  call $~lib/arraybuffer/ArrayBuffer#slice
  local.tee $702
  i32.store $0 offset=1276
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 1
  drop
  global.get $~lib/memory/__stack_pointer
  local.get $702
  i32.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint32Array.wrap@varargs
  local.tee $703
  i32.store $0 offset=1280
  i32.const 0
  local.set $704
  loop $for-loop|72
   local.get $704
   local.get $698
   i32.lt_s
   local.set $705
   local.get $705
   if
    local.get $699
    local.get $704
    call $~lib/typedarray/Uint32Array#__get
    local.get $703
    local.get $704
    call $~lib/typedarray/Uint32Array#__get
    i32.eq
    i32.eqz
    if
     unreachable
    end
    local.get $704
    i32.const 1
    i32.add
    local.set $704
    br $for-loop|72
   end
  end
  global.get $~lib/memory/__stack_pointer
  global.get $std/typedarray/testArrayWrapValues
  local.tee $706
  i32.store $0 offset=1284
  local.get $706
  call $~lib/array/Array<i32>#get:length
  local.set $707
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $707
  call $~lib/typedarray/Int64Array#constructor
  local.tee $708
  i32.store $0 offset=1288
  i32.const 0
  local.set $709
  loop $for-loop|73
   local.get $709
   local.get $707
   i32.lt_s
   local.set $710
   local.get $710
   if
    local.get $708
    local.get $709
    local.get $706
    local.get $709
    call $~lib/array/Array<i32>#__get
    i64.extend_i32_s
    call $~lib/typedarray/Int64Array#__set
    local.get $709
    i32.const 1
    i32.add
    local.set $709
    br $for-loop|73
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $708
  i32.load $0
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=804
  local.get $1317
  local.get $708
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  local.get $708
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  local.get $708
  i32.load $0 offset=8
  i32.add
  call $~lib/arraybuffer/ArrayBuffer#slice
  local.tee $711
  i32.store $0 offset=1292
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 1
  drop
  global.get $~lib/memory/__stack_pointer
  local.get $711
  i32.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Int64Array.wrap@varargs
  local.tee $712
  i32.store $0 offset=1296
  i32.const 0
  local.set $713
  loop $for-loop|74
   local.get $713
   local.get $707
   i32.lt_s
   local.set $714
   local.get $714
   if
    local.get $708
    local.get $713
    call $~lib/typedarray/Int64Array#__get
    local.get $712
    local.get $713
    call $~lib/typedarray/Int64Array#__get
    i64.eq
    i32.eqz
    if
     unreachable
    end
    local.get $713
    i32.const 1
    i32.add
    local.set $713
    br $for-loop|74
   end
  end
  global.get $~lib/memory/__stack_pointer
  global.get $std/typedarray/testArrayWrapValues
  local.tee $715
  i32.store $0 offset=1300
  local.get $715
  call $~lib/array/Array<i32>#get:length
  local.set $716
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $716
  call $~lib/typedarray/Uint64Array#constructor
  local.tee $717
  i32.store $0 offset=1304
  i32.const 0
  local.set $718
  loop $for-loop|75
   local.get $718
   local.get $716
   i32.lt_s
   local.set $719
   local.get $719
   if
    local.get $717
    local.get $718
    local.get $715
    local.get $718
    call $~lib/array/Array<i32>#__get
    i64.extend_i32_s
    call $~lib/typedarray/Uint64Array#__set
    local.get $718
    i32.const 1
    i32.add
    local.set $718
    br $for-loop|75
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $717
  i32.load $0
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=804
  local.get $1317
  local.get $717
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  local.get $717
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  local.get $717
  i32.load $0 offset=8
  i32.add
  call $~lib/arraybuffer/ArrayBuffer#slice
  local.tee $720
  i32.store $0 offset=1308
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 1
  drop
  global.get $~lib/memory/__stack_pointer
  local.get $720
  i32.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint64Array.wrap@varargs
  local.tee $721
  i32.store $0 offset=1312
  i32.const 0
  local.set $722
  loop $for-loop|76
   local.get $722
   local.get $716
   i32.lt_s
   local.set $723
   local.get $723
   if
    local.get $717
    local.get $722
    call $~lib/typedarray/Uint64Array#__get
    local.get $721
    local.get $722
    call $~lib/typedarray/Uint64Array#__get
    i64.eq
    i32.eqz
    if
     unreachable
    end
    local.get $722
    i32.const 1
    i32.add
    local.set $722
    br $for-loop|76
   end
  end
  global.get $~lib/memory/__stack_pointer
  global.get $std/typedarray/testArrayWrapValues
  local.tee $724
  i32.store $0 offset=1316
  local.get $724
  call $~lib/array/Array<i32>#get:length
  local.set $725
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $725
  call $~lib/typedarray/Float32Array#constructor
  local.tee $726
  i32.store $0 offset=1320
  i32.const 0
  local.set $727
  loop $for-loop|77
   local.get $727
   local.get $725
   i32.lt_s
   local.set $728
   local.get $728
   if
    local.get $726
    local.get $727
    local.get $724
    local.get $727
    call $~lib/array/Array<i32>#__get
    f32.convert_i32_s
    call $~lib/typedarray/Float32Array#__set
    local.get $727
    i32.const 1
    i32.add
    local.set $727
    br $for-loop|77
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $726
  i32.load $0
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=804
  local.get $1317
  local.get $726
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  local.get $726
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  local.get $726
  i32.load $0 offset=8
  i32.add
  call $~lib/arraybuffer/ArrayBuffer#slice
  local.tee $729
  i32.store $0 offset=1324
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 1
  drop
  global.get $~lib/memory/__stack_pointer
  local.get $729
  i32.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Float32Array.wrap@varargs
  local.tee $730
  i32.store $0 offset=1328
  i32.const 0
  local.set $731
  loop $for-loop|78
   local.get $731
   local.get $725
   i32.lt_s
   local.set $732
   local.get $732
   if
    local.get $726
    local.get $731
    call $~lib/typedarray/Float32Array#__get
    local.get $730
    local.get $731
    call $~lib/typedarray/Float32Array#__get
    f32.eq
    i32.eqz
    if
     unreachable
    end
    local.get $731
    i32.const 1
    i32.add
    local.set $731
    br $for-loop|78
   end
  end
  global.get $~lib/memory/__stack_pointer
  global.get $std/typedarray/testArrayWrapValues
  local.tee $733
  i32.store $0 offset=1332
  local.get $733
  call $~lib/array/Array<i32>#get:length
  local.set $734
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $734
  call $~lib/typedarray/Float64Array#constructor
  local.tee $735
  i32.store $0 offset=1336
  i32.const 0
  local.set $736
  loop $for-loop|79
   local.get $736
   local.get $734
   i32.lt_s
   local.set $737
   local.get $737
   if
    local.get $735
    local.get $736
    local.get $733
    local.get $736
    call $~lib/array/Array<i32>#__get
    f64.convert_i32_s
    call $~lib/typedarray/Float64Array#__set
    local.get $736
    i32.const 1
    i32.add
    local.set $736
    br $for-loop|79
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $735
  i32.load $0
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=804
  local.get $1317
  local.get $735
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  local.get $735
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  local.get $735
  i32.load $0 offset=8
  i32.add
  call $~lib/arraybuffer/ArrayBuffer#slice
  local.tee $738
  i32.store $0 offset=1340
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 1
  drop
  global.get $~lib/memory/__stack_pointer
  local.get $738
  i32.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Float64Array.wrap@varargs
  local.tee $739
  i32.store $0 offset=1344
  i32.const 0
  local.set $740
  loop $for-loop|80
   local.get $740
   local.get $734
   i32.lt_s
   local.set $741
   local.get $741
   if
    local.get $735
    local.get $740
    call $~lib/typedarray/Float64Array#__get
    local.get $739
    local.get $740
    call $~lib/typedarray/Float64Array#__get
    f64.eq
    i32.eqz
    if
     unreachable
    end
    local.get $740
    i32.const 1
    i32.add
    local.set $740
    br $for-loop|80
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int64Array#constructor
  local.tee $750
  i32.store $0 offset=1348
  local.get $750
  i32.const 0
  i64.const 7
  call $~lib/typedarray/Int64Array#__set
  local.get $750
  i32.const 1
  i64.const 8
  call $~lib/typedarray/Int64Array#__set
  local.get $750
  i32.const 2
  i64.const 9
  call $~lib/typedarray/Int64Array#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  call $~lib/typedarray/Uint8Array#constructor
  local.tee $751
  i32.store $0 offset=1352
  local.get $751
  i32.const 0
  i32.const 100
  call $~lib/typedarray/Uint8Array#__set
  local.get $751
  i32.const 1
  i32.const 101
  call $~lib/typedarray/Uint8Array#__set
  local.get $751
  i32.const 2
  i32.const 102
  call $~lib/typedarray/Uint8Array#__set
  local.get $751
  i32.const 3
  i32.const 103
  call $~lib/typedarray/Uint8Array#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int16Array#constructor
  local.tee $752
  i32.store $0 offset=1356
  local.get $752
  i32.const 0
  i32.const 1000
  call $~lib/typedarray/Int16Array#__set
  local.get $752
  i32.const 1
  i32.const 1001
  call $~lib/typedarray/Int16Array#__set
  local.get $752
  i32.const 2
  i32.const 1002
  call $~lib/typedarray/Int16Array#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 10
  call $~lib/typedarray/Int8Array#constructor
  local.tee $753
  i32.store $0 offset=1360
  local.get $753
  global.get $std/typedarray/setSource1
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  i32.const 0
  call $~lib/typedarray/Int8Array#set<~lib/array/Array<i32>>
  local.get $753
  local.set $756
  global.get $~lib/memory/__stack_pointer
  i32.const 10
  i32.const 0
  i32.const 15
  i32.const 6752
  call $~lib/rt/__newArray
  local.tee $757
  i32.store $0 offset=1364
  local.get $756
  call $~lib/typedarray/Int8Array#get:length
  local.set $758
  local.get $758
  local.get $757
  call $~lib/array/Array<i8>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $759
  loop $for-loop|81
   local.get $759
   local.get $758
   i32.lt_s
   local.set $760
   local.get $760
   if
    local.get $756
    local.get $759
    call $~lib/typedarray/Int8Array#__uget
    local.set $761
    local.get $757
    local.get $759
    call $~lib/array/Array<i8>#__uget
    local.set $762
    local.get $761
    local.get $762
    i32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $759
    i32.const 1
    i32.add
    local.set $759
    br $for-loop|81
   end
  end
  local.get $753
  global.get $std/typedarray/setSource2
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  i32.const 3
  call $~lib/typedarray/Int8Array#set<~lib/array/Array<f32>>
  local.get $753
  local.set $765
  global.get $~lib/memory/__stack_pointer
  i32.const 10
  i32.const 0
  i32.const 15
  i32.const 6784
  call $~lib/rt/__newArray
  local.tee $766
  i32.store $0 offset=1368
  local.get $765
  call $~lib/typedarray/Int8Array#get:length
  local.set $767
  local.get $767
  local.get $766
  call $~lib/array/Array<i8>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $768
  loop $for-loop|82
   local.get $768
   local.get $767
   i32.lt_s
   local.set $769
   local.get $769
   if
    local.get $765
    local.get $768
    call $~lib/typedarray/Int8Array#__uget
    local.set $770
    local.get $766
    local.get $768
    call $~lib/array/Array<i8>#__uget
    local.set $771
    local.get $770
    local.get $771
    i32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $768
    i32.const 1
    i32.add
    local.set $768
    br $for-loop|82
   end
  end
  local.get $753
  local.get $750
  i32.const 6
  call $~lib/typedarray/Int8Array#set<~lib/typedarray/Int64Array>
  local.get $753
  local.set $774
  global.get $~lib/memory/__stack_pointer
  i32.const 10
  i32.const 0
  i32.const 15
  i32.const 6816
  call $~lib/rt/__newArray
  local.tee $775
  i32.store $0 offset=1372
  local.get $774
  call $~lib/typedarray/Int8Array#get:length
  local.set $776
  local.get $776
  local.get $775
  call $~lib/array/Array<i8>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $777
  loop $for-loop|83
   local.get $777
   local.get $776
   i32.lt_s
   local.set $778
   local.get $778
   if
    local.get $774
    local.get $777
    call $~lib/typedarray/Int8Array#__uget
    local.set $779
    local.get $775
    local.get $777
    call $~lib/array/Array<i8>#__uget
    local.set $780
    local.get $779
    local.get $780
    i32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $777
    i32.const 1
    i32.add
    local.set $777
    br $for-loop|83
   end
  end
  i32.const 1
  drop
  local.get $753
  global.get $std/typedarray/setSource3
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  i32.const 2
  call $~lib/typedarray/Int8Array#set<~lib/array/Array<f64>>
  local.get $753
  local.set $783
  global.get $~lib/memory/__stack_pointer
  i32.const 10
  i32.const 0
  i32.const 15
  i32.const 6848
  call $~lib/rt/__newArray
  local.tee $784
  i32.store $0 offset=1376
  local.get $783
  call $~lib/typedarray/Int8Array#get:length
  local.set $785
  local.get $785
  local.get $784
  call $~lib/array/Array<i8>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $786
  loop $for-loop|84
   local.get $786
   local.get $785
   i32.lt_s
   local.set $787
   local.get $787
   if
    local.get $783
    local.get $786
    call $~lib/typedarray/Int8Array#__uget
    local.set $788
    local.get $784
    local.get $786
    call $~lib/array/Array<i8>#__uget
    local.set $789
    local.get $788
    local.get $789
    i32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $786
    i32.const 1
    i32.add
    local.set $786
    br $for-loop|84
   end
  end
  local.get $753
  local.get $751
  i32.const 0
  call $~lib/typedarray/Int8Array#set<~lib/typedarray/Uint8Array>
  local.get $753
  local.get $752
  i32.const 4
  call $~lib/typedarray/Int8Array#set<~lib/typedarray/Int16Array>
  local.get $753
  global.get $std/typedarray/setSource7
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  i32.const 7
  call $~lib/typedarray/Int8Array#set<~lib/array/Array<i8>>
  i32.const 0
  drop
  local.get $753
  local.set $792
  global.get $~lib/memory/__stack_pointer
  i32.const 10
  i32.const 0
  i32.const 15
  i32.const 6880
  call $~lib/rt/__newArray
  local.tee $793
  i32.store $0 offset=1380
  local.get $792
  call $~lib/typedarray/Int8Array#get:length
  local.set $794
  local.get $794
  local.get $793
  call $~lib/array/Array<i8>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $795
  loop $for-loop|85
   local.get $795
   local.get $794
   i32.lt_s
   local.set $796
   local.get $796
   if
    local.get $792
    local.get $795
    call $~lib/typedarray/Int8Array#__uget
    local.set $797
    local.get $793
    local.get $795
    call $~lib/array/Array<i8>#__uget
    local.set $798
    local.get $797
    local.get $798
    i32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $795
    i32.const 1
    i32.add
    local.set $795
    br $for-loop|85
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int64Array#constructor
  local.tee $799
  i32.store $0 offset=1384
  local.get $799
  i32.const 0
  i64.const 7
  call $~lib/typedarray/Int64Array#__set
  local.get $799
  i32.const 1
  i64.const 8
  call $~lib/typedarray/Int64Array#__set
  local.get $799
  i32.const 2
  i64.const 9
  call $~lib/typedarray/Int64Array#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  call $~lib/typedarray/Uint8Array#constructor
  local.tee $800
  i32.store $0 offset=1388
  local.get $800
  i32.const 0
  i32.const 100
  call $~lib/typedarray/Uint8Array#__set
  local.get $800
  i32.const 1
  i32.const 101
  call $~lib/typedarray/Uint8Array#__set
  local.get $800
  i32.const 2
  i32.const 102
  call $~lib/typedarray/Uint8Array#__set
  local.get $800
  i32.const 3
  i32.const 103
  call $~lib/typedarray/Uint8Array#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int16Array#constructor
  local.tee $801
  i32.store $0 offset=1392
  local.get $801
  i32.const 0
  i32.const 1000
  call $~lib/typedarray/Int16Array#__set
  local.get $801
  i32.const 1
  i32.const 1001
  call $~lib/typedarray/Int16Array#__set
  local.get $801
  i32.const 2
  i32.const 1002
  call $~lib/typedarray/Int16Array#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 10
  call $~lib/typedarray/Uint8Array#constructor
  local.tee $802
  i32.store $0 offset=1396
  local.get $802
  global.get $std/typedarray/setSource1
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  i32.const 0
  call $~lib/typedarray/Uint8Array#set<~lib/array/Array<i32>>
  local.get $802
  local.set $805
  global.get $~lib/memory/__stack_pointer
  i32.const 10
  i32.const 0
  i32.const 63
  i32.const 6912
  call $~lib/rt/__newArray
  local.tee $806
  i32.store $0 offset=1400
  local.get $805
  call $~lib/typedarray/Uint8Array#get:length
  local.set $807
  local.get $807
  local.get $806
  call $~lib/array/Array<u8>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $808
  loop $for-loop|86
   local.get $808
   local.get $807
   i32.lt_s
   local.set $809
   local.get $809
   if
    local.get $805
    local.get $808
    call $~lib/typedarray/Uint8Array#__uget
    local.set $810
    local.get $806
    local.get $808
    call $~lib/array/Array<u8>#__uget
    local.set $811
    local.get $810
    local.get $811
    i32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $808
    i32.const 1
    i32.add
    local.set $808
    br $for-loop|86
   end
  end
  local.get $802
  global.get $std/typedarray/setSource2
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  i32.const 3
  call $~lib/typedarray/Uint8Array#set<~lib/array/Array<f32>>
  local.get $802
  local.set $814
  global.get $~lib/memory/__stack_pointer
  i32.const 10
  i32.const 0
  i32.const 63
  i32.const 6944
  call $~lib/rt/__newArray
  local.tee $815
  i32.store $0 offset=1404
  local.get $814
  call $~lib/typedarray/Uint8Array#get:length
  local.set $816
  local.get $816
  local.get $815
  call $~lib/array/Array<u8>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $817
  loop $for-loop|87
   local.get $817
   local.get $816
   i32.lt_s
   local.set $818
   local.get $818
   if
    local.get $814
    local.get $817
    call $~lib/typedarray/Uint8Array#__uget
    local.set $819
    local.get $815
    local.get $817
    call $~lib/array/Array<u8>#__uget
    local.set $820
    local.get $819
    local.get $820
    i32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $817
    i32.const 1
    i32.add
    local.set $817
    br $for-loop|87
   end
  end
  local.get $802
  local.get $799
  i32.const 6
  call $~lib/typedarray/Uint8Array#set<~lib/typedarray/Int64Array>
  local.get $802
  local.set $823
  global.get $~lib/memory/__stack_pointer
  i32.const 10
  i32.const 0
  i32.const 63
  i32.const 6976
  call $~lib/rt/__newArray
  local.tee $824
  i32.store $0 offset=1408
  local.get $823
  call $~lib/typedarray/Uint8Array#get:length
  local.set $825
  local.get $825
  local.get $824
  call $~lib/array/Array<u8>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $826
  loop $for-loop|88
   local.get $826
   local.get $825
   i32.lt_s
   local.set $827
   local.get $827
   if
    local.get $823
    local.get $826
    call $~lib/typedarray/Uint8Array#__uget
    local.set $828
    local.get $824
    local.get $826
    call $~lib/array/Array<u8>#__uget
    local.set $829
    local.get $828
    local.get $829
    i32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $826
    i32.const 1
    i32.add
    local.set $826
    br $for-loop|88
   end
  end
  i32.const 1
  drop
  local.get $802
  global.get $std/typedarray/setSource3
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  i32.const 2
  call $~lib/typedarray/Uint8Array#set<~lib/array/Array<f64>>
  local.get $802
  local.set $832
  global.get $~lib/memory/__stack_pointer
  i32.const 10
  i32.const 0
  i32.const 63
  i32.const 7008
  call $~lib/rt/__newArray
  local.tee $833
  i32.store $0 offset=1412
  local.get $832
  call $~lib/typedarray/Uint8Array#get:length
  local.set $834
  local.get $834
  local.get $833
  call $~lib/array/Array<u8>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $835
  loop $for-loop|89
   local.get $835
   local.get $834
   i32.lt_s
   local.set $836
   local.get $836
   if
    local.get $832
    local.get $835
    call $~lib/typedarray/Uint8Array#__uget
    local.set $837
    local.get $833
    local.get $835
    call $~lib/array/Array<u8>#__uget
    local.set $838
    local.get $837
    local.get $838
    i32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $835
    i32.const 1
    i32.add
    local.set $835
    br $for-loop|89
   end
  end
  local.get $802
  local.get $800
  i32.const 0
  call $~lib/typedarray/Uint8Array#set<~lib/typedarray/Uint8Array>
  local.get $802
  local.get $801
  i32.const 4
  call $~lib/typedarray/Uint8Array#set<~lib/typedarray/Int16Array>
  local.get $802
  global.get $std/typedarray/setSource7
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  i32.const 7
  call $~lib/typedarray/Uint8Array#set<~lib/array/Array<i8>>
  i32.const 0
  drop
  local.get $802
  local.set $841
  global.get $~lib/memory/__stack_pointer
  i32.const 10
  i32.const 0
  i32.const 63
  i32.const 7040
  call $~lib/rt/__newArray
  local.tee $842
  i32.store $0 offset=1416
  local.get $841
  call $~lib/typedarray/Uint8Array#get:length
  local.set $843
  local.get $843
  local.get $842
  call $~lib/array/Array<u8>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $844
  loop $for-loop|90
   local.get $844
   local.get $843
   i32.lt_s
   local.set $845
   local.get $845
   if
    local.get $841
    local.get $844
    call $~lib/typedarray/Uint8Array#__uget
    local.set $846
    local.get $842
    local.get $844
    call $~lib/array/Array<u8>#__uget
    local.set $847
    local.get $846
    local.get $847
    i32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $844
    i32.const 1
    i32.add
    local.set $844
    br $for-loop|90
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int64Array#constructor
  local.tee $848
  i32.store $0 offset=1420
  local.get $848
  i32.const 0
  i64.const 7
  call $~lib/typedarray/Int64Array#__set
  local.get $848
  i32.const 1
  i64.const 8
  call $~lib/typedarray/Int64Array#__set
  local.get $848
  i32.const 2
  i64.const 9
  call $~lib/typedarray/Int64Array#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  call $~lib/typedarray/Uint8Array#constructor
  local.tee $849
  i32.store $0 offset=1424
  local.get $849
  i32.const 0
  i32.const 100
  call $~lib/typedarray/Uint8Array#__set
  local.get $849
  i32.const 1
  i32.const 101
  call $~lib/typedarray/Uint8Array#__set
  local.get $849
  i32.const 2
  i32.const 102
  call $~lib/typedarray/Uint8Array#__set
  local.get $849
  i32.const 3
  i32.const 103
  call $~lib/typedarray/Uint8Array#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int16Array#constructor
  local.tee $850
  i32.store $0 offset=1428
  local.get $850
  i32.const 0
  i32.const 1000
  call $~lib/typedarray/Int16Array#__set
  local.get $850
  i32.const 1
  i32.const 1001
  call $~lib/typedarray/Int16Array#__set
  local.get $850
  i32.const 2
  i32.const 1002
  call $~lib/typedarray/Int16Array#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 10
  call $~lib/typedarray/Uint8ClampedArray#constructor
  local.tee $851
  i32.store $0 offset=1432
  local.get $851
  global.get $std/typedarray/setSource1
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#set<~lib/array/Array<i32>>
  local.get $851
  local.set $854
  global.get $~lib/memory/__stack_pointer
  i32.const 10
  i32.const 0
  i32.const 63
  i32.const 7072
  call $~lib/rt/__newArray
  local.tee $855
  i32.store $0 offset=1436
  local.get $854
  call $~lib/typedarray/Uint8ClampedArray#get:length
  local.set $856
  local.get $856
  local.get $855
  call $~lib/array/Array<u8>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $857
  loop $for-loop|91
   local.get $857
   local.get $856
   i32.lt_s
   local.set $858
   local.get $858
   if
    local.get $854
    local.get $857
    call $~lib/typedarray/Uint8ClampedArray#__uget
    local.set $859
    local.get $855
    local.get $857
    call $~lib/array/Array<u8>#__uget
    local.set $860
    local.get $859
    local.get $860
    i32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $857
    i32.const 1
    i32.add
    local.set $857
    br $for-loop|91
   end
  end
  local.get $851
  global.get $std/typedarray/setSource2
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  i32.const 3
  call $~lib/typedarray/Uint8ClampedArray#set<~lib/array/Array<f32>>
  local.get $851
  local.set $863
  global.get $~lib/memory/__stack_pointer
  i32.const 10
  i32.const 0
  i32.const 63
  i32.const 7104
  call $~lib/rt/__newArray
  local.tee $864
  i32.store $0 offset=1440
  local.get $863
  call $~lib/typedarray/Uint8ClampedArray#get:length
  local.set $865
  local.get $865
  local.get $864
  call $~lib/array/Array<u8>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $866
  loop $for-loop|92
   local.get $866
   local.get $865
   i32.lt_s
   local.set $867
   local.get $867
   if
    local.get $863
    local.get $866
    call $~lib/typedarray/Uint8ClampedArray#__uget
    local.set $868
    local.get $864
    local.get $866
    call $~lib/array/Array<u8>#__uget
    local.set $869
    local.get $868
    local.get $869
    i32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $866
    i32.const 1
    i32.add
    local.set $866
    br $for-loop|92
   end
  end
  local.get $851
  local.get $848
  i32.const 6
  call $~lib/typedarray/Uint8ClampedArray#set<~lib/typedarray/Int64Array>
  local.get $851
  local.set $872
  global.get $~lib/memory/__stack_pointer
  i32.const 10
  i32.const 0
  i32.const 63
  i32.const 7136
  call $~lib/rt/__newArray
  local.tee $873
  i32.store $0 offset=1444
  local.get $872
  call $~lib/typedarray/Uint8ClampedArray#get:length
  local.set $874
  local.get $874
  local.get $873
  call $~lib/array/Array<u8>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $875
  loop $for-loop|93
   local.get $875
   local.get $874
   i32.lt_s
   local.set $876
   local.get $876
   if
    local.get $872
    local.get $875
    call $~lib/typedarray/Uint8ClampedArray#__uget
    local.set $877
    local.get $873
    local.get $875
    call $~lib/array/Array<u8>#__uget
    local.set $878
    local.get $877
    local.get $878
    i32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $875
    i32.const 1
    i32.add
    local.set $875
    br $for-loop|93
   end
  end
  i32.const 1
  drop
  local.get $851
  global.get $std/typedarray/setSource3
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  i32.const 2
  call $~lib/typedarray/Uint8ClampedArray#set<~lib/array/Array<f64>>
  local.get $851
  local.set $881
  global.get $~lib/memory/__stack_pointer
  i32.const 10
  i32.const 0
  i32.const 63
  i32.const 7168
  call $~lib/rt/__newArray
  local.tee $882
  i32.store $0 offset=1448
  local.get $881
  call $~lib/typedarray/Uint8ClampedArray#get:length
  local.set $883
  local.get $883
  local.get $882
  call $~lib/array/Array<u8>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $884
  loop $for-loop|94
   local.get $884
   local.get $883
   i32.lt_s
   local.set $885
   local.get $885
   if
    local.get $881
    local.get $884
    call $~lib/typedarray/Uint8ClampedArray#__uget
    local.set $886
    local.get $882
    local.get $884
    call $~lib/array/Array<u8>#__uget
    local.set $887
    local.get $886
    local.get $887
    i32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $884
    i32.const 1
    i32.add
    local.set $884
    br $for-loop|94
   end
  end
  local.get $851
  local.get $849
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#set<~lib/typedarray/Uint8Array>
  local.get $851
  local.get $850
  i32.const 4
  call $~lib/typedarray/Uint8ClampedArray#set<~lib/typedarray/Int16Array>
  local.get $851
  global.get $std/typedarray/setSource7
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  i32.const 7
  call $~lib/typedarray/Uint8ClampedArray#set<~lib/array/Array<i8>>
  i32.const 1
  drop
  local.get $851
  local.set $890
  global.get $~lib/memory/__stack_pointer
  i32.const 10
  i32.const 0
  i32.const 63
  i32.const 7200
  call $~lib/rt/__newArray
  local.tee $891
  i32.store $0 offset=1452
  local.get $890
  call $~lib/typedarray/Uint8ClampedArray#get:length
  local.set $892
  local.get $892
  local.get $891
  call $~lib/array/Array<u8>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $893
  loop $for-loop|95
   local.get $893
   local.get $892
   i32.lt_s
   local.set $894
   local.get $894
   if
    local.get $890
    local.get $893
    call $~lib/typedarray/Uint8ClampedArray#__uget
    local.set $895
    local.get $891
    local.get $893
    call $~lib/array/Array<u8>#__uget
    local.set $896
    local.get $895
    local.get $896
    i32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $893
    i32.const 1
    i32.add
    local.set $893
    br $for-loop|95
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int64Array#constructor
  local.tee $897
  i32.store $0 offset=1456
  local.get $897
  i32.const 0
  i64.const 7
  call $~lib/typedarray/Int64Array#__set
  local.get $897
  i32.const 1
  i64.const 8
  call $~lib/typedarray/Int64Array#__set
  local.get $897
  i32.const 2
  i64.const 9
  call $~lib/typedarray/Int64Array#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  call $~lib/typedarray/Uint8Array#constructor
  local.tee $898
  i32.store $0 offset=1460
  local.get $898
  i32.const 0
  i32.const 100
  call $~lib/typedarray/Uint8Array#__set
  local.get $898
  i32.const 1
  i32.const 101
  call $~lib/typedarray/Uint8Array#__set
  local.get $898
  i32.const 2
  i32.const 102
  call $~lib/typedarray/Uint8Array#__set
  local.get $898
  i32.const 3
  i32.const 103
  call $~lib/typedarray/Uint8Array#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int16Array#constructor
  local.tee $899
  i32.store $0 offset=1464
  local.get $899
  i32.const 0
  i32.const 1000
  call $~lib/typedarray/Int16Array#__set
  local.get $899
  i32.const 1
  i32.const 1001
  call $~lib/typedarray/Int16Array#__set
  local.get $899
  i32.const 2
  i32.const 1002
  call $~lib/typedarray/Int16Array#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 10
  call $~lib/typedarray/Int16Array#constructor
  local.tee $900
  i32.store $0 offset=1468
  local.get $900
  global.get $std/typedarray/setSource1
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  i32.const 0
  call $~lib/typedarray/Int16Array#set<~lib/array/Array<i32>>
  local.get $900
  local.set $903
  global.get $~lib/memory/__stack_pointer
  i32.const 10
  i32.const 1
  i32.const 64
  i32.const 7232
  call $~lib/rt/__newArray
  local.tee $904
  i32.store $0 offset=1472
  local.get $903
  call $~lib/typedarray/Int16Array#get:length
  local.set $905
  local.get $905
  local.get $904
  call $~lib/array/Array<i16>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $906
  loop $for-loop|96
   local.get $906
   local.get $905
   i32.lt_s
   local.set $907
   local.get $907
   if
    local.get $903
    local.get $906
    call $~lib/typedarray/Int16Array#__uget
    local.set $908
    local.get $904
    local.get $906
    call $~lib/array/Array<i16>#__uget
    local.set $909
    local.get $908
    local.get $909
    i32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $906
    i32.const 1
    i32.add
    local.set $906
    br $for-loop|96
   end
  end
  local.get $900
  global.get $std/typedarray/setSource2
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  i32.const 3
  call $~lib/typedarray/Int16Array#set<~lib/array/Array<f32>>
  local.get $900
  local.set $912
  global.get $~lib/memory/__stack_pointer
  i32.const 10
  i32.const 1
  i32.const 64
  i32.const 7280
  call $~lib/rt/__newArray
  local.tee $913
  i32.store $0 offset=1476
  local.get $912
  call $~lib/typedarray/Int16Array#get:length
  local.set $914
  local.get $914
  local.get $913
  call $~lib/array/Array<i16>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $915
  loop $for-loop|97
   local.get $915
   local.get $914
   i32.lt_s
   local.set $916
   local.get $916
   if
    local.get $912
    local.get $915
    call $~lib/typedarray/Int16Array#__uget
    local.set $917
    local.get $913
    local.get $915
    call $~lib/array/Array<i16>#__uget
    local.set $918
    local.get $917
    local.get $918
    i32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $915
    i32.const 1
    i32.add
    local.set $915
    br $for-loop|97
   end
  end
  local.get $900
  local.get $897
  i32.const 6
  call $~lib/typedarray/Int16Array#set<~lib/typedarray/Int64Array>
  local.get $900
  local.set $921
  global.get $~lib/memory/__stack_pointer
  i32.const 10
  i32.const 1
  i32.const 64
  i32.const 7328
  call $~lib/rt/__newArray
  local.tee $922
  i32.store $0 offset=1480
  local.get $921
  call $~lib/typedarray/Int16Array#get:length
  local.set $923
  local.get $923
  local.get $922
  call $~lib/array/Array<i16>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $924
  loop $for-loop|98
   local.get $924
   local.get $923
   i32.lt_s
   local.set $925
   local.get $925
   if
    local.get $921
    local.get $924
    call $~lib/typedarray/Int16Array#__uget
    local.set $926
    local.get $922
    local.get $924
    call $~lib/array/Array<i16>#__uget
    local.set $927
    local.get $926
    local.get $927
    i32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $924
    i32.const 1
    i32.add
    local.set $924
    br $for-loop|98
   end
  end
  i32.const 1
  drop
  local.get $900
  global.get $std/typedarray/setSource3
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  i32.const 2
  call $~lib/typedarray/Int16Array#set<~lib/array/Array<f64>>
  local.get $900
  local.set $930
  global.get $~lib/memory/__stack_pointer
  i32.const 10
  i32.const 1
  i32.const 64
  i32.const 7376
  call $~lib/rt/__newArray
  local.tee $931
  i32.store $0 offset=1484
  local.get $930
  call $~lib/typedarray/Int16Array#get:length
  local.set $932
  local.get $932
  local.get $931
  call $~lib/array/Array<i16>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $933
  loop $for-loop|99
   local.get $933
   local.get $932
   i32.lt_s
   local.set $934
   local.get $934
   if
    local.get $930
    local.get $933
    call $~lib/typedarray/Int16Array#__uget
    local.set $935
    local.get $931
    local.get $933
    call $~lib/array/Array<i16>#__uget
    local.set $936
    local.get $935
    local.get $936
    i32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $933
    i32.const 1
    i32.add
    local.set $933
    br $for-loop|99
   end
  end
  local.get $900
  local.get $898
  i32.const 0
  call $~lib/typedarray/Int16Array#set<~lib/typedarray/Uint8Array>
  local.get $900
  local.get $899
  i32.const 4
  call $~lib/typedarray/Int16Array#set<~lib/typedarray/Int16Array>
  local.get $900
  global.get $std/typedarray/setSource7
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  i32.const 7
  call $~lib/typedarray/Int16Array#set<~lib/array/Array<i8>>
  i32.const 0
  drop
  local.get $900
  local.set $939
  global.get $~lib/memory/__stack_pointer
  i32.const 10
  i32.const 1
  i32.const 64
  i32.const 7424
  call $~lib/rt/__newArray
  local.tee $940
  i32.store $0 offset=1488
  local.get $939
  call $~lib/typedarray/Int16Array#get:length
  local.set $941
  local.get $941
  local.get $940
  call $~lib/array/Array<i16>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $942
  loop $for-loop|100
   local.get $942
   local.get $941
   i32.lt_s
   local.set $943
   local.get $943
   if
    local.get $939
    local.get $942
    call $~lib/typedarray/Int16Array#__uget
    local.set $944
    local.get $940
    local.get $942
    call $~lib/array/Array<i16>#__uget
    local.set $945
    local.get $944
    local.get $945
    i32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $942
    i32.const 1
    i32.add
    local.set $942
    br $for-loop|100
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int64Array#constructor
  local.tee $946
  i32.store $0 offset=1492
  local.get $946
  i32.const 0
  i64.const 7
  call $~lib/typedarray/Int64Array#__set
  local.get $946
  i32.const 1
  i64.const 8
  call $~lib/typedarray/Int64Array#__set
  local.get $946
  i32.const 2
  i64.const 9
  call $~lib/typedarray/Int64Array#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  call $~lib/typedarray/Uint8Array#constructor
  local.tee $947
  i32.store $0 offset=1496
  local.get $947
  i32.const 0
  i32.const 100
  call $~lib/typedarray/Uint8Array#__set
  local.get $947
  i32.const 1
  i32.const 101
  call $~lib/typedarray/Uint8Array#__set
  local.get $947
  i32.const 2
  i32.const 102
  call $~lib/typedarray/Uint8Array#__set
  local.get $947
  i32.const 3
  i32.const 103
  call $~lib/typedarray/Uint8Array#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int16Array#constructor
  local.tee $948
  i32.store $0 offset=1500
  local.get $948
  i32.const 0
  i32.const 1000
  call $~lib/typedarray/Int16Array#__set
  local.get $948
  i32.const 1
  i32.const 1001
  call $~lib/typedarray/Int16Array#__set
  local.get $948
  i32.const 2
  i32.const 1002
  call $~lib/typedarray/Int16Array#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 10
  call $~lib/typedarray/Uint16Array#constructor
  local.tee $949
  i32.store $0 offset=1504
  local.get $949
  global.get $std/typedarray/setSource1
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  i32.const 0
  call $~lib/typedarray/Uint16Array#set<~lib/array/Array<i32>>
  local.get $949
  local.set $952
  global.get $~lib/memory/__stack_pointer
  i32.const 10
  i32.const 1
  i32.const 65
  i32.const 7472
  call $~lib/rt/__newArray
  local.tee $953
  i32.store $0 offset=1508
  local.get $952
  call $~lib/typedarray/Uint16Array#get:length
  local.set $954
  local.get $954
  local.get $953
  call $~lib/array/Array<u16>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $955
  loop $for-loop|101
   local.get $955
   local.get $954
   i32.lt_s
   local.set $956
   local.get $956
   if
    local.get $952
    local.get $955
    call $~lib/typedarray/Uint16Array#__uget
    local.set $957
    local.get $953
    local.get $955
    call $~lib/array/Array<u16>#__uget
    local.set $958
    local.get $957
    local.get $958
    i32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $955
    i32.const 1
    i32.add
    local.set $955
    br $for-loop|101
   end
  end
  local.get $949
  global.get $std/typedarray/setSource2
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  i32.const 3
  call $~lib/typedarray/Uint16Array#set<~lib/array/Array<f32>>
  local.get $949
  local.set $961
  global.get $~lib/memory/__stack_pointer
  i32.const 10
  i32.const 1
  i32.const 65
  i32.const 7520
  call $~lib/rt/__newArray
  local.tee $962
  i32.store $0 offset=1512
  local.get $961
  call $~lib/typedarray/Uint16Array#get:length
  local.set $963
  local.get $963
  local.get $962
  call $~lib/array/Array<u16>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $964
  loop $for-loop|102
   local.get $964
   local.get $963
   i32.lt_s
   local.set $965
   local.get $965
   if
    local.get $961
    local.get $964
    call $~lib/typedarray/Uint16Array#__uget
    local.set $966
    local.get $962
    local.get $964
    call $~lib/array/Array<u16>#__uget
    local.set $967
    local.get $966
    local.get $967
    i32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $964
    i32.const 1
    i32.add
    local.set $964
    br $for-loop|102
   end
  end
  local.get $949
  local.get $946
  i32.const 6
  call $~lib/typedarray/Uint16Array#set<~lib/typedarray/Int64Array>
  local.get $949
  local.set $970
  global.get $~lib/memory/__stack_pointer
  i32.const 10
  i32.const 1
  i32.const 65
  i32.const 7568
  call $~lib/rt/__newArray
  local.tee $971
  i32.store $0 offset=1516
  local.get $970
  call $~lib/typedarray/Uint16Array#get:length
  local.set $972
  local.get $972
  local.get $971
  call $~lib/array/Array<u16>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $973
  loop $for-loop|103
   local.get $973
   local.get $972
   i32.lt_s
   local.set $974
   local.get $974
   if
    local.get $970
    local.get $973
    call $~lib/typedarray/Uint16Array#__uget
    local.set $975
    local.get $971
    local.get $973
    call $~lib/array/Array<u16>#__uget
    local.set $976
    local.get $975
    local.get $976
    i32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $973
    i32.const 1
    i32.add
    local.set $973
    br $for-loop|103
   end
  end
  i32.const 1
  drop
  local.get $949
  global.get $std/typedarray/setSource3
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  i32.const 2
  call $~lib/typedarray/Uint16Array#set<~lib/array/Array<f64>>
  local.get $949
  local.set $979
  global.get $~lib/memory/__stack_pointer
  i32.const 10
  i32.const 1
  i32.const 65
  i32.const 7616
  call $~lib/rt/__newArray
  local.tee $980
  i32.store $0 offset=1520
  local.get $979
  call $~lib/typedarray/Uint16Array#get:length
  local.set $981
  local.get $981
  local.get $980
  call $~lib/array/Array<u16>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $982
  loop $for-loop|104
   local.get $982
   local.get $981
   i32.lt_s
   local.set $983
   local.get $983
   if
    local.get $979
    local.get $982
    call $~lib/typedarray/Uint16Array#__uget
    local.set $984
    local.get $980
    local.get $982
    call $~lib/array/Array<u16>#__uget
    local.set $985
    local.get $984
    local.get $985
    i32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $982
    i32.const 1
    i32.add
    local.set $982
    br $for-loop|104
   end
  end
  local.get $949
  local.get $947
  i32.const 0
  call $~lib/typedarray/Uint16Array#set<~lib/typedarray/Uint8Array>
  local.get $949
  local.get $948
  i32.const 4
  call $~lib/typedarray/Uint16Array#set<~lib/typedarray/Int16Array>
  local.get $949
  global.get $std/typedarray/setSource7
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  i32.const 7
  call $~lib/typedarray/Uint16Array#set<~lib/array/Array<i8>>
  i32.const 0
  drop
  local.get $949
  local.set $988
  global.get $~lib/memory/__stack_pointer
  i32.const 10
  i32.const 1
  i32.const 65
  i32.const 7664
  call $~lib/rt/__newArray
  local.tee $989
  i32.store $0 offset=1524
  local.get $988
  call $~lib/typedarray/Uint16Array#get:length
  local.set $990
  local.get $990
  local.get $989
  call $~lib/array/Array<u16>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $991
  loop $for-loop|105
   local.get $991
   local.get $990
   i32.lt_s
   local.set $992
   local.get $992
   if
    local.get $988
    local.get $991
    call $~lib/typedarray/Uint16Array#__uget
    local.set $993
    local.get $989
    local.get $991
    call $~lib/array/Array<u16>#__uget
    local.set $994
    local.get $993
    local.get $994
    i32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $991
    i32.const 1
    i32.add
    local.set $991
    br $for-loop|105
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int64Array#constructor
  local.tee $995
  i32.store $0 offset=1528
  local.get $995
  i32.const 0
  i64.const 7
  call $~lib/typedarray/Int64Array#__set
  local.get $995
  i32.const 1
  i64.const 8
  call $~lib/typedarray/Int64Array#__set
  local.get $995
  i32.const 2
  i64.const 9
  call $~lib/typedarray/Int64Array#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  call $~lib/typedarray/Uint8Array#constructor
  local.tee $996
  i32.store $0 offset=1532
  local.get $996
  i32.const 0
  i32.const 100
  call $~lib/typedarray/Uint8Array#__set
  local.get $996
  i32.const 1
  i32.const 101
  call $~lib/typedarray/Uint8Array#__set
  local.get $996
  i32.const 2
  i32.const 102
  call $~lib/typedarray/Uint8Array#__set
  local.get $996
  i32.const 3
  i32.const 103
  call $~lib/typedarray/Uint8Array#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int16Array#constructor
  local.tee $997
  i32.store $0 offset=1536
  local.get $997
  i32.const 0
  i32.const 1000
  call $~lib/typedarray/Int16Array#__set
  local.get $997
  i32.const 1
  i32.const 1001
  call $~lib/typedarray/Int16Array#__set
  local.get $997
  i32.const 2
  i32.const 1002
  call $~lib/typedarray/Int16Array#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 10
  call $~lib/typedarray/Int32Array#constructor
  local.tee $998
  i32.store $0 offset=1540
  local.get $998
  global.get $std/typedarray/setSource1
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  i32.const 0
  call $~lib/typedarray/Int32Array#set<~lib/array/Array<i32>>
  local.get $998
  local.set $1001
  global.get $~lib/memory/__stack_pointer
  i32.const 10
  i32.const 2
  i32.const 16
  i32.const 7712
  call $~lib/rt/__newArray
  local.tee $1002
  i32.store $0 offset=1544
  local.get $1001
  call $~lib/typedarray/Int32Array#get:length
  local.set $1003
  local.get $1003
  local.get $1002
  call $~lib/array/Array<i32>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $1004
  loop $for-loop|106
   local.get $1004
   local.get $1003
   i32.lt_s
   local.set $1005
   local.get $1005
   if
    local.get $1001
    local.get $1004
    call $~lib/typedarray/Int32Array#__uget
    local.set $1006
    local.get $1002
    local.get $1004
    call $~lib/array/Array<i32>#__uget
    local.set $1007
    local.get $1006
    local.get $1007
    i32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $1004
    i32.const 1
    i32.add
    local.set $1004
    br $for-loop|106
   end
  end
  local.get $998
  global.get $std/typedarray/setSource2
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  i32.const 3
  call $~lib/typedarray/Int32Array#set<~lib/array/Array<f32>>
  local.get $998
  local.set $1010
  global.get $~lib/memory/__stack_pointer
  i32.const 10
  i32.const 2
  i32.const 16
  i32.const 7776
  call $~lib/rt/__newArray
  local.tee $1011
  i32.store $0 offset=1548
  local.get $1010
  call $~lib/typedarray/Int32Array#get:length
  local.set $1012
  local.get $1012
  local.get $1011
  call $~lib/array/Array<i32>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $1013
  loop $for-loop|107
   local.get $1013
   local.get $1012
   i32.lt_s
   local.set $1014
   local.get $1014
   if
    local.get $1010
    local.get $1013
    call $~lib/typedarray/Int32Array#__uget
    local.set $1015
    local.get $1011
    local.get $1013
    call $~lib/array/Array<i32>#__uget
    local.set $1016
    local.get $1015
    local.get $1016
    i32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $1013
    i32.const 1
    i32.add
    local.set $1013
    br $for-loop|107
   end
  end
  local.get $998
  local.get $995
  i32.const 6
  call $~lib/typedarray/Int32Array#set<~lib/typedarray/Int64Array>
  local.get $998
  local.set $1019
  global.get $~lib/memory/__stack_pointer
  i32.const 10
  i32.const 2
  i32.const 16
  i32.const 7840
  call $~lib/rt/__newArray
  local.tee $1020
  i32.store $0 offset=1552
  local.get $1019
  call $~lib/typedarray/Int32Array#get:length
  local.set $1021
  local.get $1021
  local.get $1020
  call $~lib/array/Array<i32>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $1022
  loop $for-loop|108
   local.get $1022
   local.get $1021
   i32.lt_s
   local.set $1023
   local.get $1023
   if
    local.get $1019
    local.get $1022
    call $~lib/typedarray/Int32Array#__uget
    local.set $1024
    local.get $1020
    local.get $1022
    call $~lib/array/Array<i32>#__uget
    local.set $1025
    local.get $1024
    local.get $1025
    i32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $1022
    i32.const 1
    i32.add
    local.set $1022
    br $for-loop|108
   end
  end
  i32.const 1
  drop
  local.get $998
  global.get $std/typedarray/setSource3
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  i32.const 2
  call $~lib/typedarray/Int32Array#set<~lib/array/Array<f64>>
  local.get $998
  local.set $1028
  global.get $~lib/memory/__stack_pointer
  i32.const 10
  i32.const 2
  i32.const 16
  i32.const 7904
  call $~lib/rt/__newArray
  local.tee $1029
  i32.store $0 offset=1556
  local.get $1028
  call $~lib/typedarray/Int32Array#get:length
  local.set $1030
  local.get $1030
  local.get $1029
  call $~lib/array/Array<i32>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $1031
  loop $for-loop|109
   local.get $1031
   local.get $1030
   i32.lt_s
   local.set $1032
   local.get $1032
   if
    local.get $1028
    local.get $1031
    call $~lib/typedarray/Int32Array#__uget
    local.set $1033
    local.get $1029
    local.get $1031
    call $~lib/array/Array<i32>#__uget
    local.set $1034
    local.get $1033
    local.get $1034
    i32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $1031
    i32.const 1
    i32.add
    local.set $1031
    br $for-loop|109
   end
  end
  local.get $998
  local.get $996
  i32.const 0
  call $~lib/typedarray/Int32Array#set<~lib/typedarray/Uint8Array>
  local.get $998
  local.get $997
  i32.const 4
  call $~lib/typedarray/Int32Array#set<~lib/typedarray/Int16Array>
  local.get $998
  global.get $std/typedarray/setSource7
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  i32.const 7
  call $~lib/typedarray/Int32Array#set<~lib/array/Array<i8>>
  i32.const 0
  drop
  local.get $998
  local.set $1037
  global.get $~lib/memory/__stack_pointer
  i32.const 10
  i32.const 2
  i32.const 16
  i32.const 7968
  call $~lib/rt/__newArray
  local.tee $1038
  i32.store $0 offset=1560
  local.get $1037
  call $~lib/typedarray/Int32Array#get:length
  local.set $1039
  local.get $1039
  local.get $1038
  call $~lib/array/Array<i32>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $1040
  loop $for-loop|110
   local.get $1040
   local.get $1039
   i32.lt_s
   local.set $1041
   local.get $1041
   if
    local.get $1037
    local.get $1040
    call $~lib/typedarray/Int32Array#__uget
    local.set $1042
    local.get $1038
    local.get $1040
    call $~lib/array/Array<i32>#__uget
    local.set $1043
    local.get $1042
    local.get $1043
    i32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $1040
    i32.const 1
    i32.add
    local.set $1040
    br $for-loop|110
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int64Array#constructor
  local.tee $1044
  i32.store $0 offset=1564
  local.get $1044
  i32.const 0
  i64.const 7
  call $~lib/typedarray/Int64Array#__set
  local.get $1044
  i32.const 1
  i64.const 8
  call $~lib/typedarray/Int64Array#__set
  local.get $1044
  i32.const 2
  i64.const 9
  call $~lib/typedarray/Int64Array#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  call $~lib/typedarray/Uint8Array#constructor
  local.tee $1045
  i32.store $0 offset=1568
  local.get $1045
  i32.const 0
  i32.const 100
  call $~lib/typedarray/Uint8Array#__set
  local.get $1045
  i32.const 1
  i32.const 101
  call $~lib/typedarray/Uint8Array#__set
  local.get $1045
  i32.const 2
  i32.const 102
  call $~lib/typedarray/Uint8Array#__set
  local.get $1045
  i32.const 3
  i32.const 103
  call $~lib/typedarray/Uint8Array#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int16Array#constructor
  local.tee $1046
  i32.store $0 offset=1572
  local.get $1046
  i32.const 0
  i32.const 1000
  call $~lib/typedarray/Int16Array#__set
  local.get $1046
  i32.const 1
  i32.const 1001
  call $~lib/typedarray/Int16Array#__set
  local.get $1046
  i32.const 2
  i32.const 1002
  call $~lib/typedarray/Int16Array#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 10
  call $~lib/typedarray/Uint32Array#constructor
  local.tee $1047
  i32.store $0 offset=1576
  local.get $1047
  global.get $std/typedarray/setSource1
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  i32.const 0
  call $~lib/typedarray/Uint32Array#set<~lib/array/Array<i32>>
  local.get $1047
  local.set $1050
  global.get $~lib/memory/__stack_pointer
  i32.const 10
  i32.const 2
  i32.const 66
  i32.const 8032
  call $~lib/rt/__newArray
  local.tee $1051
  i32.store $0 offset=1580
  local.get $1050
  call $~lib/typedarray/Uint32Array#get:length
  local.set $1052
  local.get $1052
  local.get $1051
  call $~lib/array/Array<u32>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $1053
  loop $for-loop|111
   local.get $1053
   local.get $1052
   i32.lt_s
   local.set $1054
   local.get $1054
   if
    local.get $1050
    local.get $1053
    call $~lib/typedarray/Uint32Array#__uget
    local.set $1055
    local.get $1051
    local.get $1053
    call $~lib/array/Array<u32>#__uget
    local.set $1056
    local.get $1055
    local.get $1056
    i32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $1053
    i32.const 1
    i32.add
    local.set $1053
    br $for-loop|111
   end
  end
  local.get $1047
  global.get $std/typedarray/setSource2
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  i32.const 3
  call $~lib/typedarray/Uint32Array#set<~lib/array/Array<f32>>
  local.get $1047
  local.set $1059
  global.get $~lib/memory/__stack_pointer
  i32.const 10
  i32.const 2
  i32.const 66
  i32.const 8096
  call $~lib/rt/__newArray
  local.tee $1060
  i32.store $0 offset=1584
  local.get $1059
  call $~lib/typedarray/Uint32Array#get:length
  local.set $1061
  local.get $1061
  local.get $1060
  call $~lib/array/Array<u32>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $1062
  loop $for-loop|112
   local.get $1062
   local.get $1061
   i32.lt_s
   local.set $1063
   local.get $1063
   if
    local.get $1059
    local.get $1062
    call $~lib/typedarray/Uint32Array#__uget
    local.set $1064
    local.get $1060
    local.get $1062
    call $~lib/array/Array<u32>#__uget
    local.set $1065
    local.get $1064
    local.get $1065
    i32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $1062
    i32.const 1
    i32.add
    local.set $1062
    br $for-loop|112
   end
  end
  local.get $1047
  local.get $1044
  i32.const 6
  call $~lib/typedarray/Uint32Array#set<~lib/typedarray/Int64Array>
  local.get $1047
  local.set $1068
  global.get $~lib/memory/__stack_pointer
  i32.const 10
  i32.const 2
  i32.const 66
  i32.const 8160
  call $~lib/rt/__newArray
  local.tee $1069
  i32.store $0 offset=1588
  local.get $1068
  call $~lib/typedarray/Uint32Array#get:length
  local.set $1070
  local.get $1070
  local.get $1069
  call $~lib/array/Array<u32>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $1071
  loop $for-loop|113
   local.get $1071
   local.get $1070
   i32.lt_s
   local.set $1072
   local.get $1072
   if
    local.get $1068
    local.get $1071
    call $~lib/typedarray/Uint32Array#__uget
    local.set $1073
    local.get $1069
    local.get $1071
    call $~lib/array/Array<u32>#__uget
    local.set $1074
    local.get $1073
    local.get $1074
    i32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $1071
    i32.const 1
    i32.add
    local.set $1071
    br $for-loop|113
   end
  end
  i32.const 1
  drop
  local.get $1047
  global.get $std/typedarray/setSource3
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  i32.const 2
  call $~lib/typedarray/Uint32Array#set<~lib/array/Array<f64>>
  local.get $1047
  local.set $1077
  global.get $~lib/memory/__stack_pointer
  i32.const 10
  i32.const 2
  i32.const 66
  i32.const 8224
  call $~lib/rt/__newArray
  local.tee $1078
  i32.store $0 offset=1592
  local.get $1077
  call $~lib/typedarray/Uint32Array#get:length
  local.set $1079
  local.get $1079
  local.get $1078
  call $~lib/array/Array<u32>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $1080
  loop $for-loop|114
   local.get $1080
   local.get $1079
   i32.lt_s
   local.set $1081
   local.get $1081
   if
    local.get $1077
    local.get $1080
    call $~lib/typedarray/Uint32Array#__uget
    local.set $1082
    local.get $1078
    local.get $1080
    call $~lib/array/Array<u32>#__uget
    local.set $1083
    local.get $1082
    local.get $1083
    i32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $1080
    i32.const 1
    i32.add
    local.set $1080
    br $for-loop|114
   end
  end
  local.get $1047
  local.get $1045
  i32.const 0
  call $~lib/typedarray/Uint32Array#set<~lib/typedarray/Uint8Array>
  local.get $1047
  local.get $1046
  i32.const 4
  call $~lib/typedarray/Uint32Array#set<~lib/typedarray/Int16Array>
  local.get $1047
  global.get $std/typedarray/setSource7
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  i32.const 7
  call $~lib/typedarray/Uint32Array#set<~lib/array/Array<i8>>
  i32.const 0
  drop
  local.get $1047
  local.set $1086
  global.get $~lib/memory/__stack_pointer
  i32.const 10
  i32.const 2
  i32.const 66
  i32.const 8288
  call $~lib/rt/__newArray
  local.tee $1087
  i32.store $0 offset=1596
  local.get $1086
  call $~lib/typedarray/Uint32Array#get:length
  local.set $1088
  local.get $1088
  local.get $1087
  call $~lib/array/Array<u32>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $1089
  loop $for-loop|115
   local.get $1089
   local.get $1088
   i32.lt_s
   local.set $1090
   local.get $1090
   if
    local.get $1086
    local.get $1089
    call $~lib/typedarray/Uint32Array#__uget
    local.set $1091
    local.get $1087
    local.get $1089
    call $~lib/array/Array<u32>#__uget
    local.set $1092
    local.get $1091
    local.get $1092
    i32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $1089
    i32.const 1
    i32.add
    local.set $1089
    br $for-loop|115
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int64Array#constructor
  local.tee $1093
  i32.store $0 offset=1600
  local.get $1093
  i32.const 0
  i64.const 7
  call $~lib/typedarray/Int64Array#__set
  local.get $1093
  i32.const 1
  i64.const 8
  call $~lib/typedarray/Int64Array#__set
  local.get $1093
  i32.const 2
  i64.const 9
  call $~lib/typedarray/Int64Array#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  call $~lib/typedarray/Uint8Array#constructor
  local.tee $1094
  i32.store $0 offset=1604
  local.get $1094
  i32.const 0
  i32.const 100
  call $~lib/typedarray/Uint8Array#__set
  local.get $1094
  i32.const 1
  i32.const 101
  call $~lib/typedarray/Uint8Array#__set
  local.get $1094
  i32.const 2
  i32.const 102
  call $~lib/typedarray/Uint8Array#__set
  local.get $1094
  i32.const 3
  i32.const 103
  call $~lib/typedarray/Uint8Array#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int16Array#constructor
  local.tee $1095
  i32.store $0 offset=1608
  local.get $1095
  i32.const 0
  i32.const 1000
  call $~lib/typedarray/Int16Array#__set
  local.get $1095
  i32.const 1
  i32.const 1001
  call $~lib/typedarray/Int16Array#__set
  local.get $1095
  i32.const 2
  i32.const 1002
  call $~lib/typedarray/Int16Array#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 10
  call $~lib/typedarray/Int64Array#constructor
  local.tee $1096
  i32.store $0 offset=1612
  local.get $1096
  global.get $std/typedarray/setSource1
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  i32.const 0
  call $~lib/typedarray/Int64Array#set<~lib/array/Array<i32>>
  local.get $1096
  local.set $1099
  global.get $~lib/memory/__stack_pointer
  i32.const 10
  i32.const 3
  i32.const 67
  i32.const 8352
  call $~lib/rt/__newArray
  local.tee $1100
  i32.store $0 offset=1616
  local.get $1099
  call $~lib/typedarray/Int64Array#get:length
  local.set $1101
  local.get $1101
  local.get $1100
  call $~lib/array/Array<i64>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $1102
  loop $for-loop|116
   local.get $1102
   local.get $1101
   i32.lt_s
   local.set $1103
   local.get $1103
   if
    local.get $1099
    local.get $1102
    call $~lib/typedarray/Int64Array#__uget
    local.set $1104
    local.get $1100
    local.get $1102
    call $~lib/array/Array<i64>#__uget
    local.set $1105
    local.get $1104
    local.get $1105
    i64.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $1102
    i32.const 1
    i32.add
    local.set $1102
    br $for-loop|116
   end
  end
  local.get $1096
  global.get $std/typedarray/setSource2
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  i32.const 3
  call $~lib/typedarray/Int64Array#set<~lib/array/Array<f32>>
  local.get $1096
  local.set $1108
  global.get $~lib/memory/__stack_pointer
  i32.const 10
  i32.const 3
  i32.const 67
  i32.const 8464
  call $~lib/rt/__newArray
  local.tee $1109
  i32.store $0 offset=1620
  local.get $1108
  call $~lib/typedarray/Int64Array#get:length
  local.set $1110
  local.get $1110
  local.get $1109
  call $~lib/array/Array<i64>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $1111
  loop $for-loop|117
   local.get $1111
   local.get $1110
   i32.lt_s
   local.set $1112
   local.get $1112
   if
    local.get $1108
    local.get $1111
    call $~lib/typedarray/Int64Array#__uget
    local.set $1113
    local.get $1109
    local.get $1111
    call $~lib/array/Array<i64>#__uget
    local.set $1114
    local.get $1113
    local.get $1114
    i64.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $1111
    i32.const 1
    i32.add
    local.set $1111
    br $for-loop|117
   end
  end
  local.get $1096
  local.get $1093
  i32.const 6
  call $~lib/typedarray/Int64Array#set<~lib/typedarray/Int64Array>
  local.get $1096
  local.set $1117
  global.get $~lib/memory/__stack_pointer
  i32.const 10
  i32.const 3
  i32.const 67
  i32.const 8576
  call $~lib/rt/__newArray
  local.tee $1118
  i32.store $0 offset=1624
  local.get $1117
  call $~lib/typedarray/Int64Array#get:length
  local.set $1119
  local.get $1119
  local.get $1118
  call $~lib/array/Array<i64>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $1120
  loop $for-loop|118
   local.get $1120
   local.get $1119
   i32.lt_s
   local.set $1121
   local.get $1121
   if
    local.get $1117
    local.get $1120
    call $~lib/typedarray/Int64Array#__uget
    local.set $1122
    local.get $1118
    local.get $1120
    call $~lib/array/Array<i64>#__uget
    local.set $1123
    local.get $1122
    local.get $1123
    i64.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $1120
    i32.const 1
    i32.add
    local.set $1120
    br $for-loop|118
   end
  end
  i32.const 1
  drop
  local.get $1096
  global.get $std/typedarray/setSource3
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  i32.const 2
  call $~lib/typedarray/Int64Array#set<~lib/array/Array<f64>>
  local.get $1096
  local.set $1126
  global.get $~lib/memory/__stack_pointer
  i32.const 10
  i32.const 3
  i32.const 67
  i32.const 8688
  call $~lib/rt/__newArray
  local.tee $1127
  i32.store $0 offset=1628
  local.get $1126
  call $~lib/typedarray/Int64Array#get:length
  local.set $1128
  local.get $1128
  local.get $1127
  call $~lib/array/Array<i64>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $1129
  loop $for-loop|119
   local.get $1129
   local.get $1128
   i32.lt_s
   local.set $1130
   local.get $1130
   if
    local.get $1126
    local.get $1129
    call $~lib/typedarray/Int64Array#__uget
    local.set $1131
    local.get $1127
    local.get $1129
    call $~lib/array/Array<i64>#__uget
    local.set $1132
    local.get $1131
    local.get $1132
    i64.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $1129
    i32.const 1
    i32.add
    local.set $1129
    br $for-loop|119
   end
  end
  local.get $1096
  local.get $1094
  i32.const 0
  call $~lib/typedarray/Int64Array#set<~lib/typedarray/Uint8Array>
  local.get $1096
  local.get $1095
  i32.const 4
  call $~lib/typedarray/Int64Array#set<~lib/typedarray/Int16Array>
  local.get $1096
  global.get $std/typedarray/setSource7
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  i32.const 7
  call $~lib/typedarray/Int64Array#set<~lib/array/Array<i8>>
  i32.const 0
  drop
  local.get $1096
  local.set $1135
  global.get $~lib/memory/__stack_pointer
  i32.const 10
  i32.const 3
  i32.const 67
  i32.const 8800
  call $~lib/rt/__newArray
  local.tee $1136
  i32.store $0 offset=1632
  local.get $1135
  call $~lib/typedarray/Int64Array#get:length
  local.set $1137
  local.get $1137
  local.get $1136
  call $~lib/array/Array<i64>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $1138
  loop $for-loop|120
   local.get $1138
   local.get $1137
   i32.lt_s
   local.set $1139
   local.get $1139
   if
    local.get $1135
    local.get $1138
    call $~lib/typedarray/Int64Array#__uget
    local.set $1140
    local.get $1136
    local.get $1138
    call $~lib/array/Array<i64>#__uget
    local.set $1141
    local.get $1140
    local.get $1141
    i64.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $1138
    i32.const 1
    i32.add
    local.set $1138
    br $for-loop|120
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int64Array#constructor
  local.tee $1142
  i32.store $0 offset=1636
  local.get $1142
  i32.const 0
  i64.const 7
  call $~lib/typedarray/Int64Array#__set
  local.get $1142
  i32.const 1
  i64.const 8
  call $~lib/typedarray/Int64Array#__set
  local.get $1142
  i32.const 2
  i64.const 9
  call $~lib/typedarray/Int64Array#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  call $~lib/typedarray/Uint8Array#constructor
  local.tee $1143
  i32.store $0 offset=1640
  local.get $1143
  i32.const 0
  i32.const 100
  call $~lib/typedarray/Uint8Array#__set
  local.get $1143
  i32.const 1
  i32.const 101
  call $~lib/typedarray/Uint8Array#__set
  local.get $1143
  i32.const 2
  i32.const 102
  call $~lib/typedarray/Uint8Array#__set
  local.get $1143
  i32.const 3
  i32.const 103
  call $~lib/typedarray/Uint8Array#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int16Array#constructor
  local.tee $1144
  i32.store $0 offset=1644
  local.get $1144
  i32.const 0
  i32.const 1000
  call $~lib/typedarray/Int16Array#__set
  local.get $1144
  i32.const 1
  i32.const 1001
  call $~lib/typedarray/Int16Array#__set
  local.get $1144
  i32.const 2
  i32.const 1002
  call $~lib/typedarray/Int16Array#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 10
  call $~lib/typedarray/Uint64Array#constructor
  local.tee $1145
  i32.store $0 offset=1648
  local.get $1145
  global.get $std/typedarray/setSource1
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  i32.const 0
  call $~lib/typedarray/Uint64Array#set<~lib/array/Array<i32>>
  local.get $1145
  local.set $1148
  global.get $~lib/memory/__stack_pointer
  i32.const 10
  i32.const 3
  i32.const 68
  i32.const 8912
  call $~lib/rt/__newArray
  local.tee $1149
  i32.store $0 offset=1652
  local.get $1148
  call $~lib/typedarray/Uint64Array#get:length
  local.set $1150
  local.get $1150
  local.get $1149
  call $~lib/array/Array<u64>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $1151
  loop $for-loop|121
   local.get $1151
   local.get $1150
   i32.lt_s
   local.set $1152
   local.get $1152
   if
    local.get $1148
    local.get $1151
    call $~lib/typedarray/Uint64Array#__uget
    local.set $1153
    local.get $1149
    local.get $1151
    call $~lib/array/Array<u64>#__uget
    local.set $1154
    local.get $1153
    local.get $1154
    i64.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $1151
    i32.const 1
    i32.add
    local.set $1151
    br $for-loop|121
   end
  end
  local.get $1145
  global.get $std/typedarray/setSource2
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  i32.const 3
  call $~lib/typedarray/Uint64Array#set<~lib/array/Array<f32>>
  local.get $1145
  local.set $1157
  global.get $~lib/memory/__stack_pointer
  i32.const 10
  i32.const 3
  i32.const 68
  i32.const 9024
  call $~lib/rt/__newArray
  local.tee $1158
  i32.store $0 offset=1656
  local.get $1157
  call $~lib/typedarray/Uint64Array#get:length
  local.set $1159
  local.get $1159
  local.get $1158
  call $~lib/array/Array<u64>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $1160
  loop $for-loop|122
   local.get $1160
   local.get $1159
   i32.lt_s
   local.set $1161
   local.get $1161
   if
    local.get $1157
    local.get $1160
    call $~lib/typedarray/Uint64Array#__uget
    local.set $1162
    local.get $1158
    local.get $1160
    call $~lib/array/Array<u64>#__uget
    local.set $1163
    local.get $1162
    local.get $1163
    i64.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $1160
    i32.const 1
    i32.add
    local.set $1160
    br $for-loop|122
   end
  end
  local.get $1145
  local.get $1142
  i32.const 6
  call $~lib/typedarray/Uint64Array#set<~lib/typedarray/Int64Array>
  local.get $1145
  local.set $1166
  global.get $~lib/memory/__stack_pointer
  i32.const 10
  i32.const 3
  i32.const 68
  i32.const 9136
  call $~lib/rt/__newArray
  local.tee $1167
  i32.store $0 offset=1660
  local.get $1166
  call $~lib/typedarray/Uint64Array#get:length
  local.set $1168
  local.get $1168
  local.get $1167
  call $~lib/array/Array<u64>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $1169
  loop $for-loop|123
   local.get $1169
   local.get $1168
   i32.lt_s
   local.set $1170
   local.get $1170
   if
    local.get $1166
    local.get $1169
    call $~lib/typedarray/Uint64Array#__uget
    local.set $1171
    local.get $1167
    local.get $1169
    call $~lib/array/Array<u64>#__uget
    local.set $1172
    local.get $1171
    local.get $1172
    i64.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $1169
    i32.const 1
    i32.add
    local.set $1169
    br $for-loop|123
   end
  end
  i32.const 1
  drop
  local.get $1145
  global.get $std/typedarray/setSource3
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  i32.const 2
  call $~lib/typedarray/Uint64Array#set<~lib/array/Array<f64>>
  local.get $1145
  local.set $1175
  global.get $~lib/memory/__stack_pointer
  i32.const 10
  i32.const 3
  i32.const 68
  i32.const 9248
  call $~lib/rt/__newArray
  local.tee $1176
  i32.store $0 offset=1664
  local.get $1175
  call $~lib/typedarray/Uint64Array#get:length
  local.set $1177
  local.get $1177
  local.get $1176
  call $~lib/array/Array<u64>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $1178
  loop $for-loop|124
   local.get $1178
   local.get $1177
   i32.lt_s
   local.set $1179
   local.get $1179
   if
    local.get $1175
    local.get $1178
    call $~lib/typedarray/Uint64Array#__uget
    local.set $1180
    local.get $1176
    local.get $1178
    call $~lib/array/Array<u64>#__uget
    local.set $1181
    local.get $1180
    local.get $1181
    i64.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $1178
    i32.const 1
    i32.add
    local.set $1178
    br $for-loop|124
   end
  end
  local.get $1145
  local.get $1143
  i32.const 0
  call $~lib/typedarray/Uint64Array#set<~lib/typedarray/Uint8Array>
  local.get $1145
  local.get $1144
  i32.const 4
  call $~lib/typedarray/Uint64Array#set<~lib/typedarray/Int16Array>
  local.get $1145
  global.get $std/typedarray/setSource7
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  i32.const 7
  call $~lib/typedarray/Uint64Array#set<~lib/array/Array<i8>>
  i32.const 0
  drop
  local.get $1145
  local.set $1184
  global.get $~lib/memory/__stack_pointer
  i32.const 10
  i32.const 3
  i32.const 68
  i32.const 9360
  call $~lib/rt/__newArray
  local.tee $1185
  i32.store $0 offset=1668
  local.get $1184
  call $~lib/typedarray/Uint64Array#get:length
  local.set $1186
  local.get $1186
  local.get $1185
  call $~lib/array/Array<u64>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $1187
  loop $for-loop|125
   local.get $1187
   local.get $1186
   i32.lt_s
   local.set $1188
   local.get $1188
   if
    local.get $1184
    local.get $1187
    call $~lib/typedarray/Uint64Array#__uget
    local.set $1189
    local.get $1185
    local.get $1187
    call $~lib/array/Array<u64>#__uget
    local.set $1190
    local.get $1189
    local.get $1190
    i64.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $1187
    i32.const 1
    i32.add
    local.set $1187
    br $for-loop|125
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int64Array#constructor
  local.tee $1191
  i32.store $0 offset=1672
  local.get $1191
  i32.const 0
  i64.const 7
  call $~lib/typedarray/Int64Array#__set
  local.get $1191
  i32.const 1
  i64.const 8
  call $~lib/typedarray/Int64Array#__set
  local.get $1191
  i32.const 2
  i64.const 9
  call $~lib/typedarray/Int64Array#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  call $~lib/typedarray/Uint8Array#constructor
  local.tee $1192
  i32.store $0 offset=1676
  local.get $1192
  i32.const 0
  i32.const 100
  call $~lib/typedarray/Uint8Array#__set
  local.get $1192
  i32.const 1
  i32.const 101
  call $~lib/typedarray/Uint8Array#__set
  local.get $1192
  i32.const 2
  i32.const 102
  call $~lib/typedarray/Uint8Array#__set
  local.get $1192
  i32.const 3
  i32.const 103
  call $~lib/typedarray/Uint8Array#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int16Array#constructor
  local.tee $1193
  i32.store $0 offset=1680
  local.get $1193
  i32.const 0
  i32.const 1000
  call $~lib/typedarray/Int16Array#__set
  local.get $1193
  i32.const 1
  i32.const 1001
  call $~lib/typedarray/Int16Array#__set
  local.get $1193
  i32.const 2
  i32.const 1002
  call $~lib/typedarray/Int16Array#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 10
  call $~lib/typedarray/Float32Array#constructor
  local.tee $1194
  i32.store $0 offset=1684
  local.get $1194
  global.get $std/typedarray/setSource1
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  i32.const 0
  call $~lib/typedarray/Float32Array#set<~lib/array/Array<i32>>
  local.get $1194
  local.set $1197
  global.get $~lib/memory/__stack_pointer
  i32.const 10
  i32.const 2
  i32.const 61
  i32.const 9472
  call $~lib/rt/__newArray
  local.tee $1198
  i32.store $0 offset=1688
  local.get $1197
  call $~lib/typedarray/Float32Array#get:length
  local.set $1199
  local.get $1199
  local.get $1198
  call $~lib/array/Array<f32>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $1200
  loop $for-loop|126
   local.get $1200
   local.get $1199
   i32.lt_s
   local.set $1201
   local.get $1201
   if
    local.get $1197
    local.get $1200
    call $~lib/typedarray/Float32Array#__uget
    local.set $1202
    local.get $1198
    local.get $1200
    call $~lib/array/Array<f32>#__uget
    local.set $1203
    local.get $1202
    local.get $1203
    f32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $1200
    i32.const 1
    i32.add
    local.set $1200
    br $for-loop|126
   end
  end
  local.get $1194
  global.get $std/typedarray/setSource2
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  i32.const 3
  call $~lib/typedarray/Float32Array#set<~lib/array/Array<f32>>
  local.get $1194
  local.set $1206
  global.get $~lib/memory/__stack_pointer
  i32.const 10
  i32.const 2
  i32.const 61
  i32.const 9536
  call $~lib/rt/__newArray
  local.tee $1207
  i32.store $0 offset=1692
  local.get $1206
  call $~lib/typedarray/Float32Array#get:length
  local.set $1208
  local.get $1208
  local.get $1207
  call $~lib/array/Array<f32>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $1209
  loop $for-loop|127
   local.get $1209
   local.get $1208
   i32.lt_s
   local.set $1210
   local.get $1210
   if
    local.get $1206
    local.get $1209
    call $~lib/typedarray/Float32Array#__uget
    local.set $1211
    local.get $1207
    local.get $1209
    call $~lib/array/Array<f32>#__uget
    local.set $1212
    local.get $1211
    local.get $1212
    f32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $1209
    i32.const 1
    i32.add
    local.set $1209
    br $for-loop|127
   end
  end
  local.get $1194
  local.get $1191
  i32.const 6
  call $~lib/typedarray/Float32Array#set<~lib/typedarray/Int64Array>
  local.get $1194
  local.set $1215
  global.get $~lib/memory/__stack_pointer
  i32.const 10
  i32.const 2
  i32.const 61
  i32.const 9600
  call $~lib/rt/__newArray
  local.tee $1216
  i32.store $0 offset=1696
  local.get $1215
  call $~lib/typedarray/Float32Array#get:length
  local.set $1217
  local.get $1217
  local.get $1216
  call $~lib/array/Array<f32>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $1218
  loop $for-loop|128
   local.get $1218
   local.get $1217
   i32.lt_s
   local.set $1219
   local.get $1219
   if
    local.get $1215
    local.get $1218
    call $~lib/typedarray/Float32Array#__uget
    local.set $1220
    local.get $1216
    local.get $1218
    call $~lib/array/Array<f32>#__uget
    local.set $1221
    local.get $1220
    local.get $1221
    f32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $1218
    i32.const 1
    i32.add
    local.set $1218
    br $for-loop|128
   end
  end
  i32.const 0
  drop
  local.get $1194
  local.get $1192
  i32.const 0
  call $~lib/typedarray/Float32Array#set<~lib/typedarray/Uint8Array>
  local.get $1194
  local.get $1193
  i32.const 4
  call $~lib/typedarray/Float32Array#set<~lib/typedarray/Int16Array>
  local.get $1194
  global.get $std/typedarray/setSource7
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  i32.const 7
  call $~lib/typedarray/Float32Array#set<~lib/array/Array<i8>>
  i32.const 0
  drop
  local.get $1194
  local.set $1224
  global.get $~lib/memory/__stack_pointer
  i32.const 10
  i32.const 2
  i32.const 61
  i32.const 9664
  call $~lib/rt/__newArray
  local.tee $1225
  i32.store $0 offset=1700
  local.get $1224
  call $~lib/typedarray/Float32Array#get:length
  local.set $1226
  local.get $1226
  local.get $1225
  call $~lib/array/Array<f32>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $1227
  loop $for-loop|129
   local.get $1227
   local.get $1226
   i32.lt_s
   local.set $1228
   local.get $1228
   if
    local.get $1224
    local.get $1227
    call $~lib/typedarray/Float32Array#__uget
    local.set $1229
    local.get $1225
    local.get $1227
    call $~lib/array/Array<f32>#__uget
    local.set $1230
    local.get $1229
    local.get $1230
    f32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $1227
    i32.const 1
    i32.add
    local.set $1227
    br $for-loop|129
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int64Array#constructor
  local.tee $1231
  i32.store $0 offset=1704
  local.get $1231
  i32.const 0
  i64.const 7
  call $~lib/typedarray/Int64Array#__set
  local.get $1231
  i32.const 1
  i64.const 8
  call $~lib/typedarray/Int64Array#__set
  local.get $1231
  i32.const 2
  i64.const 9
  call $~lib/typedarray/Int64Array#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  call $~lib/typedarray/Uint8Array#constructor
  local.tee $1232
  i32.store $0 offset=1708
  local.get $1232
  i32.const 0
  i32.const 100
  call $~lib/typedarray/Uint8Array#__set
  local.get $1232
  i32.const 1
  i32.const 101
  call $~lib/typedarray/Uint8Array#__set
  local.get $1232
  i32.const 2
  i32.const 102
  call $~lib/typedarray/Uint8Array#__set
  local.get $1232
  i32.const 3
  i32.const 103
  call $~lib/typedarray/Uint8Array#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int16Array#constructor
  local.tee $1233
  i32.store $0 offset=1712
  local.get $1233
  i32.const 0
  i32.const 1000
  call $~lib/typedarray/Int16Array#__set
  local.get $1233
  i32.const 1
  i32.const 1001
  call $~lib/typedarray/Int16Array#__set
  local.get $1233
  i32.const 2
  i32.const 1002
  call $~lib/typedarray/Int16Array#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 10
  call $~lib/typedarray/Float64Array#constructor
  local.tee $1234
  i32.store $0 offset=1716
  local.get $1234
  global.get $std/typedarray/setSource1
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  i32.const 0
  call $~lib/typedarray/Float64Array#set<~lib/array/Array<i32>>
  local.get $1234
  local.set $1237
  global.get $~lib/memory/__stack_pointer
  i32.const 10
  i32.const 3
  i32.const 62
  i32.const 9728
  call $~lib/rt/__newArray
  local.tee $1238
  i32.store $0 offset=1720
  local.get $1237
  call $~lib/typedarray/Float64Array#get:length
  local.set $1239
  local.get $1239
  local.get $1238
  call $~lib/array/Array<f64>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $1240
  loop $for-loop|130
   local.get $1240
   local.get $1239
   i32.lt_s
   local.set $1241
   local.get $1241
   if
    local.get $1237
    local.get $1240
    call $~lib/typedarray/Float64Array#__uget
    local.set $1242
    local.get $1238
    local.get $1240
    call $~lib/array/Array<f64>#__uget
    local.set $1243
    local.get $1242
    local.get $1243
    f64.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $1240
    i32.const 1
    i32.add
    local.set $1240
    br $for-loop|130
   end
  end
  local.get $1234
  global.get $std/typedarray/setSource2
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  i32.const 3
  call $~lib/typedarray/Float64Array#set<~lib/array/Array<f32>>
  local.get $1234
  local.set $1246
  global.get $~lib/memory/__stack_pointer
  i32.const 10
  i32.const 3
  i32.const 62
  i32.const 9840
  call $~lib/rt/__newArray
  local.tee $1247
  i32.store $0 offset=1724
  local.get $1246
  call $~lib/typedarray/Float64Array#get:length
  local.set $1248
  local.get $1248
  local.get $1247
  call $~lib/array/Array<f64>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $1249
  loop $for-loop|131
   local.get $1249
   local.get $1248
   i32.lt_s
   local.set $1250
   local.get $1250
   if
    local.get $1246
    local.get $1249
    call $~lib/typedarray/Float64Array#__uget
    local.set $1251
    local.get $1247
    local.get $1249
    call $~lib/array/Array<f64>#__uget
    local.set $1252
    local.get $1251
    local.get $1252
    f64.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $1249
    i32.const 1
    i32.add
    local.set $1249
    br $for-loop|131
   end
  end
  local.get $1234
  local.get $1231
  i32.const 6
  call $~lib/typedarray/Float64Array#set<~lib/typedarray/Int64Array>
  local.get $1234
  local.set $1255
  global.get $~lib/memory/__stack_pointer
  i32.const 10
  i32.const 3
  i32.const 62
  i32.const 9952
  call $~lib/rt/__newArray
  local.tee $1256
  i32.store $0 offset=1728
  local.get $1255
  call $~lib/typedarray/Float64Array#get:length
  local.set $1257
  local.get $1257
  local.get $1256
  call $~lib/array/Array<f64>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $1258
  loop $for-loop|132
   local.get $1258
   local.get $1257
   i32.lt_s
   local.set $1259
   local.get $1259
   if
    local.get $1255
    local.get $1258
    call $~lib/typedarray/Float64Array#__uget
    local.set $1260
    local.get $1256
    local.get $1258
    call $~lib/array/Array<f64>#__uget
    local.set $1261
    local.get $1260
    local.get $1261
    f64.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $1258
    i32.const 1
    i32.add
    local.set $1258
    br $for-loop|132
   end
  end
  i32.const 0
  drop
  local.get $1234
  local.get $1232
  i32.const 0
  call $~lib/typedarray/Float64Array#set<~lib/typedarray/Uint8Array>
  local.get $1234
  local.get $1233
  i32.const 4
  call $~lib/typedarray/Float64Array#set<~lib/typedarray/Int16Array>
  local.get $1234
  global.get $std/typedarray/setSource7
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  i32.const 7
  call $~lib/typedarray/Float64Array#set<~lib/array/Array<i8>>
  i32.const 0
  drop
  local.get $1234
  local.set $1264
  global.get $~lib/memory/__stack_pointer
  i32.const 10
  i32.const 3
  i32.const 62
  i32.const 10064
  call $~lib/rt/__newArray
  local.tee $1265
  i32.store $0 offset=1732
  local.get $1264
  call $~lib/typedarray/Float64Array#get:length
  local.set $1266
  local.get $1266
  local.get $1265
  call $~lib/array/Array<f64>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $1267
  loop $for-loop|133
   local.get $1267
   local.get $1266
   i32.lt_s
   local.set $1268
   local.get $1268
   if
    local.get $1264
    local.get $1267
    call $~lib/typedarray/Float64Array#__uget
    local.set $1269
    local.get $1265
    local.get $1267
    call $~lib/array/Array<f64>#__uget
    local.set $1270
    local.get $1269
    local.get $1270
    f64.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $1267
    i32.const 1
    i32.add
    local.set $1267
    br $for-loop|133
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 10
  call $~lib/typedarray/Uint8ClampedArray#constructor
  local.tee $1271
  i32.store $0 offset=1736
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Float32Array#constructor
  local.tee $1272
  i32.store $0 offset=1740
  local.get $1272
  i32.const 0
  f32.const 400
  call $~lib/typedarray/Float32Array#__set
  local.get $1272
  i32.const 1
  f32.const nan:0x400000
  call $~lib/typedarray/Float32Array#__set
  local.get $1272
  i32.const 2
  f32.const inf
  call $~lib/typedarray/Float32Array#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  call $~lib/typedarray/Int64Array#constructor
  local.tee $1273
  i32.store $0 offset=1744
  local.get $1273
  i32.const 0
  i64.const -10
  call $~lib/typedarray/Int64Array#__set
  local.get $1273
  i32.const 1
  i64.const 100
  call $~lib/typedarray/Int64Array#__set
  local.get $1273
  i32.const 2
  i64.const 10
  call $~lib/typedarray/Int64Array#__set
  local.get $1273
  i32.const 3
  i64.const 300
  call $~lib/typedarray/Int64Array#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 2
  call $~lib/typedarray/Int32Array#constructor
  local.tee $1274
  i32.store $0 offset=1748
  local.get $1274
  i32.const 0
  i32.const 300
  call $~lib/typedarray/Int32Array#__set
  local.get $1274
  i32.const 1
  i32.const -1
  call $~lib/typedarray/Int32Array#__set
  local.get $1271
  local.get $1272
  i32.const 1
  call $~lib/typedarray/Uint8ClampedArray#set<~lib/typedarray/Float32Array>
  local.get $1271
  local.get $1273
  i32.const 4
  call $~lib/typedarray/Uint8ClampedArray#set<~lib/typedarray/Int64Array>
  local.get $1271
  local.get $1274
  i32.const 8
  call $~lib/typedarray/Uint8ClampedArray#set<~lib/typedarray/Int32Array>
  local.get $1271
  local.set $1277
  global.get $~lib/memory/__stack_pointer
  i32.const 10
  i32.const 0
  i32.const 63
  i32.const 10176
  call $~lib/rt/__newArray
  local.tee $1278
  i32.store $0 offset=1752
  local.get $1277
  call $~lib/typedarray/Uint8ClampedArray#get:length
  local.set $1279
  local.get $1279
  local.get $1278
  call $~lib/array/Array<u8>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $1280
  loop $for-loop|134
   local.get $1280
   local.get $1279
   i32.lt_s
   local.set $1281
   local.get $1281
   if
    local.get $1277
    local.get $1280
    call $~lib/typedarray/Uint8ClampedArray#__uget
    local.set $1282
    local.get $1278
    local.get $1280
    call $~lib/array/Array<u8>#__uget
    local.set $1283
    local.get $1282
    local.get $1283
    i32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $1280
    i32.const 1
    i32.add
    local.set $1280
    br $for-loop|134
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  call $~lib/typedarray/Uint32Array#constructor
  local.tee $1284
  i32.store $0 offset=1756
  local.get $1284
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint32Array#__set
  local.get $1284
  i32.const 1
  i32.const 300
  call $~lib/typedarray/Uint32Array#__set
  local.get $1284
  i32.const 2
  i32.const 100
  call $~lib/typedarray/Uint32Array#__set
  local.get $1284
  i32.const 3
  i32.const -1
  call $~lib/typedarray/Uint32Array#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  call $~lib/typedarray/Int16Array#constructor
  local.tee $1285
  i32.store $0 offset=1760
  local.get $1285
  i32.const 0
  i32.const -10
  call $~lib/typedarray/Int16Array#__set
  local.get $1285
  i32.const 1
  i32.const 100
  call $~lib/typedarray/Int16Array#__set
  local.get $1285
  i32.const 2
  i32.const 10
  call $~lib/typedarray/Int16Array#__set
  local.get $1285
  i32.const 3
  i32.const 300
  call $~lib/typedarray/Int16Array#__set
  local.get $1271
  local.get $1284
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#set<~lib/typedarray/Uint32Array>
  local.get $1271
  local.get $1285
  i32.const 5
  call $~lib/typedarray/Uint8ClampedArray#set<~lib/typedarray/Int16Array>
  local.get $1271
  local.set $1288
  global.get $~lib/memory/__stack_pointer
  i32.const 10
  i32.const 0
  i32.const 63
  i32.const 10208
  call $~lib/rt/__newArray
  local.tee $1289
  i32.store $0 offset=1764
  local.get $1288
  call $~lib/typedarray/Uint8ClampedArray#get:length
  local.set $1290
  local.get $1290
  local.get $1289
  call $~lib/array/Array<u8>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $1291
  loop $for-loop|135
   local.get $1291
   local.get $1290
   i32.lt_s
   local.set $1292
   local.get $1292
   if
    local.get $1288
    local.get $1291
    call $~lib/typedarray/Uint8ClampedArray#__uget
    local.set $1293
    local.get $1289
    local.get $1291
    call $~lib/array/Array<u8>#__uget
    local.set $1294
    local.get $1293
    local.get $1294
    i32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $1291
    i32.const 1
    i32.add
    local.set $1291
    br $for-loop|135
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int8Array#constructor
  local.tee $1295
  i32.store $0 offset=1768
  local.get $1295
  i32.const 2
  i32.const 1
  call $~lib/typedarray/Int8Array#__set
  local.get $1295
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int8Array#__set
  local.get $1295
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int8Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $1295
  i32.const 0
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Int8Array#sort@varargs
  local.tee $1296
  i32.store $0 offset=1772
  local.get $1296
  i32.const 0
  call $~lib/typedarray/Int8Array#__get
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $1296
  i32.const 1
  call $~lib/typedarray/Int8Array#__get
  i32.const 2
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $1296
  i32.const 2
  call $~lib/typedarray/Int8Array#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $1296
  i32.const 10272
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Int8Array#sort
  drop
  local.get $1296
  i32.const 0
  call $~lib/typedarray/Int8Array#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $1296
  i32.const 1
  call $~lib/typedarray/Int8Array#__get
  i32.const 2
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $1296
  i32.const 2
  call $~lib/typedarray/Int8Array#__get
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint8Array#constructor
  local.tee $1297
  i32.store $0 offset=1776
  local.get $1297
  i32.const 2
  i32.const 1
  call $~lib/typedarray/Uint8Array#__set
  local.get $1297
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint8Array#__set
  local.get $1297
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint8Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $1297
  i32.const 0
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint8Array#sort@varargs
  local.tee $1298
  i32.store $0 offset=1780
  local.get $1298
  i32.const 0
  call $~lib/typedarray/Uint8Array#__get
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $1298
  i32.const 1
  call $~lib/typedarray/Uint8Array#__get
  i32.const 2
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $1298
  i32.const 2
  call $~lib/typedarray/Uint8Array#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $1298
  i32.const 10336
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Uint8Array#sort
  drop
  local.get $1298
  i32.const 0
  call $~lib/typedarray/Uint8Array#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $1298
  i32.const 1
  call $~lib/typedarray/Uint8Array#__get
  i32.const 2
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $1298
  i32.const 2
  call $~lib/typedarray/Uint8Array#__get
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint8ClampedArray#constructor
  local.tee $1299
  i32.store $0 offset=1784
  local.get $1299
  i32.const 2
  i32.const 1
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $1299
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $1299
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint8ClampedArray#__set
  global.get $~lib/memory/__stack_pointer
  local.get $1299
  i32.const 0
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#sort@varargs
  local.tee $1300
  i32.store $0 offset=1788
  local.get $1300
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#__get
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $1300
  i32.const 1
  call $~lib/typedarray/Uint8ClampedArray#__get
  i32.const 2
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $1300
  i32.const 2
  call $~lib/typedarray/Uint8ClampedArray#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $1300
  i32.const 10400
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Uint8ClampedArray#sort
  drop
  local.get $1300
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $1300
  i32.const 1
  call $~lib/typedarray/Uint8ClampedArray#__get
  i32.const 2
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $1300
  i32.const 2
  call $~lib/typedarray/Uint8ClampedArray#__get
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int16Array#constructor
  local.tee $1301
  i32.store $0 offset=1792
  local.get $1301
  i32.const 2
  i32.const 1
  call $~lib/typedarray/Int16Array#__set
  local.get $1301
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int16Array#__set
  local.get $1301
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int16Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $1301
  i32.const 0
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Int16Array#sort@varargs
  local.tee $1302
  i32.store $0 offset=1796
  local.get $1302
  i32.const 0
  call $~lib/typedarray/Int16Array#__get
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $1302
  i32.const 1
  call $~lib/typedarray/Int16Array#__get
  i32.const 2
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $1302
  i32.const 2
  call $~lib/typedarray/Int16Array#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $1302
  i32.const 10464
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Int16Array#sort
  drop
  local.get $1302
  i32.const 0
  call $~lib/typedarray/Int16Array#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $1302
  i32.const 1
  call $~lib/typedarray/Int16Array#__get
  i32.const 2
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $1302
  i32.const 2
  call $~lib/typedarray/Int16Array#__get
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint16Array#constructor
  local.tee $1303
  i32.store $0 offset=1800
  local.get $1303
  i32.const 2
  i32.const 1
  call $~lib/typedarray/Uint16Array#__set
  local.get $1303
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint16Array#__set
  local.get $1303
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint16Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $1303
  i32.const 0
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint16Array#sort@varargs
  local.tee $1304
  i32.store $0 offset=1804
  local.get $1304
  i32.const 0
  call $~lib/typedarray/Uint16Array#__get
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $1304
  i32.const 1
  call $~lib/typedarray/Uint16Array#__get
  i32.const 2
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $1304
  i32.const 2
  call $~lib/typedarray/Uint16Array#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $1304
  i32.const 10528
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Uint16Array#sort
  drop
  local.get $1304
  i32.const 0
  call $~lib/typedarray/Uint16Array#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $1304
  i32.const 1
  call $~lib/typedarray/Uint16Array#__get
  i32.const 2
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $1304
  i32.const 2
  call $~lib/typedarray/Uint16Array#__get
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int32Array#constructor
  local.tee $1305
  i32.store $0 offset=1808
  local.get $1305
  i32.const 2
  i32.const 1
  call $~lib/typedarray/Int32Array#__set
  local.get $1305
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int32Array#__set
  local.get $1305
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int32Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $1305
  i32.const 0
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Int32Array#sort@varargs
  local.tee $1306
  i32.store $0 offset=1812
  local.get $1306
  i32.const 0
  call $~lib/typedarray/Int32Array#__get
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $1306
  i32.const 1
  call $~lib/typedarray/Int32Array#__get
  i32.const 2
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $1306
  i32.const 2
  call $~lib/typedarray/Int32Array#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $1306
  i32.const 10592
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Int32Array#sort
  drop
  local.get $1306
  i32.const 0
  call $~lib/typedarray/Int32Array#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $1306
  i32.const 1
  call $~lib/typedarray/Int32Array#__get
  i32.const 2
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $1306
  i32.const 2
  call $~lib/typedarray/Int32Array#__get
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint32Array#constructor
  local.tee $1307
  i32.store $0 offset=1816
  local.get $1307
  i32.const 2
  i32.const 1
  call $~lib/typedarray/Uint32Array#__set
  local.get $1307
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint32Array#__set
  local.get $1307
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint32Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $1307
  i32.const 0
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint32Array#sort@varargs
  local.tee $1308
  i32.store $0 offset=1820
  local.get $1308
  i32.const 0
  call $~lib/typedarray/Uint32Array#__get
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $1308
  i32.const 1
  call $~lib/typedarray/Uint32Array#__get
  i32.const 2
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $1308
  i32.const 2
  call $~lib/typedarray/Uint32Array#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $1308
  i32.const 10656
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Uint32Array#sort
  drop
  local.get $1308
  i32.const 0
  call $~lib/typedarray/Uint32Array#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $1308
  i32.const 1
  call $~lib/typedarray/Uint32Array#__get
  i32.const 2
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $1308
  i32.const 2
  call $~lib/typedarray/Uint32Array#__get
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int64Array#constructor
  local.tee $1309
  i32.store $0 offset=1824
  local.get $1309
  i32.const 2
  i64.const 1
  call $~lib/typedarray/Int64Array#__set
  local.get $1309
  i32.const 1
  i64.const 2
  call $~lib/typedarray/Int64Array#__set
  local.get $1309
  i32.const 0
  i64.const 3
  call $~lib/typedarray/Int64Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $1309
  i32.const 0
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Int64Array#sort@varargs
  local.tee $1310
  i32.store $0 offset=1828
  local.get $1310
  i32.const 0
  call $~lib/typedarray/Int64Array#__get
  i64.const 1
  i64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $1310
  i32.const 1
  call $~lib/typedarray/Int64Array#__get
  i64.const 2
  i64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $1310
  i32.const 2
  call $~lib/typedarray/Int64Array#__get
  i64.const 3
  i64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $1310
  i32.const 10720
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Int64Array#sort
  drop
  local.get $1310
  i32.const 0
  call $~lib/typedarray/Int64Array#__get
  i64.const 3
  i64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $1310
  i32.const 1
  call $~lib/typedarray/Int64Array#__get
  i64.const 2
  i64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $1310
  i32.const 2
  call $~lib/typedarray/Int64Array#__get
  i64.const 1
  i64.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint64Array#constructor
  local.tee $1311
  i32.store $0 offset=1832
  local.get $1311
  i32.const 2
  i64.const 1
  call $~lib/typedarray/Uint64Array#__set
  local.get $1311
  i32.const 1
  i64.const 2
  call $~lib/typedarray/Uint64Array#__set
  local.get $1311
  i32.const 0
  i64.const 3
  call $~lib/typedarray/Uint64Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $1311
  i32.const 0
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint64Array#sort@varargs
  local.tee $1312
  i32.store $0 offset=1836
  local.get $1312
  i32.const 0
  call $~lib/typedarray/Uint64Array#__get
  i64.const 1
  i64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $1312
  i32.const 1
  call $~lib/typedarray/Uint64Array#__get
  i64.const 2
  i64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $1312
  i32.const 2
  call $~lib/typedarray/Uint64Array#__get
  i64.const 3
  i64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $1312
  i32.const 10784
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Uint64Array#sort
  drop
  local.get $1312
  i32.const 0
  call $~lib/typedarray/Uint64Array#__get
  i64.const 3
  i64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $1312
  i32.const 1
  call $~lib/typedarray/Uint64Array#__get
  i64.const 2
  i64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $1312
  i32.const 2
  call $~lib/typedarray/Uint64Array#__get
  i64.const 1
  i64.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Float32Array#constructor
  local.tee $1313
  i32.store $0 offset=1840
  local.get $1313
  i32.const 2
  f32.const 1
  call $~lib/typedarray/Float32Array#__set
  local.get $1313
  i32.const 1
  f32.const 2
  call $~lib/typedarray/Float32Array#__set
  local.get $1313
  i32.const 0
  f32.const 3
  call $~lib/typedarray/Float32Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $1313
  i32.const 0
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Float32Array#sort@varargs
  local.tee $1314
  i32.store $0 offset=1844
  local.get $1314
  i32.const 0
  call $~lib/typedarray/Float32Array#__get
  f32.const 1
  f32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $1314
  i32.const 1
  call $~lib/typedarray/Float32Array#__get
  f32.const 2
  f32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $1314
  i32.const 2
  call $~lib/typedarray/Float32Array#__get
  f32.const 3
  f32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $1314
  i32.const 10848
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Float32Array#sort
  drop
  local.get $1314
  i32.const 0
  call $~lib/typedarray/Float32Array#__get
  f32.const 3
  f32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $1314
  i32.const 1
  call $~lib/typedarray/Float32Array#__get
  f32.const 2
  f32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $1314
  i32.const 2
  call $~lib/typedarray/Float32Array#__get
  f32.const 1
  f32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Float64Array#constructor
  local.tee $1315
  i32.store $0 offset=1848
  local.get $1315
  i32.const 2
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $1315
  i32.const 1
  f64.const 2
  call $~lib/typedarray/Float64Array#__set
  local.get $1315
  i32.const 0
  f64.const 3
  call $~lib/typedarray/Float64Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $1315
  i32.const 0
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Float64Array#sort@varargs
  local.tee $1316
  i32.store $0 offset=1852
  local.get $1316
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.const 1
  f64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $1316
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.const 2
  f64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $1316
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.const 3
  f64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $1316
  i32.const 10880
  local.set $1317
  global.get $~lib/memory/__stack_pointer
  local.get $1317
  i32.store $0 offset=316
  local.get $1317
  call $~lib/typedarray/Float64Array#sort
  drop
  local.get $1316
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.const 3
  f64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $1316
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.const 2
  f64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $1316
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.const 1
  f64.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__heap_base
  global.set $~lib/memory/__stack_pointer
  call $~lib/rt/itcms/__collect
  global.get $~lib/memory/__stack_pointer
  i32.const 1856
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/arraybuffer/ArrayBufferView#constructor (type $i32_i32_i32_=>_i32) (param $this i32) (param $length i32) (param $alignLog2 i32) (result i32)
  (local $buffer i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 2
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  i32.const 0
  call $~lib/arraybuffer/ArrayBufferView#set:buffer
  local.get $this
  i32.const 0
  call $~lib/arraybuffer/ArrayBufferView#set:dataStart
  local.get $this
  i32.const 0
  call $~lib/arraybuffer/ArrayBufferView#set:byteLength
  local.get $length
  i32.const 1073741820
  local.get $alignLog2
  i32.shr_u
  i32.gt_u
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $length
  local.get $alignLog2
  i32.shl
  local.tee $length
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $buffer
  i32.store $0 offset=4
  i32.const 2
  global.get $~lib/shared/runtime/Runtime.Incremental
  i32.ne
  drop
  local.get $this
  local.get $buffer
  call $~lib/arraybuffer/ArrayBufferView#set:buffer
  local.get $this
  local.get $buffer
  call $~lib/arraybuffer/ArrayBufferView#set:dataStart
  local.get $this
  local.get $length
  call $~lib/arraybuffer/ArrayBufferView#set:byteLength
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $~lib/typedarray/Int8Array#constructor (type $i32_i32_=>_i32) (param $this i32) (param $length i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 3
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.get $length
  i32.const 0
  call $~lib/arraybuffer/ArrayBufferView#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/typedarray/Uint8Array#constructor (type $i32_i32_=>_i32) (param $this i32) (param $length i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 4
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.get $length
  i32.const 0
  call $~lib/arraybuffer/ArrayBufferView#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/typedarray/Uint8ClampedArray#constructor (type $i32_i32_=>_i32) (param $this i32) (param $length i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 5
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.get $length
  i32.const 0
  call $~lib/arraybuffer/ArrayBufferView#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/typedarray/Int16Array#constructor (type $i32_i32_=>_i32) (param $this i32) (param $length i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 6
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.get $length
  i32.const 1
  call $~lib/arraybuffer/ArrayBufferView#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/typedarray/Uint16Array#constructor (type $i32_i32_=>_i32) (param $this i32) (param $length i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 7
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.get $length
  i32.const 1
  call $~lib/arraybuffer/ArrayBufferView#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/typedarray/Int32Array#constructor (type $i32_i32_=>_i32) (param $this i32) (param $length i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 8
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.get $length
  i32.const 2
  call $~lib/arraybuffer/ArrayBufferView#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/typedarray/Uint32Array#constructor (type $i32_i32_=>_i32) (param $this i32) (param $length i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 9
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.get $length
  i32.const 2
  call $~lib/arraybuffer/ArrayBufferView#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/typedarray/Int64Array#constructor (type $i32_i32_=>_i32) (param $this i32) (param $length i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 10
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.get $length
  i32.const 3
  call $~lib/arraybuffer/ArrayBufferView#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/typedarray/Uint64Array#constructor (type $i32_i32_=>_i32) (param $this i32) (param $length i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 11
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.get $length
  i32.const 3
  call $~lib/arraybuffer/ArrayBufferView#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/typedarray/Float32Array#constructor (type $i32_i32_=>_i32) (param $this i32) (param $length i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 12
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.get $length
  i32.const 2
  call $~lib/arraybuffer/ArrayBufferView#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/typedarray/Float64Array#constructor (type $i32_i32_=>_i32) (param $this i32) (param $length i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 13
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.get $length
  i32.const 3
  call $~lib/arraybuffer/ArrayBufferView#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/typedarray/Int32Array#subarray (type $i32_i32_i32_=>_i32) (param $this i32) (param $begin i32) (param $end i32) (result i32)
  (local $array i32)
  (local $begin|4 i32)
  (local $end|5 i32)
  (local $len i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $out i32)
  (local $buf i32)
  (local $19 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $array
  local.get $begin
  local.set $begin|4
  local.get $end
  local.set $end|5
  local.get $array
  call $~lib/typedarray/Int32Array#get:length
  local.set $len
  local.get $begin|4
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $begin|4
   i32.add
   local.tee $7
   i32.const 0
   local.tee $8
   local.get $7
   local.get $8
   i32.gt_s
   select
  else
   local.get $begin|4
   local.tee $9
   local.get $len
   local.tee $10
   local.get $9
   local.get $10
   i32.lt_s
   select
  end
  local.set $begin|4
  local.get $end|5
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $end|5
   i32.add
   local.tee $11
   i32.const 0
   local.tee $12
   local.get $11
   local.get $12
   i32.gt_s
   select
  else
   local.get $end|5
   local.tee $13
   local.get $len
   local.tee $14
   local.get $13
   local.get $14
   i32.lt_s
   select
  end
  local.set $end|5
  local.get $end|5
  local.tee $15
  local.get $begin|4
  local.tee $16
  local.get $15
  local.get $16
  i32.gt_s
  select
  local.set $end|5
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 8
  call $~lib/rt/itcms/__new
  local.tee $out
  i32.store $0
  local.get $array
  i32.load $0
  local.set $buf
  local.get $out
  local.get $buf
  i32.store $0
  local.get $out
  local.get $buf
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $out
  local.get $array
  i32.load $0 offset=4
  local.get $begin|4
  i32.const 2
  i32.shl
  i32.add
  i32.store $0 offset=4
  local.get $out
  local.get $end|5
  local.get $begin|4
  i32.sub
  i32.const 2
  i32.shl
  i32.store $0 offset=8
  local.get $out
  local.set $19
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $19
 )
 (func $~lib/typedarray/Float64Array#subarray (type $i32_i32_i32_=>_i32) (param $this i32) (param $begin i32) (param $end i32) (result i32)
  (local $array i32)
  (local $begin|4 i32)
  (local $end|5 i32)
  (local $len i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $out i32)
  (local $buf i32)
  (local $19 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $array
  local.get $begin
  local.set $begin|4
  local.get $end
  local.set $end|5
  local.get $array
  call $~lib/typedarray/Float64Array#get:length
  local.set $len
  local.get $begin|4
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $begin|4
   i32.add
   local.tee $7
   i32.const 0
   local.tee $8
   local.get $7
   local.get $8
   i32.gt_s
   select
  else
   local.get $begin|4
   local.tee $9
   local.get $len
   local.tee $10
   local.get $9
   local.get $10
   i32.lt_s
   select
  end
  local.set $begin|4
  local.get $end|5
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $end|5
   i32.add
   local.tee $11
   i32.const 0
   local.tee $12
   local.get $11
   local.get $12
   i32.gt_s
   select
  else
   local.get $end|5
   local.tee $13
   local.get $len
   local.tee $14
   local.get $13
   local.get $14
   i32.lt_s
   select
  end
  local.set $end|5
  local.get $end|5
  local.tee $15
  local.get $begin|4
  local.tee $16
  local.get $15
  local.get $16
  i32.gt_s
  select
  local.set $end|5
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 13
  call $~lib/rt/itcms/__new
  local.tee $out
  i32.store $0
  local.get $array
  i32.load $0
  local.set $buf
  local.get $out
  local.get $buf
  i32.store $0
  local.get $out
  local.get $buf
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $out
  local.get $array
  i32.load $0 offset=4
  local.get $begin|4
  i32.const 3
  i32.shl
  i32.add
  i32.store $0 offset=4
  local.get $out
  local.get $end|5
  local.get $begin|4
  i32.sub
  i32.const 3
  i32.shl
  i32.store $0 offset=8
  local.get $out
  local.set $19
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $19
 )
 (func $~lib/typedarray/Float64Array#sort@varargs (type $i32_i32_=>_i32) (param $this i32) (param $comparator i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   block $~lib/util/sort/COMPARATOR<f64>|inlined.0 (result i32)
    i32.const 0
    drop
    i32.const 1
    drop
    i32.const 8
    i32.const 4
    i32.eq
    drop
    i32.const 272
    br $~lib/util/sort/COMPARATOR<f64>|inlined.0
   end
   local.tee $comparator
   i32.store $0
  end
  local.get $this
  local.get $comparator
  call $~lib/typedarray/Float64Array#sort
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/rt/__newArray (type $i32_i32_i32_i32_=>_i32) (param $length i32) (param $alignLog2 i32) (param $id i32) (param $data i32) (result i32)
  (local $bufferSize i32)
  (local $buffer i32)
  (local $array i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $length
  local.get $alignLog2
  i32.shl
  local.set $bufferSize
  global.get $~lib/memory/__stack_pointer
  local.get $bufferSize
  i32.const 0
  local.get $data
  call $~lib/rt/__newBuffer
  local.tee $buffer
  i32.store $0
  i32.const 16
  local.get $id
  call $~lib/rt/itcms/__new
  local.set $array
  local.get $array
  local.get $buffer
  i32.store $0
  local.get $array
  local.get $buffer
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $array
  local.get $buffer
  i32.store $0 offset=4
  local.get $array
  local.get $bufferSize
  i32.store $0 offset=8
  local.get $array
  local.get $length
  i32.store $0 offset=12
  local.get $array
  local.set $7
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $7
 )
 (func $~lib/typedarray/Int8Array#subarray (type $i32_i32_i32_=>_i32) (param $this i32) (param $begin i32) (param $end i32) (result i32)
  (local $array i32)
  (local $begin|4 i32)
  (local $end|5 i32)
  (local $len i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $out i32)
  (local $buf i32)
  (local $19 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $array
  local.get $begin
  local.set $begin|4
  local.get $end
  local.set $end|5
  local.get $array
  call $~lib/typedarray/Int8Array#get:length
  local.set $len
  local.get $begin|4
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $begin|4
   i32.add
   local.tee $7
   i32.const 0
   local.tee $8
   local.get $7
   local.get $8
   i32.gt_s
   select
  else
   local.get $begin|4
   local.tee $9
   local.get $len
   local.tee $10
   local.get $9
   local.get $10
   i32.lt_s
   select
  end
  local.set $begin|4
  local.get $end|5
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $end|5
   i32.add
   local.tee $11
   i32.const 0
   local.tee $12
   local.get $11
   local.get $12
   i32.gt_s
   select
  else
   local.get $end|5
   local.tee $13
   local.get $len
   local.tee $14
   local.get $13
   local.get $14
   i32.lt_s
   select
  end
  local.set $end|5
  local.get $end|5
  local.tee $15
  local.get $begin|4
  local.tee $16
  local.get $15
  local.get $16
  i32.gt_s
  select
  local.set $end|5
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 3
  call $~lib/rt/itcms/__new
  local.tee $out
  i32.store $0
  local.get $array
  i32.load $0
  local.set $buf
  local.get $out
  local.get $buf
  i32.store $0
  local.get $out
  local.get $buf
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $out
  local.get $array
  i32.load $0 offset=4
  local.get $begin|4
  i32.const 0
  i32.shl
  i32.add
  i32.store $0 offset=4
  local.get $out
  local.get $end|5
  local.get $begin|4
  i32.sub
  i32.const 0
  i32.shl
  i32.store $0 offset=8
  local.get $out
  local.set $19
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $19
 )
 (func $~lib/typedarray/Int32Array#slice (type $i32_i32_i32_=>_i32) (param $this i32) (param $begin i32) (param $end i32) (result i32)
  (local $array i32)
  (local $start i32)
  (local $end|5 i32)
  (local $len i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $slice i32)
  (local $18 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $array
  local.get $begin
  local.set $start
  local.get $end
  local.set $end|5
  local.get $array
  call $~lib/typedarray/Int32Array#get:length
  local.set $len
  local.get $start
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $start
   local.get $len
   i32.add
   local.tee $7
   i32.const 0
   local.tee $8
   local.get $7
   local.get $8
   i32.gt_s
   select
  else
   local.get $start
   local.tee $9
   local.get $len
   local.tee $10
   local.get $9
   local.get $10
   i32.lt_s
   select
  end
  local.set $start
  local.get $end|5
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $end|5
   local.get $len
   i32.add
   local.tee $11
   i32.const 0
   local.tee $12
   local.get $11
   local.get $12
   i32.gt_s
   select
  else
   local.get $end|5
   local.tee $13
   local.get $len
   local.tee $14
   local.get $13
   local.get $14
   i32.lt_s
   select
  end
  local.set $end|5
  local.get $end|5
  local.get $start
  i32.sub
  local.tee $15
  i32.const 0
  local.tee $16
  local.get $15
  local.get $16
  i32.gt_s
  select
  local.set $len
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $len
  call $~lib/typedarray/Int32Array#constructor
  local.tee $slice
  i32.store $0
  local.get $slice
  i32.load $0 offset=4
  local.get $array
  i32.load $0 offset=4
  local.get $start
  i32.const 2
  i32.shl
  i32.add
  local.get $len
  i32.const 2
  i32.shl
  memory.copy $0 $0
  local.get $slice
  local.set $18
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $18
 )
 (func $~lib/typedarray/Int8Array#map (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $len i32)
  (local $ptr i32)
  (local $byteLength i32)
  (local $out i32)
  (local $buf i32)
  (local $i i32)
  (local $10 i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|3
  local.get $array
  call $~lib/typedarray/Int8Array#get:length
  local.set $len
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  local.get $len
  i32.const 0
  i32.shl
  local.set $byteLength
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 3
  call $~lib/rt/itcms/__new
  local.tee $out
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $byteLength
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $buf
  i32.store $0 offset=4
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $len
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $buf
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    local.get $ptr
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    i32.load8_s $0
    local.get $i
    local.get $array
    i32.const 3
    global.set $~argumentsLength
    local.get $fn|3
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    i32.store8 $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $out
  local.get $buf
  i32.store $0
  local.get $out
  local.get $buf
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $out
  local.get $buf
  i32.store $0 offset=4
  local.get $out
  local.get $byteLength
  i32.store $0 offset=8
  local.get $out
  local.set $11
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $11
 )
 (func $~lib/typedarray/Uint8Array#map (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $len i32)
  (local $ptr i32)
  (local $byteLength i32)
  (local $out i32)
  (local $buf i32)
  (local $i i32)
  (local $10 i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|3
  local.get $array
  call $~lib/typedarray/Uint8Array#get:length
  local.set $len
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  local.get $len
  i32.const 0
  i32.shl
  local.set $byteLength
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 4
  call $~lib/rt/itcms/__new
  local.tee $out
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $byteLength
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $buf
  i32.store $0 offset=4
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $len
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $buf
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    local.get $ptr
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    i32.load8_u $0
    local.get $i
    local.get $array
    i32.const 3
    global.set $~argumentsLength
    local.get $fn|3
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    i32.store8 $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $out
  local.get $buf
  i32.store $0
  local.get $out
  local.get $buf
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $out
  local.get $buf
  i32.store $0 offset=4
  local.get $out
  local.get $byteLength
  i32.store $0 offset=8
  local.get $out
  local.set $11
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $11
 )
 (func $~lib/typedarray/Uint8ClampedArray#map (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $len i32)
  (local $ptr i32)
  (local $byteLength i32)
  (local $out i32)
  (local $buf i32)
  (local $i i32)
  (local $10 i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|3
  local.get $array
  call $~lib/typedarray/Uint8ClampedArray#get:length
  local.set $len
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  local.get $len
  i32.const 0
  i32.shl
  local.set $byteLength
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 5
  call $~lib/rt/itcms/__new
  local.tee $out
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $byteLength
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $buf
  i32.store $0 offset=4
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $len
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $buf
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    local.get $ptr
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    i32.load8_u $0
    local.get $i
    local.get $array
    i32.const 3
    global.set $~argumentsLength
    local.get $fn|3
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    i32.store8 $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $out
  local.get $buf
  i32.store $0
  local.get $out
  local.get $buf
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $out
  local.get $buf
  i32.store $0 offset=4
  local.get $out
  local.get $byteLength
  i32.store $0 offset=8
  local.get $out
  local.set $11
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $11
 )
 (func $~lib/typedarray/Int16Array#map (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $len i32)
  (local $ptr i32)
  (local $byteLength i32)
  (local $out i32)
  (local $buf i32)
  (local $i i32)
  (local $10 i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|3
  local.get $array
  call $~lib/typedarray/Int16Array#get:length
  local.set $len
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  local.get $len
  i32.const 1
  i32.shl
  local.set $byteLength
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 6
  call $~lib/rt/itcms/__new
  local.tee $out
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $byteLength
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $buf
  i32.store $0 offset=4
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $len
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $buf
    local.get $i
    i32.const 1
    i32.shl
    i32.add
    local.get $ptr
    local.get $i
    i32.const 1
    i32.shl
    i32.add
    i32.load16_s $0
    local.get $i
    local.get $array
    i32.const 3
    global.set $~argumentsLength
    local.get $fn|3
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    i32.store16 $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $out
  local.get $buf
  i32.store $0
  local.get $out
  local.get $buf
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $out
  local.get $buf
  i32.store $0 offset=4
  local.get $out
  local.get $byteLength
  i32.store $0 offset=8
  local.get $out
  local.set $11
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $11
 )
 (func $~lib/typedarray/Uint16Array#map (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $len i32)
  (local $ptr i32)
  (local $byteLength i32)
  (local $out i32)
  (local $buf i32)
  (local $i i32)
  (local $10 i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|3
  local.get $array
  call $~lib/typedarray/Uint16Array#get:length
  local.set $len
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  local.get $len
  i32.const 1
  i32.shl
  local.set $byteLength
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 7
  call $~lib/rt/itcms/__new
  local.tee $out
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $byteLength
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $buf
  i32.store $0 offset=4
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $len
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $buf
    local.get $i
    i32.const 1
    i32.shl
    i32.add
    local.get $ptr
    local.get $i
    i32.const 1
    i32.shl
    i32.add
    i32.load16_u $0
    local.get $i
    local.get $array
    i32.const 3
    global.set $~argumentsLength
    local.get $fn|3
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    i32.store16 $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $out
  local.get $buf
  i32.store $0
  local.get $out
  local.get $buf
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $out
  local.get $buf
  i32.store $0 offset=4
  local.get $out
  local.get $byteLength
  i32.store $0 offset=8
  local.get $out
  local.set $11
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $11
 )
 (func $~lib/typedarray/Int32Array#map (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $len i32)
  (local $ptr i32)
  (local $byteLength i32)
  (local $out i32)
  (local $buf i32)
  (local $i i32)
  (local $10 i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|3
  local.get $array
  call $~lib/typedarray/Int32Array#get:length
  local.set $len
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  local.get $len
  i32.const 2
  i32.shl
  local.set $byteLength
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 8
  call $~lib/rt/itcms/__new
  local.tee $out
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $byteLength
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $buf
  i32.store $0 offset=4
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $len
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $buf
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    local.get $ptr
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.get $i
    local.get $array
    i32.const 3
    global.set $~argumentsLength
    local.get $fn|3
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    i32.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $out
  local.get $buf
  i32.store $0
  local.get $out
  local.get $buf
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $out
  local.get $buf
  i32.store $0 offset=4
  local.get $out
  local.get $byteLength
  i32.store $0 offset=8
  local.get $out
  local.set $11
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $11
 )
 (func $~lib/typedarray/Uint32Array#map (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $len i32)
  (local $ptr i32)
  (local $byteLength i32)
  (local $out i32)
  (local $buf i32)
  (local $i i32)
  (local $10 i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|3
  local.get $array
  call $~lib/typedarray/Uint32Array#get:length
  local.set $len
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  local.get $len
  i32.const 2
  i32.shl
  local.set $byteLength
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 9
  call $~lib/rt/itcms/__new
  local.tee $out
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $byteLength
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $buf
  i32.store $0 offset=4
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $len
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $buf
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    local.get $ptr
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.get $i
    local.get $array
    i32.const 3
    global.set $~argumentsLength
    local.get $fn|3
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    i32.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $out
  local.get $buf
  i32.store $0
  local.get $out
  local.get $buf
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $out
  local.get $buf
  i32.store $0 offset=4
  local.get $out
  local.get $byteLength
  i32.store $0 offset=8
  local.get $out
  local.set $11
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $11
 )
 (func $~lib/typedarray/Int64Array#map (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $len i32)
  (local $ptr i32)
  (local $byteLength i32)
  (local $out i32)
  (local $buf i32)
  (local $i i32)
  (local $10 i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|3
  local.get $array
  call $~lib/typedarray/Int64Array#get:length
  local.set $len
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  local.get $len
  i32.const 3
  i32.shl
  local.set $byteLength
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 10
  call $~lib/rt/itcms/__new
  local.tee $out
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $byteLength
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $buf
  i32.store $0 offset=4
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $len
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $buf
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    local.get $ptr
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    local.get $i
    local.get $array
    i32.const 3
    global.set $~argumentsLength
    local.get $fn|3
    i32.load $0
    call_indirect $0 (type $i64_i32_i32_=>_i64)
    i64.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $out
  local.get $buf
  i32.store $0
  local.get $out
  local.get $buf
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $out
  local.get $buf
  i32.store $0 offset=4
  local.get $out
  local.get $byteLength
  i32.store $0 offset=8
  local.get $out
  local.set $11
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $11
 )
 (func $~lib/typedarray/Uint64Array#map (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $len i32)
  (local $ptr i32)
  (local $byteLength i32)
  (local $out i32)
  (local $buf i32)
  (local $i i32)
  (local $10 i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|3
  local.get $array
  call $~lib/typedarray/Uint64Array#get:length
  local.set $len
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  local.get $len
  i32.const 3
  i32.shl
  local.set $byteLength
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 11
  call $~lib/rt/itcms/__new
  local.tee $out
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $byteLength
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $buf
  i32.store $0 offset=4
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $len
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $buf
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    local.get $ptr
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    local.get $i
    local.get $array
    i32.const 3
    global.set $~argumentsLength
    local.get $fn|3
    i32.load $0
    call_indirect $0 (type $i64_i32_i32_=>_i64)
    i64.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $out
  local.get $buf
  i32.store $0
  local.get $out
  local.get $buf
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $out
  local.get $buf
  i32.store $0 offset=4
  local.get $out
  local.get $byteLength
  i32.store $0 offset=8
  local.get $out
  local.set $11
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $11
 )
 (func $~lib/typedarray/Float32Array#map (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $len i32)
  (local $ptr i32)
  (local $byteLength i32)
  (local $out i32)
  (local $buf i32)
  (local $i i32)
  (local $10 i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|3
  local.get $array
  call $~lib/typedarray/Float32Array#get:length
  local.set $len
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  local.get $len
  i32.const 2
  i32.shl
  local.set $byteLength
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 12
  call $~lib/rt/itcms/__new
  local.tee $out
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $byteLength
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $buf
  i32.store $0 offset=4
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $len
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $buf
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    local.get $ptr
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    f32.load $0
    local.get $i
    local.get $array
    i32.const 3
    global.set $~argumentsLength
    local.get $fn|3
    i32.load $0
    call_indirect $0 (type $f32_i32_i32_=>_f32)
    f32.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $out
  local.get $buf
  i32.store $0
  local.get $out
  local.get $buf
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $out
  local.get $buf
  i32.store $0 offset=4
  local.get $out
  local.get $byteLength
  i32.store $0 offset=8
  local.get $out
  local.set $11
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $11
 )
 (func $~lib/typedarray/Float64Array#map (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $len i32)
  (local $ptr i32)
  (local $byteLength i32)
  (local $out i32)
  (local $buf i32)
  (local $i i32)
  (local $10 i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|3
  local.get $array
  call $~lib/typedarray/Float64Array#get:length
  local.set $len
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  local.get $len
  i32.const 3
  i32.shl
  local.set $byteLength
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 13
  call $~lib/rt/itcms/__new
  local.tee $out
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $byteLength
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $buf
  i32.store $0 offset=4
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $len
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $buf
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    local.get $ptr
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    f64.load $0
    local.get $i
    local.get $array
    i32.const 3
    global.set $~argumentsLength
    local.get $fn|3
    i32.load $0
    call_indirect $0 (type $f64_i32_i32_=>_f64)
    f64.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $out
  local.get $buf
  i32.store $0
  local.get $out
  local.get $buf
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $out
  local.get $buf
  i32.store $0 offset=4
  local.get $out
  local.get $byteLength
  i32.store $0 offset=8
  local.get $out
  local.set $11
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $11
 )
 (func $~lib/typedarray/Int8Array#filter (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $len i32)
  (local $out i32)
  (local $buf i32)
  (local $dataStart i32)
  (local $j i32)
  (local $i i32)
  (local $10 i32)
  (local $value i32)
  (local $12 i32)
  (local $byteLength i32)
  (local $data i32)
  (local $15 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|3
  local.get $array
  call $~lib/typedarray/Int8Array#get:length
  local.set $len
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 3
  call $~lib/rt/itcms/__new
  local.tee $out
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $len
  i32.const 0
  i32.shl
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $buf
  i32.store $0 offset=4
  local.get $array
  i32.load $0 offset=4
  local.set $dataStart
  i32.const 0
  local.set $j
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $len
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $dataStart
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    i32.load8_s $0
    local.set $value
    local.get $value
    local.get $i
    local.get $array
    i32.const 3
    global.set $~argumentsLength
    local.get $fn|3
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    if
     local.get $buf
     local.get $j
     local.tee $12
     i32.const 1
     i32.add
     local.set $j
     local.get $12
     i32.const 0
     i32.shl
     i32.add
     local.get $value
     i32.store8 $0
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $j
  i32.const 0
  i32.shl
  local.set $byteLength
  local.get $buf
  local.get $byteLength
  call $~lib/rt/itcms/__renew
  local.set $data
  local.get $out
  local.get $data
  i32.store $0
  local.get $out
  local.get $data
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $out
  local.get $byteLength
  i32.store $0 offset=8
  local.get $out
  local.get $data
  i32.store $0 offset=4
  local.get $out
  local.set $15
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $15
 )
 (func $~lib/typedarray/Uint8Array#filter (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $len i32)
  (local $out i32)
  (local $buf i32)
  (local $dataStart i32)
  (local $j i32)
  (local $i i32)
  (local $10 i32)
  (local $value i32)
  (local $12 i32)
  (local $byteLength i32)
  (local $data i32)
  (local $15 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|3
  local.get $array
  call $~lib/typedarray/Uint8Array#get:length
  local.set $len
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 4
  call $~lib/rt/itcms/__new
  local.tee $out
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $len
  i32.const 0
  i32.shl
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $buf
  i32.store $0 offset=4
  local.get $array
  i32.load $0 offset=4
  local.set $dataStart
  i32.const 0
  local.set $j
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $len
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $dataStart
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    i32.load8_u $0
    local.set $value
    local.get $value
    local.get $i
    local.get $array
    i32.const 3
    global.set $~argumentsLength
    local.get $fn|3
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    if
     local.get $buf
     local.get $j
     local.tee $12
     i32.const 1
     i32.add
     local.set $j
     local.get $12
     i32.const 0
     i32.shl
     i32.add
     local.get $value
     i32.store8 $0
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $j
  i32.const 0
  i32.shl
  local.set $byteLength
  local.get $buf
  local.get $byteLength
  call $~lib/rt/itcms/__renew
  local.set $data
  local.get $out
  local.get $data
  i32.store $0
  local.get $out
  local.get $data
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $out
  local.get $byteLength
  i32.store $0 offset=8
  local.get $out
  local.get $data
  i32.store $0 offset=4
  local.get $out
  local.set $15
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $15
 )
 (func $~lib/typedarray/Uint8ClampedArray#filter (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $len i32)
  (local $out i32)
  (local $buf i32)
  (local $dataStart i32)
  (local $j i32)
  (local $i i32)
  (local $10 i32)
  (local $value i32)
  (local $12 i32)
  (local $byteLength i32)
  (local $data i32)
  (local $15 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|3
  local.get $array
  call $~lib/typedarray/Uint8ClampedArray#get:length
  local.set $len
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 5
  call $~lib/rt/itcms/__new
  local.tee $out
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $len
  i32.const 0
  i32.shl
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $buf
  i32.store $0 offset=4
  local.get $array
  i32.load $0 offset=4
  local.set $dataStart
  i32.const 0
  local.set $j
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $len
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $dataStart
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    i32.load8_u $0
    local.set $value
    local.get $value
    local.get $i
    local.get $array
    i32.const 3
    global.set $~argumentsLength
    local.get $fn|3
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    if
     local.get $buf
     local.get $j
     local.tee $12
     i32.const 1
     i32.add
     local.set $j
     local.get $12
     i32.const 0
     i32.shl
     i32.add
     local.get $value
     i32.store8 $0
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $j
  i32.const 0
  i32.shl
  local.set $byteLength
  local.get $buf
  local.get $byteLength
  call $~lib/rt/itcms/__renew
  local.set $data
  local.get $out
  local.get $data
  i32.store $0
  local.get $out
  local.get $data
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $out
  local.get $byteLength
  i32.store $0 offset=8
  local.get $out
  local.get $data
  i32.store $0 offset=4
  local.get $out
  local.set $15
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $15
 )
 (func $~lib/typedarray/Int16Array#filter (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $len i32)
  (local $out i32)
  (local $buf i32)
  (local $dataStart i32)
  (local $j i32)
  (local $i i32)
  (local $10 i32)
  (local $value i32)
  (local $12 i32)
  (local $byteLength i32)
  (local $data i32)
  (local $15 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|3
  local.get $array
  call $~lib/typedarray/Int16Array#get:length
  local.set $len
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 6
  call $~lib/rt/itcms/__new
  local.tee $out
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $len
  i32.const 1
  i32.shl
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $buf
  i32.store $0 offset=4
  local.get $array
  i32.load $0 offset=4
  local.set $dataStart
  i32.const 0
  local.set $j
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $len
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $dataStart
    local.get $i
    i32.const 1
    i32.shl
    i32.add
    i32.load16_s $0
    local.set $value
    local.get $value
    local.get $i
    local.get $array
    i32.const 3
    global.set $~argumentsLength
    local.get $fn|3
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    if
     local.get $buf
     local.get $j
     local.tee $12
     i32.const 1
     i32.add
     local.set $j
     local.get $12
     i32.const 1
     i32.shl
     i32.add
     local.get $value
     i32.store16 $0
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $j
  i32.const 1
  i32.shl
  local.set $byteLength
  local.get $buf
  local.get $byteLength
  call $~lib/rt/itcms/__renew
  local.set $data
  local.get $out
  local.get $data
  i32.store $0
  local.get $out
  local.get $data
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $out
  local.get $byteLength
  i32.store $0 offset=8
  local.get $out
  local.get $data
  i32.store $0 offset=4
  local.get $out
  local.set $15
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $15
 )
 (func $~lib/typedarray/Uint16Array#filter (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $len i32)
  (local $out i32)
  (local $buf i32)
  (local $dataStart i32)
  (local $j i32)
  (local $i i32)
  (local $10 i32)
  (local $value i32)
  (local $12 i32)
  (local $byteLength i32)
  (local $data i32)
  (local $15 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|3
  local.get $array
  call $~lib/typedarray/Uint16Array#get:length
  local.set $len
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 7
  call $~lib/rt/itcms/__new
  local.tee $out
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $len
  i32.const 1
  i32.shl
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $buf
  i32.store $0 offset=4
  local.get $array
  i32.load $0 offset=4
  local.set $dataStart
  i32.const 0
  local.set $j
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $len
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $dataStart
    local.get $i
    i32.const 1
    i32.shl
    i32.add
    i32.load16_u $0
    local.set $value
    local.get $value
    local.get $i
    local.get $array
    i32.const 3
    global.set $~argumentsLength
    local.get $fn|3
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    if
     local.get $buf
     local.get $j
     local.tee $12
     i32.const 1
     i32.add
     local.set $j
     local.get $12
     i32.const 1
     i32.shl
     i32.add
     local.get $value
     i32.store16 $0
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $j
  i32.const 1
  i32.shl
  local.set $byteLength
  local.get $buf
  local.get $byteLength
  call $~lib/rt/itcms/__renew
  local.set $data
  local.get $out
  local.get $data
  i32.store $0
  local.get $out
  local.get $data
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $out
  local.get $byteLength
  i32.store $0 offset=8
  local.get $out
  local.get $data
  i32.store $0 offset=4
  local.get $out
  local.set $15
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $15
 )
 (func $~lib/typedarray/Int32Array#filter (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $len i32)
  (local $out i32)
  (local $buf i32)
  (local $dataStart i32)
  (local $j i32)
  (local $i i32)
  (local $10 i32)
  (local $value i32)
  (local $12 i32)
  (local $byteLength i32)
  (local $data i32)
  (local $15 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|3
  local.get $array
  call $~lib/typedarray/Int32Array#get:length
  local.set $len
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 8
  call $~lib/rt/itcms/__new
  local.tee $out
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $len
  i32.const 2
  i32.shl
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $buf
  i32.store $0 offset=4
  local.get $array
  i32.load $0 offset=4
  local.set $dataStart
  i32.const 0
  local.set $j
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $len
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $dataStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $value
    local.get $value
    local.get $i
    local.get $array
    i32.const 3
    global.set $~argumentsLength
    local.get $fn|3
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    if
     local.get $buf
     local.get $j
     local.tee $12
     i32.const 1
     i32.add
     local.set $j
     local.get $12
     i32.const 2
     i32.shl
     i32.add
     local.get $value
     i32.store $0
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $j
  i32.const 2
  i32.shl
  local.set $byteLength
  local.get $buf
  local.get $byteLength
  call $~lib/rt/itcms/__renew
  local.set $data
  local.get $out
  local.get $data
  i32.store $0
  local.get $out
  local.get $data
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $out
  local.get $byteLength
  i32.store $0 offset=8
  local.get $out
  local.get $data
  i32.store $0 offset=4
  local.get $out
  local.set $15
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $15
 )
 (func $~lib/typedarray/Uint32Array#filter (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $len i32)
  (local $out i32)
  (local $buf i32)
  (local $dataStart i32)
  (local $j i32)
  (local $i i32)
  (local $10 i32)
  (local $value i32)
  (local $12 i32)
  (local $byteLength i32)
  (local $data i32)
  (local $15 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|3
  local.get $array
  call $~lib/typedarray/Uint32Array#get:length
  local.set $len
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 9
  call $~lib/rt/itcms/__new
  local.tee $out
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $len
  i32.const 2
  i32.shl
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $buf
  i32.store $0 offset=4
  local.get $array
  i32.load $0 offset=4
  local.set $dataStart
  i32.const 0
  local.set $j
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $len
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $dataStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $value
    local.get $value
    local.get $i
    local.get $array
    i32.const 3
    global.set $~argumentsLength
    local.get $fn|3
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    if
     local.get $buf
     local.get $j
     local.tee $12
     i32.const 1
     i32.add
     local.set $j
     local.get $12
     i32.const 2
     i32.shl
     i32.add
     local.get $value
     i32.store $0
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $j
  i32.const 2
  i32.shl
  local.set $byteLength
  local.get $buf
  local.get $byteLength
  call $~lib/rt/itcms/__renew
  local.set $data
  local.get $out
  local.get $data
  i32.store $0
  local.get $out
  local.get $data
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $out
  local.get $byteLength
  i32.store $0 offset=8
  local.get $out
  local.get $data
  i32.store $0 offset=4
  local.get $out
  local.set $15
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $15
 )
 (func $~lib/typedarray/Int64Array#filter (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $len i32)
  (local $out i32)
  (local $buf i32)
  (local $dataStart i32)
  (local $j i32)
  (local $i i32)
  (local $10 i32)
  (local $value i64)
  (local $12 i32)
  (local $byteLength i32)
  (local $data i32)
  (local $15 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|3
  local.get $array
  call $~lib/typedarray/Int64Array#get:length
  local.set $len
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 10
  call $~lib/rt/itcms/__new
  local.tee $out
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $len
  i32.const 3
  i32.shl
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $buf
  i32.store $0 offset=4
  local.get $array
  i32.load $0 offset=4
  local.set $dataStart
  i32.const 0
  local.set $j
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $len
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $dataStart
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    local.set $value
    local.get $value
    local.get $i
    local.get $array
    i32.const 3
    global.set $~argumentsLength
    local.get $fn|3
    i32.load $0
    call_indirect $0 (type $i64_i32_i32_=>_i32)
    if
     local.get $buf
     local.get $j
     local.tee $12
     i32.const 1
     i32.add
     local.set $j
     local.get $12
     i32.const 3
     i32.shl
     i32.add
     local.get $value
     i64.store $0
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $j
  i32.const 3
  i32.shl
  local.set $byteLength
  local.get $buf
  local.get $byteLength
  call $~lib/rt/itcms/__renew
  local.set $data
  local.get $out
  local.get $data
  i32.store $0
  local.get $out
  local.get $data
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $out
  local.get $byteLength
  i32.store $0 offset=8
  local.get $out
  local.get $data
  i32.store $0 offset=4
  local.get $out
  local.set $15
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $15
 )
 (func $~lib/typedarray/Uint64Array#filter (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $len i32)
  (local $out i32)
  (local $buf i32)
  (local $dataStart i32)
  (local $j i32)
  (local $i i32)
  (local $10 i32)
  (local $value i64)
  (local $12 i32)
  (local $byteLength i32)
  (local $data i32)
  (local $15 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|3
  local.get $array
  call $~lib/typedarray/Uint64Array#get:length
  local.set $len
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 11
  call $~lib/rt/itcms/__new
  local.tee $out
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $len
  i32.const 3
  i32.shl
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $buf
  i32.store $0 offset=4
  local.get $array
  i32.load $0 offset=4
  local.set $dataStart
  i32.const 0
  local.set $j
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $len
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $dataStart
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    local.set $value
    local.get $value
    local.get $i
    local.get $array
    i32.const 3
    global.set $~argumentsLength
    local.get $fn|3
    i32.load $0
    call_indirect $0 (type $i64_i32_i32_=>_i32)
    if
     local.get $buf
     local.get $j
     local.tee $12
     i32.const 1
     i32.add
     local.set $j
     local.get $12
     i32.const 3
     i32.shl
     i32.add
     local.get $value
     i64.store $0
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $j
  i32.const 3
  i32.shl
  local.set $byteLength
  local.get $buf
  local.get $byteLength
  call $~lib/rt/itcms/__renew
  local.set $data
  local.get $out
  local.get $data
  i32.store $0
  local.get $out
  local.get $data
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $out
  local.get $byteLength
  i32.store $0 offset=8
  local.get $out
  local.get $data
  i32.store $0 offset=4
  local.get $out
  local.set $15
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $15
 )
 (func $~lib/typedarray/Float32Array#filter (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $len i32)
  (local $out i32)
  (local $buf i32)
  (local $dataStart i32)
  (local $j i32)
  (local $i i32)
  (local $10 i32)
  (local $value f32)
  (local $12 i32)
  (local $byteLength i32)
  (local $data i32)
  (local $15 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|3
  local.get $array
  call $~lib/typedarray/Float32Array#get:length
  local.set $len
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 12
  call $~lib/rt/itcms/__new
  local.tee $out
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $len
  i32.const 2
  i32.shl
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $buf
  i32.store $0 offset=4
  local.get $array
  i32.load $0 offset=4
  local.set $dataStart
  i32.const 0
  local.set $j
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $len
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $dataStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    f32.load $0
    local.set $value
    local.get $value
    local.get $i
    local.get $array
    i32.const 3
    global.set $~argumentsLength
    local.get $fn|3
    i32.load $0
    call_indirect $0 (type $f32_i32_i32_=>_i32)
    if
     local.get $buf
     local.get $j
     local.tee $12
     i32.const 1
     i32.add
     local.set $j
     local.get $12
     i32.const 2
     i32.shl
     i32.add
     local.get $value
     f32.store $0
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $j
  i32.const 2
  i32.shl
  local.set $byteLength
  local.get $buf
  local.get $byteLength
  call $~lib/rt/itcms/__renew
  local.set $data
  local.get $out
  local.get $data
  i32.store $0
  local.get $out
  local.get $data
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $out
  local.get $byteLength
  i32.store $0 offset=8
  local.get $out
  local.get $data
  i32.store $0 offset=4
  local.get $out
  local.set $15
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $15
 )
 (func $~lib/typedarray/Float64Array#filter (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $len i32)
  (local $out i32)
  (local $buf i32)
  (local $dataStart i32)
  (local $j i32)
  (local $i i32)
  (local $10 i32)
  (local $value f64)
  (local $12 i32)
  (local $byteLength i32)
  (local $data i32)
  (local $15 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|3
  local.get $array
  call $~lib/typedarray/Float64Array#get:length
  local.set $len
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 13
  call $~lib/rt/itcms/__new
  local.tee $out
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $len
  i32.const 3
  i32.shl
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $buf
  i32.store $0 offset=4
  local.get $array
  i32.load $0 offset=4
  local.set $dataStart
  i32.const 0
  local.set $j
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $len
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $dataStart
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    f64.load $0
    local.set $value
    local.get $value
    local.get $i
    local.get $array
    i32.const 3
    global.set $~argumentsLength
    local.get $fn|3
    i32.load $0
    call_indirect $0 (type $f64_i32_i32_=>_i32)
    if
     local.get $buf
     local.get $j
     local.tee $12
     i32.const 1
     i32.add
     local.set $j
     local.get $12
     i32.const 3
     i32.shl
     i32.add
     local.get $value
     f64.store $0
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $j
  i32.const 3
  i32.shl
  local.set $byteLength
  local.get $buf
  local.get $byteLength
  call $~lib/rt/itcms/__renew
  local.set $data
  local.get $out
  local.get $data
  i32.store $0
  local.get $out
  local.get $data
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $out
  local.get $byteLength
  i32.store $0 offset=8
  local.get $out
  local.get $data
  i32.store $0 offset=4
  local.get $out
  local.set $15
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $15
 )
 (func $~lib/typedarray/Uint8Array#subarray (type $i32_i32_i32_=>_i32) (param $this i32) (param $begin i32) (param $end i32) (result i32)
  (local $array i32)
  (local $begin|4 i32)
  (local $end|5 i32)
  (local $len i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $out i32)
  (local $buf i32)
  (local $19 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $array
  local.get $begin
  local.set $begin|4
  local.get $end
  local.set $end|5
  local.get $array
  call $~lib/typedarray/Uint8Array#get:length
  local.set $len
  local.get $begin|4
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $begin|4
   i32.add
   local.tee $7
   i32.const 0
   local.tee $8
   local.get $7
   local.get $8
   i32.gt_s
   select
  else
   local.get $begin|4
   local.tee $9
   local.get $len
   local.tee $10
   local.get $9
   local.get $10
   i32.lt_s
   select
  end
  local.set $begin|4
  local.get $end|5
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $end|5
   i32.add
   local.tee $11
   i32.const 0
   local.tee $12
   local.get $11
   local.get $12
   i32.gt_s
   select
  else
   local.get $end|5
   local.tee $13
   local.get $len
   local.tee $14
   local.get $13
   local.get $14
   i32.lt_s
   select
  end
  local.set $end|5
  local.get $end|5
  local.tee $15
  local.get $begin|4
  local.tee $16
  local.get $15
  local.get $16
  i32.gt_s
  select
  local.set $end|5
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 4
  call $~lib/rt/itcms/__new
  local.tee $out
  i32.store $0
  local.get $array
  i32.load $0
  local.set $buf
  local.get $out
  local.get $buf
  i32.store $0
  local.get $out
  local.get $buf
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $out
  local.get $array
  i32.load $0 offset=4
  local.get $begin|4
  i32.const 0
  i32.shl
  i32.add
  i32.store $0 offset=4
  local.get $out
  local.get $end|5
  local.get $begin|4
  i32.sub
  i32.const 0
  i32.shl
  i32.store $0 offset=8
  local.get $out
  local.set $19
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $19
 )
 (func $~lib/typedarray/Uint8ClampedArray#subarray (type $i32_i32_i32_=>_i32) (param $this i32) (param $start i32) (param $end i32) (result i32)
  (local $array i32)
  (local $begin i32)
  (local $end|5 i32)
  (local $len i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $out i32)
  (local $buf i32)
  (local $19 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $array
  local.get $start
  local.set $begin
  local.get $end
  local.set $end|5
  local.get $array
  call $~lib/typedarray/Uint8ClampedArray#get:length
  local.set $len
  local.get $begin
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $begin
   i32.add
   local.tee $7
   i32.const 0
   local.tee $8
   local.get $7
   local.get $8
   i32.gt_s
   select
  else
   local.get $begin
   local.tee $9
   local.get $len
   local.tee $10
   local.get $9
   local.get $10
   i32.lt_s
   select
  end
  local.set $begin
  local.get $end|5
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $end|5
   i32.add
   local.tee $11
   i32.const 0
   local.tee $12
   local.get $11
   local.get $12
   i32.gt_s
   select
  else
   local.get $end|5
   local.tee $13
   local.get $len
   local.tee $14
   local.get $13
   local.get $14
   i32.lt_s
   select
  end
  local.set $end|5
  local.get $end|5
  local.tee $15
  local.get $begin
  local.tee $16
  local.get $15
  local.get $16
  i32.gt_s
  select
  local.set $end|5
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 5
  call $~lib/rt/itcms/__new
  local.tee $out
  i32.store $0
  local.get $array
  i32.load $0
  local.set $buf
  local.get $out
  local.get $buf
  i32.store $0
  local.get $out
  local.get $buf
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $out
  local.get $array
  i32.load $0 offset=4
  local.get $begin
  i32.const 0
  i32.shl
  i32.add
  i32.store $0 offset=4
  local.get $out
  local.get $end|5
  local.get $begin
  i32.sub
  i32.const 0
  i32.shl
  i32.store $0 offset=8
  local.get $out
  local.set $19
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $19
 )
 (func $~lib/typedarray/Int16Array#subarray (type $i32_i32_i32_=>_i32) (param $this i32) (param $begin i32) (param $end i32) (result i32)
  (local $array i32)
  (local $begin|4 i32)
  (local $end|5 i32)
  (local $len i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $out i32)
  (local $buf i32)
  (local $19 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $array
  local.get $begin
  local.set $begin|4
  local.get $end
  local.set $end|5
  local.get $array
  call $~lib/typedarray/Int16Array#get:length
  local.set $len
  local.get $begin|4
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $begin|4
   i32.add
   local.tee $7
   i32.const 0
   local.tee $8
   local.get $7
   local.get $8
   i32.gt_s
   select
  else
   local.get $begin|4
   local.tee $9
   local.get $len
   local.tee $10
   local.get $9
   local.get $10
   i32.lt_s
   select
  end
  local.set $begin|4
  local.get $end|5
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $end|5
   i32.add
   local.tee $11
   i32.const 0
   local.tee $12
   local.get $11
   local.get $12
   i32.gt_s
   select
  else
   local.get $end|5
   local.tee $13
   local.get $len
   local.tee $14
   local.get $13
   local.get $14
   i32.lt_s
   select
  end
  local.set $end|5
  local.get $end|5
  local.tee $15
  local.get $begin|4
  local.tee $16
  local.get $15
  local.get $16
  i32.gt_s
  select
  local.set $end|5
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 6
  call $~lib/rt/itcms/__new
  local.tee $out
  i32.store $0
  local.get $array
  i32.load $0
  local.set $buf
  local.get $out
  local.get $buf
  i32.store $0
  local.get $out
  local.get $buf
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $out
  local.get $array
  i32.load $0 offset=4
  local.get $begin|4
  i32.const 1
  i32.shl
  i32.add
  i32.store $0 offset=4
  local.get $out
  local.get $end|5
  local.get $begin|4
  i32.sub
  i32.const 1
  i32.shl
  i32.store $0 offset=8
  local.get $out
  local.set $19
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $19
 )
 (func $~lib/typedarray/Uint16Array#subarray (type $i32_i32_i32_=>_i32) (param $this i32) (param $begin i32) (param $end i32) (result i32)
  (local $array i32)
  (local $begin|4 i32)
  (local $end|5 i32)
  (local $len i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $out i32)
  (local $buf i32)
  (local $19 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $array
  local.get $begin
  local.set $begin|4
  local.get $end
  local.set $end|5
  local.get $array
  call $~lib/typedarray/Uint16Array#get:length
  local.set $len
  local.get $begin|4
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $begin|4
   i32.add
   local.tee $7
   i32.const 0
   local.tee $8
   local.get $7
   local.get $8
   i32.gt_s
   select
  else
   local.get $begin|4
   local.tee $9
   local.get $len
   local.tee $10
   local.get $9
   local.get $10
   i32.lt_s
   select
  end
  local.set $begin|4
  local.get $end|5
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $end|5
   i32.add
   local.tee $11
   i32.const 0
   local.tee $12
   local.get $11
   local.get $12
   i32.gt_s
   select
  else
   local.get $end|5
   local.tee $13
   local.get $len
   local.tee $14
   local.get $13
   local.get $14
   i32.lt_s
   select
  end
  local.set $end|5
  local.get $end|5
  local.tee $15
  local.get $begin|4
  local.tee $16
  local.get $15
  local.get $16
  i32.gt_s
  select
  local.set $end|5
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 7
  call $~lib/rt/itcms/__new
  local.tee $out
  i32.store $0
  local.get $array
  i32.load $0
  local.set $buf
  local.get $out
  local.get $buf
  i32.store $0
  local.get $out
  local.get $buf
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $out
  local.get $array
  i32.load $0 offset=4
  local.get $begin|4
  i32.const 1
  i32.shl
  i32.add
  i32.store $0 offset=4
  local.get $out
  local.get $end|5
  local.get $begin|4
  i32.sub
  i32.const 1
  i32.shl
  i32.store $0 offset=8
  local.get $out
  local.set $19
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $19
 )
 (func $~lib/typedarray/Uint32Array#subarray (type $i32_i32_i32_=>_i32) (param $this i32) (param $begin i32) (param $end i32) (result i32)
  (local $array i32)
  (local $begin|4 i32)
  (local $end|5 i32)
  (local $len i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $out i32)
  (local $buf i32)
  (local $19 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $array
  local.get $begin
  local.set $begin|4
  local.get $end
  local.set $end|5
  local.get $array
  call $~lib/typedarray/Uint32Array#get:length
  local.set $len
  local.get $begin|4
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $begin|4
   i32.add
   local.tee $7
   i32.const 0
   local.tee $8
   local.get $7
   local.get $8
   i32.gt_s
   select
  else
   local.get $begin|4
   local.tee $9
   local.get $len
   local.tee $10
   local.get $9
   local.get $10
   i32.lt_s
   select
  end
  local.set $begin|4
  local.get $end|5
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $end|5
   i32.add
   local.tee $11
   i32.const 0
   local.tee $12
   local.get $11
   local.get $12
   i32.gt_s
   select
  else
   local.get $end|5
   local.tee $13
   local.get $len
   local.tee $14
   local.get $13
   local.get $14
   i32.lt_s
   select
  end
  local.set $end|5
  local.get $end|5
  local.tee $15
  local.get $begin|4
  local.tee $16
  local.get $15
  local.get $16
  i32.gt_s
  select
  local.set $end|5
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 9
  call $~lib/rt/itcms/__new
  local.tee $out
  i32.store $0
  local.get $array
  i32.load $0
  local.set $buf
  local.get $out
  local.get $buf
  i32.store $0
  local.get $out
  local.get $buf
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $out
  local.get $array
  i32.load $0 offset=4
  local.get $begin|4
  i32.const 2
  i32.shl
  i32.add
  i32.store $0 offset=4
  local.get $out
  local.get $end|5
  local.get $begin|4
  i32.sub
  i32.const 2
  i32.shl
  i32.store $0 offset=8
  local.get $out
  local.set $19
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $19
 )
 (func $~lib/typedarray/Int64Array#subarray (type $i32_i32_i32_=>_i32) (param $this i32) (param $begin i32) (param $end i32) (result i32)
  (local $array i32)
  (local $begin|4 i32)
  (local $end|5 i32)
  (local $len i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $out i32)
  (local $buf i32)
  (local $19 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $array
  local.get $begin
  local.set $begin|4
  local.get $end
  local.set $end|5
  local.get $array
  call $~lib/typedarray/Int64Array#get:length
  local.set $len
  local.get $begin|4
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $begin|4
   i32.add
   local.tee $7
   i32.const 0
   local.tee $8
   local.get $7
   local.get $8
   i32.gt_s
   select
  else
   local.get $begin|4
   local.tee $9
   local.get $len
   local.tee $10
   local.get $9
   local.get $10
   i32.lt_s
   select
  end
  local.set $begin|4
  local.get $end|5
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $end|5
   i32.add
   local.tee $11
   i32.const 0
   local.tee $12
   local.get $11
   local.get $12
   i32.gt_s
   select
  else
   local.get $end|5
   local.tee $13
   local.get $len
   local.tee $14
   local.get $13
   local.get $14
   i32.lt_s
   select
  end
  local.set $end|5
  local.get $end|5
  local.tee $15
  local.get $begin|4
  local.tee $16
  local.get $15
  local.get $16
  i32.gt_s
  select
  local.set $end|5
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 10
  call $~lib/rt/itcms/__new
  local.tee $out
  i32.store $0
  local.get $array
  i32.load $0
  local.set $buf
  local.get $out
  local.get $buf
  i32.store $0
  local.get $out
  local.get $buf
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $out
  local.get $array
  i32.load $0 offset=4
  local.get $begin|4
  i32.const 3
  i32.shl
  i32.add
  i32.store $0 offset=4
  local.get $out
  local.get $end|5
  local.get $begin|4
  i32.sub
  i32.const 3
  i32.shl
  i32.store $0 offset=8
  local.get $out
  local.set $19
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $19
 )
 (func $~lib/typedarray/Uint64Array#subarray (type $i32_i32_i32_=>_i32) (param $this i32) (param $begin i32) (param $end i32) (result i32)
  (local $array i32)
  (local $begin|4 i32)
  (local $end|5 i32)
  (local $len i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $out i32)
  (local $buf i32)
  (local $19 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $array
  local.get $begin
  local.set $begin|4
  local.get $end
  local.set $end|5
  local.get $array
  call $~lib/typedarray/Uint64Array#get:length
  local.set $len
  local.get $begin|4
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $begin|4
   i32.add
   local.tee $7
   i32.const 0
   local.tee $8
   local.get $7
   local.get $8
   i32.gt_s
   select
  else
   local.get $begin|4
   local.tee $9
   local.get $len
   local.tee $10
   local.get $9
   local.get $10
   i32.lt_s
   select
  end
  local.set $begin|4
  local.get $end|5
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $end|5
   i32.add
   local.tee $11
   i32.const 0
   local.tee $12
   local.get $11
   local.get $12
   i32.gt_s
   select
  else
   local.get $end|5
   local.tee $13
   local.get $len
   local.tee $14
   local.get $13
   local.get $14
   i32.lt_s
   select
  end
  local.set $end|5
  local.get $end|5
  local.tee $15
  local.get $begin|4
  local.tee $16
  local.get $15
  local.get $16
  i32.gt_s
  select
  local.set $end|5
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 11
  call $~lib/rt/itcms/__new
  local.tee $out
  i32.store $0
  local.get $array
  i32.load $0
  local.set $buf
  local.get $out
  local.get $buf
  i32.store $0
  local.get $out
  local.get $buf
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $out
  local.get $array
  i32.load $0 offset=4
  local.get $begin|4
  i32.const 3
  i32.shl
  i32.add
  i32.store $0 offset=4
  local.get $out
  local.get $end|5
  local.get $begin|4
  i32.sub
  i32.const 3
  i32.shl
  i32.store $0 offset=8
  local.get $out
  local.set $19
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $19
 )
 (func $~lib/typedarray/Float32Array#subarray (type $i32_i32_i32_=>_i32) (param $this i32) (param $begin i32) (param $end i32) (result i32)
  (local $array i32)
  (local $begin|4 i32)
  (local $end|5 i32)
  (local $len i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $out i32)
  (local $buf i32)
  (local $19 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $array
  local.get $begin
  local.set $begin|4
  local.get $end
  local.set $end|5
  local.get $array
  call $~lib/typedarray/Float32Array#get:length
  local.set $len
  local.get $begin|4
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $begin|4
   i32.add
   local.tee $7
   i32.const 0
   local.tee $8
   local.get $7
   local.get $8
   i32.gt_s
   select
  else
   local.get $begin|4
   local.tee $9
   local.get $len
   local.tee $10
   local.get $9
   local.get $10
   i32.lt_s
   select
  end
  local.set $begin|4
  local.get $end|5
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $end|5
   i32.add
   local.tee $11
   i32.const 0
   local.tee $12
   local.get $11
   local.get $12
   i32.gt_s
   select
  else
   local.get $end|5
   local.tee $13
   local.get $len
   local.tee $14
   local.get $13
   local.get $14
   i32.lt_s
   select
  end
  local.set $end|5
  local.get $end|5
  local.tee $15
  local.get $begin|4
  local.tee $16
  local.get $15
  local.get $16
  i32.gt_s
  select
  local.set $end|5
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 12
  call $~lib/rt/itcms/__new
  local.tee $out
  i32.store $0
  local.get $array
  i32.load $0
  local.set $buf
  local.get $out
  local.get $buf
  i32.store $0
  local.get $out
  local.get $buf
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $out
  local.get $array
  i32.load $0 offset=4
  local.get $begin|4
  i32.const 2
  i32.shl
  i32.add
  i32.store $0 offset=4
  local.get $out
  local.get $end|5
  local.get $begin|4
  i32.sub
  i32.const 2
  i32.shl
  i32.store $0 offset=8
  local.get $out
  local.set $19
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $19
 )
 (func $~lib/arraybuffer/ArrayBuffer#constructor (type $i32_i32_=>_i32) (param $this i32) (param $length i32) (result i32)
  (local $buffer i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $length
  i32.const 1073741820
  i32.gt_u
  if
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $length
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $buffer
  i32.store $0
  i32.const 2
  global.get $~lib/shared/runtime/Runtime.Incremental
  i32.ne
  drop
  local.get $buffer
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/typedarray/Uint8Array.wrap (type $i32_i32_i32_=>_i32) (param $buffer i32) (param $byteOffset i32) (param $length i32) (result i32)
  (local $buffer|3 i32)
  (local $byteOffset|4 i32)
  (local $len i32)
  (local $byteLength i32)
  (local $bufferByteLength i32)
  (local $out i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $buffer
  local.set $buffer|3
  local.get $byteOffset
  local.set $byteOffset|4
  local.get $length
  local.set $len
  local.get $buffer|3
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  local.set $bufferByteLength
  local.get $byteOffset|4
  local.get $bufferByteLength
  i32.gt_u
  local.get $byteOffset|4
  i32.const 0
  i32.and
  i32.or
  if
   unreachable
  end
  local.get $len
  i32.const 0
  i32.lt_s
  if
   local.get $len
   i32.const -1
   i32.eq
   if
    local.get $bufferByteLength
    i32.const 0
    i32.and
    if
     unreachable
    end
    local.get $bufferByteLength
    local.get $byteOffset|4
    i32.sub
    local.set $byteLength
   else
    unreachable
   end
  else
   local.get $len
   i32.const 0
   i32.shl
   local.set $byteLength
   local.get $byteOffset|4
   local.get $byteLength
   i32.add
   local.get $bufferByteLength
   i32.gt_s
   if
    unreachable
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 4
  call $~lib/rt/itcms/__new
  local.tee $out
  i32.store $0
  local.get $out
  local.get $buffer|3
  i32.store $0
  local.get $out
  local.get $buffer|3
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $out
  local.get $byteLength
  i32.store $0 offset=8
  local.get $out
  local.get $buffer|3
  local.get $byteOffset|4
  i32.add
  i32.store $0 offset=4
  local.get $out
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
 )
 (func $~lib/arraybuffer/ArrayBuffer#slice (type $i32_i32_i32_=>_i32) (param $this i32) (param $begin i32) (param $end i32) (result i32)
  (local $length i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $outSize i32)
  (local $out i32)
  (local $16 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  local.set $length
  local.get $begin
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $length
   local.get $begin
   i32.add
   local.tee $4
   i32.const 0
   local.tee $5
   local.get $4
   local.get $5
   i32.gt_s
   select
  else
   local.get $begin
   local.tee $6
   local.get $length
   local.tee $7
   local.get $6
   local.get $7
   i32.lt_s
   select
  end
  local.set $begin
  local.get $end
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $length
   local.get $end
   i32.add
   local.tee $8
   i32.const 0
   local.tee $9
   local.get $8
   local.get $9
   i32.gt_s
   select
  else
   local.get $end
   local.tee $10
   local.get $length
   local.tee $11
   local.get $10
   local.get $11
   i32.lt_s
   select
  end
  local.set $end
  local.get $end
  local.get $begin
  i32.sub
  local.tee $12
  i32.const 0
  local.tee $13
  local.get $12
  local.get $13
  i32.gt_s
  select
  local.set $outSize
  global.get $~lib/memory/__stack_pointer
  local.get $outSize
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $out
  i32.store $0
  local.get $out
  local.get $this
  local.get $begin
  i32.add
  local.get $outSize
  memory.copy $0 $0
  local.get $out
  local.set $16
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $16
 )
 (func $~lib/typedarray/Int8Array.wrap (type $i32_i32_i32_=>_i32) (param $buffer i32) (param $byteOffset i32) (param $length i32) (result i32)
  (local $buffer|3 i32)
  (local $byteOffset|4 i32)
  (local $len i32)
  (local $byteLength i32)
  (local $bufferByteLength i32)
  (local $out i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $buffer
  local.set $buffer|3
  local.get $byteOffset
  local.set $byteOffset|4
  local.get $length
  local.set $len
  local.get $buffer|3
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  local.set $bufferByteLength
  local.get $byteOffset|4
  local.get $bufferByteLength
  i32.gt_u
  local.get $byteOffset|4
  i32.const 0
  i32.and
  i32.or
  if
   unreachable
  end
  local.get $len
  i32.const 0
  i32.lt_s
  if
   local.get $len
   i32.const -1
   i32.eq
   if
    local.get $bufferByteLength
    i32.const 0
    i32.and
    if
     unreachable
    end
    local.get $bufferByteLength
    local.get $byteOffset|4
    i32.sub
    local.set $byteLength
   else
    unreachable
   end
  else
   local.get $len
   i32.const 0
   i32.shl
   local.set $byteLength
   local.get $byteOffset|4
   local.get $byteLength
   i32.add
   local.get $bufferByteLength
   i32.gt_s
   if
    unreachable
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 3
  call $~lib/rt/itcms/__new
  local.tee $out
  i32.store $0
  local.get $out
  local.get $buffer|3
  i32.store $0
  local.get $out
  local.get $buffer|3
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $out
  local.get $byteLength
  i32.store $0 offset=8
  local.get $out
  local.get $buffer|3
  local.get $byteOffset|4
  i32.add
  i32.store $0 offset=4
  local.get $out
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
 )
 (func $~lib/typedarray/Uint8ClampedArray.wrap (type $i32_i32_i32_=>_i32) (param $buffer i32) (param $byteOffset i32) (param $length i32) (result i32)
  (local $buffer|3 i32)
  (local $byteOffset|4 i32)
  (local $len i32)
  (local $byteLength i32)
  (local $bufferByteLength i32)
  (local $out i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $buffer
  local.set $buffer|3
  local.get $byteOffset
  local.set $byteOffset|4
  local.get $length
  local.set $len
  local.get $buffer|3
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  local.set $bufferByteLength
  local.get $byteOffset|4
  local.get $bufferByteLength
  i32.gt_u
  local.get $byteOffset|4
  i32.const 0
  i32.and
  i32.or
  if
   unreachable
  end
  local.get $len
  i32.const 0
  i32.lt_s
  if
   local.get $len
   i32.const -1
   i32.eq
   if
    local.get $bufferByteLength
    i32.const 0
    i32.and
    if
     unreachable
    end
    local.get $bufferByteLength
    local.get $byteOffset|4
    i32.sub
    local.set $byteLength
   else
    unreachable
   end
  else
   local.get $len
   i32.const 0
   i32.shl
   local.set $byteLength
   local.get $byteOffset|4
   local.get $byteLength
   i32.add
   local.get $bufferByteLength
   i32.gt_s
   if
    unreachable
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 5
  call $~lib/rt/itcms/__new
  local.tee $out
  i32.store $0
  local.get $out
  local.get $buffer|3
  i32.store $0
  local.get $out
  local.get $buffer|3
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $out
  local.get $byteLength
  i32.store $0 offset=8
  local.get $out
  local.get $buffer|3
  local.get $byteOffset|4
  i32.add
  i32.store $0 offset=4
  local.get $out
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
 )
 (func $~lib/typedarray/Int16Array.wrap (type $i32_i32_i32_=>_i32) (param $buffer i32) (param $byteOffset i32) (param $length i32) (result i32)
  (local $buffer|3 i32)
  (local $byteOffset|4 i32)
  (local $len i32)
  (local $byteLength i32)
  (local $bufferByteLength i32)
  (local $out i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $buffer
  local.set $buffer|3
  local.get $byteOffset
  local.set $byteOffset|4
  local.get $length
  local.set $len
  local.get $buffer|3
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  local.set $bufferByteLength
  local.get $byteOffset|4
  local.get $bufferByteLength
  i32.gt_u
  local.get $byteOffset|4
  i32.const 1
  i32.and
  i32.or
  if
   unreachable
  end
  local.get $len
  i32.const 0
  i32.lt_s
  if
   local.get $len
   i32.const -1
   i32.eq
   if
    local.get $bufferByteLength
    i32.const 1
    i32.and
    if
     unreachable
    end
    local.get $bufferByteLength
    local.get $byteOffset|4
    i32.sub
    local.set $byteLength
   else
    unreachable
   end
  else
   local.get $len
   i32.const 1
   i32.shl
   local.set $byteLength
   local.get $byteOffset|4
   local.get $byteLength
   i32.add
   local.get $bufferByteLength
   i32.gt_s
   if
    unreachable
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 6
  call $~lib/rt/itcms/__new
  local.tee $out
  i32.store $0
  local.get $out
  local.get $buffer|3
  i32.store $0
  local.get $out
  local.get $buffer|3
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $out
  local.get $byteLength
  i32.store $0 offset=8
  local.get $out
  local.get $buffer|3
  local.get $byteOffset|4
  i32.add
  i32.store $0 offset=4
  local.get $out
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
 )
 (func $~lib/typedarray/Uint16Array.wrap (type $i32_i32_i32_=>_i32) (param $buffer i32) (param $byteOffset i32) (param $length i32) (result i32)
  (local $buffer|3 i32)
  (local $byteOffset|4 i32)
  (local $len i32)
  (local $byteLength i32)
  (local $bufferByteLength i32)
  (local $out i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $buffer
  local.set $buffer|3
  local.get $byteOffset
  local.set $byteOffset|4
  local.get $length
  local.set $len
  local.get $buffer|3
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  local.set $bufferByteLength
  local.get $byteOffset|4
  local.get $bufferByteLength
  i32.gt_u
  local.get $byteOffset|4
  i32.const 1
  i32.and
  i32.or
  if
   unreachable
  end
  local.get $len
  i32.const 0
  i32.lt_s
  if
   local.get $len
   i32.const -1
   i32.eq
   if
    local.get $bufferByteLength
    i32.const 1
    i32.and
    if
     unreachable
    end
    local.get $bufferByteLength
    local.get $byteOffset|4
    i32.sub
    local.set $byteLength
   else
    unreachable
   end
  else
   local.get $len
   i32.const 1
   i32.shl
   local.set $byteLength
   local.get $byteOffset|4
   local.get $byteLength
   i32.add
   local.get $bufferByteLength
   i32.gt_s
   if
    unreachable
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 7
  call $~lib/rt/itcms/__new
  local.tee $out
  i32.store $0
  local.get $out
  local.get $buffer|3
  i32.store $0
  local.get $out
  local.get $buffer|3
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $out
  local.get $byteLength
  i32.store $0 offset=8
  local.get $out
  local.get $buffer|3
  local.get $byteOffset|4
  i32.add
  i32.store $0 offset=4
  local.get $out
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
 )
 (func $~lib/typedarray/Int32Array.wrap (type $i32_i32_i32_=>_i32) (param $buffer i32) (param $byteOffset i32) (param $length i32) (result i32)
  (local $buffer|3 i32)
  (local $byteOffset|4 i32)
  (local $len i32)
  (local $byteLength i32)
  (local $bufferByteLength i32)
  (local $out i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $buffer
  local.set $buffer|3
  local.get $byteOffset
  local.set $byteOffset|4
  local.get $length
  local.set $len
  local.get $buffer|3
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  local.set $bufferByteLength
  local.get $byteOffset|4
  local.get $bufferByteLength
  i32.gt_u
  local.get $byteOffset|4
  i32.const 3
  i32.and
  i32.or
  if
   unreachable
  end
  local.get $len
  i32.const 0
  i32.lt_s
  if
   local.get $len
   i32.const -1
   i32.eq
   if
    local.get $bufferByteLength
    i32.const 3
    i32.and
    if
     unreachable
    end
    local.get $bufferByteLength
    local.get $byteOffset|4
    i32.sub
    local.set $byteLength
   else
    unreachable
   end
  else
   local.get $len
   i32.const 2
   i32.shl
   local.set $byteLength
   local.get $byteOffset|4
   local.get $byteLength
   i32.add
   local.get $bufferByteLength
   i32.gt_s
   if
    unreachable
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 8
  call $~lib/rt/itcms/__new
  local.tee $out
  i32.store $0
  local.get $out
  local.get $buffer|3
  i32.store $0
  local.get $out
  local.get $buffer|3
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $out
  local.get $byteLength
  i32.store $0 offset=8
  local.get $out
  local.get $buffer|3
  local.get $byteOffset|4
  i32.add
  i32.store $0 offset=4
  local.get $out
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
 )
 (func $~lib/typedarray/Uint32Array.wrap (type $i32_i32_i32_=>_i32) (param $buffer i32) (param $byteOffset i32) (param $length i32) (result i32)
  (local $buffer|3 i32)
  (local $byteOffset|4 i32)
  (local $len i32)
  (local $byteLength i32)
  (local $bufferByteLength i32)
  (local $out i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $buffer
  local.set $buffer|3
  local.get $byteOffset
  local.set $byteOffset|4
  local.get $length
  local.set $len
  local.get $buffer|3
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  local.set $bufferByteLength
  local.get $byteOffset|4
  local.get $bufferByteLength
  i32.gt_u
  local.get $byteOffset|4
  i32.const 3
  i32.and
  i32.or
  if
   unreachable
  end
  local.get $len
  i32.const 0
  i32.lt_s
  if
   local.get $len
   i32.const -1
   i32.eq
   if
    local.get $bufferByteLength
    i32.const 3
    i32.and
    if
     unreachable
    end
    local.get $bufferByteLength
    local.get $byteOffset|4
    i32.sub
    local.set $byteLength
   else
    unreachable
   end
  else
   local.get $len
   i32.const 2
   i32.shl
   local.set $byteLength
   local.get $byteOffset|4
   local.get $byteLength
   i32.add
   local.get $bufferByteLength
   i32.gt_s
   if
    unreachable
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 9
  call $~lib/rt/itcms/__new
  local.tee $out
  i32.store $0
  local.get $out
  local.get $buffer|3
  i32.store $0
  local.get $out
  local.get $buffer|3
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $out
  local.get $byteLength
  i32.store $0 offset=8
  local.get $out
  local.get $buffer|3
  local.get $byteOffset|4
  i32.add
  i32.store $0 offset=4
  local.get $out
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
 )
 (func $~lib/typedarray/Int64Array.wrap (type $i32_i32_i32_=>_i32) (param $buffer i32) (param $byteOffset i32) (param $length i32) (result i32)
  (local $buffer|3 i32)
  (local $byteOffset|4 i32)
  (local $len i32)
  (local $byteLength i32)
  (local $bufferByteLength i32)
  (local $out i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $buffer
  local.set $buffer|3
  local.get $byteOffset
  local.set $byteOffset|4
  local.get $length
  local.set $len
  local.get $buffer|3
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  local.set $bufferByteLength
  local.get $byteOffset|4
  local.get $bufferByteLength
  i32.gt_u
  local.get $byteOffset|4
  i32.const 7
  i32.and
  i32.or
  if
   unreachable
  end
  local.get $len
  i32.const 0
  i32.lt_s
  if
   local.get $len
   i32.const -1
   i32.eq
   if
    local.get $bufferByteLength
    i32.const 7
    i32.and
    if
     unreachable
    end
    local.get $bufferByteLength
    local.get $byteOffset|4
    i32.sub
    local.set $byteLength
   else
    unreachable
   end
  else
   local.get $len
   i32.const 3
   i32.shl
   local.set $byteLength
   local.get $byteOffset|4
   local.get $byteLength
   i32.add
   local.get $bufferByteLength
   i32.gt_s
   if
    unreachable
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 10
  call $~lib/rt/itcms/__new
  local.tee $out
  i32.store $0
  local.get $out
  local.get $buffer|3
  i32.store $0
  local.get $out
  local.get $buffer|3
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $out
  local.get $byteLength
  i32.store $0 offset=8
  local.get $out
  local.get $buffer|3
  local.get $byteOffset|4
  i32.add
  i32.store $0 offset=4
  local.get $out
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
 )
 (func $~lib/typedarray/Uint64Array.wrap (type $i32_i32_i32_=>_i32) (param $buffer i32) (param $byteOffset i32) (param $length i32) (result i32)
  (local $buffer|3 i32)
  (local $byteOffset|4 i32)
  (local $len i32)
  (local $byteLength i32)
  (local $bufferByteLength i32)
  (local $out i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $buffer
  local.set $buffer|3
  local.get $byteOffset
  local.set $byteOffset|4
  local.get $length
  local.set $len
  local.get $buffer|3
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  local.set $bufferByteLength
  local.get $byteOffset|4
  local.get $bufferByteLength
  i32.gt_u
  local.get $byteOffset|4
  i32.const 7
  i32.and
  i32.or
  if
   unreachable
  end
  local.get $len
  i32.const 0
  i32.lt_s
  if
   local.get $len
   i32.const -1
   i32.eq
   if
    local.get $bufferByteLength
    i32.const 7
    i32.and
    if
     unreachable
    end
    local.get $bufferByteLength
    local.get $byteOffset|4
    i32.sub
    local.set $byteLength
   else
    unreachable
   end
  else
   local.get $len
   i32.const 3
   i32.shl
   local.set $byteLength
   local.get $byteOffset|4
   local.get $byteLength
   i32.add
   local.get $bufferByteLength
   i32.gt_s
   if
    unreachable
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 11
  call $~lib/rt/itcms/__new
  local.tee $out
  i32.store $0
  local.get $out
  local.get $buffer|3
  i32.store $0
  local.get $out
  local.get $buffer|3
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $out
  local.get $byteLength
  i32.store $0 offset=8
  local.get $out
  local.get $buffer|3
  local.get $byteOffset|4
  i32.add
  i32.store $0 offset=4
  local.get $out
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
 )
 (func $~lib/typedarray/Float32Array.wrap (type $i32_i32_i32_=>_i32) (param $buffer i32) (param $byteOffset i32) (param $length i32) (result i32)
  (local $buffer|3 i32)
  (local $byteOffset|4 i32)
  (local $len i32)
  (local $byteLength i32)
  (local $bufferByteLength i32)
  (local $out i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $buffer
  local.set $buffer|3
  local.get $byteOffset
  local.set $byteOffset|4
  local.get $length
  local.set $len
  local.get $buffer|3
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  local.set $bufferByteLength
  local.get $byteOffset|4
  local.get $bufferByteLength
  i32.gt_u
  local.get $byteOffset|4
  i32.const 3
  i32.and
  i32.or
  if
   unreachable
  end
  local.get $len
  i32.const 0
  i32.lt_s
  if
   local.get $len
   i32.const -1
   i32.eq
   if
    local.get $bufferByteLength
    i32.const 3
    i32.and
    if
     unreachable
    end
    local.get $bufferByteLength
    local.get $byteOffset|4
    i32.sub
    local.set $byteLength
   else
    unreachable
   end
  else
   local.get $len
   i32.const 2
   i32.shl
   local.set $byteLength
   local.get $byteOffset|4
   local.get $byteLength
   i32.add
   local.get $bufferByteLength
   i32.gt_s
   if
    unreachable
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 12
  call $~lib/rt/itcms/__new
  local.tee $out
  i32.store $0
  local.get $out
  local.get $buffer|3
  i32.store $0
  local.get $out
  local.get $buffer|3
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $out
  local.get $byteLength
  i32.store $0 offset=8
  local.get $out
  local.get $buffer|3
  local.get $byteOffset|4
  i32.add
  i32.store $0 offset=4
  local.get $out
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
 )
 (func $~lib/typedarray/Float64Array.wrap (type $i32_i32_i32_=>_i32) (param $buffer i32) (param $byteOffset i32) (param $length i32) (result i32)
  (local $buffer|3 i32)
  (local $byteOffset|4 i32)
  (local $len i32)
  (local $byteLength i32)
  (local $bufferByteLength i32)
  (local $out i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $buffer
  local.set $buffer|3
  local.get $byteOffset
  local.set $byteOffset|4
  local.get $length
  local.set $len
  local.get $buffer|3
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  local.set $bufferByteLength
  local.get $byteOffset|4
  local.get $bufferByteLength
  i32.gt_u
  local.get $byteOffset|4
  i32.const 7
  i32.and
  i32.or
  if
   unreachable
  end
  local.get $len
  i32.const 0
  i32.lt_s
  if
   local.get $len
   i32.const -1
   i32.eq
   if
    local.get $bufferByteLength
    i32.const 7
    i32.and
    if
     unreachable
    end
    local.get $bufferByteLength
    local.get $byteOffset|4
    i32.sub
    local.set $byteLength
   else
    unreachable
   end
  else
   local.get $len
   i32.const 3
   i32.shl
   local.set $byteLength
   local.get $byteOffset|4
   local.get $byteLength
   i32.add
   local.get $bufferByteLength
   i32.gt_s
   if
    unreachable
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 13
  call $~lib/rt/itcms/__new
  local.tee $out
  i32.store $0
  local.get $out
  local.get $buffer|3
  i32.store $0
  local.get $out
  local.get $buffer|3
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $out
  local.get $byteLength
  i32.store $0 offset=8
  local.get $out
  local.get $buffer|3
  local.get $byteOffset|4
  i32.add
  i32.store $0 offset=4
  local.get $out
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
 )
 (func $~lib/typedarray/Int8Array#sort@varargs (type $i32_i32_=>_i32) (param $this i32) (param $comparator i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   block $~lib/util/sort/COMPARATOR<i8>|inlined.0 (result i32)
    i32.const 1
    drop
    i32.const 1
    i32.const 4
    i32.le_u
    drop
    i32.const 10240
    br $~lib/util/sort/COMPARATOR<i8>|inlined.0
   end
   local.tee $comparator
   i32.store $0
  end
  local.get $this
  local.get $comparator
  call $~lib/typedarray/Int8Array#sort
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/typedarray/Uint8Array#sort@varargs (type $i32_i32_=>_i32) (param $this i32) (param $comparator i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   block $~lib/util/sort/COMPARATOR<u8>|inlined.0 (result i32)
    i32.const 1
    drop
    i32.const 0
    drop
    i32.const 10304
    br $~lib/util/sort/COMPARATOR<u8>|inlined.0
   end
   local.tee $comparator
   i32.store $0
  end
  local.get $this
  local.get $comparator
  call $~lib/typedarray/Uint8Array#sort
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/typedarray/Uint8ClampedArray#sort@varargs (type $i32_i32_=>_i32) (param $this i32) (param $comparator i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   block $~lib/util/sort/COMPARATOR<u8>|inlined.1 (result i32)
    i32.const 1
    drop
    i32.const 0
    drop
    i32.const 10368
    br $~lib/util/sort/COMPARATOR<u8>|inlined.1
   end
   local.tee $comparator
   i32.store $0
  end
  local.get $this
  local.get $comparator
  call $~lib/typedarray/Uint8ClampedArray#sort
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/typedarray/Int16Array#sort@varargs (type $i32_i32_=>_i32) (param $this i32) (param $comparator i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   block $~lib/util/sort/COMPARATOR<i16>|inlined.0 (result i32)
    i32.const 1
    drop
    i32.const 2
    i32.const 4
    i32.le_u
    drop
    i32.const 10432
    br $~lib/util/sort/COMPARATOR<i16>|inlined.0
   end
   local.tee $comparator
   i32.store $0
  end
  local.get $this
  local.get $comparator
  call $~lib/typedarray/Int16Array#sort
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/typedarray/Uint16Array#sort@varargs (type $i32_i32_=>_i32) (param $this i32) (param $comparator i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   block $~lib/util/sort/COMPARATOR<u16>|inlined.0 (result i32)
    i32.const 1
    drop
    i32.const 0
    drop
    i32.const 10496
    br $~lib/util/sort/COMPARATOR<u16>|inlined.0
   end
   local.tee $comparator
   i32.store $0
  end
  local.get $this
  local.get $comparator
  call $~lib/typedarray/Uint16Array#sort
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/typedarray/Int32Array#sort@varargs (type $i32_i32_=>_i32) (param $this i32) (param $comparator i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   block $~lib/util/sort/COMPARATOR<i32>|inlined.0 (result i32)
    i32.const 1
    drop
    i32.const 4
    i32.const 4
    i32.le_u
    drop
    i32.const 10560
    br $~lib/util/sort/COMPARATOR<i32>|inlined.0
   end
   local.tee $comparator
   i32.store $0
  end
  local.get $this
  local.get $comparator
  call $~lib/typedarray/Int32Array#sort
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/typedarray/Uint32Array#sort@varargs (type $i32_i32_=>_i32) (param $this i32) (param $comparator i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   block $~lib/util/sort/COMPARATOR<u32>|inlined.0 (result i32)
    i32.const 1
    drop
    i32.const 0
    drop
    i32.const 10624
    br $~lib/util/sort/COMPARATOR<u32>|inlined.0
   end
   local.tee $comparator
   i32.store $0
  end
  local.get $this
  local.get $comparator
  call $~lib/typedarray/Uint32Array#sort
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/typedarray/Int64Array#sort@varargs (type $i32_i32_=>_i32) (param $this i32) (param $comparator i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   block $~lib/util/sort/COMPARATOR<i64>|inlined.0 (result i32)
    i32.const 1
    drop
    i32.const 8
    i32.const 4
    i32.le_u
    drop
    i32.const 10688
    br $~lib/util/sort/COMPARATOR<i64>|inlined.0
   end
   local.tee $comparator
   i32.store $0
  end
  local.get $this
  local.get $comparator
  call $~lib/typedarray/Int64Array#sort
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/typedarray/Uint64Array#sort@varargs (type $i32_i32_=>_i32) (param $this i32) (param $comparator i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   block $~lib/util/sort/COMPARATOR<u64>|inlined.0 (result i32)
    i32.const 1
    drop
    i32.const 0
    drop
    i32.const 10752
    br $~lib/util/sort/COMPARATOR<u64>|inlined.0
   end
   local.tee $comparator
   i32.store $0
  end
  local.get $this
  local.get $comparator
  call $~lib/typedarray/Uint64Array#sort
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/typedarray/Float32Array#sort@varargs (type $i32_i32_=>_i32) (param $this i32) (param $comparator i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   block $~lib/util/sort/COMPARATOR<f32>|inlined.0 (result i32)
    i32.const 0
    drop
    i32.const 1
    drop
    i32.const 4
    i32.const 4
    i32.eq
    drop
    i32.const 10816
    br $~lib/util/sort/COMPARATOR<f32>|inlined.0
   end
   local.tee $comparator
   i32.store $0
  end
  local.get $this
  local.get $comparator
  call $~lib/typedarray/Float32Array#sort
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
)
