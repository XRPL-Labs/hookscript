(module
 (type $i32_i32_=>_i32 (func_subtype (param i32 i32) (result i32) func))
 (type $i32_i32_i32_=>_i32 (func_subtype (param i32 i32 i32) (result i32) func))
 (type $i32_i32_i32_=>_none (func_subtype (param i32 i32 i32) func))
 (type $i32_i32_i32_i32_=>_i32 (func_subtype (param i32 i32 i32 i32) (result i32) func))
 (type $i32_=>_i32 (func_subtype (param i32) (result i32) func))
 (type $i64_i32_i32_=>_i32 (func_subtype (param i64 i32 i32) (result i32) func))
 (type $i32_i32_=>_none (func_subtype (param i32 i32) func))
 (type $i64_i64_=>_i32 (func_subtype (param i64 i64) (result i32) func))
 (type $f32_i32_i32_=>_i32 (func_subtype (param f32 i32 i32) (result i32) func))
 (type $f64_i32_i32_=>_i32 (func_subtype (param f64 i32 i32) (result i32) func))
 (type $i32_i32_i32_i32_i32_=>_none (func_subtype (param i32 i32 i32 i32 i32) func))
 (type $f64_f64_=>_i32 (func_subtype (param f64 f64) (result i32) func))
 (type $f32_f32_=>_i32 (func_subtype (param f32 f32) (result i32) func))
 (type $i32_i32_i32_i32_i32_i32_=>_none (func_subtype (param i32 i32 i32 i32 i32 i32) func))
 (type $i64_i64_i32_i32_=>_i64 (func_subtype (param i64 i64 i32 i32) (result i64) func))
 (type $i32_i64_i32_=>_i32 (func_subtype (param i32 i64 i32) (result i32) func))
 (type $i32_i32_i64_=>_i64 (func_subtype (param i32 i32 i64) (result i64) func))
 (type $f32_f32_i32_i32_=>_f32 (func_subtype (param f32 f32 i32 i32) (result f32) func))
 (type $f64_f64_i32_i32_=>_f64 (func_subtype (param f64 f64 i32 i32) (result f64) func))
 (type $i32_i32_=>_i64 (func_subtype (param i32 i32) (result i64) func))
 (type $i32_i32_=>_f32 (func_subtype (param i32 i32) (result f32) func))
 (type $i64_i32_i32_=>_i64 (func_subtype (param i64 i32 i32) (result i64) func))
 (type $i64_i32_i32_=>_none (func_subtype (param i64 i32 i32) func))
 (type $i32_f32_i32_=>_i32 (func_subtype (param i32 f32 i32) (result i32) func))
 (type $i32_f64_i32_=>_i32 (func_subtype (param i32 f64 i32) (result i32) func))
 (type $i32_i32_=>_f64 (func_subtype (param i32 i32) (result f64) func))
 (type $i32_i32_i64_=>_none (func_subtype (param i32 i32 i64) func))
 (type $i32_i32_f32_=>_f32 (func_subtype (param i32 i32 f32) (result f32) func))
 (type $i32_i32_f64_=>_f64 (func_subtype (param i32 i32 f64) (result f64) func))
 (type $f32_i32_i32_=>_f32 (func_subtype (param f32 i32 i32) (result f32) func))
 (type $f64_i32_i32_=>_f64 (func_subtype (param f64 i32 i32) (result f64) func))
 (type $f32_i32_i32_=>_none (func_subtype (param f32 i32 i32) func))
 (type $f64_i32_i32_=>_none (func_subtype (param f64 i32 i32) func))
 (type $none_=>_none (func_subtype func))
 (type $i32_i32_i32_i32_=>_none (func_subtype (param i32 i32 i32 i32) func))
 (type $i32_i32_f64_=>_none (func_subtype (param i32 i32 f64) func))
 (type $i32_i32_i32_i32_i32_=>_i32 (func_subtype (param i32 i32 i32 i32 i32) (result i32) func))
 (type $i32_=>_none (func_subtype (param i32) func))
 (type $i32_i32_f32_=>_none (func_subtype (param i32 i32 f32) func))
 (type $f32_f32_=>_f32 (func_subtype (param f32 f32) (result f32) func))
 (type $f64_f64_=>_f64 (func_subtype (param f64 f64) (result f64) func))
 (import "env" "abort" (func $~lib/builtins/abort (param i32 i32 i32 i32)))
 (import "env" "_g" (func $~lib/builtins/_g (param i32 i32) (result i32)))
 (global $~lib/typedarray/Int8Array.BYTES_PER_ELEMENT i32 (i32.const 1))
 (global $~lib/typedarray/Uint8Array.BYTES_PER_ELEMENT i32 (i32.const 1))
 (global $~lib/typedarray/Uint8ClampedArray.BYTES_PER_ELEMENT i32 (i32.const 1))
 (global $~lib/typedarray/Int16Array.BYTES_PER_ELEMENT i32 (i32.const 2))
 (global $~lib/typedarray/Uint16Array.BYTES_PER_ELEMENT i32 (i32.const 2))
 (global $~lib/typedarray/Int32Array.BYTES_PER_ELEMENT i32 (i32.const 4))
 (global $~lib/typedarray/Uint32Array.BYTES_PER_ELEMENT i32 (i32.const 4))
 (global $~lib/typedarray/Int64Array.BYTES_PER_ELEMENT i32 (i32.const 8))
 (global $~lib/typedarray/Uint64Array.BYTES_PER_ELEMENT i32 (i32.const 8))
 (global $~lib/typedarray/Float32Array.BYTES_PER_ELEMENT i32 (i32.const 4))
 (global $~lib/typedarray/Float64Array.BYTES_PER_ELEMENT i32 (i32.const 8))
 (global $~lib/shared/runtime/Runtime.Stub i32 (i32.const 0))
 (global $~lib/shared/runtime/Runtime.Minimal i32 (i32.const 1))
 (global $~lib/shared/runtime/Runtime.Incremental i32 (i32.const 2))
 (global $~lib/rt/stub/offset (mut i32) (i32.const 0))
 (global $~lib/native/ASC_RUNTIME i32 (i32.const 0))
 (global $~lib/native/ASC_SHRINK_LEVEL i32 (i32.const 0))
 (global $~argumentsLength (mut i32) (i32.const 0))
 (global $~lib/builtins/u32.MAX_VALUE i32 (i32.const -1))
 (global $~lib/builtins/i32.MAX_VALUE i32 (i32.const 2147483647))
 (global $std/typedarray/forEachCallCount (mut i32) (i32.const 0))
 (global $std/typedarray/forEachSelf (mut i32) (i32.const 0))
 (global $std/typedarray/forEachValues i32 (i32.const 5616))
 (global $std/typedarray/testArrayReverseValues i32 (i32.const 6080))
 (global $std/typedarray/testArrayIndexOfAndLastIndexOfValues i32 (i32.const 6192))
 (global $std/typedarray/testArrayWrapValues i32 (i32.const 6304))
 (global $std/typedarray/setSource1 (mut i32) (i32.const 6384))
 (global $std/typedarray/setSource2 (mut i32) (i32.const 6464))
 (global $std/typedarray/setSource3 (mut i32) (i32.const 6560))
 (global $std/typedarray/setSource7 (mut i32) (i32.const 6640))
 (global $~lib/memory/__stack_pointer (mut i32) (i32.const 9260))
 (global $~lib/memory/__heap_base i32 (i32.const 9260))
 (memory $0 1)
 (data (i32.const 12) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\0e\00\00\00Invalid length\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 60) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\12\00\00\00Index out of range\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 108) "\1c\00\00\00\00\00\00\00\00\00\00\00\0e\00\00\00\08\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 140) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\05\00\00\00\01\01\01\04\05\00\00\00\00\00\00\00")
 (data (i32.const 172) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 204) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 236) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\05\00\00\00\01\01\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 268) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\05\00\00\00\01\01\00\02\02\00\00\00\00\00\00\00")
 (data (i32.const 300) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\05\00\00\00\01\01\00\02\02\00\00\00\00\00\00\00")
 (data (i32.const 332) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 364) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\05\00\00\00\01\00\00\00\02\00\00\00\00\00\00\00")
 (data (i32.const 396) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 444) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 492) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 540) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\01\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 588) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\01\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 636) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 668) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 716) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\04\00\00\00\05\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 764) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\04\00\00\00\05\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 812) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 860) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 908) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\04\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 956) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\04\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1004) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\03\00\00\00\04\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1052) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\04\00\00\00\05\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1100) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\04\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1148) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\03\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1196) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\03\00\00\00\04\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1244) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1292) "\1c\00\00\00\00\00\00\00\00\00\00\00\11\00\00\00\08\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1324) "\1c\00\00\00\00\00\00\00\00\00\00\00\12\00\00\00\08\00\00\00\03\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1356) "\1c\00\00\00\00\00\00\00\00\00\00\00\13\00\00\00\08\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1388) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1420) "\1c\00\00\00\00\00\00\00\00\00\00\00\15\00\00\00\08\00\00\00\06\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1452) "\1c\00\00\00\00\00\00\00\00\00\00\00\16\00\00\00\08\00\00\00\07\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1484) "\1c\00\00\00\00\00\00\00\00\00\00\00\17\00\00\00\08\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1516) "\1c\00\00\00\00\00\00\00\00\00\00\00\18\00\00\00\08\00\00\00\t\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1548) "\1c\00\00\00\00\00\00\00\00\00\00\00\19\00\00\00\08\00\00\00\n\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1580) "\1c\00\00\00\00\00\00\00\00\00\00\00\1a\00\00\00\08\00\00\00\0b\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1612) "\1c\00\00\00\00\00\00\00\00\00\00\00\1b\00\00\00\08\00\00\00\0c\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1644) "\1c\00\00\00\00\00\00\00\00\00\00\00\11\00\00\00\08\00\00\00\r\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1676) "\1c\00\00\00\00\00\00\00\00\00\00\00\12\00\00\00\08\00\00\00\0e\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1708) "\1c\00\00\00\00\00\00\00\00\00\00\00\13\00\00\00\08\00\00\00\0f\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1740) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00\10\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1772) "\1c\00\00\00\00\00\00\00\00\00\00\00\15\00\00\00\08\00\00\00\11\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1804) "\1c\00\00\00\00\00\00\00\00\00\00\00\16\00\00\00\08\00\00\00\12\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1836) "\1c\00\00\00\00\00\00\00\00\00\00\00\17\00\00\00\08\00\00\00\13\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1868) "\1c\00\00\00\00\00\00\00\00\00\00\00\18\00\00\00\08\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1900) "\1c\00\00\00\00\00\00\00\00\00\00\00\19\00\00\00\08\00\00\00\15\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1932) "\1c\00\00\00\00\00\00\00\00\00\00\00\1a\00\00\00\08\00\00\00\16\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1964) "\1c\00\00\00\00\00\00\00\00\00\00\00\1b\00\00\00\08\00\00\00\17\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1996) "\1c\00\00\00\00\00\00\00\00\00\00\00\1c\00\00\00\08\00\00\00\18\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2028) "\1c\00\00\00\00\00\00\00\00\00\00\00\1d\00\00\00\08\00\00\00\19\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2060) "\1c\00\00\00\00\00\00\00\00\00\00\00\1e\00\00\00\08\00\00\00\1a\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2092) "\1c\00\00\00\00\00\00\00\00\00\00\00\1f\00\00\00\08\00\00\00\1b\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2124) "\1c\00\00\00\00\00\00\00\00\00\00\00 \00\00\00\08\00\00\00\1c\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2156) "\1c\00\00\00\00\00\00\00\00\00\00\00!\00\00\00\08\00\00\00\1d\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2188) "\1c\00\00\00\00\00\00\00\00\00\00\00\"\00\00\00\08\00\00\00\1e\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2220) "\1c\00\00\00\00\00\00\00\00\00\00\00#\00\00\00\08\00\00\00\1f\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2252) "\1c\00\00\00\00\00\00\00\00\00\00\00$\00\00\00\08\00\00\00 \00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2284) "\1c\00\00\00\00\00\00\00\00\00\00\00%\00\00\00\08\00\00\00!\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2316) "\1c\00\00\00\00\00\00\00\00\00\00\00&\00\00\00\08\00\00\00\"\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2348) "\1c\00\00\00\00\00\00\00\00\00\00\00\'\00\00\00\08\00\00\00#\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2380) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\14\00\00\00Allocation too large\00\00\00\00\00\00\00\00")
 (data (i32.const 2428) "\1c\00\00\00\00\00\00\00\00\00\00\00(\00\00\00\08\00\00\00$\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2460) "\1c\00\00\00\00\00\00\00\00\00\00\00)\00\00\00\08\00\00\00%\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2492) "\1c\00\00\00\00\00\00\00\00\00\00\00*\00\00\00\08\00\00\00&\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2524) "\1c\00\00\00\00\00\00\00\00\00\00\00+\00\00\00\08\00\00\00\'\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2556) "\1c\00\00\00\00\00\00\00\00\00\00\00,\00\00\00\08\00\00\00(\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2588) "\1c\00\00\00\00\00\00\00\00\00\00\00-\00\00\00\08\00\00\00)\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2620) "\1c\00\00\00\00\00\00\00\00\00\00\00.\00\00\00\08\00\00\00*\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2652) "\1c\00\00\00\00\00\00\00\00\00\00\00/\00\00\00\08\00\00\00+\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2684) "\1c\00\00\00\00\00\00\00\00\00\00\000\00\00\00\08\00\00\00,\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2716) "\1c\00\00\00\00\00\00\00\00\00\00\001\00\00\00\08\00\00\00-\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2748) "\1c\00\00\00\00\00\00\00\00\00\00\00\'\00\00\00\08\00\00\00.\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2780) "\1c\00\00\00\00\00\00\00\00\00\00\00\'\00\00\00\08\00\00\00/\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2812) "\1c\00\00\00\00\00\00\00\00\00\00\00(\00\00\00\08\00\00\000\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2844) "\1c\00\00\00\00\00\00\00\00\00\00\00(\00\00\00\08\00\00\001\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2876) "\1c\00\00\00\00\00\00\00\00\00\00\00)\00\00\00\08\00\00\002\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2908) "\1c\00\00\00\00\00\00\00\00\00\00\00)\00\00\00\08\00\00\003\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2940) "\1c\00\00\00\00\00\00\00\00\00\00\00*\00\00\00\08\00\00\004\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2972) "\1c\00\00\00\00\00\00\00\00\00\00\00*\00\00\00\08\00\00\005\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3004) "\1c\00\00\00\00\00\00\00\00\00\00\00+\00\00\00\08\00\00\006\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3036) "\1c\00\00\00\00\00\00\00\00\00\00\00+\00\00\00\08\00\00\007\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3068) "\1c\00\00\00\00\00\00\00\00\00\00\00,\00\00\00\08\00\00\008\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3100) "\1c\00\00\00\00\00\00\00\00\00\00\00,\00\00\00\08\00\00\009\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3132) "\1c\00\00\00\00\00\00\00\00\00\00\00-\00\00\00\08\00\00\00:\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3164) "\1c\00\00\00\00\00\00\00\00\00\00\00-\00\00\00\08\00\00\00;\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3196) "\1c\00\00\00\00\00\00\00\00\00\00\00.\00\00\00\08\00\00\00<\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3228) "\1c\00\00\00\00\00\00\00\00\00\00\00.\00\00\00\08\00\00\00=\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3260) "\1c\00\00\00\00\00\00\00\00\00\00\00/\00\00\00\08\00\00\00>\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3292) "\1c\00\00\00\00\00\00\00\00\00\00\00/\00\00\00\08\00\00\00?\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3324) "\1c\00\00\00\00\00\00\00\00\00\00\000\00\00\00\08\00\00\00@\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3356) "\1c\00\00\00\00\00\00\00\00\00\00\000\00\00\00\08\00\00\00A\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3388) "\1c\00\00\00\00\00\00\00\00\00\00\001\00\00\00\08\00\00\00B\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3420) "\1c\00\00\00\00\00\00\00\00\00\00\001\00\00\00\08\00\00\00C\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3452) "\1c\00\00\00\00\00\00\00\00\00\00\00\'\00\00\00\08\00\00\00D\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3484) "\1c\00\00\00\00\00\00\00\00\00\00\00\'\00\00\00\08\00\00\00E\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3516) "\1c\00\00\00\00\00\00\00\00\00\00\00(\00\00\00\08\00\00\00F\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3548) "\1c\00\00\00\00\00\00\00\00\00\00\00(\00\00\00\08\00\00\00G\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3580) "\1c\00\00\00\00\00\00\00\00\00\00\00)\00\00\00\08\00\00\00H\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3612) "\1c\00\00\00\00\00\00\00\00\00\00\00)\00\00\00\08\00\00\00I\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3644) "\1c\00\00\00\00\00\00\00\00\00\00\00*\00\00\00\08\00\00\00J\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3676) "\1c\00\00\00\00\00\00\00\00\00\00\00*\00\00\00\08\00\00\00K\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3708) "\1c\00\00\00\00\00\00\00\00\00\00\00+\00\00\00\08\00\00\00L\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3740) "\1c\00\00\00\00\00\00\00\00\00\00\00+\00\00\00\08\00\00\00M\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3772) "\1c\00\00\00\00\00\00\00\00\00\00\00,\00\00\00\08\00\00\00N\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3804) "\1c\00\00\00\00\00\00\00\00\00\00\00,\00\00\00\08\00\00\00O\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3836) "\1c\00\00\00\00\00\00\00\00\00\00\00-\00\00\00\08\00\00\00P\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3868) "\1c\00\00\00\00\00\00\00\00\00\00\00-\00\00\00\08\00\00\00Q\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3900) "\1c\00\00\00\00\00\00\00\00\00\00\00.\00\00\00\08\00\00\00R\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3932) "\1c\00\00\00\00\00\00\00\00\00\00\00.\00\00\00\08\00\00\00S\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3964) "\1c\00\00\00\00\00\00\00\00\00\00\00/\00\00\00\08\00\00\00T\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3996) "\1c\00\00\00\00\00\00\00\00\00\00\00/\00\00\00\08\00\00\00U\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4028) "\1c\00\00\00\00\00\00\00\00\00\00\000\00\00\00\08\00\00\00V\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4060) "\1c\00\00\00\00\00\00\00\00\00\00\000\00\00\00\08\00\00\00W\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4092) "\1c\00\00\00\00\00\00\00\00\00\00\001\00\00\00\08\00\00\00X\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4124) "\1c\00\00\00\00\00\00\00\00\00\00\001\00\00\00\08\00\00\00Y\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4156) "\1c\00\00\00\00\00\00\00\00\00\00\00\'\00\00\00\08\00\00\00Z\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4188) "\1c\00\00\00\00\00\00\00\00\00\00\00\'\00\00\00\08\00\00\00[\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4220) "\1c\00\00\00\00\00\00\00\00\00\00\00(\00\00\00\08\00\00\00\\\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4252) "\1c\00\00\00\00\00\00\00\00\00\00\00(\00\00\00\08\00\00\00]\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4284) "\1c\00\00\00\00\00\00\00\00\00\00\00)\00\00\00\08\00\00\00^\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4316) "\1c\00\00\00\00\00\00\00\00\00\00\00)\00\00\00\08\00\00\00_\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4348) "\1c\00\00\00\00\00\00\00\00\00\00\00*\00\00\00\08\00\00\00`\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4380) "\1c\00\00\00\00\00\00\00\00\00\00\00*\00\00\00\08\00\00\00a\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4412) "\1c\00\00\00\00\00\00\00\00\00\00\00+\00\00\00\08\00\00\00b\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4444) "\1c\00\00\00\00\00\00\00\00\00\00\00+\00\00\00\08\00\00\00c\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4476) "\1c\00\00\00\00\00\00\00\00\00\00\00,\00\00\00\08\00\00\00d\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4508) "\1c\00\00\00\00\00\00\00\00\00\00\00,\00\00\00\08\00\00\00e\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4540) "\1c\00\00\00\00\00\00\00\00\00\00\00-\00\00\00\08\00\00\00f\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4572) "\1c\00\00\00\00\00\00\00\00\00\00\00-\00\00\00\08\00\00\00g\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4604) "\1c\00\00\00\00\00\00\00\00\00\00\00.\00\00\00\08\00\00\00h\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4636) "\1c\00\00\00\00\00\00\00\00\00\00\00.\00\00\00\08\00\00\00i\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4668) "\1c\00\00\00\00\00\00\00\00\00\00\00/\00\00\00\08\00\00\00j\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4700) "\1c\00\00\00\00\00\00\00\00\00\00\00/\00\00\00\08\00\00\00k\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4732) "\1c\00\00\00\00\00\00\00\00\00\00\000\00\00\00\08\00\00\00l\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4764) "\1c\00\00\00\00\00\00\00\00\00\00\000\00\00\00\08\00\00\00m\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4796) "\1c\00\00\00\00\00\00\00\00\00\00\001\00\00\00\08\00\00\00n\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4828) "\1c\00\00\00\00\00\00\00\00\00\00\001\00\00\00\08\00\00\00o\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4860) "\1c\00\00\00\00\00\00\00\00\00\00\00\'\00\00\00\08\00\00\00p\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4892) "\1c\00\00\00\00\00\00\00\00\00\00\00\'\00\00\00\08\00\00\00q\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4924) "\1c\00\00\00\00\00\00\00\00\00\00\00(\00\00\00\08\00\00\00r\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4956) "\1c\00\00\00\00\00\00\00\00\00\00\00(\00\00\00\08\00\00\00s\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4988) "\1c\00\00\00\00\00\00\00\00\00\00\00)\00\00\00\08\00\00\00t\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5020) "\1c\00\00\00\00\00\00\00\00\00\00\00)\00\00\00\08\00\00\00u\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5052) "\1c\00\00\00\00\00\00\00\00\00\00\00*\00\00\00\08\00\00\00v\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5084) "\1c\00\00\00\00\00\00\00\00\00\00\00*\00\00\00\08\00\00\00w\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5116) "\1c\00\00\00\00\00\00\00\00\00\00\00+\00\00\00\08\00\00\00x\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5148) "\1c\00\00\00\00\00\00\00\00\00\00\00+\00\00\00\08\00\00\00y\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5180) "\1c\00\00\00\00\00\00\00\00\00\00\00,\00\00\00\08\00\00\00z\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5212) "\1c\00\00\00\00\00\00\00\00\00\00\00,\00\00\00\08\00\00\00{\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5244) "\1c\00\00\00\00\00\00\00\00\00\00\00-\00\00\00\08\00\00\00|\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5276) "\1c\00\00\00\00\00\00\00\00\00\00\00-\00\00\00\08\00\00\00}\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5308) "\1c\00\00\00\00\00\00\00\00\00\00\00.\00\00\00\08\00\00\00~\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5340) "\1c\00\00\00\00\00\00\00\00\00\00\00.\00\00\00\08\00\00\00\7f\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5372) "\1c\00\00\00\00\00\00\00\00\00\00\00/\00\00\00\08\00\00\00\80\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5404) "\1c\00\00\00\00\00\00\00\00\00\00\00/\00\00\00\08\00\00\00\81\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5436) "\1c\00\00\00\00\00\00\00\00\00\00\000\00\00\00\08\00\00\00\82\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5468) "\1c\00\00\00\00\00\00\00\00\00\00\000\00\00\00\08\00\00\00\83\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5500) "\1c\00\00\00\00\00\00\00\00\00\00\001\00\00\00\08\00\00\00\84\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5532) "\1c\00\00\00\00\00\00\00\00\00\00\001\00\00\00\08\00\00\00\85\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5564) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\n\00\00\00\0c\00\00\00\0e\00\00\00")
 (data (i32.const 5596) ",\00\00\00\00\00\00\00\00\00\00\00\10\00\00\00\10\00\00\00\d0\15\00\00\d0\15\00\00\0c\00\00\00\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5644) "\1c\00\00\00\00\00\00\00\00\00\00\002\00\00\00\08\00\00\00\86\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5676) "\1c\00\00\00\00\00\00\00\00\00\00\003\00\00\00\08\00\00\00\87\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5708) "\1c\00\00\00\00\00\00\00\00\00\00\004\00\00\00\08\00\00\00\88\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5740) "\1c\00\00\00\00\00\00\00\00\00\00\005\00\00\00\08\00\00\00\89\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5772) "\1c\00\00\00\00\00\00\00\00\00\00\006\00\00\00\08\00\00\00\8a\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5804) "\1c\00\00\00\00\00\00\00\00\00\00\007\00\00\00\08\00\00\00\8b\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5836) "\1c\00\00\00\00\00\00\00\00\00\00\008\00\00\00\08\00\00\00\8c\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5868) "\1c\00\00\00\00\00\00\00\00\00\00\009\00\00\00\08\00\00\00\8d\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5900) "\1c\00\00\00\00\00\00\00\00\00\00\00:\00\00\00\08\00\00\00\8e\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5932) "\1c\00\00\00\00\00\00\00\00\00\00\00;\00\00\00\08\00\00\00\8f\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5964) "\1c\00\00\00\00\00\00\00\00\00\00\00<\00\00\00\08\00\00\00\90\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5996) "<\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00$\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\06\00\00\00\07\00\00\00\08\00\00\00\t\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6060) ",\00\00\00\00\00\00\00\00\00\00\00\10\00\00\00\10\00\00\00\80\17\00\00\80\17\00\00$\00\00\00\t\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6108) "<\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00,\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\06\00\00\00\07\00\00\00\08\00\00\00\t\00\00\00\n\00\00\00")
 (data (i32.const 6172) ",\00\00\00\00\00\00\00\00\00\00\00\10\00\00\00\10\00\00\00\f0\17\00\00\f0\17\00\00,\00\00\00\0b\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6220) "<\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00,\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\06\00\00\00\07\00\00\00\08\00\00\00\t\00\00\00\n\00\00\00")
 (data (i32.const 6284) ",\00\00\00\00\00\00\00\00\00\00\00\10\00\00\00\10\00\00\00`\18\00\00`\18\00\00,\00\00\00\0b\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6332) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00")
 (data (i32.const 6364) ",\00\00\00\00\00\00\00\00\00\00\00\10\00\00\00\10\00\00\00\d0\18\00\00\d0\18\00\00\0c\00\00\00\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6412) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\00\00\80@\00\00\a0@\00\00\c0@")
 (data (i32.const 6444) ",\00\00\00\00\00\00\00\00\00\00\00=\00\00\00\10\00\00\00 \19\00\00 \19\00\00\0c\00\00\00\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6492) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\18\00\00\00\00\00\00\00\00\00\f0\7f\00\00\00\00\00\00\f8\7f\00\00\00\00\00\00\f0\ff\00\00\00\00")
 (data (i32.const 6540) ",\00\00\00\00\00\00\00\00\00\00\00>\00\00\00\10\00\00\00p\19\00\00p\19\00\00\18\00\00\00\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6588) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\03\00\00\00\92\91\90\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6620) ",\00\00\00\00\00\00\00\00\00\00\00\0f\00\00\00\10\00\00\00\d0\19\00\00\d0\19\00\00\03\00\00\00\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6668) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\n\00\00\00\01\02\03\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6700) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\n\00\00\00\01\02\03\04\05\06\00\00\00\00\00\00")
 (data (i32.const 6732) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\n\00\00\00\01\02\03\04\05\06\07\08\t\00\00\00")
 (data (i32.const 6764) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\n\00\00\00\01\02\00\00\00\06\07\08\t\00\00\00")
 (data (i32.const 6796) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\n\00\00\00defg\e8\e9\ea\92\91\90\00\00")
 (data (i32.const 6828) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\n\00\00\00\01\02\03\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6860) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\n\00\00\00\01\02\03\04\05\06\00\00\00\00\00\00")
 (data (i32.const 6892) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\n\00\00\00\01\02\03\04\05\06\07\08\t\00\00\00")
 (data (i32.const 6924) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\n\00\00\00\01\02\00\00\00\06\07\08\t\00\00\00")
 (data (i32.const 6956) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\n\00\00\00defg\e8\e9\ea\92\91\90\00\00")
 (data (i32.const 6988) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\n\00\00\00\01\02\03\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7020) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\n\00\00\00\01\02\03\04\05\06\00\00\00\00\00\00")
 (data (i32.const 7052) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\n\00\00\00\01\02\03\04\05\06\07\08\t\00\00\00")
 (data (i32.const 7084) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\n\00\00\00\01\02\00\00\00\06\07\08\t\00\00\00")
 (data (i32.const 7116) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\n\00\00\00defg\ff\ff\ff\00\00\00\00\00")
 (data (i32.const 7148) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\02\00\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7196) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\02\00\03\00\04\00\05\00\06\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7244) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\02\00\03\00\04\00\05\00\06\00\07\00\08\00\t\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7292) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\02\00\00\00\00\00\00\00\06\00\07\00\08\00\t\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7340) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00d\00e\00f\00g\00\e8\03\e9\03\ea\03\92\ff\91\ff\90\ff\00\00\00\00\00\00\00\00")
 (data (i32.const 7388) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\02\00\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7436) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\02\00\03\00\04\00\05\00\06\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7484) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\02\00\03\00\04\00\05\00\06\00\07\00\08\00\t\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7532) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\02\00\00\00\00\00\00\00\06\00\07\00\08\00\t\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7580) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00d\00e\00f\00g\00\e8\03\e9\03\ea\03\92\ff\91\ff\90\ff\00\00\00\00\00\00\00\00")
 (data (i32.const 7628) "<\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00(\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7692) "<\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00(\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\06\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7756) "<\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00(\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\06\00\00\00\07\00\00\00\08\00\00\00\t\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7820) "<\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00(\00\00\00\01\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\06\00\00\00\07\00\00\00\08\00\00\00\t\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7884) "<\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00(\00\00\00d\00\00\00e\00\00\00f\00\00\00g\00\00\00\e8\03\00\00\e9\03\00\00\ea\03\00\00\92\ff\ff\ff\91\ff\ff\ff\90\ff\ff\ff\00\00\00\00")
 (data (i32.const 7948) "<\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00(\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8012) "<\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00(\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\06\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8076) "<\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00(\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\06\00\00\00\07\00\00\00\08\00\00\00\t\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8140) "<\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00(\00\00\00\01\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\06\00\00\00\07\00\00\00\08\00\00\00\t\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8204) "<\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00(\00\00\00d\00\00\00e\00\00\00f\00\00\00g\00\00\00\e8\03\00\00\e9\03\00\00\ea\03\00\00\92\ff\ff\ff\91\ff\ff\ff\90\ff\ff\ff\00\00\00\00")
 (data (i32.const 8268) "<\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00(\00\00\00\00\00\80?\00\00\00@\00\00@@\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8332) "<\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00(\00\00\00\00\00\80?\00\00\00@\00\00@@\00\00\80@\00\00\a0@\00\00\c0@\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8396) "<\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00(\00\00\00\00\00\80?\00\00\00@\00\00@@\00\00\80@\00\00\a0@\00\00\c0@\00\00\e0@\00\00\00A\00\00\10A\00\00\00\00\00\00\00\00")
 (data (i32.const 8460) "<\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00(\00\00\00\00\00\c8B\00\00\caB\00\00\ccB\00\00\ceB\00\00zD\00@zD\00\80zD\00\00\dc\c2\00\00\de\c2\00\00\e0\c2\00\00\00\00")
 (data (i32.const 8524) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\n\00\00\00\00\ff\00\00\00d\n\ff\ff\00\00\00")
 (data (i32.const 8556) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\n\00\00\00\01\ffd\ff\00\00d\n\ff\00\00\00")
 (data (i32.const 8588) "\1c\00\00\00\00\00\00\00\00\00\00\00C\00\00\00\08\00\00\00\91\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8620) "\1c\00\00\00\00\00\00\00\00\00\00\00C\00\00\00\08\00\00\00\92\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8652) "\1c\00\00\00\00\00\00\00\00\00\00\00D\00\00\00\08\00\00\00\93\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8684) "\1c\00\00\00\00\00\00\00\00\00\00\00D\00\00\00\08\00\00\00\94\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8716) "\1c\00\00\00\00\00\00\00\00\00\00\00D\00\00\00\08\00\00\00\95\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8748) "\1c\00\00\00\00\00\00\00\00\00\00\00D\00\00\00\08\00\00\00\96\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8780) "\1c\00\00\00\00\00\00\00\00\00\00\00E\00\00\00\08\00\00\00\97\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8812) "\1c\00\00\00\00\00\00\00\00\00\00\00E\00\00\00\08\00\00\00\98\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8844) "\1c\00\00\00\00\00\00\00\00\00\00\00F\00\00\00\08\00\00\00\99\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8876) "\1c\00\00\00\00\00\00\00\00\00\00\00F\00\00\00\08\00\00\00\9a\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8908) "\1c\00\00\00\00\00\00\00\00\00\00\00G\00\00\00\08\00\00\00\9b\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8940) "\1c\00\00\00\00\00\00\00\00\00\00\00G\00\00\00\08\00\00\00\9c\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8972) "\1c\00\00\00\00\00\00\00\00\00\00\00H\00\00\00\08\00\00\00\9d\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 9004) "\1c\00\00\00\00\00\00\00\00\00\00\00H\00\00\00\08\00\00\00\9e\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 9036) "\1c\00\00\00\00\00\00\00\00\00\00\00I\00\00\00\08\00\00\00\9f\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 9068) "\1c\00\00\00\00\00\00\00\00\00\00\00I\00\00\00\08\00\00\00\a0\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 9100) "\1c\00\00\00\00\00\00\00\00\00\00\00J\00\00\00\08\00\00\00\a1\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 9132) "\1c\00\00\00\00\00\00\00\00\00\00\00J\00\00\00\08\00\00\00\a2\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 9164) "\1c\00\00\00\00\00\00\00\00\00\00\00K\00\00\00\08\00\00\00\a3\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 9196) "\1c\00\00\00\00\00\00\00\00\00\00\00K\00\00\00\08\00\00\00\a4\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 9228) "\1c\00\00\00\00\00\00\00\00\00\00\00\0e\00\00\00\08\00\00\00\a5\00\00\00\00\00\00\00\00\00\00\00")
 (table $0 166 166 funcref)
 (elem $0 (i32.const 1) $~lib/util/sort/COMPARATOR<f64>~anonymous|0 $std/typedarray/testReduce<~lib/typedarray/Int8Array,i8>~anonymous|0 $std/typedarray/testReduce<~lib/typedarray/Uint8Array,u8>~anonymous|0 $std/typedarray/testReduce<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|0 $std/typedarray/testReduce<~lib/typedarray/Int16Array,i16>~anonymous|0 $std/typedarray/testReduce<~lib/typedarray/Uint16Array,u16>~anonymous|0 $std/typedarray/testReduce<~lib/typedarray/Int32Array,i32>~anonymous|0 $std/typedarray/testReduce<~lib/typedarray/Uint32Array,u32>~anonymous|0 $std/typedarray/testReduce<~lib/typedarray/Int64Array,i64>~anonymous|0 $std/typedarray/testReduce<~lib/typedarray/Uint64Array,u64>~anonymous|0 $std/typedarray/testReduce<~lib/typedarray/Float32Array,f32>~anonymous|0 $std/typedarray/testReduce<~lib/typedarray/Float64Array,f64>~anonymous|0 $std/typedarray/testReduceRight<~lib/typedarray/Int8Array,i8>~anonymous|0 $std/typedarray/testReduceRight<~lib/typedarray/Uint8Array,u8>~anonymous|0 $std/typedarray/testReduceRight<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|0 $std/typedarray/testReduceRight<~lib/typedarray/Int16Array,i16>~anonymous|0 $std/typedarray/testReduceRight<~lib/typedarray/Uint16Array,u16>~anonymous|0 $std/typedarray/testReduceRight<~lib/typedarray/Int32Array,i32>~anonymous|0 $std/typedarray/testReduceRight<~lib/typedarray/Uint32Array,u32>~anonymous|0 $std/typedarray/testReduceRight<~lib/typedarray/Int64Array,i64>~anonymous|0 $std/typedarray/testReduceRight<~lib/typedarray/Uint64Array,u64>~anonymous|0 $std/typedarray/testReduceRight<~lib/typedarray/Float32Array,f32>~anonymous|0 $std/typedarray/testReduceRight<~lib/typedarray/Float64Array,f64>~anonymous|0 $std/typedarray/testArrayMap<~lib/typedarray/Int8Array,i8>~anonymous|0 $std/typedarray/testArrayMap<~lib/typedarray/Uint8Array,u8>~anonymous|0 $std/typedarray/testArrayMap<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|0 $std/typedarray/testArrayMap<~lib/typedarray/Int16Array,i16>~anonymous|0 $std/typedarray/testArrayMap<~lib/typedarray/Uint16Array,u16>~anonymous|0 $std/typedarray/testArrayMap<~lib/typedarray/Int32Array,i32>~anonymous|0 $std/typedarray/testArrayMap<~lib/typedarray/Uint32Array,u32>~anonymous|0 $std/typedarray/testArrayMap<~lib/typedarray/Int64Array,i64>~anonymous|0 $std/typedarray/testArrayMap<~lib/typedarray/Uint64Array,u64>~anonymous|0 $std/typedarray/testArrayMap<~lib/typedarray/Float32Array,f32>~anonymous|0 $std/typedarray/testArrayMap<~lib/typedarray/Float64Array,f64>~anonymous|0 $std/typedarray/testArrayFilter<~lib/typedarray/Int8Array,i8>~anonymous|0 $std/typedarray/testArrayFilter<~lib/typedarray/Uint8Array,u8>~anonymous|0 $std/typedarray/testArrayFilter<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|0 $std/typedarray/testArrayFilter<~lib/typedarray/Int16Array,i16>~anonymous|0 $std/typedarray/testArrayFilter<~lib/typedarray/Uint16Array,u16>~anonymous|0 $std/typedarray/testArrayFilter<~lib/typedarray/Int32Array,i32>~anonymous|0 $std/typedarray/testArrayFilter<~lib/typedarray/Uint32Array,u32>~anonymous|0 $std/typedarray/testArrayFilter<~lib/typedarray/Int64Array,i64>~anonymous|0 $std/typedarray/testArrayFilter<~lib/typedarray/Uint64Array,u64>~anonymous|0 $std/typedarray/testArrayFilter<~lib/typedarray/Float32Array,f32>~anonymous|0 $std/typedarray/testArrayFilter<~lib/typedarray/Float64Array,f64>~anonymous|0 $std/typedarray/testArraySome<~lib/typedarray/Int8Array,i8>~anonymous|0 $std/typedarray/testArraySome<~lib/typedarray/Int8Array,i8>~anonymous|1 $std/typedarray/testArraySome<~lib/typedarray/Uint8Array,u8>~anonymous|0 $std/typedarray/testArraySome<~lib/typedarray/Uint8Array,u8>~anonymous|1 $std/typedarray/testArraySome<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|0 $std/typedarray/testArraySome<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|1 $std/typedarray/testArraySome<~lib/typedarray/Int16Array,i16>~anonymous|0 $std/typedarray/testArraySome<~lib/typedarray/Int16Array,i16>~anonymous|1 $std/typedarray/testArraySome<~lib/typedarray/Uint16Array,u16>~anonymous|0 $std/typedarray/testArraySome<~lib/typedarray/Uint16Array,u16>~anonymous|1 $std/typedarray/testArraySome<~lib/typedarray/Int32Array,i32>~anonymous|0 $std/typedarray/testArraySome<~lib/typedarray/Int32Array,i32>~anonymous|1 $std/typedarray/testArraySome<~lib/typedarray/Uint32Array,u32>~anonymous|0 $std/typedarray/testArraySome<~lib/typedarray/Uint32Array,u32>~anonymous|1 $std/typedarray/testArraySome<~lib/typedarray/Int64Array,i64>~anonymous|0 $std/typedarray/testArraySome<~lib/typedarray/Int64Array,i64>~anonymous|1 $std/typedarray/testArraySome<~lib/typedarray/Uint64Array,u64>~anonymous|0 $std/typedarray/testArraySome<~lib/typedarray/Uint64Array,u64>~anonymous|1 $std/typedarray/testArraySome<~lib/typedarray/Float32Array,f32>~anonymous|0 $std/typedarray/testArraySome<~lib/typedarray/Float32Array,f32>~anonymous|1 $std/typedarray/testArraySome<~lib/typedarray/Float64Array,f64>~anonymous|0 $std/typedarray/testArraySome<~lib/typedarray/Float64Array,f64>~anonymous|1 $std/typedarray/testArrayFindIndex<~lib/typedarray/Int8Array,i8>~anonymous|0 $std/typedarray/testArrayFindIndex<~lib/typedarray/Int8Array,i8>~anonymous|1 $std/typedarray/testArrayFindIndex<~lib/typedarray/Uint8Array,u8>~anonymous|0 $std/typedarray/testArrayFindIndex<~lib/typedarray/Uint8Array,u8>~anonymous|1 $std/typedarray/testArrayFindIndex<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|0 $std/typedarray/testArrayFindIndex<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|1 $std/typedarray/testArrayFindIndex<~lib/typedarray/Int16Array,i16>~anonymous|0 $std/typedarray/testArrayFindIndex<~lib/typedarray/Int16Array,i16>~anonymous|1 $std/typedarray/testArrayFindIndex<~lib/typedarray/Uint16Array,u16>~anonymous|0 $std/typedarray/testArrayFindIndex<~lib/typedarray/Uint16Array,u16>~anonymous|1 $std/typedarray/testArrayFindIndex<~lib/typedarray/Int32Array,i32>~anonymous|0 $std/typedarray/testArrayFindIndex<~lib/typedarray/Int32Array,i32>~anonymous|1 $std/typedarray/testArrayFindIndex<~lib/typedarray/Uint32Array,u32>~anonymous|0 $std/typedarray/testArrayFindIndex<~lib/typedarray/Uint32Array,u32>~anonymous|1 $std/typedarray/testArrayFindIndex<~lib/typedarray/Int64Array,i64>~anonymous|0 $std/typedarray/testArrayFindIndex<~lib/typedarray/Int64Array,i64>~anonymous|1 $std/typedarray/testArrayFindIndex<~lib/typedarray/Uint64Array,u64>~anonymous|0 $std/typedarray/testArrayFindIndex<~lib/typedarray/Uint64Array,u64>~anonymous|1 $std/typedarray/testArrayFindIndex<~lib/typedarray/Float32Array,f32>~anonymous|0 $std/typedarray/testArrayFindIndex<~lib/typedarray/Float32Array,f32>~anonymous|1 $std/typedarray/testArrayFindIndex<~lib/typedarray/Float64Array,f64>~anonymous|0 $std/typedarray/testArrayFindIndex<~lib/typedarray/Float64Array,f64>~anonymous|1 $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Int8Array,i8>~anonymous|0 $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Int8Array,i8>~anonymous|1 $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Uint8Array,u8>~anonymous|0 $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Uint8Array,u8>~anonymous|1 $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|0 $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|1 $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Int16Array,i16>~anonymous|0 $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Int16Array,i16>~anonymous|1 $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Uint16Array,u16>~anonymous|0 $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Uint16Array,u16>~anonymous|1 $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Int32Array,i32>~anonymous|0 $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Int32Array,i32>~anonymous|1 $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Uint32Array,u32>~anonymous|0 $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Uint32Array,u32>~anonymous|1 $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Int64Array,i64>~anonymous|0 $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Int64Array,i64>~anonymous|1 $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Uint64Array,u64>~anonymous|0 $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Uint64Array,u64>~anonymous|1 $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Float32Array,f32>~anonymous|0 $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Float32Array,f32>~anonymous|1 $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Float64Array,f64>~anonymous|0 $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Float64Array,f64>~anonymous|1 $std/typedarray/testArrayEvery<~lib/typedarray/Int8Array,i8>~anonymous|0 $std/typedarray/testArrayEvery<~lib/typedarray/Int8Array,i8>~anonymous|1 $std/typedarray/testArrayEvery<~lib/typedarray/Uint8Array,u8>~anonymous|0 $std/typedarray/testArrayEvery<~lib/typedarray/Uint8Array,u8>~anonymous|1 $std/typedarray/testArrayEvery<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|0 $std/typedarray/testArrayEvery<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|1 $std/typedarray/testArrayEvery<~lib/typedarray/Int16Array,i16>~anonymous|0 $std/typedarray/testArrayEvery<~lib/typedarray/Int16Array,i16>~anonymous|1 $std/typedarray/testArrayEvery<~lib/typedarray/Uint16Array,u16>~anonymous|0 $std/typedarray/testArrayEvery<~lib/typedarray/Uint16Array,u16>~anonymous|1 $std/typedarray/testArrayEvery<~lib/typedarray/Int32Array,i32>~anonymous|0 $std/typedarray/testArrayEvery<~lib/typedarray/Int32Array,i32>~anonymous|1 $std/typedarray/testArrayEvery<~lib/typedarray/Uint32Array,u32>~anonymous|0 $std/typedarray/testArrayEvery<~lib/typedarray/Uint32Array,u32>~anonymous|1 $std/typedarray/testArrayEvery<~lib/typedarray/Int64Array,i64>~anonymous|0 $std/typedarray/testArrayEvery<~lib/typedarray/Int64Array,i64>~anonymous|1 $std/typedarray/testArrayEvery<~lib/typedarray/Uint64Array,u64>~anonymous|0 $std/typedarray/testArrayEvery<~lib/typedarray/Uint64Array,u64>~anonymous|1 $std/typedarray/testArrayEvery<~lib/typedarray/Float32Array,f32>~anonymous|0 $std/typedarray/testArrayEvery<~lib/typedarray/Float32Array,f32>~anonymous|1 $std/typedarray/testArrayEvery<~lib/typedarray/Float64Array,f64>~anonymous|0 $std/typedarray/testArrayEvery<~lib/typedarray/Float64Array,f64>~anonymous|1 $std/typedarray/testArrayForEach<~lib/typedarray/Int8Array,i8>~anonymous|0 $std/typedarray/testArrayForEach<~lib/typedarray/Uint8Array,u8>~anonymous|0 $std/typedarray/testArrayForEach<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|0 $std/typedarray/testArrayForEach<~lib/typedarray/Int16Array,i16>~anonymous|0 $std/typedarray/testArrayForEach<~lib/typedarray/Uint16Array,u16>~anonymous|0 $std/typedarray/testArrayForEach<~lib/typedarray/Int32Array,i32>~anonymous|0 $std/typedarray/testArrayForEach<~lib/typedarray/Uint32Array,u32>~anonymous|0 $std/typedarray/testArrayForEach<~lib/typedarray/Int64Array,i64>~anonymous|0 $std/typedarray/testArrayForEach<~lib/typedarray/Uint64Array,u64>~anonymous|0 $std/typedarray/testArrayForEach<~lib/typedarray/Float32Array,f32>~anonymous|0 $std/typedarray/testArrayForEach<~lib/typedarray/Float64Array,f64>~anonymous|0 $~lib/util/sort/COMPARATOR<i8>~anonymous|0 $std/typedarray/testArraySort<~lib/typedarray/Int8Array,i8>~anonymous|0 $~lib/util/sort/COMPARATOR<u8>~anonymous|0 $std/typedarray/testArraySort<~lib/typedarray/Uint8Array,u8>~anonymous|0 $~lib/util/sort/COMPARATOR<u8>~anonymous|1 $std/typedarray/testArraySort<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|0 $~lib/util/sort/COMPARATOR<i16>~anonymous|0 $std/typedarray/testArraySort<~lib/typedarray/Int16Array,i16>~anonymous|0 $~lib/util/sort/COMPARATOR<u16>~anonymous|0 $std/typedarray/testArraySort<~lib/typedarray/Uint16Array,u16>~anonymous|0 $~lib/util/sort/COMPARATOR<i32>~anonymous|0 $std/typedarray/testArraySort<~lib/typedarray/Int32Array,i32>~anonymous|0 $~lib/util/sort/COMPARATOR<u32>~anonymous|0 $std/typedarray/testArraySort<~lib/typedarray/Uint32Array,u32>~anonymous|0 $~lib/util/sort/COMPARATOR<i64>~anonymous|0 $std/typedarray/testArraySort<~lib/typedarray/Int64Array,i64>~anonymous|0 $~lib/util/sort/COMPARATOR<u64>~anonymous|0 $std/typedarray/testArraySort<~lib/typedarray/Uint64Array,u64>~anonymous|0 $~lib/util/sort/COMPARATOR<f32>~anonymous|0 $std/typedarray/testArraySort<~lib/typedarray/Float32Array,f32>~anonymous|0 $std/typedarray/testArraySort<~lib/typedarray/Float64Array,f64>~anonymous|0)
 (export "memory" (memory $0))
 (func $~lib/rt/common/BLOCK#set:mmInfo (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0
 )
 (func $~lib/rt/stub/__alloc (type $i32_=>_i32) (param $size i32) (result i32)
  (local $block i32)
  (local $ptr i32)
  (local $size|3 i32)
  (local $payloadSize i32)
  (local $newOffset i32)
  (local $pagesBefore i32)
  (local $maxOffset i32)
  local.get $size
  i32.const 1073741820
  i32.gt_u
  if
   unreachable
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   global.get $~lib/memory/__heap_base
   i32.const 4
   i32.add
   i32.const 15
   i32.add
   i32.const 15
   i32.const -1
   i32.xor
   i32.and
   i32.const 4
   i32.sub
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.set $block
  global.get $~lib/rt/stub/offset
  i32.const 4
  i32.add
  local.set $ptr
  local.get $size
  local.set $size|3
  local.get $size|3
  i32.const 4
  i32.add
  i32.const 15
  i32.add
  i32.const 15
  i32.const -1
  i32.xor
  i32.and
  i32.const 4
  i32.sub
  local.set $payloadSize
  local.get $ptr
  local.get $payloadSize
  i32.add
  local.set $newOffset
  memory.size $0
  local.set $pagesBefore
  local.get $pagesBefore
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const 15
  i32.const -1
  i32.xor
  i32.and
  local.set $maxOffset
  local.get $newOffset
  local.get $maxOffset
  i32.gt_u
  if
   unreachable
  end
  local.get $newOffset
  global.set $~lib/rt/stub/offset
  local.get $block
  local.get $payloadSize
  call $~lib/rt/common/BLOCK#set:mmInfo
  local.get $ptr
 )
 (func $~lib/rt/common/OBJECT#set:gcInfo (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=4
 )
 (func $~lib/rt/common/OBJECT#set:gcInfo2 (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=8
 )
 (func $~lib/rt/common/OBJECT#set:rtId (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=12
 )
 (func $~lib/rt/common/OBJECT#set:rtSize (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=16
 )
 (func $~lib/rt/stub/__new (type $i32_i32_=>_i32) (param $size i32) (param $id i32) (result i32)
  (local $ptr i32)
  (local $object i32)
  i32.const 16
  local.get $size
  i32.add
  call $~lib/rt/stub/__alloc
  local.set $ptr
  local.get $ptr
  i32.const 4
  i32.sub
  local.set $object
  local.get $object
  i32.const 0
  call $~lib/rt/common/OBJECT#set:gcInfo
  local.get $object
  i32.const 0
  call $~lib/rt/common/OBJECT#set:gcInfo2
  local.get $object
  local.get $id
  call $~lib/rt/common/OBJECT#set:rtId
  local.get $object
  local.get $size
  call $~lib/rt/common/OBJECT#set:rtSize
  local.get $ptr
  i32.const 16
  i32.add
 )
 (func $~lib/rt/stub/__link (type $i32_i32_i32_=>_none) (param $parentPtr i32) (param $childPtr i32) (param $expectMultiple i32)
  nop
 )
 (func $~lib/arraybuffer/ArrayBufferView#set:buffer (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/stub/__link
 )
 (func $~lib/arraybuffer/ArrayBufferView#set:dataStart (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=4
 )
 (func $~lib/arraybuffer/ArrayBufferView#set:byteLength (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=8
 )
 (func $~lib/arraybuffer/ArrayBufferView#constructor (type $i32_i32_i32_=>_i32) (param $this i32) (param $length i32) (param $alignLog2 i32) (result i32)
  (local $buffer i32)
  local.get $this
  i32.eqz
  if
   i32.const 12
   i32.const 2
   call $~lib/rt/stub/__new
   local.set $this
  end
  local.get $this
  i32.const 0
  call $~lib/arraybuffer/ArrayBufferView#set:buffer
  local.get $this
  i32.const 0
  call $~lib/arraybuffer/ArrayBufferView#set:dataStart
  local.get $this
  i32.const 0
  call $~lib/arraybuffer/ArrayBufferView#set:byteLength
  local.get $length
  i32.const 1073741820
  local.get $alignLog2
  i32.shr_u
  i32.gt_u
  if
   unreachable
  end
  local.get $length
  local.get $alignLog2
  i32.shl
  local.tee $length
  i32.const 0
  call $~lib/rt/stub/__new
  local.set $buffer
  i32.const 0
  global.get $~lib/shared/runtime/Runtime.Incremental
  i32.ne
  drop
  local.get $buffer
  i32.const 0
  local.get $length
  memory.fill $0
  local.get $this
  local.get $buffer
  call $~lib/arraybuffer/ArrayBufferView#set:buffer
  local.get $this
  local.get $buffer
  call $~lib/arraybuffer/ArrayBufferView#set:dataStart
  local.get $this
  local.get $length
  call $~lib/arraybuffer/ArrayBufferView#set:byteLength
  local.get $this
 )
 (func $~lib/typedarray/Int8Array#constructor (type $i32_i32_=>_i32) (param $this i32) (param $length i32) (result i32)
  local.get $this
  i32.eqz
  if
   i32.const 12
   i32.const 3
   call $~lib/rt/stub/__new
   local.set $this
  end
  local.get $this
  local.get $length
  i32.const 0
  call $~lib/arraybuffer/ArrayBufferView#constructor
  local.set $this
  local.get $this
 )
 (func $~lib/arraybuffer/ArrayBufferView#get:byteOffset (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  i32.load $0
  i32.sub
 )
 (func $~lib/typedarray/Int8Array#get:length (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/typedarray/Uint8Array#constructor (type $i32_i32_=>_i32) (param $this i32) (param $length i32) (result i32)
  local.get $this
  i32.eqz
  if
   i32.const 12
   i32.const 4
   call $~lib/rt/stub/__new
   local.set $this
  end
  local.get $this
  local.get $length
  i32.const 0
  call $~lib/arraybuffer/ArrayBufferView#constructor
  local.set $this
  local.get $this
 )
 (func $~lib/typedarray/Uint8Array#get:length (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/typedarray/Uint8ClampedArray#constructor (type $i32_i32_=>_i32) (param $this i32) (param $length i32) (result i32)
  local.get $this
  i32.eqz
  if
   i32.const 12
   i32.const 5
   call $~lib/rt/stub/__new
   local.set $this
  end
  local.get $this
  local.get $length
  i32.const 0
  call $~lib/arraybuffer/ArrayBufferView#constructor
  local.set $this
  local.get $this
 )
 (func $~lib/typedarray/Uint8ClampedArray#get:length (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/typedarray/Int16Array#constructor (type $i32_i32_=>_i32) (param $this i32) (param $length i32) (result i32)
  local.get $this
  i32.eqz
  if
   i32.const 12
   i32.const 6
   call $~lib/rt/stub/__new
   local.set $this
  end
  local.get $this
  local.get $length
  i32.const 1
  call $~lib/arraybuffer/ArrayBufferView#constructor
  local.set $this
  local.get $this
 )
 (func $~lib/typedarray/Int16Array#get:length (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
  i32.const 1
  i32.shr_u
 )
 (func $~lib/typedarray/Uint16Array#constructor (type $i32_i32_=>_i32) (param $this i32) (param $length i32) (result i32)
  local.get $this
  i32.eqz
  if
   i32.const 12
   i32.const 7
   call $~lib/rt/stub/__new
   local.set $this
  end
  local.get $this
  local.get $length
  i32.const 1
  call $~lib/arraybuffer/ArrayBufferView#constructor
  local.set $this
  local.get $this
 )
 (func $~lib/typedarray/Uint16Array#get:length (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
  i32.const 1
  i32.shr_u
 )
 (func $~lib/typedarray/Int32Array#constructor (type $i32_i32_=>_i32) (param $this i32) (param $length i32) (result i32)
  local.get $this
  i32.eqz
  if
   i32.const 12
   i32.const 8
   call $~lib/rt/stub/__new
   local.set $this
  end
  local.get $this
  local.get $length
  i32.const 2
  call $~lib/arraybuffer/ArrayBufferView#constructor
  local.set $this
  local.get $this
 )
 (func $~lib/typedarray/Int32Array#get:length (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
  i32.const 2
  i32.shr_u
 )
 (func $~lib/typedarray/Uint32Array#constructor (type $i32_i32_=>_i32) (param $this i32) (param $length i32) (result i32)
  local.get $this
  i32.eqz
  if
   i32.const 12
   i32.const 9
   call $~lib/rt/stub/__new
   local.set $this
  end
  local.get $this
  local.get $length
  i32.const 2
  call $~lib/arraybuffer/ArrayBufferView#constructor
  local.set $this
  local.get $this
 )
 (func $~lib/typedarray/Uint32Array#get:length (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
  i32.const 2
  i32.shr_u
 )
 (func $~lib/typedarray/Int64Array#constructor (type $i32_i32_=>_i32) (param $this i32) (param $length i32) (result i32)
  local.get $this
  i32.eqz
  if
   i32.const 12
   i32.const 10
   call $~lib/rt/stub/__new
   local.set $this
  end
  local.get $this
  local.get $length
  i32.const 3
  call $~lib/arraybuffer/ArrayBufferView#constructor
  local.set $this
  local.get $this
 )
 (func $~lib/typedarray/Int64Array#get:length (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
  i32.const 3
  i32.shr_u
 )
 (func $~lib/typedarray/Uint64Array#constructor (type $i32_i32_=>_i32) (param $this i32) (param $length i32) (result i32)
  local.get $this
  i32.eqz
  if
   i32.const 12
   i32.const 11
   call $~lib/rt/stub/__new
   local.set $this
  end
  local.get $this
  local.get $length
  i32.const 3
  call $~lib/arraybuffer/ArrayBufferView#constructor
  local.set $this
  local.get $this
 )
 (func $~lib/typedarray/Uint64Array#get:length (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
  i32.const 3
  i32.shr_u
 )
 (func $~lib/typedarray/Float32Array#constructor (type $i32_i32_=>_i32) (param $this i32) (param $length i32) (result i32)
  local.get $this
  i32.eqz
  if
   i32.const 12
   i32.const 12
   call $~lib/rt/stub/__new
   local.set $this
  end
  local.get $this
  local.get $length
  i32.const 2
  call $~lib/arraybuffer/ArrayBufferView#constructor
  local.set $this
  local.get $this
 )
 (func $~lib/typedarray/Float32Array#get:length (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
  i32.const 2
  i32.shr_u
 )
 (func $~lib/typedarray/Float64Array#constructor (type $i32_i32_=>_i32) (param $this i32) (param $length i32) (result i32)
  local.get $this
  i32.eqz
  if
   i32.const 12
   i32.const 13
   call $~lib/rt/stub/__new
   local.set $this
  end
  local.get $this
  local.get $length
  i32.const 3
  call $~lib/arraybuffer/ArrayBufferView#constructor
  local.set $this
  local.get $this
 )
 (func $~lib/typedarray/Float64Array#get:length (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
  i32.const 3
  i32.shr_u
 )
 (func $~lib/typedarray/Int32Array#__set (type $i32_i32_i32_=>_none) (param $this i32) (param $index i32) (param $value i32)
  local.get $index
  local.get $this
  i32.load $0 offset=8
  i32.const 2
  i32.shr_u
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store $0
 )
 (func $~lib/typedarray/Int32Array#__get (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  local.get $index
  local.get $this
  i32.load $0 offset=8
  i32.const 2
  i32.shr_u
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
 )
 (func $~lib/typedarray/Int32Array#subarray (type $i32_i32_i32_=>_i32) (param $this i32) (param $begin i32) (param $end i32) (result i32)
  (local $array i32)
  (local $begin|4 i32)
  (local $end|5 i32)
  (local $len i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $out i32)
  (local $buf i32)
  local.get $this
  local.set $array
  local.get $begin
  local.set $begin|4
  local.get $end
  local.set $end|5
  local.get $array
  call $~lib/typedarray/Int32Array#get:length
  local.set $len
  local.get $begin|4
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $begin|4
   i32.add
   local.tee $7
   i32.const 0
   local.tee $8
   local.get $7
   local.get $8
   i32.gt_s
   select
  else
   local.get $begin|4
   local.tee $9
   local.get $len
   local.tee $10
   local.get $9
   local.get $10
   i32.lt_s
   select
  end
  local.set $begin|4
  local.get $end|5
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $end|5
   i32.add
   local.tee $11
   i32.const 0
   local.tee $12
   local.get $11
   local.get $12
   i32.gt_s
   select
  else
   local.get $end|5
   local.tee $13
   local.get $len
   local.tee $14
   local.get $13
   local.get $14
   i32.lt_s
   select
  end
  local.set $end|5
  local.get $end|5
  local.tee $15
  local.get $begin|4
  local.tee $16
  local.get $15
  local.get $16
  i32.gt_s
  select
  local.set $end|5
  i32.const 12
  i32.const 8
  call $~lib/rt/stub/__new
  local.set $out
  local.get $array
  i32.load $0
  local.set $buf
  local.get $out
  local.get $buf
  i32.store $0
  local.get $out
  local.get $buf
  i32.const 0
  call $~lib/rt/stub/__link
  local.get $out
  local.get $array
  i32.load $0 offset=4
  local.get $begin|4
  i32.const 2
  i32.shl
  i32.add
  i32.store $0 offset=4
  local.get $out
  local.get $end|5
  local.get $begin|4
  i32.sub
  i32.const 2
  i32.shl
  i32.store $0 offset=8
  local.get $out
 )
 (func $~lib/typedarray/Float64Array#__set (type $i32_i32_f64_=>_none) (param $this i32) (param $index i32) (param $value f64)
  local.get $index
  local.get $this
  i32.load $0 offset=8
  i32.const 3
  i32.shr_u
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 3
  i32.shl
  i32.add
  local.get $value
  f64.store $0
 )
 (func $~lib/typedarray/Float64Array#subarray (type $i32_i32_i32_=>_i32) (param $this i32) (param $begin i32) (param $end i32) (result i32)
  (local $array i32)
  (local $begin|4 i32)
  (local $end|5 i32)
  (local $len i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $out i32)
  (local $buf i32)
  local.get $this
  local.set $array
  local.get $begin
  local.set $begin|4
  local.get $end
  local.set $end|5
  local.get $array
  call $~lib/typedarray/Float64Array#get:length
  local.set $len
  local.get $begin|4
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $begin|4
   i32.add
   local.tee $7
   i32.const 0
   local.tee $8
   local.get $7
   local.get $8
   i32.gt_s
   select
  else
   local.get $begin|4
   local.tee $9
   local.get $len
   local.tee $10
   local.get $9
   local.get $10
   i32.lt_s
   select
  end
  local.set $begin|4
  local.get $end|5
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $end|5
   i32.add
   local.tee $11
   i32.const 0
   local.tee $12
   local.get $11
   local.get $12
   i32.gt_s
   select
  else
   local.get $end|5
   local.tee $13
   local.get $len
   local.tee $14
   local.get $13
   local.get $14
   i32.lt_s
   select
  end
  local.set $end|5
  local.get $end|5
  local.tee $15
  local.get $begin|4
  local.tee $16
  local.get $15
  local.get $16
  i32.gt_s
  select
  local.set $end|5
  i32.const 12
  i32.const 13
  call $~lib/rt/stub/__new
  local.set $out
  local.get $array
  i32.load $0
  local.set $buf
  local.get $out
  local.get $buf
  i32.store $0
  local.get $out
  local.get $buf
  i32.const 0
  call $~lib/rt/stub/__link
  local.get $out
  local.get $array
  i32.load $0 offset=4
  local.get $begin|4
  i32.const 3
  i32.shl
  i32.add
  i32.store $0 offset=4
  local.get $out
  local.get $end|5
  local.get $begin|4
  i32.sub
  i32.const 3
  i32.shl
  i32.store $0 offset=8
  local.get $out
 )
 (func $~lib/util/sort/insertionSort<f64> (type $i32_i32_i32_i32_i32_=>_none) (param $ptr i32) (param $left i32) (param $right i32) (param $presorted i32) (param $comparator i32)
  (local $range i32)
  (local $i i32)
  (local $7 i32)
  (local $a f64)
  (local $b f64)
  (local $min f64)
  (local $max f64)
  (local $j i32)
  (local $13 i32)
  (local $14 i32)
  i32.const 0
  i32.const 1
  i32.ge_s
  drop
  local.get $right
  local.get $left
  i32.sub
  i32.const 1
  i32.add
  local.set $range
  local.get $left
  local.get $range
  i32.const 1
  i32.and
  local.get $presorted
  local.get $range
  local.get $presorted
  i32.sub
  i32.const 1
  i32.and
  i32.sub
  local.get $presorted
  i32.const 0
  i32.eq
  select
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $right
   i32.le_s
   local.set $7
   local.get $7
   if
    local.get $ptr
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    f64.load $0
    local.set $a
    local.get $ptr
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    f64.load $0 offset=8
    local.set $b
    local.get $b
    local.set $min
    local.get $a
    local.set $max
    local.get $a
    local.get $b
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $f64_f64_=>_i32)
    i32.const 0
    i32.le_s
    if
     local.get $a
     local.set $min
     local.get $b
     local.set $max
    end
    local.get $i
    i32.const 1
    i32.sub
    local.set $j
    block $while-break|1
     loop $while-continue|1
      local.get $j
      local.get $left
      i32.ge_s
      local.set $13
      local.get $13
      if
       local.get $ptr
       local.get $j
       i32.const 3
       i32.shl
       i32.add
       f64.load $0
       local.set $a
       local.get $a
       local.get $max
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $f64_f64_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $j
        i32.const 3
        i32.shl
        i32.add
        local.get $a
        f64.store $0 offset=16
        local.get $j
        i32.const 1
        i32.sub
        local.set $j
       else
        br $while-break|1
       end
       br $while-continue|1
      end
     end
    end
    local.get $ptr
    local.get $j
    i32.const 3
    i32.shl
    i32.add
    local.get $max
    f64.store $0 offset=16
    block $while-break|2
     loop $while-continue|2
      local.get $j
      local.get $left
      i32.ge_s
      local.set $14
      local.get $14
      if
       local.get $ptr
       local.get $j
       i32.const 3
       i32.shl
       i32.add
       f64.load $0
       local.set $a
       local.get $a
       local.get $min
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $f64_f64_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $j
        i32.const 3
        i32.shl
        i32.add
        local.get $a
        f64.store $0 offset=8
        local.get $j
        i32.const 1
        i32.sub
        local.set $j
       else
        br $while-break|2
       end
       br $while-continue|2
      end
     end
    end
    local.get $ptr
    local.get $j
    i32.const 3
    i32.shl
    i32.add
    local.get $min
    f64.store $0 offset=8
    local.get $i
    i32.const 2
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/util/sort/extendRunRight<f64> (type $i32_i32_i32_i32_=>_i32) (param $ptr i32) (param $i i32) (param $right i32) (param $comparator i32) (result i32)
  (local $j i32)
  (local $5 i32)
  (local $k i32)
  (local $7 i32)
  (local $tmp f64)
  (local $9 i32)
  local.get $i
  local.get $right
  i32.eq
  if
   local.get $i
   return
  end
  local.get $i
  local.set $j
  local.get $ptr
  local.get $j
  i32.const 3
  i32.shl
  i32.add
  f64.load $0
  local.get $ptr
  local.get $j
  i32.const 1
  i32.add
  local.tee $j
  i32.const 3
  i32.shl
  i32.add
  f64.load $0
  i32.const 2
  global.set $~argumentsLength
  local.get $comparator
  i32.load $0
  call_indirect $0 (type $f64_f64_=>_i32)
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 3
     i32.shl
     i32.add
     f64.load $0 offset=8
     local.get $ptr
     local.get $j
     i32.const 3
     i32.shl
     i32.add
     f64.load $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $f64_f64_=>_i32)
     i32.const 31
     i32.shr_u
    else
     i32.const 0
    end
    local.set $5
    local.get $5
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|0
    end
   end
   local.get $j
   local.set $k
   loop $while-continue|1
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     local.get $ptr
     local.get $i
     i32.const 3
     i32.shl
     i32.add
     f64.load $0
     local.set $tmp
     local.get $ptr
     local.get $i
     i32.const 3
     i32.shl
     i32.add
     local.get $ptr
     local.get $k
     i32.const 3
     i32.shl
     i32.add
     f64.load $0
     f64.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     local.get $ptr
     local.get $k
     i32.const 3
     i32.shl
     i32.add
     local.get $tmp
     f64.store $0
     local.get $k
     i32.const 1
     i32.sub
     local.set $k
     br $while-continue|1
    end
   end
  else
   loop $while-continue|2
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 3
     i32.shl
     i32.add
     f64.load $0 offset=8
     local.get $ptr
     local.get $j
     i32.const 3
     i32.shl
     i32.add
     f64.load $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $f64_f64_=>_i32)
     i32.const 0
     i32.ge_s
    else
     i32.const 0
    end
    local.set $9
    local.get $9
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|2
    end
   end
  end
  local.get $j
 )
 (func $~lib/util/sort/nodePower (type $i32_i32_i32_i32_i32_=>_i32) (param $left i32) (param $right i32) (param $startA i32) (param $startB i32) (param $endB i32) (result i32)
  (local $n i64)
  (local $s i32)
  (local $l i32)
  (local $r i32)
  (local $a i64)
  (local $b i64)
  local.get $right
  local.get $left
  i32.sub
  i32.const 1
  i32.add
  i64.extend_i32_u
  local.set $n
  local.get $startB
  local.get $left
  i32.const 1
  i32.shl
  i32.sub
  local.set $s
  local.get $startA
  local.get $s
  i32.add
  local.set $l
  local.get $endB
  local.get $s
  i32.add
  i32.const 1
  i32.add
  local.set $r
  local.get $l
  i64.extend_i32_u
  i64.const 30
  i64.shl
  local.get $n
  i64.div_u
  local.set $a
  local.get $r
  i64.extend_i32_u
  i64.const 30
  i64.shl
  local.get $n
  i64.div_u
  local.set $b
  local.get $a
  local.get $b
  i64.xor
  i32.wrap_i64
  i32.clz
 )
 (func $~lib/util/sort/mergeRuns<f64> (type $i32_i32_i32_i32_i32_i32_=>_none) (param $ptr i32) (param $l i32) (param $m i32) (param $r i32) (param $buffer i32) (param $comparator i32)
  (local $i i32)
  (local $j i32)
  (local $t i32)
  (local $9 i32)
  (local $10 i32)
  (local $k i32)
  (local $12 i32)
  (local $a f64)
  (local $b f64)
  local.get $m
  i32.const 1
  i32.sub
  local.set $m
  local.get $r
  local.get $m
  i32.add
  local.set $t
  local.get $m
  i32.const 1
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $l
   i32.gt_s
   local.set $9
   local.get $9
   if
    local.get $buffer
    local.get $i
    i32.const 1
    i32.sub
    i32.const 3
    i32.shl
    i32.add
    local.get $ptr
    local.get $i
    i32.const 1
    i32.sub
    i32.const 3
    i32.shl
    i32.add
    f64.load $0
    f64.store $0
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  local.get $m
  local.set $j
  loop $for-loop|1
   local.get $j
   local.get $r
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $buffer
    local.get $t
    local.get $j
    i32.sub
    i32.const 3
    i32.shl
    i32.add
    local.get $ptr
    local.get $j
    i32.const 3
    i32.shl
    i32.add
    f64.load $0 offset=8
    f64.store $0
    local.get $j
    i32.const 1
    i32.add
    local.set $j
    br $for-loop|1
   end
  end
  local.get $l
  local.set $k
  loop $for-loop|2
   local.get $k
   local.get $r
   i32.le_s
   local.set $12
   local.get $12
   if
    local.get $buffer
    local.get $j
    i32.const 3
    i32.shl
    i32.add
    f64.load $0
    local.set $a
    local.get $buffer
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    f64.load $0
    local.set $b
    local.get $a
    local.get $b
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $f64_f64_=>_i32)
    i32.const 0
    i32.lt_s
    if
     local.get $ptr
     local.get $k
     i32.const 3
     i32.shl
     i32.add
     local.get $a
     f64.store $0
     local.get $j
     i32.const 1
     i32.sub
     local.set $j
    else
     local.get $ptr
     local.get $k
     i32.const 3
     i32.shl
     i32.add
     local.get $b
     f64.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
    end
    local.get $k
    i32.const 1
    i32.add
    local.set $k
    br $for-loop|2
   end
  end
 )
 (func $~lib/rt/stub/__free (type $i32_=>_none) (param $ptr i32)
  (local $block i32)
  local.get $ptr
  i32.const 0
  i32.ne
  if (result i32)
   local.get $ptr
   i32.const 15
   i32.and
   i32.eqz
  else
   i32.const 0
  end
  i32.eqz
  if
   unreachable
  end
  local.get $ptr
  i32.const 4
  i32.sub
  local.set $block
  local.get $ptr
  local.get $block
  i32.load $0
  i32.add
  global.get $~lib/rt/stub/offset
  i32.eq
  if
   local.get $block
   global.set $~lib/rt/stub/offset
  end
 )
 (func $~lib/util/sort/SORT<f64> (type $i32_i32_i32_=>_none) (param $ptr i32) (param $len i32) (param $comparator i32)
  (local $3 i32)
  (local $a f64)
  (local $b f64)
  (local $c i32)
  (local $a|7 f64)
  (local $b|8 f64)
  (local $c|9 i32)
  (local $n i32)
  (local $lgPlus2 i32)
  (local $lgPlus2Size i32)
  (local $leftRunStartBuf i32)
  (local $leftRunEndBuf i32)
  (local $i i32)
  (local $16 i32)
  (local $buffer i32)
  (local $hi i32)
  (local $endA i32)
  (local $lenA i32)
  (local $21 i32)
  (local $22 i32)
  (local $top i32)
  (local $startA i32)
  (local $25 i32)
  (local $startB i32)
  (local $endB i32)
  (local $lenB i32)
  (local $29 i32)
  (local $30 i32)
  (local $k i32)
  (local $i|32 i32)
  (local $33 i32)
  (local $start i32)
  (local $i|35 i32)
  (local $36 i32)
  (local $start|37 i32)
  local.get $len
  i32.const 48
  i32.le_s
  if
   local.get $len
   i32.const 1
   i32.le_s
   if
    return
   end
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   block $break|0
    block $case1|0
     block $case0|0
      local.get $len
      local.set $3
      local.get $3
      i32.const 3
      i32.eq
      br_if $case0|0
      local.get $3
      i32.const 2
      i32.eq
      br_if $case1|0
      br $break|0
     end
     local.get $ptr
     f64.load $0
     local.set $a
     local.get $ptr
     f64.load $0 offset=8
     local.set $b
     local.get $a
     local.get $b
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $f64_f64_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $c
     local.get $ptr
     local.get $b
     local.get $a
     local.get $c
     select
     f64.store $0
     local.get $a
     local.get $b
     local.get $c
     select
     local.set $a
     local.get $ptr
     f64.load $0 offset=16
     local.set $b
     local.get $a
     local.get $b
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $f64_f64_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $c
     local.get $ptr
     local.get $b
     local.get $a
     local.get $c
     select
     f64.store $0 offset=8
     local.get $ptr
     local.get $a
     local.get $b
     local.get $c
     select
     f64.store $0 offset=16
    end
    local.get $ptr
    f64.load $0
    local.set $a|7
    local.get $ptr
    f64.load $0 offset=8
    local.set $b|8
    local.get $a|7
    local.get $b|8
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $f64_f64_=>_i32)
    i32.const 0
    i32.gt_s
    local.set $c|9
    local.get $ptr
    local.get $b|8
    local.get $a|7
    local.get $c|9
    select
    f64.store $0
    local.get $ptr
    local.get $a|7
    local.get $b|8
    local.get $c|9
    select
    f64.store $0 offset=8
    return
   end
   local.get $ptr
   i32.const 0
   local.get $len
   i32.const 1
   i32.sub
   i32.const 0
   local.get $comparator
   call $~lib/util/sort/insertionSort<f64>
   return
  end
  local.get $len
  local.set $n
  i32.const 31
  local.get $n
  i32.clz
  i32.sub
  i32.const 2
  i32.add
  local.set $lgPlus2
  local.get $lgPlus2
  i32.const 2
  i32.shl
  local.set $lgPlus2Size
  local.get $lgPlus2Size
  i32.const 1
  i32.shl
  call $~lib/rt/stub/__alloc
  local.set $leftRunStartBuf
  local.get $leftRunStartBuf
  local.get $lgPlus2Size
  i32.add
  local.set $leftRunEndBuf
  i32.const 0
  local.set $i
  loop $for-loop|1
   local.get $i
   local.get $lgPlus2
   i32.lt_u
   local.set $16
   local.get $16
   if
    local.get $leftRunStartBuf
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.const -1
    i32.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|1
   end
  end
  local.get $len
  i32.const 3
  i32.shl
  call $~lib/rt/stub/__alloc
  local.set $buffer
  local.get $len
  i32.const 1
  i32.sub
  local.set $hi
  local.get $ptr
  i32.const 0
  local.get $hi
  local.get $comparator
  call $~lib/util/sort/extendRunRight<f64>
  local.set $endA
  local.get $endA
  i32.const 1
  i32.add
  local.set $lenA
  local.get $lenA
  i32.const 32
  i32.lt_s
  if
   local.get $hi
   local.tee $21
   i32.const 32
   i32.const 1
   i32.sub
   local.tee $22
   local.get $21
   local.get $22
   i32.lt_s
   select
   local.set $endA
   local.get $ptr
   i32.const 0
   local.get $endA
   local.get $lenA
   local.get $comparator
   call $~lib/util/sort/insertionSort<f64>
  end
  i32.const 0
  local.set $top
  i32.const 0
  local.set $startA
  loop $while-continue|2
   local.get $endA
   local.get $hi
   i32.lt_s
   local.set $25
   local.get $25
   if
    local.get $endA
    i32.const 1
    i32.add
    local.set $startB
    local.get $ptr
    local.get $startB
    local.get $hi
    local.get $comparator
    call $~lib/util/sort/extendRunRight<f64>
    local.set $endB
    local.get $endB
    local.get $startB
    i32.sub
    i32.const 1
    i32.add
    local.set $lenB
    local.get $lenB
    i32.const 32
    i32.lt_s
    if
     local.get $hi
     local.tee $29
     local.get $startB
     i32.const 32
     i32.add
     i32.const 1
     i32.sub
     local.tee $30
     local.get $29
     local.get $30
     i32.lt_s
     select
     local.set $endB
     local.get $ptr
     local.get $startB
     local.get $endB
     local.get $lenB
     local.get $comparator
     call $~lib/util/sort/insertionSort<f64>
    end
    i32.const 0
    local.get $hi
    local.get $startA
    local.get $startB
    local.get $endB
    call $~lib/util/sort/nodePower
    local.set $k
    local.get $top
    local.set $i|32
    loop $for-loop|3
     local.get $i|32
     local.get $k
     i32.gt_u
     local.set $33
     local.get $33
     if
      local.get $leftRunStartBuf
      local.get $i|32
      i32.const 2
      i32.shl
      i32.add
      i32.load $0
      local.set $start
      local.get $start
      i32.const -1
      i32.ne
      if
       local.get $ptr
       local.get $start
       local.get $leftRunEndBuf
       local.get $i|32
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       i32.const 1
       i32.add
       local.get $endA
       local.get $buffer
       local.get $comparator
       call $~lib/util/sort/mergeRuns<f64>
       local.get $start
       local.set $startA
       local.get $leftRunStartBuf
       local.get $i|32
       i32.const 2
       i32.shl
       i32.add
       i32.const -1
       i32.store $0
      end
      local.get $i|32
      i32.const 1
      i32.sub
      local.set $i|32
      br $for-loop|3
     end
    end
    local.get $leftRunStartBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $startA
    i32.store $0
    local.get $leftRunEndBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $endA
    i32.store $0
    local.get $startB
    local.set $startA
    local.get $endB
    local.set $endA
    local.get $k
    local.set $top
    br $while-continue|2
   end
  end
  local.get $top
  local.set $i|35
  loop $for-loop|4
   local.get $i|35
   i32.const 0
   i32.ne
   local.set $36
   local.get $36
   if
    local.get $leftRunStartBuf
    local.get $i|35
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $start|37
    local.get $start|37
    i32.const -1
    i32.ne
    if
     local.get $ptr
     local.get $start|37
     local.get $leftRunEndBuf
     local.get $i|35
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 1
     i32.add
     local.get $hi
     local.get $buffer
     local.get $comparator
     call $~lib/util/sort/mergeRuns<f64>
    end
    local.get $i|35
    i32.const 1
    i32.sub
    local.set $i|35
    br $for-loop|4
   end
  end
  local.get $buffer
  call $~lib/rt/stub/__free
  local.get $leftRunStartBuf
  call $~lib/rt/stub/__free
 )
 (func $~lib/typedarray/Float64Array#sort (type $i32_i32_=>_i32) (param $this i32) (param $comparator i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Float64Array#get:length
  local.get $comparator
  call $~lib/util/sort/SORT<f64>
  local.get $this
 )
 (func $~lib/util/sort/COMPARATOR<f64>~anonymous|0 (type $f64_f64_=>_i32) (param $a f64) (param $b f64) (result i32)
  (local $ia i64)
  (local $ib i64)
  local.get $a
  i64.reinterpret_f64
  local.set $ia
  local.get $b
  i64.reinterpret_f64
  local.set $ib
  local.get $ia
  local.get $ia
  i64.const 63
  i64.shr_s
  i64.const 1
  i64.shr_u
  i64.xor
  local.set $ia
  local.get $ib
  local.get $ib
  i64.const 63
  i64.shr_s
  i64.const 1
  i64.shr_u
  i64.xor
  local.set $ib
  local.get $ia
  local.get $ib
  i64.gt_s
  local.get $ia
  local.get $ib
  i64.lt_s
  i32.sub
 )
 (func $~lib/typedarray/Float64Array#sort@varargs (type $i32_i32_=>_i32) (param $this i32) (param $comparator i32) (result i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   block $~lib/util/sort/COMPARATOR<f64>|inlined.0 (result i32)
    i32.const 0
    drop
    i32.const 1
    drop
    i32.const 8
    i32.const 4
    i32.eq
    drop
    i32.const 128
    br $~lib/util/sort/COMPARATOR<f64>|inlined.0
   end
   local.set $comparator
  end
  local.get $this
  local.get $comparator
  call $~lib/typedarray/Float64Array#sort
 )
 (func $~lib/typedarray/Float64Array#__get (type $i32_i32_=>_f64) (param $this i32) (param $index i32) (result f64)
  local.get $index
  local.get $this
  i32.load $0 offset=8
  i32.const 3
  i32.shr_u
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 3
  i32.shl
  i32.add
  f64.load $0
 )
 (func $~lib/typedarray/Uint8ClampedArray#__set (type $i32_i32_i32_=>_none) (param $this i32) (param $index i32) (param $value i32)
  local.get $index
  local.get $this
  i32.load $0 offset=8
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.add
  local.get $value
  i32.const 31
  i32.shr_s
  i32.const -1
  i32.xor
  i32.const 255
  local.get $value
  i32.sub
  i32.const 31
  i32.shr_s
  local.get $value
  i32.or
  i32.and
  i32.store8 $0
 )
 (func $~lib/typedarray/Uint8ClampedArray#__get (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  local.get $index
  local.get $this
  i32.load $0 offset=8
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.add
  i32.load8_u $0
 )
 (func $~lib/typedarray/Int8Array#__set (type $i32_i32_i32_=>_none) (param $this i32) (param $index i32) (param $value i32)
  local.get $index
  local.get $this
  i32.load $0 offset=8
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.add
  local.get $value
  i32.store8 $0
 )
 (func $~lib/util/bytes/FILL<u8> (type $i32_i32_i32_i32_i32_=>_none) (param $ptr i32) (param $len i32) (param $value i32) (param $start i32) (param $end i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  local.get $start
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $start
   i32.add
   local.tee $5
   i32.const 0
   local.tee $6
   local.get $5
   local.get $6
   i32.gt_u
   select
  else
   local.get $start
   local.tee $7
   local.get $len
   local.tee $8
   local.get $7
   local.get $8
   i32.lt_s
   select
  end
  local.set $start
  local.get $end
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $end
   i32.add
   local.tee $9
   i32.const 0
   local.tee $10
   local.get $9
   local.get $10
   i32.gt_u
   select
  else
   local.get $end
   local.tee $11
   local.get $len
   local.tee $12
   local.get $11
   local.get $12
   i32.lt_s
   select
  end
  local.set $end
  i32.const 1
  i32.const 1
  i32.eq
  drop
  local.get $start
  local.get $end
  i32.lt_s
  if
   local.get $ptr
   local.get $start
   i32.add
   local.get $value
   local.get $end
   local.get $start
   i32.sub
   memory.fill $0
  end
 )
 (func $~lib/typedarray/Int8Array#fill (type $i32_i32_i32_i32_=>_i32) (param $this i32) (param $value i32) (param $start i32) (param $end i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Int8Array#get:length
  local.get $value
  local.get $start
  local.get $end
  call $~lib/util/bytes/FILL<u8>
  local.get $this
 )
 (func $~lib/rt/__newBuffer (type $i32_i32_i32_=>_i32) (param $size i32) (param $id i32) (param $data i32) (result i32)
  (local $buffer i32)
  (local $dest i32)
  (local $ptr i32)
  (local $len i32)
  (local $dest|7 i32)
  (local $ptr|8 i32)
  (local $dest|9 i32)
  (local $ptr|10 i32)
  (local $len|11 i32)
  (local $dest|12 i32)
  (local $ptr|13 i32)
  (local $dest|14 i32)
  (local $ptr|15 i32)
  (local $len|16 i32)
  (local $dest|17 i32)
  (local $ptr|18 i32)
  (local $dest|19 i32)
  (local $ptr|20 i32)
  (local $len|21 i32)
  (local $dest|22 i32)
  (local $ptr|23 i32)
  (local $dest|24 i32)
  (local $ptr|25 i32)
  (local $len|26 i32)
  (local $dest|27 i32)
  (local $ptr|28 i32)
  (local $dest|29 i32)
  (local $ptr|30 i32)
  (local $len|31 i32)
  local.get $size
  local.get $id
  call $~lib/rt/stub/__new
  local.set $buffer
  local.get $data
  if
   local.get $size
   i32.const 64
   i32.ge_u
   if
    unreachable
   end
   local.get $buffer
   local.set $dest
   local.get $data
   local.set $ptr
   local.get $size
   local.set $len
   local.get $len
   i32.const 32
   i32.ge_s
   if
    local.get $dest
    local.set $dest|7
    local.get $ptr
    local.set $ptr|8
    local.get $dest|7
    local.get $ptr|8
    i64.load $0
    i64.store $0
    local.get $dest|7
    i32.const 8
    i32.add
    local.set $dest|7
    local.get $ptr|8
    i32.const 8
    i32.add
    local.set $ptr|8
    local.get $dest|7
    local.get $ptr|8
    i64.load $0
    i64.store $0
    local.get $dest|7
    i32.const 8
    i32.add
    local.set $dest|7
    local.get $ptr|8
    i32.const 8
    i32.add
    local.set $ptr|8
    local.get $dest|7
    local.get $ptr|8
    i64.load $0
    i64.store $0
    local.get $dest|7
    i32.const 8
    i32.add
    local.set $dest|7
    local.get $ptr|8
    i32.const 8
    i32.add
    local.set $ptr|8
    local.get $dest|7
    local.get $ptr|8
    i64.load $0
    i64.store $0
    local.get $dest
    i32.const 32
    i32.add
    local.set $dest
    local.get $ptr
    i32.const 32
    i32.add
    local.set $ptr
    local.get $len
    i32.const 32
    i32.sub
    local.set $len
   end
   local.get $dest
   local.set $dest|9
   local.get $ptr
   local.set $ptr|10
   local.get $len
   local.set $len|11
   local.get $len|11
   i32.const 16
   i32.ge_s
   if
    local.get $dest|9
    local.set $dest|12
    local.get $ptr|10
    local.set $ptr|13
    local.get $dest|12
    local.get $ptr|13
    i64.load $0
    i64.store $0
    local.get $dest|12
    i32.const 8
    i32.add
    local.set $dest|12
    local.get $ptr|13
    i32.const 8
    i32.add
    local.set $ptr|13
    local.get $dest|12
    local.get $ptr|13
    i64.load $0
    i64.store $0
    local.get $dest|9
    i32.const 16
    i32.add
    local.set $dest|9
    local.get $ptr|10
    i32.const 16
    i32.add
    local.set $ptr|10
    local.get $len|11
    i32.const 16
    i32.sub
    local.set $len|11
   end
   local.get $dest|9
   local.set $dest|14
   local.get $ptr|10
   local.set $ptr|15
   local.get $len|11
   local.set $len|16
   local.get $len|16
   i32.const 8
   i32.ge_s
   if
    local.get $dest|14
    local.set $dest|17
    local.get $ptr|15
    local.set $ptr|18
    local.get $dest|17
    local.get $ptr|18
    i64.load $0
    i64.store $0
    local.get $dest|14
    i32.const 8
    i32.add
    local.set $dest|14
    local.get $ptr|15
    i32.const 8
    i32.add
    local.set $ptr|15
    local.get $len|16
    i32.const 8
    i32.sub
    local.set $len|16
   end
   local.get $dest|14
   local.set $dest|19
   local.get $ptr|15
   local.set $ptr|20
   local.get $len|16
   local.set $len|21
   local.get $len|21
   i32.const 4
   i32.ge_s
   if
    local.get $dest|19
    local.set $dest|22
    local.get $ptr|20
    local.set $ptr|23
    local.get $dest|22
    local.get $ptr|23
    i32.load $0
    i32.store $0
    local.get $dest|19
    i32.const 4
    i32.add
    local.set $dest|19
    local.get $ptr|20
    i32.const 4
    i32.add
    local.set $ptr|20
    local.get $len|21
    i32.const 4
    i32.sub
    local.set $len|21
   end
   local.get $dest|19
   local.set $dest|24
   local.get $ptr|20
   local.set $ptr|25
   local.get $len|21
   local.set $len|26
   local.get $len|26
   i32.const 2
   i32.ge_s
   if
    local.get $dest|24
    local.set $dest|27
    local.get $ptr|25
    local.set $ptr|28
    local.get $dest|27
    local.get $ptr|28
    i32.load16_u $0
    i32.store16 $0
    local.get $dest|24
    i32.const 2
    i32.add
    local.set $dest|24
    local.get $ptr|25
    i32.const 2
    i32.add
    local.set $ptr|25
    local.get $len|26
    i32.const 2
    i32.sub
    local.set $len|26
   end
   local.get $dest|24
   local.set $dest|29
   local.get $ptr|25
   local.set $ptr|30
   local.get $len|26
   local.set $len|31
   local.get $len|31
   if
    local.get $dest|29
    local.get $ptr|30
    i32.load8_u $0
    i32.store8 $0
   end
  end
  local.get $buffer
 )
 (func $~lib/rt/__newArray (type $i32_i32_i32_i32_=>_i32) (param $length i32) (param $alignLog2 i32) (param $id i32) (param $data i32) (result i32)
  (local $bufferSize i32)
  (local $buffer i32)
  (local $array i32)
  local.get $length
  local.get $alignLog2
  i32.shl
  local.set $bufferSize
  local.get $bufferSize
  i32.const 0
  local.get $data
  call $~lib/rt/__newBuffer
  local.set $buffer
  i32.const 16
  local.get $id
  call $~lib/rt/stub/__new
  local.set $array
  local.get $array
  local.get $buffer
  i32.store $0
  local.get $array
  local.get $buffer
  i32.const 0
  call $~lib/rt/stub/__link
  local.get $array
  local.get $buffer
  i32.store $0 offset=4
  local.get $array
  local.get $bufferSize
  i32.store $0 offset=8
  local.get $array
  local.get $length
  i32.store $0 offset=12
  local.get $array
 )
 (func $~lib/array/Array<i8>#get:length (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/typedarray/Int8Array#__get (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  local.get $index
  local.get $this
  i32.load $0 offset=8
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.add
  i32.load8_s $0
 )
 (func $~lib/array/Array<i8>#__get (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  local.get $index
  local.get $this
  i32.load $0 offset=12
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 0
  i32.shl
  i32.add
  i32.load8_s $0
  local.set $value
  i32.const 0
  drop
  local.get $value
 )
 (func $~lib/typedarray/Int8Array#subarray (type $i32_i32_i32_=>_i32) (param $this i32) (param $begin i32) (param $end i32) (result i32)
  (local $array i32)
  (local $begin|4 i32)
  (local $end|5 i32)
  (local $len i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $out i32)
  (local $buf i32)
  local.get $this
  local.set $array
  local.get $begin
  local.set $begin|4
  local.get $end
  local.set $end|5
  local.get $array
  call $~lib/typedarray/Int8Array#get:length
  local.set $len
  local.get $begin|4
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $begin|4
   i32.add
   local.tee $7
   i32.const 0
   local.tee $8
   local.get $7
   local.get $8
   i32.gt_s
   select
  else
   local.get $begin|4
   local.tee $9
   local.get $len
   local.tee $10
   local.get $9
   local.get $10
   i32.lt_s
   select
  end
  local.set $begin|4
  local.get $end|5
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $end|5
   i32.add
   local.tee $11
   i32.const 0
   local.tee $12
   local.get $11
   local.get $12
   i32.gt_s
   select
  else
   local.get $end|5
   local.tee $13
   local.get $len
   local.tee $14
   local.get $13
   local.get $14
   i32.lt_s
   select
  end
  local.set $end|5
  local.get $end|5
  local.tee $15
  local.get $begin|4
  local.tee $16
  local.get $15
  local.get $16
  i32.gt_s
  select
  local.set $end|5
  i32.const 12
  i32.const 3
  call $~lib/rt/stub/__new
  local.set $out
  local.get $array
  i32.load $0
  local.set $buf
  local.get $out
  local.get $buf
  i32.store $0
  local.get $out
  local.get $buf
  i32.const 0
  call $~lib/rt/stub/__link
  local.get $out
  local.get $array
  i32.load $0 offset=4
  local.get $begin|4
  i32.const 0
  i32.shl
  i32.add
  i32.store $0 offset=4
  local.get $out
  local.get $end|5
  local.get $begin|4
  i32.sub
  i32.const 0
  i32.shl
  i32.store $0 offset=8
  local.get $out
 )
 (func $~lib/util/bytes/FILL<u32> (type $i32_i32_i32_i32_i32_=>_none) (param $ptr i32) (param $len i32) (param $value i32) (param $start i32) (param $end i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  local.get $start
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $start
   i32.add
   local.tee $5
   i32.const 0
   local.tee $6
   local.get $5
   local.get $6
   i32.gt_u
   select
  else
   local.get $start
   local.tee $7
   local.get $len
   local.tee $8
   local.get $7
   local.get $8
   i32.lt_s
   select
  end
  local.set $start
  local.get $end
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $end
   i32.add
   local.tee $9
   i32.const 0
   local.tee $10
   local.get $9
   local.get $10
   i32.gt_u
   select
  else
   local.get $end
   local.tee $11
   local.get $len
   local.tee $12
   local.get $11
   local.get $12
   i32.lt_s
   select
  end
  local.set $end
  i32.const 4
  i32.const 1
  i32.eq
  drop
  i32.const 0
  i32.const 1
  i32.le_s
  drop
  i32.const 1
  drop
  local.get $value
  i32.const 0
  i32.eq
  local.get $value
  i32.const -1
  i32.eq
  i32.or
  if
   local.get $start
   local.get $end
   i32.lt_s
   if
    local.get $ptr
    local.get $start
    i32.const 2
    i32.shl
    i32.add
    local.get $value
    local.get $end
    local.get $start
    i32.sub
    i32.const 2
    i32.shl
    memory.fill $0
   end
   return
  end
  loop $for-loop|0
   local.get $start
   local.get $end
   i32.lt_s
   local.set $13
   local.get $13
   if
    local.get $ptr
    local.get $start
    i32.const 2
    i32.shl
    i32.add
    local.get $value
    i32.store $0
    local.get $start
    i32.const 1
    i32.add
    local.set $start
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Int32Array#fill (type $i32_i32_i32_i32_=>_i32) (param $this i32) (param $value i32) (param $start i32) (param $end i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Int32Array#get:length
  local.get $value
  local.get $start
  local.get $end
  call $~lib/util/bytes/FILL<u32>
  local.get $this
 )
 (func $~lib/array/Array<i32>#get:length (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/array/Array<i32>#__get (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  local.get $index
  local.get $this
  i32.load $0 offset=12
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.set $value
  i32.const 0
  drop
  local.get $value
 )
 (func $~lib/typedarray/Int32Array#slice (type $i32_i32_i32_=>_i32) (param $this i32) (param $begin i32) (param $end i32) (result i32)
  (local $array i32)
  (local $start i32)
  (local $end|5 i32)
  (local $len i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $slice i32)
  local.get $this
  local.set $array
  local.get $begin
  local.set $start
  local.get $end
  local.set $end|5
  local.get $array
  call $~lib/typedarray/Int32Array#get:length
  local.set $len
  local.get $start
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $start
   local.get $len
   i32.add
   local.tee $7
   i32.const 0
   local.tee $8
   local.get $7
   local.get $8
   i32.gt_s
   select
  else
   local.get $start
   local.tee $9
   local.get $len
   local.tee $10
   local.get $9
   local.get $10
   i32.lt_s
   select
  end
  local.set $start
  local.get $end|5
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $end|5
   local.get $len
   i32.add
   local.tee $11
   i32.const 0
   local.tee $12
   local.get $11
   local.get $12
   i32.gt_s
   select
  else
   local.get $end|5
   local.tee $13
   local.get $len
   local.tee $14
   local.get $13
   local.get $14
   i32.lt_s
   select
  end
  local.set $end|5
  local.get $end|5
  local.get $start
  i32.sub
  local.tee $15
  i32.const 0
  local.tee $16
  local.get $15
  local.get $16
  i32.gt_s
  select
  local.set $len
  i32.const 0
  local.get $len
  call $~lib/typedarray/Int32Array#constructor
  local.set $slice
  local.get $slice
  i32.load $0 offset=4
  local.get $array
  i32.load $0 offset=4
  local.get $start
  i32.const 2
  i32.shl
  i32.add
  local.get $len
  i32.const 2
  i32.shl
  memory.copy $0 $0
  local.get $slice
 )
 (func $~lib/typedarray/Int32Array#copyWithin (type $i32_i32_i32_i32_=>_i32) (param $this i32) (param $target i32) (param $start i32) (param $end i32) (result i32)
  (local $array i32)
  (local $target|5 i32)
  (local $start|6 i32)
  (local $end|7 i32)
  (local $len i32)
  (local $ptr i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $to i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $from i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $last i32)
  (local $27 i32)
  (local $28 i32)
  (local $count i32)
  local.get $this
  local.set $array
  local.get $target
  local.set $target|5
  local.get $start
  local.set $start|6
  local.get $end
  local.set $end|7
  local.get $array
  call $~lib/typedarray/Int32Array#get:length
  local.set $len
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  local.get $end|7
  local.tee $10
  local.get $len
  local.tee $11
  local.get $10
  local.get $11
  i32.lt_s
  select
  local.set $end|7
  local.get $target|5
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $target|5
   i32.add
   local.tee $12
   i32.const 0
   local.tee $13
   local.get $12
   local.get $13
   i32.gt_s
   select
  else
   local.get $target|5
   local.tee $14
   local.get $len
   local.tee $15
   local.get $14
   local.get $15
   i32.lt_s
   select
  end
  local.set $to
  local.get $start|6
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $start|6
   i32.add
   local.tee $17
   i32.const 0
   local.tee $18
   local.get $17
   local.get $18
   i32.gt_s
   select
  else
   local.get $start|6
   local.tee $19
   local.get $len
   local.tee $20
   local.get $19
   local.get $20
   i32.lt_s
   select
  end
  local.set $from
  local.get $end|7
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $end|7
   i32.add
   local.tee $22
   i32.const 0
   local.tee $23
   local.get $22
   local.get $23
   i32.gt_s
   select
  else
   local.get $end|7
   local.tee $24
   local.get $len
   local.tee $25
   local.get $24
   local.get $25
   i32.lt_s
   select
  end
  local.set $last
  local.get $last
  local.get $from
  i32.sub
  local.tee $27
  local.get $len
  local.get $to
  i32.sub
  local.tee $28
  local.get $27
  local.get $28
  i32.lt_s
  select
  local.set $count
  local.get $ptr
  local.get $to
  i32.const 2
  i32.shl
  i32.add
  local.get $ptr
  local.get $from
  i32.const 2
  i32.shl
  i32.add
  local.get $count
  i32.const 2
  i32.shl
  memory.copy $0 $0
  local.get $array
 )
 (func $std/typedarray/testReduce<~lib/typedarray/Int8Array,i8>~anonymous|0 (type $i32_i32_i32_i32_=>_i32) (param $acc i32) (param $val i32) (param $$2 i32) (param $$3 i32) (result i32)
  local.get $acc
  local.get $val
  i32.add
 )
 (func $~lib/typedarray/Int8Array#reduce<i8> (type $i32_i32_i32_=>_i32) (param $this i32) (param $fn i32) (param $initialValue i32) (result i32)
  (local $array i32)
  (local $fn|4 i32)
  (local $initialValue|5 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $9 i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|4
  local.get $initialValue
  local.set $initialValue|5
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  i32.const 0
  local.set $i
  local.get $array
  call $~lib/typedarray/Int8Array#get:length
  local.set $k
  loop $for-loop|0
   local.get $i
   local.get $k
   i32.lt_s
   local.set $9
   local.get $9
   if
    local.get $initialValue|5
    local.get $ptr
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    i32.load8_s $0
    local.get $i
    local.get $array
    i32.const 4
    global.set $~argumentsLength
    local.get $fn|4
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
    local.set $initialValue|5
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $initialValue|5
 )
 (func $~lib/typedarray/Uint8Array#__set (type $i32_i32_i32_=>_none) (param $this i32) (param $index i32) (param $value i32)
  local.get $index
  local.get $this
  i32.load $0 offset=8
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.add
  local.get $value
  i32.store8 $0
 )
 (func $std/typedarray/testReduce<~lib/typedarray/Uint8Array,u8>~anonymous|0 (type $i32_i32_i32_i32_=>_i32) (param $acc i32) (param $val i32) (param $$2 i32) (param $$3 i32) (result i32)
  local.get $acc
  local.get $val
  i32.add
 )
 (func $~lib/typedarray/Uint8Array#reduce<u8> (type $i32_i32_i32_=>_i32) (param $this i32) (param $fn i32) (param $initialValue i32) (result i32)
  (local $array i32)
  (local $fn|4 i32)
  (local $initialValue|5 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $9 i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|4
  local.get $initialValue
  local.set $initialValue|5
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  i32.const 0
  local.set $i
  local.get $array
  call $~lib/typedarray/Uint8Array#get:length
  local.set $k
  loop $for-loop|0
   local.get $i
   local.get $k
   i32.lt_s
   local.set $9
   local.get $9
   if
    local.get $initialValue|5
    local.get $ptr
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    i32.load8_u $0
    local.get $i
    local.get $array
    i32.const 4
    global.set $~argumentsLength
    local.get $fn|4
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
    local.set $initialValue|5
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $initialValue|5
 )
 (func $std/typedarray/testReduce<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|0 (type $i32_i32_i32_i32_=>_i32) (param $acc i32) (param $val i32) (param $$2 i32) (param $$3 i32) (result i32)
  local.get $acc
  local.get $val
  i32.add
 )
 (func $~lib/typedarray/Uint8ClampedArray#reduce<u8> (type $i32_i32_i32_=>_i32) (param $this i32) (param $fn i32) (param $initialValue i32) (result i32)
  (local $array i32)
  (local $fn|4 i32)
  (local $initialValue|5 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $9 i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|4
  local.get $initialValue
  local.set $initialValue|5
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  i32.const 0
  local.set $i
  local.get $array
  call $~lib/typedarray/Uint8ClampedArray#get:length
  local.set $k
  loop $for-loop|0
   local.get $i
   local.get $k
   i32.lt_s
   local.set $9
   local.get $9
   if
    local.get $initialValue|5
    local.get $ptr
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    i32.load8_u $0
    local.get $i
    local.get $array
    i32.const 4
    global.set $~argumentsLength
    local.get $fn|4
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
    local.set $initialValue|5
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $initialValue|5
 )
 (func $~lib/typedarray/Int16Array#__set (type $i32_i32_i32_=>_none) (param $this i32) (param $index i32) (param $value i32)
  local.get $index
  local.get $this
  i32.load $0 offset=8
  i32.const 1
  i32.shr_u
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 1
  i32.shl
  i32.add
  local.get $value
  i32.store16 $0
 )
 (func $std/typedarray/testReduce<~lib/typedarray/Int16Array,i16>~anonymous|0 (type $i32_i32_i32_i32_=>_i32) (param $acc i32) (param $val i32) (param $$2 i32) (param $$3 i32) (result i32)
  local.get $acc
  local.get $val
  i32.add
 )
 (func $~lib/typedarray/Int16Array#reduce<i16> (type $i32_i32_i32_=>_i32) (param $this i32) (param $fn i32) (param $initialValue i32) (result i32)
  (local $array i32)
  (local $fn|4 i32)
  (local $initialValue|5 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $9 i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|4
  local.get $initialValue
  local.set $initialValue|5
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  i32.const 0
  local.set $i
  local.get $array
  call $~lib/typedarray/Int16Array#get:length
  local.set $k
  loop $for-loop|0
   local.get $i
   local.get $k
   i32.lt_s
   local.set $9
   local.get $9
   if
    local.get $initialValue|5
    local.get $ptr
    local.get $i
    i32.const 1
    i32.shl
    i32.add
    i32.load16_s $0
    local.get $i
    local.get $array
    i32.const 4
    global.set $~argumentsLength
    local.get $fn|4
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
    local.set $initialValue|5
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $initialValue|5
 )
 (func $~lib/typedarray/Uint16Array#__set (type $i32_i32_i32_=>_none) (param $this i32) (param $index i32) (param $value i32)
  local.get $index
  local.get $this
  i32.load $0 offset=8
  i32.const 1
  i32.shr_u
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 1
  i32.shl
  i32.add
  local.get $value
  i32.store16 $0
 )
 (func $std/typedarray/testReduce<~lib/typedarray/Uint16Array,u16>~anonymous|0 (type $i32_i32_i32_i32_=>_i32) (param $acc i32) (param $val i32) (param $$2 i32) (param $$3 i32) (result i32)
  local.get $acc
  local.get $val
  i32.add
 )
 (func $~lib/typedarray/Uint16Array#reduce<u16> (type $i32_i32_i32_=>_i32) (param $this i32) (param $fn i32) (param $initialValue i32) (result i32)
  (local $array i32)
  (local $fn|4 i32)
  (local $initialValue|5 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $9 i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|4
  local.get $initialValue
  local.set $initialValue|5
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  i32.const 0
  local.set $i
  local.get $array
  call $~lib/typedarray/Uint16Array#get:length
  local.set $k
  loop $for-loop|0
   local.get $i
   local.get $k
   i32.lt_s
   local.set $9
   local.get $9
   if
    local.get $initialValue|5
    local.get $ptr
    local.get $i
    i32.const 1
    i32.shl
    i32.add
    i32.load16_u $0
    local.get $i
    local.get $array
    i32.const 4
    global.set $~argumentsLength
    local.get $fn|4
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
    local.set $initialValue|5
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $initialValue|5
 )
 (func $std/typedarray/testReduce<~lib/typedarray/Int32Array,i32>~anonymous|0 (type $i32_i32_i32_i32_=>_i32) (param $acc i32) (param $val i32) (param $$2 i32) (param $$3 i32) (result i32)
  local.get $acc
  local.get $val
  i32.add
 )
 (func $~lib/typedarray/Int32Array#reduce<i32> (type $i32_i32_i32_=>_i32) (param $this i32) (param $fn i32) (param $initialValue i32) (result i32)
  (local $array i32)
  (local $fn|4 i32)
  (local $initialValue|5 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $9 i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|4
  local.get $initialValue
  local.set $initialValue|5
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  i32.const 0
  local.set $i
  local.get $array
  call $~lib/typedarray/Int32Array#get:length
  local.set $k
  loop $for-loop|0
   local.get $i
   local.get $k
   i32.lt_s
   local.set $9
   local.get $9
   if
    local.get $initialValue|5
    local.get $ptr
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.get $i
    local.get $array
    i32.const 4
    global.set $~argumentsLength
    local.get $fn|4
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
    local.set $initialValue|5
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $initialValue|5
 )
 (func $~lib/typedarray/Uint32Array#__set (type $i32_i32_i32_=>_none) (param $this i32) (param $index i32) (param $value i32)
  local.get $index
  local.get $this
  i32.load $0 offset=8
  i32.const 2
  i32.shr_u
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store $0
 )
 (func $std/typedarray/testReduce<~lib/typedarray/Uint32Array,u32>~anonymous|0 (type $i32_i32_i32_i32_=>_i32) (param $acc i32) (param $val i32) (param $$2 i32) (param $$3 i32) (result i32)
  local.get $acc
  local.get $val
  i32.add
 )
 (func $~lib/typedarray/Uint32Array#reduce<u32> (type $i32_i32_i32_=>_i32) (param $this i32) (param $fn i32) (param $initialValue i32) (result i32)
  (local $array i32)
  (local $fn|4 i32)
  (local $initialValue|5 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $9 i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|4
  local.get $initialValue
  local.set $initialValue|5
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  i32.const 0
  local.set $i
  local.get $array
  call $~lib/typedarray/Uint32Array#get:length
  local.set $k
  loop $for-loop|0
   local.get $i
   local.get $k
   i32.lt_s
   local.set $9
   local.get $9
   if
    local.get $initialValue|5
    local.get $ptr
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.get $i
    local.get $array
    i32.const 4
    global.set $~argumentsLength
    local.get $fn|4
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
    local.set $initialValue|5
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $initialValue|5
 )
 (func $~lib/typedarray/Int64Array#__set (type $i32_i32_i64_=>_none) (param $this i32) (param $index i32) (param $value i64)
  local.get $index
  local.get $this
  i32.load $0 offset=8
  i32.const 3
  i32.shr_u
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 3
  i32.shl
  i32.add
  local.get $value
  i64.store $0
 )
 (func $std/typedarray/testReduce<~lib/typedarray/Int64Array,i64>~anonymous|0 (type $i64_i64_i32_i32_=>_i64) (param $acc i64) (param $val i64) (param $$2 i32) (param $$3 i32) (result i64)
  local.get $acc
  local.get $val
  i64.add
 )
 (func $~lib/typedarray/Int64Array#reduce<i64> (type $i32_i32_i64_=>_i64) (param $this i32) (param $fn i32) (param $initialValue i64) (result i64)
  (local $array i32)
  (local $fn|4 i32)
  (local $initialValue|5 i64)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $9 i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|4
  local.get $initialValue
  local.set $initialValue|5
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  i32.const 0
  local.set $i
  local.get $array
  call $~lib/typedarray/Int64Array#get:length
  local.set $k
  loop $for-loop|0
   local.get $i
   local.get $k
   i32.lt_s
   local.set $9
   local.get $9
   if
    local.get $initialValue|5
    local.get $ptr
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    local.get $i
    local.get $array
    i32.const 4
    global.set $~argumentsLength
    local.get $fn|4
    i32.load $0
    call_indirect $0 (type $i64_i64_i32_i32_=>_i64)
    local.set $initialValue|5
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $initialValue|5
 )
 (func $~lib/typedarray/Uint64Array#__set (type $i32_i32_i64_=>_none) (param $this i32) (param $index i32) (param $value i64)
  local.get $index
  local.get $this
  i32.load $0 offset=8
  i32.const 3
  i32.shr_u
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 3
  i32.shl
  i32.add
  local.get $value
  i64.store $0
 )
 (func $std/typedarray/testReduce<~lib/typedarray/Uint64Array,u64>~anonymous|0 (type $i64_i64_i32_i32_=>_i64) (param $acc i64) (param $val i64) (param $$2 i32) (param $$3 i32) (result i64)
  local.get $acc
  local.get $val
  i64.add
 )
 (func $~lib/typedarray/Uint64Array#reduce<u64> (type $i32_i32_i64_=>_i64) (param $this i32) (param $fn i32) (param $initialValue i64) (result i64)
  (local $array i32)
  (local $fn|4 i32)
  (local $initialValue|5 i64)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $9 i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|4
  local.get $initialValue
  local.set $initialValue|5
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  i32.const 0
  local.set $i
  local.get $array
  call $~lib/typedarray/Uint64Array#get:length
  local.set $k
  loop $for-loop|0
   local.get $i
   local.get $k
   i32.lt_s
   local.set $9
   local.get $9
   if
    local.get $initialValue|5
    local.get $ptr
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    local.get $i
    local.get $array
    i32.const 4
    global.set $~argumentsLength
    local.get $fn|4
    i32.load $0
    call_indirect $0 (type $i64_i64_i32_i32_=>_i64)
    local.set $initialValue|5
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $initialValue|5
 )
 (func $~lib/typedarray/Float32Array#__set (type $i32_i32_f32_=>_none) (param $this i32) (param $index i32) (param $value f32)
  local.get $index
  local.get $this
  i32.load $0 offset=8
  i32.const 2
  i32.shr_u
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  f32.store $0
 )
 (func $std/typedarray/testReduce<~lib/typedarray/Float32Array,f32>~anonymous|0 (type $f32_f32_i32_i32_=>_f32) (param $acc f32) (param $val f32) (param $$2 i32) (param $$3 i32) (result f32)
  local.get $acc
  local.get $val
  f32.add
 )
 (func $~lib/typedarray/Float32Array#reduce<f32> (type $i32_i32_f32_=>_f32) (param $this i32) (param $fn i32) (param $initialValue f32) (result f32)
  (local $array i32)
  (local $fn|4 i32)
  (local $initialValue|5 f32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $9 i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|4
  local.get $initialValue
  local.set $initialValue|5
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  i32.const 0
  local.set $i
  local.get $array
  call $~lib/typedarray/Float32Array#get:length
  local.set $k
  loop $for-loop|0
   local.get $i
   local.get $k
   i32.lt_s
   local.set $9
   local.get $9
   if
    local.get $initialValue|5
    local.get $ptr
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    f32.load $0
    local.get $i
    local.get $array
    i32.const 4
    global.set $~argumentsLength
    local.get $fn|4
    i32.load $0
    call_indirect $0 (type $f32_f32_i32_i32_=>_f32)
    local.set $initialValue|5
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $initialValue|5
 )
 (func $std/typedarray/testReduce<~lib/typedarray/Float64Array,f64>~anonymous|0 (type $f64_f64_i32_i32_=>_f64) (param $acc f64) (param $val f64) (param $$2 i32) (param $$3 i32) (result f64)
  local.get $acc
  local.get $val
  f64.add
 )
 (func $~lib/typedarray/Float64Array#reduce<f64> (type $i32_i32_f64_=>_f64) (param $this i32) (param $fn i32) (param $initialValue f64) (result f64)
  (local $array i32)
  (local $fn|4 i32)
  (local $initialValue|5 f64)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $9 i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|4
  local.get $initialValue
  local.set $initialValue|5
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  i32.const 0
  local.set $i
  local.get $array
  call $~lib/typedarray/Float64Array#get:length
  local.set $k
  loop $for-loop|0
   local.get $i
   local.get $k
   i32.lt_s
   local.set $9
   local.get $9
   if
    local.get $initialValue|5
    local.get $ptr
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    f64.load $0
    local.get $i
    local.get $array
    i32.const 4
    global.set $~argumentsLength
    local.get $fn|4
    i32.load $0
    call_indirect $0 (type $f64_f64_i32_i32_=>_f64)
    local.set $initialValue|5
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $initialValue|5
 )
 (func $~lib/typedarray/Int8Array#at (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  (local $len i32)
  local.get $this
  i32.load $0 offset=8
  local.set $len
  local.get $index
  i32.const 0
  local.get $len
  local.get $index
  i32.const 0
  i32.ge_s
  select
  i32.add
  local.set $index
  local.get $index
  local.get $len
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.add
  i32.load8_s $0
 )
 (func $~lib/typedarray/Uint8Array#at (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  (local $len i32)
  local.get $this
  i32.load $0 offset=8
  local.set $len
  local.get $index
  i32.const 0
  local.get $len
  local.get $index
  i32.const 0
  i32.ge_s
  select
  i32.add
  local.set $index
  local.get $index
  local.get $len
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.add
  i32.load8_u $0
 )
 (func $~lib/typedarray/Uint8ClampedArray#at (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  (local $len i32)
  local.get $this
  i32.load $0 offset=8
  local.set $len
  local.get $index
  i32.const 0
  local.get $len
  local.get $index
  i32.const 0
  i32.ge_s
  select
  i32.add
  local.set $index
  local.get $index
  local.get $len
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.add
  i32.load8_u $0
 )
 (func $~lib/typedarray/Int16Array#at (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  (local $len i32)
  local.get $this
  i32.load $0 offset=8
  i32.const 1
  i32.shr_u
  local.set $len
  local.get $index
  i32.const 0
  local.get $len
  local.get $index
  i32.const 0
  i32.ge_s
  select
  i32.add
  local.set $index
  local.get $index
  local.get $len
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 1
  i32.shl
  i32.add
  i32.load16_s $0
 )
 (func $~lib/typedarray/Uint16Array#at (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  (local $len i32)
  local.get $this
  i32.load $0 offset=8
  i32.const 1
  i32.shr_u
  local.set $len
  local.get $index
  i32.const 0
  local.get $len
  local.get $index
  i32.const 0
  i32.ge_s
  select
  i32.add
  local.set $index
  local.get $index
  local.get $len
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 1
  i32.shl
  i32.add
  i32.load16_u $0
 )
 (func $~lib/typedarray/Int32Array#at (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  (local $len i32)
  local.get $this
  i32.load $0 offset=8
  i32.const 2
  i32.shr_u
  local.set $len
  local.get $index
  i32.const 0
  local.get $len
  local.get $index
  i32.const 0
  i32.ge_s
  select
  i32.add
  local.set $index
  local.get $index
  local.get $len
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
 )
 (func $~lib/typedarray/Uint32Array#at (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  (local $len i32)
  local.get $this
  i32.load $0 offset=8
  i32.const 2
  i32.shr_u
  local.set $len
  local.get $index
  i32.const 0
  local.get $len
  local.get $index
  i32.const 0
  i32.ge_s
  select
  i32.add
  local.set $index
  local.get $index
  local.get $len
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
 )
 (func $~lib/typedarray/Int64Array#at (type $i32_i32_=>_i64) (param $this i32) (param $index i32) (result i64)
  (local $len i32)
  local.get $this
  i32.load $0 offset=8
  i32.const 3
  i32.shr_u
  local.set $len
  local.get $index
  i32.const 0
  local.get $len
  local.get $index
  i32.const 0
  i32.ge_s
  select
  i32.add
  local.set $index
  local.get $index
  local.get $len
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 3
  i32.shl
  i32.add
  i64.load $0
 )
 (func $~lib/typedarray/Uint64Array#at (type $i32_i32_=>_i64) (param $this i32) (param $index i32) (result i64)
  (local $len i32)
  local.get $this
  i32.load $0 offset=8
  i32.const 3
  i32.shr_u
  local.set $len
  local.get $index
  i32.const 0
  local.get $len
  local.get $index
  i32.const 0
  i32.ge_s
  select
  i32.add
  local.set $index
  local.get $index
  local.get $len
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 3
  i32.shl
  i32.add
  i64.load $0
 )
 (func $~lib/typedarray/Float32Array#at (type $i32_i32_=>_f32) (param $this i32) (param $index i32) (result f32)
  (local $len i32)
  local.get $this
  i32.load $0 offset=8
  i32.const 2
  i32.shr_u
  local.set $len
  local.get $index
  i32.const 0
  local.get $len
  local.get $index
  i32.const 0
  i32.ge_s
  select
  i32.add
  local.set $index
  local.get $index
  local.get $len
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  f32.load $0
 )
 (func $~lib/typedarray/Float64Array#at (type $i32_i32_=>_f64) (param $this i32) (param $index i32) (result f64)
  (local $len i32)
  local.get $this
  i32.load $0 offset=8
  i32.const 3
  i32.shr_u
  local.set $len
  local.get $index
  i32.const 0
  local.get $len
  local.get $index
  i32.const 0
  i32.ge_s
  select
  i32.add
  local.set $index
  local.get $index
  local.get $len
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 3
  i32.shl
  i32.add
  f64.load $0
 )
 (func $std/typedarray/testReduceRight<~lib/typedarray/Int8Array,i8>~anonymous|0 (type $i32_i32_i32_i32_=>_i32) (param $acc i32) (param $val i32) (param $$2 i32) (param $$3 i32) (result i32)
  local.get $acc
  local.get $val
  i32.add
 )
 (func $~lib/typedarray/Int8Array#reduceRight<i8> (type $i32_i32_i32_=>_i32) (param $this i32) (param $fn i32) (param $initialValue i32) (result i32)
  (local $array i32)
  (local $fn|4 i32)
  (local $initialValue|5 i32)
  (local $ptr i32)
  (local $i i32)
  (local $8 i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|4
  local.get $initialValue
  local.set $initialValue|5
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  local.get $array
  call $~lib/typedarray/Int8Array#get:length
  i32.const 1
  i32.sub
  local.set $i
  loop $for-loop|0
   local.get $i
   i32.const 0
   i32.ge_s
   local.set $8
   local.get $8
   if
    local.get $initialValue|5
    local.get $ptr
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    i32.load8_s $0
    local.get $i
    local.get $array
    i32.const 4
    global.set $~argumentsLength
    local.get $fn|4
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
    local.set $initialValue|5
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  local.get $initialValue|5
 )
 (func $std/typedarray/testReduceRight<~lib/typedarray/Uint8Array,u8>~anonymous|0 (type $i32_i32_i32_i32_=>_i32) (param $acc i32) (param $val i32) (param $$2 i32) (param $$3 i32) (result i32)
  local.get $acc
  local.get $val
  i32.add
 )
 (func $~lib/typedarray/Uint8Array#reduceRight<u8> (type $i32_i32_i32_=>_i32) (param $this i32) (param $fn i32) (param $initialValue i32) (result i32)
  (local $array i32)
  (local $fn|4 i32)
  (local $initialValue|5 i32)
  (local $ptr i32)
  (local $i i32)
  (local $8 i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|4
  local.get $initialValue
  local.set $initialValue|5
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  local.get $array
  call $~lib/typedarray/Uint8Array#get:length
  i32.const 1
  i32.sub
  local.set $i
  loop $for-loop|0
   local.get $i
   i32.const 0
   i32.ge_s
   local.set $8
   local.get $8
   if
    local.get $initialValue|5
    local.get $ptr
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    i32.load8_u $0
    local.get $i
    local.get $array
    i32.const 4
    global.set $~argumentsLength
    local.get $fn|4
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
    local.set $initialValue|5
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  local.get $initialValue|5
 )
 (func $std/typedarray/testReduceRight<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|0 (type $i32_i32_i32_i32_=>_i32) (param $acc i32) (param $val i32) (param $$2 i32) (param $$3 i32) (result i32)
  local.get $acc
  local.get $val
  i32.add
 )
 (func $~lib/typedarray/Uint8ClampedArray#reduceRight<u8> (type $i32_i32_i32_=>_i32) (param $this i32) (param $fn i32) (param $initialValue i32) (result i32)
  (local $array i32)
  (local $fn|4 i32)
  (local $initialValue|5 i32)
  (local $ptr i32)
  (local $i i32)
  (local $8 i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|4
  local.get $initialValue
  local.set $initialValue|5
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  local.get $array
  call $~lib/typedarray/Uint8ClampedArray#get:length
  i32.const 1
  i32.sub
  local.set $i
  loop $for-loop|0
   local.get $i
   i32.const 0
   i32.ge_s
   local.set $8
   local.get $8
   if
    local.get $initialValue|5
    local.get $ptr
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    i32.load8_u $0
    local.get $i
    local.get $array
    i32.const 4
    global.set $~argumentsLength
    local.get $fn|4
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
    local.set $initialValue|5
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  local.get $initialValue|5
 )
 (func $std/typedarray/testReduceRight<~lib/typedarray/Int16Array,i16>~anonymous|0 (type $i32_i32_i32_i32_=>_i32) (param $acc i32) (param $val i32) (param $$2 i32) (param $$3 i32) (result i32)
  local.get $acc
  local.get $val
  i32.add
 )
 (func $~lib/typedarray/Int16Array#reduceRight<i16> (type $i32_i32_i32_=>_i32) (param $this i32) (param $fn i32) (param $initialValue i32) (result i32)
  (local $array i32)
  (local $fn|4 i32)
  (local $initialValue|5 i32)
  (local $ptr i32)
  (local $i i32)
  (local $8 i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|4
  local.get $initialValue
  local.set $initialValue|5
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  local.get $array
  call $~lib/typedarray/Int16Array#get:length
  i32.const 1
  i32.sub
  local.set $i
  loop $for-loop|0
   local.get $i
   i32.const 0
   i32.ge_s
   local.set $8
   local.get $8
   if
    local.get $initialValue|5
    local.get $ptr
    local.get $i
    i32.const 1
    i32.shl
    i32.add
    i32.load16_s $0
    local.get $i
    local.get $array
    i32.const 4
    global.set $~argumentsLength
    local.get $fn|4
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
    local.set $initialValue|5
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  local.get $initialValue|5
 )
 (func $std/typedarray/testReduceRight<~lib/typedarray/Uint16Array,u16>~anonymous|0 (type $i32_i32_i32_i32_=>_i32) (param $acc i32) (param $val i32) (param $$2 i32) (param $$3 i32) (result i32)
  local.get $acc
  local.get $val
  i32.add
 )
 (func $~lib/typedarray/Uint16Array#reduceRight<u16> (type $i32_i32_i32_=>_i32) (param $this i32) (param $fn i32) (param $initialValue i32) (result i32)
  (local $array i32)
  (local $fn|4 i32)
  (local $initialValue|5 i32)
  (local $ptr i32)
  (local $i i32)
  (local $8 i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|4
  local.get $initialValue
  local.set $initialValue|5
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  local.get $array
  call $~lib/typedarray/Uint16Array#get:length
  i32.const 1
  i32.sub
  local.set $i
  loop $for-loop|0
   local.get $i
   i32.const 0
   i32.ge_s
   local.set $8
   local.get $8
   if
    local.get $initialValue|5
    local.get $ptr
    local.get $i
    i32.const 1
    i32.shl
    i32.add
    i32.load16_u $0
    local.get $i
    local.get $array
    i32.const 4
    global.set $~argumentsLength
    local.get $fn|4
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
    local.set $initialValue|5
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  local.get $initialValue|5
 )
 (func $std/typedarray/testReduceRight<~lib/typedarray/Int32Array,i32>~anonymous|0 (type $i32_i32_i32_i32_=>_i32) (param $acc i32) (param $val i32) (param $$2 i32) (param $$3 i32) (result i32)
  local.get $acc
  local.get $val
  i32.add
 )
 (func $~lib/typedarray/Int32Array#reduceRight<i32> (type $i32_i32_i32_=>_i32) (param $this i32) (param $fn i32) (param $initialValue i32) (result i32)
  (local $array i32)
  (local $fn|4 i32)
  (local $initialValue|5 i32)
  (local $ptr i32)
  (local $i i32)
  (local $8 i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|4
  local.get $initialValue
  local.set $initialValue|5
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  local.get $array
  call $~lib/typedarray/Int32Array#get:length
  i32.const 1
  i32.sub
  local.set $i
  loop $for-loop|0
   local.get $i
   i32.const 0
   i32.ge_s
   local.set $8
   local.get $8
   if
    local.get $initialValue|5
    local.get $ptr
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.get $i
    local.get $array
    i32.const 4
    global.set $~argumentsLength
    local.get $fn|4
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
    local.set $initialValue|5
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  local.get $initialValue|5
 )
 (func $std/typedarray/testReduceRight<~lib/typedarray/Uint32Array,u32>~anonymous|0 (type $i32_i32_i32_i32_=>_i32) (param $acc i32) (param $val i32) (param $$2 i32) (param $$3 i32) (result i32)
  local.get $acc
  local.get $val
  i32.add
 )
 (func $~lib/typedarray/Uint32Array#reduceRight<u32> (type $i32_i32_i32_=>_i32) (param $this i32) (param $fn i32) (param $initialValue i32) (result i32)
  (local $array i32)
  (local $fn|4 i32)
  (local $initialValue|5 i32)
  (local $ptr i32)
  (local $i i32)
  (local $8 i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|4
  local.get $initialValue
  local.set $initialValue|5
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  local.get $array
  call $~lib/typedarray/Uint32Array#get:length
  i32.const 1
  i32.sub
  local.set $i
  loop $for-loop|0
   local.get $i
   i32.const 0
   i32.ge_s
   local.set $8
   local.get $8
   if
    local.get $initialValue|5
    local.get $ptr
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.get $i
    local.get $array
    i32.const 4
    global.set $~argumentsLength
    local.get $fn|4
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
    local.set $initialValue|5
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  local.get $initialValue|5
 )
 (func $std/typedarray/testReduceRight<~lib/typedarray/Int64Array,i64>~anonymous|0 (type $i64_i64_i32_i32_=>_i64) (param $acc i64) (param $val i64) (param $$2 i32) (param $$3 i32) (result i64)
  local.get $acc
  local.get $val
  i64.add
 )
 (func $~lib/typedarray/Int64Array#reduceRight<i64> (type $i32_i32_i64_=>_i64) (param $this i32) (param $fn i32) (param $initialValue i64) (result i64)
  (local $array i32)
  (local $fn|4 i32)
  (local $initialValue|5 i64)
  (local $ptr i32)
  (local $i i32)
  (local $8 i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|4
  local.get $initialValue
  local.set $initialValue|5
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  local.get $array
  call $~lib/typedarray/Int64Array#get:length
  i32.const 1
  i32.sub
  local.set $i
  loop $for-loop|0
   local.get $i
   i32.const 0
   i32.ge_s
   local.set $8
   local.get $8
   if
    local.get $initialValue|5
    local.get $ptr
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    local.get $i
    local.get $array
    i32.const 4
    global.set $~argumentsLength
    local.get $fn|4
    i32.load $0
    call_indirect $0 (type $i64_i64_i32_i32_=>_i64)
    local.set $initialValue|5
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  local.get $initialValue|5
 )
 (func $std/typedarray/testReduceRight<~lib/typedarray/Uint64Array,u64>~anonymous|0 (type $i64_i64_i32_i32_=>_i64) (param $acc i64) (param $val i64) (param $$2 i32) (param $$3 i32) (result i64)
  local.get $acc
  local.get $val
  i64.add
 )
 (func $~lib/typedarray/Uint64Array#reduceRight<u64> (type $i32_i32_i64_=>_i64) (param $this i32) (param $fn i32) (param $initialValue i64) (result i64)
  (local $array i32)
  (local $fn|4 i32)
  (local $initialValue|5 i64)
  (local $ptr i32)
  (local $i i32)
  (local $8 i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|4
  local.get $initialValue
  local.set $initialValue|5
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  local.get $array
  call $~lib/typedarray/Uint64Array#get:length
  i32.const 1
  i32.sub
  local.set $i
  loop $for-loop|0
   local.get $i
   i32.const 0
   i32.ge_s
   local.set $8
   local.get $8
   if
    local.get $initialValue|5
    local.get $ptr
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    local.get $i
    local.get $array
    i32.const 4
    global.set $~argumentsLength
    local.get $fn|4
    i32.load $0
    call_indirect $0 (type $i64_i64_i32_i32_=>_i64)
    local.set $initialValue|5
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  local.get $initialValue|5
 )
 (func $std/typedarray/testReduceRight<~lib/typedarray/Float32Array,f32>~anonymous|0 (type $f32_f32_i32_i32_=>_f32) (param $acc f32) (param $val f32) (param $$2 i32) (param $$3 i32) (result f32)
  local.get $acc
  local.get $val
  f32.add
 )
 (func $~lib/typedarray/Float32Array#reduceRight<f32> (type $i32_i32_f32_=>_f32) (param $this i32) (param $fn i32) (param $initialValue f32) (result f32)
  (local $array i32)
  (local $fn|4 i32)
  (local $initialValue|5 f32)
  (local $ptr i32)
  (local $i i32)
  (local $8 i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|4
  local.get $initialValue
  local.set $initialValue|5
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  local.get $array
  call $~lib/typedarray/Float32Array#get:length
  i32.const 1
  i32.sub
  local.set $i
  loop $for-loop|0
   local.get $i
   i32.const 0
   i32.ge_s
   local.set $8
   local.get $8
   if
    local.get $initialValue|5
    local.get $ptr
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    f32.load $0
    local.get $i
    local.get $array
    i32.const 4
    global.set $~argumentsLength
    local.get $fn|4
    i32.load $0
    call_indirect $0 (type $f32_f32_i32_i32_=>_f32)
    local.set $initialValue|5
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  local.get $initialValue|5
 )
 (func $std/typedarray/testReduceRight<~lib/typedarray/Float64Array,f64>~anonymous|0 (type $f64_f64_i32_i32_=>_f64) (param $acc f64) (param $val f64) (param $$2 i32) (param $$3 i32) (result f64)
  local.get $acc
  local.get $val
  f64.add
 )
 (func $~lib/typedarray/Float64Array#reduceRight<f64> (type $i32_i32_f64_=>_f64) (param $this i32) (param $fn i32) (param $initialValue f64) (result f64)
  (local $array i32)
  (local $fn|4 i32)
  (local $initialValue|5 f64)
  (local $ptr i32)
  (local $i i32)
  (local $8 i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|4
  local.get $initialValue
  local.set $initialValue|5
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  local.get $array
  call $~lib/typedarray/Float64Array#get:length
  i32.const 1
  i32.sub
  local.set $i
  loop $for-loop|0
   local.get $i
   i32.const 0
   i32.ge_s
   local.set $8
   local.get $8
   if
    local.get $initialValue|5
    local.get $ptr
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    f64.load $0
    local.get $i
    local.get $array
    i32.const 4
    global.set $~argumentsLength
    local.get $fn|4
    i32.load $0
    call_indirect $0 (type $f64_f64_i32_i32_=>_f64)
    local.set $initialValue|5
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  local.get $initialValue|5
 )
 (func $std/typedarray/testArrayMap<~lib/typedarray/Int8Array,i8>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  local.get $value
  i32.mul
 )
 (func $~lib/typedarray/Int8Array#map (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $len i32)
  (local $ptr i32)
  (local $byteLength i32)
  (local $out i32)
  (local $buf i32)
  (local $i i32)
  (local $10 i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|3
  local.get $array
  call $~lib/typedarray/Int8Array#get:length
  local.set $len
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  local.get $len
  i32.const 0
  i32.shl
  local.set $byteLength
  i32.const 12
  i32.const 3
  call $~lib/rt/stub/__new
  local.set $out
  local.get $byteLength
  i32.const 0
  call $~lib/rt/stub/__new
  local.set $buf
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $len
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $buf
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    local.get $ptr
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    i32.load8_s $0
    local.get $i
    local.get $array
    i32.const 3
    global.set $~argumentsLength
    local.get $fn|3
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    i32.store8 $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $out
  local.get $buf
  i32.store $0
  local.get $out
  local.get $buf
  i32.const 0
  call $~lib/rt/stub/__link
  local.get $out
  local.get $buf
  i32.store $0 offset=4
  local.get $out
  local.get $byteLength
  i32.store $0 offset=8
  local.get $out
 )
 (func $std/typedarray/testArrayMap<~lib/typedarray/Uint8Array,u8>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  local.get $value
  i32.mul
 )
 (func $~lib/typedarray/Uint8Array#map (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $len i32)
  (local $ptr i32)
  (local $byteLength i32)
  (local $out i32)
  (local $buf i32)
  (local $i i32)
  (local $10 i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|3
  local.get $array
  call $~lib/typedarray/Uint8Array#get:length
  local.set $len
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  local.get $len
  i32.const 0
  i32.shl
  local.set $byteLength
  i32.const 12
  i32.const 4
  call $~lib/rt/stub/__new
  local.set $out
  local.get $byteLength
  i32.const 0
  call $~lib/rt/stub/__new
  local.set $buf
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $len
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $buf
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    local.get $ptr
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    i32.load8_u $0
    local.get $i
    local.get $array
    i32.const 3
    global.set $~argumentsLength
    local.get $fn|3
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    i32.store8 $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $out
  local.get $buf
  i32.store $0
  local.get $out
  local.get $buf
  i32.const 0
  call $~lib/rt/stub/__link
  local.get $out
  local.get $buf
  i32.store $0 offset=4
  local.get $out
  local.get $byteLength
  i32.store $0 offset=8
  local.get $out
 )
 (func $~lib/typedarray/Uint8Array#__get (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  local.get $index
  local.get $this
  i32.load $0 offset=8
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.add
  i32.load8_u $0
 )
 (func $std/typedarray/testArrayMap<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  local.get $value
  i32.mul
 )
 (func $~lib/typedarray/Uint8ClampedArray#map (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $len i32)
  (local $ptr i32)
  (local $byteLength i32)
  (local $out i32)
  (local $buf i32)
  (local $i i32)
  (local $10 i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|3
  local.get $array
  call $~lib/typedarray/Uint8ClampedArray#get:length
  local.set $len
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  local.get $len
  i32.const 0
  i32.shl
  local.set $byteLength
  i32.const 12
  i32.const 5
  call $~lib/rt/stub/__new
  local.set $out
  local.get $byteLength
  i32.const 0
  call $~lib/rt/stub/__new
  local.set $buf
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $len
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $buf
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    local.get $ptr
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    i32.load8_u $0
    local.get $i
    local.get $array
    i32.const 3
    global.set $~argumentsLength
    local.get $fn|3
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    i32.store8 $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $out
  local.get $buf
  i32.store $0
  local.get $out
  local.get $buf
  i32.const 0
  call $~lib/rt/stub/__link
  local.get $out
  local.get $buf
  i32.store $0 offset=4
  local.get $out
  local.get $byteLength
  i32.store $0 offset=8
  local.get $out
 )
 (func $std/typedarray/testArrayMap<~lib/typedarray/Int16Array,i16>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  local.get $value
  i32.mul
 )
 (func $~lib/typedarray/Int16Array#map (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $len i32)
  (local $ptr i32)
  (local $byteLength i32)
  (local $out i32)
  (local $buf i32)
  (local $i i32)
  (local $10 i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|3
  local.get $array
  call $~lib/typedarray/Int16Array#get:length
  local.set $len
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  local.get $len
  i32.const 1
  i32.shl
  local.set $byteLength
  i32.const 12
  i32.const 6
  call $~lib/rt/stub/__new
  local.set $out
  local.get $byteLength
  i32.const 0
  call $~lib/rt/stub/__new
  local.set $buf
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $len
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $buf
    local.get $i
    i32.const 1
    i32.shl
    i32.add
    local.get $ptr
    local.get $i
    i32.const 1
    i32.shl
    i32.add
    i32.load16_s $0
    local.get $i
    local.get $array
    i32.const 3
    global.set $~argumentsLength
    local.get $fn|3
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    i32.store16 $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $out
  local.get $buf
  i32.store $0
  local.get $out
  local.get $buf
  i32.const 0
  call $~lib/rt/stub/__link
  local.get $out
  local.get $buf
  i32.store $0 offset=4
  local.get $out
  local.get $byteLength
  i32.store $0 offset=8
  local.get $out
 )
 (func $~lib/typedarray/Int16Array#__get (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  local.get $index
  local.get $this
  i32.load $0 offset=8
  i32.const 1
  i32.shr_u
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 1
  i32.shl
  i32.add
  i32.load16_s $0
 )
 (func $std/typedarray/testArrayMap<~lib/typedarray/Uint16Array,u16>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  local.get $value
  i32.mul
 )
 (func $~lib/typedarray/Uint16Array#map (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $len i32)
  (local $ptr i32)
  (local $byteLength i32)
  (local $out i32)
  (local $buf i32)
  (local $i i32)
  (local $10 i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|3
  local.get $array
  call $~lib/typedarray/Uint16Array#get:length
  local.set $len
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  local.get $len
  i32.const 1
  i32.shl
  local.set $byteLength
  i32.const 12
  i32.const 7
  call $~lib/rt/stub/__new
  local.set $out
  local.get $byteLength
  i32.const 0
  call $~lib/rt/stub/__new
  local.set $buf
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $len
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $buf
    local.get $i
    i32.const 1
    i32.shl
    i32.add
    local.get $ptr
    local.get $i
    i32.const 1
    i32.shl
    i32.add
    i32.load16_u $0
    local.get $i
    local.get $array
    i32.const 3
    global.set $~argumentsLength
    local.get $fn|3
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    i32.store16 $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $out
  local.get $buf
  i32.store $0
  local.get $out
  local.get $buf
  i32.const 0
  call $~lib/rt/stub/__link
  local.get $out
  local.get $buf
  i32.store $0 offset=4
  local.get $out
  local.get $byteLength
  i32.store $0 offset=8
  local.get $out
 )
 (func $~lib/typedarray/Uint16Array#__get (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  local.get $index
  local.get $this
  i32.load $0 offset=8
  i32.const 1
  i32.shr_u
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 1
  i32.shl
  i32.add
  i32.load16_u $0
 )
 (func $std/typedarray/testArrayMap<~lib/typedarray/Int32Array,i32>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  local.get $value
  i32.mul
 )
 (func $~lib/typedarray/Int32Array#map (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $len i32)
  (local $ptr i32)
  (local $byteLength i32)
  (local $out i32)
  (local $buf i32)
  (local $i i32)
  (local $10 i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|3
  local.get $array
  call $~lib/typedarray/Int32Array#get:length
  local.set $len
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  local.get $len
  i32.const 2
  i32.shl
  local.set $byteLength
  i32.const 12
  i32.const 8
  call $~lib/rt/stub/__new
  local.set $out
  local.get $byteLength
  i32.const 0
  call $~lib/rt/stub/__new
  local.set $buf
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $len
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $buf
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    local.get $ptr
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.get $i
    local.get $array
    i32.const 3
    global.set $~argumentsLength
    local.get $fn|3
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    i32.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $out
  local.get $buf
  i32.store $0
  local.get $out
  local.get $buf
  i32.const 0
  call $~lib/rt/stub/__link
  local.get $out
  local.get $buf
  i32.store $0 offset=4
  local.get $out
  local.get $byteLength
  i32.store $0 offset=8
  local.get $out
 )
 (func $std/typedarray/testArrayMap<~lib/typedarray/Uint32Array,u32>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  local.get $value
  i32.mul
 )
 (func $~lib/typedarray/Uint32Array#map (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $len i32)
  (local $ptr i32)
  (local $byteLength i32)
  (local $out i32)
  (local $buf i32)
  (local $i i32)
  (local $10 i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|3
  local.get $array
  call $~lib/typedarray/Uint32Array#get:length
  local.set $len
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  local.get $len
  i32.const 2
  i32.shl
  local.set $byteLength
  i32.const 12
  i32.const 9
  call $~lib/rt/stub/__new
  local.set $out
  local.get $byteLength
  i32.const 0
  call $~lib/rt/stub/__new
  local.set $buf
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $len
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $buf
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    local.get $ptr
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.get $i
    local.get $array
    i32.const 3
    global.set $~argumentsLength
    local.get $fn|3
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    i32.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $out
  local.get $buf
  i32.store $0
  local.get $out
  local.get $buf
  i32.const 0
  call $~lib/rt/stub/__link
  local.get $out
  local.get $buf
  i32.store $0 offset=4
  local.get $out
  local.get $byteLength
  i32.store $0 offset=8
  local.get $out
 )
 (func $~lib/typedarray/Uint32Array#__get (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  local.get $index
  local.get $this
  i32.load $0 offset=8
  i32.const 2
  i32.shr_u
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
 )
 (func $std/typedarray/testArrayMap<~lib/typedarray/Int64Array,i64>~anonymous|0 (type $i64_i32_i32_=>_i64) (param $value i64) (param $$1 i32) (param $$2 i32) (result i64)
  local.get $value
  local.get $value
  i64.mul
 )
 (func $~lib/typedarray/Int64Array#map (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $len i32)
  (local $ptr i32)
  (local $byteLength i32)
  (local $out i32)
  (local $buf i32)
  (local $i i32)
  (local $10 i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|3
  local.get $array
  call $~lib/typedarray/Int64Array#get:length
  local.set $len
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  local.get $len
  i32.const 3
  i32.shl
  local.set $byteLength
  i32.const 12
  i32.const 10
  call $~lib/rt/stub/__new
  local.set $out
  local.get $byteLength
  i32.const 0
  call $~lib/rt/stub/__new
  local.set $buf
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $len
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $buf
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    local.get $ptr
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    local.get $i
    local.get $array
    i32.const 3
    global.set $~argumentsLength
    local.get $fn|3
    i32.load $0
    call_indirect $0 (type $i64_i32_i32_=>_i64)
    i64.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $out
  local.get $buf
  i32.store $0
  local.get $out
  local.get $buf
  i32.const 0
  call $~lib/rt/stub/__link
  local.get $out
  local.get $buf
  i32.store $0 offset=4
  local.get $out
  local.get $byteLength
  i32.store $0 offset=8
  local.get $out
 )
 (func $~lib/typedarray/Int64Array#__get (type $i32_i32_=>_i64) (param $this i32) (param $index i32) (result i64)
  local.get $index
  local.get $this
  i32.load $0 offset=8
  i32.const 3
  i32.shr_u
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 3
  i32.shl
  i32.add
  i64.load $0
 )
 (func $std/typedarray/testArrayMap<~lib/typedarray/Uint64Array,u64>~anonymous|0 (type $i64_i32_i32_=>_i64) (param $value i64) (param $$1 i32) (param $$2 i32) (result i64)
  local.get $value
  local.get $value
  i64.mul
 )
 (func $~lib/typedarray/Uint64Array#map (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $len i32)
  (local $ptr i32)
  (local $byteLength i32)
  (local $out i32)
  (local $buf i32)
  (local $i i32)
  (local $10 i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|3
  local.get $array
  call $~lib/typedarray/Uint64Array#get:length
  local.set $len
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  local.get $len
  i32.const 3
  i32.shl
  local.set $byteLength
  i32.const 12
  i32.const 11
  call $~lib/rt/stub/__new
  local.set $out
  local.get $byteLength
  i32.const 0
  call $~lib/rt/stub/__new
  local.set $buf
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $len
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $buf
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    local.get $ptr
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    local.get $i
    local.get $array
    i32.const 3
    global.set $~argumentsLength
    local.get $fn|3
    i32.load $0
    call_indirect $0 (type $i64_i32_i32_=>_i64)
    i64.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $out
  local.get $buf
  i32.store $0
  local.get $out
  local.get $buf
  i32.const 0
  call $~lib/rt/stub/__link
  local.get $out
  local.get $buf
  i32.store $0 offset=4
  local.get $out
  local.get $byteLength
  i32.store $0 offset=8
  local.get $out
 )
 (func $~lib/typedarray/Uint64Array#__get (type $i32_i32_=>_i64) (param $this i32) (param $index i32) (result i64)
  local.get $index
  local.get $this
  i32.load $0 offset=8
  i32.const 3
  i32.shr_u
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 3
  i32.shl
  i32.add
  i64.load $0
 )
 (func $std/typedarray/testArrayMap<~lib/typedarray/Float32Array,f32>~anonymous|0 (type $f32_i32_i32_=>_f32) (param $value f32) (param $$1 i32) (param $$2 i32) (result f32)
  local.get $value
  local.get $value
  f32.mul
 )
 (func $~lib/typedarray/Float32Array#map (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $len i32)
  (local $ptr i32)
  (local $byteLength i32)
  (local $out i32)
  (local $buf i32)
  (local $i i32)
  (local $10 i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|3
  local.get $array
  call $~lib/typedarray/Float32Array#get:length
  local.set $len
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  local.get $len
  i32.const 2
  i32.shl
  local.set $byteLength
  i32.const 12
  i32.const 12
  call $~lib/rt/stub/__new
  local.set $out
  local.get $byteLength
  i32.const 0
  call $~lib/rt/stub/__new
  local.set $buf
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $len
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $buf
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    local.get $ptr
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    f32.load $0
    local.get $i
    local.get $array
    i32.const 3
    global.set $~argumentsLength
    local.get $fn|3
    i32.load $0
    call_indirect $0 (type $f32_i32_i32_=>_f32)
    f32.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $out
  local.get $buf
  i32.store $0
  local.get $out
  local.get $buf
  i32.const 0
  call $~lib/rt/stub/__link
  local.get $out
  local.get $buf
  i32.store $0 offset=4
  local.get $out
  local.get $byteLength
  i32.store $0 offset=8
  local.get $out
 )
 (func $~lib/typedarray/Float32Array#__get (type $i32_i32_=>_f32) (param $this i32) (param $index i32) (result f32)
  local.get $index
  local.get $this
  i32.load $0 offset=8
  i32.const 2
  i32.shr_u
  i32.ge_u
  if
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  f32.load $0
 )
 (func $std/typedarray/testArrayMap<~lib/typedarray/Float64Array,f64>~anonymous|0 (type $f64_i32_i32_=>_f64) (param $value f64) (param $$1 i32) (param $$2 i32) (result f64)
  local.get $value
  local.get $value
  f64.mul
 )
 (func $~lib/typedarray/Float64Array#map (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $len i32)
  (local $ptr i32)
  (local $byteLength i32)
  (local $out i32)
  (local $buf i32)
  (local $i i32)
  (local $10 i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|3
  local.get $array
  call $~lib/typedarray/Float64Array#get:length
  local.set $len
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  local.get $len
  i32.const 3
  i32.shl
  local.set $byteLength
  i32.const 12
  i32.const 13
  call $~lib/rt/stub/__new
  local.set $out
  local.get $byteLength
  i32.const 0
  call $~lib/rt/stub/__new
  local.set $buf
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $len
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $buf
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    local.get $ptr
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    f64.load $0
    local.get $i
    local.get $array
    i32.const 3
    global.set $~argumentsLength
    local.get $fn|3
    i32.load $0
    call_indirect $0 (type $f64_i32_i32_=>_f64)
    f64.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $out
  local.get $buf
  i32.store $0
  local.get $out
  local.get $buf
  i32.const 0
  call $~lib/rt/stub/__link
  local.get $out
  local.get $buf
  i32.store $0 offset=4
  local.get $out
  local.get $byteLength
  i32.store $0 offset=8
  local.get $out
 )
 (func $std/typedarray/testArrayFilter<~lib/typedarray/Int8Array,i8>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.extend8_s
  i32.const 2
  i32.gt_s
 )
 (func $~lib/rt/stub/__realloc (type $i32_i32_=>_i32) (param $ptr i32) (param $size i32) (result i32)
  (local $block i32)
  (local $actualSize i32)
  (local $isLast i32)
  (local $size|5 i32)
  (local $payloadSize i32)
  (local $newOffset i32)
  (local $pagesBefore i32)
  (local $maxOffset i32)
  (local $10 i32)
  (local $11 i32)
  (local $newPtr i32)
  local.get $ptr
  i32.const 0
  i32.ne
  if (result i32)
   local.get $ptr
   i32.const 15
   i32.and
   i32.eqz
  else
   i32.const 0
  end
  i32.eqz
  if
   unreachable
  end
  local.get $ptr
  i32.const 4
  i32.sub
  local.set $block
  local.get $block
  i32.load $0
  local.set $actualSize
  local.get $ptr
  local.get $actualSize
  i32.add
  global.get $~lib/rt/stub/offset
  i32.eq
  local.set $isLast
  local.get $size
  local.set $size|5
  local.get $size|5
  i32.const 4
  i32.add
  i32.const 15
  i32.add
  i32.const 15
  i32.const -1
  i32.xor
  i32.and
  i32.const 4
  i32.sub
  local.set $payloadSize
  local.get $size
  local.get $actualSize
  i32.gt_u
  if
   local.get $isLast
   if
    local.get $size
    i32.const 1073741820
    i32.gt_u
    if
     unreachable
    end
    local.get $ptr
    local.get $payloadSize
    i32.add
    local.set $newOffset
    memory.size $0
    local.set $pagesBefore
    local.get $pagesBefore
    i32.const 16
    i32.shl
    i32.const 15
    i32.add
    i32.const 15
    i32.const -1
    i32.xor
    i32.and
    local.set $maxOffset
    local.get $newOffset
    local.get $maxOffset
    i32.gt_u
    if
     unreachable
    end
    local.get $newOffset
    global.set $~lib/rt/stub/offset
    local.get $block
    local.get $payloadSize
    call $~lib/rt/common/BLOCK#set:mmInfo
   else
    local.get $payloadSize
    local.tee $10
    local.get $actualSize
    i32.const 1
    i32.shl
    local.tee $11
    local.get $10
    local.get $11
    i32.gt_u
    select
    call $~lib/rt/stub/__alloc
    local.set $newPtr
    local.get $newPtr
    local.get $ptr
    local.get $actualSize
    memory.copy $0 $0
    local.get $newPtr
    local.tee $ptr
    i32.const 4
    i32.sub
    local.set $block
   end
  else
   local.get $isLast
   if
    local.get $ptr
    local.get $payloadSize
    i32.add
    global.set $~lib/rt/stub/offset
    local.get $block
    local.get $payloadSize
    call $~lib/rt/common/BLOCK#set:mmInfo
   end
  end
  local.get $ptr
 )
 (func $~lib/rt/stub/__renew (type $i32_i32_=>_i32) (param $oldPtr i32) (param $size i32) (result i32)
  (local $newPtr i32)
  local.get $size
  i32.const 1073741804
  i32.gt_u
  if
   unreachable
  end
  local.get $oldPtr
  i32.const 16
  i32.sub
  i32.const 16
  local.get $size
  i32.add
  call $~lib/rt/stub/__realloc
  local.set $newPtr
  local.get $newPtr
  i32.const 4
  i32.sub
  local.get $size
  call $~lib/rt/common/OBJECT#set:rtSize
  local.get $newPtr
  i32.const 16
  i32.add
 )
 (func $~lib/typedarray/Int8Array#filter (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $len i32)
  (local $out i32)
  (local $buf i32)
  (local $dataStart i32)
  (local $j i32)
  (local $i i32)
  (local $10 i32)
  (local $value i32)
  (local $12 i32)
  (local $byteLength i32)
  (local $data i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|3
  local.get $array
  call $~lib/typedarray/Int8Array#get:length
  local.set $len
  i32.const 12
  i32.const 3
  call $~lib/rt/stub/__new
  local.set $out
  local.get $len
  i32.const 0
  i32.shl
  i32.const 0
  call $~lib/rt/stub/__new
  local.set $buf
  local.get $array
  i32.load $0 offset=4
  local.set $dataStart
  i32.const 0
  local.set $j
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $len
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $dataStart
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    i32.load8_s $0
    local.set $value
    local.get $value
    local.get $i
    local.get $array
    i32.const 3
    global.set $~argumentsLength
    local.get $fn|3
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    if
     local.get $buf
     local.get $j
     local.tee $12
     i32.const 1
     i32.add
     local.set $j
     local.get $12
     i32.const 0
     i32.shl
     i32.add
     local.get $value
     i32.store8 $0
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $j
  i32.const 0
  i32.shl
  local.set $byteLength
  local.get $buf
  local.get $byteLength
  call $~lib/rt/stub/__renew
  local.set $data
  local.get $out
  local.get $data
  i32.store $0
  local.get $out
  local.get $data
  i32.const 0
  call $~lib/rt/stub/__link
  local.get $out
  local.get $byteLength
  i32.store $0 offset=8
  local.get $out
  local.get $data
  i32.store $0 offset=4
  local.get $out
 )
 (func $std/typedarray/testArrayFilter<~lib/typedarray/Uint8Array,u8>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 255
  i32.and
  i32.const 2
  i32.gt_u
 )
 (func $~lib/typedarray/Uint8Array#filter (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $len i32)
  (local $out i32)
  (local $buf i32)
  (local $dataStart i32)
  (local $j i32)
  (local $i i32)
  (local $10 i32)
  (local $value i32)
  (local $12 i32)
  (local $byteLength i32)
  (local $data i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|3
  local.get $array
  call $~lib/typedarray/Uint8Array#get:length
  local.set $len
  i32.const 12
  i32.const 4
  call $~lib/rt/stub/__new
  local.set $out
  local.get $len
  i32.const 0
  i32.shl
  i32.const 0
  call $~lib/rt/stub/__new
  local.set $buf
  local.get $array
  i32.load $0 offset=4
  local.set $dataStart
  i32.const 0
  local.set $j
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $len
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $dataStart
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    i32.load8_u $0
    local.set $value
    local.get $value
    local.get $i
    local.get $array
    i32.const 3
    global.set $~argumentsLength
    local.get $fn|3
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    if
     local.get $buf
     local.get $j
     local.tee $12
     i32.const 1
     i32.add
     local.set $j
     local.get $12
     i32.const 0
     i32.shl
     i32.add
     local.get $value
     i32.store8 $0
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $j
  i32.const 0
  i32.shl
  local.set $byteLength
  local.get $buf
  local.get $byteLength
  call $~lib/rt/stub/__renew
  local.set $data
  local.get $out
  local.get $data
  i32.store $0
  local.get $out
  local.get $data
  i32.const 0
  call $~lib/rt/stub/__link
  local.get $out
  local.get $byteLength
  i32.store $0 offset=8
  local.get $out
  local.get $data
  i32.store $0 offset=4
  local.get $out
 )
 (func $std/typedarray/testArrayFilter<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 255
  i32.and
  i32.const 2
  i32.gt_u
 )
 (func $~lib/typedarray/Uint8ClampedArray#filter (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $len i32)
  (local $out i32)
  (local $buf i32)
  (local $dataStart i32)
  (local $j i32)
  (local $i i32)
  (local $10 i32)
  (local $value i32)
  (local $12 i32)
  (local $byteLength i32)
  (local $data i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|3
  local.get $array
  call $~lib/typedarray/Uint8ClampedArray#get:length
  local.set $len
  i32.const 12
  i32.const 5
  call $~lib/rt/stub/__new
  local.set $out
  local.get $len
  i32.const 0
  i32.shl
  i32.const 0
  call $~lib/rt/stub/__new
  local.set $buf
  local.get $array
  i32.load $0 offset=4
  local.set $dataStart
  i32.const 0
  local.set $j
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $len
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $dataStart
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    i32.load8_u $0
    local.set $value
    local.get $value
    local.get $i
    local.get $array
    i32.const 3
    global.set $~argumentsLength
    local.get $fn|3
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    if
     local.get $buf
     local.get $j
     local.tee $12
     i32.const 1
     i32.add
     local.set $j
     local.get $12
     i32.const 0
     i32.shl
     i32.add
     local.get $value
     i32.store8 $0
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $j
  i32.const 0
  i32.shl
  local.set $byteLength
  local.get $buf
  local.get $byteLength
  call $~lib/rt/stub/__renew
  local.set $data
  local.get $out
  local.get $data
  i32.store $0
  local.get $out
  local.get $data
  i32.const 0
  call $~lib/rt/stub/__link
  local.get $out
  local.get $byteLength
  i32.store $0 offset=8
  local.get $out
  local.get $data
  i32.store $0 offset=4
  local.get $out
 )
 (func $std/typedarray/testArrayFilter<~lib/typedarray/Int16Array,i16>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.extend16_s
  i32.const 2
  i32.gt_s
 )
 (func $~lib/typedarray/Int16Array#filter (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $len i32)
  (local $out i32)
  (local $buf i32)
  (local $dataStart i32)
  (local $j i32)
  (local $i i32)
  (local $10 i32)
  (local $value i32)
  (local $12 i32)
  (local $byteLength i32)
  (local $data i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|3
  local.get $array
  call $~lib/typedarray/Int16Array#get:length
  local.set $len
  i32.const 12
  i32.const 6
  call $~lib/rt/stub/__new
  local.set $out
  local.get $len
  i32.const 1
  i32.shl
  i32.const 0
  call $~lib/rt/stub/__new
  local.set $buf
  local.get $array
  i32.load $0 offset=4
  local.set $dataStart
  i32.const 0
  local.set $j
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $len
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $dataStart
    local.get $i
    i32.const 1
    i32.shl
    i32.add
    i32.load16_s $0
    local.set $value
    local.get $value
    local.get $i
    local.get $array
    i32.const 3
    global.set $~argumentsLength
    local.get $fn|3
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    if
     local.get $buf
     local.get $j
     local.tee $12
     i32.const 1
     i32.add
     local.set $j
     local.get $12
     i32.const 1
     i32.shl
     i32.add
     local.get $value
     i32.store16 $0
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $j
  i32.const 1
  i32.shl
  local.set $byteLength
  local.get $buf
  local.get $byteLength
  call $~lib/rt/stub/__renew
  local.set $data
  local.get $out
  local.get $data
  i32.store $0
  local.get $out
  local.get $data
  i32.const 0
  call $~lib/rt/stub/__link
  local.get $out
  local.get $byteLength
  i32.store $0 offset=8
  local.get $out
  local.get $data
  i32.store $0 offset=4
  local.get $out
 )
 (func $std/typedarray/testArrayFilter<~lib/typedarray/Uint16Array,u16>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 65535
  i32.and
  i32.const 2
  i32.gt_u
 )
 (func $~lib/typedarray/Uint16Array#filter (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $len i32)
  (local $out i32)
  (local $buf i32)
  (local $dataStart i32)
  (local $j i32)
  (local $i i32)
  (local $10 i32)
  (local $value i32)
  (local $12 i32)
  (local $byteLength i32)
  (local $data i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|3
  local.get $array
  call $~lib/typedarray/Uint16Array#get:length
  local.set $len
  i32.const 12
  i32.const 7
  call $~lib/rt/stub/__new
  local.set $out
  local.get $len
  i32.const 1
  i32.shl
  i32.const 0
  call $~lib/rt/stub/__new
  local.set $buf
  local.get $array
  i32.load $0 offset=4
  local.set $dataStart
  i32.const 0
  local.set $j
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $len
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $dataStart
    local.get $i
    i32.const 1
    i32.shl
    i32.add
    i32.load16_u $0
    local.set $value
    local.get $value
    local.get $i
    local.get $array
    i32.const 3
    global.set $~argumentsLength
    local.get $fn|3
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    if
     local.get $buf
     local.get $j
     local.tee $12
     i32.const 1
     i32.add
     local.set $j
     local.get $12
     i32.const 1
     i32.shl
     i32.add
     local.get $value
     i32.store16 $0
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $j
  i32.const 1
  i32.shl
  local.set $byteLength
  local.get $buf
  local.get $byteLength
  call $~lib/rt/stub/__renew
  local.set $data
  local.get $out
  local.get $data
  i32.store $0
  local.get $out
  local.get $data
  i32.const 0
  call $~lib/rt/stub/__link
  local.get $out
  local.get $byteLength
  i32.store $0 offset=8
  local.get $out
  local.get $data
  i32.store $0 offset=4
  local.get $out
 )
 (func $std/typedarray/testArrayFilter<~lib/typedarray/Int32Array,i32>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 2
  i32.gt_s
 )
 (func $~lib/typedarray/Int32Array#filter (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $len i32)
  (local $out i32)
  (local $buf i32)
  (local $dataStart i32)
  (local $j i32)
  (local $i i32)
  (local $10 i32)
  (local $value i32)
  (local $12 i32)
  (local $byteLength i32)
  (local $data i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|3
  local.get $array
  call $~lib/typedarray/Int32Array#get:length
  local.set $len
  i32.const 12
  i32.const 8
  call $~lib/rt/stub/__new
  local.set $out
  local.get $len
  i32.const 2
  i32.shl
  i32.const 0
  call $~lib/rt/stub/__new
  local.set $buf
  local.get $array
  i32.load $0 offset=4
  local.set $dataStart
  i32.const 0
  local.set $j
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $len
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $dataStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $value
    local.get $value
    local.get $i
    local.get $array
    i32.const 3
    global.set $~argumentsLength
    local.get $fn|3
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    if
     local.get $buf
     local.get $j
     local.tee $12
     i32.const 1
     i32.add
     local.set $j
     local.get $12
     i32.const 2
     i32.shl
     i32.add
     local.get $value
     i32.store $0
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $j
  i32.const 2
  i32.shl
  local.set $byteLength
  local.get $buf
  local.get $byteLength
  call $~lib/rt/stub/__renew
  local.set $data
  local.get $out
  local.get $data
  i32.store $0
  local.get $out
  local.get $data
  i32.const 0
  call $~lib/rt/stub/__link
  local.get $out
  local.get $byteLength
  i32.store $0 offset=8
  local.get $out
  local.get $data
  i32.store $0 offset=4
  local.get $out
 )
 (func $std/typedarray/testArrayFilter<~lib/typedarray/Uint32Array,u32>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 2
  i32.gt_u
 )
 (func $~lib/typedarray/Uint32Array#filter (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $len i32)
  (local $out i32)
  (local $buf i32)
  (local $dataStart i32)
  (local $j i32)
  (local $i i32)
  (local $10 i32)
  (local $value i32)
  (local $12 i32)
  (local $byteLength i32)
  (local $data i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|3
  local.get $array
  call $~lib/typedarray/Uint32Array#get:length
  local.set $len
  i32.const 12
  i32.const 9
  call $~lib/rt/stub/__new
  local.set $out
  local.get $len
  i32.const 2
  i32.shl
  i32.const 0
  call $~lib/rt/stub/__new
  local.set $buf
  local.get $array
  i32.load $0 offset=4
  local.set $dataStart
  i32.const 0
  local.set $j
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $len
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $dataStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $value
    local.get $value
    local.get $i
    local.get $array
    i32.const 3
    global.set $~argumentsLength
    local.get $fn|3
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    if
     local.get $buf
     local.get $j
     local.tee $12
     i32.const 1
     i32.add
     local.set $j
     local.get $12
     i32.const 2
     i32.shl
     i32.add
     local.get $value
     i32.store $0
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $j
  i32.const 2
  i32.shl
  local.set $byteLength
  local.get $buf
  local.get $byteLength
  call $~lib/rt/stub/__renew
  local.set $data
  local.get $out
  local.get $data
  i32.store $0
  local.get $out
  local.get $data
  i32.const 0
  call $~lib/rt/stub/__link
  local.get $out
  local.get $byteLength
  i32.store $0 offset=8
  local.get $out
  local.get $data
  i32.store $0 offset=4
  local.get $out
 )
 (func $std/typedarray/testArrayFilter<~lib/typedarray/Int64Array,i64>~anonymous|0 (type $i64_i32_i32_=>_i32) (param $value i64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i64.const 2
  i64.gt_s
 )
 (func $~lib/typedarray/Int64Array#filter (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $len i32)
  (local $out i32)
  (local $buf i32)
  (local $dataStart i32)
  (local $j i32)
  (local $i i32)
  (local $10 i32)
  (local $value i64)
  (local $12 i32)
  (local $byteLength i32)
  (local $data i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|3
  local.get $array
  call $~lib/typedarray/Int64Array#get:length
  local.set $len
  i32.const 12
  i32.const 10
  call $~lib/rt/stub/__new
  local.set $out
  local.get $len
  i32.const 3
  i32.shl
  i32.const 0
  call $~lib/rt/stub/__new
  local.set $buf
  local.get $array
  i32.load $0 offset=4
  local.set $dataStart
  i32.const 0
  local.set $j
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $len
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $dataStart
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    local.set $value
    local.get $value
    local.get $i
    local.get $array
    i32.const 3
    global.set $~argumentsLength
    local.get $fn|3
    i32.load $0
    call_indirect $0 (type $i64_i32_i32_=>_i32)
    if
     local.get $buf
     local.get $j
     local.tee $12
     i32.const 1
     i32.add
     local.set $j
     local.get $12
     i32.const 3
     i32.shl
     i32.add
     local.get $value
     i64.store $0
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $j
  i32.const 3
  i32.shl
  local.set $byteLength
  local.get $buf
  local.get $byteLength
  call $~lib/rt/stub/__renew
  local.set $data
  local.get $out
  local.get $data
  i32.store $0
  local.get $out
  local.get $data
  i32.const 0
  call $~lib/rt/stub/__link
  local.get $out
  local.get $byteLength
  i32.store $0 offset=8
  local.get $out
  local.get $data
  i32.store $0 offset=4
  local.get $out
 )
 (func $std/typedarray/testArrayFilter<~lib/typedarray/Uint64Array,u64>~anonymous|0 (type $i64_i32_i32_=>_i32) (param $value i64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i64.const 2
  i64.gt_u
 )
 (func $~lib/typedarray/Uint64Array#filter (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $len i32)
  (local $out i32)
  (local $buf i32)
  (local $dataStart i32)
  (local $j i32)
  (local $i i32)
  (local $10 i32)
  (local $value i64)
  (local $12 i32)
  (local $byteLength i32)
  (local $data i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|3
  local.get $array
  call $~lib/typedarray/Uint64Array#get:length
  local.set $len
  i32.const 12
  i32.const 11
  call $~lib/rt/stub/__new
  local.set $out
  local.get $len
  i32.const 3
  i32.shl
  i32.const 0
  call $~lib/rt/stub/__new
  local.set $buf
  local.get $array
  i32.load $0 offset=4
  local.set $dataStart
  i32.const 0
  local.set $j
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $len
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $dataStart
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    local.set $value
    local.get $value
    local.get $i
    local.get $array
    i32.const 3
    global.set $~argumentsLength
    local.get $fn|3
    i32.load $0
    call_indirect $0 (type $i64_i32_i32_=>_i32)
    if
     local.get $buf
     local.get $j
     local.tee $12
     i32.const 1
     i32.add
     local.set $j
     local.get $12
     i32.const 3
     i32.shl
     i32.add
     local.get $value
     i64.store $0
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $j
  i32.const 3
  i32.shl
  local.set $byteLength
  local.get $buf
  local.get $byteLength
  call $~lib/rt/stub/__renew
  local.set $data
  local.get $out
  local.get $data
  i32.store $0
  local.get $out
  local.get $data
  i32.const 0
  call $~lib/rt/stub/__link
  local.get $out
  local.get $byteLength
  i32.store $0 offset=8
  local.get $out
  local.get $data
  i32.store $0 offset=4
  local.get $out
 )
 (func $std/typedarray/testArrayFilter<~lib/typedarray/Float32Array,f32>~anonymous|0 (type $f32_i32_i32_=>_i32) (param $value f32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  f32.const 2
  f32.gt
 )
 (func $~lib/typedarray/Float32Array#filter (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $len i32)
  (local $out i32)
  (local $buf i32)
  (local $dataStart i32)
  (local $j i32)
  (local $i i32)
  (local $10 i32)
  (local $value f32)
  (local $12 i32)
  (local $byteLength i32)
  (local $data i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|3
  local.get $array
  call $~lib/typedarray/Float32Array#get:length
  local.set $len
  i32.const 12
  i32.const 12
  call $~lib/rt/stub/__new
  local.set $out
  local.get $len
  i32.const 2
  i32.shl
  i32.const 0
  call $~lib/rt/stub/__new
  local.set $buf
  local.get $array
  i32.load $0 offset=4
  local.set $dataStart
  i32.const 0
  local.set $j
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $len
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $dataStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    f32.load $0
    local.set $value
    local.get $value
    local.get $i
    local.get $array
    i32.const 3
    global.set $~argumentsLength
    local.get $fn|3
    i32.load $0
    call_indirect $0 (type $f32_i32_i32_=>_i32)
    if
     local.get $buf
     local.get $j
     local.tee $12
     i32.const 1
     i32.add
     local.set $j
     local.get $12
     i32.const 2
     i32.shl
     i32.add
     local.get $value
     f32.store $0
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $j
  i32.const 2
  i32.shl
  local.set $byteLength
  local.get $buf
  local.get $byteLength
  call $~lib/rt/stub/__renew
  local.set $data
  local.get $out
  local.get $data
  i32.store $0
  local.get $out
  local.get $data
  i32.const 0
  call $~lib/rt/stub/__link
  local.get $out
  local.get $byteLength
  i32.store $0 offset=8
  local.get $out
  local.get $data
  i32.store $0 offset=4
  local.get $out
 )
 (func $std/typedarray/testArrayFilter<~lib/typedarray/Float64Array,f64>~anonymous|0 (type $f64_i32_i32_=>_i32) (param $value f64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  f64.const 2
  f64.gt
 )
 (func $~lib/typedarray/Float64Array#filter (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $len i32)
  (local $out i32)
  (local $buf i32)
  (local $dataStart i32)
  (local $j i32)
  (local $i i32)
  (local $10 i32)
  (local $value f64)
  (local $12 i32)
  (local $byteLength i32)
  (local $data i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|3
  local.get $array
  call $~lib/typedarray/Float64Array#get:length
  local.set $len
  i32.const 12
  i32.const 13
  call $~lib/rt/stub/__new
  local.set $out
  local.get $len
  i32.const 3
  i32.shl
  i32.const 0
  call $~lib/rt/stub/__new
  local.set $buf
  local.get $array
  i32.load $0 offset=4
  local.set $dataStart
  i32.const 0
  local.set $j
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $len
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $dataStart
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    f64.load $0
    local.set $value
    local.get $value
    local.get $i
    local.get $array
    i32.const 3
    global.set $~argumentsLength
    local.get $fn|3
    i32.load $0
    call_indirect $0 (type $f64_i32_i32_=>_i32)
    if
     local.get $buf
     local.get $j
     local.tee $12
     i32.const 1
     i32.add
     local.set $j
     local.get $12
     i32.const 3
     i32.shl
     i32.add
     local.get $value
     f64.store $0
    end
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
  local.get $j
  i32.const 3
  i32.shl
  local.set $byteLength
  local.get $buf
  local.get $byteLength
  call $~lib/rt/stub/__renew
  local.set $data
  local.get $out
  local.get $data
  i32.store $0
  local.get $out
  local.get $data
  i32.const 0
  call $~lib/rt/stub/__link
  local.get $out
  local.get $byteLength
  i32.store $0 offset=8
  local.get $out
  local.get $data
  i32.store $0 offset=4
  local.get $out
 )
 (func $std/typedarray/testArraySome<~lib/typedarray/Int8Array,i8>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.extend8_s
  i32.const 2
  i32.eq
 )
 (func $~lib/typedarray/Int8Array#some (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  block $~lib/typedarray/SOME<~lib/typedarray/Int8Array,i8>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   i32.const 0
   local.set $i
   local.get $array
   call $~lib/typedarray/Int8Array#get:length
   local.set $k
   loop $for-loop|0
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     local.get $ptr
     local.get $i
     i32.const 0
     i32.shl
     i32.add
     i32.load8_s $0
     local.get $i
     local.get $array
     i32.const 3
     global.set $~argumentsLength
     local.get $fn|3
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     if
      i32.const 1
      br $~lib/typedarray/SOME<~lib/typedarray/Int8Array,i8>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   i32.const 0
  end
 )
 (func $std/typedarray/testArraySome<~lib/typedarray/Int8Array,i8>~anonymous|1 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.extend8_s
  i32.const 0
  i32.eq
 )
 (func $std/typedarray/testArraySome<~lib/typedarray/Uint8Array,u8>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 255
  i32.and
  i32.const 2
  i32.eq
 )
 (func $~lib/typedarray/Uint8Array#some (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  block $~lib/typedarray/SOME<~lib/typedarray/Uint8Array,u8>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   i32.const 0
   local.set $i
   local.get $array
   call $~lib/typedarray/Uint8Array#get:length
   local.set $k
   loop $for-loop|0
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     local.get $ptr
     local.get $i
     i32.const 0
     i32.shl
     i32.add
     i32.load8_u $0
     local.get $i
     local.get $array
     i32.const 3
     global.set $~argumentsLength
     local.get $fn|3
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     if
      i32.const 1
      br $~lib/typedarray/SOME<~lib/typedarray/Uint8Array,u8>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   i32.const 0
  end
 )
 (func $std/typedarray/testArraySome<~lib/typedarray/Uint8Array,u8>~anonymous|1 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 255
  i32.and
  i32.const 0
  i32.eq
 )
 (func $std/typedarray/testArraySome<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 255
  i32.and
  i32.const 2
  i32.eq
 )
 (func $~lib/typedarray/Uint8ClampedArray#some (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  block $~lib/typedarray/SOME<~lib/typedarray/Uint8ClampedArray,u8>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   i32.const 0
   local.set $i
   local.get $array
   call $~lib/typedarray/Uint8ClampedArray#get:length
   local.set $k
   loop $for-loop|0
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     local.get $ptr
     local.get $i
     i32.const 0
     i32.shl
     i32.add
     i32.load8_u $0
     local.get $i
     local.get $array
     i32.const 3
     global.set $~argumentsLength
     local.get $fn|3
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     if
      i32.const 1
      br $~lib/typedarray/SOME<~lib/typedarray/Uint8ClampedArray,u8>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   i32.const 0
  end
 )
 (func $std/typedarray/testArraySome<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|1 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 255
  i32.and
  i32.const 0
  i32.eq
 )
 (func $std/typedarray/testArraySome<~lib/typedarray/Int16Array,i16>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.extend16_s
  i32.const 2
  i32.eq
 )
 (func $~lib/typedarray/Int16Array#some (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  block $~lib/typedarray/SOME<~lib/typedarray/Int16Array,i16>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   i32.const 0
   local.set $i
   local.get $array
   call $~lib/typedarray/Int16Array#get:length
   local.set $k
   loop $for-loop|0
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     local.get $ptr
     local.get $i
     i32.const 1
     i32.shl
     i32.add
     i32.load16_s $0
     local.get $i
     local.get $array
     i32.const 3
     global.set $~argumentsLength
     local.get $fn|3
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     if
      i32.const 1
      br $~lib/typedarray/SOME<~lib/typedarray/Int16Array,i16>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   i32.const 0
  end
 )
 (func $std/typedarray/testArraySome<~lib/typedarray/Int16Array,i16>~anonymous|1 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.extend16_s
  i32.const 0
  i32.eq
 )
 (func $std/typedarray/testArraySome<~lib/typedarray/Uint16Array,u16>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 65535
  i32.and
  i32.const 2
  i32.eq
 )
 (func $~lib/typedarray/Uint16Array#some (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  block $~lib/typedarray/SOME<~lib/typedarray/Uint16Array,u16>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   i32.const 0
   local.set $i
   local.get $array
   call $~lib/typedarray/Uint16Array#get:length
   local.set $k
   loop $for-loop|0
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     local.get $ptr
     local.get $i
     i32.const 1
     i32.shl
     i32.add
     i32.load16_u $0
     local.get $i
     local.get $array
     i32.const 3
     global.set $~argumentsLength
     local.get $fn|3
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     if
      i32.const 1
      br $~lib/typedarray/SOME<~lib/typedarray/Uint16Array,u16>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   i32.const 0
  end
 )
 (func $std/typedarray/testArraySome<~lib/typedarray/Uint16Array,u16>~anonymous|1 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 65535
  i32.and
  i32.const 0
  i32.eq
 )
 (func $std/typedarray/testArraySome<~lib/typedarray/Int32Array,i32>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 2
  i32.eq
 )
 (func $~lib/typedarray/Int32Array#some (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  block $~lib/typedarray/SOME<~lib/typedarray/Int32Array,i32>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   i32.const 0
   local.set $i
   local.get $array
   call $~lib/typedarray/Int32Array#get:length
   local.set $k
   loop $for-loop|0
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     local.get $ptr
     local.get $i
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.get $i
     local.get $array
     i32.const 3
     global.set $~argumentsLength
     local.get $fn|3
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     if
      i32.const 1
      br $~lib/typedarray/SOME<~lib/typedarray/Int32Array,i32>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   i32.const 0
  end
 )
 (func $std/typedarray/testArraySome<~lib/typedarray/Int32Array,i32>~anonymous|1 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 0
  i32.eq
 )
 (func $std/typedarray/testArraySome<~lib/typedarray/Uint32Array,u32>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 2
  i32.eq
 )
 (func $~lib/typedarray/Uint32Array#some (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  block $~lib/typedarray/SOME<~lib/typedarray/Uint32Array,u32>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   i32.const 0
   local.set $i
   local.get $array
   call $~lib/typedarray/Uint32Array#get:length
   local.set $k
   loop $for-loop|0
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     local.get $ptr
     local.get $i
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.get $i
     local.get $array
     i32.const 3
     global.set $~argumentsLength
     local.get $fn|3
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     if
      i32.const 1
      br $~lib/typedarray/SOME<~lib/typedarray/Uint32Array,u32>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   i32.const 0
  end
 )
 (func $std/typedarray/testArraySome<~lib/typedarray/Uint32Array,u32>~anonymous|1 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 0
  i32.eq
 )
 (func $std/typedarray/testArraySome<~lib/typedarray/Int64Array,i64>~anonymous|0 (type $i64_i32_i32_=>_i32) (param $value i64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i64.const 2
  i64.eq
 )
 (func $~lib/typedarray/Int64Array#some (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  block $~lib/typedarray/SOME<~lib/typedarray/Int64Array,i64>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   i32.const 0
   local.set $i
   local.get $array
   call $~lib/typedarray/Int64Array#get:length
   local.set $k
   loop $for-loop|0
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     local.get $ptr
     local.get $i
     i32.const 3
     i32.shl
     i32.add
     i64.load $0
     local.get $i
     local.get $array
     i32.const 3
     global.set $~argumentsLength
     local.get $fn|3
     i32.load $0
     call_indirect $0 (type $i64_i32_i32_=>_i32)
     if
      i32.const 1
      br $~lib/typedarray/SOME<~lib/typedarray/Int64Array,i64>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   i32.const 0
  end
 )
 (func $std/typedarray/testArraySome<~lib/typedarray/Int64Array,i64>~anonymous|1 (type $i64_i32_i32_=>_i32) (param $value i64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i64.const 0
  i64.eq
 )
 (func $std/typedarray/testArraySome<~lib/typedarray/Uint64Array,u64>~anonymous|0 (type $i64_i32_i32_=>_i32) (param $value i64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i64.const 2
  i64.eq
 )
 (func $~lib/typedarray/Uint64Array#some (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  block $~lib/typedarray/SOME<~lib/typedarray/Uint64Array,u64>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   i32.const 0
   local.set $i
   local.get $array
   call $~lib/typedarray/Uint64Array#get:length
   local.set $k
   loop $for-loop|0
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     local.get $ptr
     local.get $i
     i32.const 3
     i32.shl
     i32.add
     i64.load $0
     local.get $i
     local.get $array
     i32.const 3
     global.set $~argumentsLength
     local.get $fn|3
     i32.load $0
     call_indirect $0 (type $i64_i32_i32_=>_i32)
     if
      i32.const 1
      br $~lib/typedarray/SOME<~lib/typedarray/Uint64Array,u64>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   i32.const 0
  end
 )
 (func $std/typedarray/testArraySome<~lib/typedarray/Uint64Array,u64>~anonymous|1 (type $i64_i32_i32_=>_i32) (param $value i64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i64.const 0
  i64.eq
 )
 (func $std/typedarray/testArraySome<~lib/typedarray/Float32Array,f32>~anonymous|0 (type $f32_i32_i32_=>_i32) (param $value f32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  f32.const 2
  f32.eq
 )
 (func $~lib/typedarray/Float32Array#some (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  block $~lib/typedarray/SOME<~lib/typedarray/Float32Array,f32>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   i32.const 0
   local.set $i
   local.get $array
   call $~lib/typedarray/Float32Array#get:length
   local.set $k
   loop $for-loop|0
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     local.get $ptr
     local.get $i
     i32.const 2
     i32.shl
     i32.add
     f32.load $0
     local.get $i
     local.get $array
     i32.const 3
     global.set $~argumentsLength
     local.get $fn|3
     i32.load $0
     call_indirect $0 (type $f32_i32_i32_=>_i32)
     if
      i32.const 1
      br $~lib/typedarray/SOME<~lib/typedarray/Float32Array,f32>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   i32.const 0
  end
 )
 (func $std/typedarray/testArraySome<~lib/typedarray/Float32Array,f32>~anonymous|1 (type $f32_i32_i32_=>_i32) (param $value f32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  f32.const 0
  f32.eq
 )
 (func $std/typedarray/testArraySome<~lib/typedarray/Float64Array,f64>~anonymous|0 (type $f64_i32_i32_=>_i32) (param $value f64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  f64.const 2
  f64.eq
 )
 (func $~lib/typedarray/Float64Array#some (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  block $~lib/typedarray/SOME<~lib/typedarray/Float64Array,f64>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   i32.const 0
   local.set $i
   local.get $array
   call $~lib/typedarray/Float64Array#get:length
   local.set $k
   loop $for-loop|0
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     local.get $ptr
     local.get $i
     i32.const 3
     i32.shl
     i32.add
     f64.load $0
     local.get $i
     local.get $array
     i32.const 3
     global.set $~argumentsLength
     local.get $fn|3
     i32.load $0
     call_indirect $0 (type $f64_i32_i32_=>_i32)
     if
      i32.const 1
      br $~lib/typedarray/SOME<~lib/typedarray/Float64Array,f64>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   i32.const 0
  end
 )
 (func $std/typedarray/testArraySome<~lib/typedarray/Float64Array,f64>~anonymous|1 (type $f64_i32_i32_=>_i32) (param $value f64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  f64.const 0
  f64.eq
 )
 (func $std/typedarray/testArrayFindIndex<~lib/typedarray/Int8Array,i8>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.extend8_s
  i32.const 2
  i32.eq
 )
 (func $~lib/typedarray/Int8Array#findIndex (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  block $~lib/typedarray/FIND_INDEX<~lib/typedarray/Int8Array,i8>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   i32.const 0
   local.set $i
   local.get $array
   call $~lib/typedarray/Int8Array#get:length
   local.set $k
   loop $for-loop|0
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     local.get $ptr
     local.get $i
     i32.const 0
     i32.shl
     i32.add
     i32.load8_s $0
     local.get $i
     local.get $array
     i32.const 3
     global.set $~argumentsLength
     local.get $fn|3
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     if
      local.get $i
      br $~lib/typedarray/FIND_INDEX<~lib/typedarray/Int8Array,i8>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   i32.const -1
  end
 )
 (func $std/typedarray/testArrayFindIndex<~lib/typedarray/Int8Array,i8>~anonymous|1 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.extend8_s
  i32.const 4
  i32.eq
 )
 (func $std/typedarray/testArrayFindIndex<~lib/typedarray/Uint8Array,u8>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 255
  i32.and
  i32.const 2
  i32.eq
 )
 (func $~lib/typedarray/Uint8Array#findIndex (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  block $~lib/typedarray/FIND_INDEX<~lib/typedarray/Uint8Array,u8>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   i32.const 0
   local.set $i
   local.get $array
   call $~lib/typedarray/Uint8Array#get:length
   local.set $k
   loop $for-loop|0
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     local.get $ptr
     local.get $i
     i32.const 0
     i32.shl
     i32.add
     i32.load8_u $0
     local.get $i
     local.get $array
     i32.const 3
     global.set $~argumentsLength
     local.get $fn|3
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     if
      local.get $i
      br $~lib/typedarray/FIND_INDEX<~lib/typedarray/Uint8Array,u8>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   i32.const -1
  end
 )
 (func $std/typedarray/testArrayFindIndex<~lib/typedarray/Uint8Array,u8>~anonymous|1 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 255
  i32.and
  i32.const 4
  i32.eq
 )
 (func $std/typedarray/testArrayFindIndex<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 255
  i32.and
  i32.const 2
  i32.eq
 )
 (func $~lib/typedarray/Uint8ClampedArray#findIndex (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  block $~lib/typedarray/FIND_INDEX<~lib/typedarray/Uint8ClampedArray,u8>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   i32.const 0
   local.set $i
   local.get $array
   call $~lib/typedarray/Uint8ClampedArray#get:length
   local.set $k
   loop $for-loop|0
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     local.get $ptr
     local.get $i
     i32.const 0
     i32.shl
     i32.add
     i32.load8_u $0
     local.get $i
     local.get $array
     i32.const 3
     global.set $~argumentsLength
     local.get $fn|3
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     if
      local.get $i
      br $~lib/typedarray/FIND_INDEX<~lib/typedarray/Uint8ClampedArray,u8>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   i32.const -1
  end
 )
 (func $std/typedarray/testArrayFindIndex<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|1 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 255
  i32.and
  i32.const 4
  i32.eq
 )
 (func $std/typedarray/testArrayFindIndex<~lib/typedarray/Int16Array,i16>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.extend16_s
  i32.const 2
  i32.eq
 )
 (func $~lib/typedarray/Int16Array#findIndex (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  block $~lib/typedarray/FIND_INDEX<~lib/typedarray/Int16Array,i16>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   i32.const 0
   local.set $i
   local.get $array
   call $~lib/typedarray/Int16Array#get:length
   local.set $k
   loop $for-loop|0
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     local.get $ptr
     local.get $i
     i32.const 1
     i32.shl
     i32.add
     i32.load16_s $0
     local.get $i
     local.get $array
     i32.const 3
     global.set $~argumentsLength
     local.get $fn|3
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     if
      local.get $i
      br $~lib/typedarray/FIND_INDEX<~lib/typedarray/Int16Array,i16>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   i32.const -1
  end
 )
 (func $std/typedarray/testArrayFindIndex<~lib/typedarray/Int16Array,i16>~anonymous|1 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.extend16_s
  i32.const 4
  i32.eq
 )
 (func $std/typedarray/testArrayFindIndex<~lib/typedarray/Uint16Array,u16>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 65535
  i32.and
  i32.const 2
  i32.eq
 )
 (func $~lib/typedarray/Uint16Array#findIndex (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  block $~lib/typedarray/FIND_INDEX<~lib/typedarray/Uint16Array,u16>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   i32.const 0
   local.set $i
   local.get $array
   call $~lib/typedarray/Uint16Array#get:length
   local.set $k
   loop $for-loop|0
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     local.get $ptr
     local.get $i
     i32.const 1
     i32.shl
     i32.add
     i32.load16_u $0
     local.get $i
     local.get $array
     i32.const 3
     global.set $~argumentsLength
     local.get $fn|3
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     if
      local.get $i
      br $~lib/typedarray/FIND_INDEX<~lib/typedarray/Uint16Array,u16>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   i32.const -1
  end
 )
 (func $std/typedarray/testArrayFindIndex<~lib/typedarray/Uint16Array,u16>~anonymous|1 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 65535
  i32.and
  i32.const 4
  i32.eq
 )
 (func $std/typedarray/testArrayFindIndex<~lib/typedarray/Int32Array,i32>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 2
  i32.eq
 )
 (func $~lib/typedarray/Int32Array#findIndex (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  block $~lib/typedarray/FIND_INDEX<~lib/typedarray/Int32Array,i32>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   i32.const 0
   local.set $i
   local.get $array
   call $~lib/typedarray/Int32Array#get:length
   local.set $k
   loop $for-loop|0
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     local.get $ptr
     local.get $i
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.get $i
     local.get $array
     i32.const 3
     global.set $~argumentsLength
     local.get $fn|3
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     if
      local.get $i
      br $~lib/typedarray/FIND_INDEX<~lib/typedarray/Int32Array,i32>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   i32.const -1
  end
 )
 (func $std/typedarray/testArrayFindIndex<~lib/typedarray/Int32Array,i32>~anonymous|1 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 4
  i32.eq
 )
 (func $std/typedarray/testArrayFindIndex<~lib/typedarray/Uint32Array,u32>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 2
  i32.eq
 )
 (func $~lib/typedarray/Uint32Array#findIndex (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  block $~lib/typedarray/FIND_INDEX<~lib/typedarray/Uint32Array,u32>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   i32.const 0
   local.set $i
   local.get $array
   call $~lib/typedarray/Uint32Array#get:length
   local.set $k
   loop $for-loop|0
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     local.get $ptr
     local.get $i
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.get $i
     local.get $array
     i32.const 3
     global.set $~argumentsLength
     local.get $fn|3
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     if
      local.get $i
      br $~lib/typedarray/FIND_INDEX<~lib/typedarray/Uint32Array,u32>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   i32.const -1
  end
 )
 (func $std/typedarray/testArrayFindIndex<~lib/typedarray/Uint32Array,u32>~anonymous|1 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 4
  i32.eq
 )
 (func $std/typedarray/testArrayFindIndex<~lib/typedarray/Int64Array,i64>~anonymous|0 (type $i64_i32_i32_=>_i32) (param $value i64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i64.const 2
  i64.eq
 )
 (func $~lib/typedarray/Int64Array#findIndex (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  block $~lib/typedarray/FIND_INDEX<~lib/typedarray/Int64Array,i64>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   i32.const 0
   local.set $i
   local.get $array
   call $~lib/typedarray/Int64Array#get:length
   local.set $k
   loop $for-loop|0
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     local.get $ptr
     local.get $i
     i32.const 3
     i32.shl
     i32.add
     i64.load $0
     local.get $i
     local.get $array
     i32.const 3
     global.set $~argumentsLength
     local.get $fn|3
     i32.load $0
     call_indirect $0 (type $i64_i32_i32_=>_i32)
     if
      local.get $i
      br $~lib/typedarray/FIND_INDEX<~lib/typedarray/Int64Array,i64>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   i32.const -1
  end
 )
 (func $std/typedarray/testArrayFindIndex<~lib/typedarray/Int64Array,i64>~anonymous|1 (type $i64_i32_i32_=>_i32) (param $value i64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i64.const 4
  i64.eq
 )
 (func $std/typedarray/testArrayFindIndex<~lib/typedarray/Uint64Array,u64>~anonymous|0 (type $i64_i32_i32_=>_i32) (param $value i64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i64.const 2
  i64.eq
 )
 (func $~lib/typedarray/Uint64Array#findIndex (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  block $~lib/typedarray/FIND_INDEX<~lib/typedarray/Uint64Array,u64>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   i32.const 0
   local.set $i
   local.get $array
   call $~lib/typedarray/Uint64Array#get:length
   local.set $k
   loop $for-loop|0
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     local.get $ptr
     local.get $i
     i32.const 3
     i32.shl
     i32.add
     i64.load $0
     local.get $i
     local.get $array
     i32.const 3
     global.set $~argumentsLength
     local.get $fn|3
     i32.load $0
     call_indirect $0 (type $i64_i32_i32_=>_i32)
     if
      local.get $i
      br $~lib/typedarray/FIND_INDEX<~lib/typedarray/Uint64Array,u64>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   i32.const -1
  end
 )
 (func $std/typedarray/testArrayFindIndex<~lib/typedarray/Uint64Array,u64>~anonymous|1 (type $i64_i32_i32_=>_i32) (param $value i64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i64.const 4
  i64.eq
 )
 (func $std/typedarray/testArrayFindIndex<~lib/typedarray/Float32Array,f32>~anonymous|0 (type $f32_i32_i32_=>_i32) (param $value f32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  f32.const 2
  f32.eq
 )
 (func $~lib/typedarray/Float32Array#findIndex (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  block $~lib/typedarray/FIND_INDEX<~lib/typedarray/Float32Array,f32>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   i32.const 0
   local.set $i
   local.get $array
   call $~lib/typedarray/Float32Array#get:length
   local.set $k
   loop $for-loop|0
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     local.get $ptr
     local.get $i
     i32.const 2
     i32.shl
     i32.add
     f32.load $0
     local.get $i
     local.get $array
     i32.const 3
     global.set $~argumentsLength
     local.get $fn|3
     i32.load $0
     call_indirect $0 (type $f32_i32_i32_=>_i32)
     if
      local.get $i
      br $~lib/typedarray/FIND_INDEX<~lib/typedarray/Float32Array,f32>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   i32.const -1
  end
 )
 (func $std/typedarray/testArrayFindIndex<~lib/typedarray/Float32Array,f32>~anonymous|1 (type $f32_i32_i32_=>_i32) (param $value f32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  f32.const 4
  f32.eq
 )
 (func $std/typedarray/testArrayFindIndex<~lib/typedarray/Float64Array,f64>~anonymous|0 (type $f64_i32_i32_=>_i32) (param $value f64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  f64.const 2
  f64.eq
 )
 (func $~lib/typedarray/Float64Array#findIndex (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  block $~lib/typedarray/FIND_INDEX<~lib/typedarray/Float64Array,f64>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   i32.const 0
   local.set $i
   local.get $array
   call $~lib/typedarray/Float64Array#get:length
   local.set $k
   loop $for-loop|0
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     local.get $ptr
     local.get $i
     i32.const 3
     i32.shl
     i32.add
     f64.load $0
     local.get $i
     local.get $array
     i32.const 3
     global.set $~argumentsLength
     local.get $fn|3
     i32.load $0
     call_indirect $0 (type $f64_i32_i32_=>_i32)
     if
      local.get $i
      br $~lib/typedarray/FIND_INDEX<~lib/typedarray/Float64Array,f64>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   i32.const -1
  end
 )
 (func $std/typedarray/testArrayFindIndex<~lib/typedarray/Float64Array,f64>~anonymous|1 (type $f64_i32_i32_=>_i32) (param $value f64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  f64.const 4
  f64.eq
 )
 (func $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Int8Array,i8>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.extend8_s
  i32.const 2
  i32.eq
 )
 (func $~lib/typedarray/Int8Array#findLastIndex (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $6 i32)
  block $~lib/typedarray/FIND_LAST_INDEX<~lib/typedarray/Int8Array,i8>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   local.get $array
   call $~lib/typedarray/Int8Array#get:length
   i32.const 1
   i32.sub
   local.set $i
   loop $for-loop|0
    local.get $i
    i32.const 0
    i32.ge_s
    local.set $6
    local.get $6
    if
     local.get $ptr
     local.get $i
     i32.const 0
     i32.shl
     i32.add
     i32.load8_s $0
     local.get $i
     local.get $array
     i32.const 3
     global.set $~argumentsLength
     local.get $fn|3
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     if
      local.get $i
      br $~lib/typedarray/FIND_LAST_INDEX<~lib/typedarray/Int8Array,i8>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.sub
     local.set $i
     br $for-loop|0
    end
   end
   i32.const -1
  end
 )
 (func $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Int8Array,i8>~anonymous|1 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.extend8_s
  i32.const 4
  i32.eq
 )
 (func $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Uint8Array,u8>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 255
  i32.and
  i32.const 2
  i32.eq
 )
 (func $~lib/typedarray/Uint8Array#findLastIndex (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $6 i32)
  block $~lib/typedarray/FIND_LAST_INDEX<~lib/typedarray/Uint8Array,u8>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   local.get $array
   call $~lib/typedarray/Uint8Array#get:length
   i32.const 1
   i32.sub
   local.set $i
   loop $for-loop|0
    local.get $i
    i32.const 0
    i32.ge_s
    local.set $6
    local.get $6
    if
     local.get $ptr
     local.get $i
     i32.const 0
     i32.shl
     i32.add
     i32.load8_u $0
     local.get $i
     local.get $array
     i32.const 3
     global.set $~argumentsLength
     local.get $fn|3
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     if
      local.get $i
      br $~lib/typedarray/FIND_LAST_INDEX<~lib/typedarray/Uint8Array,u8>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.sub
     local.set $i
     br $for-loop|0
    end
   end
   i32.const -1
  end
 )
 (func $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Uint8Array,u8>~anonymous|1 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 255
  i32.and
  i32.const 4
  i32.eq
 )
 (func $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 255
  i32.and
  i32.const 2
  i32.eq
 )
 (func $~lib/typedarray/Uint8ClampedArray#findLastIndex (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $6 i32)
  block $~lib/typedarray/FIND_LAST_INDEX<~lib/typedarray/Uint8ClampedArray,u8>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   local.get $array
   call $~lib/typedarray/Uint8ClampedArray#get:length
   i32.const 1
   i32.sub
   local.set $i
   loop $for-loop|0
    local.get $i
    i32.const 0
    i32.ge_s
    local.set $6
    local.get $6
    if
     local.get $ptr
     local.get $i
     i32.const 0
     i32.shl
     i32.add
     i32.load8_u $0
     local.get $i
     local.get $array
     i32.const 3
     global.set $~argumentsLength
     local.get $fn|3
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     if
      local.get $i
      br $~lib/typedarray/FIND_LAST_INDEX<~lib/typedarray/Uint8ClampedArray,u8>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.sub
     local.set $i
     br $for-loop|0
    end
   end
   i32.const -1
  end
 )
 (func $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|1 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 255
  i32.and
  i32.const 4
  i32.eq
 )
 (func $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Int16Array,i16>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.extend16_s
  i32.const 2
  i32.eq
 )
 (func $~lib/typedarray/Int16Array#findLastIndex (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $6 i32)
  block $~lib/typedarray/FIND_LAST_INDEX<~lib/typedarray/Int16Array,i16>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   local.get $array
   call $~lib/typedarray/Int16Array#get:length
   i32.const 1
   i32.sub
   local.set $i
   loop $for-loop|0
    local.get $i
    i32.const 0
    i32.ge_s
    local.set $6
    local.get $6
    if
     local.get $ptr
     local.get $i
     i32.const 1
     i32.shl
     i32.add
     i32.load16_s $0
     local.get $i
     local.get $array
     i32.const 3
     global.set $~argumentsLength
     local.get $fn|3
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     if
      local.get $i
      br $~lib/typedarray/FIND_LAST_INDEX<~lib/typedarray/Int16Array,i16>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.sub
     local.set $i
     br $for-loop|0
    end
   end
   i32.const -1
  end
 )
 (func $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Int16Array,i16>~anonymous|1 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.extend16_s
  i32.const 4
  i32.eq
 )
 (func $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Uint16Array,u16>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 65535
  i32.and
  i32.const 2
  i32.eq
 )
 (func $~lib/typedarray/Uint16Array#findLastIndex (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $6 i32)
  block $~lib/typedarray/FIND_LAST_INDEX<~lib/typedarray/Uint16Array,u16>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   local.get $array
   call $~lib/typedarray/Uint16Array#get:length
   i32.const 1
   i32.sub
   local.set $i
   loop $for-loop|0
    local.get $i
    i32.const 0
    i32.ge_s
    local.set $6
    local.get $6
    if
     local.get $ptr
     local.get $i
     i32.const 1
     i32.shl
     i32.add
     i32.load16_u $0
     local.get $i
     local.get $array
     i32.const 3
     global.set $~argumentsLength
     local.get $fn|3
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     if
      local.get $i
      br $~lib/typedarray/FIND_LAST_INDEX<~lib/typedarray/Uint16Array,u16>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.sub
     local.set $i
     br $for-loop|0
    end
   end
   i32.const -1
  end
 )
 (func $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Uint16Array,u16>~anonymous|1 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 65535
  i32.and
  i32.const 4
  i32.eq
 )
 (func $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Int32Array,i32>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 2
  i32.eq
 )
 (func $~lib/typedarray/Int32Array#findLastIndex (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $6 i32)
  block $~lib/typedarray/FIND_LAST_INDEX<~lib/typedarray/Int32Array,i32>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   local.get $array
   call $~lib/typedarray/Int32Array#get:length
   i32.const 1
   i32.sub
   local.set $i
   loop $for-loop|0
    local.get $i
    i32.const 0
    i32.ge_s
    local.set $6
    local.get $6
    if
     local.get $ptr
     local.get $i
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.get $i
     local.get $array
     i32.const 3
     global.set $~argumentsLength
     local.get $fn|3
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     if
      local.get $i
      br $~lib/typedarray/FIND_LAST_INDEX<~lib/typedarray/Int32Array,i32>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.sub
     local.set $i
     br $for-loop|0
    end
   end
   i32.const -1
  end
 )
 (func $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Int32Array,i32>~anonymous|1 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 4
  i32.eq
 )
 (func $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Uint32Array,u32>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 2
  i32.eq
 )
 (func $~lib/typedarray/Uint32Array#findLastIndex (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $6 i32)
  block $~lib/typedarray/FIND_LAST_INDEX<~lib/typedarray/Uint32Array,u32>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   local.get $array
   call $~lib/typedarray/Uint32Array#get:length
   i32.const 1
   i32.sub
   local.set $i
   loop $for-loop|0
    local.get $i
    i32.const 0
    i32.ge_s
    local.set $6
    local.get $6
    if
     local.get $ptr
     local.get $i
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.get $i
     local.get $array
     i32.const 3
     global.set $~argumentsLength
     local.get $fn|3
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     if
      local.get $i
      br $~lib/typedarray/FIND_LAST_INDEX<~lib/typedarray/Uint32Array,u32>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.sub
     local.set $i
     br $for-loop|0
    end
   end
   i32.const -1
  end
 )
 (func $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Uint32Array,u32>~anonymous|1 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 4
  i32.eq
 )
 (func $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Int64Array,i64>~anonymous|0 (type $i64_i32_i32_=>_i32) (param $value i64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i64.const 2
  i64.eq
 )
 (func $~lib/typedarray/Int64Array#findLastIndex (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $6 i32)
  block $~lib/typedarray/FIND_LAST_INDEX<~lib/typedarray/Int64Array,i64>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   local.get $array
   call $~lib/typedarray/Int64Array#get:length
   i32.const 1
   i32.sub
   local.set $i
   loop $for-loop|0
    local.get $i
    i32.const 0
    i32.ge_s
    local.set $6
    local.get $6
    if
     local.get $ptr
     local.get $i
     i32.const 3
     i32.shl
     i32.add
     i64.load $0
     local.get $i
     local.get $array
     i32.const 3
     global.set $~argumentsLength
     local.get $fn|3
     i32.load $0
     call_indirect $0 (type $i64_i32_i32_=>_i32)
     if
      local.get $i
      br $~lib/typedarray/FIND_LAST_INDEX<~lib/typedarray/Int64Array,i64>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.sub
     local.set $i
     br $for-loop|0
    end
   end
   i32.const -1
  end
 )
 (func $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Int64Array,i64>~anonymous|1 (type $i64_i32_i32_=>_i32) (param $value i64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i64.const 4
  i64.eq
 )
 (func $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Uint64Array,u64>~anonymous|0 (type $i64_i32_i32_=>_i32) (param $value i64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i64.const 2
  i64.eq
 )
 (func $~lib/typedarray/Uint64Array#findLastIndex (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $6 i32)
  block $~lib/typedarray/FIND_LAST_INDEX<~lib/typedarray/Uint64Array,u64>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   local.get $array
   call $~lib/typedarray/Uint64Array#get:length
   i32.const 1
   i32.sub
   local.set $i
   loop $for-loop|0
    local.get $i
    i32.const 0
    i32.ge_s
    local.set $6
    local.get $6
    if
     local.get $ptr
     local.get $i
     i32.const 3
     i32.shl
     i32.add
     i64.load $0
     local.get $i
     local.get $array
     i32.const 3
     global.set $~argumentsLength
     local.get $fn|3
     i32.load $0
     call_indirect $0 (type $i64_i32_i32_=>_i32)
     if
      local.get $i
      br $~lib/typedarray/FIND_LAST_INDEX<~lib/typedarray/Uint64Array,u64>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.sub
     local.set $i
     br $for-loop|0
    end
   end
   i32.const -1
  end
 )
 (func $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Uint64Array,u64>~anonymous|1 (type $i64_i32_i32_=>_i32) (param $value i64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i64.const 4
  i64.eq
 )
 (func $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Float32Array,f32>~anonymous|0 (type $f32_i32_i32_=>_i32) (param $value f32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  f32.const 2
  f32.eq
 )
 (func $~lib/typedarray/Float32Array#findLastIndex (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $6 i32)
  block $~lib/typedarray/FIND_LAST_INDEX<~lib/typedarray/Float32Array,f32>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   local.get $array
   call $~lib/typedarray/Float32Array#get:length
   i32.const 1
   i32.sub
   local.set $i
   loop $for-loop|0
    local.get $i
    i32.const 0
    i32.ge_s
    local.set $6
    local.get $6
    if
     local.get $ptr
     local.get $i
     i32.const 2
     i32.shl
     i32.add
     f32.load $0
     local.get $i
     local.get $array
     i32.const 3
     global.set $~argumentsLength
     local.get $fn|3
     i32.load $0
     call_indirect $0 (type $f32_i32_i32_=>_i32)
     if
      local.get $i
      br $~lib/typedarray/FIND_LAST_INDEX<~lib/typedarray/Float32Array,f32>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.sub
     local.set $i
     br $for-loop|0
    end
   end
   i32.const -1
  end
 )
 (func $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Float32Array,f32>~anonymous|1 (type $f32_i32_i32_=>_i32) (param $value f32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  f32.const 4
  f32.eq
 )
 (func $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Float64Array,f64>~anonymous|0 (type $f64_i32_i32_=>_i32) (param $value f64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  f64.const 2
  f64.eq
 )
 (func $~lib/typedarray/Float64Array#findLastIndex (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $6 i32)
  block $~lib/typedarray/FIND_LAST_INDEX<~lib/typedarray/Float64Array,f64>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   local.get $array
   call $~lib/typedarray/Float64Array#get:length
   i32.const 1
   i32.sub
   local.set $i
   loop $for-loop|0
    local.get $i
    i32.const 0
    i32.ge_s
    local.set $6
    local.get $6
    if
     local.get $ptr
     local.get $i
     i32.const 3
     i32.shl
     i32.add
     f64.load $0
     local.get $i
     local.get $array
     i32.const 3
     global.set $~argumentsLength
     local.get $fn|3
     i32.load $0
     call_indirect $0 (type $f64_i32_i32_=>_i32)
     if
      local.get $i
      br $~lib/typedarray/FIND_LAST_INDEX<~lib/typedarray/Float64Array,f64>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.sub
     local.set $i
     br $for-loop|0
    end
   end
   i32.const -1
  end
 )
 (func $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Float64Array,f64>~anonymous|1 (type $f64_i32_i32_=>_i32) (param $value f64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  f64.const 4
  f64.eq
 )
 (func $std/typedarray/testArrayEvery<~lib/typedarray/Int8Array,i8>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.extend8_s
  i32.const 2
  i32.rem_s
  i32.const 0
  i32.eq
 )
 (func $~lib/typedarray/Int8Array#every (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  block $~lib/typedarray/EVERY<~lib/typedarray/Int8Array,i8>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   i32.const 0
   local.set $i
   local.get $array
   call $~lib/typedarray/Int8Array#get:length
   local.set $k
   loop $for-loop|0
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     block $for-continue|0
      local.get $ptr
      local.get $i
      i32.const 0
      i32.shl
      i32.add
      i32.load8_s $0
      local.get $i
      local.get $array
      i32.const 3
      global.set $~argumentsLength
      local.get $fn|3
      i32.load $0
      call_indirect $0 (type $i32_i32_i32_=>_i32)
      if
       br $for-continue|0
      end
      i32.const 0
      br $~lib/typedarray/EVERY<~lib/typedarray/Int8Array,i8>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   i32.const 1
  end
 )
 (func $std/typedarray/testArrayEvery<~lib/typedarray/Int8Array,i8>~anonymous|1 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.extend8_s
  i32.const 2
  i32.eq
 )
 (func $std/typedarray/testArrayEvery<~lib/typedarray/Uint8Array,u8>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 255
  i32.and
  i32.const 2
  i32.rem_u
  i32.const 0
  i32.eq
 )
 (func $~lib/typedarray/Uint8Array#every (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  block $~lib/typedarray/EVERY<~lib/typedarray/Uint8Array,u8>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   i32.const 0
   local.set $i
   local.get $array
   call $~lib/typedarray/Uint8Array#get:length
   local.set $k
   loop $for-loop|0
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     block $for-continue|0
      local.get $ptr
      local.get $i
      i32.const 0
      i32.shl
      i32.add
      i32.load8_u $0
      local.get $i
      local.get $array
      i32.const 3
      global.set $~argumentsLength
      local.get $fn|3
      i32.load $0
      call_indirect $0 (type $i32_i32_i32_=>_i32)
      if
       br $for-continue|0
      end
      i32.const 0
      br $~lib/typedarray/EVERY<~lib/typedarray/Uint8Array,u8>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   i32.const 1
  end
 )
 (func $std/typedarray/testArrayEvery<~lib/typedarray/Uint8Array,u8>~anonymous|1 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 255
  i32.and
  i32.const 2
  i32.eq
 )
 (func $std/typedarray/testArrayEvery<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 255
  i32.and
  i32.const 2
  i32.rem_u
  i32.const 0
  i32.eq
 )
 (func $~lib/typedarray/Uint8ClampedArray#every (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  block $~lib/typedarray/EVERY<~lib/typedarray/Uint8ClampedArray,u8>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   i32.const 0
   local.set $i
   local.get $array
   call $~lib/typedarray/Uint8ClampedArray#get:length
   local.set $k
   loop $for-loop|0
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     block $for-continue|0
      local.get $ptr
      local.get $i
      i32.const 0
      i32.shl
      i32.add
      i32.load8_u $0
      local.get $i
      local.get $array
      i32.const 3
      global.set $~argumentsLength
      local.get $fn|3
      i32.load $0
      call_indirect $0 (type $i32_i32_i32_=>_i32)
      if
       br $for-continue|0
      end
      i32.const 0
      br $~lib/typedarray/EVERY<~lib/typedarray/Uint8ClampedArray,u8>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   i32.const 1
  end
 )
 (func $std/typedarray/testArrayEvery<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|1 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 255
  i32.and
  i32.const 2
  i32.eq
 )
 (func $std/typedarray/testArrayEvery<~lib/typedarray/Int16Array,i16>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.extend16_s
  i32.const 2
  i32.rem_s
  i32.const 0
  i32.eq
 )
 (func $~lib/typedarray/Int16Array#every (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  block $~lib/typedarray/EVERY<~lib/typedarray/Int16Array,i16>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   i32.const 0
   local.set $i
   local.get $array
   call $~lib/typedarray/Int16Array#get:length
   local.set $k
   loop $for-loop|0
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     block $for-continue|0
      local.get $ptr
      local.get $i
      i32.const 1
      i32.shl
      i32.add
      i32.load16_s $0
      local.get $i
      local.get $array
      i32.const 3
      global.set $~argumentsLength
      local.get $fn|3
      i32.load $0
      call_indirect $0 (type $i32_i32_i32_=>_i32)
      if
       br $for-continue|0
      end
      i32.const 0
      br $~lib/typedarray/EVERY<~lib/typedarray/Int16Array,i16>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   i32.const 1
  end
 )
 (func $std/typedarray/testArrayEvery<~lib/typedarray/Int16Array,i16>~anonymous|1 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.extend16_s
  i32.const 2
  i32.eq
 )
 (func $std/typedarray/testArrayEvery<~lib/typedarray/Uint16Array,u16>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 65535
  i32.and
  i32.const 2
  i32.rem_u
  i32.const 0
  i32.eq
 )
 (func $~lib/typedarray/Uint16Array#every (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  block $~lib/typedarray/EVERY<~lib/typedarray/Uint16Array,u16>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   i32.const 0
   local.set $i
   local.get $array
   call $~lib/typedarray/Uint16Array#get:length
   local.set $k
   loop $for-loop|0
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     block $for-continue|0
      local.get $ptr
      local.get $i
      i32.const 1
      i32.shl
      i32.add
      i32.load16_u $0
      local.get $i
      local.get $array
      i32.const 3
      global.set $~argumentsLength
      local.get $fn|3
      i32.load $0
      call_indirect $0 (type $i32_i32_i32_=>_i32)
      if
       br $for-continue|0
      end
      i32.const 0
      br $~lib/typedarray/EVERY<~lib/typedarray/Uint16Array,u16>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   i32.const 1
  end
 )
 (func $std/typedarray/testArrayEvery<~lib/typedarray/Uint16Array,u16>~anonymous|1 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 65535
  i32.and
  i32.const 2
  i32.eq
 )
 (func $std/typedarray/testArrayEvery<~lib/typedarray/Int32Array,i32>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 2
  i32.rem_s
  i32.const 0
  i32.eq
 )
 (func $~lib/typedarray/Int32Array#every (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  block $~lib/typedarray/EVERY<~lib/typedarray/Int32Array,i32>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   i32.const 0
   local.set $i
   local.get $array
   call $~lib/typedarray/Int32Array#get:length
   local.set $k
   loop $for-loop|0
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     block $for-continue|0
      local.get $ptr
      local.get $i
      i32.const 2
      i32.shl
      i32.add
      i32.load $0
      local.get $i
      local.get $array
      i32.const 3
      global.set $~argumentsLength
      local.get $fn|3
      i32.load $0
      call_indirect $0 (type $i32_i32_i32_=>_i32)
      if
       br $for-continue|0
      end
      i32.const 0
      br $~lib/typedarray/EVERY<~lib/typedarray/Int32Array,i32>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   i32.const 1
  end
 )
 (func $std/typedarray/testArrayEvery<~lib/typedarray/Int32Array,i32>~anonymous|1 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 2
  i32.eq
 )
 (func $std/typedarray/testArrayEvery<~lib/typedarray/Uint32Array,u32>~anonymous|0 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 2
  i32.rem_u
  i32.const 0
  i32.eq
 )
 (func $~lib/typedarray/Uint32Array#every (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  block $~lib/typedarray/EVERY<~lib/typedarray/Uint32Array,u32>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   i32.const 0
   local.set $i
   local.get $array
   call $~lib/typedarray/Uint32Array#get:length
   local.set $k
   loop $for-loop|0
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     block $for-continue|0
      local.get $ptr
      local.get $i
      i32.const 2
      i32.shl
      i32.add
      i32.load $0
      local.get $i
      local.get $array
      i32.const 3
      global.set $~argumentsLength
      local.get $fn|3
      i32.load $0
      call_indirect $0 (type $i32_i32_i32_=>_i32)
      if
       br $for-continue|0
      end
      i32.const 0
      br $~lib/typedarray/EVERY<~lib/typedarray/Uint32Array,u32>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   i32.const 1
  end
 )
 (func $std/typedarray/testArrayEvery<~lib/typedarray/Uint32Array,u32>~anonymous|1 (type $i32_i32_i32_=>_i32) (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 2
  i32.eq
 )
 (func $std/typedarray/testArrayEvery<~lib/typedarray/Int64Array,i64>~anonymous|0 (type $i64_i32_i32_=>_i32) (param $value i64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i64.const 2
  i64.rem_s
  i64.const 0
  i64.eq
 )
 (func $~lib/typedarray/Int64Array#every (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  block $~lib/typedarray/EVERY<~lib/typedarray/Int64Array,i64>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   i32.const 0
   local.set $i
   local.get $array
   call $~lib/typedarray/Int64Array#get:length
   local.set $k
   loop $for-loop|0
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     block $for-continue|0
      local.get $ptr
      local.get $i
      i32.const 3
      i32.shl
      i32.add
      i64.load $0
      local.get $i
      local.get $array
      i32.const 3
      global.set $~argumentsLength
      local.get $fn|3
      i32.load $0
      call_indirect $0 (type $i64_i32_i32_=>_i32)
      if
       br $for-continue|0
      end
      i32.const 0
      br $~lib/typedarray/EVERY<~lib/typedarray/Int64Array,i64>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   i32.const 1
  end
 )
 (func $std/typedarray/testArrayEvery<~lib/typedarray/Int64Array,i64>~anonymous|1 (type $i64_i32_i32_=>_i32) (param $value i64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i64.const 2
  i64.eq
 )
 (func $std/typedarray/testArrayEvery<~lib/typedarray/Uint64Array,u64>~anonymous|0 (type $i64_i32_i32_=>_i32) (param $value i64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i64.const 2
  i64.rem_u
  i64.const 0
  i64.eq
 )
 (func $~lib/typedarray/Uint64Array#every (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  block $~lib/typedarray/EVERY<~lib/typedarray/Uint64Array,u64>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   i32.const 0
   local.set $i
   local.get $array
   call $~lib/typedarray/Uint64Array#get:length
   local.set $k
   loop $for-loop|0
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     block $for-continue|0
      local.get $ptr
      local.get $i
      i32.const 3
      i32.shl
      i32.add
      i64.load $0
      local.get $i
      local.get $array
      i32.const 3
      global.set $~argumentsLength
      local.get $fn|3
      i32.load $0
      call_indirect $0 (type $i64_i32_i32_=>_i32)
      if
       br $for-continue|0
      end
      i32.const 0
      br $~lib/typedarray/EVERY<~lib/typedarray/Uint64Array,u64>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   i32.const 1
  end
 )
 (func $std/typedarray/testArrayEvery<~lib/typedarray/Uint64Array,u64>~anonymous|1 (type $i64_i32_i32_=>_i32) (param $value i64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i64.const 2
  i64.eq
 )
 (func $~lib/math/NativeMathf.mod (type $f32_f32_=>_f32) (param $x f32) (param $y f32) (result f32)
  (local $ux i32)
  (local $uy i32)
  (local $ex i32)
  (local $ey i32)
  (local $sm i32)
  (local $uy1 i32)
  (local $m f32)
  (local $ux1 i32)
  (local $10 i32)
  (local $shift i32)
  local.get $y
  f32.abs
  f32.const 1
  f32.eq
  if
   local.get $x
   local.get $x
   f32.trunc
   f32.sub
   local.get $x
   f32.copysign
   return
  end
  local.get $x
  i32.reinterpret_f32
  local.set $ux
  local.get $y
  i32.reinterpret_f32
  local.set $uy
  local.get $ux
  i32.const 23
  i32.shr_u
  i32.const 255
  i32.and
  local.set $ex
  local.get $uy
  i32.const 23
  i32.shr_u
  i32.const 255
  i32.and
  local.set $ey
  local.get $ux
  i32.const -2147483648
  i32.and
  local.set $sm
  local.get $uy
  i32.const 1
  i32.shl
  local.set $uy1
  local.get $uy1
  i32.const 0
  i32.eq
  if (result i32)
   i32.const 1
  else
   local.get $ex
   i32.const 255
   i32.eq
  end
  if (result i32)
   i32.const 1
  else
   local.get $y
   local.get $y
   f32.ne
  end
  if
   local.get $x
   local.get $y
   f32.mul
   local.set $m
   local.get $m
   local.get $m
   f32.div
   return
  end
  local.get $ux
  i32.const 1
  i32.shl
  local.set $ux1
  local.get $ux1
  local.get $uy1
  i32.le_u
  if
   local.get $x
   local.get $ux1
   local.get $uy1
   i32.ne
   f32.convert_i32_u
   f32.mul
   return
  end
  local.get $ex
  i32.eqz
  if
   local.get $ex
   local.get $ux
   i32.const 9
   i32.shl
   i32.clz
   i32.sub
   local.set $ex
   local.get $ux
   i32.const 1
   local.get $ex
   i32.sub
   i32.shl
   local.set $ux
  else
   local.get $ux
   i32.const -1
   i32.const 9
   i32.shr_u
   i32.and
   local.set $ux
   local.get $ux
   i32.const 1
   i32.const 23
   i32.shl
   i32.or
   local.set $ux
  end
  local.get $ey
  i32.eqz
  if
   local.get $ey
   local.get $uy
   i32.const 9
   i32.shl
   i32.clz
   i32.sub
   local.set $ey
   local.get $uy
   i32.const 1
   local.get $ey
   i32.sub
   i32.shl
   local.set $uy
  else
   local.get $uy
   i32.const -1
   i32.const 9
   i32.shr_u
   i32.and
   local.set $uy
   local.get $uy
   i32.const 1
   i32.const 23
   i32.shl
   i32.or
   local.set $uy
  end
  loop $while-continue|0
   local.get $ex
   local.get $ey
   i32.gt_s
   local.set $10
   local.get $10
   if
    local.get $ux
    local.get $uy
    i32.ge_u
    if
     local.get $ux
     local.get $uy
     i32.eq
     if
      f32.const 0
      local.get $x
      f32.mul
      return
     end
     local.get $ux
     local.get $uy
     i32.sub
     local.set $ux
    end
    local.get $ux
    i32.const 1
    i32.shl
    local.set $ux
    local.get $ex
    i32.const 1
    i32.sub
    local.set $ex
    br $while-continue|0
   end
  end
  local.get $ux
  local.get $uy
  i32.ge_u
  if
   local.get $ux
   local.get $uy
   i32.eq
   if
    f32.const 0
    local.get $x
    f32.mul
    return
   end
   local.get $ux
   local.get $uy
   i32.sub
   local.set $ux
  end
  local.get $ux
  i32.const 8
  i32.shl
  i32.clz
  local.set $shift
  local.get $ex
  local.get $shift
  i32.sub
  local.set $ex
  local.get $ux
  local.get $shift
  i32.shl
  local.set $ux
  local.get $ex
  i32.const 0
  i32.gt_s
  if
   local.get $ux
   i32.const 1
   i32.const 23
   i32.shl
   i32.sub
   local.set $ux
   local.get $ux
   local.get $ex
   i32.const 23
   i32.shl
   i32.or
   local.set $ux
  else
   local.get $ux
   i32.const 0
   local.get $ex
   i32.sub
   i32.const 1
   i32.add
   i32.shr_u
   local.set $ux
  end
  local.get $ux
  local.get $sm
  i32.or
  f32.reinterpret_i32
 )
 (func $std/typedarray/testArrayEvery<~lib/typedarray/Float32Array,f32>~anonymous|0 (type $f32_i32_i32_=>_i32) (param $value f32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  f32.const 2
  call $~lib/math/NativeMathf.mod
  f32.const 0
  f32.eq
 )
 (func $~lib/typedarray/Float32Array#every (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  block $~lib/typedarray/EVERY<~lib/typedarray/Float32Array,f32>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   i32.const 0
   local.set $i
   local.get $array
   call $~lib/typedarray/Float32Array#get:length
   local.set $k
   loop $for-loop|0
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     block $for-continue|0
      local.get $ptr
      local.get $i
      i32.const 2
      i32.shl
      i32.add
      f32.load $0
      local.get $i
      local.get $array
      i32.const 3
      global.set $~argumentsLength
      local.get $fn|3
      i32.load $0
      call_indirect $0 (type $f32_i32_i32_=>_i32)
      if
       br $for-continue|0
      end
      i32.const 0
      br $~lib/typedarray/EVERY<~lib/typedarray/Float32Array,f32>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   i32.const 1
  end
 )
 (func $std/typedarray/testArrayEvery<~lib/typedarray/Float32Array,f32>~anonymous|1 (type $f32_i32_i32_=>_i32) (param $value f32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  f32.const 2
  f32.eq
 )
 (func $~lib/math/NativeMath.mod (type $f64_f64_=>_f64) (param $x f64) (param $y f64) (result f64)
  (local $ux i64)
  (local $uy i64)
  (local $ex i64)
  (local $ey i64)
  (local $sx i64)
  (local $uy1 i64)
  (local $m f64)
  (local $ux1 i64)
  (local $10 i32)
  (local $shift i64)
  local.get $y
  f64.abs
  f64.const 1
  f64.eq
  if
   local.get $x
   local.get $x
   f64.trunc
   f64.sub
   local.get $x
   f64.copysign
   return
  end
  local.get $x
  i64.reinterpret_f64
  local.set $ux
  local.get $y
  i64.reinterpret_f64
  local.set $uy
  local.get $ux
  i64.const 52
  i64.shr_u
  i64.const 2047
  i64.and
  local.set $ex
  local.get $uy
  i64.const 52
  i64.shr_u
  i64.const 2047
  i64.and
  local.set $ey
  local.get $ux
  i64.const 63
  i64.shr_u
  local.set $sx
  local.get $uy
  i64.const 1
  i64.shl
  local.set $uy1
  local.get $uy1
  i64.const 0
  i64.eq
  if (result i32)
   i32.const 1
  else
   local.get $ex
   i64.const 2047
   i64.eq
  end
  if (result i32)
   i32.const 1
  else
   local.get $y
   local.get $y
   f64.ne
  end
  if
   local.get $x
   local.get $y
   f64.mul
   local.set $m
   local.get $m
   local.get $m
   f64.div
   return
  end
  local.get $ux
  i64.const 1
  i64.shl
  local.set $ux1
  local.get $ux1
  local.get $uy1
  i64.le_u
  if
   local.get $x
   local.get $ux1
   local.get $uy1
   i64.ne
   f64.convert_i32_u
   f64.mul
   return
  end
  local.get $ex
  i64.const 0
  i64.ne
  i32.eqz
  if
   local.get $ex
   local.get $ux
   i64.const 12
   i64.shl
   i64.clz
   i64.sub
   local.set $ex
   local.get $ux
   i64.const 1
   local.get $ex
   i64.sub
   i64.shl
   local.set $ux
  else
   local.get $ux
   i64.const -1
   i64.const 12
   i64.shr_u
   i64.and
   local.set $ux
   local.get $ux
   i64.const 1
   i64.const 52
   i64.shl
   i64.or
   local.set $ux
  end
  local.get $ey
  i64.const 0
  i64.ne
  i32.eqz
  if
   local.get $ey
   local.get $uy
   i64.const 12
   i64.shl
   i64.clz
   i64.sub
   local.set $ey
   local.get $uy
   i64.const 1
   local.get $ey
   i64.sub
   i64.shl
   local.set $uy
  else
   local.get $uy
   i64.const -1
   i64.const 12
   i64.shr_u
   i64.and
   local.set $uy
   local.get $uy
   i64.const 1
   i64.const 52
   i64.shl
   i64.or
   local.set $uy
  end
  loop $while-continue|0
   local.get $ex
   local.get $ey
   i64.gt_s
   local.set $10
   local.get $10
   if
    local.get $ux
    local.get $uy
    i64.ge_u
    if
     local.get $ux
     local.get $uy
     i64.eq
     if
      f64.const 0
      local.get $x
      f64.mul
      return
     end
     local.get $ux
     local.get $uy
     i64.sub
     local.set $ux
    end
    local.get $ux
    i64.const 1
    i64.shl
    local.set $ux
    local.get $ex
    i64.const 1
    i64.sub
    local.set $ex
    br $while-continue|0
   end
  end
  local.get $ux
  local.get $uy
  i64.ge_u
  if
   local.get $ux
   local.get $uy
   i64.eq
   if
    f64.const 0
    local.get $x
    f64.mul
    return
   end
   local.get $ux
   local.get $uy
   i64.sub
   local.set $ux
  end
  local.get $ux
  i64.const 11
  i64.shl
  i64.clz
  local.set $shift
  local.get $ex
  local.get $shift
  i64.sub
  local.set $ex
  local.get $ux
  local.get $shift
  i64.shl
  local.set $ux
  local.get $ex
  i64.const 0
  i64.gt_s
  if
   local.get $ux
   i64.const 1
   i64.const 52
   i64.shl
   i64.sub
   local.set $ux
   local.get $ux
   local.get $ex
   i64.const 52
   i64.shl
   i64.or
   local.set $ux
  else
   local.get $ux
   i64.const 0
   local.get $ex
   i64.sub
   i64.const 1
   i64.add
   i64.shr_u
   local.set $ux
  end
  local.get $ux
  local.get $sx
  i64.const 63
  i64.shl
  i64.or
  f64.reinterpret_i64
 )
 (func $std/typedarray/testArrayEvery<~lib/typedarray/Float64Array,f64>~anonymous|0 (type $f64_i32_i32_=>_i32) (param $value f64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  f64.const 2
  call $~lib/math/NativeMath.mod
  f64.const 0
  f64.eq
 )
 (func $~lib/typedarray/Float64Array#every (type $i32_i32_=>_i32) (param $this i32) (param $fn i32) (result i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  block $~lib/typedarray/EVERY<~lib/typedarray/Float64Array,f64>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $fn
   local.set $fn|3
   local.get $array
   i32.load $0 offset=4
   local.set $ptr
   i32.const 0
   local.set $i
   local.get $array
   call $~lib/typedarray/Float64Array#get:length
   local.set $k
   loop $for-loop|0
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     block $for-continue|0
      local.get $ptr
      local.get $i
      i32.const 3
      i32.shl
      i32.add
      f64.load $0
      local.get $i
      local.get $array
      i32.const 3
      global.set $~argumentsLength
      local.get $fn|3
      i32.load $0
      call_indirect $0 (type $f64_i32_i32_=>_i32)
      if
       br $for-continue|0
      end
      i32.const 0
      br $~lib/typedarray/EVERY<~lib/typedarray/Float64Array,f64>|inlined.0
     end
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   i32.const 1
  end
 )
 (func $std/typedarray/testArrayEvery<~lib/typedarray/Float64Array,f64>~anonymous|1 (type $f64_i32_i32_=>_i32) (param $value f64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  f64.const 2
  f64.eq
 )
 (func $std/typedarray/testArrayForEach<~lib/typedarray/Int8Array,i8>~anonymous|0 (type $i32_i32_i32_=>_none) (param $value i32) (param $index i32) (param $self i32)
  (local $matchedValue i32)
  global.get $std/typedarray/forEachValues
  local.get $index
  call $~lib/array/Array<i32>#__get
  local.set $matchedValue
  local.get $value
  i32.extend8_s
  local.get $matchedValue
  i32.extend8_s
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $index
  global.get $std/typedarray/forEachCallCount
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/typedarray/forEachSelf
  local.get $self
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/typedarray/forEachCallCount
  i32.const 1
  i32.add
  global.set $std/typedarray/forEachCallCount
 )
 (func $~lib/typedarray/Int8Array#forEach (type $i32_i32_=>_none) (param $this i32) (param $fn i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|3
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  i32.const 0
  local.set $i
  local.get $array
  call $~lib/typedarray/Int8Array#get:length
  local.set $k
  loop $for-loop|0
   local.get $i
   local.get $k
   i32.lt_s
   local.set $7
   local.get $7
   if
    local.get $ptr
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    i32.load8_s $0
    local.get $i
    local.get $array
    i32.const 3
    global.set $~argumentsLength
    local.get $fn|3
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_none)
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $std/typedarray/testArrayForEach<~lib/typedarray/Uint8Array,u8>~anonymous|0 (type $i32_i32_i32_=>_none) (param $value i32) (param $index i32) (param $self i32)
  (local $matchedValue i32)
  global.get $std/typedarray/forEachValues
  local.get $index
  call $~lib/array/Array<i32>#__get
  local.set $matchedValue
  local.get $value
  i32.const 255
  i32.and
  local.get $matchedValue
  i32.const 255
  i32.and
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $index
  global.get $std/typedarray/forEachCallCount
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/typedarray/forEachSelf
  local.get $self
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/typedarray/forEachCallCount
  i32.const 1
  i32.add
  global.set $std/typedarray/forEachCallCount
 )
 (func $~lib/typedarray/Uint8Array#forEach (type $i32_i32_=>_none) (param $this i32) (param $fn i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|3
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  i32.const 0
  local.set $i
  local.get $array
  call $~lib/typedarray/Uint8Array#get:length
  local.set $k
  loop $for-loop|0
   local.get $i
   local.get $k
   i32.lt_s
   local.set $7
   local.get $7
   if
    local.get $ptr
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    i32.load8_u $0
    local.get $i
    local.get $array
    i32.const 3
    global.set $~argumentsLength
    local.get $fn|3
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_none)
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $std/typedarray/testArrayForEach<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|0 (type $i32_i32_i32_=>_none) (param $value i32) (param $index i32) (param $self i32)
  (local $matchedValue i32)
  global.get $std/typedarray/forEachValues
  local.get $index
  call $~lib/array/Array<i32>#__get
  local.set $matchedValue
  local.get $value
  i32.const 255
  i32.and
  local.get $matchedValue
  i32.const 255
  i32.and
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $index
  global.get $std/typedarray/forEachCallCount
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/typedarray/forEachSelf
  local.get $self
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/typedarray/forEachCallCount
  i32.const 1
  i32.add
  global.set $std/typedarray/forEachCallCount
 )
 (func $~lib/typedarray/Uint8ClampedArray#forEach (type $i32_i32_=>_none) (param $this i32) (param $fn i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|3
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  i32.const 0
  local.set $i
  local.get $array
  call $~lib/typedarray/Uint8ClampedArray#get:length
  local.set $k
  loop $for-loop|0
   local.get $i
   local.get $k
   i32.lt_s
   local.set $7
   local.get $7
   if
    local.get $ptr
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    i32.load8_u $0
    local.get $i
    local.get $array
    i32.const 3
    global.set $~argumentsLength
    local.get $fn|3
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_none)
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $std/typedarray/testArrayForEach<~lib/typedarray/Int16Array,i16>~anonymous|0 (type $i32_i32_i32_=>_none) (param $value i32) (param $index i32) (param $self i32)
  (local $matchedValue i32)
  global.get $std/typedarray/forEachValues
  local.get $index
  call $~lib/array/Array<i32>#__get
  local.set $matchedValue
  local.get $value
  i32.extend16_s
  local.get $matchedValue
  i32.extend16_s
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $index
  global.get $std/typedarray/forEachCallCount
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/typedarray/forEachSelf
  local.get $self
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/typedarray/forEachCallCount
  i32.const 1
  i32.add
  global.set $std/typedarray/forEachCallCount
 )
 (func $~lib/typedarray/Int16Array#forEach (type $i32_i32_=>_none) (param $this i32) (param $fn i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|3
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  i32.const 0
  local.set $i
  local.get $array
  call $~lib/typedarray/Int16Array#get:length
  local.set $k
  loop $for-loop|0
   local.get $i
   local.get $k
   i32.lt_s
   local.set $7
   local.get $7
   if
    local.get $ptr
    local.get $i
    i32.const 1
    i32.shl
    i32.add
    i32.load16_s $0
    local.get $i
    local.get $array
    i32.const 3
    global.set $~argumentsLength
    local.get $fn|3
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_none)
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $std/typedarray/testArrayForEach<~lib/typedarray/Uint16Array,u16>~anonymous|0 (type $i32_i32_i32_=>_none) (param $value i32) (param $index i32) (param $self i32)
  (local $matchedValue i32)
  global.get $std/typedarray/forEachValues
  local.get $index
  call $~lib/array/Array<i32>#__get
  local.set $matchedValue
  local.get $value
  i32.const 65535
  i32.and
  local.get $matchedValue
  i32.const 65535
  i32.and
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $index
  global.get $std/typedarray/forEachCallCount
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/typedarray/forEachSelf
  local.get $self
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/typedarray/forEachCallCount
  i32.const 1
  i32.add
  global.set $std/typedarray/forEachCallCount
 )
 (func $~lib/typedarray/Uint16Array#forEach (type $i32_i32_=>_none) (param $this i32) (param $fn i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|3
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  i32.const 0
  local.set $i
  local.get $array
  call $~lib/typedarray/Uint16Array#get:length
  local.set $k
  loop $for-loop|0
   local.get $i
   local.get $k
   i32.lt_s
   local.set $7
   local.get $7
   if
    local.get $ptr
    local.get $i
    i32.const 1
    i32.shl
    i32.add
    i32.load16_u $0
    local.get $i
    local.get $array
    i32.const 3
    global.set $~argumentsLength
    local.get $fn|3
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_none)
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $std/typedarray/testArrayForEach<~lib/typedarray/Int32Array,i32>~anonymous|0 (type $i32_i32_i32_=>_none) (param $value i32) (param $index i32) (param $self i32)
  (local $matchedValue i32)
  global.get $std/typedarray/forEachValues
  local.get $index
  call $~lib/array/Array<i32>#__get
  local.set $matchedValue
  local.get $value
  local.get $matchedValue
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $index
  global.get $std/typedarray/forEachCallCount
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/typedarray/forEachSelf
  local.get $self
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/typedarray/forEachCallCount
  i32.const 1
  i32.add
  global.set $std/typedarray/forEachCallCount
 )
 (func $~lib/typedarray/Int32Array#forEach (type $i32_i32_=>_none) (param $this i32) (param $fn i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|3
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  i32.const 0
  local.set $i
  local.get $array
  call $~lib/typedarray/Int32Array#get:length
  local.set $k
  loop $for-loop|0
   local.get $i
   local.get $k
   i32.lt_s
   local.set $7
   local.get $7
   if
    local.get $ptr
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.get $i
    local.get $array
    i32.const 3
    global.set $~argumentsLength
    local.get $fn|3
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_none)
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $std/typedarray/testArrayForEach<~lib/typedarray/Uint32Array,u32>~anonymous|0 (type $i32_i32_i32_=>_none) (param $value i32) (param $index i32) (param $self i32)
  (local $matchedValue i32)
  global.get $std/typedarray/forEachValues
  local.get $index
  call $~lib/array/Array<i32>#__get
  local.set $matchedValue
  local.get $value
  local.get $matchedValue
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $index
  global.get $std/typedarray/forEachCallCount
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/typedarray/forEachSelf
  local.get $self
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/typedarray/forEachCallCount
  i32.const 1
  i32.add
  global.set $std/typedarray/forEachCallCount
 )
 (func $~lib/typedarray/Uint32Array#forEach (type $i32_i32_=>_none) (param $this i32) (param $fn i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|3
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  i32.const 0
  local.set $i
  local.get $array
  call $~lib/typedarray/Uint32Array#get:length
  local.set $k
  loop $for-loop|0
   local.get $i
   local.get $k
   i32.lt_s
   local.set $7
   local.get $7
   if
    local.get $ptr
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.get $i
    local.get $array
    i32.const 3
    global.set $~argumentsLength
    local.get $fn|3
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_none)
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $std/typedarray/testArrayForEach<~lib/typedarray/Int64Array,i64>~anonymous|0 (type $i64_i32_i32_=>_none) (param $value i64) (param $index i32) (param $self i32)
  (local $matchedValue i32)
  global.get $std/typedarray/forEachValues
  local.get $index
  call $~lib/array/Array<i32>#__get
  local.set $matchedValue
  local.get $value
  local.get $matchedValue
  i64.extend_i32_s
  i64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $index
  global.get $std/typedarray/forEachCallCount
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/typedarray/forEachSelf
  local.get $self
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/typedarray/forEachCallCount
  i32.const 1
  i32.add
  global.set $std/typedarray/forEachCallCount
 )
 (func $~lib/typedarray/Int64Array#forEach (type $i32_i32_=>_none) (param $this i32) (param $fn i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|3
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  i32.const 0
  local.set $i
  local.get $array
  call $~lib/typedarray/Int64Array#get:length
  local.set $k
  loop $for-loop|0
   local.get $i
   local.get $k
   i32.lt_s
   local.set $7
   local.get $7
   if
    local.get $ptr
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    local.get $i
    local.get $array
    i32.const 3
    global.set $~argumentsLength
    local.get $fn|3
    i32.load $0
    call_indirect $0 (type $i64_i32_i32_=>_none)
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $std/typedarray/testArrayForEach<~lib/typedarray/Uint64Array,u64>~anonymous|0 (type $i64_i32_i32_=>_none) (param $value i64) (param $index i32) (param $self i32)
  (local $matchedValue i32)
  global.get $std/typedarray/forEachValues
  local.get $index
  call $~lib/array/Array<i32>#__get
  local.set $matchedValue
  local.get $value
  local.get $matchedValue
  i64.extend_i32_s
  i64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $index
  global.get $std/typedarray/forEachCallCount
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/typedarray/forEachSelf
  local.get $self
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/typedarray/forEachCallCount
  i32.const 1
  i32.add
  global.set $std/typedarray/forEachCallCount
 )
 (func $~lib/typedarray/Uint64Array#forEach (type $i32_i32_=>_none) (param $this i32) (param $fn i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|3
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  i32.const 0
  local.set $i
  local.get $array
  call $~lib/typedarray/Uint64Array#get:length
  local.set $k
  loop $for-loop|0
   local.get $i
   local.get $k
   i32.lt_s
   local.set $7
   local.get $7
   if
    local.get $ptr
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    local.get $i
    local.get $array
    i32.const 3
    global.set $~argumentsLength
    local.get $fn|3
    i32.load $0
    call_indirect $0 (type $i64_i32_i32_=>_none)
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $std/typedarray/testArrayForEach<~lib/typedarray/Float32Array,f32>~anonymous|0 (type $f32_i32_i32_=>_none) (param $value f32) (param $index i32) (param $self i32)
  (local $matchedValue i32)
  global.get $std/typedarray/forEachValues
  local.get $index
  call $~lib/array/Array<i32>#__get
  local.set $matchedValue
  local.get $value
  local.get $matchedValue
  f32.convert_i32_s
  f32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $index
  global.get $std/typedarray/forEachCallCount
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/typedarray/forEachSelf
  local.get $self
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/typedarray/forEachCallCount
  i32.const 1
  i32.add
  global.set $std/typedarray/forEachCallCount
 )
 (func $~lib/typedarray/Float32Array#forEach (type $i32_i32_=>_none) (param $this i32) (param $fn i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|3
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  i32.const 0
  local.set $i
  local.get $array
  call $~lib/typedarray/Float32Array#get:length
  local.set $k
  loop $for-loop|0
   local.get $i
   local.get $k
   i32.lt_s
   local.set $7
   local.get $7
   if
    local.get $ptr
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    f32.load $0
    local.get $i
    local.get $array
    i32.const 3
    global.set $~argumentsLength
    local.get $fn|3
    i32.load $0
    call_indirect $0 (type $f32_i32_i32_=>_none)
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $std/typedarray/testArrayForEach<~lib/typedarray/Float64Array,f64>~anonymous|0 (type $f64_i32_i32_=>_none) (param $value f64) (param $index i32) (param $self i32)
  (local $matchedValue i32)
  global.get $std/typedarray/forEachValues
  local.get $index
  call $~lib/array/Array<i32>#__get
  local.set $matchedValue
  local.get $value
  local.get $matchedValue
  f64.convert_i32_s
  f64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $index
  global.get $std/typedarray/forEachCallCount
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/typedarray/forEachSelf
  local.get $self
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/typedarray/forEachCallCount
  i32.const 1
  i32.add
  global.set $std/typedarray/forEachCallCount
 )
 (func $~lib/typedarray/Float64Array#forEach (type $i32_i32_=>_none) (param $this i32) (param $fn i32)
  (local $array i32)
  (local $fn|3 i32)
  (local $ptr i32)
  (local $i i32)
  (local $k i32)
  (local $7 i32)
  local.get $this
  local.set $array
  local.get $fn
  local.set $fn|3
  local.get $array
  i32.load $0 offset=4
  local.set $ptr
  i32.const 0
  local.set $i
  local.get $array
  call $~lib/typedarray/Float64Array#get:length
  local.set $k
  loop $for-loop|0
   local.get $i
   local.get $k
   i32.lt_s
   local.set $7
   local.get $7
   if
    local.get $ptr
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    f64.load $0
    local.get $i
    local.get $array
    i32.const 3
    global.set $~argumentsLength
    local.get $fn|3
    i32.load $0
    call_indirect $0 (type $f64_i32_i32_=>_none)
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/util/bytes/REVERSE<u8> (type $i32_i32_=>_none) (param $ptr i32) (param $len i32)
  (local $i i32)
  (local $tail i32)
  (local $hlen i32)
  (local $5 i32)
  (local $front i32)
  (local $back i32)
  (local $8 i64)
  (local $9 i64)
  (local $temp i64)
  (local $11 i64)
  (local $12 i64)
  (local $13 i32)
  (local $front|14 i32)
  (local $back|15 i32)
  (local $temp|16 i32)
  local.get $len
  i32.const 1
  i32.gt_u
  if
   i32.const 0
   local.set $i
   local.get $len
   i32.const 1
   i32.shr_u
   local.set $hlen
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   i32.const 1
   i32.const 1
   i32.eq
   drop
   local.get $len
   i32.const 8
   i32.sub
   local.set $tail
   loop $while-continue|0
    local.get $i
    i32.const 7
    i32.add
    local.get $hlen
    i32.lt_u
    local.set $5
    local.get $5
    if
     local.get $ptr
     local.get $i
     i32.add
     local.set $front
     local.get $ptr
     local.get $tail
     i32.add
     local.get $i
     i32.sub
     local.set $back
     local.get $front
     i64.load $0
     local.tee $8
     i64.const 8
     i64.shr_u
     i64.const 71777214294589695
     i64.and
     local.get $8
     i64.const 71777214294589695
     i64.and
     i64.const 8
     i64.shl
     i64.or
     local.tee $9
     i64.const 16
     i64.shr_u
     i64.const 281470681808895
     i64.and
     local.get $9
     i64.const 281470681808895
     i64.and
     i64.const 16
     i64.shl
     i64.or
     i64.const 32
     i64.rotr
     local.set $temp
     local.get $front
     local.get $back
     i64.load $0
     local.tee $11
     i64.const 8
     i64.shr_u
     i64.const 71777214294589695
     i64.and
     local.get $11
     i64.const 71777214294589695
     i64.and
     i64.const 8
     i64.shl
     i64.or
     local.tee $12
     i64.const 16
     i64.shr_u
     i64.const 281470681808895
     i64.and
     local.get $12
     i64.const 281470681808895
     i64.and
     i64.const 16
     i64.shl
     i64.or
     i64.const 32
     i64.rotr
     i64.store $0
     local.get $back
     local.get $temp
     i64.store $0
     local.get $i
     i32.const 8
     i32.add
     local.set $i
     br $while-continue|0
    end
   end
   i32.const 1
   i32.const 2
   i32.eq
   drop
   local.get $len
   i32.const 1
   i32.sub
   local.set $tail
   loop $while-continue|1
    local.get $i
    local.get $hlen
    i32.lt_u
    local.set $13
    local.get $13
    if
     local.get $ptr
     local.get $i
     i32.const 0
     i32.shl
     i32.add
     local.set $front|14
     local.get $ptr
     local.get $tail
     local.get $i
     i32.sub
     i32.const 0
     i32.shl
     i32.add
     local.set $back|15
     local.get $front|14
     i32.load8_u $0
     local.set $temp|16
     local.get $front|14
     local.get $back|15
     i32.load8_u $0
     i32.store8 $0
     local.get $back|15
     local.get $temp|16
     i32.store8 $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $while-continue|1
    end
   end
  end
 )
 (func $~lib/typedarray/Int8Array#reverse (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Int8Array#get:length
  call $~lib/util/bytes/REVERSE<u8>
  local.get $this
 )
 (func $~lib/typedarray/Uint8Array#reverse (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Uint8Array#get:length
  call $~lib/util/bytes/REVERSE<u8>
  local.get $this
 )
 (func $~lib/typedarray/Uint8Array#subarray (type $i32_i32_i32_=>_i32) (param $this i32) (param $begin i32) (param $end i32) (result i32)
  (local $array i32)
  (local $begin|4 i32)
  (local $end|5 i32)
  (local $len i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $out i32)
  (local $buf i32)
  local.get $this
  local.set $array
  local.get $begin
  local.set $begin|4
  local.get $end
  local.set $end|5
  local.get $array
  call $~lib/typedarray/Uint8Array#get:length
  local.set $len
  local.get $begin|4
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $begin|4
   i32.add
   local.tee $7
   i32.const 0
   local.tee $8
   local.get $7
   local.get $8
   i32.gt_s
   select
  else
   local.get $begin|4
   local.tee $9
   local.get $len
   local.tee $10
   local.get $9
   local.get $10
   i32.lt_s
   select
  end
  local.set $begin|4
  local.get $end|5
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $end|5
   i32.add
   local.tee $11
   i32.const 0
   local.tee $12
   local.get $11
   local.get $12
   i32.gt_s
   select
  else
   local.get $end|5
   local.tee $13
   local.get $len
   local.tee $14
   local.get $13
   local.get $14
   i32.lt_s
   select
  end
  local.set $end|5
  local.get $end|5
  local.tee $15
  local.get $begin|4
  local.tee $16
  local.get $15
  local.get $16
  i32.gt_s
  select
  local.set $end|5
  i32.const 12
  i32.const 4
  call $~lib/rt/stub/__new
  local.set $out
  local.get $array
  i32.load $0
  local.set $buf
  local.get $out
  local.get $buf
  i32.store $0
  local.get $out
  local.get $buf
  i32.const 0
  call $~lib/rt/stub/__link
  local.get $out
  local.get $array
  i32.load $0 offset=4
  local.get $begin|4
  i32.const 0
  i32.shl
  i32.add
  i32.store $0 offset=4
  local.get $out
  local.get $end|5
  local.get $begin|4
  i32.sub
  i32.const 0
  i32.shl
  i32.store $0 offset=8
  local.get $out
 )
 (func $~lib/typedarray/Uint8ClampedArray#reverse (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Uint8ClampedArray#get:length
  call $~lib/util/bytes/REVERSE<u8>
  local.get $this
 )
 (func $~lib/typedarray/Uint8ClampedArray#subarray (type $i32_i32_i32_=>_i32) (param $this i32) (param $start i32) (param $end i32) (result i32)
  (local $array i32)
  (local $begin i32)
  (local $end|5 i32)
  (local $len i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $out i32)
  (local $buf i32)
  local.get $this
  local.set $array
  local.get $start
  local.set $begin
  local.get $end
  local.set $end|5
  local.get $array
  call $~lib/typedarray/Uint8ClampedArray#get:length
  local.set $len
  local.get $begin
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $begin
   i32.add
   local.tee $7
   i32.const 0
   local.tee $8
   local.get $7
   local.get $8
   i32.gt_s
   select
  else
   local.get $begin
   local.tee $9
   local.get $len
   local.tee $10
   local.get $9
   local.get $10
   i32.lt_s
   select
  end
  local.set $begin
  local.get $end|5
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $end|5
   i32.add
   local.tee $11
   i32.const 0
   local.tee $12
   local.get $11
   local.get $12
   i32.gt_s
   select
  else
   local.get $end|5
   local.tee $13
   local.get $len
   local.tee $14
   local.get $13
   local.get $14
   i32.lt_s
   select
  end
  local.set $end|5
  local.get $end|5
  local.tee $15
  local.get $begin
  local.tee $16
  local.get $15
  local.get $16
  i32.gt_s
  select
  local.set $end|5
  i32.const 12
  i32.const 5
  call $~lib/rt/stub/__new
  local.set $out
  local.get $array
  i32.load $0
  local.set $buf
  local.get $out
  local.get $buf
  i32.store $0
  local.get $out
  local.get $buf
  i32.const 0
  call $~lib/rt/stub/__link
  local.get $out
  local.get $array
  i32.load $0 offset=4
  local.get $begin
  i32.const 0
  i32.shl
  i32.add
  i32.store $0 offset=4
  local.get $out
  local.get $end|5
  local.get $begin
  i32.sub
  i32.const 0
  i32.shl
  i32.store $0 offset=8
  local.get $out
 )
 (func $~lib/util/bytes/REVERSE<u16> (type $i32_i32_=>_none) (param $ptr i32) (param $len i32)
  (local $i i32)
  (local $tail i32)
  (local $hlen i32)
  (local $5 i32)
  (local $front i32)
  (local $back i32)
  (local $temp i32)
  (local $9 i32)
  (local $front|10 i32)
  (local $back|11 i32)
  (local $temp|12 i32)
  local.get $len
  i32.const 1
  i32.gt_u
  if
   i32.const 0
   local.set $i
   local.get $len
   i32.const 1
   i32.shr_u
   local.set $hlen
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   i32.const 2
   i32.const 1
   i32.eq
   drop
   i32.const 2
   i32.const 2
   i32.eq
   drop
   local.get $len
   i32.const 2
   i32.sub
   local.set $tail
   loop $while-continue|0
    local.get $i
    i32.const 1
    i32.add
    local.get $hlen
    i32.lt_u
    local.set $5
    local.get $5
    if
     local.get $ptr
     local.get $i
     i32.const 1
     i32.shl
     i32.add
     local.set $front
     local.get $ptr
     local.get $tail
     local.get $i
     i32.sub
     i32.const 1
     i32.shl
     i32.add
     local.set $back
     local.get $back
     i32.load $0
     i32.const 16
     i32.rotr
     local.set $temp
     local.get $back
     local.get $front
     i32.load $0
     i32.const 16
     i32.rotr
     i32.store $0
     local.get $front
     local.get $temp
     i32.store $0
     local.get $i
     i32.const 2
     i32.add
     local.set $i
     br $while-continue|0
    end
   end
   local.get $len
   i32.const 1
   i32.sub
   local.set $tail
   loop $while-continue|1
    local.get $i
    local.get $hlen
    i32.lt_u
    local.set $9
    local.get $9
    if
     local.get $ptr
     local.get $i
     i32.const 1
     i32.shl
     i32.add
     local.set $front|10
     local.get $ptr
     local.get $tail
     local.get $i
     i32.sub
     i32.const 1
     i32.shl
     i32.add
     local.set $back|11
     local.get $front|10
     i32.load16_u $0
     local.set $temp|12
     local.get $front|10
     local.get $back|11
     i32.load16_u $0
     i32.store16 $0
     local.get $back|11
     local.get $temp|12
     i32.store16 $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $while-continue|1
    end
   end
  end
 )
 (func $~lib/typedarray/Int16Array#reverse (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Int16Array#get:length
  call $~lib/util/bytes/REVERSE<u16>
  local.get $this
 )
 (func $~lib/typedarray/Int16Array#subarray (type $i32_i32_i32_=>_i32) (param $this i32) (param $begin i32) (param $end i32) (result i32)
  (local $array i32)
  (local $begin|4 i32)
  (local $end|5 i32)
  (local $len i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $out i32)
  (local $buf i32)
  local.get $this
  local.set $array
  local.get $begin
  local.set $begin|4
  local.get $end
  local.set $end|5
  local.get $array
  call $~lib/typedarray/Int16Array#get:length
  local.set $len
  local.get $begin|4
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $begin|4
   i32.add
   local.tee $7
   i32.const 0
   local.tee $8
   local.get $7
   local.get $8
   i32.gt_s
   select
  else
   local.get $begin|4
   local.tee $9
   local.get $len
   local.tee $10
   local.get $9
   local.get $10
   i32.lt_s
   select
  end
  local.set $begin|4
  local.get $end|5
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $end|5
   i32.add
   local.tee $11
   i32.const 0
   local.tee $12
   local.get $11
   local.get $12
   i32.gt_s
   select
  else
   local.get $end|5
   local.tee $13
   local.get $len
   local.tee $14
   local.get $13
   local.get $14
   i32.lt_s
   select
  end
  local.set $end|5
  local.get $end|5
  local.tee $15
  local.get $begin|4
  local.tee $16
  local.get $15
  local.get $16
  i32.gt_s
  select
  local.set $end|5
  i32.const 12
  i32.const 6
  call $~lib/rt/stub/__new
  local.set $out
  local.get $array
  i32.load $0
  local.set $buf
  local.get $out
  local.get $buf
  i32.store $0
  local.get $out
  local.get $buf
  i32.const 0
  call $~lib/rt/stub/__link
  local.get $out
  local.get $array
  i32.load $0 offset=4
  local.get $begin|4
  i32.const 1
  i32.shl
  i32.add
  i32.store $0 offset=4
  local.get $out
  local.get $end|5
  local.get $begin|4
  i32.sub
  i32.const 1
  i32.shl
  i32.store $0 offset=8
  local.get $out
 )
 (func $~lib/typedarray/Uint16Array#reverse (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Uint16Array#get:length
  call $~lib/util/bytes/REVERSE<u16>
  local.get $this
 )
 (func $~lib/typedarray/Uint16Array#subarray (type $i32_i32_i32_=>_i32) (param $this i32) (param $begin i32) (param $end i32) (result i32)
  (local $array i32)
  (local $begin|4 i32)
  (local $end|5 i32)
  (local $len i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $out i32)
  (local $buf i32)
  local.get $this
  local.set $array
  local.get $begin
  local.set $begin|4
  local.get $end
  local.set $end|5
  local.get $array
  call $~lib/typedarray/Uint16Array#get:length
  local.set $len
  local.get $begin|4
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $begin|4
   i32.add
   local.tee $7
   i32.const 0
   local.tee $8
   local.get $7
   local.get $8
   i32.gt_s
   select
  else
   local.get $begin|4
   local.tee $9
   local.get $len
   local.tee $10
   local.get $9
   local.get $10
   i32.lt_s
   select
  end
  local.set $begin|4
  local.get $end|5
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $end|5
   i32.add
   local.tee $11
   i32.const 0
   local.tee $12
   local.get $11
   local.get $12
   i32.gt_s
   select
  else
   local.get $end|5
   local.tee $13
   local.get $len
   local.tee $14
   local.get $13
   local.get $14
   i32.lt_s
   select
  end
  local.set $end|5
  local.get $end|5
  local.tee $15
  local.get $begin|4
  local.tee $16
  local.get $15
  local.get $16
  i32.gt_s
  select
  local.set $end|5
  i32.const 12
  i32.const 7
  call $~lib/rt/stub/__new
  local.set $out
  local.get $array
  i32.load $0
  local.set $buf
  local.get $out
  local.get $buf
  i32.store $0
  local.get $out
  local.get $buf
  i32.const 0
  call $~lib/rt/stub/__link
  local.get $out
  local.get $array
  i32.load $0 offset=4
  local.get $begin|4
  i32.const 1
  i32.shl
  i32.add
  i32.store $0 offset=4
  local.get $out
  local.get $end|5
  local.get $begin|4
  i32.sub
  i32.const 1
  i32.shl
  i32.store $0 offset=8
  local.get $out
 )
 (func $~lib/util/bytes/REVERSE<u32> (type $i32_i32_=>_none) (param $ptr i32) (param $len i32)
  (local $i i32)
  (local $tail i32)
  (local $hlen i32)
  (local $5 i32)
  (local $front i32)
  (local $back i32)
  (local $temp i32)
  local.get $len
  i32.const 1
  i32.gt_u
  if
   i32.const 0
   local.set $i
   local.get $len
   i32.const 1
   i32.shr_u
   local.set $hlen
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   i32.const 4
   i32.const 1
   i32.eq
   drop
   i32.const 4
   i32.const 2
   i32.eq
   drop
   local.get $len
   i32.const 1
   i32.sub
   local.set $tail
   loop $while-continue|0
    local.get $i
    local.get $hlen
    i32.lt_u
    local.set $5
    local.get $5
    if
     local.get $ptr
     local.get $i
     i32.const 2
     i32.shl
     i32.add
     local.set $front
     local.get $ptr
     local.get $tail
     local.get $i
     i32.sub
     i32.const 2
     i32.shl
     i32.add
     local.set $back
     local.get $front
     i32.load $0
     local.set $temp
     local.get $front
     local.get $back
     i32.load $0
     i32.store $0
     local.get $back
     local.get $temp
     i32.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $while-continue|0
    end
   end
  end
 )
 (func $~lib/typedarray/Int32Array#reverse (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Int32Array#get:length
  call $~lib/util/bytes/REVERSE<u32>
  local.get $this
 )
 (func $~lib/typedarray/Uint32Array#reverse (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Uint32Array#get:length
  call $~lib/util/bytes/REVERSE<u32>
  local.get $this
 )
 (func $~lib/typedarray/Uint32Array#subarray (type $i32_i32_i32_=>_i32) (param $this i32) (param $begin i32) (param $end i32) (result i32)
  (local $array i32)
  (local $begin|4 i32)
  (local $end|5 i32)
  (local $len i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $out i32)
  (local $buf i32)
  local.get $this
  local.set $array
  local.get $begin
  local.set $begin|4
  local.get $end
  local.set $end|5
  local.get $array
  call $~lib/typedarray/Uint32Array#get:length
  local.set $len
  local.get $begin|4
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $begin|4
   i32.add
   local.tee $7
   i32.const 0
   local.tee $8
   local.get $7
   local.get $8
   i32.gt_s
   select
  else
   local.get $begin|4
   local.tee $9
   local.get $len
   local.tee $10
   local.get $9
   local.get $10
   i32.lt_s
   select
  end
  local.set $begin|4
  local.get $end|5
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $end|5
   i32.add
   local.tee $11
   i32.const 0
   local.tee $12
   local.get $11
   local.get $12
   i32.gt_s
   select
  else
   local.get $end|5
   local.tee $13
   local.get $len
   local.tee $14
   local.get $13
   local.get $14
   i32.lt_s
   select
  end
  local.set $end|5
  local.get $end|5
  local.tee $15
  local.get $begin|4
  local.tee $16
  local.get $15
  local.get $16
  i32.gt_s
  select
  local.set $end|5
  i32.const 12
  i32.const 9
  call $~lib/rt/stub/__new
  local.set $out
  local.get $array
  i32.load $0
  local.set $buf
  local.get $out
  local.get $buf
  i32.store $0
  local.get $out
  local.get $buf
  i32.const 0
  call $~lib/rt/stub/__link
  local.get $out
  local.get $array
  i32.load $0 offset=4
  local.get $begin|4
  i32.const 2
  i32.shl
  i32.add
  i32.store $0 offset=4
  local.get $out
  local.get $end|5
  local.get $begin|4
  i32.sub
  i32.const 2
  i32.shl
  i32.store $0 offset=8
  local.get $out
 )
 (func $~lib/util/bytes/REVERSE<u64> (type $i32_i32_=>_none) (param $ptr i32) (param $len i32)
  (local $i i32)
  (local $tail i32)
  (local $hlen i32)
  (local $5 i32)
  (local $front i32)
  (local $back i32)
  (local $temp i64)
  local.get $len
  i32.const 1
  i32.gt_u
  if
   i32.const 0
   local.set $i
   local.get $len
   i32.const 1
   i32.shr_u
   local.set $hlen
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   i32.const 8
   i32.const 1
   i32.eq
   drop
   i32.const 8
   i32.const 2
   i32.eq
   drop
   local.get $len
   i32.const 1
   i32.sub
   local.set $tail
   loop $while-continue|0
    local.get $i
    local.get $hlen
    i32.lt_u
    local.set $5
    local.get $5
    if
     local.get $ptr
     local.get $i
     i32.const 3
     i32.shl
     i32.add
     local.set $front
     local.get $ptr
     local.get $tail
     local.get $i
     i32.sub
     i32.const 3
     i32.shl
     i32.add
     local.set $back
     local.get $front
     i64.load $0
     local.set $temp
     local.get $front
     local.get $back
     i64.load $0
     i64.store $0
     local.get $back
     local.get $temp
     i64.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $while-continue|0
    end
   end
  end
 )
 (func $~lib/typedarray/Int64Array#reverse (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Int64Array#get:length
  call $~lib/util/bytes/REVERSE<u64>
  local.get $this
 )
 (func $~lib/typedarray/Int64Array#subarray (type $i32_i32_i32_=>_i32) (param $this i32) (param $begin i32) (param $end i32) (result i32)
  (local $array i32)
  (local $begin|4 i32)
  (local $end|5 i32)
  (local $len i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $out i32)
  (local $buf i32)
  local.get $this
  local.set $array
  local.get $begin
  local.set $begin|4
  local.get $end
  local.set $end|5
  local.get $array
  call $~lib/typedarray/Int64Array#get:length
  local.set $len
  local.get $begin|4
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $begin|4
   i32.add
   local.tee $7
   i32.const 0
   local.tee $8
   local.get $7
   local.get $8
   i32.gt_s
   select
  else
   local.get $begin|4
   local.tee $9
   local.get $len
   local.tee $10
   local.get $9
   local.get $10
   i32.lt_s
   select
  end
  local.set $begin|4
  local.get $end|5
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $end|5
   i32.add
   local.tee $11
   i32.const 0
   local.tee $12
   local.get $11
   local.get $12
   i32.gt_s
   select
  else
   local.get $end|5
   local.tee $13
   local.get $len
   local.tee $14
   local.get $13
   local.get $14
   i32.lt_s
   select
  end
  local.set $end|5
  local.get $end|5
  local.tee $15
  local.get $begin|4
  local.tee $16
  local.get $15
  local.get $16
  i32.gt_s
  select
  local.set $end|5
  i32.const 12
  i32.const 10
  call $~lib/rt/stub/__new
  local.set $out
  local.get $array
  i32.load $0
  local.set $buf
  local.get $out
  local.get $buf
  i32.store $0
  local.get $out
  local.get $buf
  i32.const 0
  call $~lib/rt/stub/__link
  local.get $out
  local.get $array
  i32.load $0 offset=4
  local.get $begin|4
  i32.const 3
  i32.shl
  i32.add
  i32.store $0 offset=4
  local.get $out
  local.get $end|5
  local.get $begin|4
  i32.sub
  i32.const 3
  i32.shl
  i32.store $0 offset=8
  local.get $out
 )
 (func $~lib/typedarray/Uint64Array#reverse (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Uint64Array#get:length
  call $~lib/util/bytes/REVERSE<u64>
  local.get $this
 )
 (func $~lib/typedarray/Uint64Array#subarray (type $i32_i32_i32_=>_i32) (param $this i32) (param $begin i32) (param $end i32) (result i32)
  (local $array i32)
  (local $begin|4 i32)
  (local $end|5 i32)
  (local $len i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $out i32)
  (local $buf i32)
  local.get $this
  local.set $array
  local.get $begin
  local.set $begin|4
  local.get $end
  local.set $end|5
  local.get $array
  call $~lib/typedarray/Uint64Array#get:length
  local.set $len
  local.get $begin|4
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $begin|4
   i32.add
   local.tee $7
   i32.const 0
   local.tee $8
   local.get $7
   local.get $8
   i32.gt_s
   select
  else
   local.get $begin|4
   local.tee $9
   local.get $len
   local.tee $10
   local.get $9
   local.get $10
   i32.lt_s
   select
  end
  local.set $begin|4
  local.get $end|5
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $end|5
   i32.add
   local.tee $11
   i32.const 0
   local.tee $12
   local.get $11
   local.get $12
   i32.gt_s
   select
  else
   local.get $end|5
   local.tee $13
   local.get $len
   local.tee $14
   local.get $13
   local.get $14
   i32.lt_s
   select
  end
  local.set $end|5
  local.get $end|5
  local.tee $15
  local.get $begin|4
  local.tee $16
  local.get $15
  local.get $16
  i32.gt_s
  select
  local.set $end|5
  i32.const 12
  i32.const 11
  call $~lib/rt/stub/__new
  local.set $out
  local.get $array
  i32.load $0
  local.set $buf
  local.get $out
  local.get $buf
  i32.store $0
  local.get $out
  local.get $buf
  i32.const 0
  call $~lib/rt/stub/__link
  local.get $out
  local.get $array
  i32.load $0 offset=4
  local.get $begin|4
  i32.const 3
  i32.shl
  i32.add
  i32.store $0 offset=4
  local.get $out
  local.get $end|5
  local.get $begin|4
  i32.sub
  i32.const 3
  i32.shl
  i32.store $0 offset=8
  local.get $out
 )
 (func $~lib/util/bytes/REVERSE<f32> (type $i32_i32_=>_none) (param $ptr i32) (param $len i32)
  (local $i i32)
  (local $tail i32)
  (local $hlen i32)
  (local $5 i32)
  (local $front i32)
  (local $back i32)
  (local $temp f32)
  local.get $len
  i32.const 1
  i32.gt_u
  if
   i32.const 0
   local.set $i
   local.get $len
   i32.const 1
   i32.shr_u
   local.set $hlen
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   i32.const 4
   i32.const 1
   i32.eq
   drop
   i32.const 4
   i32.const 2
   i32.eq
   drop
   local.get $len
   i32.const 1
   i32.sub
   local.set $tail
   loop $while-continue|0
    local.get $i
    local.get $hlen
    i32.lt_u
    local.set $5
    local.get $5
    if
     local.get $ptr
     local.get $i
     i32.const 2
     i32.shl
     i32.add
     local.set $front
     local.get $ptr
     local.get $tail
     local.get $i
     i32.sub
     i32.const 2
     i32.shl
     i32.add
     local.set $back
     local.get $front
     f32.load $0
     local.set $temp
     local.get $front
     local.get $back
     f32.load $0
     f32.store $0
     local.get $back
     local.get $temp
     f32.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $while-continue|0
    end
   end
  end
 )
 (func $~lib/typedarray/Float32Array#reverse (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Float32Array#get:length
  call $~lib/util/bytes/REVERSE<f32>
  local.get $this
 )
 (func $~lib/typedarray/Float32Array#subarray (type $i32_i32_i32_=>_i32) (param $this i32) (param $begin i32) (param $end i32) (result i32)
  (local $array i32)
  (local $begin|4 i32)
  (local $end|5 i32)
  (local $len i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $out i32)
  (local $buf i32)
  local.get $this
  local.set $array
  local.get $begin
  local.set $begin|4
  local.get $end
  local.set $end|5
  local.get $array
  call $~lib/typedarray/Float32Array#get:length
  local.set $len
  local.get $begin|4
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $begin|4
   i32.add
   local.tee $7
   i32.const 0
   local.tee $8
   local.get $7
   local.get $8
   i32.gt_s
   select
  else
   local.get $begin|4
   local.tee $9
   local.get $len
   local.tee $10
   local.get $9
   local.get $10
   i32.lt_s
   select
  end
  local.set $begin|4
  local.get $end|5
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $end|5
   i32.add
   local.tee $11
   i32.const 0
   local.tee $12
   local.get $11
   local.get $12
   i32.gt_s
   select
  else
   local.get $end|5
   local.tee $13
   local.get $len
   local.tee $14
   local.get $13
   local.get $14
   i32.lt_s
   select
  end
  local.set $end|5
  local.get $end|5
  local.tee $15
  local.get $begin|4
  local.tee $16
  local.get $15
  local.get $16
  i32.gt_s
  select
  local.set $end|5
  i32.const 12
  i32.const 12
  call $~lib/rt/stub/__new
  local.set $out
  local.get $array
  i32.load $0
  local.set $buf
  local.get $out
  local.get $buf
  i32.store $0
  local.get $out
  local.get $buf
  i32.const 0
  call $~lib/rt/stub/__link
  local.get $out
  local.get $array
  i32.load $0 offset=4
  local.get $begin|4
  i32.const 2
  i32.shl
  i32.add
  i32.store $0 offset=4
  local.get $out
  local.get $end|5
  local.get $begin|4
  i32.sub
  i32.const 2
  i32.shl
  i32.store $0 offset=8
  local.get $out
 )
 (func $~lib/util/bytes/REVERSE<f64> (type $i32_i32_=>_none) (param $ptr i32) (param $len i32)
  (local $i i32)
  (local $tail i32)
  (local $hlen i32)
  (local $5 i32)
  (local $front i32)
  (local $back i32)
  (local $temp f64)
  local.get $len
  i32.const 1
  i32.gt_u
  if
   i32.const 0
   local.set $i
   local.get $len
   i32.const 1
   i32.shr_u
   local.set $hlen
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   i32.const 8
   i32.const 1
   i32.eq
   drop
   i32.const 8
   i32.const 2
   i32.eq
   drop
   local.get $len
   i32.const 1
   i32.sub
   local.set $tail
   loop $while-continue|0
    local.get $i
    local.get $hlen
    i32.lt_u
    local.set $5
    local.get $5
    if
     local.get $ptr
     local.get $i
     i32.const 3
     i32.shl
     i32.add
     local.set $front
     local.get $ptr
     local.get $tail
     local.get $i
     i32.sub
     i32.const 3
     i32.shl
     i32.add
     local.set $back
     local.get $front
     f64.load $0
     local.set $temp
     local.get $front
     local.get $back
     f64.load $0
     f64.store $0
     local.get $back
     local.get $temp
     f64.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $while-continue|0
    end
   end
  end
 )
 (func $~lib/typedarray/Float64Array#reverse (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Float64Array#get:length
  call $~lib/util/bytes/REVERSE<f64>
  local.get $this
 )
 (func $~lib/typedarray/Int8Array#indexOf (type $i32_i32_i32_=>_i32) (param $this i32) (param $searchElement i32) (param $fromIndex i32) (result i32)
  (local $array i32)
  (local $searchElement|4 i32)
  (local $fromIndex|5 i32)
  (local $index i32)
  (local $len i32)
  (local $8 i32)
  (local $9 i32)
  (local $dataStart i32)
  (local $11 i32)
  block $~lib/typedarray/INDEX_OF<~lib/typedarray/Int8Array,i8>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $searchElement
   local.set $searchElement|4
   local.get $fromIndex
   local.set $fromIndex|5
   local.get $fromIndex|5
   local.set $index
   local.get $array
   call $~lib/typedarray/Int8Array#get:length
   local.set $len
   local.get $len
   i32.const 0
   i32.eq
   if (result i32)
    i32.const 1
   else
    local.get $index
    local.get $len
    i32.ge_s
   end
   if
    i32.const -1
    br $~lib/typedarray/INDEX_OF<~lib/typedarray/Int8Array,i8>|inlined.0
   end
   local.get $index
   i32.const 0
   i32.lt_s
   if
    local.get $len
    local.get $index
    i32.add
    local.tee $8
    i32.const 0
    local.tee $9
    local.get $8
    local.get $9
    i32.gt_s
    select
    local.set $index
   end
   local.get $array
   i32.load $0 offset=4
   local.set $dataStart
   loop $while-continue|0
    local.get $index
    local.get $len
    i32.lt_s
    local.set $11
    local.get $11
    if
     local.get $dataStart
     local.get $index
     i32.const 0
     i32.shl
     i32.add
     i32.load8_s $0
     local.get $searchElement|4
     i32.extend8_s
     i32.eq
     if
      local.get $index
      br $~lib/typedarray/INDEX_OF<~lib/typedarray/Int8Array,i8>|inlined.0
     end
     local.get $index
     i32.const 1
     i32.add
     local.set $index
     br $while-continue|0
    end
   end
   i32.const -1
  end
 )
 (func $~lib/typedarray/Int8Array#lastIndexOf (type $i32_i32_i32_=>_i32) (param $this i32) (param $searchElement i32) (param $fromIndex i32) (result i32)
  (local $array i32)
  (local $searchElement|4 i32)
  (local $fromIndex|5 i32)
  (local $index i32)
  (local $len i32)
  (local $dataStart i32)
  (local $9 i32)
  block $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Int8Array,i8>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $searchElement
   local.set $searchElement|4
   local.get $fromIndex
   local.set $fromIndex|5
   local.get $fromIndex|5
   local.set $index
   local.get $array
   call $~lib/typedarray/Int8Array#get:length
   local.set $len
   local.get $len
   i32.const 0
   i32.eq
   if
    i32.const -1
    br $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Int8Array,i8>|inlined.0
   end
   local.get $index
   i32.const 0
   i32.lt_s
   if
    local.get $len
    local.get $index
    i32.add
    local.set $index
   else
    local.get $index
    local.get $len
    i32.ge_s
    if
     local.get $len
     i32.const 1
     i32.sub
     local.set $index
    end
   end
   local.get $array
   i32.load $0 offset=4
   local.set $dataStart
   loop $while-continue|0
    local.get $index
    i32.const 0
    i32.ge_s
    local.set $9
    local.get $9
    if
     local.get $dataStart
     local.get $index
     i32.const 0
     i32.shl
     i32.add
     i32.load8_s $0
     local.get $searchElement|4
     i32.extend8_s
     i32.eq
     if
      local.get $index
      br $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Int8Array,i8>|inlined.0
     end
     local.get $index
     i32.const 1
     i32.sub
     local.set $index
     br $while-continue|0
    end
   end
   i32.const -1
  end
 )
 (func $~lib/typedarray/Int8Array#lastIndexOf@varargs (type $i32_i32_i32_=>_i32) (param $this i32) (param $searchElement i32) (param $fromIndex i32) (result i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   local.get $this
   call $~lib/typedarray/Int8Array#get:length
   local.set $fromIndex
  end
  local.get $this
  local.get $searchElement
  local.get $fromIndex
  call $~lib/typedarray/Int8Array#lastIndexOf
 )
 (func $~lib/typedarray/Uint8Array#indexOf (type $i32_i32_i32_=>_i32) (param $this i32) (param $searchElement i32) (param $fromIndex i32) (result i32)
  (local $array i32)
  (local $searchElement|4 i32)
  (local $fromIndex|5 i32)
  (local $index i32)
  (local $len i32)
  (local $8 i32)
  (local $9 i32)
  (local $dataStart i32)
  (local $11 i32)
  block $~lib/typedarray/INDEX_OF<~lib/typedarray/Uint8Array,u8>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $searchElement
   local.set $searchElement|4
   local.get $fromIndex
   local.set $fromIndex|5
   local.get $fromIndex|5
   local.set $index
   local.get $array
   call $~lib/typedarray/Uint8Array#get:length
   local.set $len
   local.get $len
   i32.const 0
   i32.eq
   if (result i32)
    i32.const 1
   else
    local.get $index
    local.get $len
    i32.ge_s
   end
   if
    i32.const -1
    br $~lib/typedarray/INDEX_OF<~lib/typedarray/Uint8Array,u8>|inlined.0
   end
   local.get $index
   i32.const 0
   i32.lt_s
   if
    local.get $len
    local.get $index
    i32.add
    local.tee $8
    i32.const 0
    local.tee $9
    local.get $8
    local.get $9
    i32.gt_s
    select
    local.set $index
   end
   local.get $array
   i32.load $0 offset=4
   local.set $dataStart
   loop $while-continue|0
    local.get $index
    local.get $len
    i32.lt_s
    local.set $11
    local.get $11
    if
     local.get $dataStart
     local.get $index
     i32.const 0
     i32.shl
     i32.add
     i32.load8_u $0
     local.get $searchElement|4
     i32.const 255
     i32.and
     i32.eq
     if
      local.get $index
      br $~lib/typedarray/INDEX_OF<~lib/typedarray/Uint8Array,u8>|inlined.0
     end
     local.get $index
     i32.const 1
     i32.add
     local.set $index
     br $while-continue|0
    end
   end
   i32.const -1
  end
 )
 (func $~lib/typedarray/Uint8Array#lastIndexOf (type $i32_i32_i32_=>_i32) (param $this i32) (param $searchElement i32) (param $fromIndex i32) (result i32)
  (local $array i32)
  (local $searchElement|4 i32)
  (local $fromIndex|5 i32)
  (local $index i32)
  (local $len i32)
  (local $dataStart i32)
  (local $9 i32)
  block $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Uint8Array,u8>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $searchElement
   local.set $searchElement|4
   local.get $fromIndex
   local.set $fromIndex|5
   local.get $fromIndex|5
   local.set $index
   local.get $array
   call $~lib/typedarray/Uint8Array#get:length
   local.set $len
   local.get $len
   i32.const 0
   i32.eq
   if
    i32.const -1
    br $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Uint8Array,u8>|inlined.0
   end
   local.get $index
   i32.const 0
   i32.lt_s
   if
    local.get $len
    local.get $index
    i32.add
    local.set $index
   else
    local.get $index
    local.get $len
    i32.ge_s
    if
     local.get $len
     i32.const 1
     i32.sub
     local.set $index
    end
   end
   local.get $array
   i32.load $0 offset=4
   local.set $dataStart
   loop $while-continue|0
    local.get $index
    i32.const 0
    i32.ge_s
    local.set $9
    local.get $9
    if
     local.get $dataStart
     local.get $index
     i32.const 0
     i32.shl
     i32.add
     i32.load8_u $0
     local.get $searchElement|4
     i32.const 255
     i32.and
     i32.eq
     if
      local.get $index
      br $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Uint8Array,u8>|inlined.0
     end
     local.get $index
     i32.const 1
     i32.sub
     local.set $index
     br $while-continue|0
    end
   end
   i32.const -1
  end
 )
 (func $~lib/typedarray/Uint8Array#lastIndexOf@varargs (type $i32_i32_i32_=>_i32) (param $this i32) (param $searchElement i32) (param $fromIndex i32) (result i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   local.get $this
   call $~lib/typedarray/Uint8Array#get:length
   local.set $fromIndex
  end
  local.get $this
  local.get $searchElement
  local.get $fromIndex
  call $~lib/typedarray/Uint8Array#lastIndexOf
 )
 (func $~lib/typedarray/Uint8ClampedArray#indexOf (type $i32_i32_i32_=>_i32) (param $this i32) (param $searchElement i32) (param $fromIndex i32) (result i32)
  (local $array i32)
  (local $searchElement|4 i32)
  (local $fromIndex|5 i32)
  (local $index i32)
  (local $len i32)
  (local $8 i32)
  (local $9 i32)
  (local $dataStart i32)
  (local $11 i32)
  block $~lib/typedarray/INDEX_OF<~lib/typedarray/Uint8ClampedArray,u8>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $searchElement
   local.set $searchElement|4
   local.get $fromIndex
   local.set $fromIndex|5
   local.get $fromIndex|5
   local.set $index
   local.get $array
   call $~lib/typedarray/Uint8ClampedArray#get:length
   local.set $len
   local.get $len
   i32.const 0
   i32.eq
   if (result i32)
    i32.const 1
   else
    local.get $index
    local.get $len
    i32.ge_s
   end
   if
    i32.const -1
    br $~lib/typedarray/INDEX_OF<~lib/typedarray/Uint8ClampedArray,u8>|inlined.0
   end
   local.get $index
   i32.const 0
   i32.lt_s
   if
    local.get $len
    local.get $index
    i32.add
    local.tee $8
    i32.const 0
    local.tee $9
    local.get $8
    local.get $9
    i32.gt_s
    select
    local.set $index
   end
   local.get $array
   i32.load $0 offset=4
   local.set $dataStart
   loop $while-continue|0
    local.get $index
    local.get $len
    i32.lt_s
    local.set $11
    local.get $11
    if
     local.get $dataStart
     local.get $index
     i32.const 0
     i32.shl
     i32.add
     i32.load8_u $0
     local.get $searchElement|4
     i32.const 255
     i32.and
     i32.eq
     if
      local.get $index
      br $~lib/typedarray/INDEX_OF<~lib/typedarray/Uint8ClampedArray,u8>|inlined.0
     end
     local.get $index
     i32.const 1
     i32.add
     local.set $index
     br $while-continue|0
    end
   end
   i32.const -1
  end
 )
 (func $~lib/typedarray/Uint8ClampedArray#lastIndexOf (type $i32_i32_i32_=>_i32) (param $this i32) (param $searchElement i32) (param $fromIndex i32) (result i32)
  (local $array i32)
  (local $searchElement|4 i32)
  (local $fromIndex|5 i32)
  (local $index i32)
  (local $len i32)
  (local $dataStart i32)
  (local $9 i32)
  block $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Uint8ClampedArray,u8>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $searchElement
   local.set $searchElement|4
   local.get $fromIndex
   local.set $fromIndex|5
   local.get $fromIndex|5
   local.set $index
   local.get $array
   call $~lib/typedarray/Uint8ClampedArray#get:length
   local.set $len
   local.get $len
   i32.const 0
   i32.eq
   if
    i32.const -1
    br $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Uint8ClampedArray,u8>|inlined.0
   end
   local.get $index
   i32.const 0
   i32.lt_s
   if
    local.get $len
    local.get $index
    i32.add
    local.set $index
   else
    local.get $index
    local.get $len
    i32.ge_s
    if
     local.get $len
     i32.const 1
     i32.sub
     local.set $index
    end
   end
   local.get $array
   i32.load $0 offset=4
   local.set $dataStart
   loop $while-continue|0
    local.get $index
    i32.const 0
    i32.ge_s
    local.set $9
    local.get $9
    if
     local.get $dataStart
     local.get $index
     i32.const 0
     i32.shl
     i32.add
     i32.load8_u $0
     local.get $searchElement|4
     i32.const 255
     i32.and
     i32.eq
     if
      local.get $index
      br $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Uint8ClampedArray,u8>|inlined.0
     end
     local.get $index
     i32.const 1
     i32.sub
     local.set $index
     br $while-continue|0
    end
   end
   i32.const -1
  end
 )
 (func $~lib/typedarray/Uint8ClampedArray#lastIndexOf@varargs (type $i32_i32_i32_=>_i32) (param $this i32) (param $searchElement i32) (param $fromIndex i32) (result i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   local.get $this
   call $~lib/typedarray/Uint8ClampedArray#get:length
   local.set $fromIndex
  end
  local.get $this
  local.get $searchElement
  local.get $fromIndex
  call $~lib/typedarray/Uint8ClampedArray#lastIndexOf
 )
 (func $~lib/typedarray/Int16Array#indexOf (type $i32_i32_i32_=>_i32) (param $this i32) (param $searchElement i32) (param $fromIndex i32) (result i32)
  (local $array i32)
  (local $searchElement|4 i32)
  (local $fromIndex|5 i32)
  (local $index i32)
  (local $len i32)
  (local $8 i32)
  (local $9 i32)
  (local $dataStart i32)
  (local $11 i32)
  block $~lib/typedarray/INDEX_OF<~lib/typedarray/Int16Array,i16>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $searchElement
   local.set $searchElement|4
   local.get $fromIndex
   local.set $fromIndex|5
   local.get $fromIndex|5
   local.set $index
   local.get $array
   call $~lib/typedarray/Int16Array#get:length
   local.set $len
   local.get $len
   i32.const 0
   i32.eq
   if (result i32)
    i32.const 1
   else
    local.get $index
    local.get $len
    i32.ge_s
   end
   if
    i32.const -1
    br $~lib/typedarray/INDEX_OF<~lib/typedarray/Int16Array,i16>|inlined.0
   end
   local.get $index
   i32.const 0
   i32.lt_s
   if
    local.get $len
    local.get $index
    i32.add
    local.tee $8
    i32.const 0
    local.tee $9
    local.get $8
    local.get $9
    i32.gt_s
    select
    local.set $index
   end
   local.get $array
   i32.load $0 offset=4
   local.set $dataStart
   loop $while-continue|0
    local.get $index
    local.get $len
    i32.lt_s
    local.set $11
    local.get $11
    if
     local.get $dataStart
     local.get $index
     i32.const 1
     i32.shl
     i32.add
     i32.load16_s $0
     local.get $searchElement|4
     i32.extend16_s
     i32.eq
     if
      local.get $index
      br $~lib/typedarray/INDEX_OF<~lib/typedarray/Int16Array,i16>|inlined.0
     end
     local.get $index
     i32.const 1
     i32.add
     local.set $index
     br $while-continue|0
    end
   end
   i32.const -1
  end
 )
 (func $~lib/typedarray/Int16Array#lastIndexOf (type $i32_i32_i32_=>_i32) (param $this i32) (param $searchElement i32) (param $fromIndex i32) (result i32)
  (local $array i32)
  (local $searchElement|4 i32)
  (local $fromIndex|5 i32)
  (local $index i32)
  (local $len i32)
  (local $dataStart i32)
  (local $9 i32)
  block $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Int16Array,i16>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $searchElement
   local.set $searchElement|4
   local.get $fromIndex
   local.set $fromIndex|5
   local.get $fromIndex|5
   local.set $index
   local.get $array
   call $~lib/typedarray/Int16Array#get:length
   local.set $len
   local.get $len
   i32.const 0
   i32.eq
   if
    i32.const -1
    br $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Int16Array,i16>|inlined.0
   end
   local.get $index
   i32.const 0
   i32.lt_s
   if
    local.get $len
    local.get $index
    i32.add
    local.set $index
   else
    local.get $index
    local.get $len
    i32.ge_s
    if
     local.get $len
     i32.const 1
     i32.sub
     local.set $index
    end
   end
   local.get $array
   i32.load $0 offset=4
   local.set $dataStart
   loop $while-continue|0
    local.get $index
    i32.const 0
    i32.ge_s
    local.set $9
    local.get $9
    if
     local.get $dataStart
     local.get $index
     i32.const 1
     i32.shl
     i32.add
     i32.load16_s $0
     local.get $searchElement|4
     i32.extend16_s
     i32.eq
     if
      local.get $index
      br $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Int16Array,i16>|inlined.0
     end
     local.get $index
     i32.const 1
     i32.sub
     local.set $index
     br $while-continue|0
    end
   end
   i32.const -1
  end
 )
 (func $~lib/typedarray/Int16Array#lastIndexOf@varargs (type $i32_i32_i32_=>_i32) (param $this i32) (param $searchElement i32) (param $fromIndex i32) (result i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   local.get $this
   call $~lib/typedarray/Int16Array#get:length
   local.set $fromIndex
  end
  local.get $this
  local.get $searchElement
  local.get $fromIndex
  call $~lib/typedarray/Int16Array#lastIndexOf
 )
 (func $~lib/typedarray/Uint16Array#indexOf (type $i32_i32_i32_=>_i32) (param $this i32) (param $searchElement i32) (param $fromIndex i32) (result i32)
  (local $array i32)
  (local $searchElement|4 i32)
  (local $fromIndex|5 i32)
  (local $index i32)
  (local $len i32)
  (local $8 i32)
  (local $9 i32)
  (local $dataStart i32)
  (local $11 i32)
  block $~lib/typedarray/INDEX_OF<~lib/typedarray/Uint16Array,u16>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $searchElement
   local.set $searchElement|4
   local.get $fromIndex
   local.set $fromIndex|5
   local.get $fromIndex|5
   local.set $index
   local.get $array
   call $~lib/typedarray/Uint16Array#get:length
   local.set $len
   local.get $len
   i32.const 0
   i32.eq
   if (result i32)
    i32.const 1
   else
    local.get $index
    local.get $len
    i32.ge_s
   end
   if
    i32.const -1
    br $~lib/typedarray/INDEX_OF<~lib/typedarray/Uint16Array,u16>|inlined.0
   end
   local.get $index
   i32.const 0
   i32.lt_s
   if
    local.get $len
    local.get $index
    i32.add
    local.tee $8
    i32.const 0
    local.tee $9
    local.get $8
    local.get $9
    i32.gt_s
    select
    local.set $index
   end
   local.get $array
   i32.load $0 offset=4
   local.set $dataStart
   loop $while-continue|0
    local.get $index
    local.get $len
    i32.lt_s
    local.set $11
    local.get $11
    if
     local.get $dataStart
     local.get $index
     i32.const 1
     i32.shl
     i32.add
     i32.load16_u $0
     local.get $searchElement|4
     i32.const 65535
     i32.and
     i32.eq
     if
      local.get $index
      br $~lib/typedarray/INDEX_OF<~lib/typedarray/Uint16Array,u16>|inlined.0
     end
     local.get $index
     i32.const 1
     i32.add
     local.set $index
     br $while-continue|0
    end
   end
   i32.const -1
  end
 )
 (func $~lib/typedarray/Uint16Array#lastIndexOf (type $i32_i32_i32_=>_i32) (param $this i32) (param $searchElement i32) (param $fromIndex i32) (result i32)
  (local $array i32)
  (local $searchElement|4 i32)
  (local $fromIndex|5 i32)
  (local $index i32)
  (local $len i32)
  (local $dataStart i32)
  (local $9 i32)
  block $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Uint16Array,u16>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $searchElement
   local.set $searchElement|4
   local.get $fromIndex
   local.set $fromIndex|5
   local.get $fromIndex|5
   local.set $index
   local.get $array
   call $~lib/typedarray/Uint16Array#get:length
   local.set $len
   local.get $len
   i32.const 0
   i32.eq
   if
    i32.const -1
    br $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Uint16Array,u16>|inlined.0
   end
   local.get $index
   i32.const 0
   i32.lt_s
   if
    local.get $len
    local.get $index
    i32.add
    local.set $index
   else
    local.get $index
    local.get $len
    i32.ge_s
    if
     local.get $len
     i32.const 1
     i32.sub
     local.set $index
    end
   end
   local.get $array
   i32.load $0 offset=4
   local.set $dataStart
   loop $while-continue|0
    local.get $index
    i32.const 0
    i32.ge_s
    local.set $9
    local.get $9
    if
     local.get $dataStart
     local.get $index
     i32.const 1
     i32.shl
     i32.add
     i32.load16_u $0
     local.get $searchElement|4
     i32.const 65535
     i32.and
     i32.eq
     if
      local.get $index
      br $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Uint16Array,u16>|inlined.0
     end
     local.get $index
     i32.const 1
     i32.sub
     local.set $index
     br $while-continue|0
    end
   end
   i32.const -1
  end
 )
 (func $~lib/typedarray/Uint16Array#lastIndexOf@varargs (type $i32_i32_i32_=>_i32) (param $this i32) (param $searchElement i32) (param $fromIndex i32) (result i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   local.get $this
   call $~lib/typedarray/Uint16Array#get:length
   local.set $fromIndex
  end
  local.get $this
  local.get $searchElement
  local.get $fromIndex
  call $~lib/typedarray/Uint16Array#lastIndexOf
 )
 (func $~lib/typedarray/Int32Array#indexOf (type $i32_i32_i32_=>_i32) (param $this i32) (param $searchElement i32) (param $fromIndex i32) (result i32)
  (local $array i32)
  (local $searchElement|4 i32)
  (local $fromIndex|5 i32)
  (local $index i32)
  (local $len i32)
  (local $8 i32)
  (local $9 i32)
  (local $dataStart i32)
  (local $11 i32)
  block $~lib/typedarray/INDEX_OF<~lib/typedarray/Int32Array,i32>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $searchElement
   local.set $searchElement|4
   local.get $fromIndex
   local.set $fromIndex|5
   local.get $fromIndex|5
   local.set $index
   local.get $array
   call $~lib/typedarray/Int32Array#get:length
   local.set $len
   local.get $len
   i32.const 0
   i32.eq
   if (result i32)
    i32.const 1
   else
    local.get $index
    local.get $len
    i32.ge_s
   end
   if
    i32.const -1
    br $~lib/typedarray/INDEX_OF<~lib/typedarray/Int32Array,i32>|inlined.0
   end
   local.get $index
   i32.const 0
   i32.lt_s
   if
    local.get $len
    local.get $index
    i32.add
    local.tee $8
    i32.const 0
    local.tee $9
    local.get $8
    local.get $9
    i32.gt_s
    select
    local.set $index
   end
   local.get $array
   i32.load $0 offset=4
   local.set $dataStart
   loop $while-continue|0
    local.get $index
    local.get $len
    i32.lt_s
    local.set $11
    local.get $11
    if
     local.get $dataStart
     local.get $index
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.get $searchElement|4
     i32.eq
     if
      local.get $index
      br $~lib/typedarray/INDEX_OF<~lib/typedarray/Int32Array,i32>|inlined.0
     end
     local.get $index
     i32.const 1
     i32.add
     local.set $index
     br $while-continue|0
    end
   end
   i32.const -1
  end
 )
 (func $~lib/typedarray/Int32Array#lastIndexOf (type $i32_i32_i32_=>_i32) (param $this i32) (param $searchElement i32) (param $fromIndex i32) (result i32)
  (local $array i32)
  (local $searchElement|4 i32)
  (local $fromIndex|5 i32)
  (local $index i32)
  (local $len i32)
  (local $dataStart i32)
  (local $9 i32)
  block $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Int32Array,i32>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $searchElement
   local.set $searchElement|4
   local.get $fromIndex
   local.set $fromIndex|5
   local.get $fromIndex|5
   local.set $index
   local.get $array
   call $~lib/typedarray/Int32Array#get:length
   local.set $len
   local.get $len
   i32.const 0
   i32.eq
   if
    i32.const -1
    br $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Int32Array,i32>|inlined.0
   end
   local.get $index
   i32.const 0
   i32.lt_s
   if
    local.get $len
    local.get $index
    i32.add
    local.set $index
   else
    local.get $index
    local.get $len
    i32.ge_s
    if
     local.get $len
     i32.const 1
     i32.sub
     local.set $index
    end
   end
   local.get $array
   i32.load $0 offset=4
   local.set $dataStart
   loop $while-continue|0
    local.get $index
    i32.const 0
    i32.ge_s
    local.set $9
    local.get $9
    if
     local.get $dataStart
     local.get $index
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.get $searchElement|4
     i32.eq
     if
      local.get $index
      br $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Int32Array,i32>|inlined.0
     end
     local.get $index
     i32.const 1
     i32.sub
     local.set $index
     br $while-continue|0
    end
   end
   i32.const -1
  end
 )
 (func $~lib/typedarray/Int32Array#lastIndexOf@varargs (type $i32_i32_i32_=>_i32) (param $this i32) (param $searchElement i32) (param $fromIndex i32) (result i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   local.get $this
   call $~lib/typedarray/Int32Array#get:length
   local.set $fromIndex
  end
  local.get $this
  local.get $searchElement
  local.get $fromIndex
  call $~lib/typedarray/Int32Array#lastIndexOf
 )
 (func $~lib/typedarray/Uint32Array#indexOf (type $i32_i32_i32_=>_i32) (param $this i32) (param $searchElement i32) (param $fromIndex i32) (result i32)
  (local $array i32)
  (local $searchElement|4 i32)
  (local $fromIndex|5 i32)
  (local $index i32)
  (local $len i32)
  (local $8 i32)
  (local $9 i32)
  (local $dataStart i32)
  (local $11 i32)
  block $~lib/typedarray/INDEX_OF<~lib/typedarray/Uint32Array,u32>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $searchElement
   local.set $searchElement|4
   local.get $fromIndex
   local.set $fromIndex|5
   local.get $fromIndex|5
   local.set $index
   local.get $array
   call $~lib/typedarray/Uint32Array#get:length
   local.set $len
   local.get $len
   i32.const 0
   i32.eq
   if (result i32)
    i32.const 1
   else
    local.get $index
    local.get $len
    i32.ge_s
   end
   if
    i32.const -1
    br $~lib/typedarray/INDEX_OF<~lib/typedarray/Uint32Array,u32>|inlined.0
   end
   local.get $index
   i32.const 0
   i32.lt_s
   if
    local.get $len
    local.get $index
    i32.add
    local.tee $8
    i32.const 0
    local.tee $9
    local.get $8
    local.get $9
    i32.gt_s
    select
    local.set $index
   end
   local.get $array
   i32.load $0 offset=4
   local.set $dataStart
   loop $while-continue|0
    local.get $index
    local.get $len
    i32.lt_s
    local.set $11
    local.get $11
    if
     local.get $dataStart
     local.get $index
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.get $searchElement|4
     i32.eq
     if
      local.get $index
      br $~lib/typedarray/INDEX_OF<~lib/typedarray/Uint32Array,u32>|inlined.0
     end
     local.get $index
     i32.const 1
     i32.add
     local.set $index
     br $while-continue|0
    end
   end
   i32.const -1
  end
 )
 (func $~lib/typedarray/Uint32Array#lastIndexOf (type $i32_i32_i32_=>_i32) (param $this i32) (param $searchElement i32) (param $fromIndex i32) (result i32)
  (local $array i32)
  (local $searchElement|4 i32)
  (local $fromIndex|5 i32)
  (local $index i32)
  (local $len i32)
  (local $dataStart i32)
  (local $9 i32)
  block $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Uint32Array,u32>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $searchElement
   local.set $searchElement|4
   local.get $fromIndex
   local.set $fromIndex|5
   local.get $fromIndex|5
   local.set $index
   local.get $array
   call $~lib/typedarray/Uint32Array#get:length
   local.set $len
   local.get $len
   i32.const 0
   i32.eq
   if
    i32.const -1
    br $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Uint32Array,u32>|inlined.0
   end
   local.get $index
   i32.const 0
   i32.lt_s
   if
    local.get $len
    local.get $index
    i32.add
    local.set $index
   else
    local.get $index
    local.get $len
    i32.ge_s
    if
     local.get $len
     i32.const 1
     i32.sub
     local.set $index
    end
   end
   local.get $array
   i32.load $0 offset=4
   local.set $dataStart
   loop $while-continue|0
    local.get $index
    i32.const 0
    i32.ge_s
    local.set $9
    local.get $9
    if
     local.get $dataStart
     local.get $index
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.get $searchElement|4
     i32.eq
     if
      local.get $index
      br $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Uint32Array,u32>|inlined.0
     end
     local.get $index
     i32.const 1
     i32.sub
     local.set $index
     br $while-continue|0
    end
   end
   i32.const -1
  end
 )
 (func $~lib/typedarray/Uint32Array#lastIndexOf@varargs (type $i32_i32_i32_=>_i32) (param $this i32) (param $searchElement i32) (param $fromIndex i32) (result i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   local.get $this
   call $~lib/typedarray/Uint32Array#get:length
   local.set $fromIndex
  end
  local.get $this
  local.get $searchElement
  local.get $fromIndex
  call $~lib/typedarray/Uint32Array#lastIndexOf
 )
 (func $~lib/typedarray/Int64Array#indexOf (type $i32_i64_i32_=>_i32) (param $this i32) (param $searchElement i64) (param $fromIndex i32) (result i32)
  (local $array i32)
  (local $searchElement|4 i64)
  (local $fromIndex|5 i32)
  (local $index i32)
  (local $len i32)
  (local $8 i32)
  (local $9 i32)
  (local $dataStart i32)
  (local $11 i32)
  block $~lib/typedarray/INDEX_OF<~lib/typedarray/Int64Array,i64>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $searchElement
   local.set $searchElement|4
   local.get $fromIndex
   local.set $fromIndex|5
   local.get $fromIndex|5
   local.set $index
   local.get $array
   call $~lib/typedarray/Int64Array#get:length
   local.set $len
   local.get $len
   i32.const 0
   i32.eq
   if (result i32)
    i32.const 1
   else
    local.get $index
    local.get $len
    i32.ge_s
   end
   if
    i32.const -1
    br $~lib/typedarray/INDEX_OF<~lib/typedarray/Int64Array,i64>|inlined.0
   end
   local.get $index
   i32.const 0
   i32.lt_s
   if
    local.get $len
    local.get $index
    i32.add
    local.tee $8
    i32.const 0
    local.tee $9
    local.get $8
    local.get $9
    i32.gt_s
    select
    local.set $index
   end
   local.get $array
   i32.load $0 offset=4
   local.set $dataStart
   loop $while-continue|0
    local.get $index
    local.get $len
    i32.lt_s
    local.set $11
    local.get $11
    if
     local.get $dataStart
     local.get $index
     i32.const 3
     i32.shl
     i32.add
     i64.load $0
     local.get $searchElement|4
     i64.eq
     if
      local.get $index
      br $~lib/typedarray/INDEX_OF<~lib/typedarray/Int64Array,i64>|inlined.0
     end
     local.get $index
     i32.const 1
     i32.add
     local.set $index
     br $while-continue|0
    end
   end
   i32.const -1
  end
 )
 (func $~lib/typedarray/Int64Array#lastIndexOf (type $i32_i64_i32_=>_i32) (param $this i32) (param $searchElement i64) (param $fromIndex i32) (result i32)
  (local $array i32)
  (local $searchElement|4 i64)
  (local $fromIndex|5 i32)
  (local $index i32)
  (local $len i32)
  (local $dataStart i32)
  (local $9 i32)
  block $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Int64Array,i64>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $searchElement
   local.set $searchElement|4
   local.get $fromIndex
   local.set $fromIndex|5
   local.get $fromIndex|5
   local.set $index
   local.get $array
   call $~lib/typedarray/Int64Array#get:length
   local.set $len
   local.get $len
   i32.const 0
   i32.eq
   if
    i32.const -1
    br $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Int64Array,i64>|inlined.0
   end
   local.get $index
   i32.const 0
   i32.lt_s
   if
    local.get $len
    local.get $index
    i32.add
    local.set $index
   else
    local.get $index
    local.get $len
    i32.ge_s
    if
     local.get $len
     i32.const 1
     i32.sub
     local.set $index
    end
   end
   local.get $array
   i32.load $0 offset=4
   local.set $dataStart
   loop $while-continue|0
    local.get $index
    i32.const 0
    i32.ge_s
    local.set $9
    local.get $9
    if
     local.get $dataStart
     local.get $index
     i32.const 3
     i32.shl
     i32.add
     i64.load $0
     local.get $searchElement|4
     i64.eq
     if
      local.get $index
      br $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Int64Array,i64>|inlined.0
     end
     local.get $index
     i32.const 1
     i32.sub
     local.set $index
     br $while-continue|0
    end
   end
   i32.const -1
  end
 )
 (func $~lib/typedarray/Int64Array#lastIndexOf@varargs (type $i32_i64_i32_=>_i32) (param $this i32) (param $searchElement i64) (param $fromIndex i32) (result i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   local.get $this
   call $~lib/typedarray/Int64Array#get:length
   local.set $fromIndex
  end
  local.get $this
  local.get $searchElement
  local.get $fromIndex
  call $~lib/typedarray/Int64Array#lastIndexOf
 )
 (func $~lib/typedarray/Uint64Array#indexOf (type $i32_i64_i32_=>_i32) (param $this i32) (param $searchElement i64) (param $fromIndex i32) (result i32)
  (local $array i32)
  (local $searchElement|4 i64)
  (local $fromIndex|5 i32)
  (local $index i32)
  (local $len i32)
  (local $8 i32)
  (local $9 i32)
  (local $dataStart i32)
  (local $11 i32)
  block $~lib/typedarray/INDEX_OF<~lib/typedarray/Uint64Array,u64>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $searchElement
   local.set $searchElement|4
   local.get $fromIndex
   local.set $fromIndex|5
   local.get $fromIndex|5
   local.set $index
   local.get $array
   call $~lib/typedarray/Uint64Array#get:length
   local.set $len
   local.get $len
   i32.const 0
   i32.eq
   if (result i32)
    i32.const 1
   else
    local.get $index
    local.get $len
    i32.ge_s
   end
   if
    i32.const -1
    br $~lib/typedarray/INDEX_OF<~lib/typedarray/Uint64Array,u64>|inlined.0
   end
   local.get $index
   i32.const 0
   i32.lt_s
   if
    local.get $len
    local.get $index
    i32.add
    local.tee $8
    i32.const 0
    local.tee $9
    local.get $8
    local.get $9
    i32.gt_s
    select
    local.set $index
   end
   local.get $array
   i32.load $0 offset=4
   local.set $dataStart
   loop $while-continue|0
    local.get $index
    local.get $len
    i32.lt_s
    local.set $11
    local.get $11
    if
     local.get $dataStart
     local.get $index
     i32.const 3
     i32.shl
     i32.add
     i64.load $0
     local.get $searchElement|4
     i64.eq
     if
      local.get $index
      br $~lib/typedarray/INDEX_OF<~lib/typedarray/Uint64Array,u64>|inlined.0
     end
     local.get $index
     i32.const 1
     i32.add
     local.set $index
     br $while-continue|0
    end
   end
   i32.const -1
  end
 )
 (func $~lib/typedarray/Uint64Array#lastIndexOf (type $i32_i64_i32_=>_i32) (param $this i32) (param $searchElement i64) (param $fromIndex i32) (result i32)
  (local $array i32)
  (local $searchElement|4 i64)
  (local $fromIndex|5 i32)
  (local $index i32)
  (local $len i32)
  (local $dataStart i32)
  (local $9 i32)
  block $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Uint64Array,u64>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $searchElement
   local.set $searchElement|4
   local.get $fromIndex
   local.set $fromIndex|5
   local.get $fromIndex|5
   local.set $index
   local.get $array
   call $~lib/typedarray/Uint64Array#get:length
   local.set $len
   local.get $len
   i32.const 0
   i32.eq
   if
    i32.const -1
    br $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Uint64Array,u64>|inlined.0
   end
   local.get $index
   i32.const 0
   i32.lt_s
   if
    local.get $len
    local.get $index
    i32.add
    local.set $index
   else
    local.get $index
    local.get $len
    i32.ge_s
    if
     local.get $len
     i32.const 1
     i32.sub
     local.set $index
    end
   end
   local.get $array
   i32.load $0 offset=4
   local.set $dataStart
   loop $while-continue|0
    local.get $index
    i32.const 0
    i32.ge_s
    local.set $9
    local.get $9
    if
     local.get $dataStart
     local.get $index
     i32.const 3
     i32.shl
     i32.add
     i64.load $0
     local.get $searchElement|4
     i64.eq
     if
      local.get $index
      br $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Uint64Array,u64>|inlined.0
     end
     local.get $index
     i32.const 1
     i32.sub
     local.set $index
     br $while-continue|0
    end
   end
   i32.const -1
  end
 )
 (func $~lib/typedarray/Uint64Array#lastIndexOf@varargs (type $i32_i64_i32_=>_i32) (param $this i32) (param $searchElement i64) (param $fromIndex i32) (result i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   local.get $this
   call $~lib/typedarray/Uint64Array#get:length
   local.set $fromIndex
  end
  local.get $this
  local.get $searchElement
  local.get $fromIndex
  call $~lib/typedarray/Uint64Array#lastIndexOf
 )
 (func $~lib/typedarray/Float32Array#indexOf (type $i32_f32_i32_=>_i32) (param $this i32) (param $searchElement f32) (param $fromIndex i32) (result i32)
  (local $array i32)
  (local $searchElement|4 f32)
  (local $fromIndex|5 i32)
  (local $index i32)
  (local $len i32)
  (local $8 i32)
  (local $9 i32)
  (local $dataStart i32)
  (local $11 i32)
  block $~lib/typedarray/INDEX_OF<~lib/typedarray/Float32Array,f32>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $searchElement
   local.set $searchElement|4
   local.get $fromIndex
   local.set $fromIndex|5
   local.get $fromIndex|5
   local.set $index
   local.get $array
   call $~lib/typedarray/Float32Array#get:length
   local.set $len
   local.get $len
   i32.const 0
   i32.eq
   if (result i32)
    i32.const 1
   else
    local.get $index
    local.get $len
    i32.ge_s
   end
   if
    i32.const -1
    br $~lib/typedarray/INDEX_OF<~lib/typedarray/Float32Array,f32>|inlined.0
   end
   local.get $index
   i32.const 0
   i32.lt_s
   if
    local.get $len
    local.get $index
    i32.add
    local.tee $8
    i32.const 0
    local.tee $9
    local.get $8
    local.get $9
    i32.gt_s
    select
    local.set $index
   end
   local.get $array
   i32.load $0 offset=4
   local.set $dataStart
   loop $while-continue|0
    local.get $index
    local.get $len
    i32.lt_s
    local.set $11
    local.get $11
    if
     local.get $dataStart
     local.get $index
     i32.const 2
     i32.shl
     i32.add
     f32.load $0
     local.get $searchElement|4
     f32.eq
     if
      local.get $index
      br $~lib/typedarray/INDEX_OF<~lib/typedarray/Float32Array,f32>|inlined.0
     end
     local.get $index
     i32.const 1
     i32.add
     local.set $index
     br $while-continue|0
    end
   end
   i32.const -1
  end
 )
 (func $~lib/typedarray/Float32Array#lastIndexOf (type $i32_f32_i32_=>_i32) (param $this i32) (param $searchElement f32) (param $fromIndex i32) (result i32)
  (local $array i32)
  (local $searchElement|4 f32)
  (local $fromIndex|5 i32)
  (local $index i32)
  (local $len i32)
  (local $dataStart i32)
  (local $9 i32)
  block $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Float32Array,f32>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $searchElement
   local.set $searchElement|4
   local.get $fromIndex
   local.set $fromIndex|5
   local.get $fromIndex|5
   local.set $index
   local.get $array
   call $~lib/typedarray/Float32Array#get:length
   local.set $len
   local.get $len
   i32.const 0
   i32.eq
   if
    i32.const -1
    br $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Float32Array,f32>|inlined.0
   end
   local.get $index
   i32.const 0
   i32.lt_s
   if
    local.get $len
    local.get $index
    i32.add
    local.set $index
   else
    local.get $index
    local.get $len
    i32.ge_s
    if
     local.get $len
     i32.const 1
     i32.sub
     local.set $index
    end
   end
   local.get $array
   i32.load $0 offset=4
   local.set $dataStart
   loop $while-continue|0
    local.get $index
    i32.const 0
    i32.ge_s
    local.set $9
    local.get $9
    if
     local.get $dataStart
     local.get $index
     i32.const 2
     i32.shl
     i32.add
     f32.load $0
     local.get $searchElement|4
     f32.eq
     if
      local.get $index
      br $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Float32Array,f32>|inlined.0
     end
     local.get $index
     i32.const 1
     i32.sub
     local.set $index
     br $while-continue|0
    end
   end
   i32.const -1
  end
 )
 (func $~lib/typedarray/Float32Array#lastIndexOf@varargs (type $i32_f32_i32_=>_i32) (param $this i32) (param $searchElement f32) (param $fromIndex i32) (result i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   local.get $this
   call $~lib/typedarray/Float32Array#get:length
   local.set $fromIndex
  end
  local.get $this
  local.get $searchElement
  local.get $fromIndex
  call $~lib/typedarray/Float32Array#lastIndexOf
 )
 (func $~lib/typedarray/Float64Array#indexOf (type $i32_f64_i32_=>_i32) (param $this i32) (param $searchElement f64) (param $fromIndex i32) (result i32)
  (local $array i32)
  (local $searchElement|4 f64)
  (local $fromIndex|5 i32)
  (local $index i32)
  (local $len i32)
  (local $8 i32)
  (local $9 i32)
  (local $dataStart i32)
  (local $11 i32)
  block $~lib/typedarray/INDEX_OF<~lib/typedarray/Float64Array,f64>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $searchElement
   local.set $searchElement|4
   local.get $fromIndex
   local.set $fromIndex|5
   local.get $fromIndex|5
   local.set $index
   local.get $array
   call $~lib/typedarray/Float64Array#get:length
   local.set $len
   local.get $len
   i32.const 0
   i32.eq
   if (result i32)
    i32.const 1
   else
    local.get $index
    local.get $len
    i32.ge_s
   end
   if
    i32.const -1
    br $~lib/typedarray/INDEX_OF<~lib/typedarray/Float64Array,f64>|inlined.0
   end
   local.get $index
   i32.const 0
   i32.lt_s
   if
    local.get $len
    local.get $index
    i32.add
    local.tee $8
    i32.const 0
    local.tee $9
    local.get $8
    local.get $9
    i32.gt_s
    select
    local.set $index
   end
   local.get $array
   i32.load $0 offset=4
   local.set $dataStart
   loop $while-continue|0
    local.get $index
    local.get $len
    i32.lt_s
    local.set $11
    local.get $11
    if
     local.get $dataStart
     local.get $index
     i32.const 3
     i32.shl
     i32.add
     f64.load $0
     local.get $searchElement|4
     f64.eq
     if
      local.get $index
      br $~lib/typedarray/INDEX_OF<~lib/typedarray/Float64Array,f64>|inlined.0
     end
     local.get $index
     i32.const 1
     i32.add
     local.set $index
     br $while-continue|0
    end
   end
   i32.const -1
  end
 )
 (func $~lib/typedarray/Float64Array#lastIndexOf (type $i32_f64_i32_=>_i32) (param $this i32) (param $searchElement f64) (param $fromIndex i32) (result i32)
  (local $array i32)
  (local $searchElement|4 f64)
  (local $fromIndex|5 i32)
  (local $index i32)
  (local $len i32)
  (local $dataStart i32)
  (local $9 i32)
  block $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Float64Array,f64>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $searchElement
   local.set $searchElement|4
   local.get $fromIndex
   local.set $fromIndex|5
   local.get $fromIndex|5
   local.set $index
   local.get $array
   call $~lib/typedarray/Float64Array#get:length
   local.set $len
   local.get $len
   i32.const 0
   i32.eq
   if
    i32.const -1
    br $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Float64Array,f64>|inlined.0
   end
   local.get $index
   i32.const 0
   i32.lt_s
   if
    local.get $len
    local.get $index
    i32.add
    local.set $index
   else
    local.get $index
    local.get $len
    i32.ge_s
    if
     local.get $len
     i32.const 1
     i32.sub
     local.set $index
    end
   end
   local.get $array
   i32.load $0 offset=4
   local.set $dataStart
   loop $while-continue|0
    local.get $index
    i32.const 0
    i32.ge_s
    local.set $9
    local.get $9
    if
     local.get $dataStart
     local.get $index
     i32.const 3
     i32.shl
     i32.add
     f64.load $0
     local.get $searchElement|4
     f64.eq
     if
      local.get $index
      br $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Float64Array,f64>|inlined.0
     end
     local.get $index
     i32.const 1
     i32.sub
     local.set $index
     br $while-continue|0
    end
   end
   i32.const -1
  end
 )
 (func $~lib/typedarray/Float64Array#lastIndexOf@varargs (type $i32_f64_i32_=>_i32) (param $this i32) (param $searchElement f64) (param $fromIndex i32) (result i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   local.get $this
   call $~lib/typedarray/Float64Array#get:length
   local.set $fromIndex
  end
  local.get $this
  local.get $searchElement
  local.get $fromIndex
  call $~lib/typedarray/Float64Array#lastIndexOf
 )
 (func $~lib/typedarray/Float64Array#includes (type $i32_f64_i32_=>_i32) (param $this i32) (param $searchElement f64) (param $fromIndex i32) (result i32)
  (local $array i32)
  (local $searchElement|4 f64)
  (local $fromIndex|5 i32)
  (local $index i32)
  (local $len i32)
  (local $8 i32)
  (local $9 i32)
  (local $dataStart i32)
  (local $11 i32)
  (local $elem f64)
  block $~lib/typedarray/INCLUDES<~lib/typedarray/Float64Array,f64>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $searchElement
   local.set $searchElement|4
   local.get $fromIndex
   local.set $fromIndex|5
   i32.const 1
   drop
   local.get $fromIndex|5
   local.set $index
   local.get $array
   call $~lib/typedarray/Float64Array#get:length
   local.set $len
   local.get $len
   i32.const 0
   i32.eq
   if (result i32)
    i32.const 1
   else
    local.get $index
    local.get $len
    i32.ge_s
   end
   if
    i32.const 0
    br $~lib/typedarray/INCLUDES<~lib/typedarray/Float64Array,f64>|inlined.0
   end
   local.get $index
   i32.const 0
   i32.lt_s
   if
    local.get $len
    local.get $index
    i32.add
    local.tee $8
    i32.const 0
    local.tee $9
    local.get $8
    local.get $9
    i32.gt_s
    select
    local.set $index
   end
   local.get $array
   i32.load $0 offset=4
   local.set $dataStart
   loop $while-continue|0
    local.get $index
    local.get $len
    i32.lt_s
    local.set $11
    local.get $11
    if
     local.get $dataStart
     local.get $index
     i32.const 3
     i32.shl
     i32.add
     f64.load $0
     local.set $elem
     local.get $elem
     local.get $searchElement|4
     f64.eq
     if (result i32)
      i32.const 1
     else
      local.get $elem
      local.get $elem
      f64.ne
      local.get $searchElement|4
      local.get $searchElement|4
      f64.ne
      i32.and
     end
     if
      i32.const 1
      br $~lib/typedarray/INCLUDES<~lib/typedarray/Float64Array,f64>|inlined.0
     end
     local.get $index
     i32.const 1
     i32.add
     local.set $index
     br $while-continue|0
    end
   end
   i32.const 0
   br $~lib/typedarray/INCLUDES<~lib/typedarray/Float64Array,f64>|inlined.0
  end
 )
 (func $~lib/typedarray/Float32Array#includes (type $i32_f32_i32_=>_i32) (param $this i32) (param $searchElement f32) (param $fromIndex i32) (result i32)
  (local $array i32)
  (local $searchElement|4 f32)
  (local $fromIndex|5 i32)
  (local $index i32)
  (local $len i32)
  (local $8 i32)
  (local $9 i32)
  (local $dataStart i32)
  (local $11 i32)
  (local $elem f32)
  block $~lib/typedarray/INCLUDES<~lib/typedarray/Float32Array,f32>|inlined.0 (result i32)
   local.get $this
   local.set $array
   local.get $searchElement
   local.set $searchElement|4
   local.get $fromIndex
   local.set $fromIndex|5
   i32.const 1
   drop
   local.get $fromIndex|5
   local.set $index
   local.get $array
   call $~lib/typedarray/Float32Array#get:length
   local.set $len
   local.get $len
   i32.const 0
   i32.eq
   if (result i32)
    i32.const 1
   else
    local.get $index
    local.get $len
    i32.ge_s
   end
   if
    i32.const 0
    br $~lib/typedarray/INCLUDES<~lib/typedarray/Float32Array,f32>|inlined.0
   end
   local.get $index
   i32.const 0
   i32.lt_s
   if
    local.get $len
    local.get $index
    i32.add
    local.tee $8
    i32.const 0
    local.tee $9
    local.get $8
    local.get $9
    i32.gt_s
    select
    local.set $index
   end
   local.get $array
   i32.load $0 offset=4
   local.set $dataStart
   loop $while-continue|0
    local.get $index
    local.get $len
    i32.lt_s
    local.set $11
    local.get $11
    if
     local.get $dataStart
     local.get $index
     i32.const 2
     i32.shl
     i32.add
     f32.load $0
     local.set $elem
     local.get $elem
     local.get $searchElement|4
     f32.eq
     if (result i32)
      i32.const 1
     else
      local.get $elem
      local.get $elem
      f32.ne
      local.get $searchElement|4
      local.get $searchElement|4
      f32.ne
      i32.and
     end
     if
      i32.const 1
      br $~lib/typedarray/INCLUDES<~lib/typedarray/Float32Array,f32>|inlined.0
     end
     local.get $index
     i32.const 1
     i32.add
     local.set $index
     br $while-continue|0
    end
   end
   i32.const 0
   br $~lib/typedarray/INCLUDES<~lib/typedarray/Float32Array,f32>|inlined.0
  end
 )
 (func $~lib/arraybuffer/ArrayBuffer#constructor (type $i32_i32_=>_i32) (param $this i32) (param $length i32) (result i32)
  (local $buffer i32)
  local.get $length
  i32.const 1073741820
  i32.gt_u
  if
   unreachable
  end
  local.get $length
  i32.const 0
  call $~lib/rt/stub/__new
  local.set $buffer
  i32.const 0
  global.get $~lib/shared/runtime/Runtime.Incremental
  i32.ne
  drop
  local.get $buffer
  i32.const 0
  local.get $length
  memory.fill $0
  local.get $buffer
 )
 (func $~lib/arraybuffer/ArrayBuffer#get:byteLength (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.const 20
  i32.sub
  i32.load $0 offset=16
 )
 (func $~lib/typedarray/Uint8Array.wrap (type $i32_i32_i32_=>_i32) (param $buffer i32) (param $byteOffset i32) (param $length i32) (result i32)
  (local $buffer|3 i32)
  (local $byteOffset|4 i32)
  (local $len i32)
  (local $byteLength i32)
  (local $bufferByteLength i32)
  (local $out i32)
  local.get $buffer
  local.set $buffer|3
  local.get $byteOffset
  local.set $byteOffset|4
  local.get $length
  local.set $len
  local.get $buffer|3
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  local.set $bufferByteLength
  local.get $byteOffset|4
  local.get $bufferByteLength
  i32.gt_u
  local.get $byteOffset|4
  i32.const 0
  i32.and
  i32.or
  if
   unreachable
  end
  local.get $len
  i32.const 0
  i32.lt_s
  if
   local.get $len
   i32.const -1
   i32.eq
   if
    local.get $bufferByteLength
    i32.const 0
    i32.and
    if
     unreachable
    end
    local.get $bufferByteLength
    local.get $byteOffset|4
    i32.sub
    local.set $byteLength
   else
    unreachable
   end
  else
   local.get $len
   i32.const 0
   i32.shl
   local.set $byteLength
   local.get $byteOffset|4
   local.get $byteLength
   i32.add
   local.get $bufferByteLength
   i32.gt_s
   if
    unreachable
   end
  end
  i32.const 12
  i32.const 4
  call $~lib/rt/stub/__new
  local.set $out
  local.get $out
  local.get $buffer|3
  i32.store $0
  local.get $out
  local.get $buffer|3
  i32.const 0
  call $~lib/rt/stub/__link
  local.get $out
  local.get $byteLength
  i32.store $0 offset=8
  local.get $out
  local.get $buffer|3
  local.get $byteOffset|4
  i32.add
  i32.store $0 offset=4
  local.get $out
 )
 (func $~lib/typedarray/Uint8Array.wrap@varargs (type $i32_i32_i32_=>_i32) (param $buffer i32) (param $byteOffset i32) (param $length i32) (result i32)
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~argumentsLength
      i32.const 1
      i32.sub
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    i32.const 0
    local.set $byteOffset
   end
   i32.const -1
   local.set $length
  end
  local.get $buffer
  local.get $byteOffset
  local.get $length
  call $~lib/typedarray/Uint8Array.wrap
 )
 (func $~lib/arraybuffer/ArrayBuffer#slice (type $i32_i32_i32_=>_i32) (param $this i32) (param $begin i32) (param $end i32) (result i32)
  (local $length i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $outSize i32)
  (local $out i32)
  local.get $this
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  local.set $length
  local.get $begin
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $length
   local.get $begin
   i32.add
   local.tee $4
   i32.const 0
   local.tee $5
   local.get $4
   local.get $5
   i32.gt_s
   select
  else
   local.get $begin
   local.tee $6
   local.get $length
   local.tee $7
   local.get $6
   local.get $7
   i32.lt_s
   select
  end
  local.set $begin
  local.get $end
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $length
   local.get $end
   i32.add
   local.tee $8
   i32.const 0
   local.tee $9
   local.get $8
   local.get $9
   i32.gt_s
   select
  else
   local.get $end
   local.tee $10
   local.get $length
   local.tee $11
   local.get $10
   local.get $11
   i32.lt_s
   select
  end
  local.set $end
  local.get $end
  local.get $begin
  i32.sub
  local.tee $12
  i32.const 0
  local.tee $13
  local.get $12
  local.get $13
  i32.gt_s
  select
  local.set $outSize
  local.get $outSize
  i32.const 0
  call $~lib/rt/stub/__new
  local.set $out
  local.get $out
  local.get $this
  local.get $begin
  i32.add
  local.get $outSize
  memory.copy $0 $0
  local.get $out
 )
 (func $~lib/typedarray/Int8Array.wrap (type $i32_i32_i32_=>_i32) (param $buffer i32) (param $byteOffset i32) (param $length i32) (result i32)
  (local $buffer|3 i32)
  (local $byteOffset|4 i32)
  (local $len i32)
  (local $byteLength i32)
  (local $bufferByteLength i32)
  (local $out i32)
  local.get $buffer
  local.set $buffer|3
  local.get $byteOffset
  local.set $byteOffset|4
  local.get $length
  local.set $len
  local.get $buffer|3
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  local.set $bufferByteLength
  local.get $byteOffset|4
  local.get $bufferByteLength
  i32.gt_u
  local.get $byteOffset|4
  i32.const 0
  i32.and
  i32.or
  if
   unreachable
  end
  local.get $len
  i32.const 0
  i32.lt_s
  if
   local.get $len
   i32.const -1
   i32.eq
   if
    local.get $bufferByteLength
    i32.const 0
    i32.and
    if
     unreachable
    end
    local.get $bufferByteLength
    local.get $byteOffset|4
    i32.sub
    local.set $byteLength
   else
    unreachable
   end
  else
   local.get $len
   i32.const 0
   i32.shl
   local.set $byteLength
   local.get $byteOffset|4
   local.get $byteLength
   i32.add
   local.get $bufferByteLength
   i32.gt_s
   if
    unreachable
   end
  end
  i32.const 12
  i32.const 3
  call $~lib/rt/stub/__new
  local.set $out
  local.get $out
  local.get $buffer|3
  i32.store $0
  local.get $out
  local.get $buffer|3
  i32.const 0
  call $~lib/rt/stub/__link
  local.get $out
  local.get $byteLength
  i32.store $0 offset=8
  local.get $out
  local.get $buffer|3
  local.get $byteOffset|4
  i32.add
  i32.store $0 offset=4
  local.get $out
 )
 (func $~lib/typedarray/Int8Array.wrap@varargs (type $i32_i32_i32_=>_i32) (param $buffer i32) (param $byteOffset i32) (param $length i32) (result i32)
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~argumentsLength
      i32.const 1
      i32.sub
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    i32.const 0
    local.set $byteOffset
   end
   i32.const -1
   local.set $length
  end
  local.get $buffer
  local.get $byteOffset
  local.get $length
  call $~lib/typedarray/Int8Array.wrap
 )
 (func $~lib/typedarray/Uint8ClampedArray.wrap (type $i32_i32_i32_=>_i32) (param $buffer i32) (param $byteOffset i32) (param $length i32) (result i32)
  (local $buffer|3 i32)
  (local $byteOffset|4 i32)
  (local $len i32)
  (local $byteLength i32)
  (local $bufferByteLength i32)
  (local $out i32)
  local.get $buffer
  local.set $buffer|3
  local.get $byteOffset
  local.set $byteOffset|4
  local.get $length
  local.set $len
  local.get $buffer|3
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  local.set $bufferByteLength
  local.get $byteOffset|4
  local.get $bufferByteLength
  i32.gt_u
  local.get $byteOffset|4
  i32.const 0
  i32.and
  i32.or
  if
   unreachable
  end
  local.get $len
  i32.const 0
  i32.lt_s
  if
   local.get $len
   i32.const -1
   i32.eq
   if
    local.get $bufferByteLength
    i32.const 0
    i32.and
    if
     unreachable
    end
    local.get $bufferByteLength
    local.get $byteOffset|4
    i32.sub
    local.set $byteLength
   else
    unreachable
   end
  else
   local.get $len
   i32.const 0
   i32.shl
   local.set $byteLength
   local.get $byteOffset|4
   local.get $byteLength
   i32.add
   local.get $bufferByteLength
   i32.gt_s
   if
    unreachable
   end
  end
  i32.const 12
  i32.const 5
  call $~lib/rt/stub/__new
  local.set $out
  local.get $out
  local.get $buffer|3
  i32.store $0
  local.get $out
  local.get $buffer|3
  i32.const 0
  call $~lib/rt/stub/__link
  local.get $out
  local.get $byteLength
  i32.store $0 offset=8
  local.get $out
  local.get $buffer|3
  local.get $byteOffset|4
  i32.add
  i32.store $0 offset=4
  local.get $out
 )
 (func $~lib/typedarray/Uint8ClampedArray.wrap@varargs (type $i32_i32_i32_=>_i32) (param $buffer i32) (param $byteOffset i32) (param $length i32) (result i32)
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~argumentsLength
      i32.const 1
      i32.sub
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    i32.const 0
    local.set $byteOffset
   end
   i32.const -1
   local.set $length
  end
  local.get $buffer
  local.get $byteOffset
  local.get $length
  call $~lib/typedarray/Uint8ClampedArray.wrap
 )
 (func $~lib/typedarray/Int16Array.wrap (type $i32_i32_i32_=>_i32) (param $buffer i32) (param $byteOffset i32) (param $length i32) (result i32)
  (local $buffer|3 i32)
  (local $byteOffset|4 i32)
  (local $len i32)
  (local $byteLength i32)
  (local $bufferByteLength i32)
  (local $out i32)
  local.get $buffer
  local.set $buffer|3
  local.get $byteOffset
  local.set $byteOffset|4
  local.get $length
  local.set $len
  local.get $buffer|3
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  local.set $bufferByteLength
  local.get $byteOffset|4
  local.get $bufferByteLength
  i32.gt_u
  local.get $byteOffset|4
  i32.const 1
  i32.and
  i32.or
  if
   unreachable
  end
  local.get $len
  i32.const 0
  i32.lt_s
  if
   local.get $len
   i32.const -1
   i32.eq
   if
    local.get $bufferByteLength
    i32.const 1
    i32.and
    if
     unreachable
    end
    local.get $bufferByteLength
    local.get $byteOffset|4
    i32.sub
    local.set $byteLength
   else
    unreachable
   end
  else
   local.get $len
   i32.const 1
   i32.shl
   local.set $byteLength
   local.get $byteOffset|4
   local.get $byteLength
   i32.add
   local.get $bufferByteLength
   i32.gt_s
   if
    unreachable
   end
  end
  i32.const 12
  i32.const 6
  call $~lib/rt/stub/__new
  local.set $out
  local.get $out
  local.get $buffer|3
  i32.store $0
  local.get $out
  local.get $buffer|3
  i32.const 0
  call $~lib/rt/stub/__link
  local.get $out
  local.get $byteLength
  i32.store $0 offset=8
  local.get $out
  local.get $buffer|3
  local.get $byteOffset|4
  i32.add
  i32.store $0 offset=4
  local.get $out
 )
 (func $~lib/typedarray/Int16Array.wrap@varargs (type $i32_i32_i32_=>_i32) (param $buffer i32) (param $byteOffset i32) (param $length i32) (result i32)
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~argumentsLength
      i32.const 1
      i32.sub
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    i32.const 0
    local.set $byteOffset
   end
   i32.const -1
   local.set $length
  end
  local.get $buffer
  local.get $byteOffset
  local.get $length
  call $~lib/typedarray/Int16Array.wrap
 )
 (func $~lib/typedarray/Uint16Array.wrap (type $i32_i32_i32_=>_i32) (param $buffer i32) (param $byteOffset i32) (param $length i32) (result i32)
  (local $buffer|3 i32)
  (local $byteOffset|4 i32)
  (local $len i32)
  (local $byteLength i32)
  (local $bufferByteLength i32)
  (local $out i32)
  local.get $buffer
  local.set $buffer|3
  local.get $byteOffset
  local.set $byteOffset|4
  local.get $length
  local.set $len
  local.get $buffer|3
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  local.set $bufferByteLength
  local.get $byteOffset|4
  local.get $bufferByteLength
  i32.gt_u
  local.get $byteOffset|4
  i32.const 1
  i32.and
  i32.or
  if
   unreachable
  end
  local.get $len
  i32.const 0
  i32.lt_s
  if
   local.get $len
   i32.const -1
   i32.eq
   if
    local.get $bufferByteLength
    i32.const 1
    i32.and
    if
     unreachable
    end
    local.get $bufferByteLength
    local.get $byteOffset|4
    i32.sub
    local.set $byteLength
   else
    unreachable
   end
  else
   local.get $len
   i32.const 1
   i32.shl
   local.set $byteLength
   local.get $byteOffset|4
   local.get $byteLength
   i32.add
   local.get $bufferByteLength
   i32.gt_s
   if
    unreachable
   end
  end
  i32.const 12
  i32.const 7
  call $~lib/rt/stub/__new
  local.set $out
  local.get $out
  local.get $buffer|3
  i32.store $0
  local.get $out
  local.get $buffer|3
  i32.const 0
  call $~lib/rt/stub/__link
  local.get $out
  local.get $byteLength
  i32.store $0 offset=8
  local.get $out
  local.get $buffer|3
  local.get $byteOffset|4
  i32.add
  i32.store $0 offset=4
  local.get $out
 )
 (func $~lib/typedarray/Uint16Array.wrap@varargs (type $i32_i32_i32_=>_i32) (param $buffer i32) (param $byteOffset i32) (param $length i32) (result i32)
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~argumentsLength
      i32.const 1
      i32.sub
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    i32.const 0
    local.set $byteOffset
   end
   i32.const -1
   local.set $length
  end
  local.get $buffer
  local.get $byteOffset
  local.get $length
  call $~lib/typedarray/Uint16Array.wrap
 )
 (func $~lib/typedarray/Int32Array.wrap (type $i32_i32_i32_=>_i32) (param $buffer i32) (param $byteOffset i32) (param $length i32) (result i32)
  (local $buffer|3 i32)
  (local $byteOffset|4 i32)
  (local $len i32)
  (local $byteLength i32)
  (local $bufferByteLength i32)
  (local $out i32)
  local.get $buffer
  local.set $buffer|3
  local.get $byteOffset
  local.set $byteOffset|4
  local.get $length
  local.set $len
  local.get $buffer|3
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  local.set $bufferByteLength
  local.get $byteOffset|4
  local.get $bufferByteLength
  i32.gt_u
  local.get $byteOffset|4
  i32.const 3
  i32.and
  i32.or
  if
   unreachable
  end
  local.get $len
  i32.const 0
  i32.lt_s
  if
   local.get $len
   i32.const -1
   i32.eq
   if
    local.get $bufferByteLength
    i32.const 3
    i32.and
    if
     unreachable
    end
    local.get $bufferByteLength
    local.get $byteOffset|4
    i32.sub
    local.set $byteLength
   else
    unreachable
   end
  else
   local.get $len
   i32.const 2
   i32.shl
   local.set $byteLength
   local.get $byteOffset|4
   local.get $byteLength
   i32.add
   local.get $bufferByteLength
   i32.gt_s
   if
    unreachable
   end
  end
  i32.const 12
  i32.const 8
  call $~lib/rt/stub/__new
  local.set $out
  local.get $out
  local.get $buffer|3
  i32.store $0
  local.get $out
  local.get $buffer|3
  i32.const 0
  call $~lib/rt/stub/__link
  local.get $out
  local.get $byteLength
  i32.store $0 offset=8
  local.get $out
  local.get $buffer|3
  local.get $byteOffset|4
  i32.add
  i32.store $0 offset=4
  local.get $out
 )
 (func $~lib/typedarray/Int32Array.wrap@varargs (type $i32_i32_i32_=>_i32) (param $buffer i32) (param $byteOffset i32) (param $length i32) (result i32)
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~argumentsLength
      i32.const 1
      i32.sub
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    i32.const 0
    local.set $byteOffset
   end
   i32.const -1
   local.set $length
  end
  local.get $buffer
  local.get $byteOffset
  local.get $length
  call $~lib/typedarray/Int32Array.wrap
 )
 (func $~lib/typedarray/Uint32Array.wrap (type $i32_i32_i32_=>_i32) (param $buffer i32) (param $byteOffset i32) (param $length i32) (result i32)
  (local $buffer|3 i32)
  (local $byteOffset|4 i32)
  (local $len i32)
  (local $byteLength i32)
  (local $bufferByteLength i32)
  (local $out i32)
  local.get $buffer
  local.set $buffer|3
  local.get $byteOffset
  local.set $byteOffset|4
  local.get $length
  local.set $len
  local.get $buffer|3
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  local.set $bufferByteLength
  local.get $byteOffset|4
  local.get $bufferByteLength
  i32.gt_u
  local.get $byteOffset|4
  i32.const 3
  i32.and
  i32.or
  if
   unreachable
  end
  local.get $len
  i32.const 0
  i32.lt_s
  if
   local.get $len
   i32.const -1
   i32.eq
   if
    local.get $bufferByteLength
    i32.const 3
    i32.and
    if
     unreachable
    end
    local.get $bufferByteLength
    local.get $byteOffset|4
    i32.sub
    local.set $byteLength
   else
    unreachable
   end
  else
   local.get $len
   i32.const 2
   i32.shl
   local.set $byteLength
   local.get $byteOffset|4
   local.get $byteLength
   i32.add
   local.get $bufferByteLength
   i32.gt_s
   if
    unreachable
   end
  end
  i32.const 12
  i32.const 9
  call $~lib/rt/stub/__new
  local.set $out
  local.get $out
  local.get $buffer|3
  i32.store $0
  local.get $out
  local.get $buffer|3
  i32.const 0
  call $~lib/rt/stub/__link
  local.get $out
  local.get $byteLength
  i32.store $0 offset=8
  local.get $out
  local.get $buffer|3
  local.get $byteOffset|4
  i32.add
  i32.store $0 offset=4
  local.get $out
 )
 (func $~lib/typedarray/Uint32Array.wrap@varargs (type $i32_i32_i32_=>_i32) (param $buffer i32) (param $byteOffset i32) (param $length i32) (result i32)
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~argumentsLength
      i32.const 1
      i32.sub
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    i32.const 0
    local.set $byteOffset
   end
   i32.const -1
   local.set $length
  end
  local.get $buffer
  local.get $byteOffset
  local.get $length
  call $~lib/typedarray/Uint32Array.wrap
 )
 (func $~lib/typedarray/Int64Array.wrap (type $i32_i32_i32_=>_i32) (param $buffer i32) (param $byteOffset i32) (param $length i32) (result i32)
  (local $buffer|3 i32)
  (local $byteOffset|4 i32)
  (local $len i32)
  (local $byteLength i32)
  (local $bufferByteLength i32)
  (local $out i32)
  local.get $buffer
  local.set $buffer|3
  local.get $byteOffset
  local.set $byteOffset|4
  local.get $length
  local.set $len
  local.get $buffer|3
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  local.set $bufferByteLength
  local.get $byteOffset|4
  local.get $bufferByteLength
  i32.gt_u
  local.get $byteOffset|4
  i32.const 7
  i32.and
  i32.or
  if
   unreachable
  end
  local.get $len
  i32.const 0
  i32.lt_s
  if
   local.get $len
   i32.const -1
   i32.eq
   if
    local.get $bufferByteLength
    i32.const 7
    i32.and
    if
     unreachable
    end
    local.get $bufferByteLength
    local.get $byteOffset|4
    i32.sub
    local.set $byteLength
   else
    unreachable
   end
  else
   local.get $len
   i32.const 3
   i32.shl
   local.set $byteLength
   local.get $byteOffset|4
   local.get $byteLength
   i32.add
   local.get $bufferByteLength
   i32.gt_s
   if
    unreachable
   end
  end
  i32.const 12
  i32.const 10
  call $~lib/rt/stub/__new
  local.set $out
  local.get $out
  local.get $buffer|3
  i32.store $0
  local.get $out
  local.get $buffer|3
  i32.const 0
  call $~lib/rt/stub/__link
  local.get $out
  local.get $byteLength
  i32.store $0 offset=8
  local.get $out
  local.get $buffer|3
  local.get $byteOffset|4
  i32.add
  i32.store $0 offset=4
  local.get $out
 )
 (func $~lib/typedarray/Int64Array.wrap@varargs (type $i32_i32_i32_=>_i32) (param $buffer i32) (param $byteOffset i32) (param $length i32) (result i32)
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~argumentsLength
      i32.const 1
      i32.sub
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    i32.const 0
    local.set $byteOffset
   end
   i32.const -1
   local.set $length
  end
  local.get $buffer
  local.get $byteOffset
  local.get $length
  call $~lib/typedarray/Int64Array.wrap
 )
 (func $~lib/typedarray/Uint64Array.wrap (type $i32_i32_i32_=>_i32) (param $buffer i32) (param $byteOffset i32) (param $length i32) (result i32)
  (local $buffer|3 i32)
  (local $byteOffset|4 i32)
  (local $len i32)
  (local $byteLength i32)
  (local $bufferByteLength i32)
  (local $out i32)
  local.get $buffer
  local.set $buffer|3
  local.get $byteOffset
  local.set $byteOffset|4
  local.get $length
  local.set $len
  local.get $buffer|3
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  local.set $bufferByteLength
  local.get $byteOffset|4
  local.get $bufferByteLength
  i32.gt_u
  local.get $byteOffset|4
  i32.const 7
  i32.and
  i32.or
  if
   unreachable
  end
  local.get $len
  i32.const 0
  i32.lt_s
  if
   local.get $len
   i32.const -1
   i32.eq
   if
    local.get $bufferByteLength
    i32.const 7
    i32.and
    if
     unreachable
    end
    local.get $bufferByteLength
    local.get $byteOffset|4
    i32.sub
    local.set $byteLength
   else
    unreachable
   end
  else
   local.get $len
   i32.const 3
   i32.shl
   local.set $byteLength
   local.get $byteOffset|4
   local.get $byteLength
   i32.add
   local.get $bufferByteLength
   i32.gt_s
   if
    unreachable
   end
  end
  i32.const 12
  i32.const 11
  call $~lib/rt/stub/__new
  local.set $out
  local.get $out
  local.get $buffer|3
  i32.store $0
  local.get $out
  local.get $buffer|3
  i32.const 0
  call $~lib/rt/stub/__link
  local.get $out
  local.get $byteLength
  i32.store $0 offset=8
  local.get $out
  local.get $buffer|3
  local.get $byteOffset|4
  i32.add
  i32.store $0 offset=4
  local.get $out
 )
 (func $~lib/typedarray/Uint64Array.wrap@varargs (type $i32_i32_i32_=>_i32) (param $buffer i32) (param $byteOffset i32) (param $length i32) (result i32)
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~argumentsLength
      i32.const 1
      i32.sub
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    i32.const 0
    local.set $byteOffset
   end
   i32.const -1
   local.set $length
  end
  local.get $buffer
  local.get $byteOffset
  local.get $length
  call $~lib/typedarray/Uint64Array.wrap
 )
 (func $~lib/typedarray/Float32Array.wrap (type $i32_i32_i32_=>_i32) (param $buffer i32) (param $byteOffset i32) (param $length i32) (result i32)
  (local $buffer|3 i32)
  (local $byteOffset|4 i32)
  (local $len i32)
  (local $byteLength i32)
  (local $bufferByteLength i32)
  (local $out i32)
  local.get $buffer
  local.set $buffer|3
  local.get $byteOffset
  local.set $byteOffset|4
  local.get $length
  local.set $len
  local.get $buffer|3
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  local.set $bufferByteLength
  local.get $byteOffset|4
  local.get $bufferByteLength
  i32.gt_u
  local.get $byteOffset|4
  i32.const 3
  i32.and
  i32.or
  if
   unreachable
  end
  local.get $len
  i32.const 0
  i32.lt_s
  if
   local.get $len
   i32.const -1
   i32.eq
   if
    local.get $bufferByteLength
    i32.const 3
    i32.and
    if
     unreachable
    end
    local.get $bufferByteLength
    local.get $byteOffset|4
    i32.sub
    local.set $byteLength
   else
    unreachable
   end
  else
   local.get $len
   i32.const 2
   i32.shl
   local.set $byteLength
   local.get $byteOffset|4
   local.get $byteLength
   i32.add
   local.get $bufferByteLength
   i32.gt_s
   if
    unreachable
   end
  end
  i32.const 12
  i32.const 12
  call $~lib/rt/stub/__new
  local.set $out
  local.get $out
  local.get $buffer|3
  i32.store $0
  local.get $out
  local.get $buffer|3
  i32.const 0
  call $~lib/rt/stub/__link
  local.get $out
  local.get $byteLength
  i32.store $0 offset=8
  local.get $out
  local.get $buffer|3
  local.get $byteOffset|4
  i32.add
  i32.store $0 offset=4
  local.get $out
 )
 (func $~lib/typedarray/Float32Array.wrap@varargs (type $i32_i32_i32_=>_i32) (param $buffer i32) (param $byteOffset i32) (param $length i32) (result i32)
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~argumentsLength
      i32.const 1
      i32.sub
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    i32.const 0
    local.set $byteOffset
   end
   i32.const -1
   local.set $length
  end
  local.get $buffer
  local.get $byteOffset
  local.get $length
  call $~lib/typedarray/Float32Array.wrap
 )
 (func $~lib/typedarray/Float64Array.wrap (type $i32_i32_i32_=>_i32) (param $buffer i32) (param $byteOffset i32) (param $length i32) (result i32)
  (local $buffer|3 i32)
  (local $byteOffset|4 i32)
  (local $len i32)
  (local $byteLength i32)
  (local $bufferByteLength i32)
  (local $out i32)
  local.get $buffer
  local.set $buffer|3
  local.get $byteOffset
  local.set $byteOffset|4
  local.get $length
  local.set $len
  local.get $buffer|3
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  local.set $bufferByteLength
  local.get $byteOffset|4
  local.get $bufferByteLength
  i32.gt_u
  local.get $byteOffset|4
  i32.const 7
  i32.and
  i32.or
  if
   unreachable
  end
  local.get $len
  i32.const 0
  i32.lt_s
  if
   local.get $len
   i32.const -1
   i32.eq
   if
    local.get $bufferByteLength
    i32.const 7
    i32.and
    if
     unreachable
    end
    local.get $bufferByteLength
    local.get $byteOffset|4
    i32.sub
    local.set $byteLength
   else
    unreachable
   end
  else
   local.get $len
   i32.const 3
   i32.shl
   local.set $byteLength
   local.get $byteOffset|4
   local.get $byteLength
   i32.add
   local.get $bufferByteLength
   i32.gt_s
   if
    unreachable
   end
  end
  i32.const 12
  i32.const 13
  call $~lib/rt/stub/__new
  local.set $out
  local.get $out
  local.get $buffer|3
  i32.store $0
  local.get $out
  local.get $buffer|3
  i32.const 0
  call $~lib/rt/stub/__link
  local.get $out
  local.get $byteLength
  i32.store $0 offset=8
  local.get $out
  local.get $buffer|3
  local.get $byteOffset|4
  i32.add
  i32.store $0 offset=4
  local.get $out
 )
 (func $~lib/typedarray/Float64Array.wrap@varargs (type $i32_i32_i32_=>_i32) (param $buffer i32) (param $byteOffset i32) (param $length i32) (result i32)
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~argumentsLength
      i32.const 1
      i32.sub
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    i32.const 0
    local.set $byteOffset
   end
   i32.const -1
   local.set $length
  end
  local.get $buffer
  local.get $byteOffset
  local.get $length
  call $~lib/typedarray/Float64Array.wrap
 )
 (func $~lib/typedarray/Int8Array#set<~lib/array/Array<i32>> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/array/Array<i32>#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Int8Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 0
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 0
  i32.const 2
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $ptr
    local.get $value
    i32.store8 $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Int8Array#__uget (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.add
  i32.load8_s $0
 )
 (func $~lib/array/Array<i8>#__uget (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 0
  i32.shl
  i32.add
  i32.load8_s $0
 )
 (func $~lib/array/Array<f32>#get:length (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/typedarray/Int8Array#set<~lib/array/Array<f32>> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value f32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/array/Array<f32>#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Int8Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 0
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 1
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    f32.load $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    i32.eqz
    drop
    local.get $ptr
    local.get $value
    local.get $value
    f32.sub
    f32.const 0
    f32.eq
    if (result i32)
     local.get $value
     i32.trunc_sat_f32_s
    else
     i32.const 0
    end
    i32.store8 $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Int8Array#set<~lib/typedarray/Int64Array> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i64)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/typedarray/Int64Array#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Int8Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 0
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 0
  i32.const 3
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $ptr
    local.get $value
    i32.wrap_i64
    i32.store8 $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/array/Array<f64>#get:length (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/typedarray/Int8Array#set<~lib/array/Array<f64>> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value f64)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/array/Array<f64>#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Int8Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 0
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 1
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    f64.load $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    i32.eqz
    drop
    local.get $ptr
    local.get $value
    local.get $value
    f64.sub
    f64.const 0
    f64.eq
    if (result i32)
     local.get $value
     i32.trunc_sat_f64_s
    else
     i32.const 0
    end
    i32.store8 $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Int8Array#set<~lib/typedarray/Uint8Array> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/typedarray/Uint8Array#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Int8Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 0
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 0
  i32.eqz
  drop
  local.get $targetStart
  local.get $sourceStart
  local.get $sourceLen
  i32.const 0
  i32.shl
  memory.copy $0 $0
 )
 (func $~lib/typedarray/Int8Array#set<~lib/typedarray/Int16Array> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/typedarray/Int16Array#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Int8Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 0
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 0
  i32.const 1
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 1
    i32.shl
    i32.add
    i32.load16_s $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $ptr
    local.get $value
    i32.store8 $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Int8Array#set<~lib/array/Array<i8>> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/array/Array<i8>#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Int8Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 0
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 0
  i32.eqz
  drop
  local.get $targetStart
  local.get $sourceStart
  local.get $sourceLen
  i32.const 0
  i32.shl
  memory.copy $0 $0
 )
 (func $~lib/typedarray/Uint8Array#set<~lib/array/Array<i32>> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/array/Array<i32>#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Uint8Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 0
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 0
  i32.const 2
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $ptr
    local.get $value
    i32.store8 $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/array/Array<u8>#get:length (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/typedarray/Uint8Array#__uget (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.add
  i32.load8_u $0
 )
 (func $~lib/array/Array<u8>#__uget (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 0
  i32.shl
  i32.add
  i32.load8_u $0
 )
 (func $~lib/typedarray/Uint8Array#set<~lib/array/Array<f32>> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value f32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/array/Array<f32>#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Uint8Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 0
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 1
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    f32.load $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    i32.eqz
    drop
    local.get $ptr
    local.get $value
    local.get $value
    f32.sub
    f32.const 0
    f32.eq
    if (result i32)
     local.get $value
     i32.trunc_sat_f32_u
    else
     i32.const 0
    end
    i32.store8 $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint8Array#set<~lib/typedarray/Int64Array> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i64)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/typedarray/Int64Array#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Uint8Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 0
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 0
  i32.const 3
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $ptr
    local.get $value
    i32.wrap_i64
    i32.store8 $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint8Array#set<~lib/array/Array<f64>> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value f64)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/array/Array<f64>#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Uint8Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 0
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 1
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    f64.load $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    i32.eqz
    drop
    local.get $ptr
    local.get $value
    local.get $value
    f64.sub
    f64.const 0
    f64.eq
    if (result i32)
     local.get $value
     i32.trunc_sat_f64_u
    else
     i32.const 0
    end
    i32.store8 $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint8Array#set<~lib/typedarray/Uint8Array> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/typedarray/Uint8Array#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Uint8Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 0
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 0
  i32.eqz
  drop
  local.get $targetStart
  local.get $sourceStart
  local.get $sourceLen
  i32.const 0
  i32.shl
  memory.copy $0 $0
 )
 (func $~lib/typedarray/Uint8Array#set<~lib/typedarray/Int16Array> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/typedarray/Int16Array#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Uint8Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 0
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 0
  i32.const 1
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 1
    i32.shl
    i32.add
    i32.load16_s $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $ptr
    local.get $value
    i32.store8 $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint8Array#set<~lib/array/Array<i8>> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/array/Array<i8>#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Uint8Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 0
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 0
  i32.eqz
  drop
  local.get $targetStart
  local.get $sourceStart
  local.get $sourceLen
  i32.const 0
  i32.shl
  memory.copy $0 $0
 )
 (func $~lib/typedarray/Uint8ClampedArray#set<~lib/array/Array<i32>> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/array/Array<i32>#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Uint8ClampedArray#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 0
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 0
  i32.const 2
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $value
    i32.const 1
    drop
    i32.const 0
    drop
    i32.const 1
    i32.eqz
    drop
    i32.const 1
    i32.const 4
    i32.le_u
    drop
    local.get $ptr
    local.get $value
    i32.const 31
    i32.shr_s
    i32.const -1
    i32.xor
    i32.const 255
    local.get $value
    i32.sub
    i32.const 31
    i32.shr_s
    local.get $value
    i32.or
    i32.and
    i32.store8 $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint8ClampedArray#__uget (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.add
  i32.load8_u $0
 )
 (func $~lib/typedarray/Uint8ClampedArray#set<~lib/array/Array<f32>> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value f32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/array/Array<f32>#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Uint8ClampedArray#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 0
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 1
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    f32.load $0
    local.set $value
    i32.const 1
    drop
    i32.const 1
    drop
    local.get $ptr
    local.get $value
    local.get $value
    f32.sub
    f32.const 0
    f32.eq
    if (result i32)
     f32.const 0
     f32.const 255
     local.get $value
     f32.min
     f32.max
     i32.trunc_sat_f32_u
    else
     i32.const 0
    end
    i32.store8 $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint8ClampedArray#set<~lib/typedarray/Int64Array> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i64)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/typedarray/Int64Array#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Uint8ClampedArray#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 0
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 0
  i32.const 3
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    local.set $value
    i32.const 1
    drop
    i32.const 0
    drop
    i32.const 1
    i32.eqz
    drop
    i32.const 1
    i32.const 4
    i32.le_u
    drop
    local.get $ptr
    local.get $value
    i32.wrap_i64
    i32.const 31
    i32.shr_s
    i32.const -1
    i32.xor
    i64.extend_i32_s
    i32.const 255
    local.get $value
    i32.wrap_i64
    i32.sub
    i32.const 31
    i32.shr_s
    i64.extend_i32_s
    local.get $value
    i64.or
    i64.and
    i64.store8 $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint8ClampedArray#set<~lib/array/Array<f64>> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value f64)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/array/Array<f64>#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Uint8ClampedArray#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 0
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 1
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    f64.load $0
    local.set $value
    i32.const 1
    drop
    i32.const 1
    drop
    local.get $ptr
    local.get $value
    local.get $value
    f64.sub
    f64.const 0
    f64.eq
    if (result i32)
     f64.const 0
     f64.const 255
     local.get $value
     f64.min
     f64.max
     i32.trunc_sat_f64_u
    else
     i32.const 0
    end
    i32.store8 $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint8ClampedArray#set<~lib/typedarray/Uint8Array> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/typedarray/Uint8Array#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Uint8ClampedArray#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 0
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 0
  i32.eqz
  drop
  local.get $targetStart
  local.get $sourceStart
  local.get $sourceLen
  i32.const 0
  i32.shl
  memory.copy $0 $0
 )
 (func $~lib/typedarray/Uint8ClampedArray#set<~lib/typedarray/Int16Array> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/typedarray/Int16Array#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Uint8ClampedArray#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 0
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 0
  i32.const 1
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 1
    i32.shl
    i32.add
    i32.load16_s $0
    local.set $value
    i32.const 1
    drop
    i32.const 0
    drop
    i32.const 1
    i32.eqz
    drop
    i32.const 1
    i32.const 4
    i32.le_u
    drop
    local.get $ptr
    local.get $value
    i32.const 31
    i32.shr_s
    i32.const -1
    i32.xor
    i32.const 255
    local.get $value
    i32.sub
    i32.const 31
    i32.shr_s
    local.get $value
    i32.or
    i32.and
    i32.store8 $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint8ClampedArray#set<~lib/array/Array<i8>> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/array/Array<i8>#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Uint8ClampedArray#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 0
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 1
  i32.eqz
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    i32.load8_s $0
    local.set $value
    i32.const 1
    drop
    i32.const 0
    drop
    i32.const 1
    i32.eqz
    drop
    i32.const 1
    i32.const 4
    i32.le_u
    drop
    local.get $ptr
    local.get $value
    i32.const 31
    i32.shr_s
    i32.const -1
    i32.xor
    i32.const 255
    local.get $value
    i32.sub
    i32.const 31
    i32.shr_s
    local.get $value
    i32.or
    i32.and
    i32.store8 $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Int16Array#set<~lib/array/Array<i32>> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/array/Array<i32>#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Int16Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 1
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 1
  i32.const 2
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 1
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $ptr
    local.get $value
    i32.store16 $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/array/Array<i16>#get:length (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/typedarray/Int16Array#__uget (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 1
  i32.shl
  i32.add
  i32.load16_s $0
 )
 (func $~lib/array/Array<i16>#__uget (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 1
  i32.shl
  i32.add
  i32.load16_s $0
 )
 (func $~lib/typedarray/Int16Array#set<~lib/array/Array<f32>> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value f32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/array/Array<f32>#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Int16Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 1
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 1
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 1
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    f32.load $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    i32.eqz
    drop
    local.get $ptr
    local.get $value
    local.get $value
    f32.sub
    f32.const 0
    f32.eq
    if (result i32)
     local.get $value
     i32.trunc_sat_f32_s
    else
     i32.const 0
    end
    i32.store16 $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Int16Array#set<~lib/typedarray/Int64Array> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i64)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/typedarray/Int64Array#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Int16Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 1
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 1
  i32.const 3
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 1
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $ptr
    local.get $value
    i32.wrap_i64
    i32.store16 $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Int16Array#set<~lib/array/Array<f64>> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value f64)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/array/Array<f64>#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Int16Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 1
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 1
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 1
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    f64.load $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    i32.eqz
    drop
    local.get $ptr
    local.get $value
    local.get $value
    f64.sub
    f64.const 0
    f64.eq
    if (result i32)
     local.get $value
     i32.trunc_sat_f64_s
    else
     i32.const 0
    end
    i32.store16 $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Int16Array#set<~lib/typedarray/Uint8Array> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/typedarray/Uint8Array#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Int16Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 1
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 1
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 1
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    i32.load8_u $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $ptr
    local.get $value
    i32.store16 $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Int16Array#set<~lib/typedarray/Int16Array> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/typedarray/Int16Array#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Int16Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 1
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 0
  i32.eqz
  drop
  local.get $targetStart
  local.get $sourceStart
  local.get $sourceLen
  i32.const 1
  i32.shl
  memory.copy $0 $0
 )
 (func $~lib/typedarray/Int16Array#set<~lib/array/Array<i8>> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/array/Array<i8>#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Int16Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 1
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 1
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 1
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    i32.load8_s $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $ptr
    local.get $value
    i32.store16 $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint16Array#set<~lib/array/Array<i32>> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/array/Array<i32>#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Uint16Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 1
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 1
  i32.const 2
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 1
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $ptr
    local.get $value
    i32.store16 $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/array/Array<u16>#get:length (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/typedarray/Uint16Array#__uget (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 1
  i32.shl
  i32.add
  i32.load16_u $0
 )
 (func $~lib/array/Array<u16>#__uget (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 1
  i32.shl
  i32.add
  i32.load16_u $0
 )
 (func $~lib/typedarray/Uint16Array#set<~lib/array/Array<f32>> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value f32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/array/Array<f32>#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Uint16Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 1
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 1
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 1
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    f32.load $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    i32.eqz
    drop
    local.get $ptr
    local.get $value
    local.get $value
    f32.sub
    f32.const 0
    f32.eq
    if (result i32)
     local.get $value
     i32.trunc_sat_f32_u
    else
     i32.const 0
    end
    i32.store16 $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint16Array#set<~lib/typedarray/Int64Array> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i64)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/typedarray/Int64Array#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Uint16Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 1
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 1
  i32.const 3
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 1
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $ptr
    local.get $value
    i32.wrap_i64
    i32.store16 $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint16Array#set<~lib/array/Array<f64>> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value f64)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/array/Array<f64>#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Uint16Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 1
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 1
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 1
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    f64.load $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    i32.eqz
    drop
    local.get $ptr
    local.get $value
    local.get $value
    f64.sub
    f64.const 0
    f64.eq
    if (result i32)
     local.get $value
     i32.trunc_sat_f64_u
    else
     i32.const 0
    end
    i32.store16 $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint16Array#set<~lib/typedarray/Uint8Array> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/typedarray/Uint8Array#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Uint16Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 1
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 1
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 1
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    i32.load8_u $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $ptr
    local.get $value
    i32.store16 $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint16Array#set<~lib/typedarray/Int16Array> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/typedarray/Int16Array#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Uint16Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 1
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 0
  i32.eqz
  drop
  local.get $targetStart
  local.get $sourceStart
  local.get $sourceLen
  i32.const 1
  i32.shl
  memory.copy $0 $0
 )
 (func $~lib/typedarray/Uint16Array#set<~lib/array/Array<i8>> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/array/Array<i8>#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Uint16Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 1
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 1
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 1
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    i32.load8_s $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $ptr
    local.get $value
    i32.store16 $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Int32Array#set<~lib/array/Array<i32>> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/array/Array<i32>#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Int32Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 2
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 0
  i32.eqz
  drop
  local.get $targetStart
  local.get $sourceStart
  local.get $sourceLen
  i32.const 2
  i32.shl
  memory.copy $0 $0
 )
 (func $~lib/typedarray/Int32Array#__uget (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
 )
 (func $~lib/array/Array<i32>#__uget (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
 )
 (func $~lib/typedarray/Int32Array#set<~lib/array/Array<f32>> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value f32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/array/Array<f32>#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Int32Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 2
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 1
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    f32.load $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    i32.eqz
    drop
    local.get $ptr
    local.get $value
    local.get $value
    f32.sub
    f32.const 0
    f32.eq
    if (result i32)
     local.get $value
     i32.trunc_sat_f32_s
    else
     i32.const 0
    end
    i32.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Int32Array#set<~lib/typedarray/Int64Array> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i64)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/typedarray/Int64Array#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Int32Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 2
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 2
  i32.const 3
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $ptr
    local.get $value
    i32.wrap_i64
    i32.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Int32Array#set<~lib/array/Array<f64>> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value f64)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/array/Array<f64>#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Int32Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 2
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 1
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    f64.load $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    i32.eqz
    drop
    local.get $ptr
    local.get $value
    local.get $value
    f64.sub
    f64.const 0
    f64.eq
    if (result i32)
     local.get $value
     i32.trunc_sat_f64_s
    else
     i32.const 0
    end
    i32.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Int32Array#set<~lib/typedarray/Uint8Array> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/typedarray/Uint8Array#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Int32Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 2
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 2
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    i32.load8_u $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $ptr
    local.get $value
    i32.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Int32Array#set<~lib/typedarray/Int16Array> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/typedarray/Int16Array#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Int32Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 2
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 2
  i32.const 1
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 1
    i32.shl
    i32.add
    i32.load16_s $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $ptr
    local.get $value
    i32.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Int32Array#set<~lib/array/Array<i8>> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/array/Array<i8>#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Int32Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 2
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 2
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    i32.load8_s $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $ptr
    local.get $value
    i32.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint32Array#set<~lib/array/Array<i32>> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/array/Array<i32>#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Uint32Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 2
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 0
  i32.eqz
  drop
  local.get $targetStart
  local.get $sourceStart
  local.get $sourceLen
  i32.const 2
  i32.shl
  memory.copy $0 $0
 )
 (func $~lib/array/Array<u32>#get:length (type $i32_=>_i32) (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/typedarray/Uint32Array#__uget (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
 )
 (func $~lib/array/Array<u32>#__uget (type $i32_i32_=>_i32) (param $this i32) (param $index i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
 )
 (func $~lib/typedarray/Uint32Array#set<~lib/array/Array<f32>> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value f32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/array/Array<f32>#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Uint32Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 2
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 1
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    f32.load $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    i32.eqz
    drop
    local.get $ptr
    local.get $value
    local.get $value
    f32.sub
    f32.const 0
    f32.eq
    if (result i32)
     local.get $value
     i32.trunc_sat_f32_u
    else
     i32.const 0
    end
    i32.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint32Array#set<~lib/typedarray/Int64Array> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i64)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/typedarray/Int64Array#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Uint32Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 2
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 2
  i32.const 3
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $ptr
    local.get $value
    i32.wrap_i64
    i32.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint32Array#set<~lib/array/Array<f64>> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value f64)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/array/Array<f64>#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Uint32Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 2
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 1
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    f64.load $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    i32.eqz
    drop
    local.get $ptr
    local.get $value
    local.get $value
    f64.sub
    f64.const 0
    f64.eq
    if (result i32)
     local.get $value
     i32.trunc_sat_f64_u
    else
     i32.const 0
    end
    i32.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint32Array#set<~lib/typedarray/Uint8Array> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/typedarray/Uint8Array#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Uint32Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 2
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 2
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    i32.load8_u $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $ptr
    local.get $value
    i32.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint32Array#set<~lib/typedarray/Int16Array> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/typedarray/Int16Array#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Uint32Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 2
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 2
  i32.const 1
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 1
    i32.shl
    i32.add
    i32.load16_s $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $ptr
    local.get $value
    i32.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint32Array#set<~lib/array/Array<i8>> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/array/Array<i8>#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Uint32Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 2
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 2
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    i32.load8_s $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $ptr
    local.get $value
    i32.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Float32Array#set<~lib/array/Array<i32>> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/array/Array<i32>#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Float32Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 2
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 0
  i32.const 1
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $ptr
    local.get $value
    f32.convert_i32_s
    f32.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Float32Array#__uget (type $i32_i32_=>_f32) (param $this i32) (param $index i32) (result f32)
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  f32.load $0
 )
 (func $~lib/array/Array<f32>#__uget (type $i32_i32_=>_f32) (param $this i32) (param $index i32) (result f32)
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  f32.load $0
 )
 (func $~lib/typedarray/Float32Array#set<~lib/array/Array<f32>> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/array/Array<f32>#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Float32Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 2
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 0
  i32.eqz
  drop
  local.get $targetStart
  local.get $sourceStart
  local.get $sourceLen
  i32.const 2
  i32.shl
  memory.copy $0 $0
 )
 (func $~lib/typedarray/Float32Array#set<~lib/typedarray/Int64Array> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i64)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/typedarray/Int64Array#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Float32Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 2
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 0
  i32.const 1
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $ptr
    local.get $value
    f32.convert_i64_s
    f32.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Float32Array#set<~lib/typedarray/Uint8Array> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/typedarray/Uint8Array#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Float32Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 2
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 0
  i32.const 1
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    i32.load8_u $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $ptr
    local.get $value
    f32.convert_i32_u
    f32.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Float32Array#set<~lib/typedarray/Int16Array> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/typedarray/Int16Array#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Float32Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 2
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 0
  i32.const 1
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 1
    i32.shl
    i32.add
    i32.load16_s $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $ptr
    local.get $value
    f32.convert_i32_s
    f32.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Float32Array#set<~lib/array/Array<i8>> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/array/Array<i8>#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Float32Array#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 2
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 0
  i32.const 1
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    i32.load8_s $0
    local.set $value
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $ptr
    local.get $value
    f32.convert_i32_s
    f32.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint8ClampedArray#set<~lib/typedarray/Float32Array> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value f32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/typedarray/Float32Array#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Uint8ClampedArray#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 0
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 1
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    f32.load $0
    local.set $value
    i32.const 1
    drop
    i32.const 1
    drop
    local.get $ptr
    local.get $value
    local.get $value
    f32.sub
    f32.const 0
    f32.eq
    if (result i32)
     f32.const 0
     f32.const 255
     local.get $value
     f32.min
     f32.max
     i32.trunc_sat_f32_u
    else
     i32.const 0
    end
    i32.store8 $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint8ClampedArray#set<~lib/typedarray/Int32Array> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/typedarray/Int32Array#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Uint8ClampedArray#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 0
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 0
  i32.const 2
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $value
    i32.const 1
    drop
    i32.const 0
    drop
    i32.const 1
    i32.eqz
    drop
    i32.const 1
    i32.const 4
    i32.le_u
    drop
    local.get $ptr
    local.get $value
    i32.const 31
    i32.shr_s
    i32.const -1
    i32.xor
    i32.const 255
    local.get $value
    i32.sub
    i32.const 31
    i32.shr_s
    local.get $value
    i32.or
    i32.and
    i32.store8 $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint8ClampedArray#set<~lib/typedarray/Uint32Array> (type $i32_i32_i32_=>_none) (param $this i32) (param $source i32) (param $offset i32)
  (local $target i32)
  (local $source|4 i32)
  (local $offset|5 i32)
  (local $sourceLen i32)
  (local $targetStart i32)
  (local $sourceStart i32)
  (local $i i32)
  (local $10 i32)
  (local $ptr i32)
  (local $value i32)
  (local $13 i32)
  (local $14 i32)
  local.get $this
  local.set $target
  local.get $source
  local.set $source|4
  local.get $offset
  local.set $offset|5
  i32.const 0
  drop
  local.get $source|4
  call $~lib/typedarray/Uint32Array#get:length
  local.set $sourceLen
  local.get $offset|5
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $sourceLen
   local.get $offset|5
   i32.add
   local.get $target
   call $~lib/typedarray/Uint8ClampedArray#get:length
   i32.gt_s
  end
  if
   unreachable
  end
  local.get $target
  i32.load $0 offset=4
  local.get $offset|5
  i32.const 0
  i32.shl
  i32.add
  local.set $targetStart
  local.get $source|4
  i32.load $0 offset=4
  local.set $sourceStart
  i32.const 0
  i32.const 2
  i32.eq
  drop
  i32.const 0
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $sourceLen
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $targetStart
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    local.set $ptr
    local.get $sourceStart
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $value
    i32.const 1
    drop
    i32.const 0
    drop
    i32.const 0
    i32.eqz
    drop
    local.get $ptr
    i32.const 255
    local.tee $13
    local.get $value
    local.tee $14
    local.get $13
    local.get $14
    i32.lt_u
    select
    i32.store8 $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/util/sort/insertionSort<i8> (type $i32_i32_i32_i32_i32_=>_none) (param $ptr i32) (param $left i32) (param $right i32) (param $presorted i32) (param $comparator i32)
  (local $range i32)
  (local $i i32)
  (local $7 i32)
  (local $a i32)
  (local $b i32)
  (local $min i32)
  (local $max i32)
  (local $j i32)
  (local $13 i32)
  (local $14 i32)
  i32.const 0
  i32.const 1
  i32.ge_s
  drop
  local.get $right
  local.get $left
  i32.sub
  i32.const 1
  i32.add
  local.set $range
  local.get $left
  local.get $range
  i32.const 1
  i32.and
  local.get $presorted
  local.get $range
  local.get $presorted
  i32.sub
  i32.const 1
  i32.and
  i32.sub
  local.get $presorted
  i32.const 0
  i32.eq
  select
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $right
   i32.le_s
   local.set $7
   local.get $7
   if
    local.get $ptr
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    i32.load8_s $0
    local.set $a
    local.get $ptr
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    i32.load8_s $0 offset=1
    local.set $b
    local.get $b
    local.set $min
    local.get $a
    local.set $max
    local.get $a
    local.get $b
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.le_s
    if
     local.get $a
     local.set $min
     local.get $b
     local.set $max
    end
    local.get $i
    i32.const 1
    i32.sub
    local.set $j
    block $while-break|1
     loop $while-continue|1
      local.get $j
      local.get $left
      i32.ge_s
      local.set $13
      local.get $13
      if
       local.get $ptr
       local.get $j
       i32.const 0
       i32.shl
       i32.add
       i32.load8_s $0
       local.set $a
       local.get $a
       local.get $max
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $j
        i32.const 0
        i32.shl
        i32.add
        local.get $a
        i32.store8 $0 offset=2
        local.get $j
        i32.const 1
        i32.sub
        local.set $j
       else
        br $while-break|1
       end
       br $while-continue|1
      end
     end
    end
    local.get $ptr
    local.get $j
    i32.const 0
    i32.shl
    i32.add
    local.get $max
    i32.store8 $0 offset=2
    block $while-break|2
     loop $while-continue|2
      local.get $j
      local.get $left
      i32.ge_s
      local.set $14
      local.get $14
      if
       local.get $ptr
       local.get $j
       i32.const 0
       i32.shl
       i32.add
       i32.load8_s $0
       local.set $a
       local.get $a
       local.get $min
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $j
        i32.const 0
        i32.shl
        i32.add
        local.get $a
        i32.store8 $0 offset=1
        local.get $j
        i32.const 1
        i32.sub
        local.set $j
       else
        br $while-break|2
       end
       br $while-continue|2
      end
     end
    end
    local.get $ptr
    local.get $j
    i32.const 0
    i32.shl
    i32.add
    local.get $min
    i32.store8 $0 offset=1
    local.get $i
    i32.const 2
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/util/sort/extendRunRight<i8> (type $i32_i32_i32_i32_=>_i32) (param $ptr i32) (param $i i32) (param $right i32) (param $comparator i32) (result i32)
  (local $j i32)
  (local $5 i32)
  (local $k i32)
  (local $7 i32)
  (local $tmp i32)
  (local $9 i32)
  local.get $i
  local.get $right
  i32.eq
  if
   local.get $i
   return
  end
  local.get $i
  local.set $j
  local.get $ptr
  local.get $j
  i32.const 0
  i32.shl
  i32.add
  i32.load8_s $0
  local.get $ptr
  local.get $j
  i32.const 1
  i32.add
  local.tee $j
  i32.const 0
  i32.shl
  i32.add
  i32.load8_s $0
  i32.const 2
  global.set $~argumentsLength
  local.get $comparator
  i32.load $0
  call_indirect $0 (type $i32_i32_=>_i32)
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 0
     i32.shl
     i32.add
     i32.load8_s $0 offset=1
     local.get $ptr
     local.get $j
     i32.const 0
     i32.shl
     i32.add
     i32.load8_s $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 31
     i32.shr_u
    else
     i32.const 0
    end
    local.set $5
    local.get $5
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|0
    end
   end
   local.get $j
   local.set $k
   loop $while-continue|1
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     local.get $ptr
     local.get $i
     i32.const 0
     i32.shl
     i32.add
     i32.load8_s $0
     local.set $tmp
     local.get $ptr
     local.get $i
     i32.const 0
     i32.shl
     i32.add
     local.get $ptr
     local.get $k
     i32.const 0
     i32.shl
     i32.add
     i32.load8_s $0
     i32.store8 $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     local.get $ptr
     local.get $k
     i32.const 0
     i32.shl
     i32.add
     local.get $tmp
     i32.store8 $0
     local.get $k
     i32.const 1
     i32.sub
     local.set $k
     br $while-continue|1
    end
   end
  else
   loop $while-continue|2
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 0
     i32.shl
     i32.add
     i32.load8_s $0 offset=1
     local.get $ptr
     local.get $j
     i32.const 0
     i32.shl
     i32.add
     i32.load8_s $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.ge_s
    else
     i32.const 0
    end
    local.set $9
    local.get $9
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|2
    end
   end
  end
  local.get $j
 )
 (func $~lib/util/sort/mergeRuns<i8> (type $i32_i32_i32_i32_i32_i32_=>_none) (param $ptr i32) (param $l i32) (param $m i32) (param $r i32) (param $buffer i32) (param $comparator i32)
  (local $i i32)
  (local $j i32)
  (local $t i32)
  (local $9 i32)
  (local $10 i32)
  (local $k i32)
  (local $12 i32)
  (local $a i32)
  (local $b i32)
  local.get $m
  i32.const 1
  i32.sub
  local.set $m
  local.get $r
  local.get $m
  i32.add
  local.set $t
  local.get $m
  i32.const 1
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $l
   i32.gt_s
   local.set $9
   local.get $9
   if
    local.get $buffer
    local.get $i
    i32.const 1
    i32.sub
    i32.const 0
    i32.shl
    i32.add
    local.get $ptr
    local.get $i
    i32.const 1
    i32.sub
    i32.const 0
    i32.shl
    i32.add
    i32.load8_s $0
    i32.store8 $0
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  local.get $m
  local.set $j
  loop $for-loop|1
   local.get $j
   local.get $r
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $buffer
    local.get $t
    local.get $j
    i32.sub
    i32.const 0
    i32.shl
    i32.add
    local.get $ptr
    local.get $j
    i32.const 0
    i32.shl
    i32.add
    i32.load8_s $0 offset=1
    i32.store8 $0
    local.get $j
    i32.const 1
    i32.add
    local.set $j
    br $for-loop|1
   end
  end
  local.get $l
  local.set $k
  loop $for-loop|2
   local.get $k
   local.get $r
   i32.le_s
   local.set $12
   local.get $12
   if
    local.get $buffer
    local.get $j
    i32.const 0
    i32.shl
    i32.add
    i32.load8_s $0
    local.set $a
    local.get $buffer
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    i32.load8_s $0
    local.set $b
    local.get $a
    local.get $b
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.lt_s
    if
     local.get $ptr
     local.get $k
     i32.const 0
     i32.shl
     i32.add
     local.get $a
     i32.store8 $0
     local.get $j
     i32.const 1
     i32.sub
     local.set $j
    else
     local.get $ptr
     local.get $k
     i32.const 0
     i32.shl
     i32.add
     local.get $b
     i32.store8 $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
    end
    local.get $k
    i32.const 1
    i32.add
    local.set $k
    br $for-loop|2
   end
  end
 )
 (func $~lib/util/sort/SORT<i8> (type $i32_i32_i32_=>_none) (param $ptr i32) (param $len i32) (param $comparator i32)
  (local $3 i32)
  (local $a i32)
  (local $b i32)
  (local $c i32)
  (local $a|7 i32)
  (local $b|8 i32)
  (local $c|9 i32)
  (local $n i32)
  (local $lgPlus2 i32)
  (local $lgPlus2Size i32)
  (local $leftRunStartBuf i32)
  (local $leftRunEndBuf i32)
  (local $i i32)
  (local $16 i32)
  (local $buffer i32)
  (local $hi i32)
  (local $endA i32)
  (local $lenA i32)
  (local $21 i32)
  (local $22 i32)
  (local $top i32)
  (local $startA i32)
  (local $25 i32)
  (local $startB i32)
  (local $endB i32)
  (local $lenB i32)
  (local $29 i32)
  (local $30 i32)
  (local $k i32)
  (local $i|32 i32)
  (local $33 i32)
  (local $start i32)
  (local $i|35 i32)
  (local $36 i32)
  (local $start|37 i32)
  local.get $len
  i32.const 48
  i32.le_s
  if
   local.get $len
   i32.const 1
   i32.le_s
   if
    return
   end
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   block $break|0
    block $case1|0
     block $case0|0
      local.get $len
      local.set $3
      local.get $3
      i32.const 3
      i32.eq
      br_if $case0|0
      local.get $3
      i32.const 2
      i32.eq
      br_if $case1|0
      br $break|0
     end
     local.get $ptr
     i32.load8_s $0
     local.set $a
     local.get $ptr
     i32.load8_s $0 offset=1
     local.set $b
     local.get $a
     local.get $b
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $c
     local.get $ptr
     local.get $b
     local.get $a
     local.get $c
     select
     i32.store8 $0
     local.get $a
     local.get $b
     local.get $c
     select
     local.set $a
     local.get $ptr
     i32.load8_s $0 offset=2
     local.set $b
     local.get $a
     local.get $b
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $c
     local.get $ptr
     local.get $b
     local.get $a
     local.get $c
     select
     i32.store8 $0 offset=1
     local.get $ptr
     local.get $a
     local.get $b
     local.get $c
     select
     i32.store8 $0 offset=2
    end
    local.get $ptr
    i32.load8_s $0
    local.set $a|7
    local.get $ptr
    i32.load8_s $0 offset=1
    local.set $b|8
    local.get $a|7
    local.get $b|8
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.gt_s
    local.set $c|9
    local.get $ptr
    local.get $b|8
    local.get $a|7
    local.get $c|9
    select
    i32.store8 $0
    local.get $ptr
    local.get $a|7
    local.get $b|8
    local.get $c|9
    select
    i32.store8 $0 offset=1
    return
   end
   local.get $ptr
   i32.const 0
   local.get $len
   i32.const 1
   i32.sub
   i32.const 0
   local.get $comparator
   call $~lib/util/sort/insertionSort<i8>
   return
  end
  local.get $len
  local.set $n
  i32.const 31
  local.get $n
  i32.clz
  i32.sub
  i32.const 2
  i32.add
  local.set $lgPlus2
  local.get $lgPlus2
  i32.const 2
  i32.shl
  local.set $lgPlus2Size
  local.get $lgPlus2Size
  i32.const 1
  i32.shl
  call $~lib/rt/stub/__alloc
  local.set $leftRunStartBuf
  local.get $leftRunStartBuf
  local.get $lgPlus2Size
  i32.add
  local.set $leftRunEndBuf
  i32.const 0
  local.set $i
  loop $for-loop|1
   local.get $i
   local.get $lgPlus2
   i32.lt_u
   local.set $16
   local.get $16
   if
    local.get $leftRunStartBuf
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.const -1
    i32.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|1
   end
  end
  local.get $len
  i32.const 0
  i32.shl
  call $~lib/rt/stub/__alloc
  local.set $buffer
  local.get $len
  i32.const 1
  i32.sub
  local.set $hi
  local.get $ptr
  i32.const 0
  local.get $hi
  local.get $comparator
  call $~lib/util/sort/extendRunRight<i8>
  local.set $endA
  local.get $endA
  i32.const 1
  i32.add
  local.set $lenA
  local.get $lenA
  i32.const 32
  i32.lt_s
  if
   local.get $hi
   local.tee $21
   i32.const 32
   i32.const 1
   i32.sub
   local.tee $22
   local.get $21
   local.get $22
   i32.lt_s
   select
   local.set $endA
   local.get $ptr
   i32.const 0
   local.get $endA
   local.get $lenA
   local.get $comparator
   call $~lib/util/sort/insertionSort<i8>
  end
  i32.const 0
  local.set $top
  i32.const 0
  local.set $startA
  loop $while-continue|2
   local.get $endA
   local.get $hi
   i32.lt_s
   local.set $25
   local.get $25
   if
    local.get $endA
    i32.const 1
    i32.add
    local.set $startB
    local.get $ptr
    local.get $startB
    local.get $hi
    local.get $comparator
    call $~lib/util/sort/extendRunRight<i8>
    local.set $endB
    local.get $endB
    local.get $startB
    i32.sub
    i32.const 1
    i32.add
    local.set $lenB
    local.get $lenB
    i32.const 32
    i32.lt_s
    if
     local.get $hi
     local.tee $29
     local.get $startB
     i32.const 32
     i32.add
     i32.const 1
     i32.sub
     local.tee $30
     local.get $29
     local.get $30
     i32.lt_s
     select
     local.set $endB
     local.get $ptr
     local.get $startB
     local.get $endB
     local.get $lenB
     local.get $comparator
     call $~lib/util/sort/insertionSort<i8>
    end
    i32.const 0
    local.get $hi
    local.get $startA
    local.get $startB
    local.get $endB
    call $~lib/util/sort/nodePower
    local.set $k
    local.get $top
    local.set $i|32
    loop $for-loop|3
     local.get $i|32
     local.get $k
     i32.gt_u
     local.set $33
     local.get $33
     if
      local.get $leftRunStartBuf
      local.get $i|32
      i32.const 2
      i32.shl
      i32.add
      i32.load $0
      local.set $start
      local.get $start
      i32.const -1
      i32.ne
      if
       local.get $ptr
       local.get $start
       local.get $leftRunEndBuf
       local.get $i|32
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       i32.const 1
       i32.add
       local.get $endA
       local.get $buffer
       local.get $comparator
       call $~lib/util/sort/mergeRuns<i8>
       local.get $start
       local.set $startA
       local.get $leftRunStartBuf
       local.get $i|32
       i32.const 2
       i32.shl
       i32.add
       i32.const -1
       i32.store $0
      end
      local.get $i|32
      i32.const 1
      i32.sub
      local.set $i|32
      br $for-loop|3
     end
    end
    local.get $leftRunStartBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $startA
    i32.store $0
    local.get $leftRunEndBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $endA
    i32.store $0
    local.get $startB
    local.set $startA
    local.get $endB
    local.set $endA
    local.get $k
    local.set $top
    br $while-continue|2
   end
  end
  local.get $top
  local.set $i|35
  loop $for-loop|4
   local.get $i|35
   i32.const 0
   i32.ne
   local.set $36
   local.get $36
   if
    local.get $leftRunStartBuf
    local.get $i|35
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $start|37
    local.get $start|37
    i32.const -1
    i32.ne
    if
     local.get $ptr
     local.get $start|37
     local.get $leftRunEndBuf
     local.get $i|35
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 1
     i32.add
     local.get $hi
     local.get $buffer
     local.get $comparator
     call $~lib/util/sort/mergeRuns<i8>
    end
    local.get $i|35
    i32.const 1
    i32.sub
    local.set $i|35
    br $for-loop|4
   end
  end
  local.get $buffer
  call $~lib/rt/stub/__free
  local.get $leftRunStartBuf
  call $~lib/rt/stub/__free
 )
 (func $~lib/typedarray/Int8Array#sort (type $i32_i32_=>_i32) (param $this i32) (param $comparator i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Int8Array#get:length
  local.get $comparator
  call $~lib/util/sort/SORT<i8>
  local.get $this
 )
 (func $~lib/util/sort/COMPARATOR<i8>~anonymous|0 (type $i32_i32_=>_i32) (param $a i32) (param $b i32) (result i32)
  local.get $a
  i32.extend8_s
  local.get $b
  i32.extend8_s
  i32.sub
 )
 (func $~lib/typedarray/Int8Array#sort@varargs (type $i32_i32_=>_i32) (param $this i32) (param $comparator i32) (result i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   block $~lib/util/sort/COMPARATOR<i8>|inlined.0 (result i32)
    i32.const 1
    drop
    i32.const 1
    i32.const 4
    i32.le_u
    drop
    i32.const 8608
    br $~lib/util/sort/COMPARATOR<i8>|inlined.0
   end
   local.set $comparator
  end
  local.get $this
  local.get $comparator
  call $~lib/typedarray/Int8Array#sort
 )
 (func $std/typedarray/testArraySort<~lib/typedarray/Int8Array,i8>~anonymous|0 (type $i32_i32_=>_i32) (param $a i32) (param $b i32) (result i32)
  local.get $b
  i32.extend8_s
  local.get $a
  i32.extend8_s
  i32.gt_s
  local.get $b
  i32.extend8_s
  local.get $a
  i32.extend8_s
  i32.lt_s
  i32.sub
 )
 (func $~lib/util/sort/insertionSort<u8> (type $i32_i32_i32_i32_i32_=>_none) (param $ptr i32) (param $left i32) (param $right i32) (param $presorted i32) (param $comparator i32)
  (local $range i32)
  (local $i i32)
  (local $7 i32)
  (local $a i32)
  (local $b i32)
  (local $min i32)
  (local $max i32)
  (local $j i32)
  (local $13 i32)
  (local $14 i32)
  i32.const 0
  i32.const 1
  i32.ge_s
  drop
  local.get $right
  local.get $left
  i32.sub
  i32.const 1
  i32.add
  local.set $range
  local.get $left
  local.get $range
  i32.const 1
  i32.and
  local.get $presorted
  local.get $range
  local.get $presorted
  i32.sub
  i32.const 1
  i32.and
  i32.sub
  local.get $presorted
  i32.const 0
  i32.eq
  select
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $right
   i32.le_s
   local.set $7
   local.get $7
   if
    local.get $ptr
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    i32.load8_u $0
    local.set $a
    local.get $ptr
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    i32.load8_u $0 offset=1
    local.set $b
    local.get $b
    local.set $min
    local.get $a
    local.set $max
    local.get $a
    local.get $b
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.le_s
    if
     local.get $a
     local.set $min
     local.get $b
     local.set $max
    end
    local.get $i
    i32.const 1
    i32.sub
    local.set $j
    block $while-break|1
     loop $while-continue|1
      local.get $j
      local.get $left
      i32.ge_s
      local.set $13
      local.get $13
      if
       local.get $ptr
       local.get $j
       i32.const 0
       i32.shl
       i32.add
       i32.load8_u $0
       local.set $a
       local.get $a
       local.get $max
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $j
        i32.const 0
        i32.shl
        i32.add
        local.get $a
        i32.store8 $0 offset=2
        local.get $j
        i32.const 1
        i32.sub
        local.set $j
       else
        br $while-break|1
       end
       br $while-continue|1
      end
     end
    end
    local.get $ptr
    local.get $j
    i32.const 0
    i32.shl
    i32.add
    local.get $max
    i32.store8 $0 offset=2
    block $while-break|2
     loop $while-continue|2
      local.get $j
      local.get $left
      i32.ge_s
      local.set $14
      local.get $14
      if
       local.get $ptr
       local.get $j
       i32.const 0
       i32.shl
       i32.add
       i32.load8_u $0
       local.set $a
       local.get $a
       local.get $min
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $j
        i32.const 0
        i32.shl
        i32.add
        local.get $a
        i32.store8 $0 offset=1
        local.get $j
        i32.const 1
        i32.sub
        local.set $j
       else
        br $while-break|2
       end
       br $while-continue|2
      end
     end
    end
    local.get $ptr
    local.get $j
    i32.const 0
    i32.shl
    i32.add
    local.get $min
    i32.store8 $0 offset=1
    local.get $i
    i32.const 2
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/util/sort/extendRunRight<u8> (type $i32_i32_i32_i32_=>_i32) (param $ptr i32) (param $i i32) (param $right i32) (param $comparator i32) (result i32)
  (local $j i32)
  (local $5 i32)
  (local $k i32)
  (local $7 i32)
  (local $tmp i32)
  (local $9 i32)
  local.get $i
  local.get $right
  i32.eq
  if
   local.get $i
   return
  end
  local.get $i
  local.set $j
  local.get $ptr
  local.get $j
  i32.const 0
  i32.shl
  i32.add
  i32.load8_u $0
  local.get $ptr
  local.get $j
  i32.const 1
  i32.add
  local.tee $j
  i32.const 0
  i32.shl
  i32.add
  i32.load8_u $0
  i32.const 2
  global.set $~argumentsLength
  local.get $comparator
  i32.load $0
  call_indirect $0 (type $i32_i32_=>_i32)
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 0
     i32.shl
     i32.add
     i32.load8_u $0 offset=1
     local.get $ptr
     local.get $j
     i32.const 0
     i32.shl
     i32.add
     i32.load8_u $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 31
     i32.shr_u
    else
     i32.const 0
    end
    local.set $5
    local.get $5
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|0
    end
   end
   local.get $j
   local.set $k
   loop $while-continue|1
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     local.get $ptr
     local.get $i
     i32.const 0
     i32.shl
     i32.add
     i32.load8_u $0
     local.set $tmp
     local.get $ptr
     local.get $i
     i32.const 0
     i32.shl
     i32.add
     local.get $ptr
     local.get $k
     i32.const 0
     i32.shl
     i32.add
     i32.load8_u $0
     i32.store8 $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     local.get $ptr
     local.get $k
     i32.const 0
     i32.shl
     i32.add
     local.get $tmp
     i32.store8 $0
     local.get $k
     i32.const 1
     i32.sub
     local.set $k
     br $while-continue|1
    end
   end
  else
   loop $while-continue|2
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 0
     i32.shl
     i32.add
     i32.load8_u $0 offset=1
     local.get $ptr
     local.get $j
     i32.const 0
     i32.shl
     i32.add
     i32.load8_u $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.ge_s
    else
     i32.const 0
    end
    local.set $9
    local.get $9
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|2
    end
   end
  end
  local.get $j
 )
 (func $~lib/util/sort/mergeRuns<u8> (type $i32_i32_i32_i32_i32_i32_=>_none) (param $ptr i32) (param $l i32) (param $m i32) (param $r i32) (param $buffer i32) (param $comparator i32)
  (local $i i32)
  (local $j i32)
  (local $t i32)
  (local $9 i32)
  (local $10 i32)
  (local $k i32)
  (local $12 i32)
  (local $a i32)
  (local $b i32)
  local.get $m
  i32.const 1
  i32.sub
  local.set $m
  local.get $r
  local.get $m
  i32.add
  local.set $t
  local.get $m
  i32.const 1
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $l
   i32.gt_s
   local.set $9
   local.get $9
   if
    local.get $buffer
    local.get $i
    i32.const 1
    i32.sub
    i32.const 0
    i32.shl
    i32.add
    local.get $ptr
    local.get $i
    i32.const 1
    i32.sub
    i32.const 0
    i32.shl
    i32.add
    i32.load8_u $0
    i32.store8 $0
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  local.get $m
  local.set $j
  loop $for-loop|1
   local.get $j
   local.get $r
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $buffer
    local.get $t
    local.get $j
    i32.sub
    i32.const 0
    i32.shl
    i32.add
    local.get $ptr
    local.get $j
    i32.const 0
    i32.shl
    i32.add
    i32.load8_u $0 offset=1
    i32.store8 $0
    local.get $j
    i32.const 1
    i32.add
    local.set $j
    br $for-loop|1
   end
  end
  local.get $l
  local.set $k
  loop $for-loop|2
   local.get $k
   local.get $r
   i32.le_s
   local.set $12
   local.get $12
   if
    local.get $buffer
    local.get $j
    i32.const 0
    i32.shl
    i32.add
    i32.load8_u $0
    local.set $a
    local.get $buffer
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    i32.load8_u $0
    local.set $b
    local.get $a
    local.get $b
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.lt_s
    if
     local.get $ptr
     local.get $k
     i32.const 0
     i32.shl
     i32.add
     local.get $a
     i32.store8 $0
     local.get $j
     i32.const 1
     i32.sub
     local.set $j
    else
     local.get $ptr
     local.get $k
     i32.const 0
     i32.shl
     i32.add
     local.get $b
     i32.store8 $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
    end
    local.get $k
    i32.const 1
    i32.add
    local.set $k
    br $for-loop|2
   end
  end
 )
 (func $~lib/util/sort/SORT<u8> (type $i32_i32_i32_=>_none) (param $ptr i32) (param $len i32) (param $comparator i32)
  (local $3 i32)
  (local $a i32)
  (local $b i32)
  (local $c i32)
  (local $a|7 i32)
  (local $b|8 i32)
  (local $c|9 i32)
  (local $n i32)
  (local $lgPlus2 i32)
  (local $lgPlus2Size i32)
  (local $leftRunStartBuf i32)
  (local $leftRunEndBuf i32)
  (local $i i32)
  (local $16 i32)
  (local $buffer i32)
  (local $hi i32)
  (local $endA i32)
  (local $lenA i32)
  (local $21 i32)
  (local $22 i32)
  (local $top i32)
  (local $startA i32)
  (local $25 i32)
  (local $startB i32)
  (local $endB i32)
  (local $lenB i32)
  (local $29 i32)
  (local $30 i32)
  (local $k i32)
  (local $i|32 i32)
  (local $33 i32)
  (local $start i32)
  (local $i|35 i32)
  (local $36 i32)
  (local $start|37 i32)
  local.get $len
  i32.const 48
  i32.le_s
  if
   local.get $len
   i32.const 1
   i32.le_s
   if
    return
   end
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   block $break|0
    block $case1|0
     block $case0|0
      local.get $len
      local.set $3
      local.get $3
      i32.const 3
      i32.eq
      br_if $case0|0
      local.get $3
      i32.const 2
      i32.eq
      br_if $case1|0
      br $break|0
     end
     local.get $ptr
     i32.load8_u $0
     local.set $a
     local.get $ptr
     i32.load8_u $0 offset=1
     local.set $b
     local.get $a
     local.get $b
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $c
     local.get $ptr
     local.get $b
     local.get $a
     local.get $c
     select
     i32.store8 $0
     local.get $a
     local.get $b
     local.get $c
     select
     local.set $a
     local.get $ptr
     i32.load8_u $0 offset=2
     local.set $b
     local.get $a
     local.get $b
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $c
     local.get $ptr
     local.get $b
     local.get $a
     local.get $c
     select
     i32.store8 $0 offset=1
     local.get $ptr
     local.get $a
     local.get $b
     local.get $c
     select
     i32.store8 $0 offset=2
    end
    local.get $ptr
    i32.load8_u $0
    local.set $a|7
    local.get $ptr
    i32.load8_u $0 offset=1
    local.set $b|8
    local.get $a|7
    local.get $b|8
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.gt_s
    local.set $c|9
    local.get $ptr
    local.get $b|8
    local.get $a|7
    local.get $c|9
    select
    i32.store8 $0
    local.get $ptr
    local.get $a|7
    local.get $b|8
    local.get $c|9
    select
    i32.store8 $0 offset=1
    return
   end
   local.get $ptr
   i32.const 0
   local.get $len
   i32.const 1
   i32.sub
   i32.const 0
   local.get $comparator
   call $~lib/util/sort/insertionSort<u8>
   return
  end
  local.get $len
  local.set $n
  i32.const 31
  local.get $n
  i32.clz
  i32.sub
  i32.const 2
  i32.add
  local.set $lgPlus2
  local.get $lgPlus2
  i32.const 2
  i32.shl
  local.set $lgPlus2Size
  local.get $lgPlus2Size
  i32.const 1
  i32.shl
  call $~lib/rt/stub/__alloc
  local.set $leftRunStartBuf
  local.get $leftRunStartBuf
  local.get $lgPlus2Size
  i32.add
  local.set $leftRunEndBuf
  i32.const 0
  local.set $i
  loop $for-loop|1
   local.get $i
   local.get $lgPlus2
   i32.lt_u
   local.set $16
   local.get $16
   if
    local.get $leftRunStartBuf
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.const -1
    i32.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|1
   end
  end
  local.get $len
  i32.const 0
  i32.shl
  call $~lib/rt/stub/__alloc
  local.set $buffer
  local.get $len
  i32.const 1
  i32.sub
  local.set $hi
  local.get $ptr
  i32.const 0
  local.get $hi
  local.get $comparator
  call $~lib/util/sort/extendRunRight<u8>
  local.set $endA
  local.get $endA
  i32.const 1
  i32.add
  local.set $lenA
  local.get $lenA
  i32.const 32
  i32.lt_s
  if
   local.get $hi
   local.tee $21
   i32.const 32
   i32.const 1
   i32.sub
   local.tee $22
   local.get $21
   local.get $22
   i32.lt_s
   select
   local.set $endA
   local.get $ptr
   i32.const 0
   local.get $endA
   local.get $lenA
   local.get $comparator
   call $~lib/util/sort/insertionSort<u8>
  end
  i32.const 0
  local.set $top
  i32.const 0
  local.set $startA
  loop $while-continue|2
   local.get $endA
   local.get $hi
   i32.lt_s
   local.set $25
   local.get $25
   if
    local.get $endA
    i32.const 1
    i32.add
    local.set $startB
    local.get $ptr
    local.get $startB
    local.get $hi
    local.get $comparator
    call $~lib/util/sort/extendRunRight<u8>
    local.set $endB
    local.get $endB
    local.get $startB
    i32.sub
    i32.const 1
    i32.add
    local.set $lenB
    local.get $lenB
    i32.const 32
    i32.lt_s
    if
     local.get $hi
     local.tee $29
     local.get $startB
     i32.const 32
     i32.add
     i32.const 1
     i32.sub
     local.tee $30
     local.get $29
     local.get $30
     i32.lt_s
     select
     local.set $endB
     local.get $ptr
     local.get $startB
     local.get $endB
     local.get $lenB
     local.get $comparator
     call $~lib/util/sort/insertionSort<u8>
    end
    i32.const 0
    local.get $hi
    local.get $startA
    local.get $startB
    local.get $endB
    call $~lib/util/sort/nodePower
    local.set $k
    local.get $top
    local.set $i|32
    loop $for-loop|3
     local.get $i|32
     local.get $k
     i32.gt_u
     local.set $33
     local.get $33
     if
      local.get $leftRunStartBuf
      local.get $i|32
      i32.const 2
      i32.shl
      i32.add
      i32.load $0
      local.set $start
      local.get $start
      i32.const -1
      i32.ne
      if
       local.get $ptr
       local.get $start
       local.get $leftRunEndBuf
       local.get $i|32
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       i32.const 1
       i32.add
       local.get $endA
       local.get $buffer
       local.get $comparator
       call $~lib/util/sort/mergeRuns<u8>
       local.get $start
       local.set $startA
       local.get $leftRunStartBuf
       local.get $i|32
       i32.const 2
       i32.shl
       i32.add
       i32.const -1
       i32.store $0
      end
      local.get $i|32
      i32.const 1
      i32.sub
      local.set $i|32
      br $for-loop|3
     end
    end
    local.get $leftRunStartBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $startA
    i32.store $0
    local.get $leftRunEndBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $endA
    i32.store $0
    local.get $startB
    local.set $startA
    local.get $endB
    local.set $endA
    local.get $k
    local.set $top
    br $while-continue|2
   end
  end
  local.get $top
  local.set $i|35
  loop $for-loop|4
   local.get $i|35
   i32.const 0
   i32.ne
   local.set $36
   local.get $36
   if
    local.get $leftRunStartBuf
    local.get $i|35
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $start|37
    local.get $start|37
    i32.const -1
    i32.ne
    if
     local.get $ptr
     local.get $start|37
     local.get $leftRunEndBuf
     local.get $i|35
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 1
     i32.add
     local.get $hi
     local.get $buffer
     local.get $comparator
     call $~lib/util/sort/mergeRuns<u8>
    end
    local.get $i|35
    i32.const 1
    i32.sub
    local.set $i|35
    br $for-loop|4
   end
  end
  local.get $buffer
  call $~lib/rt/stub/__free
  local.get $leftRunStartBuf
  call $~lib/rt/stub/__free
 )
 (func $~lib/typedarray/Uint8Array#sort (type $i32_i32_=>_i32) (param $this i32) (param $comparator i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Uint8Array#get:length
  local.get $comparator
  call $~lib/util/sort/SORT<u8>
  local.get $this
 )
 (func $~lib/util/sort/COMPARATOR<u8>~anonymous|0 (type $i32_i32_=>_i32) (param $a i32) (param $b i32) (result i32)
  local.get $a
  i32.const 255
  i32.and
  local.get $b
  i32.const 255
  i32.and
  i32.gt_u
  local.get $a
  i32.const 255
  i32.and
  local.get $b
  i32.const 255
  i32.and
  i32.lt_u
  i32.sub
 )
 (func $~lib/typedarray/Uint8Array#sort@varargs (type $i32_i32_=>_i32) (param $this i32) (param $comparator i32) (result i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   block $~lib/util/sort/COMPARATOR<u8>|inlined.0 (result i32)
    i32.const 1
    drop
    i32.const 0
    drop
    i32.const 8672
    br $~lib/util/sort/COMPARATOR<u8>|inlined.0
   end
   local.set $comparator
  end
  local.get $this
  local.get $comparator
  call $~lib/typedarray/Uint8Array#sort
 )
 (func $std/typedarray/testArraySort<~lib/typedarray/Uint8Array,u8>~anonymous|0 (type $i32_i32_=>_i32) (param $a i32) (param $b i32) (result i32)
  local.get $b
  i32.const 255
  i32.and
  local.get $a
  i32.const 255
  i32.and
  i32.gt_u
  local.get $b
  i32.const 255
  i32.and
  local.get $a
  i32.const 255
  i32.and
  i32.lt_u
  i32.sub
 )
 (func $~lib/typedarray/Uint8ClampedArray#sort (type $i32_i32_=>_i32) (param $this i32) (param $comparator i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Uint8ClampedArray#get:length
  local.get $comparator
  call $~lib/util/sort/SORT<u8>
  local.get $this
 )
 (func $~lib/util/sort/COMPARATOR<u8>~anonymous|1 (type $i32_i32_=>_i32) (param $a i32) (param $b i32) (result i32)
  local.get $a
  i32.const 255
  i32.and
  local.get $b
  i32.const 255
  i32.and
  i32.gt_u
  local.get $a
  i32.const 255
  i32.and
  local.get $b
  i32.const 255
  i32.and
  i32.lt_u
  i32.sub
 )
 (func $~lib/typedarray/Uint8ClampedArray#sort@varargs (type $i32_i32_=>_i32) (param $this i32) (param $comparator i32) (result i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   block $~lib/util/sort/COMPARATOR<u8>|inlined.1 (result i32)
    i32.const 1
    drop
    i32.const 0
    drop
    i32.const 8736
    br $~lib/util/sort/COMPARATOR<u8>|inlined.1
   end
   local.set $comparator
  end
  local.get $this
  local.get $comparator
  call $~lib/typedarray/Uint8ClampedArray#sort
 )
 (func $std/typedarray/testArraySort<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|0 (type $i32_i32_=>_i32) (param $a i32) (param $b i32) (result i32)
  local.get $b
  i32.const 255
  i32.and
  local.get $a
  i32.const 255
  i32.and
  i32.gt_u
  local.get $b
  i32.const 255
  i32.and
  local.get $a
  i32.const 255
  i32.and
  i32.lt_u
  i32.sub
 )
 (func $~lib/util/sort/insertionSort<i16> (type $i32_i32_i32_i32_i32_=>_none) (param $ptr i32) (param $left i32) (param $right i32) (param $presorted i32) (param $comparator i32)
  (local $range i32)
  (local $i i32)
  (local $7 i32)
  (local $a i32)
  (local $b i32)
  (local $min i32)
  (local $max i32)
  (local $j i32)
  (local $13 i32)
  (local $14 i32)
  i32.const 0
  i32.const 1
  i32.ge_s
  drop
  local.get $right
  local.get $left
  i32.sub
  i32.const 1
  i32.add
  local.set $range
  local.get $left
  local.get $range
  i32.const 1
  i32.and
  local.get $presorted
  local.get $range
  local.get $presorted
  i32.sub
  i32.const 1
  i32.and
  i32.sub
  local.get $presorted
  i32.const 0
  i32.eq
  select
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $right
   i32.le_s
   local.set $7
   local.get $7
   if
    local.get $ptr
    local.get $i
    i32.const 1
    i32.shl
    i32.add
    i32.load16_s $0
    local.set $a
    local.get $ptr
    local.get $i
    i32.const 1
    i32.shl
    i32.add
    i32.load16_s $0 offset=2
    local.set $b
    local.get $b
    local.set $min
    local.get $a
    local.set $max
    local.get $a
    local.get $b
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.le_s
    if
     local.get $a
     local.set $min
     local.get $b
     local.set $max
    end
    local.get $i
    i32.const 1
    i32.sub
    local.set $j
    block $while-break|1
     loop $while-continue|1
      local.get $j
      local.get $left
      i32.ge_s
      local.set $13
      local.get $13
      if
       local.get $ptr
       local.get $j
       i32.const 1
       i32.shl
       i32.add
       i32.load16_s $0
       local.set $a
       local.get $a
       local.get $max
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $j
        i32.const 1
        i32.shl
        i32.add
        local.get $a
        i32.store16 $0 offset=4
        local.get $j
        i32.const 1
        i32.sub
        local.set $j
       else
        br $while-break|1
       end
       br $while-continue|1
      end
     end
    end
    local.get $ptr
    local.get $j
    i32.const 1
    i32.shl
    i32.add
    local.get $max
    i32.store16 $0 offset=4
    block $while-break|2
     loop $while-continue|2
      local.get $j
      local.get $left
      i32.ge_s
      local.set $14
      local.get $14
      if
       local.get $ptr
       local.get $j
       i32.const 1
       i32.shl
       i32.add
       i32.load16_s $0
       local.set $a
       local.get $a
       local.get $min
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $j
        i32.const 1
        i32.shl
        i32.add
        local.get $a
        i32.store16 $0 offset=2
        local.get $j
        i32.const 1
        i32.sub
        local.set $j
       else
        br $while-break|2
       end
       br $while-continue|2
      end
     end
    end
    local.get $ptr
    local.get $j
    i32.const 1
    i32.shl
    i32.add
    local.get $min
    i32.store16 $0 offset=2
    local.get $i
    i32.const 2
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/util/sort/extendRunRight<i16> (type $i32_i32_i32_i32_=>_i32) (param $ptr i32) (param $i i32) (param $right i32) (param $comparator i32) (result i32)
  (local $j i32)
  (local $5 i32)
  (local $k i32)
  (local $7 i32)
  (local $tmp i32)
  (local $9 i32)
  local.get $i
  local.get $right
  i32.eq
  if
   local.get $i
   return
  end
  local.get $i
  local.set $j
  local.get $ptr
  local.get $j
  i32.const 1
  i32.shl
  i32.add
  i32.load16_s $0
  local.get $ptr
  local.get $j
  i32.const 1
  i32.add
  local.tee $j
  i32.const 1
  i32.shl
  i32.add
  i32.load16_s $0
  i32.const 2
  global.set $~argumentsLength
  local.get $comparator
  i32.load $0
  call_indirect $0 (type $i32_i32_=>_i32)
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 1
     i32.shl
     i32.add
     i32.load16_s $0 offset=2
     local.get $ptr
     local.get $j
     i32.const 1
     i32.shl
     i32.add
     i32.load16_s $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 31
     i32.shr_u
    else
     i32.const 0
    end
    local.set $5
    local.get $5
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|0
    end
   end
   local.get $j
   local.set $k
   loop $while-continue|1
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     local.get $ptr
     local.get $i
     i32.const 1
     i32.shl
     i32.add
     i32.load16_s $0
     local.set $tmp
     local.get $ptr
     local.get $i
     i32.const 1
     i32.shl
     i32.add
     local.get $ptr
     local.get $k
     i32.const 1
     i32.shl
     i32.add
     i32.load16_s $0
     i32.store16 $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     local.get $ptr
     local.get $k
     i32.const 1
     i32.shl
     i32.add
     local.get $tmp
     i32.store16 $0
     local.get $k
     i32.const 1
     i32.sub
     local.set $k
     br $while-continue|1
    end
   end
  else
   loop $while-continue|2
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 1
     i32.shl
     i32.add
     i32.load16_s $0 offset=2
     local.get $ptr
     local.get $j
     i32.const 1
     i32.shl
     i32.add
     i32.load16_s $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.ge_s
    else
     i32.const 0
    end
    local.set $9
    local.get $9
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|2
    end
   end
  end
  local.get $j
 )
 (func $~lib/util/sort/mergeRuns<i16> (type $i32_i32_i32_i32_i32_i32_=>_none) (param $ptr i32) (param $l i32) (param $m i32) (param $r i32) (param $buffer i32) (param $comparator i32)
  (local $i i32)
  (local $j i32)
  (local $t i32)
  (local $9 i32)
  (local $10 i32)
  (local $k i32)
  (local $12 i32)
  (local $a i32)
  (local $b i32)
  local.get $m
  i32.const 1
  i32.sub
  local.set $m
  local.get $r
  local.get $m
  i32.add
  local.set $t
  local.get $m
  i32.const 1
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $l
   i32.gt_s
   local.set $9
   local.get $9
   if
    local.get $buffer
    local.get $i
    i32.const 1
    i32.sub
    i32.const 1
    i32.shl
    i32.add
    local.get $ptr
    local.get $i
    i32.const 1
    i32.sub
    i32.const 1
    i32.shl
    i32.add
    i32.load16_s $0
    i32.store16 $0
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  local.get $m
  local.set $j
  loop $for-loop|1
   local.get $j
   local.get $r
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $buffer
    local.get $t
    local.get $j
    i32.sub
    i32.const 1
    i32.shl
    i32.add
    local.get $ptr
    local.get $j
    i32.const 1
    i32.shl
    i32.add
    i32.load16_s $0 offset=2
    i32.store16 $0
    local.get $j
    i32.const 1
    i32.add
    local.set $j
    br $for-loop|1
   end
  end
  local.get $l
  local.set $k
  loop $for-loop|2
   local.get $k
   local.get $r
   i32.le_s
   local.set $12
   local.get $12
   if
    local.get $buffer
    local.get $j
    i32.const 1
    i32.shl
    i32.add
    i32.load16_s $0
    local.set $a
    local.get $buffer
    local.get $i
    i32.const 1
    i32.shl
    i32.add
    i32.load16_s $0
    local.set $b
    local.get $a
    local.get $b
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.lt_s
    if
     local.get $ptr
     local.get $k
     i32.const 1
     i32.shl
     i32.add
     local.get $a
     i32.store16 $0
     local.get $j
     i32.const 1
     i32.sub
     local.set $j
    else
     local.get $ptr
     local.get $k
     i32.const 1
     i32.shl
     i32.add
     local.get $b
     i32.store16 $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
    end
    local.get $k
    i32.const 1
    i32.add
    local.set $k
    br $for-loop|2
   end
  end
 )
 (func $~lib/util/sort/SORT<i16> (type $i32_i32_i32_=>_none) (param $ptr i32) (param $len i32) (param $comparator i32)
  (local $3 i32)
  (local $a i32)
  (local $b i32)
  (local $c i32)
  (local $a|7 i32)
  (local $b|8 i32)
  (local $c|9 i32)
  (local $n i32)
  (local $lgPlus2 i32)
  (local $lgPlus2Size i32)
  (local $leftRunStartBuf i32)
  (local $leftRunEndBuf i32)
  (local $i i32)
  (local $16 i32)
  (local $buffer i32)
  (local $hi i32)
  (local $endA i32)
  (local $lenA i32)
  (local $21 i32)
  (local $22 i32)
  (local $top i32)
  (local $startA i32)
  (local $25 i32)
  (local $startB i32)
  (local $endB i32)
  (local $lenB i32)
  (local $29 i32)
  (local $30 i32)
  (local $k i32)
  (local $i|32 i32)
  (local $33 i32)
  (local $start i32)
  (local $i|35 i32)
  (local $36 i32)
  (local $start|37 i32)
  local.get $len
  i32.const 48
  i32.le_s
  if
   local.get $len
   i32.const 1
   i32.le_s
   if
    return
   end
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   block $break|0
    block $case1|0
     block $case0|0
      local.get $len
      local.set $3
      local.get $3
      i32.const 3
      i32.eq
      br_if $case0|0
      local.get $3
      i32.const 2
      i32.eq
      br_if $case1|0
      br $break|0
     end
     local.get $ptr
     i32.load16_s $0
     local.set $a
     local.get $ptr
     i32.load16_s $0 offset=2
     local.set $b
     local.get $a
     local.get $b
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $c
     local.get $ptr
     local.get $b
     local.get $a
     local.get $c
     select
     i32.store16 $0
     local.get $a
     local.get $b
     local.get $c
     select
     local.set $a
     local.get $ptr
     i32.load16_s $0 offset=4
     local.set $b
     local.get $a
     local.get $b
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $c
     local.get $ptr
     local.get $b
     local.get $a
     local.get $c
     select
     i32.store16 $0 offset=2
     local.get $ptr
     local.get $a
     local.get $b
     local.get $c
     select
     i32.store16 $0 offset=4
    end
    local.get $ptr
    i32.load16_s $0
    local.set $a|7
    local.get $ptr
    i32.load16_s $0 offset=2
    local.set $b|8
    local.get $a|7
    local.get $b|8
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.gt_s
    local.set $c|9
    local.get $ptr
    local.get $b|8
    local.get $a|7
    local.get $c|9
    select
    i32.store16 $0
    local.get $ptr
    local.get $a|7
    local.get $b|8
    local.get $c|9
    select
    i32.store16 $0 offset=2
    return
   end
   local.get $ptr
   i32.const 0
   local.get $len
   i32.const 1
   i32.sub
   i32.const 0
   local.get $comparator
   call $~lib/util/sort/insertionSort<i16>
   return
  end
  local.get $len
  local.set $n
  i32.const 31
  local.get $n
  i32.clz
  i32.sub
  i32.const 2
  i32.add
  local.set $lgPlus2
  local.get $lgPlus2
  i32.const 2
  i32.shl
  local.set $lgPlus2Size
  local.get $lgPlus2Size
  i32.const 1
  i32.shl
  call $~lib/rt/stub/__alloc
  local.set $leftRunStartBuf
  local.get $leftRunStartBuf
  local.get $lgPlus2Size
  i32.add
  local.set $leftRunEndBuf
  i32.const 0
  local.set $i
  loop $for-loop|1
   local.get $i
   local.get $lgPlus2
   i32.lt_u
   local.set $16
   local.get $16
   if
    local.get $leftRunStartBuf
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.const -1
    i32.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|1
   end
  end
  local.get $len
  i32.const 1
  i32.shl
  call $~lib/rt/stub/__alloc
  local.set $buffer
  local.get $len
  i32.const 1
  i32.sub
  local.set $hi
  local.get $ptr
  i32.const 0
  local.get $hi
  local.get $comparator
  call $~lib/util/sort/extendRunRight<i16>
  local.set $endA
  local.get $endA
  i32.const 1
  i32.add
  local.set $lenA
  local.get $lenA
  i32.const 32
  i32.lt_s
  if
   local.get $hi
   local.tee $21
   i32.const 32
   i32.const 1
   i32.sub
   local.tee $22
   local.get $21
   local.get $22
   i32.lt_s
   select
   local.set $endA
   local.get $ptr
   i32.const 0
   local.get $endA
   local.get $lenA
   local.get $comparator
   call $~lib/util/sort/insertionSort<i16>
  end
  i32.const 0
  local.set $top
  i32.const 0
  local.set $startA
  loop $while-continue|2
   local.get $endA
   local.get $hi
   i32.lt_s
   local.set $25
   local.get $25
   if
    local.get $endA
    i32.const 1
    i32.add
    local.set $startB
    local.get $ptr
    local.get $startB
    local.get $hi
    local.get $comparator
    call $~lib/util/sort/extendRunRight<i16>
    local.set $endB
    local.get $endB
    local.get $startB
    i32.sub
    i32.const 1
    i32.add
    local.set $lenB
    local.get $lenB
    i32.const 32
    i32.lt_s
    if
     local.get $hi
     local.tee $29
     local.get $startB
     i32.const 32
     i32.add
     i32.const 1
     i32.sub
     local.tee $30
     local.get $29
     local.get $30
     i32.lt_s
     select
     local.set $endB
     local.get $ptr
     local.get $startB
     local.get $endB
     local.get $lenB
     local.get $comparator
     call $~lib/util/sort/insertionSort<i16>
    end
    i32.const 0
    local.get $hi
    local.get $startA
    local.get $startB
    local.get $endB
    call $~lib/util/sort/nodePower
    local.set $k
    local.get $top
    local.set $i|32
    loop $for-loop|3
     local.get $i|32
     local.get $k
     i32.gt_u
     local.set $33
     local.get $33
     if
      local.get $leftRunStartBuf
      local.get $i|32
      i32.const 2
      i32.shl
      i32.add
      i32.load $0
      local.set $start
      local.get $start
      i32.const -1
      i32.ne
      if
       local.get $ptr
       local.get $start
       local.get $leftRunEndBuf
       local.get $i|32
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       i32.const 1
       i32.add
       local.get $endA
       local.get $buffer
       local.get $comparator
       call $~lib/util/sort/mergeRuns<i16>
       local.get $start
       local.set $startA
       local.get $leftRunStartBuf
       local.get $i|32
       i32.const 2
       i32.shl
       i32.add
       i32.const -1
       i32.store $0
      end
      local.get $i|32
      i32.const 1
      i32.sub
      local.set $i|32
      br $for-loop|3
     end
    end
    local.get $leftRunStartBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $startA
    i32.store $0
    local.get $leftRunEndBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $endA
    i32.store $0
    local.get $startB
    local.set $startA
    local.get $endB
    local.set $endA
    local.get $k
    local.set $top
    br $while-continue|2
   end
  end
  local.get $top
  local.set $i|35
  loop $for-loop|4
   local.get $i|35
   i32.const 0
   i32.ne
   local.set $36
   local.get $36
   if
    local.get $leftRunStartBuf
    local.get $i|35
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $start|37
    local.get $start|37
    i32.const -1
    i32.ne
    if
     local.get $ptr
     local.get $start|37
     local.get $leftRunEndBuf
     local.get $i|35
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 1
     i32.add
     local.get $hi
     local.get $buffer
     local.get $comparator
     call $~lib/util/sort/mergeRuns<i16>
    end
    local.get $i|35
    i32.const 1
    i32.sub
    local.set $i|35
    br $for-loop|4
   end
  end
  local.get $buffer
  call $~lib/rt/stub/__free
  local.get $leftRunStartBuf
  call $~lib/rt/stub/__free
 )
 (func $~lib/typedarray/Int16Array#sort (type $i32_i32_=>_i32) (param $this i32) (param $comparator i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Int16Array#get:length
  local.get $comparator
  call $~lib/util/sort/SORT<i16>
  local.get $this
 )
 (func $~lib/util/sort/COMPARATOR<i16>~anonymous|0 (type $i32_i32_=>_i32) (param $a i32) (param $b i32) (result i32)
  local.get $a
  i32.extend16_s
  local.get $b
  i32.extend16_s
  i32.sub
 )
 (func $~lib/typedarray/Int16Array#sort@varargs (type $i32_i32_=>_i32) (param $this i32) (param $comparator i32) (result i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   block $~lib/util/sort/COMPARATOR<i16>|inlined.0 (result i32)
    i32.const 1
    drop
    i32.const 2
    i32.const 4
    i32.le_u
    drop
    i32.const 8800
    br $~lib/util/sort/COMPARATOR<i16>|inlined.0
   end
   local.set $comparator
  end
  local.get $this
  local.get $comparator
  call $~lib/typedarray/Int16Array#sort
 )
 (func $std/typedarray/testArraySort<~lib/typedarray/Int16Array,i16>~anonymous|0 (type $i32_i32_=>_i32) (param $a i32) (param $b i32) (result i32)
  local.get $b
  i32.extend16_s
  local.get $a
  i32.extend16_s
  i32.gt_s
  local.get $b
  i32.extend16_s
  local.get $a
  i32.extend16_s
  i32.lt_s
  i32.sub
 )
 (func $~lib/util/sort/insertionSort<u16> (type $i32_i32_i32_i32_i32_=>_none) (param $ptr i32) (param $left i32) (param $right i32) (param $presorted i32) (param $comparator i32)
  (local $range i32)
  (local $i i32)
  (local $7 i32)
  (local $a i32)
  (local $b i32)
  (local $min i32)
  (local $max i32)
  (local $j i32)
  (local $13 i32)
  (local $14 i32)
  i32.const 0
  i32.const 1
  i32.ge_s
  drop
  local.get $right
  local.get $left
  i32.sub
  i32.const 1
  i32.add
  local.set $range
  local.get $left
  local.get $range
  i32.const 1
  i32.and
  local.get $presorted
  local.get $range
  local.get $presorted
  i32.sub
  i32.const 1
  i32.and
  i32.sub
  local.get $presorted
  i32.const 0
  i32.eq
  select
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $right
   i32.le_s
   local.set $7
   local.get $7
   if
    local.get $ptr
    local.get $i
    i32.const 1
    i32.shl
    i32.add
    i32.load16_u $0
    local.set $a
    local.get $ptr
    local.get $i
    i32.const 1
    i32.shl
    i32.add
    i32.load16_u $0 offset=2
    local.set $b
    local.get $b
    local.set $min
    local.get $a
    local.set $max
    local.get $a
    local.get $b
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.le_s
    if
     local.get $a
     local.set $min
     local.get $b
     local.set $max
    end
    local.get $i
    i32.const 1
    i32.sub
    local.set $j
    block $while-break|1
     loop $while-continue|1
      local.get $j
      local.get $left
      i32.ge_s
      local.set $13
      local.get $13
      if
       local.get $ptr
       local.get $j
       i32.const 1
       i32.shl
       i32.add
       i32.load16_u $0
       local.set $a
       local.get $a
       local.get $max
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $j
        i32.const 1
        i32.shl
        i32.add
        local.get $a
        i32.store16 $0 offset=4
        local.get $j
        i32.const 1
        i32.sub
        local.set $j
       else
        br $while-break|1
       end
       br $while-continue|1
      end
     end
    end
    local.get $ptr
    local.get $j
    i32.const 1
    i32.shl
    i32.add
    local.get $max
    i32.store16 $0 offset=4
    block $while-break|2
     loop $while-continue|2
      local.get $j
      local.get $left
      i32.ge_s
      local.set $14
      local.get $14
      if
       local.get $ptr
       local.get $j
       i32.const 1
       i32.shl
       i32.add
       i32.load16_u $0
       local.set $a
       local.get $a
       local.get $min
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $j
        i32.const 1
        i32.shl
        i32.add
        local.get $a
        i32.store16 $0 offset=2
        local.get $j
        i32.const 1
        i32.sub
        local.set $j
       else
        br $while-break|2
       end
       br $while-continue|2
      end
     end
    end
    local.get $ptr
    local.get $j
    i32.const 1
    i32.shl
    i32.add
    local.get $min
    i32.store16 $0 offset=2
    local.get $i
    i32.const 2
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/util/sort/extendRunRight<u16> (type $i32_i32_i32_i32_=>_i32) (param $ptr i32) (param $i i32) (param $right i32) (param $comparator i32) (result i32)
  (local $j i32)
  (local $5 i32)
  (local $k i32)
  (local $7 i32)
  (local $tmp i32)
  (local $9 i32)
  local.get $i
  local.get $right
  i32.eq
  if
   local.get $i
   return
  end
  local.get $i
  local.set $j
  local.get $ptr
  local.get $j
  i32.const 1
  i32.shl
  i32.add
  i32.load16_u $0
  local.get $ptr
  local.get $j
  i32.const 1
  i32.add
  local.tee $j
  i32.const 1
  i32.shl
  i32.add
  i32.load16_u $0
  i32.const 2
  global.set $~argumentsLength
  local.get $comparator
  i32.load $0
  call_indirect $0 (type $i32_i32_=>_i32)
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 1
     i32.shl
     i32.add
     i32.load16_u $0 offset=2
     local.get $ptr
     local.get $j
     i32.const 1
     i32.shl
     i32.add
     i32.load16_u $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 31
     i32.shr_u
    else
     i32.const 0
    end
    local.set $5
    local.get $5
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|0
    end
   end
   local.get $j
   local.set $k
   loop $while-continue|1
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     local.get $ptr
     local.get $i
     i32.const 1
     i32.shl
     i32.add
     i32.load16_u $0
     local.set $tmp
     local.get $ptr
     local.get $i
     i32.const 1
     i32.shl
     i32.add
     local.get $ptr
     local.get $k
     i32.const 1
     i32.shl
     i32.add
     i32.load16_u $0
     i32.store16 $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     local.get $ptr
     local.get $k
     i32.const 1
     i32.shl
     i32.add
     local.get $tmp
     i32.store16 $0
     local.get $k
     i32.const 1
     i32.sub
     local.set $k
     br $while-continue|1
    end
   end
  else
   loop $while-continue|2
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 1
     i32.shl
     i32.add
     i32.load16_u $0 offset=2
     local.get $ptr
     local.get $j
     i32.const 1
     i32.shl
     i32.add
     i32.load16_u $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.ge_s
    else
     i32.const 0
    end
    local.set $9
    local.get $9
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|2
    end
   end
  end
  local.get $j
 )
 (func $~lib/util/sort/mergeRuns<u16> (type $i32_i32_i32_i32_i32_i32_=>_none) (param $ptr i32) (param $l i32) (param $m i32) (param $r i32) (param $buffer i32) (param $comparator i32)
  (local $i i32)
  (local $j i32)
  (local $t i32)
  (local $9 i32)
  (local $10 i32)
  (local $k i32)
  (local $12 i32)
  (local $a i32)
  (local $b i32)
  local.get $m
  i32.const 1
  i32.sub
  local.set $m
  local.get $r
  local.get $m
  i32.add
  local.set $t
  local.get $m
  i32.const 1
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $l
   i32.gt_s
   local.set $9
   local.get $9
   if
    local.get $buffer
    local.get $i
    i32.const 1
    i32.sub
    i32.const 1
    i32.shl
    i32.add
    local.get $ptr
    local.get $i
    i32.const 1
    i32.sub
    i32.const 1
    i32.shl
    i32.add
    i32.load16_u $0
    i32.store16 $0
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  local.get $m
  local.set $j
  loop $for-loop|1
   local.get $j
   local.get $r
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $buffer
    local.get $t
    local.get $j
    i32.sub
    i32.const 1
    i32.shl
    i32.add
    local.get $ptr
    local.get $j
    i32.const 1
    i32.shl
    i32.add
    i32.load16_u $0 offset=2
    i32.store16 $0
    local.get $j
    i32.const 1
    i32.add
    local.set $j
    br $for-loop|1
   end
  end
  local.get $l
  local.set $k
  loop $for-loop|2
   local.get $k
   local.get $r
   i32.le_s
   local.set $12
   local.get $12
   if
    local.get $buffer
    local.get $j
    i32.const 1
    i32.shl
    i32.add
    i32.load16_u $0
    local.set $a
    local.get $buffer
    local.get $i
    i32.const 1
    i32.shl
    i32.add
    i32.load16_u $0
    local.set $b
    local.get $a
    local.get $b
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.lt_s
    if
     local.get $ptr
     local.get $k
     i32.const 1
     i32.shl
     i32.add
     local.get $a
     i32.store16 $0
     local.get $j
     i32.const 1
     i32.sub
     local.set $j
    else
     local.get $ptr
     local.get $k
     i32.const 1
     i32.shl
     i32.add
     local.get $b
     i32.store16 $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
    end
    local.get $k
    i32.const 1
    i32.add
    local.set $k
    br $for-loop|2
   end
  end
 )
 (func $~lib/util/sort/SORT<u16> (type $i32_i32_i32_=>_none) (param $ptr i32) (param $len i32) (param $comparator i32)
  (local $3 i32)
  (local $a i32)
  (local $b i32)
  (local $c i32)
  (local $a|7 i32)
  (local $b|8 i32)
  (local $c|9 i32)
  (local $n i32)
  (local $lgPlus2 i32)
  (local $lgPlus2Size i32)
  (local $leftRunStartBuf i32)
  (local $leftRunEndBuf i32)
  (local $i i32)
  (local $16 i32)
  (local $buffer i32)
  (local $hi i32)
  (local $endA i32)
  (local $lenA i32)
  (local $21 i32)
  (local $22 i32)
  (local $top i32)
  (local $startA i32)
  (local $25 i32)
  (local $startB i32)
  (local $endB i32)
  (local $lenB i32)
  (local $29 i32)
  (local $30 i32)
  (local $k i32)
  (local $i|32 i32)
  (local $33 i32)
  (local $start i32)
  (local $i|35 i32)
  (local $36 i32)
  (local $start|37 i32)
  local.get $len
  i32.const 48
  i32.le_s
  if
   local.get $len
   i32.const 1
   i32.le_s
   if
    return
   end
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   block $break|0
    block $case1|0
     block $case0|0
      local.get $len
      local.set $3
      local.get $3
      i32.const 3
      i32.eq
      br_if $case0|0
      local.get $3
      i32.const 2
      i32.eq
      br_if $case1|0
      br $break|0
     end
     local.get $ptr
     i32.load16_u $0
     local.set $a
     local.get $ptr
     i32.load16_u $0 offset=2
     local.set $b
     local.get $a
     local.get $b
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $c
     local.get $ptr
     local.get $b
     local.get $a
     local.get $c
     select
     i32.store16 $0
     local.get $a
     local.get $b
     local.get $c
     select
     local.set $a
     local.get $ptr
     i32.load16_u $0 offset=4
     local.set $b
     local.get $a
     local.get $b
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $c
     local.get $ptr
     local.get $b
     local.get $a
     local.get $c
     select
     i32.store16 $0 offset=2
     local.get $ptr
     local.get $a
     local.get $b
     local.get $c
     select
     i32.store16 $0 offset=4
    end
    local.get $ptr
    i32.load16_u $0
    local.set $a|7
    local.get $ptr
    i32.load16_u $0 offset=2
    local.set $b|8
    local.get $a|7
    local.get $b|8
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.gt_s
    local.set $c|9
    local.get $ptr
    local.get $b|8
    local.get $a|7
    local.get $c|9
    select
    i32.store16 $0
    local.get $ptr
    local.get $a|7
    local.get $b|8
    local.get $c|9
    select
    i32.store16 $0 offset=2
    return
   end
   local.get $ptr
   i32.const 0
   local.get $len
   i32.const 1
   i32.sub
   i32.const 0
   local.get $comparator
   call $~lib/util/sort/insertionSort<u16>
   return
  end
  local.get $len
  local.set $n
  i32.const 31
  local.get $n
  i32.clz
  i32.sub
  i32.const 2
  i32.add
  local.set $lgPlus2
  local.get $lgPlus2
  i32.const 2
  i32.shl
  local.set $lgPlus2Size
  local.get $lgPlus2Size
  i32.const 1
  i32.shl
  call $~lib/rt/stub/__alloc
  local.set $leftRunStartBuf
  local.get $leftRunStartBuf
  local.get $lgPlus2Size
  i32.add
  local.set $leftRunEndBuf
  i32.const 0
  local.set $i
  loop $for-loop|1
   local.get $i
   local.get $lgPlus2
   i32.lt_u
   local.set $16
   local.get $16
   if
    local.get $leftRunStartBuf
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.const -1
    i32.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|1
   end
  end
  local.get $len
  i32.const 1
  i32.shl
  call $~lib/rt/stub/__alloc
  local.set $buffer
  local.get $len
  i32.const 1
  i32.sub
  local.set $hi
  local.get $ptr
  i32.const 0
  local.get $hi
  local.get $comparator
  call $~lib/util/sort/extendRunRight<u16>
  local.set $endA
  local.get $endA
  i32.const 1
  i32.add
  local.set $lenA
  local.get $lenA
  i32.const 32
  i32.lt_s
  if
   local.get $hi
   local.tee $21
   i32.const 32
   i32.const 1
   i32.sub
   local.tee $22
   local.get $21
   local.get $22
   i32.lt_s
   select
   local.set $endA
   local.get $ptr
   i32.const 0
   local.get $endA
   local.get $lenA
   local.get $comparator
   call $~lib/util/sort/insertionSort<u16>
  end
  i32.const 0
  local.set $top
  i32.const 0
  local.set $startA
  loop $while-continue|2
   local.get $endA
   local.get $hi
   i32.lt_s
   local.set $25
   local.get $25
   if
    local.get $endA
    i32.const 1
    i32.add
    local.set $startB
    local.get $ptr
    local.get $startB
    local.get $hi
    local.get $comparator
    call $~lib/util/sort/extendRunRight<u16>
    local.set $endB
    local.get $endB
    local.get $startB
    i32.sub
    i32.const 1
    i32.add
    local.set $lenB
    local.get $lenB
    i32.const 32
    i32.lt_s
    if
     local.get $hi
     local.tee $29
     local.get $startB
     i32.const 32
     i32.add
     i32.const 1
     i32.sub
     local.tee $30
     local.get $29
     local.get $30
     i32.lt_s
     select
     local.set $endB
     local.get $ptr
     local.get $startB
     local.get $endB
     local.get $lenB
     local.get $comparator
     call $~lib/util/sort/insertionSort<u16>
    end
    i32.const 0
    local.get $hi
    local.get $startA
    local.get $startB
    local.get $endB
    call $~lib/util/sort/nodePower
    local.set $k
    local.get $top
    local.set $i|32
    loop $for-loop|3
     local.get $i|32
     local.get $k
     i32.gt_u
     local.set $33
     local.get $33
     if
      local.get $leftRunStartBuf
      local.get $i|32
      i32.const 2
      i32.shl
      i32.add
      i32.load $0
      local.set $start
      local.get $start
      i32.const -1
      i32.ne
      if
       local.get $ptr
       local.get $start
       local.get $leftRunEndBuf
       local.get $i|32
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       i32.const 1
       i32.add
       local.get $endA
       local.get $buffer
       local.get $comparator
       call $~lib/util/sort/mergeRuns<u16>
       local.get $start
       local.set $startA
       local.get $leftRunStartBuf
       local.get $i|32
       i32.const 2
       i32.shl
       i32.add
       i32.const -1
       i32.store $0
      end
      local.get $i|32
      i32.const 1
      i32.sub
      local.set $i|32
      br $for-loop|3
     end
    end
    local.get $leftRunStartBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $startA
    i32.store $0
    local.get $leftRunEndBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $endA
    i32.store $0
    local.get $startB
    local.set $startA
    local.get $endB
    local.set $endA
    local.get $k
    local.set $top
    br $while-continue|2
   end
  end
  local.get $top
  local.set $i|35
  loop $for-loop|4
   local.get $i|35
   i32.const 0
   i32.ne
   local.set $36
   local.get $36
   if
    local.get $leftRunStartBuf
    local.get $i|35
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $start|37
    local.get $start|37
    i32.const -1
    i32.ne
    if
     local.get $ptr
     local.get $start|37
     local.get $leftRunEndBuf
     local.get $i|35
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 1
     i32.add
     local.get $hi
     local.get $buffer
     local.get $comparator
     call $~lib/util/sort/mergeRuns<u16>
    end
    local.get $i|35
    i32.const 1
    i32.sub
    local.set $i|35
    br $for-loop|4
   end
  end
  local.get $buffer
  call $~lib/rt/stub/__free
  local.get $leftRunStartBuf
  call $~lib/rt/stub/__free
 )
 (func $~lib/typedarray/Uint16Array#sort (type $i32_i32_=>_i32) (param $this i32) (param $comparator i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Uint16Array#get:length
  local.get $comparator
  call $~lib/util/sort/SORT<u16>
  local.get $this
 )
 (func $~lib/util/sort/COMPARATOR<u16>~anonymous|0 (type $i32_i32_=>_i32) (param $a i32) (param $b i32) (result i32)
  local.get $a
  i32.const 65535
  i32.and
  local.get $b
  i32.const 65535
  i32.and
  i32.gt_u
  local.get $a
  i32.const 65535
  i32.and
  local.get $b
  i32.const 65535
  i32.and
  i32.lt_u
  i32.sub
 )
 (func $~lib/typedarray/Uint16Array#sort@varargs (type $i32_i32_=>_i32) (param $this i32) (param $comparator i32) (result i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   block $~lib/util/sort/COMPARATOR<u16>|inlined.0 (result i32)
    i32.const 1
    drop
    i32.const 0
    drop
    i32.const 8864
    br $~lib/util/sort/COMPARATOR<u16>|inlined.0
   end
   local.set $comparator
  end
  local.get $this
  local.get $comparator
  call $~lib/typedarray/Uint16Array#sort
 )
 (func $std/typedarray/testArraySort<~lib/typedarray/Uint16Array,u16>~anonymous|0 (type $i32_i32_=>_i32) (param $a i32) (param $b i32) (result i32)
  local.get $b
  i32.const 65535
  i32.and
  local.get $a
  i32.const 65535
  i32.and
  i32.gt_u
  local.get $b
  i32.const 65535
  i32.and
  local.get $a
  i32.const 65535
  i32.and
  i32.lt_u
  i32.sub
 )
 (func $~lib/util/sort/insertionSort<i32> (type $i32_i32_i32_i32_i32_=>_none) (param $ptr i32) (param $left i32) (param $right i32) (param $presorted i32) (param $comparator i32)
  (local $range i32)
  (local $i i32)
  (local $7 i32)
  (local $a i32)
  (local $b i32)
  (local $min i32)
  (local $max i32)
  (local $j i32)
  (local $13 i32)
  (local $14 i32)
  i32.const 0
  i32.const 1
  i32.ge_s
  drop
  local.get $right
  local.get $left
  i32.sub
  i32.const 1
  i32.add
  local.set $range
  local.get $left
  local.get $range
  i32.const 1
  i32.and
  local.get $presorted
  local.get $range
  local.get $presorted
  i32.sub
  i32.const 1
  i32.and
  i32.sub
  local.get $presorted
  i32.const 0
  i32.eq
  select
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $right
   i32.le_s
   local.set $7
   local.get $7
   if
    local.get $ptr
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $a
    local.get $ptr
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0 offset=4
    local.set $b
    local.get $b
    local.set $min
    local.get $a
    local.set $max
    local.get $a
    local.get $b
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.le_s
    if
     local.get $a
     local.set $min
     local.get $b
     local.set $max
    end
    local.get $i
    i32.const 1
    i32.sub
    local.set $j
    block $while-break|1
     loop $while-continue|1
      local.get $j
      local.get $left
      i32.ge_s
      local.set $13
      local.get $13
      if
       local.get $ptr
       local.get $j
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       local.set $a
       local.get $a
       local.get $max
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $j
        i32.const 2
        i32.shl
        i32.add
        local.get $a
        i32.store $0 offset=8
        local.get $j
        i32.const 1
        i32.sub
        local.set $j
       else
        br $while-break|1
       end
       br $while-continue|1
      end
     end
    end
    local.get $ptr
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    local.get $max
    i32.store $0 offset=8
    block $while-break|2
     loop $while-continue|2
      local.get $j
      local.get $left
      i32.ge_s
      local.set $14
      local.get $14
      if
       local.get $ptr
       local.get $j
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       local.set $a
       local.get $a
       local.get $min
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $j
        i32.const 2
        i32.shl
        i32.add
        local.get $a
        i32.store $0 offset=4
        local.get $j
        i32.const 1
        i32.sub
        local.set $j
       else
        br $while-break|2
       end
       br $while-continue|2
      end
     end
    end
    local.get $ptr
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    local.get $min
    i32.store $0 offset=4
    local.get $i
    i32.const 2
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/util/sort/extendRunRight<i32> (type $i32_i32_i32_i32_=>_i32) (param $ptr i32) (param $i i32) (param $right i32) (param $comparator i32) (result i32)
  (local $j i32)
  (local $5 i32)
  (local $k i32)
  (local $7 i32)
  (local $tmp i32)
  (local $9 i32)
  local.get $i
  local.get $right
  i32.eq
  if
   local.get $i
   return
  end
  local.get $i
  local.set $j
  local.get $ptr
  local.get $j
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.get $ptr
  local.get $j
  i32.const 1
  i32.add
  local.tee $j
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  i32.const 2
  global.set $~argumentsLength
  local.get $comparator
  i32.load $0
  call_indirect $0 (type $i32_i32_=>_i32)
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     i32.load $0 offset=4
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 31
     i32.shr_u
    else
     i32.const 0
    end
    local.set $5
    local.get $5
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|0
    end
   end
   local.get $j
   local.set $k
   loop $while-continue|1
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     local.get $ptr
     local.get $i
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.set $tmp
     local.get $ptr
     local.get $i
     i32.const 2
     i32.shl
     i32.add
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     local.get $tmp
     i32.store $0
     local.get $k
     i32.const 1
     i32.sub
     local.set $k
     br $while-continue|1
    end
   end
  else
   loop $while-continue|2
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     i32.load $0 offset=4
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.ge_s
    else
     i32.const 0
    end
    local.set $9
    local.get $9
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|2
    end
   end
  end
  local.get $j
 )
 (func $~lib/util/sort/mergeRuns<i32> (type $i32_i32_i32_i32_i32_i32_=>_none) (param $ptr i32) (param $l i32) (param $m i32) (param $r i32) (param $buffer i32) (param $comparator i32)
  (local $i i32)
  (local $j i32)
  (local $t i32)
  (local $9 i32)
  (local $10 i32)
  (local $k i32)
  (local $12 i32)
  (local $a i32)
  (local $b i32)
  local.get $m
  i32.const 1
  i32.sub
  local.set $m
  local.get $r
  local.get $m
  i32.add
  local.set $t
  local.get $m
  i32.const 1
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $l
   i32.gt_s
   local.set $9
   local.get $9
   if
    local.get $buffer
    local.get $i
    i32.const 1
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    local.get $ptr
    local.get $i
    i32.const 1
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    i32.store $0
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  local.get $m
  local.set $j
  loop $for-loop|1
   local.get $j
   local.get $r
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $buffer
    local.get $t
    local.get $j
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    local.get $ptr
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    i32.load $0 offset=4
    i32.store $0
    local.get $j
    i32.const 1
    i32.add
    local.set $j
    br $for-loop|1
   end
  end
  local.get $l
  local.set $k
  loop $for-loop|2
   local.get $k
   local.get $r
   i32.le_s
   local.set $12
   local.get $12
   if
    local.get $buffer
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $a
    local.get $buffer
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $b
    local.get $a
    local.get $b
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.lt_s
    if
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     local.get $a
     i32.store $0
     local.get $j
     i32.const 1
     i32.sub
     local.set $j
    else
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     local.get $b
     i32.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
    end
    local.get $k
    i32.const 1
    i32.add
    local.set $k
    br $for-loop|2
   end
  end
 )
 (func $~lib/util/sort/SORT<i32> (type $i32_i32_i32_=>_none) (param $ptr i32) (param $len i32) (param $comparator i32)
  (local $3 i32)
  (local $a i32)
  (local $b i32)
  (local $c i32)
  (local $a|7 i32)
  (local $b|8 i32)
  (local $c|9 i32)
  (local $n i32)
  (local $lgPlus2 i32)
  (local $lgPlus2Size i32)
  (local $leftRunStartBuf i32)
  (local $leftRunEndBuf i32)
  (local $i i32)
  (local $16 i32)
  (local $buffer i32)
  (local $hi i32)
  (local $endA i32)
  (local $lenA i32)
  (local $21 i32)
  (local $22 i32)
  (local $top i32)
  (local $startA i32)
  (local $25 i32)
  (local $startB i32)
  (local $endB i32)
  (local $lenB i32)
  (local $29 i32)
  (local $30 i32)
  (local $k i32)
  (local $i|32 i32)
  (local $33 i32)
  (local $start i32)
  (local $i|35 i32)
  (local $36 i32)
  (local $start|37 i32)
  local.get $len
  i32.const 48
  i32.le_s
  if
   local.get $len
   i32.const 1
   i32.le_s
   if
    return
   end
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   block $break|0
    block $case1|0
     block $case0|0
      local.get $len
      local.set $3
      local.get $3
      i32.const 3
      i32.eq
      br_if $case0|0
      local.get $3
      i32.const 2
      i32.eq
      br_if $case1|0
      br $break|0
     end
     local.get $ptr
     i32.load $0
     local.set $a
     local.get $ptr
     i32.load $0 offset=4
     local.set $b
     local.get $a
     local.get $b
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $c
     local.get $ptr
     local.get $b
     local.get $a
     local.get $c
     select
     i32.store $0
     local.get $a
     local.get $b
     local.get $c
     select
     local.set $a
     local.get $ptr
     i32.load $0 offset=8
     local.set $b
     local.get $a
     local.get $b
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $c
     local.get $ptr
     local.get $b
     local.get $a
     local.get $c
     select
     i32.store $0 offset=4
     local.get $ptr
     local.get $a
     local.get $b
     local.get $c
     select
     i32.store $0 offset=8
    end
    local.get $ptr
    i32.load $0
    local.set $a|7
    local.get $ptr
    i32.load $0 offset=4
    local.set $b|8
    local.get $a|7
    local.get $b|8
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.gt_s
    local.set $c|9
    local.get $ptr
    local.get $b|8
    local.get $a|7
    local.get $c|9
    select
    i32.store $0
    local.get $ptr
    local.get $a|7
    local.get $b|8
    local.get $c|9
    select
    i32.store $0 offset=4
    return
   end
   local.get $ptr
   i32.const 0
   local.get $len
   i32.const 1
   i32.sub
   i32.const 0
   local.get $comparator
   call $~lib/util/sort/insertionSort<i32>
   return
  end
  local.get $len
  local.set $n
  i32.const 31
  local.get $n
  i32.clz
  i32.sub
  i32.const 2
  i32.add
  local.set $lgPlus2
  local.get $lgPlus2
  i32.const 2
  i32.shl
  local.set $lgPlus2Size
  local.get $lgPlus2Size
  i32.const 1
  i32.shl
  call $~lib/rt/stub/__alloc
  local.set $leftRunStartBuf
  local.get $leftRunStartBuf
  local.get $lgPlus2Size
  i32.add
  local.set $leftRunEndBuf
  i32.const 0
  local.set $i
  loop $for-loop|1
   local.get $i
   local.get $lgPlus2
   i32.lt_u
   local.set $16
   local.get $16
   if
    local.get $leftRunStartBuf
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.const -1
    i32.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|1
   end
  end
  local.get $len
  i32.const 2
  i32.shl
  call $~lib/rt/stub/__alloc
  local.set $buffer
  local.get $len
  i32.const 1
  i32.sub
  local.set $hi
  local.get $ptr
  i32.const 0
  local.get $hi
  local.get $comparator
  call $~lib/util/sort/extendRunRight<i32>
  local.set $endA
  local.get $endA
  i32.const 1
  i32.add
  local.set $lenA
  local.get $lenA
  i32.const 32
  i32.lt_s
  if
   local.get $hi
   local.tee $21
   i32.const 32
   i32.const 1
   i32.sub
   local.tee $22
   local.get $21
   local.get $22
   i32.lt_s
   select
   local.set $endA
   local.get $ptr
   i32.const 0
   local.get $endA
   local.get $lenA
   local.get $comparator
   call $~lib/util/sort/insertionSort<i32>
  end
  i32.const 0
  local.set $top
  i32.const 0
  local.set $startA
  loop $while-continue|2
   local.get $endA
   local.get $hi
   i32.lt_s
   local.set $25
   local.get $25
   if
    local.get $endA
    i32.const 1
    i32.add
    local.set $startB
    local.get $ptr
    local.get $startB
    local.get $hi
    local.get $comparator
    call $~lib/util/sort/extendRunRight<i32>
    local.set $endB
    local.get $endB
    local.get $startB
    i32.sub
    i32.const 1
    i32.add
    local.set $lenB
    local.get $lenB
    i32.const 32
    i32.lt_s
    if
     local.get $hi
     local.tee $29
     local.get $startB
     i32.const 32
     i32.add
     i32.const 1
     i32.sub
     local.tee $30
     local.get $29
     local.get $30
     i32.lt_s
     select
     local.set $endB
     local.get $ptr
     local.get $startB
     local.get $endB
     local.get $lenB
     local.get $comparator
     call $~lib/util/sort/insertionSort<i32>
    end
    i32.const 0
    local.get $hi
    local.get $startA
    local.get $startB
    local.get $endB
    call $~lib/util/sort/nodePower
    local.set $k
    local.get $top
    local.set $i|32
    loop $for-loop|3
     local.get $i|32
     local.get $k
     i32.gt_u
     local.set $33
     local.get $33
     if
      local.get $leftRunStartBuf
      local.get $i|32
      i32.const 2
      i32.shl
      i32.add
      i32.load $0
      local.set $start
      local.get $start
      i32.const -1
      i32.ne
      if
       local.get $ptr
       local.get $start
       local.get $leftRunEndBuf
       local.get $i|32
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       i32.const 1
       i32.add
       local.get $endA
       local.get $buffer
       local.get $comparator
       call $~lib/util/sort/mergeRuns<i32>
       local.get $start
       local.set $startA
       local.get $leftRunStartBuf
       local.get $i|32
       i32.const 2
       i32.shl
       i32.add
       i32.const -1
       i32.store $0
      end
      local.get $i|32
      i32.const 1
      i32.sub
      local.set $i|32
      br $for-loop|3
     end
    end
    local.get $leftRunStartBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $startA
    i32.store $0
    local.get $leftRunEndBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $endA
    i32.store $0
    local.get $startB
    local.set $startA
    local.get $endB
    local.set $endA
    local.get $k
    local.set $top
    br $while-continue|2
   end
  end
  local.get $top
  local.set $i|35
  loop $for-loop|4
   local.get $i|35
   i32.const 0
   i32.ne
   local.set $36
   local.get $36
   if
    local.get $leftRunStartBuf
    local.get $i|35
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $start|37
    local.get $start|37
    i32.const -1
    i32.ne
    if
     local.get $ptr
     local.get $start|37
     local.get $leftRunEndBuf
     local.get $i|35
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 1
     i32.add
     local.get $hi
     local.get $buffer
     local.get $comparator
     call $~lib/util/sort/mergeRuns<i32>
    end
    local.get $i|35
    i32.const 1
    i32.sub
    local.set $i|35
    br $for-loop|4
   end
  end
  local.get $buffer
  call $~lib/rt/stub/__free
  local.get $leftRunStartBuf
  call $~lib/rt/stub/__free
 )
 (func $~lib/typedarray/Int32Array#sort (type $i32_i32_=>_i32) (param $this i32) (param $comparator i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Int32Array#get:length
  local.get $comparator
  call $~lib/util/sort/SORT<i32>
  local.get $this
 )
 (func $~lib/util/sort/COMPARATOR<i32>~anonymous|0 (type $i32_i32_=>_i32) (param $a i32) (param $b i32) (result i32)
  local.get $a
  local.get $b
  i32.sub
 )
 (func $~lib/typedarray/Int32Array#sort@varargs (type $i32_i32_=>_i32) (param $this i32) (param $comparator i32) (result i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   block $~lib/util/sort/COMPARATOR<i32>|inlined.0 (result i32)
    i32.const 1
    drop
    i32.const 4
    i32.const 4
    i32.le_u
    drop
    i32.const 8928
    br $~lib/util/sort/COMPARATOR<i32>|inlined.0
   end
   local.set $comparator
  end
  local.get $this
  local.get $comparator
  call $~lib/typedarray/Int32Array#sort
 )
 (func $std/typedarray/testArraySort<~lib/typedarray/Int32Array,i32>~anonymous|0 (type $i32_i32_=>_i32) (param $a i32) (param $b i32) (result i32)
  local.get $b
  local.get $a
  i32.gt_s
  local.get $b
  local.get $a
  i32.lt_s
  i32.sub
 )
 (func $~lib/util/sort/insertionSort<u32> (type $i32_i32_i32_i32_i32_=>_none) (param $ptr i32) (param $left i32) (param $right i32) (param $presorted i32) (param $comparator i32)
  (local $range i32)
  (local $i i32)
  (local $7 i32)
  (local $a i32)
  (local $b i32)
  (local $min i32)
  (local $max i32)
  (local $j i32)
  (local $13 i32)
  (local $14 i32)
  i32.const 0
  i32.const 1
  i32.ge_s
  drop
  local.get $right
  local.get $left
  i32.sub
  i32.const 1
  i32.add
  local.set $range
  local.get $left
  local.get $range
  i32.const 1
  i32.and
  local.get $presorted
  local.get $range
  local.get $presorted
  i32.sub
  i32.const 1
  i32.and
  i32.sub
  local.get $presorted
  i32.const 0
  i32.eq
  select
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $right
   i32.le_s
   local.set $7
   local.get $7
   if
    local.get $ptr
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $a
    local.get $ptr
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0 offset=4
    local.set $b
    local.get $b
    local.set $min
    local.get $a
    local.set $max
    local.get $a
    local.get $b
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.le_s
    if
     local.get $a
     local.set $min
     local.get $b
     local.set $max
    end
    local.get $i
    i32.const 1
    i32.sub
    local.set $j
    block $while-break|1
     loop $while-continue|1
      local.get $j
      local.get $left
      i32.ge_s
      local.set $13
      local.get $13
      if
       local.get $ptr
       local.get $j
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       local.set $a
       local.get $a
       local.get $max
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $j
        i32.const 2
        i32.shl
        i32.add
        local.get $a
        i32.store $0 offset=8
        local.get $j
        i32.const 1
        i32.sub
        local.set $j
       else
        br $while-break|1
       end
       br $while-continue|1
      end
     end
    end
    local.get $ptr
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    local.get $max
    i32.store $0 offset=8
    block $while-break|2
     loop $while-continue|2
      local.get $j
      local.get $left
      i32.ge_s
      local.set $14
      local.get $14
      if
       local.get $ptr
       local.get $j
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       local.set $a
       local.get $a
       local.get $min
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $j
        i32.const 2
        i32.shl
        i32.add
        local.get $a
        i32.store $0 offset=4
        local.get $j
        i32.const 1
        i32.sub
        local.set $j
       else
        br $while-break|2
       end
       br $while-continue|2
      end
     end
    end
    local.get $ptr
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    local.get $min
    i32.store $0 offset=4
    local.get $i
    i32.const 2
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/util/sort/extendRunRight<u32> (type $i32_i32_i32_i32_=>_i32) (param $ptr i32) (param $i i32) (param $right i32) (param $comparator i32) (result i32)
  (local $j i32)
  (local $5 i32)
  (local $k i32)
  (local $7 i32)
  (local $tmp i32)
  (local $9 i32)
  local.get $i
  local.get $right
  i32.eq
  if
   local.get $i
   return
  end
  local.get $i
  local.set $j
  local.get $ptr
  local.get $j
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.get $ptr
  local.get $j
  i32.const 1
  i32.add
  local.tee $j
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  i32.const 2
  global.set $~argumentsLength
  local.get $comparator
  i32.load $0
  call_indirect $0 (type $i32_i32_=>_i32)
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     i32.load $0 offset=4
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 31
     i32.shr_u
    else
     i32.const 0
    end
    local.set $5
    local.get $5
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|0
    end
   end
   local.get $j
   local.set $k
   loop $while-continue|1
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     local.get $ptr
     local.get $i
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.set $tmp
     local.get $ptr
     local.get $i
     i32.const 2
     i32.shl
     i32.add
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     local.get $tmp
     i32.store $0
     local.get $k
     i32.const 1
     i32.sub
     local.set $k
     br $while-continue|1
    end
   end
  else
   loop $while-continue|2
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     i32.load $0 offset=4
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.ge_s
    else
     i32.const 0
    end
    local.set $9
    local.get $9
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|2
    end
   end
  end
  local.get $j
 )
 (func $~lib/util/sort/mergeRuns<u32> (type $i32_i32_i32_i32_i32_i32_=>_none) (param $ptr i32) (param $l i32) (param $m i32) (param $r i32) (param $buffer i32) (param $comparator i32)
  (local $i i32)
  (local $j i32)
  (local $t i32)
  (local $9 i32)
  (local $10 i32)
  (local $k i32)
  (local $12 i32)
  (local $a i32)
  (local $b i32)
  local.get $m
  i32.const 1
  i32.sub
  local.set $m
  local.get $r
  local.get $m
  i32.add
  local.set $t
  local.get $m
  i32.const 1
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $l
   i32.gt_s
   local.set $9
   local.get $9
   if
    local.get $buffer
    local.get $i
    i32.const 1
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    local.get $ptr
    local.get $i
    i32.const 1
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    i32.store $0
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  local.get $m
  local.set $j
  loop $for-loop|1
   local.get $j
   local.get $r
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $buffer
    local.get $t
    local.get $j
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    local.get $ptr
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    i32.load $0 offset=4
    i32.store $0
    local.get $j
    i32.const 1
    i32.add
    local.set $j
    br $for-loop|1
   end
  end
  local.get $l
  local.set $k
  loop $for-loop|2
   local.get $k
   local.get $r
   i32.le_s
   local.set $12
   local.get $12
   if
    local.get $buffer
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $a
    local.get $buffer
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $b
    local.get $a
    local.get $b
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.lt_s
    if
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     local.get $a
     i32.store $0
     local.get $j
     i32.const 1
     i32.sub
     local.set $j
    else
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     local.get $b
     i32.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
    end
    local.get $k
    i32.const 1
    i32.add
    local.set $k
    br $for-loop|2
   end
  end
 )
 (func $~lib/util/sort/SORT<u32> (type $i32_i32_i32_=>_none) (param $ptr i32) (param $len i32) (param $comparator i32)
  (local $3 i32)
  (local $a i32)
  (local $b i32)
  (local $c i32)
  (local $a|7 i32)
  (local $b|8 i32)
  (local $c|9 i32)
  (local $n i32)
  (local $lgPlus2 i32)
  (local $lgPlus2Size i32)
  (local $leftRunStartBuf i32)
  (local $leftRunEndBuf i32)
  (local $i i32)
  (local $16 i32)
  (local $buffer i32)
  (local $hi i32)
  (local $endA i32)
  (local $lenA i32)
  (local $21 i32)
  (local $22 i32)
  (local $top i32)
  (local $startA i32)
  (local $25 i32)
  (local $startB i32)
  (local $endB i32)
  (local $lenB i32)
  (local $29 i32)
  (local $30 i32)
  (local $k i32)
  (local $i|32 i32)
  (local $33 i32)
  (local $start i32)
  (local $i|35 i32)
  (local $36 i32)
  (local $start|37 i32)
  local.get $len
  i32.const 48
  i32.le_s
  if
   local.get $len
   i32.const 1
   i32.le_s
   if
    return
   end
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   block $break|0
    block $case1|0
     block $case0|0
      local.get $len
      local.set $3
      local.get $3
      i32.const 3
      i32.eq
      br_if $case0|0
      local.get $3
      i32.const 2
      i32.eq
      br_if $case1|0
      br $break|0
     end
     local.get $ptr
     i32.load $0
     local.set $a
     local.get $ptr
     i32.load $0 offset=4
     local.set $b
     local.get $a
     local.get $b
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $c
     local.get $ptr
     local.get $b
     local.get $a
     local.get $c
     select
     i32.store $0
     local.get $a
     local.get $b
     local.get $c
     select
     local.set $a
     local.get $ptr
     i32.load $0 offset=8
     local.set $b
     local.get $a
     local.get $b
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $c
     local.get $ptr
     local.get $b
     local.get $a
     local.get $c
     select
     i32.store $0 offset=4
     local.get $ptr
     local.get $a
     local.get $b
     local.get $c
     select
     i32.store $0 offset=8
    end
    local.get $ptr
    i32.load $0
    local.set $a|7
    local.get $ptr
    i32.load $0 offset=4
    local.set $b|8
    local.get $a|7
    local.get $b|8
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.gt_s
    local.set $c|9
    local.get $ptr
    local.get $b|8
    local.get $a|7
    local.get $c|9
    select
    i32.store $0
    local.get $ptr
    local.get $a|7
    local.get $b|8
    local.get $c|9
    select
    i32.store $0 offset=4
    return
   end
   local.get $ptr
   i32.const 0
   local.get $len
   i32.const 1
   i32.sub
   i32.const 0
   local.get $comparator
   call $~lib/util/sort/insertionSort<u32>
   return
  end
  local.get $len
  local.set $n
  i32.const 31
  local.get $n
  i32.clz
  i32.sub
  i32.const 2
  i32.add
  local.set $lgPlus2
  local.get $lgPlus2
  i32.const 2
  i32.shl
  local.set $lgPlus2Size
  local.get $lgPlus2Size
  i32.const 1
  i32.shl
  call $~lib/rt/stub/__alloc
  local.set $leftRunStartBuf
  local.get $leftRunStartBuf
  local.get $lgPlus2Size
  i32.add
  local.set $leftRunEndBuf
  i32.const 0
  local.set $i
  loop $for-loop|1
   local.get $i
   local.get $lgPlus2
   i32.lt_u
   local.set $16
   local.get $16
   if
    local.get $leftRunStartBuf
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.const -1
    i32.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|1
   end
  end
  local.get $len
  i32.const 2
  i32.shl
  call $~lib/rt/stub/__alloc
  local.set $buffer
  local.get $len
  i32.const 1
  i32.sub
  local.set $hi
  local.get $ptr
  i32.const 0
  local.get $hi
  local.get $comparator
  call $~lib/util/sort/extendRunRight<u32>
  local.set $endA
  local.get $endA
  i32.const 1
  i32.add
  local.set $lenA
  local.get $lenA
  i32.const 32
  i32.lt_s
  if
   local.get $hi
   local.tee $21
   i32.const 32
   i32.const 1
   i32.sub
   local.tee $22
   local.get $21
   local.get $22
   i32.lt_s
   select
   local.set $endA
   local.get $ptr
   i32.const 0
   local.get $endA
   local.get $lenA
   local.get $comparator
   call $~lib/util/sort/insertionSort<u32>
  end
  i32.const 0
  local.set $top
  i32.const 0
  local.set $startA
  loop $while-continue|2
   local.get $endA
   local.get $hi
   i32.lt_s
   local.set $25
   local.get $25
   if
    local.get $endA
    i32.const 1
    i32.add
    local.set $startB
    local.get $ptr
    local.get $startB
    local.get $hi
    local.get $comparator
    call $~lib/util/sort/extendRunRight<u32>
    local.set $endB
    local.get $endB
    local.get $startB
    i32.sub
    i32.const 1
    i32.add
    local.set $lenB
    local.get $lenB
    i32.const 32
    i32.lt_s
    if
     local.get $hi
     local.tee $29
     local.get $startB
     i32.const 32
     i32.add
     i32.const 1
     i32.sub
     local.tee $30
     local.get $29
     local.get $30
     i32.lt_s
     select
     local.set $endB
     local.get $ptr
     local.get $startB
     local.get $endB
     local.get $lenB
     local.get $comparator
     call $~lib/util/sort/insertionSort<u32>
    end
    i32.const 0
    local.get $hi
    local.get $startA
    local.get $startB
    local.get $endB
    call $~lib/util/sort/nodePower
    local.set $k
    local.get $top
    local.set $i|32
    loop $for-loop|3
     local.get $i|32
     local.get $k
     i32.gt_u
     local.set $33
     local.get $33
     if
      local.get $leftRunStartBuf
      local.get $i|32
      i32.const 2
      i32.shl
      i32.add
      i32.load $0
      local.set $start
      local.get $start
      i32.const -1
      i32.ne
      if
       local.get $ptr
       local.get $start
       local.get $leftRunEndBuf
       local.get $i|32
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       i32.const 1
       i32.add
       local.get $endA
       local.get $buffer
       local.get $comparator
       call $~lib/util/sort/mergeRuns<u32>
       local.get $start
       local.set $startA
       local.get $leftRunStartBuf
       local.get $i|32
       i32.const 2
       i32.shl
       i32.add
       i32.const -1
       i32.store $0
      end
      local.get $i|32
      i32.const 1
      i32.sub
      local.set $i|32
      br $for-loop|3
     end
    end
    local.get $leftRunStartBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $startA
    i32.store $0
    local.get $leftRunEndBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $endA
    i32.store $0
    local.get $startB
    local.set $startA
    local.get $endB
    local.set $endA
    local.get $k
    local.set $top
    br $while-continue|2
   end
  end
  local.get $top
  local.set $i|35
  loop $for-loop|4
   local.get $i|35
   i32.const 0
   i32.ne
   local.set $36
   local.get $36
   if
    local.get $leftRunStartBuf
    local.get $i|35
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $start|37
    local.get $start|37
    i32.const -1
    i32.ne
    if
     local.get $ptr
     local.get $start|37
     local.get $leftRunEndBuf
     local.get $i|35
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 1
     i32.add
     local.get $hi
     local.get $buffer
     local.get $comparator
     call $~lib/util/sort/mergeRuns<u32>
    end
    local.get $i|35
    i32.const 1
    i32.sub
    local.set $i|35
    br $for-loop|4
   end
  end
  local.get $buffer
  call $~lib/rt/stub/__free
  local.get $leftRunStartBuf
  call $~lib/rt/stub/__free
 )
 (func $~lib/typedarray/Uint32Array#sort (type $i32_i32_=>_i32) (param $this i32) (param $comparator i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Uint32Array#get:length
  local.get $comparator
  call $~lib/util/sort/SORT<u32>
  local.get $this
 )
 (func $~lib/util/sort/COMPARATOR<u32>~anonymous|0 (type $i32_i32_=>_i32) (param $a i32) (param $b i32) (result i32)
  local.get $a
  local.get $b
  i32.gt_u
  local.get $a
  local.get $b
  i32.lt_u
  i32.sub
 )
 (func $~lib/typedarray/Uint32Array#sort@varargs (type $i32_i32_=>_i32) (param $this i32) (param $comparator i32) (result i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   block $~lib/util/sort/COMPARATOR<u32>|inlined.0 (result i32)
    i32.const 1
    drop
    i32.const 0
    drop
    i32.const 8992
    br $~lib/util/sort/COMPARATOR<u32>|inlined.0
   end
   local.set $comparator
  end
  local.get $this
  local.get $comparator
  call $~lib/typedarray/Uint32Array#sort
 )
 (func $std/typedarray/testArraySort<~lib/typedarray/Uint32Array,u32>~anonymous|0 (type $i32_i32_=>_i32) (param $a i32) (param $b i32) (result i32)
  local.get $b
  local.get $a
  i32.gt_u
  local.get $b
  local.get $a
  i32.lt_u
  i32.sub
 )
 (func $~lib/util/sort/insertionSort<i64> (type $i32_i32_i32_i32_i32_=>_none) (param $ptr i32) (param $left i32) (param $right i32) (param $presorted i32) (param $comparator i32)
  (local $range i32)
  (local $i i32)
  (local $7 i32)
  (local $a i64)
  (local $b i64)
  (local $min i64)
  (local $max i64)
  (local $j i32)
  (local $13 i32)
  (local $14 i32)
  i32.const 0
  i32.const 1
  i32.ge_s
  drop
  local.get $right
  local.get $left
  i32.sub
  i32.const 1
  i32.add
  local.set $range
  local.get $left
  local.get $range
  i32.const 1
  i32.and
  local.get $presorted
  local.get $range
  local.get $presorted
  i32.sub
  i32.const 1
  i32.and
  i32.sub
  local.get $presorted
  i32.const 0
  i32.eq
  select
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $right
   i32.le_s
   local.set $7
   local.get $7
   if
    local.get $ptr
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    local.set $a
    local.get $ptr
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    i64.load $0 offset=8
    local.set $b
    local.get $b
    local.set $min
    local.get $a
    local.set $max
    local.get $a
    local.get $b
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i64_i64_=>_i32)
    i32.const 0
    i32.le_s
    if
     local.get $a
     local.set $min
     local.get $b
     local.set $max
    end
    local.get $i
    i32.const 1
    i32.sub
    local.set $j
    block $while-break|1
     loop $while-continue|1
      local.get $j
      local.get $left
      i32.ge_s
      local.set $13
      local.get $13
      if
       local.get $ptr
       local.get $j
       i32.const 3
       i32.shl
       i32.add
       i64.load $0
       local.set $a
       local.get $a
       local.get $max
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $i64_i64_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $j
        i32.const 3
        i32.shl
        i32.add
        local.get $a
        i64.store $0 offset=16
        local.get $j
        i32.const 1
        i32.sub
        local.set $j
       else
        br $while-break|1
       end
       br $while-continue|1
      end
     end
    end
    local.get $ptr
    local.get $j
    i32.const 3
    i32.shl
    i32.add
    local.get $max
    i64.store $0 offset=16
    block $while-break|2
     loop $while-continue|2
      local.get $j
      local.get $left
      i32.ge_s
      local.set $14
      local.get $14
      if
       local.get $ptr
       local.get $j
       i32.const 3
       i32.shl
       i32.add
       i64.load $0
       local.set $a
       local.get $a
       local.get $min
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $i64_i64_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $j
        i32.const 3
        i32.shl
        i32.add
        local.get $a
        i64.store $0 offset=8
        local.get $j
        i32.const 1
        i32.sub
        local.set $j
       else
        br $while-break|2
       end
       br $while-continue|2
      end
     end
    end
    local.get $ptr
    local.get $j
    i32.const 3
    i32.shl
    i32.add
    local.get $min
    i64.store $0 offset=8
    local.get $i
    i32.const 2
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/util/sort/extendRunRight<i64> (type $i32_i32_i32_i32_=>_i32) (param $ptr i32) (param $i i32) (param $right i32) (param $comparator i32) (result i32)
  (local $j i32)
  (local $5 i32)
  (local $k i32)
  (local $7 i32)
  (local $tmp i64)
  (local $9 i32)
  local.get $i
  local.get $right
  i32.eq
  if
   local.get $i
   return
  end
  local.get $i
  local.set $j
  local.get $ptr
  local.get $j
  i32.const 3
  i32.shl
  i32.add
  i64.load $0
  local.get $ptr
  local.get $j
  i32.const 1
  i32.add
  local.tee $j
  i32.const 3
  i32.shl
  i32.add
  i64.load $0
  i32.const 2
  global.set $~argumentsLength
  local.get $comparator
  i32.load $0
  call_indirect $0 (type $i64_i64_=>_i32)
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 3
     i32.shl
     i32.add
     i64.load $0 offset=8
     local.get $ptr
     local.get $j
     i32.const 3
     i32.shl
     i32.add
     i64.load $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i64_i64_=>_i32)
     i32.const 31
     i32.shr_u
    else
     i32.const 0
    end
    local.set $5
    local.get $5
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|0
    end
   end
   local.get $j
   local.set $k
   loop $while-continue|1
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     local.get $ptr
     local.get $i
     i32.const 3
     i32.shl
     i32.add
     i64.load $0
     local.set $tmp
     local.get $ptr
     local.get $i
     i32.const 3
     i32.shl
     i32.add
     local.get $ptr
     local.get $k
     i32.const 3
     i32.shl
     i32.add
     i64.load $0
     i64.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     local.get $ptr
     local.get $k
     i32.const 3
     i32.shl
     i32.add
     local.get $tmp
     i64.store $0
     local.get $k
     i32.const 1
     i32.sub
     local.set $k
     br $while-continue|1
    end
   end
  else
   loop $while-continue|2
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 3
     i32.shl
     i32.add
     i64.load $0 offset=8
     local.get $ptr
     local.get $j
     i32.const 3
     i32.shl
     i32.add
     i64.load $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i64_i64_=>_i32)
     i32.const 0
     i32.ge_s
    else
     i32.const 0
    end
    local.set $9
    local.get $9
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|2
    end
   end
  end
  local.get $j
 )
 (func $~lib/util/sort/mergeRuns<i64> (type $i32_i32_i32_i32_i32_i32_=>_none) (param $ptr i32) (param $l i32) (param $m i32) (param $r i32) (param $buffer i32) (param $comparator i32)
  (local $i i32)
  (local $j i32)
  (local $t i32)
  (local $9 i32)
  (local $10 i32)
  (local $k i32)
  (local $12 i32)
  (local $a i64)
  (local $b i64)
  local.get $m
  i32.const 1
  i32.sub
  local.set $m
  local.get $r
  local.get $m
  i32.add
  local.set $t
  local.get $m
  i32.const 1
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $l
   i32.gt_s
   local.set $9
   local.get $9
   if
    local.get $buffer
    local.get $i
    i32.const 1
    i32.sub
    i32.const 3
    i32.shl
    i32.add
    local.get $ptr
    local.get $i
    i32.const 1
    i32.sub
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    i64.store $0
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  local.get $m
  local.set $j
  loop $for-loop|1
   local.get $j
   local.get $r
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $buffer
    local.get $t
    local.get $j
    i32.sub
    i32.const 3
    i32.shl
    i32.add
    local.get $ptr
    local.get $j
    i32.const 3
    i32.shl
    i32.add
    i64.load $0 offset=8
    i64.store $0
    local.get $j
    i32.const 1
    i32.add
    local.set $j
    br $for-loop|1
   end
  end
  local.get $l
  local.set $k
  loop $for-loop|2
   local.get $k
   local.get $r
   i32.le_s
   local.set $12
   local.get $12
   if
    local.get $buffer
    local.get $j
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    local.set $a
    local.get $buffer
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    local.set $b
    local.get $a
    local.get $b
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i64_i64_=>_i32)
    i32.const 0
    i32.lt_s
    if
     local.get $ptr
     local.get $k
     i32.const 3
     i32.shl
     i32.add
     local.get $a
     i64.store $0
     local.get $j
     i32.const 1
     i32.sub
     local.set $j
    else
     local.get $ptr
     local.get $k
     i32.const 3
     i32.shl
     i32.add
     local.get $b
     i64.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
    end
    local.get $k
    i32.const 1
    i32.add
    local.set $k
    br $for-loop|2
   end
  end
 )
 (func $~lib/util/sort/SORT<i64> (type $i32_i32_i32_=>_none) (param $ptr i32) (param $len i32) (param $comparator i32)
  (local $3 i32)
  (local $a i64)
  (local $b i64)
  (local $c i32)
  (local $a|7 i64)
  (local $b|8 i64)
  (local $c|9 i32)
  (local $n i32)
  (local $lgPlus2 i32)
  (local $lgPlus2Size i32)
  (local $leftRunStartBuf i32)
  (local $leftRunEndBuf i32)
  (local $i i32)
  (local $16 i32)
  (local $buffer i32)
  (local $hi i32)
  (local $endA i32)
  (local $lenA i32)
  (local $21 i32)
  (local $22 i32)
  (local $top i32)
  (local $startA i32)
  (local $25 i32)
  (local $startB i32)
  (local $endB i32)
  (local $lenB i32)
  (local $29 i32)
  (local $30 i32)
  (local $k i32)
  (local $i|32 i32)
  (local $33 i32)
  (local $start i32)
  (local $i|35 i32)
  (local $36 i32)
  (local $start|37 i32)
  local.get $len
  i32.const 48
  i32.le_s
  if
   local.get $len
   i32.const 1
   i32.le_s
   if
    return
   end
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   block $break|0
    block $case1|0
     block $case0|0
      local.get $len
      local.set $3
      local.get $3
      i32.const 3
      i32.eq
      br_if $case0|0
      local.get $3
      i32.const 2
      i32.eq
      br_if $case1|0
      br $break|0
     end
     local.get $ptr
     i64.load $0
     local.set $a
     local.get $ptr
     i64.load $0 offset=8
     local.set $b
     local.get $a
     local.get $b
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i64_i64_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $c
     local.get $ptr
     local.get $b
     local.get $a
     local.get $c
     select
     i64.store $0
     local.get $a
     local.get $b
     local.get $c
     select
     local.set $a
     local.get $ptr
     i64.load $0 offset=16
     local.set $b
     local.get $a
     local.get $b
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i64_i64_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $c
     local.get $ptr
     local.get $b
     local.get $a
     local.get $c
     select
     i64.store $0 offset=8
     local.get $ptr
     local.get $a
     local.get $b
     local.get $c
     select
     i64.store $0 offset=16
    end
    local.get $ptr
    i64.load $0
    local.set $a|7
    local.get $ptr
    i64.load $0 offset=8
    local.set $b|8
    local.get $a|7
    local.get $b|8
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i64_i64_=>_i32)
    i32.const 0
    i32.gt_s
    local.set $c|9
    local.get $ptr
    local.get $b|8
    local.get $a|7
    local.get $c|9
    select
    i64.store $0
    local.get $ptr
    local.get $a|7
    local.get $b|8
    local.get $c|9
    select
    i64.store $0 offset=8
    return
   end
   local.get $ptr
   i32.const 0
   local.get $len
   i32.const 1
   i32.sub
   i32.const 0
   local.get $comparator
   call $~lib/util/sort/insertionSort<i64>
   return
  end
  local.get $len
  local.set $n
  i32.const 31
  local.get $n
  i32.clz
  i32.sub
  i32.const 2
  i32.add
  local.set $lgPlus2
  local.get $lgPlus2
  i32.const 2
  i32.shl
  local.set $lgPlus2Size
  local.get $lgPlus2Size
  i32.const 1
  i32.shl
  call $~lib/rt/stub/__alloc
  local.set $leftRunStartBuf
  local.get $leftRunStartBuf
  local.get $lgPlus2Size
  i32.add
  local.set $leftRunEndBuf
  i32.const 0
  local.set $i
  loop $for-loop|1
   local.get $i
   local.get $lgPlus2
   i32.lt_u
   local.set $16
   local.get $16
   if
    local.get $leftRunStartBuf
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.const -1
    i32.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|1
   end
  end
  local.get $len
  i32.const 3
  i32.shl
  call $~lib/rt/stub/__alloc
  local.set $buffer
  local.get $len
  i32.const 1
  i32.sub
  local.set $hi
  local.get $ptr
  i32.const 0
  local.get $hi
  local.get $comparator
  call $~lib/util/sort/extendRunRight<i64>
  local.set $endA
  local.get $endA
  i32.const 1
  i32.add
  local.set $lenA
  local.get $lenA
  i32.const 32
  i32.lt_s
  if
   local.get $hi
   local.tee $21
   i32.const 32
   i32.const 1
   i32.sub
   local.tee $22
   local.get $21
   local.get $22
   i32.lt_s
   select
   local.set $endA
   local.get $ptr
   i32.const 0
   local.get $endA
   local.get $lenA
   local.get $comparator
   call $~lib/util/sort/insertionSort<i64>
  end
  i32.const 0
  local.set $top
  i32.const 0
  local.set $startA
  loop $while-continue|2
   local.get $endA
   local.get $hi
   i32.lt_s
   local.set $25
   local.get $25
   if
    local.get $endA
    i32.const 1
    i32.add
    local.set $startB
    local.get $ptr
    local.get $startB
    local.get $hi
    local.get $comparator
    call $~lib/util/sort/extendRunRight<i64>
    local.set $endB
    local.get $endB
    local.get $startB
    i32.sub
    i32.const 1
    i32.add
    local.set $lenB
    local.get $lenB
    i32.const 32
    i32.lt_s
    if
     local.get $hi
     local.tee $29
     local.get $startB
     i32.const 32
     i32.add
     i32.const 1
     i32.sub
     local.tee $30
     local.get $29
     local.get $30
     i32.lt_s
     select
     local.set $endB
     local.get $ptr
     local.get $startB
     local.get $endB
     local.get $lenB
     local.get $comparator
     call $~lib/util/sort/insertionSort<i64>
    end
    i32.const 0
    local.get $hi
    local.get $startA
    local.get $startB
    local.get $endB
    call $~lib/util/sort/nodePower
    local.set $k
    local.get $top
    local.set $i|32
    loop $for-loop|3
     local.get $i|32
     local.get $k
     i32.gt_u
     local.set $33
     local.get $33
     if
      local.get $leftRunStartBuf
      local.get $i|32
      i32.const 2
      i32.shl
      i32.add
      i32.load $0
      local.set $start
      local.get $start
      i32.const -1
      i32.ne
      if
       local.get $ptr
       local.get $start
       local.get $leftRunEndBuf
       local.get $i|32
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       i32.const 1
       i32.add
       local.get $endA
       local.get $buffer
       local.get $comparator
       call $~lib/util/sort/mergeRuns<i64>
       local.get $start
       local.set $startA
       local.get $leftRunStartBuf
       local.get $i|32
       i32.const 2
       i32.shl
       i32.add
       i32.const -1
       i32.store $0
      end
      local.get $i|32
      i32.const 1
      i32.sub
      local.set $i|32
      br $for-loop|3
     end
    end
    local.get $leftRunStartBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $startA
    i32.store $0
    local.get $leftRunEndBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $endA
    i32.store $0
    local.get $startB
    local.set $startA
    local.get $endB
    local.set $endA
    local.get $k
    local.set $top
    br $while-continue|2
   end
  end
  local.get $top
  local.set $i|35
  loop $for-loop|4
   local.get $i|35
   i32.const 0
   i32.ne
   local.set $36
   local.get $36
   if
    local.get $leftRunStartBuf
    local.get $i|35
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $start|37
    local.get $start|37
    i32.const -1
    i32.ne
    if
     local.get $ptr
     local.get $start|37
     local.get $leftRunEndBuf
     local.get $i|35
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 1
     i32.add
     local.get $hi
     local.get $buffer
     local.get $comparator
     call $~lib/util/sort/mergeRuns<i64>
    end
    local.get $i|35
    i32.const 1
    i32.sub
    local.set $i|35
    br $for-loop|4
   end
  end
  local.get $buffer
  call $~lib/rt/stub/__free
  local.get $leftRunStartBuf
  call $~lib/rt/stub/__free
 )
 (func $~lib/typedarray/Int64Array#sort (type $i32_i32_=>_i32) (param $this i32) (param $comparator i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Int64Array#get:length
  local.get $comparator
  call $~lib/util/sort/SORT<i64>
  local.get $this
 )
 (func $~lib/util/sort/COMPARATOR<i64>~anonymous|0 (type $i64_i64_=>_i32) (param $a i64) (param $b i64) (result i32)
  local.get $a
  local.get $b
  i64.gt_s
  local.get $a
  local.get $b
  i64.lt_s
  i32.sub
 )
 (func $~lib/typedarray/Int64Array#sort@varargs (type $i32_i32_=>_i32) (param $this i32) (param $comparator i32) (result i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   block $~lib/util/sort/COMPARATOR<i64>|inlined.0 (result i32)
    i32.const 1
    drop
    i32.const 8
    i32.const 4
    i32.le_u
    drop
    i32.const 9056
    br $~lib/util/sort/COMPARATOR<i64>|inlined.0
   end
   local.set $comparator
  end
  local.get $this
  local.get $comparator
  call $~lib/typedarray/Int64Array#sort
 )
 (func $std/typedarray/testArraySort<~lib/typedarray/Int64Array,i64>~anonymous|0 (type $i64_i64_=>_i32) (param $a i64) (param $b i64) (result i32)
  local.get $b
  local.get $a
  i64.gt_s
  local.get $b
  local.get $a
  i64.lt_s
  i32.sub
 )
 (func $~lib/util/sort/insertionSort<u64> (type $i32_i32_i32_i32_i32_=>_none) (param $ptr i32) (param $left i32) (param $right i32) (param $presorted i32) (param $comparator i32)
  (local $range i32)
  (local $i i32)
  (local $7 i32)
  (local $a i64)
  (local $b i64)
  (local $min i64)
  (local $max i64)
  (local $j i32)
  (local $13 i32)
  (local $14 i32)
  i32.const 0
  i32.const 1
  i32.ge_s
  drop
  local.get $right
  local.get $left
  i32.sub
  i32.const 1
  i32.add
  local.set $range
  local.get $left
  local.get $range
  i32.const 1
  i32.and
  local.get $presorted
  local.get $range
  local.get $presorted
  i32.sub
  i32.const 1
  i32.and
  i32.sub
  local.get $presorted
  i32.const 0
  i32.eq
  select
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $right
   i32.le_s
   local.set $7
   local.get $7
   if
    local.get $ptr
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    local.set $a
    local.get $ptr
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    i64.load $0 offset=8
    local.set $b
    local.get $b
    local.set $min
    local.get $a
    local.set $max
    local.get $a
    local.get $b
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i64_i64_=>_i32)
    i32.const 0
    i32.le_s
    if
     local.get $a
     local.set $min
     local.get $b
     local.set $max
    end
    local.get $i
    i32.const 1
    i32.sub
    local.set $j
    block $while-break|1
     loop $while-continue|1
      local.get $j
      local.get $left
      i32.ge_s
      local.set $13
      local.get $13
      if
       local.get $ptr
       local.get $j
       i32.const 3
       i32.shl
       i32.add
       i64.load $0
       local.set $a
       local.get $a
       local.get $max
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $i64_i64_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $j
        i32.const 3
        i32.shl
        i32.add
        local.get $a
        i64.store $0 offset=16
        local.get $j
        i32.const 1
        i32.sub
        local.set $j
       else
        br $while-break|1
       end
       br $while-continue|1
      end
     end
    end
    local.get $ptr
    local.get $j
    i32.const 3
    i32.shl
    i32.add
    local.get $max
    i64.store $0 offset=16
    block $while-break|2
     loop $while-continue|2
      local.get $j
      local.get $left
      i32.ge_s
      local.set $14
      local.get $14
      if
       local.get $ptr
       local.get $j
       i32.const 3
       i32.shl
       i32.add
       i64.load $0
       local.set $a
       local.get $a
       local.get $min
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $i64_i64_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $j
        i32.const 3
        i32.shl
        i32.add
        local.get $a
        i64.store $0 offset=8
        local.get $j
        i32.const 1
        i32.sub
        local.set $j
       else
        br $while-break|2
       end
       br $while-continue|2
      end
     end
    end
    local.get $ptr
    local.get $j
    i32.const 3
    i32.shl
    i32.add
    local.get $min
    i64.store $0 offset=8
    local.get $i
    i32.const 2
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/util/sort/extendRunRight<u64> (type $i32_i32_i32_i32_=>_i32) (param $ptr i32) (param $i i32) (param $right i32) (param $comparator i32) (result i32)
  (local $j i32)
  (local $5 i32)
  (local $k i32)
  (local $7 i32)
  (local $tmp i64)
  (local $9 i32)
  local.get $i
  local.get $right
  i32.eq
  if
   local.get $i
   return
  end
  local.get $i
  local.set $j
  local.get $ptr
  local.get $j
  i32.const 3
  i32.shl
  i32.add
  i64.load $0
  local.get $ptr
  local.get $j
  i32.const 1
  i32.add
  local.tee $j
  i32.const 3
  i32.shl
  i32.add
  i64.load $0
  i32.const 2
  global.set $~argumentsLength
  local.get $comparator
  i32.load $0
  call_indirect $0 (type $i64_i64_=>_i32)
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 3
     i32.shl
     i32.add
     i64.load $0 offset=8
     local.get $ptr
     local.get $j
     i32.const 3
     i32.shl
     i32.add
     i64.load $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i64_i64_=>_i32)
     i32.const 31
     i32.shr_u
    else
     i32.const 0
    end
    local.set $5
    local.get $5
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|0
    end
   end
   local.get $j
   local.set $k
   loop $while-continue|1
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     local.get $ptr
     local.get $i
     i32.const 3
     i32.shl
     i32.add
     i64.load $0
     local.set $tmp
     local.get $ptr
     local.get $i
     i32.const 3
     i32.shl
     i32.add
     local.get $ptr
     local.get $k
     i32.const 3
     i32.shl
     i32.add
     i64.load $0
     i64.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     local.get $ptr
     local.get $k
     i32.const 3
     i32.shl
     i32.add
     local.get $tmp
     i64.store $0
     local.get $k
     i32.const 1
     i32.sub
     local.set $k
     br $while-continue|1
    end
   end
  else
   loop $while-continue|2
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 3
     i32.shl
     i32.add
     i64.load $0 offset=8
     local.get $ptr
     local.get $j
     i32.const 3
     i32.shl
     i32.add
     i64.load $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i64_i64_=>_i32)
     i32.const 0
     i32.ge_s
    else
     i32.const 0
    end
    local.set $9
    local.get $9
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|2
    end
   end
  end
  local.get $j
 )
 (func $~lib/util/sort/mergeRuns<u64> (type $i32_i32_i32_i32_i32_i32_=>_none) (param $ptr i32) (param $l i32) (param $m i32) (param $r i32) (param $buffer i32) (param $comparator i32)
  (local $i i32)
  (local $j i32)
  (local $t i32)
  (local $9 i32)
  (local $10 i32)
  (local $k i32)
  (local $12 i32)
  (local $a i64)
  (local $b i64)
  local.get $m
  i32.const 1
  i32.sub
  local.set $m
  local.get $r
  local.get $m
  i32.add
  local.set $t
  local.get $m
  i32.const 1
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $l
   i32.gt_s
   local.set $9
   local.get $9
   if
    local.get $buffer
    local.get $i
    i32.const 1
    i32.sub
    i32.const 3
    i32.shl
    i32.add
    local.get $ptr
    local.get $i
    i32.const 1
    i32.sub
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    i64.store $0
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  local.get $m
  local.set $j
  loop $for-loop|1
   local.get $j
   local.get $r
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $buffer
    local.get $t
    local.get $j
    i32.sub
    i32.const 3
    i32.shl
    i32.add
    local.get $ptr
    local.get $j
    i32.const 3
    i32.shl
    i32.add
    i64.load $0 offset=8
    i64.store $0
    local.get $j
    i32.const 1
    i32.add
    local.set $j
    br $for-loop|1
   end
  end
  local.get $l
  local.set $k
  loop $for-loop|2
   local.get $k
   local.get $r
   i32.le_s
   local.set $12
   local.get $12
   if
    local.get $buffer
    local.get $j
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    local.set $a
    local.get $buffer
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    local.set $b
    local.get $a
    local.get $b
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i64_i64_=>_i32)
    i32.const 0
    i32.lt_s
    if
     local.get $ptr
     local.get $k
     i32.const 3
     i32.shl
     i32.add
     local.get $a
     i64.store $0
     local.get $j
     i32.const 1
     i32.sub
     local.set $j
    else
     local.get $ptr
     local.get $k
     i32.const 3
     i32.shl
     i32.add
     local.get $b
     i64.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
    end
    local.get $k
    i32.const 1
    i32.add
    local.set $k
    br $for-loop|2
   end
  end
 )
 (func $~lib/util/sort/SORT<u64> (type $i32_i32_i32_=>_none) (param $ptr i32) (param $len i32) (param $comparator i32)
  (local $3 i32)
  (local $a i64)
  (local $b i64)
  (local $c i32)
  (local $a|7 i64)
  (local $b|8 i64)
  (local $c|9 i32)
  (local $n i32)
  (local $lgPlus2 i32)
  (local $lgPlus2Size i32)
  (local $leftRunStartBuf i32)
  (local $leftRunEndBuf i32)
  (local $i i32)
  (local $16 i32)
  (local $buffer i32)
  (local $hi i32)
  (local $endA i32)
  (local $lenA i32)
  (local $21 i32)
  (local $22 i32)
  (local $top i32)
  (local $startA i32)
  (local $25 i32)
  (local $startB i32)
  (local $endB i32)
  (local $lenB i32)
  (local $29 i32)
  (local $30 i32)
  (local $k i32)
  (local $i|32 i32)
  (local $33 i32)
  (local $start i32)
  (local $i|35 i32)
  (local $36 i32)
  (local $start|37 i32)
  local.get $len
  i32.const 48
  i32.le_s
  if
   local.get $len
   i32.const 1
   i32.le_s
   if
    return
   end
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   block $break|0
    block $case1|0
     block $case0|0
      local.get $len
      local.set $3
      local.get $3
      i32.const 3
      i32.eq
      br_if $case0|0
      local.get $3
      i32.const 2
      i32.eq
      br_if $case1|0
      br $break|0
     end
     local.get $ptr
     i64.load $0
     local.set $a
     local.get $ptr
     i64.load $0 offset=8
     local.set $b
     local.get $a
     local.get $b
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i64_i64_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $c
     local.get $ptr
     local.get $b
     local.get $a
     local.get $c
     select
     i64.store $0
     local.get $a
     local.get $b
     local.get $c
     select
     local.set $a
     local.get $ptr
     i64.load $0 offset=16
     local.set $b
     local.get $a
     local.get $b
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i64_i64_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $c
     local.get $ptr
     local.get $b
     local.get $a
     local.get $c
     select
     i64.store $0 offset=8
     local.get $ptr
     local.get $a
     local.get $b
     local.get $c
     select
     i64.store $0 offset=16
    end
    local.get $ptr
    i64.load $0
    local.set $a|7
    local.get $ptr
    i64.load $0 offset=8
    local.set $b|8
    local.get $a|7
    local.get $b|8
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i64_i64_=>_i32)
    i32.const 0
    i32.gt_s
    local.set $c|9
    local.get $ptr
    local.get $b|8
    local.get $a|7
    local.get $c|9
    select
    i64.store $0
    local.get $ptr
    local.get $a|7
    local.get $b|8
    local.get $c|9
    select
    i64.store $0 offset=8
    return
   end
   local.get $ptr
   i32.const 0
   local.get $len
   i32.const 1
   i32.sub
   i32.const 0
   local.get $comparator
   call $~lib/util/sort/insertionSort<u64>
   return
  end
  local.get $len
  local.set $n
  i32.const 31
  local.get $n
  i32.clz
  i32.sub
  i32.const 2
  i32.add
  local.set $lgPlus2
  local.get $lgPlus2
  i32.const 2
  i32.shl
  local.set $lgPlus2Size
  local.get $lgPlus2Size
  i32.const 1
  i32.shl
  call $~lib/rt/stub/__alloc
  local.set $leftRunStartBuf
  local.get $leftRunStartBuf
  local.get $lgPlus2Size
  i32.add
  local.set $leftRunEndBuf
  i32.const 0
  local.set $i
  loop $for-loop|1
   local.get $i
   local.get $lgPlus2
   i32.lt_u
   local.set $16
   local.get $16
   if
    local.get $leftRunStartBuf
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.const -1
    i32.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|1
   end
  end
  local.get $len
  i32.const 3
  i32.shl
  call $~lib/rt/stub/__alloc
  local.set $buffer
  local.get $len
  i32.const 1
  i32.sub
  local.set $hi
  local.get $ptr
  i32.const 0
  local.get $hi
  local.get $comparator
  call $~lib/util/sort/extendRunRight<u64>
  local.set $endA
  local.get $endA
  i32.const 1
  i32.add
  local.set $lenA
  local.get $lenA
  i32.const 32
  i32.lt_s
  if
   local.get $hi
   local.tee $21
   i32.const 32
   i32.const 1
   i32.sub
   local.tee $22
   local.get $21
   local.get $22
   i32.lt_s
   select
   local.set $endA
   local.get $ptr
   i32.const 0
   local.get $endA
   local.get $lenA
   local.get $comparator
   call $~lib/util/sort/insertionSort<u64>
  end
  i32.const 0
  local.set $top
  i32.const 0
  local.set $startA
  loop $while-continue|2
   local.get $endA
   local.get $hi
   i32.lt_s
   local.set $25
   local.get $25
   if
    local.get $endA
    i32.const 1
    i32.add
    local.set $startB
    local.get $ptr
    local.get $startB
    local.get $hi
    local.get $comparator
    call $~lib/util/sort/extendRunRight<u64>
    local.set $endB
    local.get $endB
    local.get $startB
    i32.sub
    i32.const 1
    i32.add
    local.set $lenB
    local.get $lenB
    i32.const 32
    i32.lt_s
    if
     local.get $hi
     local.tee $29
     local.get $startB
     i32.const 32
     i32.add
     i32.const 1
     i32.sub
     local.tee $30
     local.get $29
     local.get $30
     i32.lt_s
     select
     local.set $endB
     local.get $ptr
     local.get $startB
     local.get $endB
     local.get $lenB
     local.get $comparator
     call $~lib/util/sort/insertionSort<u64>
    end
    i32.const 0
    local.get $hi
    local.get $startA
    local.get $startB
    local.get $endB
    call $~lib/util/sort/nodePower
    local.set $k
    local.get $top
    local.set $i|32
    loop $for-loop|3
     local.get $i|32
     local.get $k
     i32.gt_u
     local.set $33
     local.get $33
     if
      local.get $leftRunStartBuf
      local.get $i|32
      i32.const 2
      i32.shl
      i32.add
      i32.load $0
      local.set $start
      local.get $start
      i32.const -1
      i32.ne
      if
       local.get $ptr
       local.get $start
       local.get $leftRunEndBuf
       local.get $i|32
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       i32.const 1
       i32.add
       local.get $endA
       local.get $buffer
       local.get $comparator
       call $~lib/util/sort/mergeRuns<u64>
       local.get $start
       local.set $startA
       local.get $leftRunStartBuf
       local.get $i|32
       i32.const 2
       i32.shl
       i32.add
       i32.const -1
       i32.store $0
      end
      local.get $i|32
      i32.const 1
      i32.sub
      local.set $i|32
      br $for-loop|3
     end
    end
    local.get $leftRunStartBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $startA
    i32.store $0
    local.get $leftRunEndBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $endA
    i32.store $0
    local.get $startB
    local.set $startA
    local.get $endB
    local.set $endA
    local.get $k
    local.set $top
    br $while-continue|2
   end
  end
  local.get $top
  local.set $i|35
  loop $for-loop|4
   local.get $i|35
   i32.const 0
   i32.ne
   local.set $36
   local.get $36
   if
    local.get $leftRunStartBuf
    local.get $i|35
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $start|37
    local.get $start|37
    i32.const -1
    i32.ne
    if
     local.get $ptr
     local.get $start|37
     local.get $leftRunEndBuf
     local.get $i|35
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 1
     i32.add
     local.get $hi
     local.get $buffer
     local.get $comparator
     call $~lib/util/sort/mergeRuns<u64>
    end
    local.get $i|35
    i32.const 1
    i32.sub
    local.set $i|35
    br $for-loop|4
   end
  end
  local.get $buffer
  call $~lib/rt/stub/__free
  local.get $leftRunStartBuf
  call $~lib/rt/stub/__free
 )
 (func $~lib/typedarray/Uint64Array#sort (type $i32_i32_=>_i32) (param $this i32) (param $comparator i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Uint64Array#get:length
  local.get $comparator
  call $~lib/util/sort/SORT<u64>
  local.get $this
 )
 (func $~lib/util/sort/COMPARATOR<u64>~anonymous|0 (type $i64_i64_=>_i32) (param $a i64) (param $b i64) (result i32)
  local.get $a
  local.get $b
  i64.gt_u
  local.get $a
  local.get $b
  i64.lt_u
  i32.sub
 )
 (func $~lib/typedarray/Uint64Array#sort@varargs (type $i32_i32_=>_i32) (param $this i32) (param $comparator i32) (result i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   block $~lib/util/sort/COMPARATOR<u64>|inlined.0 (result i32)
    i32.const 1
    drop
    i32.const 0
    drop
    i32.const 9120
    br $~lib/util/sort/COMPARATOR<u64>|inlined.0
   end
   local.set $comparator
  end
  local.get $this
  local.get $comparator
  call $~lib/typedarray/Uint64Array#sort
 )
 (func $std/typedarray/testArraySort<~lib/typedarray/Uint64Array,u64>~anonymous|0 (type $i64_i64_=>_i32) (param $a i64) (param $b i64) (result i32)
  local.get $b
  local.get $a
  i64.gt_u
  local.get $b
  local.get $a
  i64.lt_u
  i32.sub
 )
 (func $~lib/util/sort/insertionSort<f32> (type $i32_i32_i32_i32_i32_=>_none) (param $ptr i32) (param $left i32) (param $right i32) (param $presorted i32) (param $comparator i32)
  (local $range i32)
  (local $i i32)
  (local $7 i32)
  (local $a f32)
  (local $b f32)
  (local $min f32)
  (local $max f32)
  (local $j i32)
  (local $13 i32)
  (local $14 i32)
  i32.const 0
  i32.const 1
  i32.ge_s
  drop
  local.get $right
  local.get $left
  i32.sub
  i32.const 1
  i32.add
  local.set $range
  local.get $left
  local.get $range
  i32.const 1
  i32.and
  local.get $presorted
  local.get $range
  local.get $presorted
  i32.sub
  i32.const 1
  i32.and
  i32.sub
  local.get $presorted
  i32.const 0
  i32.eq
  select
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $right
   i32.le_s
   local.set $7
   local.get $7
   if
    local.get $ptr
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    f32.load $0
    local.set $a
    local.get $ptr
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    f32.load $0 offset=4
    local.set $b
    local.get $b
    local.set $min
    local.get $a
    local.set $max
    local.get $a
    local.get $b
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $f32_f32_=>_i32)
    i32.const 0
    i32.le_s
    if
     local.get $a
     local.set $min
     local.get $b
     local.set $max
    end
    local.get $i
    i32.const 1
    i32.sub
    local.set $j
    block $while-break|1
     loop $while-continue|1
      local.get $j
      local.get $left
      i32.ge_s
      local.set $13
      local.get $13
      if
       local.get $ptr
       local.get $j
       i32.const 2
       i32.shl
       i32.add
       f32.load $0
       local.set $a
       local.get $a
       local.get $max
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $f32_f32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $j
        i32.const 2
        i32.shl
        i32.add
        local.get $a
        f32.store $0 offset=8
        local.get $j
        i32.const 1
        i32.sub
        local.set $j
       else
        br $while-break|1
       end
       br $while-continue|1
      end
     end
    end
    local.get $ptr
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    local.get $max
    f32.store $0 offset=8
    block $while-break|2
     loop $while-continue|2
      local.get $j
      local.get $left
      i32.ge_s
      local.set $14
      local.get $14
      if
       local.get $ptr
       local.get $j
       i32.const 2
       i32.shl
       i32.add
       f32.load $0
       local.set $a
       local.get $a
       local.get $min
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $f32_f32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $j
        i32.const 2
        i32.shl
        i32.add
        local.get $a
        f32.store $0 offset=4
        local.get $j
        i32.const 1
        i32.sub
        local.set $j
       else
        br $while-break|2
       end
       br $while-continue|2
      end
     end
    end
    local.get $ptr
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    local.get $min
    f32.store $0 offset=4
    local.get $i
    i32.const 2
    i32.add
    local.set $i
    br $for-loop|0
   end
  end
 )
 (func $~lib/util/sort/extendRunRight<f32> (type $i32_i32_i32_i32_=>_i32) (param $ptr i32) (param $i i32) (param $right i32) (param $comparator i32) (result i32)
  (local $j i32)
  (local $5 i32)
  (local $k i32)
  (local $7 i32)
  (local $tmp f32)
  (local $9 i32)
  local.get $i
  local.get $right
  i32.eq
  if
   local.get $i
   return
  end
  local.get $i
  local.set $j
  local.get $ptr
  local.get $j
  i32.const 2
  i32.shl
  i32.add
  f32.load $0
  local.get $ptr
  local.get $j
  i32.const 1
  i32.add
  local.tee $j
  i32.const 2
  i32.shl
  i32.add
  f32.load $0
  i32.const 2
  global.set $~argumentsLength
  local.get $comparator
  i32.load $0
  call_indirect $0 (type $f32_f32_=>_i32)
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     f32.load $0 offset=4
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     f32.load $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $f32_f32_=>_i32)
     i32.const 31
     i32.shr_u
    else
     i32.const 0
    end
    local.set $5
    local.get $5
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|0
    end
   end
   local.get $j
   local.set $k
   loop $while-continue|1
    local.get $i
    local.get $k
    i32.lt_s
    local.set $7
    local.get $7
    if
     local.get $ptr
     local.get $i
     i32.const 2
     i32.shl
     i32.add
     f32.load $0
     local.set $tmp
     local.get $ptr
     local.get $i
     i32.const 2
     i32.shl
     i32.add
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     f32.load $0
     f32.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     local.get $tmp
     f32.store $0
     local.get $k
     i32.const 1
     i32.sub
     local.set $k
     br $while-continue|1
    end
   end
  else
   loop $while-continue|2
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     f32.load $0 offset=4
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     f32.load $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $f32_f32_=>_i32)
     i32.const 0
     i32.ge_s
    else
     i32.const 0
    end
    local.set $9
    local.get $9
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|2
    end
   end
  end
  local.get $j
 )
 (func $~lib/util/sort/mergeRuns<f32> (type $i32_i32_i32_i32_i32_i32_=>_none) (param $ptr i32) (param $l i32) (param $m i32) (param $r i32) (param $buffer i32) (param $comparator i32)
  (local $i i32)
  (local $j i32)
  (local $t i32)
  (local $9 i32)
  (local $10 i32)
  (local $k i32)
  (local $12 i32)
  (local $a f32)
  (local $b f32)
  local.get $m
  i32.const 1
  i32.sub
  local.set $m
  local.get $r
  local.get $m
  i32.add
  local.set $t
  local.get $m
  i32.const 1
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $l
   i32.gt_s
   local.set $9
   local.get $9
   if
    local.get $buffer
    local.get $i
    i32.const 1
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    local.get $ptr
    local.get $i
    i32.const 1
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    f32.load $0
    f32.store $0
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  local.get $m
  local.set $j
  loop $for-loop|1
   local.get $j
   local.get $r
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $buffer
    local.get $t
    local.get $j
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    local.get $ptr
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    f32.load $0 offset=4
    f32.store $0
    local.get $j
    i32.const 1
    i32.add
    local.set $j
    br $for-loop|1
   end
  end
  local.get $l
  local.set $k
  loop $for-loop|2
   local.get $k
   local.get $r
   i32.le_s
   local.set $12
   local.get $12
   if
    local.get $buffer
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    f32.load $0
    local.set $a
    local.get $buffer
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    f32.load $0
    local.set $b
    local.get $a
    local.get $b
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $f32_f32_=>_i32)
    i32.const 0
    i32.lt_s
    if
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     local.get $a
     f32.store $0
     local.get $j
     i32.const 1
     i32.sub
     local.set $j
    else
     local.get $ptr
     local.get $k
     i32.const 2
     i32.shl
     i32.add
     local.get $b
     f32.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
    end
    local.get $k
    i32.const 1
    i32.add
    local.set $k
    br $for-loop|2
   end
  end
 )
 (func $~lib/util/sort/SORT<f32> (type $i32_i32_i32_=>_none) (param $ptr i32) (param $len i32) (param $comparator i32)
  (local $3 i32)
  (local $a f32)
  (local $b f32)
  (local $c i32)
  (local $a|7 f32)
  (local $b|8 f32)
  (local $c|9 i32)
  (local $n i32)
  (local $lgPlus2 i32)
  (local $lgPlus2Size i32)
  (local $leftRunStartBuf i32)
  (local $leftRunEndBuf i32)
  (local $i i32)
  (local $16 i32)
  (local $buffer i32)
  (local $hi i32)
  (local $endA i32)
  (local $lenA i32)
  (local $21 i32)
  (local $22 i32)
  (local $top i32)
  (local $startA i32)
  (local $25 i32)
  (local $startB i32)
  (local $endB i32)
  (local $lenB i32)
  (local $29 i32)
  (local $30 i32)
  (local $k i32)
  (local $i|32 i32)
  (local $33 i32)
  (local $start i32)
  (local $i|35 i32)
  (local $36 i32)
  (local $start|37 i32)
  local.get $len
  i32.const 48
  i32.le_s
  if
   local.get $len
   i32.const 1
   i32.le_s
   if
    return
   end
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   block $break|0
    block $case1|0
     block $case0|0
      local.get $len
      local.set $3
      local.get $3
      i32.const 3
      i32.eq
      br_if $case0|0
      local.get $3
      i32.const 2
      i32.eq
      br_if $case1|0
      br $break|0
     end
     local.get $ptr
     f32.load $0
     local.set $a
     local.get $ptr
     f32.load $0 offset=4
     local.set $b
     local.get $a
     local.get $b
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $f32_f32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $c
     local.get $ptr
     local.get $b
     local.get $a
     local.get $c
     select
     f32.store $0
     local.get $a
     local.get $b
     local.get $c
     select
     local.set $a
     local.get $ptr
     f32.load $0 offset=8
     local.set $b
     local.get $a
     local.get $b
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $f32_f32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $c
     local.get $ptr
     local.get $b
     local.get $a
     local.get $c
     select
     f32.store $0 offset=4
     local.get $ptr
     local.get $a
     local.get $b
     local.get $c
     select
     f32.store $0 offset=8
    end
    local.get $ptr
    f32.load $0
    local.set $a|7
    local.get $ptr
    f32.load $0 offset=4
    local.set $b|8
    local.get $a|7
    local.get $b|8
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $f32_f32_=>_i32)
    i32.const 0
    i32.gt_s
    local.set $c|9
    local.get $ptr
    local.get $b|8
    local.get $a|7
    local.get $c|9
    select
    f32.store $0
    local.get $ptr
    local.get $a|7
    local.get $b|8
    local.get $c|9
    select
    f32.store $0 offset=4
    return
   end
   local.get $ptr
   i32.const 0
   local.get $len
   i32.const 1
   i32.sub
   i32.const 0
   local.get $comparator
   call $~lib/util/sort/insertionSort<f32>
   return
  end
  local.get $len
  local.set $n
  i32.const 31
  local.get $n
  i32.clz
  i32.sub
  i32.const 2
  i32.add
  local.set $lgPlus2
  local.get $lgPlus2
  i32.const 2
  i32.shl
  local.set $lgPlus2Size
  local.get $lgPlus2Size
  i32.const 1
  i32.shl
  call $~lib/rt/stub/__alloc
  local.set $leftRunStartBuf
  local.get $leftRunStartBuf
  local.get $lgPlus2Size
  i32.add
  local.set $leftRunEndBuf
  i32.const 0
  local.set $i
  loop $for-loop|1
   local.get $i
   local.get $lgPlus2
   i32.lt_u
   local.set $16
   local.get $16
   if
    local.get $leftRunStartBuf
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.const -1
    i32.store $0
    local.get $i
    i32.const 1
    i32.add
    local.set $i
    br $for-loop|1
   end
  end
  local.get $len
  i32.const 2
  i32.shl
  call $~lib/rt/stub/__alloc
  local.set $buffer
  local.get $len
  i32.const 1
  i32.sub
  local.set $hi
  local.get $ptr
  i32.const 0
  local.get $hi
  local.get $comparator
  call $~lib/util/sort/extendRunRight<f32>
  local.set $endA
  local.get $endA
  i32.const 1
  i32.add
  local.set $lenA
  local.get $lenA
  i32.const 32
  i32.lt_s
  if
   local.get $hi
   local.tee $21
   i32.const 32
   i32.const 1
   i32.sub
   local.tee $22
   local.get $21
   local.get $22
   i32.lt_s
   select
   local.set $endA
   local.get $ptr
   i32.const 0
   local.get $endA
   local.get $lenA
   local.get $comparator
   call $~lib/util/sort/insertionSort<f32>
  end
  i32.const 0
  local.set $top
  i32.const 0
  local.set $startA
  loop $while-continue|2
   local.get $endA
   local.get $hi
   i32.lt_s
   local.set $25
   local.get $25
   if
    local.get $endA
    i32.const 1
    i32.add
    local.set $startB
    local.get $ptr
    local.get $startB
    local.get $hi
    local.get $comparator
    call $~lib/util/sort/extendRunRight<f32>
    local.set $endB
    local.get $endB
    local.get $startB
    i32.sub
    i32.const 1
    i32.add
    local.set $lenB
    local.get $lenB
    i32.const 32
    i32.lt_s
    if
     local.get $hi
     local.tee $29
     local.get $startB
     i32.const 32
     i32.add
     i32.const 1
     i32.sub
     local.tee $30
     local.get $29
     local.get $30
     i32.lt_s
     select
     local.set $endB
     local.get $ptr
     local.get $startB
     local.get $endB
     local.get $lenB
     local.get $comparator
     call $~lib/util/sort/insertionSort<f32>
    end
    i32.const 0
    local.get $hi
    local.get $startA
    local.get $startB
    local.get $endB
    call $~lib/util/sort/nodePower
    local.set $k
    local.get $top
    local.set $i|32
    loop $for-loop|3
     local.get $i|32
     local.get $k
     i32.gt_u
     local.set $33
     local.get $33
     if
      local.get $leftRunStartBuf
      local.get $i|32
      i32.const 2
      i32.shl
      i32.add
      i32.load $0
      local.set $start
      local.get $start
      i32.const -1
      i32.ne
      if
       local.get $ptr
       local.get $start
       local.get $leftRunEndBuf
       local.get $i|32
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       i32.const 1
       i32.add
       local.get $endA
       local.get $buffer
       local.get $comparator
       call $~lib/util/sort/mergeRuns<f32>
       local.get $start
       local.set $startA
       local.get $leftRunStartBuf
       local.get $i|32
       i32.const 2
       i32.shl
       i32.add
       i32.const -1
       i32.store $0
      end
      local.get $i|32
      i32.const 1
      i32.sub
      local.set $i|32
      br $for-loop|3
     end
    end
    local.get $leftRunStartBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $startA
    i32.store $0
    local.get $leftRunEndBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $endA
    i32.store $0
    local.get $startB
    local.set $startA
    local.get $endB
    local.set $endA
    local.get $k
    local.set $top
    br $while-continue|2
   end
  end
  local.get $top
  local.set $i|35
  loop $for-loop|4
   local.get $i|35
   i32.const 0
   i32.ne
   local.set $36
   local.get $36
   if
    local.get $leftRunStartBuf
    local.get $i|35
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $start|37
    local.get $start|37
    i32.const -1
    i32.ne
    if
     local.get $ptr
     local.get $start|37
     local.get $leftRunEndBuf
     local.get $i|35
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 1
     i32.add
     local.get $hi
     local.get $buffer
     local.get $comparator
     call $~lib/util/sort/mergeRuns<f32>
    end
    local.get $i|35
    i32.const 1
    i32.sub
    local.set $i|35
    br $for-loop|4
   end
  end
  local.get $buffer
  call $~lib/rt/stub/__free
  local.get $leftRunStartBuf
  call $~lib/rt/stub/__free
 )
 (func $~lib/typedarray/Float32Array#sort (type $i32_i32_=>_i32) (param $this i32) (param $comparator i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Float32Array#get:length
  local.get $comparator
  call $~lib/util/sort/SORT<f32>
  local.get $this
 )
 (func $~lib/util/sort/COMPARATOR<f32>~anonymous|0 (type $f32_f32_=>_i32) (param $a f32) (param $b f32) (result i32)
  (local $ia i32)
  (local $ib i32)
  local.get $a
  i32.reinterpret_f32
  local.set $ia
  local.get $b
  i32.reinterpret_f32
  local.set $ib
  local.get $ia
  local.get $ia
  i32.const 31
  i32.shr_s
  i32.const 1
  i32.shr_u
  i32.xor
  local.set $ia
  local.get $ib
  local.get $ib
  i32.const 31
  i32.shr_s
  i32.const 1
  i32.shr_u
  i32.xor
  local.set $ib
  local.get $ia
  local.get $ib
  i32.gt_s
  local.get $ia
  local.get $ib
  i32.lt_s
  i32.sub
 )
 (func $~lib/typedarray/Float32Array#sort@varargs (type $i32_i32_=>_i32) (param $this i32) (param $comparator i32) (result i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   block $~lib/util/sort/COMPARATOR<f32>|inlined.0 (result i32)
    i32.const 0
    drop
    i32.const 1
    drop
    i32.const 4
    i32.const 4
    i32.eq
    drop
    i32.const 9184
    br $~lib/util/sort/COMPARATOR<f32>|inlined.0
   end
   local.set $comparator
  end
  local.get $this
  local.get $comparator
  call $~lib/typedarray/Float32Array#sort
 )
 (func $std/typedarray/testArraySort<~lib/typedarray/Float32Array,f32>~anonymous|0 (type $f32_f32_=>_i32) (param $a f32) (param $b f32) (result i32)
  local.get $b
  local.get $a
  f32.gt
  local.get $b
  local.get $a
  f32.lt
  i32.sub
 )
 (func $std/typedarray/testArraySort<~lib/typedarray/Float64Array,f64>~anonymous|0 (type $f64_f64_=>_i32) (param $a f64) (param $b f64) (result i32)
  local.get $b
  local.get $a
  f64.gt
  local.get $b
  local.get $a
  f64.lt
  i32.sub
 )
 (func $~lib/rt/stub/__collect (type $none_=>_none)
  nop
 )
 (func $start:std/typedarray (type $none_=>_none)
  (local $len i32)
  (local $i8a i32)
  (local $u8a i32)
  (local $c8a i32)
  (local $i16a i32)
  (local $u16a i32)
  (local $i32a i32)
  (local $u32a i32)
  (local $i64a i32)
  (local $u64a i32)
  (local $f32a i32)
  (local $f64a i32)
  (local $len|12 i32)
  (local $i8a|13 i32)
  (local $u8a|14 i32)
  (local $c8a|15 i32)
  (local $i16a|16 i32)
  (local $u16a|17 i32)
  (local $i32a|18 i32)
  (local $u32a|19 i32)
  (local $i64a|20 i32)
  (local $u64a|21 i32)
  (local $f32a|22 i32)
  (local $f64a|23 i32)
  (local $arr i32)
  (local $af64 i32)
  (local $clampedArr i32)
  (local $arr8 i32)
  (local $28 i32)
  (local $29 i32)
  (local $a i32)
  (local $b i32)
  (local $i i32)
  (local $len|33 i32)
  (local $34 i32)
  (local $35 i32)
  (local $36 i32)
  (local $a|37 i32)
  (local $b|38 i32)
  (local $i|39 i32)
  (local $len|40 i32)
  (local $41 i32)
  (local $42 i32)
  (local $43 i32)
  (local $a|44 i32)
  (local $b|45 i32)
  (local $i|46 i32)
  (local $len|47 i32)
  (local $48 i32)
  (local $49 i32)
  (local $50 i32)
  (local $a|51 i32)
  (local $b|52 i32)
  (local $i|53 i32)
  (local $len|54 i32)
  (local $55 i32)
  (local $56 i32)
  (local $57 i32)
  (local $a|58 i32)
  (local $b|59 i32)
  (local $i|60 i32)
  (local $len|61 i32)
  (local $62 i32)
  (local $sub8 i32)
  (local $64 i32)
  (local $65 i32)
  (local $a|66 i32)
  (local $b|67 i32)
  (local $i|68 i32)
  (local $len|69 i32)
  (local $70 i32)
  (local $71 i32)
  (local $72 i32)
  (local $a|73 i32)
  (local $b|74 i32)
  (local $i|75 i32)
  (local $len|76 i32)
  (local $77 i32)
  (local $arr32 i32)
  (local $79 i32)
  (local $80 i32)
  (local $a|81 i32)
  (local $b|82 i32)
  (local $i|83 i32)
  (local $len|84 i32)
  (local $85 i32)
  (local $86 i32)
  (local $87 i32)
  (local $a|88 i32)
  (local $b|89 i32)
  (local $i|90 i32)
  (local $len|91 i32)
  (local $92 i32)
  (local $93 i32)
  (local $94 i32)
  (local $a|95 i32)
  (local $b|96 i32)
  (local $i|97 i32)
  (local $len|98 i32)
  (local $99 i32)
  (local $100 i32)
  (local $101 i32)
  (local $a|102 i32)
  (local $b|103 i32)
  (local $i|104 i32)
  (local $len|105 i32)
  (local $106 i32)
  (local $107 i32)
  (local $108 i32)
  (local $a|109 i32)
  (local $b|110 i32)
  (local $i|111 i32)
  (local $len|112 i32)
  (local $113 i32)
  (local $sub32 i32)
  (local $115 i32)
  (local $116 i32)
  (local $a|117 i32)
  (local $b|118 i32)
  (local $i|119 i32)
  (local $len|120 i32)
  (local $121 i32)
  (local $122 i32)
  (local $123 i32)
  (local $a|124 i32)
  (local $b|125 i32)
  (local $i|126 i32)
  (local $len|127 i32)
  (local $128 i32)
  (local $multisubarr i32)
  (local $multisubarr1 i32)
  (local $multisubarr2 i32)
  (local $multisubarr3 i32)
  (local $cwAr i32)
  (local $copy i32)
  (local $135 i32)
  (local $136 i32)
  (local $a|137 i32)
  (local $b|138 i32)
  (local $i|139 i32)
  (local $len|140 i32)
  (local $141 i32)
  (local $142 i32)
  (local $143 i32)
  (local $a|144 i32)
  (local $b|145 i32)
  (local $i|146 i32)
  (local $len|147 i32)
  (local $148 i32)
  (local $149 i32)
  (local $150 i32)
  (local $a|151 i32)
  (local $b|152 i32)
  (local $i|153 i32)
  (local $len|154 i32)
  (local $155 i32)
  (local $156 i32)
  (local $157 i32)
  (local $a|158 i32)
  (local $b|159 i32)
  (local $i|160 i32)
  (local $len|161 i32)
  (local $162 i32)
  (local $163 i32)
  (local $164 i32)
  (local $a|165 i32)
  (local $b|166 i32)
  (local $i|167 i32)
  (local $len|168 i32)
  (local $169 i32)
  (local $170 i32)
  (local $171 i32)
  (local $a|172 i32)
  (local $b|173 i32)
  (local $i|174 i32)
  (local $len|175 i32)
  (local $176 i32)
  (local $177 i32)
  (local $178 i32)
  (local $a|179 i32)
  (local $b|180 i32)
  (local $i|181 i32)
  (local $len|182 i32)
  (local $183 i32)
  (local $184 i32)
  (local $185 i32)
  (local $a|186 i32)
  (local $b|187 i32)
  (local $i|188 i32)
  (local $len|189 i32)
  (local $190 i32)
  (local $191 i32)
  (local $192 i32)
  (local $a|193 i32)
  (local $b|194 i32)
  (local $i|195 i32)
  (local $len|196 i32)
  (local $197 i32)
  (local $198 i32)
  (local $199 i32)
  (local $a|200 i32)
  (local $b|201 i32)
  (local $i|202 i32)
  (local $len|203 i32)
  (local $204 i32)
  (local $205 i32)
  (local $206 i32)
  (local $a|207 i32)
  (local $b|208 i32)
  (local $i|209 i32)
  (local $len|210 i32)
  (local $211 i32)
  (local $212 i32)
  (local $213 i32)
  (local $a|214 i32)
  (local $b|215 i32)
  (local $i|216 i32)
  (local $len|217 i32)
  (local $218 i32)
  (local $arr|219 i32)
  (local $sub i32)
  (local $sliced i32)
  (local $subsliced i32)
  (local $copy|223 i32)
  (local $array i32)
  (local $result i32)
  (local $array|226 i32)
  (local $result|227 i32)
  (local $array|228 i32)
  (local $result|229 i32)
  (local $array|230 i32)
  (local $result|231 i32)
  (local $array|232 i32)
  (local $result|233 i32)
  (local $array|234 i32)
  (local $result|235 i32)
  (local $array|236 i32)
  (local $result|237 i32)
  (local $array|238 i32)
  (local $result|239 i64)
  (local $array|240 i32)
  (local $result|241 i64)
  (local $array|242 i32)
  (local $result|243 f32)
  (local $array|244 i32)
  (local $result|245 f64)
  (local $array|246 i32)
  (local $array|247 i32)
  (local $array|248 i32)
  (local $array|249 i32)
  (local $array|250 i32)
  (local $array|251 i32)
  (local $array|252 i32)
  (local $array|253 i32)
  (local $array|254 i32)
  (local $array|255 i32)
  (local $array|256 i32)
  (local $array|257 i32)
  (local $result|258 i32)
  (local $array|259 i32)
  (local $result|260 i32)
  (local $array|261 i32)
  (local $result|262 i32)
  (local $array|263 i32)
  (local $result|264 i32)
  (local $array|265 i32)
  (local $result|266 i32)
  (local $array|267 i32)
  (local $result|268 i32)
  (local $array|269 i32)
  (local $result|270 i32)
  (local $array|271 i32)
  (local $result|272 i64)
  (local $array|273 i32)
  (local $result|274 i64)
  (local $array|275 i32)
  (local $result|276 f32)
  (local $array|277 i32)
  (local $result|278 f64)
  (local $source i32)
  (local $result|280 i32)
  (local $source|281 i32)
  (local $result|282 i32)
  (local $source|283 i32)
  (local $result|284 i32)
  (local $source|285 i32)
  (local $result|286 i32)
  (local $source|287 i32)
  (local $result|288 i32)
  (local $source|289 i32)
  (local $result|290 i32)
  (local $source|291 i32)
  (local $result|292 i32)
  (local $source|293 i32)
  (local $result|294 i32)
  (local $source|295 i32)
  (local $result|296 i32)
  (local $source|297 i32)
  (local $result|298 i32)
  (local $source|299 i32)
  (local $result|300 i32)
  (local $source|301 i32)
  (local $result|302 i32)
  (local $source|303 i32)
  (local $result|304 i32)
  (local $source|305 i32)
  (local $result|306 i32)
  (local $source|307 i32)
  (local $result|308 i32)
  (local $source|309 i32)
  (local $result|310 i32)
  (local $source|311 i32)
  (local $result|312 i32)
  (local $source|313 i32)
  (local $result|314 i32)
  (local $source|315 i32)
  (local $result|316 i32)
  (local $source|317 i32)
  (local $result|318 i32)
  (local $source|319 i32)
  (local $result|320 i32)
  (local $source|321 i32)
  (local $result|322 i32)
  (local $source|323 i32)
  (local $result|324 i32)
  (local $failResult i32)
  (local $source|326 i32)
  (local $result|327 i32)
  (local $failResult|328 i32)
  (local $source|329 i32)
  (local $result|330 i32)
  (local $failResult|331 i32)
  (local $source|332 i32)
  (local $result|333 i32)
  (local $failResult|334 i32)
  (local $source|335 i32)
  (local $result|336 i32)
  (local $failResult|337 i32)
  (local $source|338 i32)
  (local $result|339 i32)
  (local $failResult|340 i32)
  (local $source|341 i32)
  (local $result|342 i32)
  (local $failResult|343 i32)
  (local $source|344 i32)
  (local $result|345 i32)
  (local $failResult|346 i32)
  (local $source|347 i32)
  (local $result|348 i32)
  (local $failResult|349 i32)
  (local $source|350 i32)
  (local $result|351 i32)
  (local $failResult|352 i32)
  (local $source|353 i32)
  (local $result|354 i32)
  (local $failResult|355 i32)
  (local $source|356 i32)
  (local $result|357 i32)
  (local $failResult|358 i32)
  (local $source|359 i32)
  (local $result|360 i32)
  (local $failResult|361 i32)
  (local $source|362 i32)
  (local $result|363 i32)
  (local $failResult|364 i32)
  (local $source|365 i32)
  (local $result|366 i32)
  (local $failResult|367 i32)
  (local $source|368 i32)
  (local $result|369 i32)
  (local $failResult|370 i32)
  (local $source|371 i32)
  (local $result|372 i32)
  (local $failResult|373 i32)
  (local $source|374 i32)
  (local $result|375 i32)
  (local $failResult|376 i32)
  (local $source|377 i32)
  (local $result|378 i32)
  (local $failResult|379 i32)
  (local $source|380 i32)
  (local $result|381 i32)
  (local $failResult|382 i32)
  (local $source|383 i32)
  (local $result|384 i32)
  (local $failResult|385 i32)
  (local $source|386 i32)
  (local $result|387 i32)
  (local $failResult|388 i32)
  (local $source|389 i32)
  (local $result|390 i32)
  (local $failResult|391 i32)
  (local $source|392 i32)
  (local $result|393 i32)
  (local $failResult|394 i32)
  (local $source|395 i32)
  (local $result|396 i32)
  (local $failResult|397 i32)
  (local $source|398 i32)
  (local $result|399 i32)
  (local $failResult|400 i32)
  (local $source|401 i32)
  (local $result|402 i32)
  (local $failResult|403 i32)
  (local $source|404 i32)
  (local $result|405 i32)
  (local $failResult|406 i32)
  (local $source|407 i32)
  (local $result|408 i32)
  (local $failResult|409 i32)
  (local $source|410 i32)
  (local $result|411 i32)
  (local $failResult|412 i32)
  (local $source|413 i32)
  (local $result|414 i32)
  (local $failResult|415 i32)
  (local $source|416 i32)
  (local $result|417 i32)
  (local $failResult|418 i32)
  (local $source|419 i32)
  (local $result|420 i32)
  (local $failResult|421 i32)
  (local $source|422 i32)
  (local $result|423 i32)
  (local $failResult|424 i32)
  (local $source|425 i32)
  (local $result|426 i32)
  (local $failResult|427 i32)
  (local $source|428 i32)
  (local $result|429 i32)
  (local $failResult|430 i32)
  (local $source|431 i32)
  (local $result|432 i32)
  (local $failResult|433 i32)
  (local $source|434 i32)
  (local $result|435 i32)
  (local $failResult|436 i32)
  (local $source|437 i32)
  (local $result|438 i32)
  (local $failResult|439 i32)
  (local $source|440 i32)
  (local $result|441 i32)
  (local $failResult|442 i32)
  (local $source|443 i32)
  (local $result|444 i32)
  (local $failResult|445 i32)
  (local $source|446 i32)
  (local $result|447 i32)
  (local $failResult|448 i32)
  (local $source|449 i32)
  (local $result|450 i32)
  (local $failResult|451 i32)
  (local $source|452 i32)
  (local $result|453 i32)
  (local $failResult|454 i32)
  (local $455 i32)
  (local $456 i32)
  (local $array|457 i32)
  (local $array|458 i32)
  (local $array|459 i32)
  (local $array|460 i32)
  (local $array|461 i32)
  (local $array|462 i32)
  (local $array|463 i32)
  (local $array|464 i32)
  (local $array|465 i32)
  (local $array|466 i32)
  (local $array|467 i32)
  (local $468 i32)
  (local $469 i32)
  (local $values i32)
  (local $length i32)
  (local $array|472 i32)
  (local $arrayWithOffset i32)
  (local $i|474 i32)
  (local $475 i32)
  (local $i|476 i32)
  (local $477 i32)
  (local $reversedSlice i32)
  (local $values|479 i32)
  (local $length|480 i32)
  (local $array|481 i32)
  (local $arrayWithOffset|482 i32)
  (local $i|483 i32)
  (local $484 i32)
  (local $i|485 i32)
  (local $486 i32)
  (local $reversedSlice|487 i32)
  (local $values|488 i32)
  (local $length|489 i32)
  (local $array|490 i32)
  (local $arrayWithOffset|491 i32)
  (local $i|492 i32)
  (local $493 i32)
  (local $i|494 i32)
  (local $495 i32)
  (local $reversedSlice|496 i32)
  (local $values|497 i32)
  (local $length|498 i32)
  (local $array|499 i32)
  (local $arrayWithOffset|500 i32)
  (local $i|501 i32)
  (local $502 i32)
  (local $i|503 i32)
  (local $504 i32)
  (local $reversedSlice|505 i32)
  (local $values|506 i32)
  (local $length|507 i32)
  (local $array|508 i32)
  (local $arrayWithOffset|509 i32)
  (local $i|510 i32)
  (local $511 i32)
  (local $i|512 i32)
  (local $513 i32)
  (local $reversedSlice|514 i32)
  (local $values|515 i32)
  (local $length|516 i32)
  (local $array|517 i32)
  (local $arrayWithOffset|518 i32)
  (local $i|519 i32)
  (local $520 i32)
  (local $i|521 i32)
  (local $522 i32)
  (local $reversedSlice|523 i32)
  (local $values|524 i32)
  (local $length|525 i32)
  (local $array|526 i32)
  (local $arrayWithOffset|527 i32)
  (local $i|528 i32)
  (local $529 i32)
  (local $i|530 i32)
  (local $531 i32)
  (local $reversedSlice|532 i32)
  (local $values|533 i32)
  (local $length|534 i32)
  (local $array|535 i32)
  (local $arrayWithOffset|536 i32)
  (local $i|537 i32)
  (local $538 i32)
  (local $i|539 i32)
  (local $540 i32)
  (local $reversedSlice|541 i32)
  (local $values|542 i32)
  (local $length|543 i32)
  (local $array|544 i32)
  (local $arrayWithOffset|545 i32)
  (local $i|546 i32)
  (local $547 i32)
  (local $i|548 i32)
  (local $549 i32)
  (local $reversedSlice|550 i32)
  (local $values|551 i32)
  (local $length|552 i32)
  (local $array|553 i32)
  (local $arrayWithOffset|554 i32)
  (local $i|555 i32)
  (local $556 i32)
  (local $i|557 i32)
  (local $558 i32)
  (local $reversedSlice|559 i32)
  (local $values|560 i32)
  (local $length|561 i32)
  (local $array|562 i32)
  (local $arrayWithOffset|563 i32)
  (local $i|564 i32)
  (local $565 i32)
  (local $i|566 i32)
  (local $567 i32)
  (local $reversedSlice|568 i32)
  (local $569 i32)
  (local $570 i32)
  (local $values|571 i32)
  (local $length|572 i32)
  (local $array|573 i32)
  (local $i|574 i32)
  (local $575 i32)
  (local $sliced|576 i32)
  (local $values|577 i32)
  (local $length|578 i32)
  (local $array|579 i32)
  (local $i|580 i32)
  (local $581 i32)
  (local $sliced|582 i32)
  (local $values|583 i32)
  (local $length|584 i32)
  (local $array|585 i32)
  (local $i|586 i32)
  (local $587 i32)
  (local $sliced|588 i32)
  (local $values|589 i32)
  (local $length|590 i32)
  (local $array|591 i32)
  (local $i|592 i32)
  (local $593 i32)
  (local $sliced|594 i32)
  (local $values|595 i32)
  (local $length|596 i32)
  (local $array|597 i32)
  (local $i|598 i32)
  (local $599 i32)
  (local $sliced|600 i32)
  (local $values|601 i32)
  (local $length|602 i32)
  (local $array|603 i32)
  (local $i|604 i32)
  (local $605 i32)
  (local $sliced|606 i32)
  (local $values|607 i32)
  (local $length|608 i32)
  (local $array|609 i32)
  (local $i|610 i32)
  (local $611 i32)
  (local $sliced|612 i32)
  (local $values|613 i32)
  (local $length|614 i32)
  (local $array|615 i32)
  (local $i|616 i32)
  (local $617 i32)
  (local $sliced|618 i32)
  (local $values|619 i32)
  (local $length|620 i32)
  (local $array|621 i32)
  (local $i|622 i32)
  (local $623 i32)
  (local $sliced|624 i32)
  (local $values|625 i32)
  (local $length|626 i32)
  (local $array|627 i32)
  (local $i|628 i32)
  (local $629 i32)
  (local $sliced|630 i32)
  (local $values|631 i32)
  (local $length|632 i32)
  (local $array|633 i32)
  (local $i|634 i32)
  (local $635 i32)
  (local $sliced|636 i32)
  (local $arrNaN64 i32)
  (local $arrNaN32 i32)
  (local $639 i32)
  (local $640 i32)
  (local $buffer i32)
  (local $array|642 i32)
  (local $values|643 i32)
  (local $length|644 i32)
  (local $array|645 i32)
  (local $i|646 i32)
  (local $647 i32)
  (local $buffer|648 i32)
  (local $result|649 i32)
  (local $i|650 i32)
  (local $651 i32)
  (local $values|652 i32)
  (local $length|653 i32)
  (local $array|654 i32)
  (local $i|655 i32)
  (local $656 i32)
  (local $buffer|657 i32)
  (local $result|658 i32)
  (local $i|659 i32)
  (local $660 i32)
  (local $values|661 i32)
  (local $length|662 i32)
  (local $array|663 i32)
  (local $i|664 i32)
  (local $665 i32)
  (local $buffer|666 i32)
  (local $result|667 i32)
  (local $i|668 i32)
  (local $669 i32)
  (local $values|670 i32)
  (local $length|671 i32)
  (local $array|672 i32)
  (local $i|673 i32)
  (local $674 i32)
  (local $buffer|675 i32)
  (local $result|676 i32)
  (local $i|677 i32)
  (local $678 i32)
  (local $values|679 i32)
  (local $length|680 i32)
  (local $array|681 i32)
  (local $i|682 i32)
  (local $683 i32)
  (local $buffer|684 i32)
  (local $result|685 i32)
  (local $i|686 i32)
  (local $687 i32)
  (local $values|688 i32)
  (local $length|689 i32)
  (local $array|690 i32)
  (local $i|691 i32)
  (local $692 i32)
  (local $buffer|693 i32)
  (local $result|694 i32)
  (local $i|695 i32)
  (local $696 i32)
  (local $values|697 i32)
  (local $length|698 i32)
  (local $array|699 i32)
  (local $i|700 i32)
  (local $701 i32)
  (local $buffer|702 i32)
  (local $result|703 i32)
  (local $i|704 i32)
  (local $705 i32)
  (local $values|706 i32)
  (local $length|707 i32)
  (local $array|708 i32)
  (local $i|709 i32)
  (local $710 i32)
  (local $buffer|711 i32)
  (local $result|712 i32)
  (local $i|713 i32)
  (local $714 i32)
  (local $values|715 i32)
  (local $length|716 i32)
  (local $array|717 i32)
  (local $i|718 i32)
  (local $719 i32)
  (local $buffer|720 i32)
  (local $result|721 i32)
  (local $i|722 i32)
  (local $723 i32)
  (local $values|724 i32)
  (local $length|725 i32)
  (local $array|726 i32)
  (local $i|727 i32)
  (local $728 i32)
  (local $buffer|729 i32)
  (local $result|730 i32)
  (local $i|731 i32)
  (local $732 i32)
  (local $values|733 i32)
  (local $length|734 i32)
  (local $array|735 i32)
  (local $i|736 i32)
  (local $737 i32)
  (local $buffer|738 i32)
  (local $result|739 i32)
  (local $i|740 i32)
  (local $741 i32)
  (local $742 i32)
  (local $743 i32)
  (local $744 i32)
  (local $745 i32)
  (local $746 i32)
  (local $747 i32)
  (local $748 i32)
  (local $749 i32)
  (local $setSource4 i32)
  (local $setSource5 i32)
  (local $setSource6 i32)
  (local $a|753 i32)
  (local $754 i32)
  (local $755 i32)
  (local $target i32)
  (local $compare i32)
  (local $len|758 i32)
  (local $i|759 i32)
  (local $760 i32)
  (local $vala i32)
  (local $valb i32)
  (local $763 i32)
  (local $764 i32)
  (local $target|765 i32)
  (local $compare|766 i32)
  (local $len|767 i32)
  (local $i|768 i32)
  (local $769 i32)
  (local $vala|770 i32)
  (local $valb|771 i32)
  (local $772 i32)
  (local $773 i32)
  (local $target|774 i32)
  (local $compare|775 i32)
  (local $len|776 i32)
  (local $i|777 i32)
  (local $778 i32)
  (local $vala|779 i32)
  (local $valb|780 i32)
  (local $781 i32)
  (local $782 i32)
  (local $target|783 i32)
  (local $compare|784 i32)
  (local $len|785 i32)
  (local $i|786 i32)
  (local $787 i32)
  (local $vala|788 i32)
  (local $valb|789 i32)
  (local $790 i32)
  (local $791 i32)
  (local $target|792 i32)
  (local $compare|793 i32)
  (local $len|794 i32)
  (local $i|795 i32)
  (local $796 i32)
  (local $vala|797 i32)
  (local $valb|798 i32)
  (local $setSource4|799 i32)
  (local $setSource5|800 i32)
  (local $setSource6|801 i32)
  (local $a|802 i32)
  (local $803 i32)
  (local $804 i32)
  (local $target|805 i32)
  (local $compare|806 i32)
  (local $len|807 i32)
  (local $i|808 i32)
  (local $809 i32)
  (local $vala|810 i32)
  (local $valb|811 i32)
  (local $812 i32)
  (local $813 i32)
  (local $target|814 i32)
  (local $compare|815 i32)
  (local $len|816 i32)
  (local $i|817 i32)
  (local $818 i32)
  (local $vala|819 i32)
  (local $valb|820 i32)
  (local $821 i32)
  (local $822 i32)
  (local $target|823 i32)
  (local $compare|824 i32)
  (local $len|825 i32)
  (local $i|826 i32)
  (local $827 i32)
  (local $vala|828 i32)
  (local $valb|829 i32)
  (local $830 i32)
  (local $831 i32)
  (local $target|832 i32)
  (local $compare|833 i32)
  (local $len|834 i32)
  (local $i|835 i32)
  (local $836 i32)
  (local $vala|837 i32)
  (local $valb|838 i32)
  (local $839 i32)
  (local $840 i32)
  (local $target|841 i32)
  (local $compare|842 i32)
  (local $len|843 i32)
  (local $i|844 i32)
  (local $845 i32)
  (local $vala|846 i32)
  (local $valb|847 i32)
  (local $setSource4|848 i32)
  (local $setSource5|849 i32)
  (local $setSource6|850 i32)
  (local $a|851 i32)
  (local $852 i32)
  (local $853 i32)
  (local $target|854 i32)
  (local $compare|855 i32)
  (local $len|856 i32)
  (local $i|857 i32)
  (local $858 i32)
  (local $vala|859 i32)
  (local $valb|860 i32)
  (local $861 i32)
  (local $862 i32)
  (local $target|863 i32)
  (local $compare|864 i32)
  (local $len|865 i32)
  (local $i|866 i32)
  (local $867 i32)
  (local $vala|868 i32)
  (local $valb|869 i32)
  (local $870 i32)
  (local $871 i32)
  (local $target|872 i32)
  (local $compare|873 i32)
  (local $len|874 i32)
  (local $i|875 i32)
  (local $876 i32)
  (local $vala|877 i32)
  (local $valb|878 i32)
  (local $879 i32)
  (local $880 i32)
  (local $target|881 i32)
  (local $compare|882 i32)
  (local $len|883 i32)
  (local $i|884 i32)
  (local $885 i32)
  (local $vala|886 i32)
  (local $valb|887 i32)
  (local $888 i32)
  (local $889 i32)
  (local $target|890 i32)
  (local $compare|891 i32)
  (local $len|892 i32)
  (local $i|893 i32)
  (local $894 i32)
  (local $vala|895 i32)
  (local $valb|896 i32)
  (local $setSource4|897 i32)
  (local $setSource5|898 i32)
  (local $setSource6|899 i32)
  (local $a|900 i32)
  (local $901 i32)
  (local $902 i32)
  (local $target|903 i32)
  (local $compare|904 i32)
  (local $len|905 i32)
  (local $i|906 i32)
  (local $907 i32)
  (local $vala|908 i32)
  (local $valb|909 i32)
  (local $910 i32)
  (local $911 i32)
  (local $target|912 i32)
  (local $compare|913 i32)
  (local $len|914 i32)
  (local $i|915 i32)
  (local $916 i32)
  (local $vala|917 i32)
  (local $valb|918 i32)
  (local $919 i32)
  (local $920 i32)
  (local $target|921 i32)
  (local $compare|922 i32)
  (local $len|923 i32)
  (local $i|924 i32)
  (local $925 i32)
  (local $vala|926 i32)
  (local $valb|927 i32)
  (local $928 i32)
  (local $929 i32)
  (local $target|930 i32)
  (local $compare|931 i32)
  (local $len|932 i32)
  (local $i|933 i32)
  (local $934 i32)
  (local $vala|935 i32)
  (local $valb|936 i32)
  (local $937 i32)
  (local $938 i32)
  (local $target|939 i32)
  (local $compare|940 i32)
  (local $len|941 i32)
  (local $i|942 i32)
  (local $943 i32)
  (local $vala|944 i32)
  (local $valb|945 i32)
  (local $setSource4|946 i32)
  (local $setSource5|947 i32)
  (local $setSource6|948 i32)
  (local $a|949 i32)
  (local $950 i32)
  (local $951 i32)
  (local $target|952 i32)
  (local $compare|953 i32)
  (local $len|954 i32)
  (local $i|955 i32)
  (local $956 i32)
  (local $vala|957 i32)
  (local $valb|958 i32)
  (local $959 i32)
  (local $960 i32)
  (local $target|961 i32)
  (local $compare|962 i32)
  (local $len|963 i32)
  (local $i|964 i32)
  (local $965 i32)
  (local $vala|966 i32)
  (local $valb|967 i32)
  (local $968 i32)
  (local $969 i32)
  (local $target|970 i32)
  (local $compare|971 i32)
  (local $len|972 i32)
  (local $i|973 i32)
  (local $974 i32)
  (local $vala|975 i32)
  (local $valb|976 i32)
  (local $977 i32)
  (local $978 i32)
  (local $target|979 i32)
  (local $compare|980 i32)
  (local $len|981 i32)
  (local $i|982 i32)
  (local $983 i32)
  (local $vala|984 i32)
  (local $valb|985 i32)
  (local $986 i32)
  (local $987 i32)
  (local $target|988 i32)
  (local $compare|989 i32)
  (local $len|990 i32)
  (local $i|991 i32)
  (local $992 i32)
  (local $vala|993 i32)
  (local $valb|994 i32)
  (local $setSource4|995 i32)
  (local $setSource5|996 i32)
  (local $setSource6|997 i32)
  (local $a|998 i32)
  (local $999 i32)
  (local $1000 i32)
  (local $target|1001 i32)
  (local $compare|1002 i32)
  (local $len|1003 i32)
  (local $i|1004 i32)
  (local $1005 i32)
  (local $vala|1006 i32)
  (local $valb|1007 i32)
  (local $1008 i32)
  (local $1009 i32)
  (local $target|1010 i32)
  (local $compare|1011 i32)
  (local $len|1012 i32)
  (local $i|1013 i32)
  (local $1014 i32)
  (local $vala|1015 i32)
  (local $valb|1016 i32)
  (local $1017 i32)
  (local $1018 i32)
  (local $target|1019 i32)
  (local $compare|1020 i32)
  (local $len|1021 i32)
  (local $i|1022 i32)
  (local $1023 i32)
  (local $vala|1024 i32)
  (local $valb|1025 i32)
  (local $1026 i32)
  (local $1027 i32)
  (local $target|1028 i32)
  (local $compare|1029 i32)
  (local $len|1030 i32)
  (local $i|1031 i32)
  (local $1032 i32)
  (local $vala|1033 i32)
  (local $valb|1034 i32)
  (local $1035 i32)
  (local $1036 i32)
  (local $target|1037 i32)
  (local $compare|1038 i32)
  (local $len|1039 i32)
  (local $i|1040 i32)
  (local $1041 i32)
  (local $vala|1042 i32)
  (local $valb|1043 i32)
  (local $setSource4|1044 i32)
  (local $setSource5|1045 i32)
  (local $setSource6|1046 i32)
  (local $a|1047 i32)
  (local $1048 i32)
  (local $1049 i32)
  (local $target|1050 i32)
  (local $compare|1051 i32)
  (local $len|1052 i32)
  (local $i|1053 i32)
  (local $1054 i32)
  (local $vala|1055 i32)
  (local $valb|1056 i32)
  (local $1057 i32)
  (local $1058 i32)
  (local $target|1059 i32)
  (local $compare|1060 i32)
  (local $len|1061 i32)
  (local $i|1062 i32)
  (local $1063 i32)
  (local $vala|1064 i32)
  (local $valb|1065 i32)
  (local $1066 i32)
  (local $1067 i32)
  (local $target|1068 i32)
  (local $compare|1069 i32)
  (local $len|1070 i32)
  (local $i|1071 i32)
  (local $1072 i32)
  (local $vala|1073 i32)
  (local $valb|1074 i32)
  (local $1075 i32)
  (local $1076 i32)
  (local $target|1077 i32)
  (local $compare|1078 i32)
  (local $len|1079 i32)
  (local $i|1080 i32)
  (local $1081 i32)
  (local $vala|1082 i32)
  (local $valb|1083 i32)
  (local $1084 i32)
  (local $1085 i32)
  (local $target|1086 i32)
  (local $compare|1087 i32)
  (local $len|1088 i32)
  (local $i|1089 i32)
  (local $1090 i32)
  (local $vala|1091 i32)
  (local $valb|1092 i32)
  (local $setSource4|1093 i32)
  (local $setSource5|1094 i32)
  (local $setSource6|1095 i32)
  (local $a|1096 i32)
  (local $1097 i32)
  (local $1098 i32)
  (local $target|1099 i32)
  (local $compare|1100 i32)
  (local $len|1101 i32)
  (local $i|1102 i32)
  (local $1103 i32)
  (local $vala|1104 f32)
  (local $valb|1105 f32)
  (local $1106 i32)
  (local $1107 i32)
  (local $target|1108 i32)
  (local $compare|1109 i32)
  (local $len|1110 i32)
  (local $i|1111 i32)
  (local $1112 i32)
  (local $vala|1113 f32)
  (local $valb|1114 f32)
  (local $1115 i32)
  (local $1116 i32)
  (local $target|1117 i32)
  (local $compare|1118 i32)
  (local $len|1119 i32)
  (local $i|1120 i32)
  (local $1121 i32)
  (local $vala|1122 f32)
  (local $valb|1123 f32)
  (local $1124 i32)
  (local $1125 i32)
  (local $target|1126 i32)
  (local $compare|1127 i32)
  (local $len|1128 i32)
  (local $i|1129 i32)
  (local $1130 i32)
  (local $vala|1131 f32)
  (local $valb|1132 f32)
  (local $targetClampedArray i32)
  (local $a|1134 i32)
  (local $b|1135 i32)
  (local $c i32)
  (local $1137 i32)
  (local $1138 i32)
  (local $target|1139 i32)
  (local $compare|1140 i32)
  (local $len|1141 i32)
  (local $i|1142 i32)
  (local $1143 i32)
  (local $vala|1144 i32)
  (local $valb|1145 i32)
  (local $d i32)
  (local $e i32)
  (local $1148 i32)
  (local $1149 i32)
  (local $target|1150 i32)
  (local $compare|1151 i32)
  (local $len|1152 i32)
  (local $i|1153 i32)
  (local $1154 i32)
  (local $vala|1155 i32)
  (local $valb|1156 i32)
  (local $source|1157 i32)
  (local $result|1158 i32)
  (local $source|1159 i32)
  (local $result|1160 i32)
  (local $source|1161 i32)
  (local $result|1162 i32)
  (local $source|1163 i32)
  (local $result|1164 i32)
  (local $source|1165 i32)
  (local $result|1166 i32)
  (local $source|1167 i32)
  (local $result|1168 i32)
  (local $source|1169 i32)
  (local $result|1170 i32)
  (local $source|1171 i32)
  (local $result|1172 i32)
  (local $source|1173 i32)
  (local $result|1174 i32)
  (local $source|1175 i32)
  (local $result|1176 i32)
  (local $source|1177 i32)
  (local $result|1178 i32)
  global.get $~lib/typedarray/Int8Array.BYTES_PER_ELEMENT
  i32.const 1
  i32.eq
  drop
  global.get $~lib/typedarray/Uint8Array.BYTES_PER_ELEMENT
  i32.const 1
  i32.eq
  drop
  global.get $~lib/typedarray/Uint8ClampedArray.BYTES_PER_ELEMENT
  i32.const 1
  i32.eq
  drop
  global.get $~lib/typedarray/Int16Array.BYTES_PER_ELEMENT
  i32.const 2
  i32.eq
  drop
  global.get $~lib/typedarray/Uint16Array.BYTES_PER_ELEMENT
  i32.const 2
  i32.eq
  drop
  global.get $~lib/typedarray/Int32Array.BYTES_PER_ELEMENT
  i32.const 4
  i32.eq
  drop
  global.get $~lib/typedarray/Uint32Array.BYTES_PER_ELEMENT
  i32.const 4
  i32.eq
  drop
  global.get $~lib/typedarray/Int64Array.BYTES_PER_ELEMENT
  i32.const 8
  i32.eq
  drop
  global.get $~lib/typedarray/Uint64Array.BYTES_PER_ELEMENT
  i32.const 8
  i32.eq
  drop
  global.get $~lib/typedarray/Float32Array.BYTES_PER_ELEMENT
  i32.const 4
  i32.eq
  drop
  global.get $~lib/typedarray/Float64Array.BYTES_PER_ELEMENT
  i32.const 8
  i32.eq
  drop
  i32.const 0
  local.set $len
  i32.const 0
  local.get $len
  call $~lib/typedarray/Int8Array#constructor
  local.set $i8a
  local.get $i8a
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $i8a
  i32.load $0 offset=8
  local.get $len
  global.get $~lib/typedarray/Int8Array.BYTES_PER_ELEMENT
  i32.mul
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $i8a
  call $~lib/typedarray/Int8Array#get:length
  local.get $len
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.get $len
  call $~lib/typedarray/Uint8Array#constructor
  local.set $u8a
  local.get $u8a
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $u8a
  i32.load $0 offset=8
  local.get $len
  global.get $~lib/typedarray/Uint8Array.BYTES_PER_ELEMENT
  i32.mul
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $u8a
  call $~lib/typedarray/Uint8Array#get:length
  local.get $len
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.get $len
  call $~lib/typedarray/Uint8ClampedArray#constructor
  local.set $c8a
  local.get $c8a
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $c8a
  i32.load $0 offset=8
  local.get $len
  global.get $~lib/typedarray/Uint8Array.BYTES_PER_ELEMENT
  i32.mul
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $c8a
  call $~lib/typedarray/Uint8ClampedArray#get:length
  local.get $len
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.get $len
  call $~lib/typedarray/Int16Array#constructor
  local.set $i16a
  local.get $i16a
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $i16a
  i32.load $0 offset=8
  local.get $len
  global.get $~lib/typedarray/Int16Array.BYTES_PER_ELEMENT
  i32.mul
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $i16a
  call $~lib/typedarray/Int16Array#get:length
  local.get $len
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.get $len
  call $~lib/typedarray/Uint16Array#constructor
  local.set $u16a
  local.get $u16a
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $u16a
  i32.load $0 offset=8
  local.get $len
  global.get $~lib/typedarray/Uint16Array.BYTES_PER_ELEMENT
  i32.mul
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $u16a
  call $~lib/typedarray/Uint16Array#get:length
  local.get $len
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.get $len
  call $~lib/typedarray/Int32Array#constructor
  local.set $i32a
  local.get $i32a
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $i32a
  i32.load $0 offset=8
  local.get $len
  global.get $~lib/typedarray/Int32Array.BYTES_PER_ELEMENT
  i32.mul
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $i32a
  call $~lib/typedarray/Int32Array#get:length
  local.get $len
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.get $len
  call $~lib/typedarray/Uint32Array#constructor
  local.set $u32a
  local.get $u32a
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $u32a
  i32.load $0 offset=8
  local.get $len
  global.get $~lib/typedarray/Uint32Array.BYTES_PER_ELEMENT
  i32.mul
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $u32a
  call $~lib/typedarray/Uint32Array#get:length
  local.get $len
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.get $len
  call $~lib/typedarray/Int64Array#constructor
  local.set $i64a
  local.get $i64a
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $i64a
  i32.load $0 offset=8
  local.get $len
  global.get $~lib/typedarray/Int64Array.BYTES_PER_ELEMENT
  i32.mul
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $i64a
  call $~lib/typedarray/Int64Array#get:length
  local.get $len
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.get $len
  call $~lib/typedarray/Uint64Array#constructor
  local.set $u64a
  local.get $u64a
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $u64a
  i32.load $0 offset=8
  local.get $len
  global.get $~lib/typedarray/Uint64Array.BYTES_PER_ELEMENT
  i32.mul
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $u64a
  call $~lib/typedarray/Uint64Array#get:length
  local.get $len
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.get $len
  call $~lib/typedarray/Float32Array#constructor
  local.set $f32a
  local.get $f32a
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $f32a
  i32.load $0 offset=8
  local.get $len
  global.get $~lib/typedarray/Float32Array.BYTES_PER_ELEMENT
  i32.mul
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $f32a
  call $~lib/typedarray/Float32Array#get:length
  local.get $len
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.get $len
  call $~lib/typedarray/Float64Array#constructor
  local.set $f64a
  local.get $f64a
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $f64a
  i32.load $0 offset=8
  local.get $len
  global.get $~lib/typedarray/Float64Array.BYTES_PER_ELEMENT
  i32.mul
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $f64a
  call $~lib/typedarray/Float64Array#get:length
  local.get $len
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 5
  local.set $len|12
  i32.const 0
  local.get $len|12
  call $~lib/typedarray/Int8Array#constructor
  local.set $i8a|13
  local.get $i8a|13
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $i8a|13
  i32.load $0 offset=8
  local.get $len|12
  global.get $~lib/typedarray/Int8Array.BYTES_PER_ELEMENT
  i32.mul
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $i8a|13
  call $~lib/typedarray/Int8Array#get:length
  local.get $len|12
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.get $len|12
  call $~lib/typedarray/Uint8Array#constructor
  local.set $u8a|14
  local.get $u8a|14
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $u8a|14
  i32.load $0 offset=8
  local.get $len|12
  global.get $~lib/typedarray/Uint8Array.BYTES_PER_ELEMENT
  i32.mul
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $u8a|14
  call $~lib/typedarray/Uint8Array#get:length
  local.get $len|12
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.get $len|12
  call $~lib/typedarray/Uint8ClampedArray#constructor
  local.set $c8a|15
  local.get $c8a|15
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $c8a|15
  i32.load $0 offset=8
  local.get $len|12
  global.get $~lib/typedarray/Uint8Array.BYTES_PER_ELEMENT
  i32.mul
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $c8a|15
  call $~lib/typedarray/Uint8ClampedArray#get:length
  local.get $len|12
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.get $len|12
  call $~lib/typedarray/Int16Array#constructor
  local.set $i16a|16
  local.get $i16a|16
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $i16a|16
  i32.load $0 offset=8
  local.get $len|12
  global.get $~lib/typedarray/Int16Array.BYTES_PER_ELEMENT
  i32.mul
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $i16a|16
  call $~lib/typedarray/Int16Array#get:length
  local.get $len|12
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.get $len|12
  call $~lib/typedarray/Uint16Array#constructor
  local.set $u16a|17
  local.get $u16a|17
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $u16a|17
  i32.load $0 offset=8
  local.get $len|12
  global.get $~lib/typedarray/Uint16Array.BYTES_PER_ELEMENT
  i32.mul
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $u16a|17
  call $~lib/typedarray/Uint16Array#get:length
  local.get $len|12
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.get $len|12
  call $~lib/typedarray/Int32Array#constructor
  local.set $i32a|18
  local.get $i32a|18
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $i32a|18
  i32.load $0 offset=8
  local.get $len|12
  global.get $~lib/typedarray/Int32Array.BYTES_PER_ELEMENT
  i32.mul
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $i32a|18
  call $~lib/typedarray/Int32Array#get:length
  local.get $len|12
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.get $len|12
  call $~lib/typedarray/Uint32Array#constructor
  local.set $u32a|19
  local.get $u32a|19
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $u32a|19
  i32.load $0 offset=8
  local.get $len|12
  global.get $~lib/typedarray/Uint32Array.BYTES_PER_ELEMENT
  i32.mul
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $u32a|19
  call $~lib/typedarray/Uint32Array#get:length
  local.get $len|12
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.get $len|12
  call $~lib/typedarray/Int64Array#constructor
  local.set $i64a|20
  local.get $i64a|20
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $i64a|20
  i32.load $0 offset=8
  local.get $len|12
  global.get $~lib/typedarray/Int64Array.BYTES_PER_ELEMENT
  i32.mul
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $i64a|20
  call $~lib/typedarray/Int64Array#get:length
  local.get $len|12
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.get $len|12
  call $~lib/typedarray/Uint64Array#constructor
  local.set $u64a|21
  local.get $u64a|21
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $u64a|21
  i32.load $0 offset=8
  local.get $len|12
  global.get $~lib/typedarray/Uint64Array.BYTES_PER_ELEMENT
  i32.mul
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $u64a|21
  call $~lib/typedarray/Uint64Array#get:length
  local.get $len|12
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.get $len|12
  call $~lib/typedarray/Float32Array#constructor
  local.set $f32a|22
  local.get $f32a|22
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $f32a|22
  i32.load $0 offset=8
  local.get $len|12
  global.get $~lib/typedarray/Float32Array.BYTES_PER_ELEMENT
  i32.mul
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $f32a|22
  call $~lib/typedarray/Float32Array#get:length
  local.get $len|12
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.get $len|12
  call $~lib/typedarray/Float64Array#constructor
  local.set $f64a|23
  local.get $f64a|23
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $f64a|23
  i32.load $0 offset=8
  local.get $len|12
  global.get $~lib/typedarray/Float64Array.BYTES_PER_ELEMENT
  i32.mul
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $f64a|23
  call $~lib/typedarray/Float64Array#get:length
  local.get $len|12
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int32Array#constructor
  local.set $arr
  local.get $arr
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int32Array#__set
  local.get $arr
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int32Array#__set
  local.get $arr
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int32Array#__set
  local.get $arr
  call $~lib/typedarray/Int32Array#get:length
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $arr
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $arr
  i32.load $0 offset=8
  i32.const 3
  i32.const 4
  i32.mul
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $arr
  i32.const 0
  call $~lib/typedarray/Int32Array#__get
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $arr
  i32.const 1
  call $~lib/typedarray/Int32Array#__get
  i32.const 2
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $arr
  i32.const 2
  call $~lib/typedarray/Int32Array#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $arr
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int32Array#subarray
  local.set $arr
  local.get $arr
  call $~lib/typedarray/Int32Array#get:length
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $arr
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 1
  i32.const 4
  i32.mul
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $arr
  i32.load $0 offset=8
  i32.const 1
  i32.const 4
  i32.mul
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $arr
  i32.const 0
  call $~lib/typedarray/Int32Array#__get
  i32.const 2
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 7
  call $~lib/typedarray/Float64Array#constructor
  local.set $af64
  local.get $af64
  i32.const 0
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $af64
  i32.const 1
  f64.const 2
  call $~lib/typedarray/Float64Array#__set
  local.get $af64
  i32.const 2
  f64.const 7
  call $~lib/typedarray/Float64Array#__set
  local.get $af64
  i32.const 3
  f64.const 6
  call $~lib/typedarray/Float64Array#__set
  local.get $af64
  i32.const 4
  f64.const 5
  call $~lib/typedarray/Float64Array#__set
  local.get $af64
  i32.const 5
  f64.const 4
  call $~lib/typedarray/Float64Array#__set
  local.get $af64
  i32.const 6
  f64.const 3
  call $~lib/typedarray/Float64Array#__set
  local.get $af64
  i32.const 2
  i32.const 6
  call $~lib/typedarray/Float64Array#subarray
  local.set $af64
  local.get $af64
  call $~lib/typedarray/Float64Array#get:length
  i32.const 4
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $af64
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 2
  i32.const 8
  i32.mul
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $af64
  i32.load $0 offset=8
  i32.const 4
  i32.const 8
  i32.mul
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $af64
  i32.const 0
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Float64Array#sort@varargs
  drop
  local.get $af64
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.const 4
  f64.eq
  if (result i32)
   local.get $af64
   i32.const 1
   call $~lib/typedarray/Float64Array#__get
   f64.const 5
   f64.eq
  else
   i32.const 0
  end
  if (result i32)
   local.get $af64
   i32.const 2
   call $~lib/typedarray/Float64Array#__get
   f64.const 6
   f64.eq
  else
   i32.const 0
  end
  if (result i32)
   local.get $af64
   i32.const 3
   call $~lib/typedarray/Float64Array#__get
   f64.const 7
   f64.eq
  else
   i32.const 0
  end
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint8ClampedArray#constructor
  local.set $clampedArr
  local.get $clampedArr
  i32.const 0
  i32.const -32
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $clampedArr
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $clampedArr
  i32.const 2
  i32.const 256
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $clampedArr
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#__get
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $clampedArr
  i32.const 1
  call $~lib/typedarray/Uint8ClampedArray#__get
  i32.const 2
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $clampedArr
  i32.const 2
  call $~lib/typedarray/Uint8ClampedArray#__get
  i32.const 255
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 5
  call $~lib/typedarray/Int8Array#constructor
  local.set $arr8
  local.get $arr8
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int8Array#__set
  local.get $arr8
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int8Array#__set
  local.get $arr8
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int8Array#__set
  local.get $arr8
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Int8Array#__set
  local.get $arr8
  i32.const 4
  i32.const 5
  call $~lib/typedarray/Int8Array#__set
  local.get $arr8
  i32.const 1
  i32.const 1
  i32.const 3
  call $~lib/typedarray/Int8Array#fill
  drop
  block $std/typedarray/isInt8ArrayEqual|inlined.0 (result i32)
   local.get $arr8
   local.set $a
   i32.const 5
   i32.const 0
   i32.const 15
   i32.const 160
   call $~lib/rt/__newArray
   local.set $b
   local.get $a
   call $~lib/typedarray/Int8Array#get:length
   local.get $b
   call $~lib/array/Array<i8>#get:length
   i32.ne
   if
    i32.const 0
    br $std/typedarray/isInt8ArrayEqual|inlined.0
   end
   i32.const 0
   local.set $i
   local.get $a
   call $~lib/typedarray/Int8Array#get:length
   local.set $len|33
   loop $for-loop|0
    local.get $i
    local.get $len|33
    i32.lt_s
    local.set $34
    local.get $34
    if
     local.get $a
     local.get $i
     call $~lib/typedarray/Int8Array#__get
     local.get $b
     local.get $i
     call $~lib/array/Array<i8>#__get
     i32.ne
     if
      i32.const 0
      br $std/typedarray/isInt8ArrayEqual|inlined.0
     end
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     br $for-loop|0
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $arr8
  i32.const 0
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/typedarray/Int8Array#fill
  drop
  block $std/typedarray/isInt8ArrayEqual|inlined.1 (result i32)
   local.get $arr8
   local.set $a|37
   i32.const 5
   i32.const 0
   i32.const 15
   i32.const 224
   call $~lib/rt/__newArray
   local.set $b|38
   local.get $a|37
   call $~lib/typedarray/Int8Array#get:length
   local.get $b|38
   call $~lib/array/Array<i8>#get:length
   i32.ne
   if
    i32.const 0
    br $std/typedarray/isInt8ArrayEqual|inlined.1
   end
   i32.const 0
   local.set $i|39
   local.get $a|37
   call $~lib/typedarray/Int8Array#get:length
   local.set $len|40
   loop $for-loop|1
    local.get $i|39
    local.get $len|40
    i32.lt_s
    local.set $41
    local.get $41
    if
     local.get $a|37
     local.get $i|39
     call $~lib/typedarray/Int8Array#__get
     local.get $b|38
     local.get $i|39
     call $~lib/array/Array<i8>#__get
     i32.ne
     if
      i32.const 0
      br $std/typedarray/isInt8ArrayEqual|inlined.1
     end
     local.get $i|39
     i32.const 1
     i32.add
     local.set $i|39
     br $for-loop|1
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $arr8
  i32.const 1
  i32.const 0
  i32.const -3
  call $~lib/typedarray/Int8Array#fill
  drop
  block $std/typedarray/isInt8ArrayEqual|inlined.2 (result i32)
   local.get $arr8
   local.set $a|44
   i32.const 5
   i32.const 0
   i32.const 15
   i32.const 256
   call $~lib/rt/__newArray
   local.set $b|45
   local.get $a|44
   call $~lib/typedarray/Int8Array#get:length
   local.get $b|45
   call $~lib/array/Array<i8>#get:length
   i32.ne
   if
    i32.const 0
    br $std/typedarray/isInt8ArrayEqual|inlined.2
   end
   i32.const 0
   local.set $i|46
   local.get $a|44
   call $~lib/typedarray/Int8Array#get:length
   local.set $len|47
   loop $for-loop|2
    local.get $i|46
    local.get $len|47
    i32.lt_s
    local.set $48
    local.get $48
    if
     local.get $a|44
     local.get $i|46
     call $~lib/typedarray/Int8Array#__get
     local.get $b|45
     local.get $i|46
     call $~lib/array/Array<i8>#__get
     i32.ne
     if
      i32.const 0
      br $std/typedarray/isInt8ArrayEqual|inlined.2
     end
     local.get $i|46
     i32.const 1
     i32.add
     local.set $i|46
     br $for-loop|2
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $arr8
  i32.const 2
  i32.const -2
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/typedarray/Int8Array#fill
  drop
  block $std/typedarray/isInt8ArrayEqual|inlined.3 (result i32)
   local.get $arr8
   local.set $a|51
   i32.const 5
   i32.const 0
   i32.const 15
   i32.const 288
   call $~lib/rt/__newArray
   local.set $b|52
   local.get $a|51
   call $~lib/typedarray/Int8Array#get:length
   local.get $b|52
   call $~lib/array/Array<i8>#get:length
   i32.ne
   if
    i32.const 0
    br $std/typedarray/isInt8ArrayEqual|inlined.3
   end
   i32.const 0
   local.set $i|53
   local.get $a|51
   call $~lib/typedarray/Int8Array#get:length
   local.set $len|54
   loop $for-loop|3
    local.get $i|53
    local.get $len|54
    i32.lt_s
    local.set $55
    local.get $55
    if
     local.get $a|51
     local.get $i|53
     call $~lib/typedarray/Int8Array#__get
     local.get $b|52
     local.get $i|53
     call $~lib/array/Array<i8>#__get
     i32.ne
     if
      i32.const 0
      br $std/typedarray/isInt8ArrayEqual|inlined.3
     end
     local.get $i|53
     i32.const 1
     i32.add
     local.set $i|53
     br $for-loop|3
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $arr8
  i32.const 0
  i32.const 1
  i32.const 0
  call $~lib/typedarray/Int8Array#fill
  drop
  block $std/typedarray/isInt8ArrayEqual|inlined.4 (result i32)
   local.get $arr8
   local.set $a|58
   i32.const 5
   i32.const 0
   i32.const 15
   i32.const 320
   call $~lib/rt/__newArray
   local.set $b|59
   local.get $a|58
   call $~lib/typedarray/Int8Array#get:length
   local.get $b|59
   call $~lib/array/Array<i8>#get:length
   i32.ne
   if
    i32.const 0
    br $std/typedarray/isInt8ArrayEqual|inlined.4
   end
   i32.const 0
   local.set $i|60
   local.get $a|58
   call $~lib/typedarray/Int8Array#get:length
   local.set $len|61
   loop $for-loop|4
    local.get $i|60
    local.get $len|61
    i32.lt_s
    local.set $62
    local.get $62
    if
     local.get $a|58
     local.get $i|60
     call $~lib/typedarray/Int8Array#__get
     local.get $b|59
     local.get $i|60
     call $~lib/array/Array<i8>#__get
     i32.ne
     if
      i32.const 0
      br $std/typedarray/isInt8ArrayEqual|inlined.4
     end
     local.get $i|60
     i32.const 1
     i32.add
     local.set $i|60
     br $for-loop|4
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $arr8
  i32.const 1
  i32.const 4
  call $~lib/typedarray/Int8Array#subarray
  local.set $sub8
  local.get $sub8
  i32.const 0
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/typedarray/Int8Array#fill
  drop
  local.get $sub8
  call $~lib/typedarray/Int8Array#get:length
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sub8
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sub8
  i32.load $0 offset=8
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  block $std/typedarray/isInt8ArrayEqual|inlined.5 (result i32)
   local.get $sub8
   local.set $a|66
   i32.const 3
   i32.const 0
   i32.const 15
   i32.const 352
   call $~lib/rt/__newArray
   local.set $b|67
   local.get $a|66
   call $~lib/typedarray/Int8Array#get:length
   local.get $b|67
   call $~lib/array/Array<i8>#get:length
   i32.ne
   if
    i32.const 0
    br $std/typedarray/isInt8ArrayEqual|inlined.5
   end
   i32.const 0
   local.set $i|68
   local.get $a|66
   call $~lib/typedarray/Int8Array#get:length
   local.set $len|69
   loop $for-loop|5
    local.get $i|68
    local.get $len|69
    i32.lt_s
    local.set $70
    local.get $70
    if
     local.get $a|66
     local.get $i|68
     call $~lib/typedarray/Int8Array#__get
     local.get $b|67
     local.get $i|68
     call $~lib/array/Array<i8>#__get
     i32.ne
     if
      i32.const 0
      br $std/typedarray/isInt8ArrayEqual|inlined.5
     end
     local.get $i|68
     i32.const 1
     i32.add
     local.set $i|68
     br $for-loop|5
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  block $std/typedarray/isInt8ArrayEqual|inlined.6 (result i32)
   local.get $arr8
   local.set $a|73
   i32.const 5
   i32.const 0
   i32.const 15
   i32.const 384
   call $~lib/rt/__newArray
   local.set $b|74
   local.get $a|73
   call $~lib/typedarray/Int8Array#get:length
   local.get $b|74
   call $~lib/array/Array<i8>#get:length
   i32.ne
   if
    i32.const 0
    br $std/typedarray/isInt8ArrayEqual|inlined.6
   end
   i32.const 0
   local.set $i|75
   local.get $a|73
   call $~lib/typedarray/Int8Array#get:length
   local.set $len|76
   loop $for-loop|6
    local.get $i|75
    local.get $len|76
    i32.lt_s
    local.set $77
    local.get $77
    if
     local.get $a|73
     local.get $i|75
     call $~lib/typedarray/Int8Array#__get
     local.get $b|74
     local.get $i|75
     call $~lib/array/Array<i8>#__get
     i32.ne
     if
      i32.const 0
      br $std/typedarray/isInt8ArrayEqual|inlined.6
     end
     local.get $i|75
     i32.const 1
     i32.add
     local.set $i|75
     br $for-loop|6
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 5
  call $~lib/typedarray/Int32Array#constructor
  local.set $arr32
  local.get $arr32
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int32Array#__set
  local.get $arr32
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int32Array#__set
  local.get $arr32
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int32Array#__set
  local.get $arr32
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Int32Array#__set
  local.get $arr32
  i32.const 4
  i32.const 5
  call $~lib/typedarray/Int32Array#__set
  local.get $arr32
  i32.const 1
  i32.const 1
  i32.const 3
  call $~lib/typedarray/Int32Array#fill
  drop
  block $std/typedarray/isInt32ArrayEqual|inlined.0 (result i32)
   local.get $arr32
   local.set $a|81
   i32.const 5
   i32.const 2
   i32.const 16
   i32.const 416
   call $~lib/rt/__newArray
   local.set $b|82
   local.get $a|81
   call $~lib/typedarray/Int32Array#get:length
   local.get $b|82
   call $~lib/array/Array<i32>#get:length
   i32.ne
   if
    i32.const 0
    br $std/typedarray/isInt32ArrayEqual|inlined.0
   end
   i32.const 0
   local.set $i|83
   local.get $a|81
   call $~lib/typedarray/Int32Array#get:length
   local.set $len|84
   loop $for-loop|7
    local.get $i|83
    local.get $len|84
    i32.lt_s
    local.set $85
    local.get $85
    if
     local.get $a|81
     local.get $i|83
     call $~lib/typedarray/Int32Array#__get
     local.get $b|82
     local.get $i|83
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/typedarray/isInt32ArrayEqual|inlined.0
     end
     local.get $i|83
     i32.const 1
     i32.add
     local.set $i|83
     br $for-loop|7
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $arr32
  i32.const 0
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/typedarray/Int32Array#fill
  drop
  block $std/typedarray/isInt32ArrayEqual|inlined.1 (result i32)
   local.get $arr32
   local.set $a|88
   i32.const 5
   i32.const 2
   i32.const 16
   i32.const 464
   call $~lib/rt/__newArray
   local.set $b|89
   local.get $a|88
   call $~lib/typedarray/Int32Array#get:length
   local.get $b|89
   call $~lib/array/Array<i32>#get:length
   i32.ne
   if
    i32.const 0
    br $std/typedarray/isInt32ArrayEqual|inlined.1
   end
   i32.const 0
   local.set $i|90
   local.get $a|88
   call $~lib/typedarray/Int32Array#get:length
   local.set $len|91
   loop $for-loop|8
    local.get $i|90
    local.get $len|91
    i32.lt_s
    local.set $92
    local.get $92
    if
     local.get $a|88
     local.get $i|90
     call $~lib/typedarray/Int32Array#__get
     local.get $b|89
     local.get $i|90
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/typedarray/isInt32ArrayEqual|inlined.1
     end
     local.get $i|90
     i32.const 1
     i32.add
     local.set $i|90
     br $for-loop|8
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $arr32
  i32.const 1
  i32.const 0
  i32.const -3
  call $~lib/typedarray/Int32Array#fill
  drop
  block $std/typedarray/isInt32ArrayEqual|inlined.2 (result i32)
   local.get $arr32
   local.set $a|95
   i32.const 5
   i32.const 2
   i32.const 16
   i32.const 512
   call $~lib/rt/__newArray
   local.set $b|96
   local.get $a|95
   call $~lib/typedarray/Int32Array#get:length
   local.get $b|96
   call $~lib/array/Array<i32>#get:length
   i32.ne
   if
    i32.const 0
    br $std/typedarray/isInt32ArrayEqual|inlined.2
   end
   i32.const 0
   local.set $i|97
   local.get $a|95
   call $~lib/typedarray/Int32Array#get:length
   local.set $len|98
   loop $for-loop|9
    local.get $i|97
    local.get $len|98
    i32.lt_s
    local.set $99
    local.get $99
    if
     local.get $a|95
     local.get $i|97
     call $~lib/typedarray/Int32Array#__get
     local.get $b|96
     local.get $i|97
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/typedarray/isInt32ArrayEqual|inlined.2
     end
     local.get $i|97
     i32.const 1
     i32.add
     local.set $i|97
     br $for-loop|9
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $arr32
  i32.const 2
  i32.const -2
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/typedarray/Int32Array#fill
  drop
  block $std/typedarray/isInt32ArrayEqual|inlined.3 (result i32)
   local.get $arr32
   local.set $a|102
   i32.const 5
   i32.const 2
   i32.const 16
   i32.const 560
   call $~lib/rt/__newArray
   local.set $b|103
   local.get $a|102
   call $~lib/typedarray/Int32Array#get:length
   local.get $b|103
   call $~lib/array/Array<i32>#get:length
   i32.ne
   if
    i32.const 0
    br $std/typedarray/isInt32ArrayEqual|inlined.3
   end
   i32.const 0
   local.set $i|104
   local.get $a|102
   call $~lib/typedarray/Int32Array#get:length
   local.set $len|105
   loop $for-loop|10
    local.get $i|104
    local.get $len|105
    i32.lt_s
    local.set $106
    local.get $106
    if
     local.get $a|102
     local.get $i|104
     call $~lib/typedarray/Int32Array#__get
     local.get $b|103
     local.get $i|104
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/typedarray/isInt32ArrayEqual|inlined.3
     end
     local.get $i|104
     i32.const 1
     i32.add
     local.set $i|104
     br $for-loop|10
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $arr32
  i32.const 0
  i32.const 1
  i32.const 0
  call $~lib/typedarray/Int32Array#fill
  drop
  block $std/typedarray/isInt32ArrayEqual|inlined.4 (result i32)
   local.get $arr32
   local.set $a|109
   i32.const 5
   i32.const 2
   i32.const 16
   i32.const 608
   call $~lib/rt/__newArray
   local.set $b|110
   local.get $a|109
   call $~lib/typedarray/Int32Array#get:length
   local.get $b|110
   call $~lib/array/Array<i32>#get:length
   i32.ne
   if
    i32.const 0
    br $std/typedarray/isInt32ArrayEqual|inlined.4
   end
   i32.const 0
   local.set $i|111
   local.get $a|109
   call $~lib/typedarray/Int32Array#get:length
   local.set $len|112
   loop $for-loop|11
    local.get $i|111
    local.get $len|112
    i32.lt_s
    local.set $113
    local.get $113
    if
     local.get $a|109
     local.get $i|111
     call $~lib/typedarray/Int32Array#__get
     local.get $b|110
     local.get $i|111
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/typedarray/isInt32ArrayEqual|inlined.4
     end
     local.get $i|111
     i32.const 1
     i32.add
     local.set $i|111
     br $for-loop|11
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $arr32
  i32.const 1
  i32.const 4
  call $~lib/typedarray/Int32Array#subarray
  local.set $sub32
  local.get $sub32
  i32.const 0
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/typedarray/Int32Array#fill
  drop
  local.get $sub32
  call $~lib/typedarray/Int32Array#get:length
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sub32
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 1
  i32.const 4
  i32.mul
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sub32
  i32.load $0 offset=8
  i32.const 3
  i32.const 4
  i32.mul
  i32.eq
  i32.eqz
  if
   unreachable
  end
  block $std/typedarray/isInt32ArrayEqual|inlined.5 (result i32)
   local.get $sub32
   local.set $a|117
   i32.const 3
   i32.const 2
   i32.const 16
   i32.const 656
   call $~lib/rt/__newArray
   local.set $b|118
   local.get $a|117
   call $~lib/typedarray/Int32Array#get:length
   local.get $b|118
   call $~lib/array/Array<i32>#get:length
   i32.ne
   if
    i32.const 0
    br $std/typedarray/isInt32ArrayEqual|inlined.5
   end
   i32.const 0
   local.set $i|119
   local.get $a|117
   call $~lib/typedarray/Int32Array#get:length
   local.set $len|120
   loop $for-loop|12
    local.get $i|119
    local.get $len|120
    i32.lt_s
    local.set $121
    local.get $121
    if
     local.get $a|117
     local.get $i|119
     call $~lib/typedarray/Int32Array#__get
     local.get $b|118
     local.get $i|119
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/typedarray/isInt32ArrayEqual|inlined.5
     end
     local.get $i|119
     i32.const 1
     i32.add
     local.set $i|119
     br $for-loop|12
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  block $std/typedarray/isInt32ArrayEqual|inlined.6 (result i32)
   local.get $arr32
   local.set $a|124
   i32.const 5
   i32.const 2
   i32.const 16
   i32.const 688
   call $~lib/rt/__newArray
   local.set $b|125
   local.get $a|124
   call $~lib/typedarray/Int32Array#get:length
   local.get $b|125
   call $~lib/array/Array<i32>#get:length
   i32.ne
   if
    i32.const 0
    br $std/typedarray/isInt32ArrayEqual|inlined.6
   end
   i32.const 0
   local.set $i|126
   local.get $a|124
   call $~lib/typedarray/Int32Array#get:length
   local.set $len|127
   loop $for-loop|13
    local.get $i|126
    local.get $len|127
    i32.lt_s
    local.set $128
    local.get $128
    if
     local.get $a|124
     local.get $i|126
     call $~lib/typedarray/Int32Array#__get
     local.get $b|125
     local.get $i|126
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/typedarray/isInt32ArrayEqual|inlined.6
     end
     local.get $i|126
     i32.const 1
     i32.add
     local.set $i|126
     br $for-loop|13
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 6
  call $~lib/typedarray/Int8Array#constructor
  local.set $multisubarr
  local.get $multisubarr
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int8Array#__set
  local.get $multisubarr
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int8Array#__set
  local.get $multisubarr
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int8Array#__set
  local.get $multisubarr
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Int8Array#__set
  local.get $multisubarr
  i32.const 4
  i32.const 5
  call $~lib/typedarray/Int8Array#__set
  local.get $multisubarr
  i32.const 5
  i32.const 6
  call $~lib/typedarray/Int8Array#__set
  local.get $multisubarr
  i32.const 1
  i32.const 6
  call $~lib/typedarray/Int8Array#subarray
  local.set $multisubarr1
  local.get $multisubarr1
  i32.const 0
  call $~lib/typedarray/Int8Array#__get
  i32.const 2
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $multisubarr1
  call $~lib/typedarray/Int8Array#get:length
  i32.const 5
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $multisubarr1
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $multisubarr1
  i32.load $0 offset=8
  i32.const 5
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $multisubarr1
  i32.const 1
  i32.const 5
  call $~lib/typedarray/Int8Array#subarray
  local.set $multisubarr2
  local.get $multisubarr2
  i32.const 0
  call $~lib/typedarray/Int8Array#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $multisubarr2
  call $~lib/typedarray/Int8Array#get:length
  i32.const 4
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $multisubarr2
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 2
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $multisubarr2
  i32.load $0 offset=8
  i32.const 4
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $multisubarr2
  i32.const 1
  i32.const 4
  call $~lib/typedarray/Int8Array#subarray
  local.set $multisubarr3
  local.get $multisubarr3
  i32.const 0
  call $~lib/typedarray/Int8Array#__get
  i32.const 4
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $multisubarr3
  call $~lib/typedarray/Int8Array#get:length
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $multisubarr3
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $multisubarr3
  i32.load $0 offset=8
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 5
  call $~lib/typedarray/Int32Array#constructor
  local.set $cwAr
  local.get $cwAr
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int32Array#__set
  local.get $cwAr
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int32Array#__set
  local.get $cwAr
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int32Array#__set
  local.get $cwAr
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Int32Array#__set
  local.get $cwAr
  i32.const 4
  i32.const 5
  call $~lib/typedarray/Int32Array#__set
  local.get $cwAr
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/typedarray/Int32Array#slice
  local.set $copy
  block $std/typedarray/isInt32ArrayEqual|inlined.7 (result i32)
   local.get $cwAr
   i32.const 0
   i32.const 3
   global.get $~lib/builtins/i32.MAX_VALUE
   call $~lib/typedarray/Int32Array#copyWithin
   local.set $a|137
   i32.const 5
   i32.const 2
   i32.const 16
   i32.const 736
   call $~lib/rt/__newArray
   local.set $b|138
   local.get $a|137
   call $~lib/typedarray/Int32Array#get:length
   local.get $b|138
   call $~lib/array/Array<i32>#get:length
   i32.ne
   if
    i32.const 0
    br $std/typedarray/isInt32ArrayEqual|inlined.7
   end
   i32.const 0
   local.set $i|139
   local.get $a|137
   call $~lib/typedarray/Int32Array#get:length
   local.set $len|140
   loop $for-loop|14
    local.get $i|139
    local.get $len|140
    i32.lt_s
    local.set $141
    local.get $141
    if
     local.get $a|137
     local.get $i|139
     call $~lib/typedarray/Int32Array#__get
     local.get $b|138
     local.get $i|139
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/typedarray/isInt32ArrayEqual|inlined.7
     end
     local.get $i|139
     i32.const 1
     i32.add
     local.set $i|139
     br $for-loop|14
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $copy
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/typedarray/Int32Array#slice
  local.set $cwAr
  block $std/typedarray/isInt32ArrayEqual|inlined.8 (result i32)
   local.get $cwAr
   i32.const 1
   i32.const 3
   global.get $~lib/builtins/i32.MAX_VALUE
   call $~lib/typedarray/Int32Array#copyWithin
   local.set $a|144
   i32.const 5
   i32.const 2
   i32.const 16
   i32.const 784
   call $~lib/rt/__newArray
   local.set $b|145
   local.get $a|144
   call $~lib/typedarray/Int32Array#get:length
   local.get $b|145
   call $~lib/array/Array<i32>#get:length
   i32.ne
   if
    i32.const 0
    br $std/typedarray/isInt32ArrayEqual|inlined.8
   end
   i32.const 0
   local.set $i|146
   local.get $a|144
   call $~lib/typedarray/Int32Array#get:length
   local.set $len|147
   loop $for-loop|15
    local.get $i|146
    local.get $len|147
    i32.lt_s
    local.set $148
    local.get $148
    if
     local.get $a|144
     local.get $i|146
     call $~lib/typedarray/Int32Array#__get
     local.get $b|145
     local.get $i|146
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/typedarray/isInt32ArrayEqual|inlined.8
     end
     local.get $i|146
     i32.const 1
     i32.add
     local.set $i|146
     br $for-loop|15
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $copy
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/typedarray/Int32Array#slice
  local.set $cwAr
  block $std/typedarray/isInt32ArrayEqual|inlined.9 (result i32)
   local.get $cwAr
   i32.const 1
   i32.const 2
   global.get $~lib/builtins/i32.MAX_VALUE
   call $~lib/typedarray/Int32Array#copyWithin
   local.set $a|151
   i32.const 5
   i32.const 2
   i32.const 16
   i32.const 832
   call $~lib/rt/__newArray
   local.set $b|152
   local.get $a|151
   call $~lib/typedarray/Int32Array#get:length
   local.get $b|152
   call $~lib/array/Array<i32>#get:length
   i32.ne
   if
    i32.const 0
    br $std/typedarray/isInt32ArrayEqual|inlined.9
   end
   i32.const 0
   local.set $i|153
   local.get $a|151
   call $~lib/typedarray/Int32Array#get:length
   local.set $len|154
   loop $for-loop|16
    local.get $i|153
    local.get $len|154
    i32.lt_s
    local.set $155
    local.get $155
    if
     local.get $a|151
     local.get $i|153
     call $~lib/typedarray/Int32Array#__get
     local.get $b|152
     local.get $i|153
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/typedarray/isInt32ArrayEqual|inlined.9
     end
     local.get $i|153
     i32.const 1
     i32.add
     local.set $i|153
     br $for-loop|16
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $copy
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/typedarray/Int32Array#slice
  local.set $cwAr
  block $std/typedarray/isInt32ArrayEqual|inlined.10 (result i32)
   local.get $cwAr
   i32.const 2
   i32.const 2
   global.get $~lib/builtins/i32.MAX_VALUE
   call $~lib/typedarray/Int32Array#copyWithin
   local.set $a|158
   i32.const 5
   i32.const 2
   i32.const 16
   i32.const 880
   call $~lib/rt/__newArray
   local.set $b|159
   local.get $a|158
   call $~lib/typedarray/Int32Array#get:length
   local.get $b|159
   call $~lib/array/Array<i32>#get:length
   i32.ne
   if
    i32.const 0
    br $std/typedarray/isInt32ArrayEqual|inlined.10
   end
   i32.const 0
   local.set $i|160
   local.get $a|158
   call $~lib/typedarray/Int32Array#get:length
   local.set $len|161
   loop $for-loop|17
    local.get $i|160
    local.get $len|161
    i32.lt_s
    local.set $162
    local.get $162
    if
     local.get $a|158
     local.get $i|160
     call $~lib/typedarray/Int32Array#__get
     local.get $b|159
     local.get $i|160
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/typedarray/isInt32ArrayEqual|inlined.10
     end
     local.get $i|160
     i32.const 1
     i32.add
     local.set $i|160
     br $for-loop|17
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $copy
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/typedarray/Int32Array#slice
  local.set $cwAr
  block $std/typedarray/isInt32ArrayEqual|inlined.11 (result i32)
   local.get $cwAr
   i32.const 0
   i32.const 3
   i32.const 4
   call $~lib/typedarray/Int32Array#copyWithin
   local.set $a|165
   i32.const 5
   i32.const 2
   i32.const 16
   i32.const 928
   call $~lib/rt/__newArray
   local.set $b|166
   local.get $a|165
   call $~lib/typedarray/Int32Array#get:length
   local.get $b|166
   call $~lib/array/Array<i32>#get:length
   i32.ne
   if
    i32.const 0
    br $std/typedarray/isInt32ArrayEqual|inlined.11
   end
   i32.const 0
   local.set $i|167
   local.get $a|165
   call $~lib/typedarray/Int32Array#get:length
   local.set $len|168
   loop $for-loop|18
    local.get $i|167
    local.get $len|168
    i32.lt_s
    local.set $169
    local.get $169
    if
     local.get $a|165
     local.get $i|167
     call $~lib/typedarray/Int32Array#__get
     local.get $b|166
     local.get $i|167
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/typedarray/isInt32ArrayEqual|inlined.11
     end
     local.get $i|167
     i32.const 1
     i32.add
     local.set $i|167
     br $for-loop|18
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $copy
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/typedarray/Int32Array#slice
  local.set $cwAr
  block $std/typedarray/isInt32ArrayEqual|inlined.12 (result i32)
   local.get $cwAr
   i32.const 1
   i32.const 3
   i32.const 4
   call $~lib/typedarray/Int32Array#copyWithin
   local.set $a|172
   i32.const 5
   i32.const 2
   i32.const 16
   i32.const 976
   call $~lib/rt/__newArray
   local.set $b|173
   local.get $a|172
   call $~lib/typedarray/Int32Array#get:length
   local.get $b|173
   call $~lib/array/Array<i32>#get:length
   i32.ne
   if
    i32.const 0
    br $std/typedarray/isInt32ArrayEqual|inlined.12
   end
   i32.const 0
   local.set $i|174
   local.get $a|172
   call $~lib/typedarray/Int32Array#get:length
   local.set $len|175
   loop $for-loop|19
    local.get $i|174
    local.get $len|175
    i32.lt_s
    local.set $176
    local.get $176
    if
     local.get $a|172
     local.get $i|174
     call $~lib/typedarray/Int32Array#__get
     local.get $b|173
     local.get $i|174
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/typedarray/isInt32ArrayEqual|inlined.12
     end
     local.get $i|174
     i32.const 1
     i32.add
     local.set $i|174
     br $for-loop|19
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $copy
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/typedarray/Int32Array#slice
  local.set $cwAr
  block $std/typedarray/isInt32ArrayEqual|inlined.13 (result i32)
   local.get $cwAr
   i32.const 1
   i32.const 2
   i32.const 4
   call $~lib/typedarray/Int32Array#copyWithin
   local.set $a|179
   i32.const 5
   i32.const 2
   i32.const 16
   i32.const 1024
   call $~lib/rt/__newArray
   local.set $b|180
   local.get $a|179
   call $~lib/typedarray/Int32Array#get:length
   local.get $b|180
   call $~lib/array/Array<i32>#get:length
   i32.ne
   if
    i32.const 0
    br $std/typedarray/isInt32ArrayEqual|inlined.13
   end
   i32.const 0
   local.set $i|181
   local.get $a|179
   call $~lib/typedarray/Int32Array#get:length
   local.set $len|182
   loop $for-loop|20
    local.get $i|181
    local.get $len|182
    i32.lt_s
    local.set $183
    local.get $183
    if
     local.get $a|179
     local.get $i|181
     call $~lib/typedarray/Int32Array#__get
     local.get $b|180
     local.get $i|181
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/typedarray/isInt32ArrayEqual|inlined.13
     end
     local.get $i|181
     i32.const 1
     i32.add
     local.set $i|181
     br $for-loop|20
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $copy
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/typedarray/Int32Array#slice
  local.set $cwAr
  block $std/typedarray/isInt32ArrayEqual|inlined.14 (result i32)
   local.get $cwAr
   i32.const 0
   i32.const -2
   global.get $~lib/builtins/i32.MAX_VALUE
   call $~lib/typedarray/Int32Array#copyWithin
   local.set $a|186
   i32.const 5
   i32.const 2
   i32.const 16
   i32.const 1072
   call $~lib/rt/__newArray
   local.set $b|187
   local.get $a|186
   call $~lib/typedarray/Int32Array#get:length
   local.get $b|187
   call $~lib/array/Array<i32>#get:length
   i32.ne
   if
    i32.const 0
    br $std/typedarray/isInt32ArrayEqual|inlined.14
   end
   i32.const 0
   local.set $i|188
   local.get $a|186
   call $~lib/typedarray/Int32Array#get:length
   local.set $len|189
   loop $for-loop|21
    local.get $i|188
    local.get $len|189
    i32.lt_s
    local.set $190
    local.get $190
    if
     local.get $a|186
     local.get $i|188
     call $~lib/typedarray/Int32Array#__get
     local.get $b|187
     local.get $i|188
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/typedarray/isInt32ArrayEqual|inlined.14
     end
     local.get $i|188
     i32.const 1
     i32.add
     local.set $i|188
     br $for-loop|21
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $copy
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/typedarray/Int32Array#slice
  local.set $cwAr
  block $std/typedarray/isInt32ArrayEqual|inlined.15 (result i32)
   local.get $cwAr
   i32.const 0
   i32.const -2
   i32.const -1
   call $~lib/typedarray/Int32Array#copyWithin
   local.set $a|193
   i32.const 5
   i32.const 2
   i32.const 16
   i32.const 1120
   call $~lib/rt/__newArray
   local.set $b|194
   local.get $a|193
   call $~lib/typedarray/Int32Array#get:length
   local.get $b|194
   call $~lib/array/Array<i32>#get:length
   i32.ne
   if
    i32.const 0
    br $std/typedarray/isInt32ArrayEqual|inlined.15
   end
   i32.const 0
   local.set $i|195
   local.get $a|193
   call $~lib/typedarray/Int32Array#get:length
   local.set $len|196
   loop $for-loop|22
    local.get $i|195
    local.get $len|196
    i32.lt_s
    local.set $197
    local.get $197
    if
     local.get $a|193
     local.get $i|195
     call $~lib/typedarray/Int32Array#__get
     local.get $b|194
     local.get $i|195
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/typedarray/isInt32ArrayEqual|inlined.15
     end
     local.get $i|195
     i32.const 1
     i32.add
     local.set $i|195
     br $for-loop|22
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $copy
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/typedarray/Int32Array#slice
  local.set $cwAr
  block $std/typedarray/isInt32ArrayEqual|inlined.16 (result i32)
   local.get $cwAr
   i32.const -4
   i32.const -3
   i32.const -2
   call $~lib/typedarray/Int32Array#copyWithin
   local.set $a|200
   i32.const 5
   i32.const 2
   i32.const 16
   i32.const 1168
   call $~lib/rt/__newArray
   local.set $b|201
   local.get $a|200
   call $~lib/typedarray/Int32Array#get:length
   local.get $b|201
   call $~lib/array/Array<i32>#get:length
   i32.ne
   if
    i32.const 0
    br $std/typedarray/isInt32ArrayEqual|inlined.16
   end
   i32.const 0
   local.set $i|202
   local.get $a|200
   call $~lib/typedarray/Int32Array#get:length
   local.set $len|203
   loop $for-loop|23
    local.get $i|202
    local.get $len|203
    i32.lt_s
    local.set $204
    local.get $204
    if
     local.get $a|200
     local.get $i|202
     call $~lib/typedarray/Int32Array#__get
     local.get $b|201
     local.get $i|202
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/typedarray/isInt32ArrayEqual|inlined.16
     end
     local.get $i|202
     i32.const 1
     i32.add
     local.set $i|202
     br $for-loop|23
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $copy
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/typedarray/Int32Array#slice
  local.set $cwAr
  block $std/typedarray/isInt32ArrayEqual|inlined.17 (result i32)
   local.get $cwAr
   i32.const -4
   i32.const -3
   i32.const -1
   call $~lib/typedarray/Int32Array#copyWithin
   local.set $a|207
   i32.const 5
   i32.const 2
   i32.const 16
   i32.const 1216
   call $~lib/rt/__newArray
   local.set $b|208
   local.get $a|207
   call $~lib/typedarray/Int32Array#get:length
   local.get $b|208
   call $~lib/array/Array<i32>#get:length
   i32.ne
   if
    i32.const 0
    br $std/typedarray/isInt32ArrayEqual|inlined.17
   end
   i32.const 0
   local.set $i|209
   local.get $a|207
   call $~lib/typedarray/Int32Array#get:length
   local.set $len|210
   loop $for-loop|24
    local.get $i|209
    local.get $len|210
    i32.lt_s
    local.set $211
    local.get $211
    if
     local.get $a|207
     local.get $i|209
     call $~lib/typedarray/Int32Array#__get
     local.get $b|208
     local.get $i|209
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/typedarray/isInt32ArrayEqual|inlined.17
     end
     local.get $i|209
     i32.const 1
     i32.add
     local.set $i|209
     br $for-loop|24
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $copy
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/typedarray/Int32Array#slice
  local.set $cwAr
  block $std/typedarray/isInt32ArrayEqual|inlined.18 (result i32)
   local.get $cwAr
   i32.const -4
   i32.const -3
   global.get $~lib/builtins/i32.MAX_VALUE
   call $~lib/typedarray/Int32Array#copyWithin
   local.set $a|214
   i32.const 5
   i32.const 2
   i32.const 16
   i32.const 1264
   call $~lib/rt/__newArray
   local.set $b|215
   local.get $a|214
   call $~lib/typedarray/Int32Array#get:length
   local.get $b|215
   call $~lib/array/Array<i32>#get:length
   i32.ne
   if
    i32.const 0
    br $std/typedarray/isInt32ArrayEqual|inlined.18
   end
   i32.const 0
   local.set $i|216
   local.get $a|214
   call $~lib/typedarray/Int32Array#get:length
   local.set $len|217
   loop $for-loop|25
    local.get $i|216
    local.get $len|217
    i32.lt_s
    local.set $218
    local.get $218
    if
     local.get $a|214
     local.get $i|216
     call $~lib/typedarray/Int32Array#__get
     local.get $b|215
     local.get $i|216
     call $~lib/array/Array<i32>#__get
     i32.ne
     if
      i32.const 0
      br $std/typedarray/isInt32ArrayEqual|inlined.18
     end
     local.get $i|216
     i32.const 1
     i32.add
     local.set $i|216
     br $for-loop|25
    end
   end
   i32.const 1
  end
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 5
  call $~lib/typedarray/Int32Array#constructor
  local.set $arr|219
  local.get $arr|219
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int32Array#__set
  local.get $arr|219
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int32Array#__set
  local.get $arr|219
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int32Array#__set
  local.get $arr|219
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Int32Array#__set
  local.get $arr|219
  i32.const 4
  i32.const 5
  call $~lib/typedarray/Int32Array#__set
  local.get $arr|219
  i32.const 1
  i32.const 4
  call $~lib/typedarray/Int32Array#subarray
  local.set $sub
  local.get $sub
  call $~lib/typedarray/Int32Array#get:length
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sub
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 4
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sub
  i32.load $0 offset=8
  i32.const 12
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $arr|219
  i32.const 1
  i32.const 3
  call $~lib/typedarray/Int32Array#slice
  local.set $sliced
  local.get $sliced
  i32.const 0
  call $~lib/typedarray/Int32Array#__get
  i32.const 2
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced
  i32.const 1
  call $~lib/typedarray/Int32Array#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced
  call $~lib/typedarray/Int32Array#get:length
  i32.const 2
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced
  i32.load $0 offset=8
  i32.const 8
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sub
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int32Array#slice
  local.set $subsliced
  local.get $subsliced
  i32.const 0
  call $~lib/typedarray/Int32Array#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $subsliced
  call $~lib/typedarray/Int32Array#get:length
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $subsliced
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $subsliced
  i32.load $0 offset=8
  i32.const 4
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $arr|219
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/typedarray/Int32Array#slice
  local.set $copy|223
  local.get $copy|223
  local.get $arr|219
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $copy|223
  call $~lib/typedarray/Int32Array#get:length
  local.get $arr|219
  call $~lib/typedarray/Int32Array#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $copy|223
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  local.get $arr|219
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $copy|223
  i32.load $0 offset=8
  local.get $arr|219
  i32.load $0 offset=8
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int8Array#constructor
  local.set $array
  local.get $array
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int8Array#__set
  local.get $array
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int8Array#__set
  local.get $array
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int8Array#__set
  local.get $array
  i32.const 1312
  i32.const 0
  call $~lib/typedarray/Int8Array#reduce<i8>
  local.set $result
  local.get $result
  i32.extend8_s
  i32.const 6
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint8Array#constructor
  local.set $array|226
  local.get $array|226
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint8Array#__set
  local.get $array|226
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint8Array#__set
  local.get $array|226
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint8Array#__set
  local.get $array|226
  i32.const 1344
  i32.const 0
  call $~lib/typedarray/Uint8Array#reduce<u8>
  local.set $result|227
  local.get $result|227
  i32.const 255
  i32.and
  i32.const 6
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint8ClampedArray#constructor
  local.set $array|228
  local.get $array|228
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $array|228
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $array|228
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $array|228
  i32.const 1376
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#reduce<u8>
  local.set $result|229
  local.get $result|229
  i32.const 255
  i32.and
  i32.const 6
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int16Array#constructor
  local.set $array|230
  local.get $array|230
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int16Array#__set
  local.get $array|230
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int16Array#__set
  local.get $array|230
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int16Array#__set
  local.get $array|230
  i32.const 1408
  i32.const 0
  call $~lib/typedarray/Int16Array#reduce<i16>
  local.set $result|231
  local.get $result|231
  i32.extend16_s
  i32.const 6
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint16Array#constructor
  local.set $array|232
  local.get $array|232
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint16Array#__set
  local.get $array|232
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint16Array#__set
  local.get $array|232
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint16Array#__set
  local.get $array|232
  i32.const 1440
  i32.const 0
  call $~lib/typedarray/Uint16Array#reduce<u16>
  local.set $result|233
  local.get $result|233
  i32.const 65535
  i32.and
  i32.const 6
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int32Array#constructor
  local.set $array|234
  local.get $array|234
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int32Array#__set
  local.get $array|234
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int32Array#__set
  local.get $array|234
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int32Array#__set
  local.get $array|234
  i32.const 1472
  i32.const 0
  call $~lib/typedarray/Int32Array#reduce<i32>
  local.set $result|235
  local.get $result|235
  i32.const 6
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint32Array#constructor
  local.set $array|236
  local.get $array|236
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint32Array#__set
  local.get $array|236
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint32Array#__set
  local.get $array|236
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint32Array#__set
  local.get $array|236
  i32.const 1504
  i32.const 0
  call $~lib/typedarray/Uint32Array#reduce<u32>
  local.set $result|237
  local.get $result|237
  i32.const 6
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int64Array#constructor
  local.set $array|238
  local.get $array|238
  i32.const 0
  i64.const 1
  call $~lib/typedarray/Int64Array#__set
  local.get $array|238
  i32.const 1
  i64.const 2
  call $~lib/typedarray/Int64Array#__set
  local.get $array|238
  i32.const 2
  i64.const 3
  call $~lib/typedarray/Int64Array#__set
  local.get $array|238
  i32.const 1536
  i64.const 0
  call $~lib/typedarray/Int64Array#reduce<i64>
  local.set $result|239
  local.get $result|239
  i64.const 6
  i64.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint64Array#constructor
  local.set $array|240
  local.get $array|240
  i32.const 0
  i64.const 1
  call $~lib/typedarray/Uint64Array#__set
  local.get $array|240
  i32.const 1
  i64.const 2
  call $~lib/typedarray/Uint64Array#__set
  local.get $array|240
  i32.const 2
  i64.const 3
  call $~lib/typedarray/Uint64Array#__set
  local.get $array|240
  i32.const 1568
  i64.const 0
  call $~lib/typedarray/Uint64Array#reduce<u64>
  local.set $result|241
  local.get $result|241
  i64.const 6
  i64.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Float32Array#constructor
  local.set $array|242
  local.get $array|242
  i32.const 0
  f32.const 1
  call $~lib/typedarray/Float32Array#__set
  local.get $array|242
  i32.const 1
  f32.const 2
  call $~lib/typedarray/Float32Array#__set
  local.get $array|242
  i32.const 2
  f32.const 3
  call $~lib/typedarray/Float32Array#__set
  local.get $array|242
  i32.const 1600
  f32.const 0
  call $~lib/typedarray/Float32Array#reduce<f32>
  local.set $result|243
  local.get $result|243
  f32.const 6
  f32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Float64Array#constructor
  local.set $array|244
  local.get $array|244
  i32.const 0
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $array|244
  i32.const 1
  f64.const 2
  call $~lib/typedarray/Float64Array#__set
  local.get $array|244
  i32.const 2
  f64.const 3
  call $~lib/typedarray/Float64Array#__set
  local.get $array|244
  i32.const 1632
  f64.const 0
  call $~lib/typedarray/Float64Array#reduce<f64>
  local.set $result|245
  local.get $result|245
  f64.const 6
  f64.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int8Array#constructor
  local.set $array|246
  local.get $array|246
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int8Array#__set
  local.get $array|246
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int8Array#__set
  local.get $array|246
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int8Array#__set
  local.get $array|246
  i32.const 0
  call $~lib/typedarray/Int8Array#at
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|246
  i32.const -1
  call $~lib/typedarray/Int8Array#at
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|246
  i32.const -3
  call $~lib/typedarray/Int8Array#at
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint8Array#constructor
  local.set $array|247
  local.get $array|247
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint8Array#__set
  local.get $array|247
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint8Array#__set
  local.get $array|247
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint8Array#__set
  local.get $array|247
  i32.const 0
  call $~lib/typedarray/Uint8Array#at
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|247
  i32.const -1
  call $~lib/typedarray/Uint8Array#at
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|247
  i32.const -3
  call $~lib/typedarray/Uint8Array#at
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint8ClampedArray#constructor
  local.set $array|248
  local.get $array|248
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $array|248
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $array|248
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $array|248
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#at
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|248
  i32.const -1
  call $~lib/typedarray/Uint8ClampedArray#at
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|248
  i32.const -3
  call $~lib/typedarray/Uint8ClampedArray#at
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int16Array#constructor
  local.set $array|249
  local.get $array|249
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int16Array#__set
  local.get $array|249
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int16Array#__set
  local.get $array|249
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int16Array#__set
  local.get $array|249
  i32.const 0
  call $~lib/typedarray/Int16Array#at
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|249
  i32.const -1
  call $~lib/typedarray/Int16Array#at
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|249
  i32.const -3
  call $~lib/typedarray/Int16Array#at
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint16Array#constructor
  local.set $array|250
  local.get $array|250
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint16Array#__set
  local.get $array|250
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint16Array#__set
  local.get $array|250
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint16Array#__set
  local.get $array|250
  i32.const 0
  call $~lib/typedarray/Uint16Array#at
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|250
  i32.const -1
  call $~lib/typedarray/Uint16Array#at
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|250
  i32.const -3
  call $~lib/typedarray/Uint16Array#at
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int32Array#constructor
  local.set $array|251
  local.get $array|251
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int32Array#__set
  local.get $array|251
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int32Array#__set
  local.get $array|251
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int32Array#__set
  local.get $array|251
  i32.const 0
  call $~lib/typedarray/Int32Array#at
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|251
  i32.const -1
  call $~lib/typedarray/Int32Array#at
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|251
  i32.const -3
  call $~lib/typedarray/Int32Array#at
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint32Array#constructor
  local.set $array|252
  local.get $array|252
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint32Array#__set
  local.get $array|252
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint32Array#__set
  local.get $array|252
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint32Array#__set
  local.get $array|252
  i32.const 0
  call $~lib/typedarray/Uint32Array#at
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|252
  i32.const -1
  call $~lib/typedarray/Uint32Array#at
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|252
  i32.const -3
  call $~lib/typedarray/Uint32Array#at
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int64Array#constructor
  local.set $array|253
  local.get $array|253
  i32.const 0
  i64.const 1
  call $~lib/typedarray/Int64Array#__set
  local.get $array|253
  i32.const 1
  i64.const 2
  call $~lib/typedarray/Int64Array#__set
  local.get $array|253
  i32.const 2
  i64.const 3
  call $~lib/typedarray/Int64Array#__set
  local.get $array|253
  i32.const 0
  call $~lib/typedarray/Int64Array#at
  i64.const 1
  i64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|253
  i32.const -1
  call $~lib/typedarray/Int64Array#at
  i64.const 3
  i64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|253
  i32.const -3
  call $~lib/typedarray/Int64Array#at
  i64.const 1
  i64.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint64Array#constructor
  local.set $array|254
  local.get $array|254
  i32.const 0
  i64.const 1
  call $~lib/typedarray/Uint64Array#__set
  local.get $array|254
  i32.const 1
  i64.const 2
  call $~lib/typedarray/Uint64Array#__set
  local.get $array|254
  i32.const 2
  i64.const 3
  call $~lib/typedarray/Uint64Array#__set
  local.get $array|254
  i32.const 0
  call $~lib/typedarray/Uint64Array#at
  i64.const 1
  i64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|254
  i32.const -1
  call $~lib/typedarray/Uint64Array#at
  i64.const 3
  i64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|254
  i32.const -3
  call $~lib/typedarray/Uint64Array#at
  i64.const 1
  i64.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Float32Array#constructor
  local.set $array|255
  local.get $array|255
  i32.const 0
  f32.const 1
  call $~lib/typedarray/Float32Array#__set
  local.get $array|255
  i32.const 1
  f32.const 2
  call $~lib/typedarray/Float32Array#__set
  local.get $array|255
  i32.const 2
  f32.const 3
  call $~lib/typedarray/Float32Array#__set
  local.get $array|255
  i32.const 0
  call $~lib/typedarray/Float32Array#at
  f32.const 1
  f32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|255
  i32.const -1
  call $~lib/typedarray/Float32Array#at
  f32.const 3
  f32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|255
  i32.const -3
  call $~lib/typedarray/Float32Array#at
  f32.const 1
  f32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Float64Array#constructor
  local.set $array|256
  local.get $array|256
  i32.const 0
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $array|256
  i32.const 1
  f64.const 2
  call $~lib/typedarray/Float64Array#__set
  local.get $array|256
  i32.const 2
  f64.const 3
  call $~lib/typedarray/Float64Array#__set
  local.get $array|256
  i32.const 0
  call $~lib/typedarray/Float64Array#at
  f64.const 1
  f64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|256
  i32.const -1
  call $~lib/typedarray/Float64Array#at
  f64.const 3
  f64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|256
  i32.const -3
  call $~lib/typedarray/Float64Array#at
  f64.const 1
  f64.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int8Array#constructor
  local.set $array|257
  local.get $array|257
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int8Array#__set
  local.get $array|257
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int8Array#__set
  local.get $array|257
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int8Array#__set
  local.get $array|257
  i32.const 1664
  i32.const 0
  call $~lib/typedarray/Int8Array#reduceRight<i8>
  local.set $result|258
  local.get $result|258
  i32.extend8_s
  i32.const 6
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint8Array#constructor
  local.set $array|259
  local.get $array|259
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint8Array#__set
  local.get $array|259
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint8Array#__set
  local.get $array|259
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint8Array#__set
  local.get $array|259
  i32.const 1696
  i32.const 0
  call $~lib/typedarray/Uint8Array#reduceRight<u8>
  local.set $result|260
  local.get $result|260
  i32.const 255
  i32.and
  i32.const 6
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint8ClampedArray#constructor
  local.set $array|261
  local.get $array|261
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $array|261
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $array|261
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $array|261
  i32.const 1728
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#reduceRight<u8>
  local.set $result|262
  local.get $result|262
  i32.const 255
  i32.and
  i32.const 6
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int16Array#constructor
  local.set $array|263
  local.get $array|263
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int16Array#__set
  local.get $array|263
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int16Array#__set
  local.get $array|263
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int16Array#__set
  local.get $array|263
  i32.const 1760
  i32.const 0
  call $~lib/typedarray/Int16Array#reduceRight<i16>
  local.set $result|264
  local.get $result|264
  i32.extend16_s
  i32.const 6
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint16Array#constructor
  local.set $array|265
  local.get $array|265
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint16Array#__set
  local.get $array|265
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint16Array#__set
  local.get $array|265
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint16Array#__set
  local.get $array|265
  i32.const 1792
  i32.const 0
  call $~lib/typedarray/Uint16Array#reduceRight<u16>
  local.set $result|266
  local.get $result|266
  i32.const 65535
  i32.and
  i32.const 6
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int32Array#constructor
  local.set $array|267
  local.get $array|267
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int32Array#__set
  local.get $array|267
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int32Array#__set
  local.get $array|267
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int32Array#__set
  local.get $array|267
  i32.const 1824
  i32.const 0
  call $~lib/typedarray/Int32Array#reduceRight<i32>
  local.set $result|268
  local.get $result|268
  i32.const 6
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint32Array#constructor
  local.set $array|269
  local.get $array|269
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint32Array#__set
  local.get $array|269
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint32Array#__set
  local.get $array|269
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint32Array#__set
  local.get $array|269
  i32.const 1856
  i32.const 0
  call $~lib/typedarray/Uint32Array#reduceRight<u32>
  local.set $result|270
  local.get $result|270
  i32.const 6
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int64Array#constructor
  local.set $array|271
  local.get $array|271
  i32.const 0
  i64.const 1
  call $~lib/typedarray/Int64Array#__set
  local.get $array|271
  i32.const 1
  i64.const 2
  call $~lib/typedarray/Int64Array#__set
  local.get $array|271
  i32.const 2
  i64.const 3
  call $~lib/typedarray/Int64Array#__set
  local.get $array|271
  i32.const 1888
  i64.const 0
  call $~lib/typedarray/Int64Array#reduceRight<i64>
  local.set $result|272
  local.get $result|272
  i64.const 6
  i64.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint64Array#constructor
  local.set $array|273
  local.get $array|273
  i32.const 0
  i64.const 1
  call $~lib/typedarray/Uint64Array#__set
  local.get $array|273
  i32.const 1
  i64.const 2
  call $~lib/typedarray/Uint64Array#__set
  local.get $array|273
  i32.const 2
  i64.const 3
  call $~lib/typedarray/Uint64Array#__set
  local.get $array|273
  i32.const 1920
  i64.const 0
  call $~lib/typedarray/Uint64Array#reduceRight<u64>
  local.set $result|274
  local.get $result|274
  i64.const 6
  i64.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Float32Array#constructor
  local.set $array|275
  local.get $array|275
  i32.const 0
  f32.const 1
  call $~lib/typedarray/Float32Array#__set
  local.get $array|275
  i32.const 1
  f32.const 2
  call $~lib/typedarray/Float32Array#__set
  local.get $array|275
  i32.const 2
  f32.const 3
  call $~lib/typedarray/Float32Array#__set
  local.get $array|275
  i32.const 1952
  f32.const 0
  call $~lib/typedarray/Float32Array#reduceRight<f32>
  local.set $result|276
  local.get $result|276
  f32.const 6
  f32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Float64Array#constructor
  local.set $array|277
  local.get $array|277
  i32.const 0
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $array|277
  i32.const 1
  f64.const 2
  call $~lib/typedarray/Float64Array#__set
  local.get $array|277
  i32.const 2
  f64.const 3
  call $~lib/typedarray/Float64Array#__set
  local.get $array|277
  i32.const 1984
  f64.const 0
  call $~lib/typedarray/Float64Array#reduceRight<f64>
  local.set $result|278
  local.get $result|278
  f64.const 6
  f64.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int8Array#constructor
  local.set $source
  local.get $source
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int8Array#__set
  local.get $source
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int8Array#__set
  local.get $source
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int8Array#__set
  local.get $source
  i32.const 2016
  call $~lib/typedarray/Int8Array#map
  local.set $result|280
  local.get $result|280
  i32.const 0
  call $~lib/typedarray/Int8Array#__get
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|280
  i32.const 1
  call $~lib/typedarray/Int8Array#__get
  i32.const 4
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|280
  i32.const 2
  call $~lib/typedarray/Int8Array#__get
  i32.const 9
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint8Array#constructor
  local.set $source|281
  local.get $source|281
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint8Array#__set
  local.get $source|281
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint8Array#__set
  local.get $source|281
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint8Array#__set
  local.get $source|281
  i32.const 2048
  call $~lib/typedarray/Uint8Array#map
  local.set $result|282
  local.get $result|282
  i32.const 0
  call $~lib/typedarray/Uint8Array#__get
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|282
  i32.const 1
  call $~lib/typedarray/Uint8Array#__get
  i32.const 4
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|282
  i32.const 2
  call $~lib/typedarray/Uint8Array#__get
  i32.const 9
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint8ClampedArray#constructor
  local.set $source|283
  local.get $source|283
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $source|283
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $source|283
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $source|283
  i32.const 2080
  call $~lib/typedarray/Uint8ClampedArray#map
  local.set $result|284
  local.get $result|284
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#__get
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|284
  i32.const 1
  call $~lib/typedarray/Uint8ClampedArray#__get
  i32.const 4
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|284
  i32.const 2
  call $~lib/typedarray/Uint8ClampedArray#__get
  i32.const 9
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int16Array#constructor
  local.set $source|285
  local.get $source|285
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int16Array#__set
  local.get $source|285
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int16Array#__set
  local.get $source|285
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int16Array#__set
  local.get $source|285
  i32.const 2112
  call $~lib/typedarray/Int16Array#map
  local.set $result|286
  local.get $result|286
  i32.const 0
  call $~lib/typedarray/Int16Array#__get
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|286
  i32.const 1
  call $~lib/typedarray/Int16Array#__get
  i32.const 4
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|286
  i32.const 2
  call $~lib/typedarray/Int16Array#__get
  i32.const 9
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint16Array#constructor
  local.set $source|287
  local.get $source|287
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint16Array#__set
  local.get $source|287
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint16Array#__set
  local.get $source|287
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint16Array#__set
  local.get $source|287
  i32.const 2144
  call $~lib/typedarray/Uint16Array#map
  local.set $result|288
  local.get $result|288
  i32.const 0
  call $~lib/typedarray/Uint16Array#__get
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|288
  i32.const 1
  call $~lib/typedarray/Uint16Array#__get
  i32.const 4
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|288
  i32.const 2
  call $~lib/typedarray/Uint16Array#__get
  i32.const 9
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int32Array#constructor
  local.set $source|289
  local.get $source|289
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int32Array#__set
  local.get $source|289
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int32Array#__set
  local.get $source|289
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int32Array#__set
  local.get $source|289
  i32.const 2176
  call $~lib/typedarray/Int32Array#map
  local.set $result|290
  local.get $result|290
  i32.const 0
  call $~lib/typedarray/Int32Array#__get
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|290
  i32.const 1
  call $~lib/typedarray/Int32Array#__get
  i32.const 4
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|290
  i32.const 2
  call $~lib/typedarray/Int32Array#__get
  i32.const 9
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint32Array#constructor
  local.set $source|291
  local.get $source|291
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint32Array#__set
  local.get $source|291
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint32Array#__set
  local.get $source|291
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint32Array#__set
  local.get $source|291
  i32.const 2208
  call $~lib/typedarray/Uint32Array#map
  local.set $result|292
  local.get $result|292
  i32.const 0
  call $~lib/typedarray/Uint32Array#__get
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|292
  i32.const 1
  call $~lib/typedarray/Uint32Array#__get
  i32.const 4
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|292
  i32.const 2
  call $~lib/typedarray/Uint32Array#__get
  i32.const 9
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int64Array#constructor
  local.set $source|293
  local.get $source|293
  i32.const 0
  i64.const 1
  call $~lib/typedarray/Int64Array#__set
  local.get $source|293
  i32.const 1
  i64.const 2
  call $~lib/typedarray/Int64Array#__set
  local.get $source|293
  i32.const 2
  i64.const 3
  call $~lib/typedarray/Int64Array#__set
  local.get $source|293
  i32.const 2240
  call $~lib/typedarray/Int64Array#map
  local.set $result|294
  local.get $result|294
  i32.const 0
  call $~lib/typedarray/Int64Array#__get
  i64.const 1
  i64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|294
  i32.const 1
  call $~lib/typedarray/Int64Array#__get
  i64.const 4
  i64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|294
  i32.const 2
  call $~lib/typedarray/Int64Array#__get
  i64.const 9
  i64.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint64Array#constructor
  local.set $source|295
  local.get $source|295
  i32.const 0
  i64.const 1
  call $~lib/typedarray/Uint64Array#__set
  local.get $source|295
  i32.const 1
  i64.const 2
  call $~lib/typedarray/Uint64Array#__set
  local.get $source|295
  i32.const 2
  i64.const 3
  call $~lib/typedarray/Uint64Array#__set
  local.get $source|295
  i32.const 2272
  call $~lib/typedarray/Uint64Array#map
  local.set $result|296
  local.get $result|296
  i32.const 0
  call $~lib/typedarray/Uint64Array#__get
  i64.const 1
  i64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|296
  i32.const 1
  call $~lib/typedarray/Uint64Array#__get
  i64.const 4
  i64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|296
  i32.const 2
  call $~lib/typedarray/Uint64Array#__get
  i64.const 9
  i64.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Float32Array#constructor
  local.set $source|297
  local.get $source|297
  i32.const 0
  f32.const 1
  call $~lib/typedarray/Float32Array#__set
  local.get $source|297
  i32.const 1
  f32.const 2
  call $~lib/typedarray/Float32Array#__set
  local.get $source|297
  i32.const 2
  f32.const 3
  call $~lib/typedarray/Float32Array#__set
  local.get $source|297
  i32.const 2304
  call $~lib/typedarray/Float32Array#map
  local.set $result|298
  local.get $result|298
  i32.const 0
  call $~lib/typedarray/Float32Array#__get
  f32.const 1
  f32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|298
  i32.const 1
  call $~lib/typedarray/Float32Array#__get
  f32.const 4
  f32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|298
  i32.const 2
  call $~lib/typedarray/Float32Array#__get
  f32.const 9
  f32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Float64Array#constructor
  local.set $source|299
  local.get $source|299
  i32.const 0
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $source|299
  i32.const 1
  f64.const 2
  call $~lib/typedarray/Float64Array#__set
  local.get $source|299
  i32.const 2
  f64.const 3
  call $~lib/typedarray/Float64Array#__set
  local.get $source|299
  i32.const 2336
  call $~lib/typedarray/Float64Array#map
  local.set $result|300
  local.get $result|300
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.const 1
  f64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|300
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.const 4
  f64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|300
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.const 9
  f64.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 6
  call $~lib/typedarray/Int8Array#constructor
  local.set $source|301
  local.get $source|301
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int8Array#__set
  local.get $source|301
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int8Array#__set
  local.get $source|301
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int8Array#__set
  local.get $source|301
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Int8Array#__set
  local.get $source|301
  i32.const 5
  i32.const 5
  call $~lib/typedarray/Int8Array#__set
  local.get $source|301
  i32.const 2368
  call $~lib/typedarray/Int8Array#filter
  local.set $result|302
  local.get $result|302
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|302
  call $~lib/typedarray/Int8Array#get:length
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|302
  i32.const 0
  call $~lib/typedarray/Int8Array#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|302
  i32.const 1
  call $~lib/typedarray/Int8Array#__get
  i32.const 4
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|302
  i32.const 2
  call $~lib/typedarray/Int8Array#__get
  i32.const 5
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 6
  call $~lib/typedarray/Uint8Array#constructor
  local.set $source|303
  local.get $source|303
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint8Array#__set
  local.get $source|303
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint8Array#__set
  local.get $source|303
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint8Array#__set
  local.get $source|303
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Uint8Array#__set
  local.get $source|303
  i32.const 5
  i32.const 5
  call $~lib/typedarray/Uint8Array#__set
  local.get $source|303
  i32.const 2448
  call $~lib/typedarray/Uint8Array#filter
  local.set $result|304
  local.get $result|304
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|304
  call $~lib/typedarray/Uint8Array#get:length
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|304
  i32.const 0
  call $~lib/typedarray/Uint8Array#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|304
  i32.const 1
  call $~lib/typedarray/Uint8Array#__get
  i32.const 4
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|304
  i32.const 2
  call $~lib/typedarray/Uint8Array#__get
  i32.const 5
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 6
  call $~lib/typedarray/Uint8ClampedArray#constructor
  local.set $source|305
  local.get $source|305
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $source|305
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $source|305
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $source|305
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $source|305
  i32.const 5
  i32.const 5
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $source|305
  i32.const 2480
  call $~lib/typedarray/Uint8ClampedArray#filter
  local.set $result|306
  local.get $result|306
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|306
  call $~lib/typedarray/Uint8ClampedArray#get:length
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|306
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|306
  i32.const 1
  call $~lib/typedarray/Uint8ClampedArray#__get
  i32.const 4
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|306
  i32.const 2
  call $~lib/typedarray/Uint8ClampedArray#__get
  i32.const 5
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 6
  call $~lib/typedarray/Int16Array#constructor
  local.set $source|307
  local.get $source|307
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int16Array#__set
  local.get $source|307
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int16Array#__set
  local.get $source|307
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int16Array#__set
  local.get $source|307
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Int16Array#__set
  local.get $source|307
  i32.const 5
  i32.const 5
  call $~lib/typedarray/Int16Array#__set
  local.get $source|307
  i32.const 2512
  call $~lib/typedarray/Int16Array#filter
  local.set $result|308
  local.get $result|308
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|308
  call $~lib/typedarray/Int16Array#get:length
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|308
  i32.const 0
  call $~lib/typedarray/Int16Array#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|308
  i32.const 1
  call $~lib/typedarray/Int16Array#__get
  i32.const 4
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|308
  i32.const 2
  call $~lib/typedarray/Int16Array#__get
  i32.const 5
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 6
  call $~lib/typedarray/Uint16Array#constructor
  local.set $source|309
  local.get $source|309
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint16Array#__set
  local.get $source|309
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint16Array#__set
  local.get $source|309
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint16Array#__set
  local.get $source|309
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Uint16Array#__set
  local.get $source|309
  i32.const 5
  i32.const 5
  call $~lib/typedarray/Uint16Array#__set
  local.get $source|309
  i32.const 2544
  call $~lib/typedarray/Uint16Array#filter
  local.set $result|310
  local.get $result|310
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|310
  call $~lib/typedarray/Uint16Array#get:length
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|310
  i32.const 0
  call $~lib/typedarray/Uint16Array#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|310
  i32.const 1
  call $~lib/typedarray/Uint16Array#__get
  i32.const 4
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|310
  i32.const 2
  call $~lib/typedarray/Uint16Array#__get
  i32.const 5
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 6
  call $~lib/typedarray/Int32Array#constructor
  local.set $source|311
  local.get $source|311
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int32Array#__set
  local.get $source|311
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int32Array#__set
  local.get $source|311
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int32Array#__set
  local.get $source|311
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Int32Array#__set
  local.get $source|311
  i32.const 5
  i32.const 5
  call $~lib/typedarray/Int32Array#__set
  local.get $source|311
  i32.const 2576
  call $~lib/typedarray/Int32Array#filter
  local.set $result|312
  local.get $result|312
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|312
  call $~lib/typedarray/Int32Array#get:length
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|312
  i32.const 0
  call $~lib/typedarray/Int32Array#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|312
  i32.const 1
  call $~lib/typedarray/Int32Array#__get
  i32.const 4
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|312
  i32.const 2
  call $~lib/typedarray/Int32Array#__get
  i32.const 5
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 6
  call $~lib/typedarray/Uint32Array#constructor
  local.set $source|313
  local.get $source|313
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint32Array#__set
  local.get $source|313
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint32Array#__set
  local.get $source|313
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint32Array#__set
  local.get $source|313
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Uint32Array#__set
  local.get $source|313
  i32.const 5
  i32.const 5
  call $~lib/typedarray/Uint32Array#__set
  local.get $source|313
  i32.const 2608
  call $~lib/typedarray/Uint32Array#filter
  local.set $result|314
  local.get $result|314
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|314
  call $~lib/typedarray/Uint32Array#get:length
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|314
  i32.const 0
  call $~lib/typedarray/Uint32Array#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|314
  i32.const 1
  call $~lib/typedarray/Uint32Array#__get
  i32.const 4
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|314
  i32.const 2
  call $~lib/typedarray/Uint32Array#__get
  i32.const 5
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 6
  call $~lib/typedarray/Int64Array#constructor
  local.set $source|315
  local.get $source|315
  i32.const 0
  i64.const 1
  call $~lib/typedarray/Int64Array#__set
  local.get $source|315
  i32.const 1
  i64.const 2
  call $~lib/typedarray/Int64Array#__set
  local.get $source|315
  i32.const 2
  i64.const 3
  call $~lib/typedarray/Int64Array#__set
  local.get $source|315
  i32.const 3
  i64.const 4
  call $~lib/typedarray/Int64Array#__set
  local.get $source|315
  i32.const 5
  i64.const 5
  call $~lib/typedarray/Int64Array#__set
  local.get $source|315
  i32.const 2640
  call $~lib/typedarray/Int64Array#filter
  local.set $result|316
  local.get $result|316
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|316
  call $~lib/typedarray/Int64Array#get:length
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|316
  i32.const 0
  call $~lib/typedarray/Int64Array#__get
  i64.const 3
  i64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|316
  i32.const 1
  call $~lib/typedarray/Int64Array#__get
  i64.const 4
  i64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|316
  i32.const 2
  call $~lib/typedarray/Int64Array#__get
  i64.const 5
  i64.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 6
  call $~lib/typedarray/Uint64Array#constructor
  local.set $source|317
  local.get $source|317
  i32.const 0
  i64.const 1
  call $~lib/typedarray/Uint64Array#__set
  local.get $source|317
  i32.const 1
  i64.const 2
  call $~lib/typedarray/Uint64Array#__set
  local.get $source|317
  i32.const 2
  i64.const 3
  call $~lib/typedarray/Uint64Array#__set
  local.get $source|317
  i32.const 3
  i64.const 4
  call $~lib/typedarray/Uint64Array#__set
  local.get $source|317
  i32.const 5
  i64.const 5
  call $~lib/typedarray/Uint64Array#__set
  local.get $source|317
  i32.const 2672
  call $~lib/typedarray/Uint64Array#filter
  local.set $result|318
  local.get $result|318
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|318
  call $~lib/typedarray/Uint64Array#get:length
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|318
  i32.const 0
  call $~lib/typedarray/Uint64Array#__get
  i64.const 3
  i64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|318
  i32.const 1
  call $~lib/typedarray/Uint64Array#__get
  i64.const 4
  i64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|318
  i32.const 2
  call $~lib/typedarray/Uint64Array#__get
  i64.const 5
  i64.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 6
  call $~lib/typedarray/Float32Array#constructor
  local.set $source|319
  local.get $source|319
  i32.const 0
  f32.const 1
  call $~lib/typedarray/Float32Array#__set
  local.get $source|319
  i32.const 1
  f32.const 2
  call $~lib/typedarray/Float32Array#__set
  local.get $source|319
  i32.const 2
  f32.const 3
  call $~lib/typedarray/Float32Array#__set
  local.get $source|319
  i32.const 3
  f32.const 4
  call $~lib/typedarray/Float32Array#__set
  local.get $source|319
  i32.const 5
  f32.const 5
  call $~lib/typedarray/Float32Array#__set
  local.get $source|319
  i32.const 2704
  call $~lib/typedarray/Float32Array#filter
  local.set $result|320
  local.get $result|320
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|320
  call $~lib/typedarray/Float32Array#get:length
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|320
  i32.const 0
  call $~lib/typedarray/Float32Array#__get
  f32.const 3
  f32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|320
  i32.const 1
  call $~lib/typedarray/Float32Array#__get
  f32.const 4
  f32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|320
  i32.const 2
  call $~lib/typedarray/Float32Array#__get
  f32.const 5
  f32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 6
  call $~lib/typedarray/Float64Array#constructor
  local.set $source|321
  local.get $source|321
  i32.const 0
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $source|321
  i32.const 1
  f64.const 2
  call $~lib/typedarray/Float64Array#__set
  local.get $source|321
  i32.const 2
  f64.const 3
  call $~lib/typedarray/Float64Array#__set
  local.get $source|321
  i32.const 3
  f64.const 4
  call $~lib/typedarray/Float64Array#__set
  local.get $source|321
  i32.const 5
  f64.const 5
  call $~lib/typedarray/Float64Array#__set
  local.get $source|321
  i32.const 2736
  call $~lib/typedarray/Float64Array#filter
  local.set $result|322
  local.get $result|322
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|322
  call $~lib/typedarray/Float64Array#get:length
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|322
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.const 3
  f64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|322
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.const 4
  f64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|322
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.const 5
  f64.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int8Array#constructor
  local.set $source|323
  local.get $source|323
  i32.const 0
  i32.const 2
  call $~lib/typedarray/Int8Array#__set
  local.get $source|323
  i32.const 1
  i32.const 4
  call $~lib/typedarray/Int8Array#__set
  local.get $source|323
  i32.const 2
  i32.const 6
  call $~lib/typedarray/Int8Array#__set
  local.get $source|323
  i32.const 2768
  call $~lib/typedarray/Int8Array#some
  local.set $result|324
  local.get $result|324
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $source|323
  i32.const 2800
  call $~lib/typedarray/Int8Array#some
  local.set $failResult
  local.get $failResult
  i32.eqz
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint8Array#constructor
  local.set $source|326
  local.get $source|326
  i32.const 0
  i32.const 2
  call $~lib/typedarray/Uint8Array#__set
  local.get $source|326
  i32.const 1
  i32.const 4
  call $~lib/typedarray/Uint8Array#__set
  local.get $source|326
  i32.const 2
  i32.const 6
  call $~lib/typedarray/Uint8Array#__set
  local.get $source|326
  i32.const 2832
  call $~lib/typedarray/Uint8Array#some
  local.set $result|327
  local.get $result|327
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $source|326
  i32.const 2864
  call $~lib/typedarray/Uint8Array#some
  local.set $failResult|328
  local.get $failResult|328
  i32.eqz
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint8ClampedArray#constructor
  local.set $source|329
  local.get $source|329
  i32.const 0
  i32.const 2
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $source|329
  i32.const 1
  i32.const 4
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $source|329
  i32.const 2
  i32.const 6
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $source|329
  i32.const 2896
  call $~lib/typedarray/Uint8ClampedArray#some
  local.set $result|330
  local.get $result|330
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $source|329
  i32.const 2928
  call $~lib/typedarray/Uint8ClampedArray#some
  local.set $failResult|331
  local.get $failResult|331
  i32.eqz
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int16Array#constructor
  local.set $source|332
  local.get $source|332
  i32.const 0
  i32.const 2
  call $~lib/typedarray/Int16Array#__set
  local.get $source|332
  i32.const 1
  i32.const 4
  call $~lib/typedarray/Int16Array#__set
  local.get $source|332
  i32.const 2
  i32.const 6
  call $~lib/typedarray/Int16Array#__set
  local.get $source|332
  i32.const 2960
  call $~lib/typedarray/Int16Array#some
  local.set $result|333
  local.get $result|333
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $source|332
  i32.const 2992
  call $~lib/typedarray/Int16Array#some
  local.set $failResult|334
  local.get $failResult|334
  i32.eqz
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint16Array#constructor
  local.set $source|335
  local.get $source|335
  i32.const 0
  i32.const 2
  call $~lib/typedarray/Uint16Array#__set
  local.get $source|335
  i32.const 1
  i32.const 4
  call $~lib/typedarray/Uint16Array#__set
  local.get $source|335
  i32.const 2
  i32.const 6
  call $~lib/typedarray/Uint16Array#__set
  local.get $source|335
  i32.const 3024
  call $~lib/typedarray/Uint16Array#some
  local.set $result|336
  local.get $result|336
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $source|335
  i32.const 3056
  call $~lib/typedarray/Uint16Array#some
  local.set $failResult|337
  local.get $failResult|337
  i32.eqz
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int32Array#constructor
  local.set $source|338
  local.get $source|338
  i32.const 0
  i32.const 2
  call $~lib/typedarray/Int32Array#__set
  local.get $source|338
  i32.const 1
  i32.const 4
  call $~lib/typedarray/Int32Array#__set
  local.get $source|338
  i32.const 2
  i32.const 6
  call $~lib/typedarray/Int32Array#__set
  local.get $source|338
  i32.const 3088
  call $~lib/typedarray/Int32Array#some
  local.set $result|339
  local.get $result|339
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $source|338
  i32.const 3120
  call $~lib/typedarray/Int32Array#some
  local.set $failResult|340
  local.get $failResult|340
  i32.eqz
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint32Array#constructor
  local.set $source|341
  local.get $source|341
  i32.const 0
  i32.const 2
  call $~lib/typedarray/Uint32Array#__set
  local.get $source|341
  i32.const 1
  i32.const 4
  call $~lib/typedarray/Uint32Array#__set
  local.get $source|341
  i32.const 2
  i32.const 6
  call $~lib/typedarray/Uint32Array#__set
  local.get $source|341
  i32.const 3152
  call $~lib/typedarray/Uint32Array#some
  local.set $result|342
  local.get $result|342
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $source|341
  i32.const 3184
  call $~lib/typedarray/Uint32Array#some
  local.set $failResult|343
  local.get $failResult|343
  i32.eqz
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int64Array#constructor
  local.set $source|344
  local.get $source|344
  i32.const 0
  i64.const 2
  call $~lib/typedarray/Int64Array#__set
  local.get $source|344
  i32.const 1
  i64.const 4
  call $~lib/typedarray/Int64Array#__set
  local.get $source|344
  i32.const 2
  i64.const 6
  call $~lib/typedarray/Int64Array#__set
  local.get $source|344
  i32.const 3216
  call $~lib/typedarray/Int64Array#some
  local.set $result|345
  local.get $result|345
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $source|344
  i32.const 3248
  call $~lib/typedarray/Int64Array#some
  local.set $failResult|346
  local.get $failResult|346
  i32.eqz
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint64Array#constructor
  local.set $source|347
  local.get $source|347
  i32.const 0
  i64.const 2
  call $~lib/typedarray/Uint64Array#__set
  local.get $source|347
  i32.const 1
  i64.const 4
  call $~lib/typedarray/Uint64Array#__set
  local.get $source|347
  i32.const 2
  i64.const 6
  call $~lib/typedarray/Uint64Array#__set
  local.get $source|347
  i32.const 3280
  call $~lib/typedarray/Uint64Array#some
  local.set $result|348
  local.get $result|348
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $source|347
  i32.const 3312
  call $~lib/typedarray/Uint64Array#some
  local.set $failResult|349
  local.get $failResult|349
  i32.eqz
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Float32Array#constructor
  local.set $source|350
  local.get $source|350
  i32.const 0
  f32.const 2
  call $~lib/typedarray/Float32Array#__set
  local.get $source|350
  i32.const 1
  f32.const 4
  call $~lib/typedarray/Float32Array#__set
  local.get $source|350
  i32.const 2
  f32.const 6
  call $~lib/typedarray/Float32Array#__set
  local.get $source|350
  i32.const 3344
  call $~lib/typedarray/Float32Array#some
  local.set $result|351
  local.get $result|351
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $source|350
  i32.const 3376
  call $~lib/typedarray/Float32Array#some
  local.set $failResult|352
  local.get $failResult|352
  i32.eqz
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Float64Array#constructor
  local.set $source|353
  local.get $source|353
  i32.const 0
  f64.const 2
  call $~lib/typedarray/Float64Array#__set
  local.get $source|353
  i32.const 1
  f64.const 4
  call $~lib/typedarray/Float64Array#__set
  local.get $source|353
  i32.const 2
  f64.const 6
  call $~lib/typedarray/Float64Array#__set
  local.get $source|353
  i32.const 3408
  call $~lib/typedarray/Float64Array#some
  local.set $result|354
  local.get $result|354
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $source|353
  i32.const 3440
  call $~lib/typedarray/Float64Array#some
  local.set $failResult|355
  local.get $failResult|355
  i32.eqz
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int8Array#constructor
  local.set $source|356
  local.get $source|356
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int8Array#__set
  local.get $source|356
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int8Array#__set
  local.get $source|356
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int8Array#__set
  local.get $source|356
  i32.const 3472
  call $~lib/typedarray/Int8Array#findIndex
  local.set $result|357
  local.get $result|357
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $source|356
  i32.const 3504
  call $~lib/typedarray/Int8Array#findIndex
  local.set $failResult|358
  local.get $failResult|358
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint8Array#constructor
  local.set $source|359
  local.get $source|359
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint8Array#__set
  local.get $source|359
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint8Array#__set
  local.get $source|359
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint8Array#__set
  local.get $source|359
  i32.const 3536
  call $~lib/typedarray/Uint8Array#findIndex
  local.set $result|360
  local.get $result|360
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $source|359
  i32.const 3568
  call $~lib/typedarray/Uint8Array#findIndex
  local.set $failResult|361
  local.get $failResult|361
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint8ClampedArray#constructor
  local.set $source|362
  local.get $source|362
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $source|362
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $source|362
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $source|362
  i32.const 3600
  call $~lib/typedarray/Uint8ClampedArray#findIndex
  local.set $result|363
  local.get $result|363
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $source|362
  i32.const 3632
  call $~lib/typedarray/Uint8ClampedArray#findIndex
  local.set $failResult|364
  local.get $failResult|364
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int16Array#constructor
  local.set $source|365
  local.get $source|365
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int16Array#__set
  local.get $source|365
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int16Array#__set
  local.get $source|365
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int16Array#__set
  local.get $source|365
  i32.const 3664
  call $~lib/typedarray/Int16Array#findIndex
  local.set $result|366
  local.get $result|366
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $source|365
  i32.const 3696
  call $~lib/typedarray/Int16Array#findIndex
  local.set $failResult|367
  local.get $failResult|367
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint16Array#constructor
  local.set $source|368
  local.get $source|368
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint16Array#__set
  local.get $source|368
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint16Array#__set
  local.get $source|368
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint16Array#__set
  local.get $source|368
  i32.const 3728
  call $~lib/typedarray/Uint16Array#findIndex
  local.set $result|369
  local.get $result|369
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $source|368
  i32.const 3760
  call $~lib/typedarray/Uint16Array#findIndex
  local.set $failResult|370
  local.get $failResult|370
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int32Array#constructor
  local.set $source|371
  local.get $source|371
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int32Array#__set
  local.get $source|371
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int32Array#__set
  local.get $source|371
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int32Array#__set
  local.get $source|371
  i32.const 3792
  call $~lib/typedarray/Int32Array#findIndex
  local.set $result|372
  local.get $result|372
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $source|371
  i32.const 3824
  call $~lib/typedarray/Int32Array#findIndex
  local.set $failResult|373
  local.get $failResult|373
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint32Array#constructor
  local.set $source|374
  local.get $source|374
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint32Array#__set
  local.get $source|374
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint32Array#__set
  local.get $source|374
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint32Array#__set
  local.get $source|374
  i32.const 3856
  call $~lib/typedarray/Uint32Array#findIndex
  local.set $result|375
  local.get $result|375
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $source|374
  i32.const 3888
  call $~lib/typedarray/Uint32Array#findIndex
  local.set $failResult|376
  local.get $failResult|376
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int64Array#constructor
  local.set $source|377
  local.get $source|377
  i32.const 0
  i64.const 1
  call $~lib/typedarray/Int64Array#__set
  local.get $source|377
  i32.const 1
  i64.const 2
  call $~lib/typedarray/Int64Array#__set
  local.get $source|377
  i32.const 2
  i64.const 3
  call $~lib/typedarray/Int64Array#__set
  local.get $source|377
  i32.const 3920
  call $~lib/typedarray/Int64Array#findIndex
  local.set $result|378
  local.get $result|378
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $source|377
  i32.const 3952
  call $~lib/typedarray/Int64Array#findIndex
  local.set $failResult|379
  local.get $failResult|379
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint64Array#constructor
  local.set $source|380
  local.get $source|380
  i32.const 0
  i64.const 1
  call $~lib/typedarray/Uint64Array#__set
  local.get $source|380
  i32.const 1
  i64.const 2
  call $~lib/typedarray/Uint64Array#__set
  local.get $source|380
  i32.const 2
  i64.const 3
  call $~lib/typedarray/Uint64Array#__set
  local.get $source|380
  i32.const 3984
  call $~lib/typedarray/Uint64Array#findIndex
  local.set $result|381
  local.get $result|381
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $source|380
  i32.const 4016
  call $~lib/typedarray/Uint64Array#findIndex
  local.set $failResult|382
  local.get $failResult|382
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Float32Array#constructor
  local.set $source|383
  local.get $source|383
  i32.const 0
  f32.const 1
  call $~lib/typedarray/Float32Array#__set
  local.get $source|383
  i32.const 1
  f32.const 2
  call $~lib/typedarray/Float32Array#__set
  local.get $source|383
  i32.const 2
  f32.const 3
  call $~lib/typedarray/Float32Array#__set
  local.get $source|383
  i32.const 4048
  call $~lib/typedarray/Float32Array#findIndex
  local.set $result|384
  local.get $result|384
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $source|383
  i32.const 4080
  call $~lib/typedarray/Float32Array#findIndex
  local.set $failResult|385
  local.get $failResult|385
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Float64Array#constructor
  local.set $source|386
  local.get $source|386
  i32.const 0
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $source|386
  i32.const 1
  f64.const 2
  call $~lib/typedarray/Float64Array#__set
  local.get $source|386
  i32.const 2
  f64.const 3
  call $~lib/typedarray/Float64Array#__set
  local.get $source|386
  i32.const 4112
  call $~lib/typedarray/Float64Array#findIndex
  local.set $result|387
  local.get $result|387
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $source|386
  i32.const 4144
  call $~lib/typedarray/Float64Array#findIndex
  local.set $failResult|388
  local.get $failResult|388
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int8Array#constructor
  local.set $source|389
  local.get $source|389
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int8Array#__set
  local.get $source|389
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int8Array#__set
  local.get $source|389
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int8Array#__set
  local.get $source|389
  i32.const 4176
  call $~lib/typedarray/Int8Array#findLastIndex
  local.set $result|390
  local.get $result|390
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $source|389
  i32.const 4208
  call $~lib/typedarray/Int8Array#findLastIndex
  local.set $failResult|391
  local.get $failResult|391
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint8Array#constructor
  local.set $source|392
  local.get $source|392
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint8Array#__set
  local.get $source|392
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint8Array#__set
  local.get $source|392
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint8Array#__set
  local.get $source|392
  i32.const 4240
  call $~lib/typedarray/Uint8Array#findLastIndex
  local.set $result|393
  local.get $result|393
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $source|392
  i32.const 4272
  call $~lib/typedarray/Uint8Array#findLastIndex
  local.set $failResult|394
  local.get $failResult|394
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint8ClampedArray#constructor
  local.set $source|395
  local.get $source|395
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $source|395
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $source|395
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $source|395
  i32.const 4304
  call $~lib/typedarray/Uint8ClampedArray#findLastIndex
  local.set $result|396
  local.get $result|396
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $source|395
  i32.const 4336
  call $~lib/typedarray/Uint8ClampedArray#findLastIndex
  local.set $failResult|397
  local.get $failResult|397
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int16Array#constructor
  local.set $source|398
  local.get $source|398
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int16Array#__set
  local.get $source|398
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int16Array#__set
  local.get $source|398
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int16Array#__set
  local.get $source|398
  i32.const 4368
  call $~lib/typedarray/Int16Array#findLastIndex
  local.set $result|399
  local.get $result|399
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $source|398
  i32.const 4400
  call $~lib/typedarray/Int16Array#findLastIndex
  local.set $failResult|400
  local.get $failResult|400
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint16Array#constructor
  local.set $source|401
  local.get $source|401
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint16Array#__set
  local.get $source|401
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint16Array#__set
  local.get $source|401
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint16Array#__set
  local.get $source|401
  i32.const 4432
  call $~lib/typedarray/Uint16Array#findLastIndex
  local.set $result|402
  local.get $result|402
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $source|401
  i32.const 4464
  call $~lib/typedarray/Uint16Array#findLastIndex
  local.set $failResult|403
  local.get $failResult|403
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int32Array#constructor
  local.set $source|404
  local.get $source|404
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int32Array#__set
  local.get $source|404
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int32Array#__set
  local.get $source|404
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int32Array#__set
  local.get $source|404
  i32.const 4496
  call $~lib/typedarray/Int32Array#findLastIndex
  local.set $result|405
  local.get $result|405
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $source|404
  i32.const 4528
  call $~lib/typedarray/Int32Array#findLastIndex
  local.set $failResult|406
  local.get $failResult|406
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint32Array#constructor
  local.set $source|407
  local.get $source|407
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint32Array#__set
  local.get $source|407
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint32Array#__set
  local.get $source|407
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint32Array#__set
  local.get $source|407
  i32.const 4560
  call $~lib/typedarray/Uint32Array#findLastIndex
  local.set $result|408
  local.get $result|408
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $source|407
  i32.const 4592
  call $~lib/typedarray/Uint32Array#findLastIndex
  local.set $failResult|409
  local.get $failResult|409
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int64Array#constructor
  local.set $source|410
  local.get $source|410
  i32.const 0
  i64.const 1
  call $~lib/typedarray/Int64Array#__set
  local.get $source|410
  i32.const 1
  i64.const 2
  call $~lib/typedarray/Int64Array#__set
  local.get $source|410
  i32.const 2
  i64.const 3
  call $~lib/typedarray/Int64Array#__set
  local.get $source|410
  i32.const 4624
  call $~lib/typedarray/Int64Array#findLastIndex
  local.set $result|411
  local.get $result|411
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $source|410
  i32.const 4656
  call $~lib/typedarray/Int64Array#findLastIndex
  local.set $failResult|412
  local.get $failResult|412
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint64Array#constructor
  local.set $source|413
  local.get $source|413
  i32.const 0
  i64.const 1
  call $~lib/typedarray/Uint64Array#__set
  local.get $source|413
  i32.const 1
  i64.const 2
  call $~lib/typedarray/Uint64Array#__set
  local.get $source|413
  i32.const 2
  i64.const 3
  call $~lib/typedarray/Uint64Array#__set
  local.get $source|413
  i32.const 4688
  call $~lib/typedarray/Uint64Array#findLastIndex
  local.set $result|414
  local.get $result|414
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $source|413
  i32.const 4720
  call $~lib/typedarray/Uint64Array#findLastIndex
  local.set $failResult|415
  local.get $failResult|415
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Float32Array#constructor
  local.set $source|416
  local.get $source|416
  i32.const 0
  f32.const 1
  call $~lib/typedarray/Float32Array#__set
  local.get $source|416
  i32.const 1
  f32.const 2
  call $~lib/typedarray/Float32Array#__set
  local.get $source|416
  i32.const 2
  f32.const 3
  call $~lib/typedarray/Float32Array#__set
  local.get $source|416
  i32.const 4752
  call $~lib/typedarray/Float32Array#findLastIndex
  local.set $result|417
  local.get $result|417
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $source|416
  i32.const 4784
  call $~lib/typedarray/Float32Array#findLastIndex
  local.set $failResult|418
  local.get $failResult|418
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Float64Array#constructor
  local.set $source|419
  local.get $source|419
  i32.const 0
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $source|419
  i32.const 1
  f64.const 2
  call $~lib/typedarray/Float64Array#__set
  local.get $source|419
  i32.const 2
  f64.const 3
  call $~lib/typedarray/Float64Array#__set
  local.get $source|419
  i32.const 4816
  call $~lib/typedarray/Float64Array#findLastIndex
  local.set $result|420
  local.get $result|420
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $source|419
  i32.const 4848
  call $~lib/typedarray/Float64Array#findLastIndex
  local.set $failResult|421
  local.get $failResult|421
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int8Array#constructor
  local.set $source|422
  local.get $source|422
  i32.const 0
  i32.const 2
  call $~lib/typedarray/Int8Array#__set
  local.get $source|422
  i32.const 1
  i32.const 4
  call $~lib/typedarray/Int8Array#__set
  local.get $source|422
  i32.const 2
  i32.const 6
  call $~lib/typedarray/Int8Array#__set
  local.get $source|422
  i32.const 4880
  call $~lib/typedarray/Int8Array#every
  local.set $result|423
  local.get $result|423
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $source|422
  i32.const 4912
  call $~lib/typedarray/Int8Array#every
  local.set $failResult|424
  local.get $failResult|424
  i32.eqz
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint8Array#constructor
  local.set $source|425
  local.get $source|425
  i32.const 0
  i32.const 2
  call $~lib/typedarray/Uint8Array#__set
  local.get $source|425
  i32.const 1
  i32.const 4
  call $~lib/typedarray/Uint8Array#__set
  local.get $source|425
  i32.const 2
  i32.const 6
  call $~lib/typedarray/Uint8Array#__set
  local.get $source|425
  i32.const 4944
  call $~lib/typedarray/Uint8Array#every
  local.set $result|426
  local.get $result|426
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $source|425
  i32.const 4976
  call $~lib/typedarray/Uint8Array#every
  local.set $failResult|427
  local.get $failResult|427
  i32.eqz
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint8ClampedArray#constructor
  local.set $source|428
  local.get $source|428
  i32.const 0
  i32.const 2
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $source|428
  i32.const 1
  i32.const 4
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $source|428
  i32.const 2
  i32.const 6
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $source|428
  i32.const 5008
  call $~lib/typedarray/Uint8ClampedArray#every
  local.set $result|429
  local.get $result|429
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $source|428
  i32.const 5040
  call $~lib/typedarray/Uint8ClampedArray#every
  local.set $failResult|430
  local.get $failResult|430
  i32.eqz
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int16Array#constructor
  local.set $source|431
  local.get $source|431
  i32.const 0
  i32.const 2
  call $~lib/typedarray/Int16Array#__set
  local.get $source|431
  i32.const 1
  i32.const 4
  call $~lib/typedarray/Int16Array#__set
  local.get $source|431
  i32.const 2
  i32.const 6
  call $~lib/typedarray/Int16Array#__set
  local.get $source|431
  i32.const 5072
  call $~lib/typedarray/Int16Array#every
  local.set $result|432
  local.get $result|432
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $source|431
  i32.const 5104
  call $~lib/typedarray/Int16Array#every
  local.set $failResult|433
  local.get $failResult|433
  i32.eqz
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint16Array#constructor
  local.set $source|434
  local.get $source|434
  i32.const 0
  i32.const 2
  call $~lib/typedarray/Uint16Array#__set
  local.get $source|434
  i32.const 1
  i32.const 4
  call $~lib/typedarray/Uint16Array#__set
  local.get $source|434
  i32.const 2
  i32.const 6
  call $~lib/typedarray/Uint16Array#__set
  local.get $source|434
  i32.const 5136
  call $~lib/typedarray/Uint16Array#every
  local.set $result|435
  local.get $result|435
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $source|434
  i32.const 5168
  call $~lib/typedarray/Uint16Array#every
  local.set $failResult|436
  local.get $failResult|436
  i32.eqz
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int32Array#constructor
  local.set $source|437
  local.get $source|437
  i32.const 0
  i32.const 2
  call $~lib/typedarray/Int32Array#__set
  local.get $source|437
  i32.const 1
  i32.const 4
  call $~lib/typedarray/Int32Array#__set
  local.get $source|437
  i32.const 2
  i32.const 6
  call $~lib/typedarray/Int32Array#__set
  local.get $source|437
  i32.const 5200
  call $~lib/typedarray/Int32Array#every
  local.set $result|438
  local.get $result|438
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $source|437
  i32.const 5232
  call $~lib/typedarray/Int32Array#every
  local.set $failResult|439
  local.get $failResult|439
  i32.eqz
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint32Array#constructor
  local.set $source|440
  local.get $source|440
  i32.const 0
  i32.const 2
  call $~lib/typedarray/Uint32Array#__set
  local.get $source|440
  i32.const 1
  i32.const 4
  call $~lib/typedarray/Uint32Array#__set
  local.get $source|440
  i32.const 2
  i32.const 6
  call $~lib/typedarray/Uint32Array#__set
  local.get $source|440
  i32.const 5264
  call $~lib/typedarray/Uint32Array#every
  local.set $result|441
  local.get $result|441
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $source|440
  i32.const 5296
  call $~lib/typedarray/Uint32Array#every
  local.set $failResult|442
  local.get $failResult|442
  i32.eqz
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int64Array#constructor
  local.set $source|443
  local.get $source|443
  i32.const 0
  i64.const 2
  call $~lib/typedarray/Int64Array#__set
  local.get $source|443
  i32.const 1
  i64.const 4
  call $~lib/typedarray/Int64Array#__set
  local.get $source|443
  i32.const 2
  i64.const 6
  call $~lib/typedarray/Int64Array#__set
  local.get $source|443
  i32.const 5328
  call $~lib/typedarray/Int64Array#every
  local.set $result|444
  local.get $result|444
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $source|443
  i32.const 5360
  call $~lib/typedarray/Int64Array#every
  local.set $failResult|445
  local.get $failResult|445
  i32.eqz
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint64Array#constructor
  local.set $source|446
  local.get $source|446
  i32.const 0
  i64.const 2
  call $~lib/typedarray/Uint64Array#__set
  local.get $source|446
  i32.const 1
  i64.const 4
  call $~lib/typedarray/Uint64Array#__set
  local.get $source|446
  i32.const 2
  i64.const 6
  call $~lib/typedarray/Uint64Array#__set
  local.get $source|446
  i32.const 5392
  call $~lib/typedarray/Uint64Array#every
  local.set $result|447
  local.get $result|447
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $source|446
  i32.const 5424
  call $~lib/typedarray/Uint64Array#every
  local.set $failResult|448
  local.get $failResult|448
  i32.eqz
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Float32Array#constructor
  local.set $source|449
  local.get $source|449
  i32.const 0
  f32.const 2
  call $~lib/typedarray/Float32Array#__set
  local.get $source|449
  i32.const 1
  f32.const 4
  call $~lib/typedarray/Float32Array#__set
  local.get $source|449
  i32.const 2
  f32.const 6
  call $~lib/typedarray/Float32Array#__set
  local.get $source|449
  i32.const 5456
  call $~lib/typedarray/Float32Array#every
  local.set $result|450
  local.get $result|450
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $source|449
  i32.const 5488
  call $~lib/typedarray/Float32Array#every
  local.set $failResult|451
  local.get $failResult|451
  i32.eqz
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Float64Array#constructor
  local.set $source|452
  local.get $source|452
  i32.const 0
  f64.const 2
  call $~lib/typedarray/Float64Array#__set
  local.get $source|452
  i32.const 1
  f64.const 4
  call $~lib/typedarray/Float64Array#__set
  local.get $source|452
  i32.const 2
  f64.const 6
  call $~lib/typedarray/Float64Array#__set
  local.get $source|452
  i32.const 5520
  call $~lib/typedarray/Float64Array#every
  local.set $result|453
  local.get $result|453
  i32.const 0
  i32.ne
  i32.eqz
  if
   unreachable
  end
  local.get $source|452
  i32.const 5552
  call $~lib/typedarray/Float64Array#every
  local.set $failResult|454
  local.get $failResult|454
  i32.eqz
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  global.set $std/typedarray/forEachCallCount
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int8Array#constructor
  local.set $array|457
  local.get $array|457
  global.set $std/typedarray/forEachSelf
  local.get $array|457
  i32.const 0
  global.get $std/typedarray/forEachValues
  i32.const 0
  call $~lib/array/Array<i32>#__get
  i32.extend8_s
  call $~lib/typedarray/Int8Array#__set
  local.get $array|457
  i32.const 1
  global.get $std/typedarray/forEachValues
  i32.const 1
  call $~lib/array/Array<i32>#__get
  i32.extend8_s
  call $~lib/typedarray/Int8Array#__set
  local.get $array|457
  i32.const 2
  global.get $std/typedarray/forEachValues
  i32.const 2
  call $~lib/array/Array<i32>#__get
  i32.extend8_s
  call $~lib/typedarray/Int8Array#__set
  local.get $array|457
  i32.const 5664
  call $~lib/typedarray/Int8Array#forEach
  global.get $std/typedarray/forEachCallCount
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  global.set $std/typedarray/forEachCallCount
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint8Array#constructor
  local.set $array|458
  local.get $array|458
  global.set $std/typedarray/forEachSelf
  local.get $array|458
  i32.const 0
  global.get $std/typedarray/forEachValues
  i32.const 0
  call $~lib/array/Array<i32>#__get
  i32.const 255
  i32.and
  call $~lib/typedarray/Uint8Array#__set
  local.get $array|458
  i32.const 1
  global.get $std/typedarray/forEachValues
  i32.const 1
  call $~lib/array/Array<i32>#__get
  i32.const 255
  i32.and
  call $~lib/typedarray/Uint8Array#__set
  local.get $array|458
  i32.const 2
  global.get $std/typedarray/forEachValues
  i32.const 2
  call $~lib/array/Array<i32>#__get
  i32.const 255
  i32.and
  call $~lib/typedarray/Uint8Array#__set
  local.get $array|458
  i32.const 5696
  call $~lib/typedarray/Uint8Array#forEach
  global.get $std/typedarray/forEachCallCount
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  global.set $std/typedarray/forEachCallCount
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint8ClampedArray#constructor
  local.set $array|459
  local.get $array|459
  global.set $std/typedarray/forEachSelf
  local.get $array|459
  i32.const 0
  global.get $std/typedarray/forEachValues
  i32.const 0
  call $~lib/array/Array<i32>#__get
  i32.const 255
  i32.and
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $array|459
  i32.const 1
  global.get $std/typedarray/forEachValues
  i32.const 1
  call $~lib/array/Array<i32>#__get
  i32.const 255
  i32.and
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $array|459
  i32.const 2
  global.get $std/typedarray/forEachValues
  i32.const 2
  call $~lib/array/Array<i32>#__get
  i32.const 255
  i32.and
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $array|459
  i32.const 5728
  call $~lib/typedarray/Uint8ClampedArray#forEach
  global.get $std/typedarray/forEachCallCount
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  global.set $std/typedarray/forEachCallCount
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int16Array#constructor
  local.set $array|460
  local.get $array|460
  global.set $std/typedarray/forEachSelf
  local.get $array|460
  i32.const 0
  global.get $std/typedarray/forEachValues
  i32.const 0
  call $~lib/array/Array<i32>#__get
  i32.extend16_s
  call $~lib/typedarray/Int16Array#__set
  local.get $array|460
  i32.const 1
  global.get $std/typedarray/forEachValues
  i32.const 1
  call $~lib/array/Array<i32>#__get
  i32.extend16_s
  call $~lib/typedarray/Int16Array#__set
  local.get $array|460
  i32.const 2
  global.get $std/typedarray/forEachValues
  i32.const 2
  call $~lib/array/Array<i32>#__get
  i32.extend16_s
  call $~lib/typedarray/Int16Array#__set
  local.get $array|460
  i32.const 5760
  call $~lib/typedarray/Int16Array#forEach
  global.get $std/typedarray/forEachCallCount
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  global.set $std/typedarray/forEachCallCount
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint16Array#constructor
  local.set $array|461
  local.get $array|461
  global.set $std/typedarray/forEachSelf
  local.get $array|461
  i32.const 0
  global.get $std/typedarray/forEachValues
  i32.const 0
  call $~lib/array/Array<i32>#__get
  i32.const 65535
  i32.and
  call $~lib/typedarray/Uint16Array#__set
  local.get $array|461
  i32.const 1
  global.get $std/typedarray/forEachValues
  i32.const 1
  call $~lib/array/Array<i32>#__get
  i32.const 65535
  i32.and
  call $~lib/typedarray/Uint16Array#__set
  local.get $array|461
  i32.const 2
  global.get $std/typedarray/forEachValues
  i32.const 2
  call $~lib/array/Array<i32>#__get
  i32.const 65535
  i32.and
  call $~lib/typedarray/Uint16Array#__set
  local.get $array|461
  i32.const 5792
  call $~lib/typedarray/Uint16Array#forEach
  global.get $std/typedarray/forEachCallCount
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  global.set $std/typedarray/forEachCallCount
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int32Array#constructor
  local.set $array|462
  local.get $array|462
  global.set $std/typedarray/forEachSelf
  local.get $array|462
  i32.const 0
  global.get $std/typedarray/forEachValues
  i32.const 0
  call $~lib/array/Array<i32>#__get
  call $~lib/typedarray/Int32Array#__set
  local.get $array|462
  i32.const 1
  global.get $std/typedarray/forEachValues
  i32.const 1
  call $~lib/array/Array<i32>#__get
  call $~lib/typedarray/Int32Array#__set
  local.get $array|462
  i32.const 2
  global.get $std/typedarray/forEachValues
  i32.const 2
  call $~lib/array/Array<i32>#__get
  call $~lib/typedarray/Int32Array#__set
  local.get $array|462
  i32.const 5824
  call $~lib/typedarray/Int32Array#forEach
  global.get $std/typedarray/forEachCallCount
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  global.set $std/typedarray/forEachCallCount
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint32Array#constructor
  local.set $array|463
  local.get $array|463
  global.set $std/typedarray/forEachSelf
  local.get $array|463
  i32.const 0
  global.get $std/typedarray/forEachValues
  i32.const 0
  call $~lib/array/Array<i32>#__get
  call $~lib/typedarray/Uint32Array#__set
  local.get $array|463
  i32.const 1
  global.get $std/typedarray/forEachValues
  i32.const 1
  call $~lib/array/Array<i32>#__get
  call $~lib/typedarray/Uint32Array#__set
  local.get $array|463
  i32.const 2
  global.get $std/typedarray/forEachValues
  i32.const 2
  call $~lib/array/Array<i32>#__get
  call $~lib/typedarray/Uint32Array#__set
  local.get $array|463
  i32.const 5856
  call $~lib/typedarray/Uint32Array#forEach
  global.get $std/typedarray/forEachCallCount
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  global.set $std/typedarray/forEachCallCount
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int64Array#constructor
  local.set $array|464
  local.get $array|464
  global.set $std/typedarray/forEachSelf
  local.get $array|464
  i32.const 0
  global.get $std/typedarray/forEachValues
  i32.const 0
  call $~lib/array/Array<i32>#__get
  i64.extend_i32_s
  call $~lib/typedarray/Int64Array#__set
  local.get $array|464
  i32.const 1
  global.get $std/typedarray/forEachValues
  i32.const 1
  call $~lib/array/Array<i32>#__get
  i64.extend_i32_s
  call $~lib/typedarray/Int64Array#__set
  local.get $array|464
  i32.const 2
  global.get $std/typedarray/forEachValues
  i32.const 2
  call $~lib/array/Array<i32>#__get
  i64.extend_i32_s
  call $~lib/typedarray/Int64Array#__set
  local.get $array|464
  i32.const 5888
  call $~lib/typedarray/Int64Array#forEach
  global.get $std/typedarray/forEachCallCount
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  global.set $std/typedarray/forEachCallCount
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint64Array#constructor
  local.set $array|465
  local.get $array|465
  global.set $std/typedarray/forEachSelf
  local.get $array|465
  i32.const 0
  global.get $std/typedarray/forEachValues
  i32.const 0
  call $~lib/array/Array<i32>#__get
  i64.extend_i32_s
  call $~lib/typedarray/Uint64Array#__set
  local.get $array|465
  i32.const 1
  global.get $std/typedarray/forEachValues
  i32.const 1
  call $~lib/array/Array<i32>#__get
  i64.extend_i32_s
  call $~lib/typedarray/Uint64Array#__set
  local.get $array|465
  i32.const 2
  global.get $std/typedarray/forEachValues
  i32.const 2
  call $~lib/array/Array<i32>#__get
  i64.extend_i32_s
  call $~lib/typedarray/Uint64Array#__set
  local.get $array|465
  i32.const 5920
  call $~lib/typedarray/Uint64Array#forEach
  global.get $std/typedarray/forEachCallCount
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  global.set $std/typedarray/forEachCallCount
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Float32Array#constructor
  local.set $array|466
  local.get $array|466
  global.set $std/typedarray/forEachSelf
  local.get $array|466
  i32.const 0
  global.get $std/typedarray/forEachValues
  i32.const 0
  call $~lib/array/Array<i32>#__get
  f32.convert_i32_s
  call $~lib/typedarray/Float32Array#__set
  local.get $array|466
  i32.const 1
  global.get $std/typedarray/forEachValues
  i32.const 1
  call $~lib/array/Array<i32>#__get
  f32.convert_i32_s
  call $~lib/typedarray/Float32Array#__set
  local.get $array|466
  i32.const 2
  global.get $std/typedarray/forEachValues
  i32.const 2
  call $~lib/array/Array<i32>#__get
  f32.convert_i32_s
  call $~lib/typedarray/Float32Array#__set
  local.get $array|466
  i32.const 5952
  call $~lib/typedarray/Float32Array#forEach
  global.get $std/typedarray/forEachCallCount
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  global.set $std/typedarray/forEachCallCount
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Float64Array#constructor
  local.set $array|467
  local.get $array|467
  global.set $std/typedarray/forEachSelf
  local.get $array|467
  i32.const 0
  global.get $std/typedarray/forEachValues
  i32.const 0
  call $~lib/array/Array<i32>#__get
  f64.convert_i32_s
  call $~lib/typedarray/Float64Array#__set
  local.get $array|467
  i32.const 1
  global.get $std/typedarray/forEachValues
  i32.const 1
  call $~lib/array/Array<i32>#__get
  f64.convert_i32_s
  call $~lib/typedarray/Float64Array#__set
  local.get $array|467
  i32.const 2
  global.get $std/typedarray/forEachValues
  i32.const 2
  call $~lib/array/Array<i32>#__get
  f64.convert_i32_s
  call $~lib/typedarray/Float64Array#__set
  local.get $array|467
  i32.const 5984
  call $~lib/typedarray/Float64Array#forEach
  global.get $std/typedarray/forEachCallCount
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/typedarray/testArrayReverseValues
  local.set $values
  local.get $values
  call $~lib/array/Array<i32>#get:length
  local.set $length
  i32.const 0
  local.get $length
  call $~lib/typedarray/Int8Array#constructor
  local.set $array|472
  i32.const 0
  local.get $length
  call $~lib/typedarray/Int8Array#constructor
  local.set $arrayWithOffset
  i32.const 0
  local.set $i|474
  loop $for-loop|26
   local.get $i|474
   local.get $length
   i32.lt_s
   local.set $475
   local.get $475
   if
    local.get $array|472
    local.get $i|474
    local.get $values
    local.get $i|474
    call $~lib/array/Array<i32>#__get
    i32.extend8_s
    call $~lib/typedarray/Int8Array#__set
    local.get $arrayWithOffset
    local.get $i|474
    local.get $values
    local.get $i|474
    call $~lib/array/Array<i32>#__get
    i32.extend8_s
    call $~lib/typedarray/Int8Array#__set
    local.get $i|474
    i32.const 1
    i32.add
    local.set $i|474
    br $for-loop|26
   end
  end
  local.get $array|472
  call $~lib/typedarray/Int8Array#reverse
  drop
  i32.const 0
  local.set $i|476
  loop $for-loop|27
   local.get $i|476
   local.get $length
   i32.lt_s
   local.set $477
   local.get $477
   if
    local.get $array|472
    local.get $i|476
    call $~lib/typedarray/Int8Array#__get
    local.get $values
    local.get $length
    i32.const 1
    i32.sub
    local.get $i|476
    i32.sub
    call $~lib/array/Array<i32>#__get
    i32.extend8_s
    i32.eq
    i32.eqz
    if
     unreachable
    end
    local.get $i|476
    i32.const 1
    i32.add
    local.set $i|476
    br $for-loop|27
   end
  end
  local.get $arrayWithOffset
  i32.const 4
  i32.const 8
  call $~lib/typedarray/Int8Array#subarray
  call $~lib/typedarray/Int8Array#reverse
  local.set $reversedSlice
  local.get $reversedSlice
  i32.const 0
  call $~lib/typedarray/Int8Array#__get
  i32.const 8
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $reversedSlice
  i32.const 1
  call $~lib/typedarray/Int8Array#__get
  i32.const 7
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $reversedSlice
  i32.const 2
  call $~lib/typedarray/Int8Array#__get
  i32.const 6
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $reversedSlice
  i32.const 3
  call $~lib/typedarray/Int8Array#__get
  i32.const 5
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/typedarray/testArrayReverseValues
  local.set $values|479
  local.get $values|479
  call $~lib/array/Array<i32>#get:length
  local.set $length|480
  i32.const 0
  local.get $length|480
  call $~lib/typedarray/Uint8Array#constructor
  local.set $array|481
  i32.const 0
  local.get $length|480
  call $~lib/typedarray/Uint8Array#constructor
  local.set $arrayWithOffset|482
  i32.const 0
  local.set $i|483
  loop $for-loop|28
   local.get $i|483
   local.get $length|480
   i32.lt_s
   local.set $484
   local.get $484
   if
    local.get $array|481
    local.get $i|483
    local.get $values|479
    local.get $i|483
    call $~lib/array/Array<i32>#__get
    i32.const 255
    i32.and
    call $~lib/typedarray/Uint8Array#__set
    local.get $arrayWithOffset|482
    local.get $i|483
    local.get $values|479
    local.get $i|483
    call $~lib/array/Array<i32>#__get
    i32.const 255
    i32.and
    call $~lib/typedarray/Uint8Array#__set
    local.get $i|483
    i32.const 1
    i32.add
    local.set $i|483
    br $for-loop|28
   end
  end
  local.get $array|481
  call $~lib/typedarray/Uint8Array#reverse
  drop
  i32.const 0
  local.set $i|485
  loop $for-loop|29
   local.get $i|485
   local.get $length|480
   i32.lt_s
   local.set $486
   local.get $486
   if
    local.get $array|481
    local.get $i|485
    call $~lib/typedarray/Uint8Array#__get
    local.get $values|479
    local.get $length|480
    i32.const 1
    i32.sub
    local.get $i|485
    i32.sub
    call $~lib/array/Array<i32>#__get
    i32.const 255
    i32.and
    i32.eq
    i32.eqz
    if
     unreachable
    end
    local.get $i|485
    i32.const 1
    i32.add
    local.set $i|485
    br $for-loop|29
   end
  end
  local.get $arrayWithOffset|482
  i32.const 4
  i32.const 8
  call $~lib/typedarray/Uint8Array#subarray
  call $~lib/typedarray/Uint8Array#reverse
  local.set $reversedSlice|487
  local.get $reversedSlice|487
  i32.const 0
  call $~lib/typedarray/Uint8Array#__get
  i32.const 8
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $reversedSlice|487
  i32.const 1
  call $~lib/typedarray/Uint8Array#__get
  i32.const 7
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $reversedSlice|487
  i32.const 2
  call $~lib/typedarray/Uint8Array#__get
  i32.const 6
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $reversedSlice|487
  i32.const 3
  call $~lib/typedarray/Uint8Array#__get
  i32.const 5
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/typedarray/testArrayReverseValues
  local.set $values|488
  local.get $values|488
  call $~lib/array/Array<i32>#get:length
  local.set $length|489
  i32.const 0
  local.get $length|489
  call $~lib/typedarray/Uint8ClampedArray#constructor
  local.set $array|490
  i32.const 0
  local.get $length|489
  call $~lib/typedarray/Uint8ClampedArray#constructor
  local.set $arrayWithOffset|491
  i32.const 0
  local.set $i|492
  loop $for-loop|30
   local.get $i|492
   local.get $length|489
   i32.lt_s
   local.set $493
   local.get $493
   if
    local.get $array|490
    local.get $i|492
    local.get $values|488
    local.get $i|492
    call $~lib/array/Array<i32>#__get
    i32.const 255
    i32.and
    call $~lib/typedarray/Uint8ClampedArray#__set
    local.get $arrayWithOffset|491
    local.get $i|492
    local.get $values|488
    local.get $i|492
    call $~lib/array/Array<i32>#__get
    i32.const 255
    i32.and
    call $~lib/typedarray/Uint8ClampedArray#__set
    local.get $i|492
    i32.const 1
    i32.add
    local.set $i|492
    br $for-loop|30
   end
  end
  local.get $array|490
  call $~lib/typedarray/Uint8ClampedArray#reverse
  drop
  i32.const 0
  local.set $i|494
  loop $for-loop|31
   local.get $i|494
   local.get $length|489
   i32.lt_s
   local.set $495
   local.get $495
   if
    local.get $array|490
    local.get $i|494
    call $~lib/typedarray/Uint8ClampedArray#__get
    local.get $values|488
    local.get $length|489
    i32.const 1
    i32.sub
    local.get $i|494
    i32.sub
    call $~lib/array/Array<i32>#__get
    i32.const 255
    i32.and
    i32.eq
    i32.eqz
    if
     unreachable
    end
    local.get $i|494
    i32.const 1
    i32.add
    local.set $i|494
    br $for-loop|31
   end
  end
  local.get $arrayWithOffset|491
  i32.const 4
  i32.const 8
  call $~lib/typedarray/Uint8ClampedArray#subarray
  call $~lib/typedarray/Uint8ClampedArray#reverse
  local.set $reversedSlice|496
  local.get $reversedSlice|496
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#__get
  i32.const 8
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $reversedSlice|496
  i32.const 1
  call $~lib/typedarray/Uint8ClampedArray#__get
  i32.const 7
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $reversedSlice|496
  i32.const 2
  call $~lib/typedarray/Uint8ClampedArray#__get
  i32.const 6
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $reversedSlice|496
  i32.const 3
  call $~lib/typedarray/Uint8ClampedArray#__get
  i32.const 5
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/typedarray/testArrayReverseValues
  local.set $values|497
  local.get $values|497
  call $~lib/array/Array<i32>#get:length
  local.set $length|498
  i32.const 0
  local.get $length|498
  call $~lib/typedarray/Int16Array#constructor
  local.set $array|499
  i32.const 0
  local.get $length|498
  call $~lib/typedarray/Int16Array#constructor
  local.set $arrayWithOffset|500
  i32.const 0
  local.set $i|501
  loop $for-loop|32
   local.get $i|501
   local.get $length|498
   i32.lt_s
   local.set $502
   local.get $502
   if
    local.get $array|499
    local.get $i|501
    local.get $values|497
    local.get $i|501
    call $~lib/array/Array<i32>#__get
    i32.extend16_s
    call $~lib/typedarray/Int16Array#__set
    local.get $arrayWithOffset|500
    local.get $i|501
    local.get $values|497
    local.get $i|501
    call $~lib/array/Array<i32>#__get
    i32.extend16_s
    call $~lib/typedarray/Int16Array#__set
    local.get $i|501
    i32.const 1
    i32.add
    local.set $i|501
    br $for-loop|32
   end
  end
  local.get $array|499
  call $~lib/typedarray/Int16Array#reverse
  drop
  i32.const 0
  local.set $i|503
  loop $for-loop|33
   local.get $i|503
   local.get $length|498
   i32.lt_s
   local.set $504
   local.get $504
   if
    local.get $array|499
    local.get $i|503
    call $~lib/typedarray/Int16Array#__get
    local.get $values|497
    local.get $length|498
    i32.const 1
    i32.sub
    local.get $i|503
    i32.sub
    call $~lib/array/Array<i32>#__get
    i32.extend16_s
    i32.eq
    i32.eqz
    if
     unreachable
    end
    local.get $i|503
    i32.const 1
    i32.add
    local.set $i|503
    br $for-loop|33
   end
  end
  local.get $arrayWithOffset|500
  i32.const 4
  i32.const 8
  call $~lib/typedarray/Int16Array#subarray
  call $~lib/typedarray/Int16Array#reverse
  local.set $reversedSlice|505
  local.get $reversedSlice|505
  i32.const 0
  call $~lib/typedarray/Int16Array#__get
  i32.const 8
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $reversedSlice|505
  i32.const 1
  call $~lib/typedarray/Int16Array#__get
  i32.const 7
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $reversedSlice|505
  i32.const 2
  call $~lib/typedarray/Int16Array#__get
  i32.const 6
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $reversedSlice|505
  i32.const 3
  call $~lib/typedarray/Int16Array#__get
  i32.const 5
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/typedarray/testArrayReverseValues
  local.set $values|506
  local.get $values|506
  call $~lib/array/Array<i32>#get:length
  local.set $length|507
  i32.const 0
  local.get $length|507
  call $~lib/typedarray/Uint16Array#constructor
  local.set $array|508
  i32.const 0
  local.get $length|507
  call $~lib/typedarray/Uint16Array#constructor
  local.set $arrayWithOffset|509
  i32.const 0
  local.set $i|510
  loop $for-loop|34
   local.get $i|510
   local.get $length|507
   i32.lt_s
   local.set $511
   local.get $511
   if
    local.get $array|508
    local.get $i|510
    local.get $values|506
    local.get $i|510
    call $~lib/array/Array<i32>#__get
    i32.const 65535
    i32.and
    call $~lib/typedarray/Uint16Array#__set
    local.get $arrayWithOffset|509
    local.get $i|510
    local.get $values|506
    local.get $i|510
    call $~lib/array/Array<i32>#__get
    i32.const 65535
    i32.and
    call $~lib/typedarray/Uint16Array#__set
    local.get $i|510
    i32.const 1
    i32.add
    local.set $i|510
    br $for-loop|34
   end
  end
  local.get $array|508
  call $~lib/typedarray/Uint16Array#reverse
  drop
  i32.const 0
  local.set $i|512
  loop $for-loop|35
   local.get $i|512
   local.get $length|507
   i32.lt_s
   local.set $513
   local.get $513
   if
    local.get $array|508
    local.get $i|512
    call $~lib/typedarray/Uint16Array#__get
    local.get $values|506
    local.get $length|507
    i32.const 1
    i32.sub
    local.get $i|512
    i32.sub
    call $~lib/array/Array<i32>#__get
    i32.const 65535
    i32.and
    i32.eq
    i32.eqz
    if
     unreachable
    end
    local.get $i|512
    i32.const 1
    i32.add
    local.set $i|512
    br $for-loop|35
   end
  end
  local.get $arrayWithOffset|509
  i32.const 4
  i32.const 8
  call $~lib/typedarray/Uint16Array#subarray
  call $~lib/typedarray/Uint16Array#reverse
  local.set $reversedSlice|514
  local.get $reversedSlice|514
  i32.const 0
  call $~lib/typedarray/Uint16Array#__get
  i32.const 8
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $reversedSlice|514
  i32.const 1
  call $~lib/typedarray/Uint16Array#__get
  i32.const 7
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $reversedSlice|514
  i32.const 2
  call $~lib/typedarray/Uint16Array#__get
  i32.const 6
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $reversedSlice|514
  i32.const 3
  call $~lib/typedarray/Uint16Array#__get
  i32.const 5
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/typedarray/testArrayReverseValues
  local.set $values|515
  local.get $values|515
  call $~lib/array/Array<i32>#get:length
  local.set $length|516
  i32.const 0
  local.get $length|516
  call $~lib/typedarray/Int32Array#constructor
  local.set $array|517
  i32.const 0
  local.get $length|516
  call $~lib/typedarray/Int32Array#constructor
  local.set $arrayWithOffset|518
  i32.const 0
  local.set $i|519
  loop $for-loop|36
   local.get $i|519
   local.get $length|516
   i32.lt_s
   local.set $520
   local.get $520
   if
    local.get $array|517
    local.get $i|519
    local.get $values|515
    local.get $i|519
    call $~lib/array/Array<i32>#__get
    call $~lib/typedarray/Int32Array#__set
    local.get $arrayWithOffset|518
    local.get $i|519
    local.get $values|515
    local.get $i|519
    call $~lib/array/Array<i32>#__get
    call $~lib/typedarray/Int32Array#__set
    local.get $i|519
    i32.const 1
    i32.add
    local.set $i|519
    br $for-loop|36
   end
  end
  local.get $array|517
  call $~lib/typedarray/Int32Array#reverse
  drop
  i32.const 0
  local.set $i|521
  loop $for-loop|37
   local.get $i|521
   local.get $length|516
   i32.lt_s
   local.set $522
   local.get $522
   if
    local.get $array|517
    local.get $i|521
    call $~lib/typedarray/Int32Array#__get
    local.get $values|515
    local.get $length|516
    i32.const 1
    i32.sub
    local.get $i|521
    i32.sub
    call $~lib/array/Array<i32>#__get
    i32.eq
    i32.eqz
    if
     unreachable
    end
    local.get $i|521
    i32.const 1
    i32.add
    local.set $i|521
    br $for-loop|37
   end
  end
  local.get $arrayWithOffset|518
  i32.const 4
  i32.const 8
  call $~lib/typedarray/Int32Array#subarray
  call $~lib/typedarray/Int32Array#reverse
  local.set $reversedSlice|523
  local.get $reversedSlice|523
  i32.const 0
  call $~lib/typedarray/Int32Array#__get
  i32.const 8
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $reversedSlice|523
  i32.const 1
  call $~lib/typedarray/Int32Array#__get
  i32.const 7
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $reversedSlice|523
  i32.const 2
  call $~lib/typedarray/Int32Array#__get
  i32.const 6
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $reversedSlice|523
  i32.const 3
  call $~lib/typedarray/Int32Array#__get
  i32.const 5
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/typedarray/testArrayReverseValues
  local.set $values|524
  local.get $values|524
  call $~lib/array/Array<i32>#get:length
  local.set $length|525
  i32.const 0
  local.get $length|525
  call $~lib/typedarray/Uint32Array#constructor
  local.set $array|526
  i32.const 0
  local.get $length|525
  call $~lib/typedarray/Uint32Array#constructor
  local.set $arrayWithOffset|527
  i32.const 0
  local.set $i|528
  loop $for-loop|38
   local.get $i|528
   local.get $length|525
   i32.lt_s
   local.set $529
   local.get $529
   if
    local.get $array|526
    local.get $i|528
    local.get $values|524
    local.get $i|528
    call $~lib/array/Array<i32>#__get
    call $~lib/typedarray/Uint32Array#__set
    local.get $arrayWithOffset|527
    local.get $i|528
    local.get $values|524
    local.get $i|528
    call $~lib/array/Array<i32>#__get
    call $~lib/typedarray/Uint32Array#__set
    local.get $i|528
    i32.const 1
    i32.add
    local.set $i|528
    br $for-loop|38
   end
  end
  local.get $array|526
  call $~lib/typedarray/Uint32Array#reverse
  drop
  i32.const 0
  local.set $i|530
  loop $for-loop|39
   local.get $i|530
   local.get $length|525
   i32.lt_s
   local.set $531
   local.get $531
   if
    local.get $array|526
    local.get $i|530
    call $~lib/typedarray/Uint32Array#__get
    local.get $values|524
    local.get $length|525
    i32.const 1
    i32.sub
    local.get $i|530
    i32.sub
    call $~lib/array/Array<i32>#__get
    i32.eq
    i32.eqz
    if
     unreachable
    end
    local.get $i|530
    i32.const 1
    i32.add
    local.set $i|530
    br $for-loop|39
   end
  end
  local.get $arrayWithOffset|527
  i32.const 4
  i32.const 8
  call $~lib/typedarray/Uint32Array#subarray
  call $~lib/typedarray/Uint32Array#reverse
  local.set $reversedSlice|532
  local.get $reversedSlice|532
  i32.const 0
  call $~lib/typedarray/Uint32Array#__get
  i32.const 8
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $reversedSlice|532
  i32.const 1
  call $~lib/typedarray/Uint32Array#__get
  i32.const 7
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $reversedSlice|532
  i32.const 2
  call $~lib/typedarray/Uint32Array#__get
  i32.const 6
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $reversedSlice|532
  i32.const 3
  call $~lib/typedarray/Uint32Array#__get
  i32.const 5
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/typedarray/testArrayReverseValues
  local.set $values|533
  local.get $values|533
  call $~lib/array/Array<i32>#get:length
  local.set $length|534
  i32.const 0
  local.get $length|534
  call $~lib/typedarray/Int64Array#constructor
  local.set $array|535
  i32.const 0
  local.get $length|534
  call $~lib/typedarray/Int64Array#constructor
  local.set $arrayWithOffset|536
  i32.const 0
  local.set $i|537
  loop $for-loop|40
   local.get $i|537
   local.get $length|534
   i32.lt_s
   local.set $538
   local.get $538
   if
    local.get $array|535
    local.get $i|537
    local.get $values|533
    local.get $i|537
    call $~lib/array/Array<i32>#__get
    i64.extend_i32_s
    call $~lib/typedarray/Int64Array#__set
    local.get $arrayWithOffset|536
    local.get $i|537
    local.get $values|533
    local.get $i|537
    call $~lib/array/Array<i32>#__get
    i64.extend_i32_s
    call $~lib/typedarray/Int64Array#__set
    local.get $i|537
    i32.const 1
    i32.add
    local.set $i|537
    br $for-loop|40
   end
  end
  local.get $array|535
  call $~lib/typedarray/Int64Array#reverse
  drop
  i32.const 0
  local.set $i|539
  loop $for-loop|41
   local.get $i|539
   local.get $length|534
   i32.lt_s
   local.set $540
   local.get $540
   if
    local.get $array|535
    local.get $i|539
    call $~lib/typedarray/Int64Array#__get
    local.get $values|533
    local.get $length|534
    i32.const 1
    i32.sub
    local.get $i|539
    i32.sub
    call $~lib/array/Array<i32>#__get
    i64.extend_i32_s
    i64.eq
    i32.eqz
    if
     unreachable
    end
    local.get $i|539
    i32.const 1
    i32.add
    local.set $i|539
    br $for-loop|41
   end
  end
  local.get $arrayWithOffset|536
  i32.const 4
  i32.const 8
  call $~lib/typedarray/Int64Array#subarray
  call $~lib/typedarray/Int64Array#reverse
  local.set $reversedSlice|541
  local.get $reversedSlice|541
  i32.const 0
  call $~lib/typedarray/Int64Array#__get
  i64.const 8
  i64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $reversedSlice|541
  i32.const 1
  call $~lib/typedarray/Int64Array#__get
  i64.const 7
  i64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $reversedSlice|541
  i32.const 2
  call $~lib/typedarray/Int64Array#__get
  i64.const 6
  i64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $reversedSlice|541
  i32.const 3
  call $~lib/typedarray/Int64Array#__get
  i64.const 5
  i64.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/typedarray/testArrayReverseValues
  local.set $values|542
  local.get $values|542
  call $~lib/array/Array<i32>#get:length
  local.set $length|543
  i32.const 0
  local.get $length|543
  call $~lib/typedarray/Uint64Array#constructor
  local.set $array|544
  i32.const 0
  local.get $length|543
  call $~lib/typedarray/Uint64Array#constructor
  local.set $arrayWithOffset|545
  i32.const 0
  local.set $i|546
  loop $for-loop|42
   local.get $i|546
   local.get $length|543
   i32.lt_s
   local.set $547
   local.get $547
   if
    local.get $array|544
    local.get $i|546
    local.get $values|542
    local.get $i|546
    call $~lib/array/Array<i32>#__get
    i64.extend_i32_s
    call $~lib/typedarray/Uint64Array#__set
    local.get $arrayWithOffset|545
    local.get $i|546
    local.get $values|542
    local.get $i|546
    call $~lib/array/Array<i32>#__get
    i64.extend_i32_s
    call $~lib/typedarray/Uint64Array#__set
    local.get $i|546
    i32.const 1
    i32.add
    local.set $i|546
    br $for-loop|42
   end
  end
  local.get $array|544
  call $~lib/typedarray/Uint64Array#reverse
  drop
  i32.const 0
  local.set $i|548
  loop $for-loop|43
   local.get $i|548
   local.get $length|543
   i32.lt_s
   local.set $549
   local.get $549
   if
    local.get $array|544
    local.get $i|548
    call $~lib/typedarray/Uint64Array#__get
    local.get $values|542
    local.get $length|543
    i32.const 1
    i32.sub
    local.get $i|548
    i32.sub
    call $~lib/array/Array<i32>#__get
    i64.extend_i32_s
    i64.eq
    i32.eqz
    if
     unreachable
    end
    local.get $i|548
    i32.const 1
    i32.add
    local.set $i|548
    br $for-loop|43
   end
  end
  local.get $arrayWithOffset|545
  i32.const 4
  i32.const 8
  call $~lib/typedarray/Uint64Array#subarray
  call $~lib/typedarray/Uint64Array#reverse
  local.set $reversedSlice|550
  local.get $reversedSlice|550
  i32.const 0
  call $~lib/typedarray/Uint64Array#__get
  i64.const 8
  i64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $reversedSlice|550
  i32.const 1
  call $~lib/typedarray/Uint64Array#__get
  i64.const 7
  i64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $reversedSlice|550
  i32.const 2
  call $~lib/typedarray/Uint64Array#__get
  i64.const 6
  i64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $reversedSlice|550
  i32.const 3
  call $~lib/typedarray/Uint64Array#__get
  i64.const 5
  i64.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/typedarray/testArrayReverseValues
  local.set $values|551
  local.get $values|551
  call $~lib/array/Array<i32>#get:length
  local.set $length|552
  i32.const 0
  local.get $length|552
  call $~lib/typedarray/Float32Array#constructor
  local.set $array|553
  i32.const 0
  local.get $length|552
  call $~lib/typedarray/Float32Array#constructor
  local.set $arrayWithOffset|554
  i32.const 0
  local.set $i|555
  loop $for-loop|44
   local.get $i|555
   local.get $length|552
   i32.lt_s
   local.set $556
   local.get $556
   if
    local.get $array|553
    local.get $i|555
    local.get $values|551
    local.get $i|555
    call $~lib/array/Array<i32>#__get
    f32.convert_i32_s
    call $~lib/typedarray/Float32Array#__set
    local.get $arrayWithOffset|554
    local.get $i|555
    local.get $values|551
    local.get $i|555
    call $~lib/array/Array<i32>#__get
    f32.convert_i32_s
    call $~lib/typedarray/Float32Array#__set
    local.get $i|555
    i32.const 1
    i32.add
    local.set $i|555
    br $for-loop|44
   end
  end
  local.get $array|553
  call $~lib/typedarray/Float32Array#reverse
  drop
  i32.const 0
  local.set $i|557
  loop $for-loop|45
   local.get $i|557
   local.get $length|552
   i32.lt_s
   local.set $558
   local.get $558
   if
    local.get $array|553
    local.get $i|557
    call $~lib/typedarray/Float32Array#__get
    local.get $values|551
    local.get $length|552
    i32.const 1
    i32.sub
    local.get $i|557
    i32.sub
    call $~lib/array/Array<i32>#__get
    f32.convert_i32_s
    f32.eq
    i32.eqz
    if
     unreachable
    end
    local.get $i|557
    i32.const 1
    i32.add
    local.set $i|557
    br $for-loop|45
   end
  end
  local.get $arrayWithOffset|554
  i32.const 4
  i32.const 8
  call $~lib/typedarray/Float32Array#subarray
  call $~lib/typedarray/Float32Array#reverse
  local.set $reversedSlice|559
  local.get $reversedSlice|559
  i32.const 0
  call $~lib/typedarray/Float32Array#__get
  f32.const 8
  f32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $reversedSlice|559
  i32.const 1
  call $~lib/typedarray/Float32Array#__get
  f32.const 7
  f32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $reversedSlice|559
  i32.const 2
  call $~lib/typedarray/Float32Array#__get
  f32.const 6
  f32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $reversedSlice|559
  i32.const 3
  call $~lib/typedarray/Float32Array#__get
  f32.const 5
  f32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/typedarray/testArrayReverseValues
  local.set $values|560
  local.get $values|560
  call $~lib/array/Array<i32>#get:length
  local.set $length|561
  i32.const 0
  local.get $length|561
  call $~lib/typedarray/Float64Array#constructor
  local.set $array|562
  i32.const 0
  local.get $length|561
  call $~lib/typedarray/Float64Array#constructor
  local.set $arrayWithOffset|563
  i32.const 0
  local.set $i|564
  loop $for-loop|46
   local.get $i|564
   local.get $length|561
   i32.lt_s
   local.set $565
   local.get $565
   if
    local.get $array|562
    local.get $i|564
    local.get $values|560
    local.get $i|564
    call $~lib/array/Array<i32>#__get
    f64.convert_i32_s
    call $~lib/typedarray/Float64Array#__set
    local.get $arrayWithOffset|563
    local.get $i|564
    local.get $values|560
    local.get $i|564
    call $~lib/array/Array<i32>#__get
    f64.convert_i32_s
    call $~lib/typedarray/Float64Array#__set
    local.get $i|564
    i32.const 1
    i32.add
    local.set $i|564
    br $for-loop|46
   end
  end
  local.get $array|562
  call $~lib/typedarray/Float64Array#reverse
  drop
  i32.const 0
  local.set $i|566
  loop $for-loop|47
   local.get $i|566
   local.get $length|561
   i32.lt_s
   local.set $567
   local.get $567
   if
    local.get $array|562
    local.get $i|566
    call $~lib/typedarray/Float64Array#__get
    local.get $values|560
    local.get $length|561
    i32.const 1
    i32.sub
    local.get $i|566
    i32.sub
    call $~lib/array/Array<i32>#__get
    f64.convert_i32_s
    f64.eq
    i32.eqz
    if
     unreachable
    end
    local.get $i|566
    i32.const 1
    i32.add
    local.set $i|566
    br $for-loop|47
   end
  end
  local.get $arrayWithOffset|563
  i32.const 4
  i32.const 8
  call $~lib/typedarray/Float64Array#subarray
  call $~lib/typedarray/Float64Array#reverse
  local.set $reversedSlice|568
  local.get $reversedSlice|568
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.const 8
  f64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $reversedSlice|568
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.const 7
  f64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $reversedSlice|568
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.const 6
  f64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $reversedSlice|568
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  f64.const 5
  f64.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/typedarray/testArrayIndexOfAndLastIndexOfValues
  local.set $values|571
  local.get $values|571
  call $~lib/array/Array<i32>#get:length
  local.set $length|572
  i32.const 0
  local.get $length|572
  call $~lib/typedarray/Int8Array#constructor
  local.set $array|573
  i32.const 0
  local.set $i|574
  loop $for-loop|48
   local.get $i|574
   local.get $length|572
   i32.lt_s
   local.set $575
   local.get $575
   if
    local.get $array|573
    local.get $i|574
    local.get $values|571
    local.get $i|574
    call $~lib/array/Array<i32>#__get
    i32.extend8_s
    call $~lib/typedarray/Int8Array#__set
    local.get $i|574
    i32.const 1
    i32.add
    local.set $i|574
    br $for-loop|48
   end
  end
  local.get $array|573
  i32.const 0
  i32.const 0
  call $~lib/typedarray/Int8Array#indexOf
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|573
  i32.const 11
  i32.const 0
  call $~lib/typedarray/Int8Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|573
  i32.const -1
  i32.const 0
  call $~lib/typedarray/Int8Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|573
  i32.const 3
  i32.const 0
  call $~lib/typedarray/Int8Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|573
  i32.const 3
  i32.const 2
  call $~lib/typedarray/Int8Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|573
  i32.const 3
  i32.const 3
  call $~lib/typedarray/Int8Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|573
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Int8Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|573
  i32.const 1
  i32.const 10
  call $~lib/typedarray/Int8Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|573
  i32.const 1
  i32.const -100
  call $~lib/typedarray/Int8Array#indexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|573
  i32.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Int8Array#lastIndexOf@varargs
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|573
  i32.const 11
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Int8Array#lastIndexOf@varargs
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|573
  i32.const -1
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Int8Array#lastIndexOf@varargs
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|573
  i32.const 3
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Int8Array#lastIndexOf@varargs
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|573
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Int8Array#lastIndexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|573
  i32.const 3
  i32.const 3
  call $~lib/typedarray/Int8Array#lastIndexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|573
  i32.const 3
  i32.const 2
  call $~lib/typedarray/Int8Array#lastIndexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|573
  i32.const 1
  i32.const 100
  call $~lib/typedarray/Int8Array#lastIndexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|573
  i32.const 1
  i32.const -10
  call $~lib/typedarray/Int8Array#lastIndexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|573
  i32.const 1
  i32.const -11
  call $~lib/typedarray/Int8Array#lastIndexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|573
  i32.const 4
  i32.const 9
  call $~lib/typedarray/Int8Array#subarray
  local.set $sliced|576
  local.get $sliced|576
  i32.const 3
  i32.const 0
  call $~lib/typedarray/Int8Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced|576
  i32.const 4
  i32.const 0
  call $~lib/typedarray/Int8Array#indexOf
  i32.const 4
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced|576
  i32.const 5
  i32.const 0
  call $~lib/typedarray/Int8Array#indexOf
  i32.const 5
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced|576
  i32.const 9
  i32.const 0
  call $~lib/typedarray/Int8Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced|576
  i32.const 10
  i32.const 0
  call $~lib/typedarray/Int8Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced|576
  i32.const 11
  i32.const 0
  call $~lib/typedarray/Int8Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced|576
  i32.const 5
  i32.const 1
  call $~lib/typedarray/Int8Array#indexOf
  i32.const 5
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced|576
  i32.const 5
  i32.const 2
  call $~lib/typedarray/Int8Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/typedarray/testArrayIndexOfAndLastIndexOfValues
  local.set $values|577
  local.get $values|577
  call $~lib/array/Array<i32>#get:length
  local.set $length|578
  i32.const 0
  local.get $length|578
  call $~lib/typedarray/Uint8Array#constructor
  local.set $array|579
  i32.const 0
  local.set $i|580
  loop $for-loop|49
   local.get $i|580
   local.get $length|578
   i32.lt_s
   local.set $581
   local.get $581
   if
    local.get $array|579
    local.get $i|580
    local.get $values|577
    local.get $i|580
    call $~lib/array/Array<i32>#__get
    i32.const 255
    i32.and
    call $~lib/typedarray/Uint8Array#__set
    local.get $i|580
    i32.const 1
    i32.add
    local.set $i|580
    br $for-loop|49
   end
  end
  local.get $array|579
  i32.const 0
  i32.const 0
  call $~lib/typedarray/Uint8Array#indexOf
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|579
  i32.const 11
  i32.const 0
  call $~lib/typedarray/Uint8Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|579
  i32.const -1
  i32.const 0
  call $~lib/typedarray/Uint8Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|579
  i32.const 3
  i32.const 0
  call $~lib/typedarray/Uint8Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|579
  i32.const 3
  i32.const 2
  call $~lib/typedarray/Uint8Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|579
  i32.const 3
  i32.const 3
  call $~lib/typedarray/Uint8Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|579
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Uint8Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|579
  i32.const 1
  i32.const 10
  call $~lib/typedarray/Uint8Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|579
  i32.const 1
  i32.const -100
  call $~lib/typedarray/Uint8Array#indexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|579
  i32.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint8Array#lastIndexOf@varargs
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|579
  i32.const 11
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint8Array#lastIndexOf@varargs
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|579
  i32.const -1
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint8Array#lastIndexOf@varargs
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|579
  i32.const 3
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint8Array#lastIndexOf@varargs
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|579
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Uint8Array#lastIndexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|579
  i32.const 3
  i32.const 3
  call $~lib/typedarray/Uint8Array#lastIndexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|579
  i32.const 3
  i32.const 2
  call $~lib/typedarray/Uint8Array#lastIndexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|579
  i32.const 1
  i32.const 100
  call $~lib/typedarray/Uint8Array#lastIndexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|579
  i32.const 1
  i32.const -10
  call $~lib/typedarray/Uint8Array#lastIndexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|579
  i32.const 1
  i32.const -11
  call $~lib/typedarray/Uint8Array#lastIndexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|579
  i32.const 4
  i32.const 9
  call $~lib/typedarray/Uint8Array#subarray
  local.set $sliced|582
  local.get $sliced|582
  i32.const 3
  i32.const 0
  call $~lib/typedarray/Uint8Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced|582
  i32.const 4
  i32.const 0
  call $~lib/typedarray/Uint8Array#indexOf
  i32.const 4
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced|582
  i32.const 5
  i32.const 0
  call $~lib/typedarray/Uint8Array#indexOf
  i32.const 5
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced|582
  i32.const 9
  i32.const 0
  call $~lib/typedarray/Uint8Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced|582
  i32.const 10
  i32.const 0
  call $~lib/typedarray/Uint8Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced|582
  i32.const 11
  i32.const 0
  call $~lib/typedarray/Uint8Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced|582
  i32.const 5
  i32.const 1
  call $~lib/typedarray/Uint8Array#indexOf
  i32.const 5
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced|582
  i32.const 5
  i32.const 2
  call $~lib/typedarray/Uint8Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/typedarray/testArrayIndexOfAndLastIndexOfValues
  local.set $values|583
  local.get $values|583
  call $~lib/array/Array<i32>#get:length
  local.set $length|584
  i32.const 0
  local.get $length|584
  call $~lib/typedarray/Uint8ClampedArray#constructor
  local.set $array|585
  i32.const 0
  local.set $i|586
  loop $for-loop|50
   local.get $i|586
   local.get $length|584
   i32.lt_s
   local.set $587
   local.get $587
   if
    local.get $array|585
    local.get $i|586
    local.get $values|583
    local.get $i|586
    call $~lib/array/Array<i32>#__get
    i32.const 255
    i32.and
    call $~lib/typedarray/Uint8ClampedArray#__set
    local.get $i|586
    i32.const 1
    i32.add
    local.set $i|586
    br $for-loop|50
   end
  end
  local.get $array|585
  i32.const 0
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#indexOf
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|585
  i32.const 11
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|585
  i32.const -1
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|585
  i32.const 3
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|585
  i32.const 3
  i32.const 2
  call $~lib/typedarray/Uint8ClampedArray#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|585
  i32.const 3
  i32.const 3
  call $~lib/typedarray/Uint8ClampedArray#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|585
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Uint8ClampedArray#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|585
  i32.const 1
  i32.const 10
  call $~lib/typedarray/Uint8ClampedArray#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|585
  i32.const 1
  i32.const -100
  call $~lib/typedarray/Uint8ClampedArray#indexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|585
  i32.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#lastIndexOf@varargs
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|585
  i32.const 11
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#lastIndexOf@varargs
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|585
  i32.const -1
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#lastIndexOf@varargs
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|585
  i32.const 3
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#lastIndexOf@varargs
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|585
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Uint8ClampedArray#lastIndexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|585
  i32.const 3
  i32.const 3
  call $~lib/typedarray/Uint8ClampedArray#lastIndexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|585
  i32.const 3
  i32.const 2
  call $~lib/typedarray/Uint8ClampedArray#lastIndexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|585
  i32.const 1
  i32.const 100
  call $~lib/typedarray/Uint8ClampedArray#lastIndexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|585
  i32.const 1
  i32.const -10
  call $~lib/typedarray/Uint8ClampedArray#lastIndexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|585
  i32.const 1
  i32.const -11
  call $~lib/typedarray/Uint8ClampedArray#lastIndexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|585
  i32.const 4
  i32.const 9
  call $~lib/typedarray/Uint8ClampedArray#subarray
  local.set $sliced|588
  local.get $sliced|588
  i32.const 3
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced|588
  i32.const 4
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#indexOf
  i32.const 4
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced|588
  i32.const 5
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#indexOf
  i32.const 5
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced|588
  i32.const 9
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced|588
  i32.const 10
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced|588
  i32.const 11
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced|588
  i32.const 5
  i32.const 1
  call $~lib/typedarray/Uint8ClampedArray#indexOf
  i32.const 5
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced|588
  i32.const 5
  i32.const 2
  call $~lib/typedarray/Uint8ClampedArray#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/typedarray/testArrayIndexOfAndLastIndexOfValues
  local.set $values|589
  local.get $values|589
  call $~lib/array/Array<i32>#get:length
  local.set $length|590
  i32.const 0
  local.get $length|590
  call $~lib/typedarray/Int16Array#constructor
  local.set $array|591
  i32.const 0
  local.set $i|592
  loop $for-loop|51
   local.get $i|592
   local.get $length|590
   i32.lt_s
   local.set $593
   local.get $593
   if
    local.get $array|591
    local.get $i|592
    local.get $values|589
    local.get $i|592
    call $~lib/array/Array<i32>#__get
    i32.extend16_s
    call $~lib/typedarray/Int16Array#__set
    local.get $i|592
    i32.const 1
    i32.add
    local.set $i|592
    br $for-loop|51
   end
  end
  local.get $array|591
  i32.const 0
  i32.const 0
  call $~lib/typedarray/Int16Array#indexOf
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|591
  i32.const 11
  i32.const 0
  call $~lib/typedarray/Int16Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|591
  i32.const -1
  i32.const 0
  call $~lib/typedarray/Int16Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|591
  i32.const 3
  i32.const 0
  call $~lib/typedarray/Int16Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|591
  i32.const 3
  i32.const 2
  call $~lib/typedarray/Int16Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|591
  i32.const 3
  i32.const 3
  call $~lib/typedarray/Int16Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|591
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Int16Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|591
  i32.const 1
  i32.const 10
  call $~lib/typedarray/Int16Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|591
  i32.const 1
  i32.const -100
  call $~lib/typedarray/Int16Array#indexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|591
  i32.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Int16Array#lastIndexOf@varargs
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|591
  i32.const 11
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Int16Array#lastIndexOf@varargs
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|591
  i32.const -1
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Int16Array#lastIndexOf@varargs
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|591
  i32.const 3
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Int16Array#lastIndexOf@varargs
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|591
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Int16Array#lastIndexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|591
  i32.const 3
  i32.const 3
  call $~lib/typedarray/Int16Array#lastIndexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|591
  i32.const 3
  i32.const 2
  call $~lib/typedarray/Int16Array#lastIndexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|591
  i32.const 1
  i32.const 100
  call $~lib/typedarray/Int16Array#lastIndexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|591
  i32.const 1
  i32.const -10
  call $~lib/typedarray/Int16Array#lastIndexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|591
  i32.const 1
  i32.const -11
  call $~lib/typedarray/Int16Array#lastIndexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|591
  i32.const 4
  i32.const 9
  call $~lib/typedarray/Int16Array#subarray
  local.set $sliced|594
  local.get $sliced|594
  i32.const 3
  i32.const 0
  call $~lib/typedarray/Int16Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced|594
  i32.const 4
  i32.const 0
  call $~lib/typedarray/Int16Array#indexOf
  i32.const 4
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced|594
  i32.const 5
  i32.const 0
  call $~lib/typedarray/Int16Array#indexOf
  i32.const 5
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced|594
  i32.const 9
  i32.const 0
  call $~lib/typedarray/Int16Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced|594
  i32.const 10
  i32.const 0
  call $~lib/typedarray/Int16Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced|594
  i32.const 11
  i32.const 0
  call $~lib/typedarray/Int16Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced|594
  i32.const 5
  i32.const 1
  call $~lib/typedarray/Int16Array#indexOf
  i32.const 5
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced|594
  i32.const 5
  i32.const 2
  call $~lib/typedarray/Int16Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/typedarray/testArrayIndexOfAndLastIndexOfValues
  local.set $values|595
  local.get $values|595
  call $~lib/array/Array<i32>#get:length
  local.set $length|596
  i32.const 0
  local.get $length|596
  call $~lib/typedarray/Uint16Array#constructor
  local.set $array|597
  i32.const 0
  local.set $i|598
  loop $for-loop|52
   local.get $i|598
   local.get $length|596
   i32.lt_s
   local.set $599
   local.get $599
   if
    local.get $array|597
    local.get $i|598
    local.get $values|595
    local.get $i|598
    call $~lib/array/Array<i32>#__get
    i32.const 65535
    i32.and
    call $~lib/typedarray/Uint16Array#__set
    local.get $i|598
    i32.const 1
    i32.add
    local.set $i|598
    br $for-loop|52
   end
  end
  local.get $array|597
  i32.const 0
  i32.const 0
  call $~lib/typedarray/Uint16Array#indexOf
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|597
  i32.const 11
  i32.const 0
  call $~lib/typedarray/Uint16Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|597
  i32.const -1
  i32.const 0
  call $~lib/typedarray/Uint16Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|597
  i32.const 3
  i32.const 0
  call $~lib/typedarray/Uint16Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|597
  i32.const 3
  i32.const 2
  call $~lib/typedarray/Uint16Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|597
  i32.const 3
  i32.const 3
  call $~lib/typedarray/Uint16Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|597
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Uint16Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|597
  i32.const 1
  i32.const 10
  call $~lib/typedarray/Uint16Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|597
  i32.const 1
  i32.const -100
  call $~lib/typedarray/Uint16Array#indexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|597
  i32.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint16Array#lastIndexOf@varargs
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|597
  i32.const 11
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint16Array#lastIndexOf@varargs
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|597
  i32.const -1
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint16Array#lastIndexOf@varargs
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|597
  i32.const 3
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint16Array#lastIndexOf@varargs
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|597
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Uint16Array#lastIndexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|597
  i32.const 3
  i32.const 3
  call $~lib/typedarray/Uint16Array#lastIndexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|597
  i32.const 3
  i32.const 2
  call $~lib/typedarray/Uint16Array#lastIndexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|597
  i32.const 1
  i32.const 100
  call $~lib/typedarray/Uint16Array#lastIndexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|597
  i32.const 1
  i32.const -10
  call $~lib/typedarray/Uint16Array#lastIndexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|597
  i32.const 1
  i32.const -11
  call $~lib/typedarray/Uint16Array#lastIndexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|597
  i32.const 4
  i32.const 9
  call $~lib/typedarray/Uint16Array#subarray
  local.set $sliced|600
  local.get $sliced|600
  i32.const 3
  i32.const 0
  call $~lib/typedarray/Uint16Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced|600
  i32.const 4
  i32.const 0
  call $~lib/typedarray/Uint16Array#indexOf
  i32.const 4
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced|600
  i32.const 5
  i32.const 0
  call $~lib/typedarray/Uint16Array#indexOf
  i32.const 5
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced|600
  i32.const 9
  i32.const 0
  call $~lib/typedarray/Uint16Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced|600
  i32.const 10
  i32.const 0
  call $~lib/typedarray/Uint16Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced|600
  i32.const 11
  i32.const 0
  call $~lib/typedarray/Uint16Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced|600
  i32.const 5
  i32.const 1
  call $~lib/typedarray/Uint16Array#indexOf
  i32.const 5
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced|600
  i32.const 5
  i32.const 2
  call $~lib/typedarray/Uint16Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/typedarray/testArrayIndexOfAndLastIndexOfValues
  local.set $values|601
  local.get $values|601
  call $~lib/array/Array<i32>#get:length
  local.set $length|602
  i32.const 0
  local.get $length|602
  call $~lib/typedarray/Int32Array#constructor
  local.set $array|603
  i32.const 0
  local.set $i|604
  loop $for-loop|53
   local.get $i|604
   local.get $length|602
   i32.lt_s
   local.set $605
   local.get $605
   if
    local.get $array|603
    local.get $i|604
    local.get $values|601
    local.get $i|604
    call $~lib/array/Array<i32>#__get
    call $~lib/typedarray/Int32Array#__set
    local.get $i|604
    i32.const 1
    i32.add
    local.set $i|604
    br $for-loop|53
   end
  end
  local.get $array|603
  i32.const 0
  i32.const 0
  call $~lib/typedarray/Int32Array#indexOf
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|603
  i32.const 11
  i32.const 0
  call $~lib/typedarray/Int32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|603
  i32.const -1
  i32.const 0
  call $~lib/typedarray/Int32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|603
  i32.const 3
  i32.const 0
  call $~lib/typedarray/Int32Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|603
  i32.const 3
  i32.const 2
  call $~lib/typedarray/Int32Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|603
  i32.const 3
  i32.const 3
  call $~lib/typedarray/Int32Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|603
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Int32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|603
  i32.const 1
  i32.const 10
  call $~lib/typedarray/Int32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|603
  i32.const 1
  i32.const -100
  call $~lib/typedarray/Int32Array#indexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|603
  i32.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Int32Array#lastIndexOf@varargs
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|603
  i32.const 11
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Int32Array#lastIndexOf@varargs
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|603
  i32.const -1
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Int32Array#lastIndexOf@varargs
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|603
  i32.const 3
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Int32Array#lastIndexOf@varargs
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|603
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Int32Array#lastIndexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|603
  i32.const 3
  i32.const 3
  call $~lib/typedarray/Int32Array#lastIndexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|603
  i32.const 3
  i32.const 2
  call $~lib/typedarray/Int32Array#lastIndexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|603
  i32.const 1
  i32.const 100
  call $~lib/typedarray/Int32Array#lastIndexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|603
  i32.const 1
  i32.const -10
  call $~lib/typedarray/Int32Array#lastIndexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|603
  i32.const 1
  i32.const -11
  call $~lib/typedarray/Int32Array#lastIndexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|603
  i32.const 4
  i32.const 9
  call $~lib/typedarray/Int32Array#subarray
  local.set $sliced|606
  local.get $sliced|606
  i32.const 3
  i32.const 0
  call $~lib/typedarray/Int32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced|606
  i32.const 4
  i32.const 0
  call $~lib/typedarray/Int32Array#indexOf
  i32.const 4
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced|606
  i32.const 5
  i32.const 0
  call $~lib/typedarray/Int32Array#indexOf
  i32.const 5
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced|606
  i32.const 9
  i32.const 0
  call $~lib/typedarray/Int32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced|606
  i32.const 10
  i32.const 0
  call $~lib/typedarray/Int32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced|606
  i32.const 11
  i32.const 0
  call $~lib/typedarray/Int32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced|606
  i32.const 5
  i32.const 1
  call $~lib/typedarray/Int32Array#indexOf
  i32.const 5
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced|606
  i32.const 5
  i32.const 2
  call $~lib/typedarray/Int32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/typedarray/testArrayIndexOfAndLastIndexOfValues
  local.set $values|607
  local.get $values|607
  call $~lib/array/Array<i32>#get:length
  local.set $length|608
  i32.const 0
  local.get $length|608
  call $~lib/typedarray/Uint32Array#constructor
  local.set $array|609
  i32.const 0
  local.set $i|610
  loop $for-loop|54
   local.get $i|610
   local.get $length|608
   i32.lt_s
   local.set $611
   local.get $611
   if
    local.get $array|609
    local.get $i|610
    local.get $values|607
    local.get $i|610
    call $~lib/array/Array<i32>#__get
    call $~lib/typedarray/Uint32Array#__set
    local.get $i|610
    i32.const 1
    i32.add
    local.set $i|610
    br $for-loop|54
   end
  end
  local.get $array|609
  i32.const 0
  i32.const 0
  call $~lib/typedarray/Uint32Array#indexOf
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|609
  i32.const 11
  i32.const 0
  call $~lib/typedarray/Uint32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|609
  i32.const -1
  i32.const 0
  call $~lib/typedarray/Uint32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|609
  i32.const 3
  i32.const 0
  call $~lib/typedarray/Uint32Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|609
  i32.const 3
  i32.const 2
  call $~lib/typedarray/Uint32Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|609
  i32.const 3
  i32.const 3
  call $~lib/typedarray/Uint32Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|609
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Uint32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|609
  i32.const 1
  i32.const 10
  call $~lib/typedarray/Uint32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|609
  i32.const 1
  i32.const -100
  call $~lib/typedarray/Uint32Array#indexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|609
  i32.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint32Array#lastIndexOf@varargs
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|609
  i32.const 11
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint32Array#lastIndexOf@varargs
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|609
  i32.const -1
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint32Array#lastIndexOf@varargs
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|609
  i32.const 3
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint32Array#lastIndexOf@varargs
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|609
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Uint32Array#lastIndexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|609
  i32.const 3
  i32.const 3
  call $~lib/typedarray/Uint32Array#lastIndexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|609
  i32.const 3
  i32.const 2
  call $~lib/typedarray/Uint32Array#lastIndexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|609
  i32.const 1
  i32.const 100
  call $~lib/typedarray/Uint32Array#lastIndexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|609
  i32.const 1
  i32.const -10
  call $~lib/typedarray/Uint32Array#lastIndexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|609
  i32.const 1
  i32.const -11
  call $~lib/typedarray/Uint32Array#lastIndexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|609
  i32.const 4
  i32.const 9
  call $~lib/typedarray/Uint32Array#subarray
  local.set $sliced|612
  local.get $sliced|612
  i32.const 3
  i32.const 0
  call $~lib/typedarray/Uint32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced|612
  i32.const 4
  i32.const 0
  call $~lib/typedarray/Uint32Array#indexOf
  i32.const 4
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced|612
  i32.const 5
  i32.const 0
  call $~lib/typedarray/Uint32Array#indexOf
  i32.const 5
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced|612
  i32.const 9
  i32.const 0
  call $~lib/typedarray/Uint32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced|612
  i32.const 10
  i32.const 0
  call $~lib/typedarray/Uint32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced|612
  i32.const 11
  i32.const 0
  call $~lib/typedarray/Uint32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced|612
  i32.const 5
  i32.const 1
  call $~lib/typedarray/Uint32Array#indexOf
  i32.const 5
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced|612
  i32.const 5
  i32.const 2
  call $~lib/typedarray/Uint32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/typedarray/testArrayIndexOfAndLastIndexOfValues
  local.set $values|613
  local.get $values|613
  call $~lib/array/Array<i32>#get:length
  local.set $length|614
  i32.const 0
  local.get $length|614
  call $~lib/typedarray/Int64Array#constructor
  local.set $array|615
  i32.const 0
  local.set $i|616
  loop $for-loop|55
   local.get $i|616
   local.get $length|614
   i32.lt_s
   local.set $617
   local.get $617
   if
    local.get $array|615
    local.get $i|616
    local.get $values|613
    local.get $i|616
    call $~lib/array/Array<i32>#__get
    i64.extend_i32_s
    call $~lib/typedarray/Int64Array#__set
    local.get $i|616
    i32.const 1
    i32.add
    local.set $i|616
    br $for-loop|55
   end
  end
  local.get $array|615
  i64.const 0
  i32.const 0
  call $~lib/typedarray/Int64Array#indexOf
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|615
  i64.const 11
  i32.const 0
  call $~lib/typedarray/Int64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|615
  i64.const -1
  i32.const 0
  call $~lib/typedarray/Int64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|615
  i64.const 3
  i32.const 0
  call $~lib/typedarray/Int64Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|615
  i64.const 3
  i32.const 2
  call $~lib/typedarray/Int64Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|615
  i64.const 3
  i32.const 3
  call $~lib/typedarray/Int64Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|615
  i64.const 3
  i32.const 4
  call $~lib/typedarray/Int64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|615
  i64.const 1
  i32.const 10
  call $~lib/typedarray/Int64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|615
  i64.const 1
  i32.const -100
  call $~lib/typedarray/Int64Array#indexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|615
  i64.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Int64Array#lastIndexOf@varargs
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|615
  i64.const 11
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Int64Array#lastIndexOf@varargs
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|615
  i64.const -1
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Int64Array#lastIndexOf@varargs
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|615
  i64.const 3
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Int64Array#lastIndexOf@varargs
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|615
  i64.const 3
  i32.const 4
  call $~lib/typedarray/Int64Array#lastIndexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|615
  i64.const 3
  i32.const 3
  call $~lib/typedarray/Int64Array#lastIndexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|615
  i64.const 3
  i32.const 2
  call $~lib/typedarray/Int64Array#lastIndexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|615
  i64.const 1
  i32.const 100
  call $~lib/typedarray/Int64Array#lastIndexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|615
  i64.const 1
  i32.const -10
  call $~lib/typedarray/Int64Array#lastIndexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|615
  i64.const 1
  i32.const -11
  call $~lib/typedarray/Int64Array#lastIndexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|615
  i32.const 4
  i32.const 9
  call $~lib/typedarray/Int64Array#subarray
  local.set $sliced|618
  local.get $sliced|618
  i64.const 3
  i32.const 0
  call $~lib/typedarray/Int64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced|618
  i64.const 4
  i32.const 0
  call $~lib/typedarray/Int64Array#indexOf
  i32.const 4
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced|618
  i64.const 5
  i32.const 0
  call $~lib/typedarray/Int64Array#indexOf
  i32.const 5
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced|618
  i64.const 9
  i32.const 0
  call $~lib/typedarray/Int64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced|618
  i64.const 10
  i32.const 0
  call $~lib/typedarray/Int64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced|618
  i64.const 11
  i32.const 0
  call $~lib/typedarray/Int64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced|618
  i64.const 5
  i32.const 1
  call $~lib/typedarray/Int64Array#indexOf
  i32.const 5
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced|618
  i64.const 5
  i32.const 2
  call $~lib/typedarray/Int64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/typedarray/testArrayIndexOfAndLastIndexOfValues
  local.set $values|619
  local.get $values|619
  call $~lib/array/Array<i32>#get:length
  local.set $length|620
  i32.const 0
  local.get $length|620
  call $~lib/typedarray/Uint64Array#constructor
  local.set $array|621
  i32.const 0
  local.set $i|622
  loop $for-loop|56
   local.get $i|622
   local.get $length|620
   i32.lt_s
   local.set $623
   local.get $623
   if
    local.get $array|621
    local.get $i|622
    local.get $values|619
    local.get $i|622
    call $~lib/array/Array<i32>#__get
    i64.extend_i32_s
    call $~lib/typedarray/Uint64Array#__set
    local.get $i|622
    i32.const 1
    i32.add
    local.set $i|622
    br $for-loop|56
   end
  end
  local.get $array|621
  i64.const 0
  i32.const 0
  call $~lib/typedarray/Uint64Array#indexOf
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|621
  i64.const 11
  i32.const 0
  call $~lib/typedarray/Uint64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|621
  i64.const -1
  i32.const 0
  call $~lib/typedarray/Uint64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|621
  i64.const 3
  i32.const 0
  call $~lib/typedarray/Uint64Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|621
  i64.const 3
  i32.const 2
  call $~lib/typedarray/Uint64Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|621
  i64.const 3
  i32.const 3
  call $~lib/typedarray/Uint64Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|621
  i64.const 3
  i32.const 4
  call $~lib/typedarray/Uint64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|621
  i64.const 1
  i32.const 10
  call $~lib/typedarray/Uint64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|621
  i64.const 1
  i32.const -100
  call $~lib/typedarray/Uint64Array#indexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|621
  i64.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint64Array#lastIndexOf@varargs
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|621
  i64.const 11
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint64Array#lastIndexOf@varargs
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|621
  i64.const -1
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint64Array#lastIndexOf@varargs
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|621
  i64.const 3
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint64Array#lastIndexOf@varargs
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|621
  i64.const 3
  i32.const 4
  call $~lib/typedarray/Uint64Array#lastIndexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|621
  i64.const 3
  i32.const 3
  call $~lib/typedarray/Uint64Array#lastIndexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|621
  i64.const 3
  i32.const 2
  call $~lib/typedarray/Uint64Array#lastIndexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|621
  i64.const 1
  i32.const 100
  call $~lib/typedarray/Uint64Array#lastIndexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|621
  i64.const 1
  i32.const -10
  call $~lib/typedarray/Uint64Array#lastIndexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|621
  i64.const 1
  i32.const -11
  call $~lib/typedarray/Uint64Array#lastIndexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|621
  i32.const 4
  i32.const 9
  call $~lib/typedarray/Uint64Array#subarray
  local.set $sliced|624
  local.get $sliced|624
  i64.const 3
  i32.const 0
  call $~lib/typedarray/Uint64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced|624
  i64.const 4
  i32.const 0
  call $~lib/typedarray/Uint64Array#indexOf
  i32.const 4
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced|624
  i64.const 5
  i32.const 0
  call $~lib/typedarray/Uint64Array#indexOf
  i32.const 5
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced|624
  i64.const 9
  i32.const 0
  call $~lib/typedarray/Uint64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced|624
  i64.const 10
  i32.const 0
  call $~lib/typedarray/Uint64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced|624
  i64.const 11
  i32.const 0
  call $~lib/typedarray/Uint64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced|624
  i64.const 5
  i32.const 1
  call $~lib/typedarray/Uint64Array#indexOf
  i32.const 5
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced|624
  i64.const 5
  i32.const 2
  call $~lib/typedarray/Uint64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/typedarray/testArrayIndexOfAndLastIndexOfValues
  local.set $values|625
  local.get $values|625
  call $~lib/array/Array<i32>#get:length
  local.set $length|626
  i32.const 0
  local.get $length|626
  call $~lib/typedarray/Float32Array#constructor
  local.set $array|627
  i32.const 0
  local.set $i|628
  loop $for-loop|57
   local.get $i|628
   local.get $length|626
   i32.lt_s
   local.set $629
   local.get $629
   if
    local.get $array|627
    local.get $i|628
    local.get $values|625
    local.get $i|628
    call $~lib/array/Array<i32>#__get
    f32.convert_i32_s
    call $~lib/typedarray/Float32Array#__set
    local.get $i|628
    i32.const 1
    i32.add
    local.set $i|628
    br $for-loop|57
   end
  end
  local.get $array|627
  f32.const 0
  i32.const 0
  call $~lib/typedarray/Float32Array#indexOf
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|627
  f32.const 11
  i32.const 0
  call $~lib/typedarray/Float32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|627
  f32.const -1
  i32.const 0
  call $~lib/typedarray/Float32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|627
  f32.const 3
  i32.const 0
  call $~lib/typedarray/Float32Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|627
  f32.const 3
  i32.const 2
  call $~lib/typedarray/Float32Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|627
  f32.const 3
  i32.const 3
  call $~lib/typedarray/Float32Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|627
  f32.const 3
  i32.const 4
  call $~lib/typedarray/Float32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|627
  f32.const 1
  i32.const 10
  call $~lib/typedarray/Float32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|627
  f32.const 1
  i32.const -100
  call $~lib/typedarray/Float32Array#indexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|627
  f32.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Float32Array#lastIndexOf@varargs
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|627
  f32.const 11
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Float32Array#lastIndexOf@varargs
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|627
  f32.const -1
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Float32Array#lastIndexOf@varargs
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|627
  f32.const 3
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Float32Array#lastIndexOf@varargs
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|627
  f32.const 3
  i32.const 4
  call $~lib/typedarray/Float32Array#lastIndexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|627
  f32.const 3
  i32.const 3
  call $~lib/typedarray/Float32Array#lastIndexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|627
  f32.const 3
  i32.const 2
  call $~lib/typedarray/Float32Array#lastIndexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|627
  f32.const 1
  i32.const 100
  call $~lib/typedarray/Float32Array#lastIndexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|627
  f32.const 1
  i32.const -10
  call $~lib/typedarray/Float32Array#lastIndexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|627
  f32.const 1
  i32.const -11
  call $~lib/typedarray/Float32Array#lastIndexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|627
  i32.const 4
  i32.const 9
  call $~lib/typedarray/Float32Array#subarray
  local.set $sliced|630
  local.get $sliced|630
  f32.const 3
  i32.const 0
  call $~lib/typedarray/Float32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced|630
  f32.const 4
  i32.const 0
  call $~lib/typedarray/Float32Array#indexOf
  i32.const 4
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced|630
  f32.const 5
  i32.const 0
  call $~lib/typedarray/Float32Array#indexOf
  i32.const 5
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced|630
  f32.const 9
  i32.const 0
  call $~lib/typedarray/Float32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced|630
  f32.const 10
  i32.const 0
  call $~lib/typedarray/Float32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced|630
  f32.const 11
  i32.const 0
  call $~lib/typedarray/Float32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced|630
  f32.const 5
  i32.const 1
  call $~lib/typedarray/Float32Array#indexOf
  i32.const 5
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced|630
  f32.const 5
  i32.const 2
  call $~lib/typedarray/Float32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/typedarray/testArrayIndexOfAndLastIndexOfValues
  local.set $values|631
  local.get $values|631
  call $~lib/array/Array<i32>#get:length
  local.set $length|632
  i32.const 0
  local.get $length|632
  call $~lib/typedarray/Float64Array#constructor
  local.set $array|633
  i32.const 0
  local.set $i|634
  loop $for-loop|58
   local.get $i|634
   local.get $length|632
   i32.lt_s
   local.set $635
   local.get $635
   if
    local.get $array|633
    local.get $i|634
    local.get $values|631
    local.get $i|634
    call $~lib/array/Array<i32>#__get
    f64.convert_i32_s
    call $~lib/typedarray/Float64Array#__set
    local.get $i|634
    i32.const 1
    i32.add
    local.set $i|634
    br $for-loop|58
   end
  end
  local.get $array|633
  f64.const 0
  i32.const 0
  call $~lib/typedarray/Float64Array#indexOf
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|633
  f64.const 11
  i32.const 0
  call $~lib/typedarray/Float64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|633
  f64.const -1
  i32.const 0
  call $~lib/typedarray/Float64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|633
  f64.const 3
  i32.const 0
  call $~lib/typedarray/Float64Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|633
  f64.const 3
  i32.const 2
  call $~lib/typedarray/Float64Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|633
  f64.const 3
  i32.const 3
  call $~lib/typedarray/Float64Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|633
  f64.const 3
  i32.const 4
  call $~lib/typedarray/Float64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|633
  f64.const 1
  i32.const 10
  call $~lib/typedarray/Float64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|633
  f64.const 1
  i32.const -100
  call $~lib/typedarray/Float64Array#indexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|633
  f64.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Float64Array#lastIndexOf@varargs
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|633
  f64.const 11
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Float64Array#lastIndexOf@varargs
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|633
  f64.const -1
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Float64Array#lastIndexOf@varargs
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|633
  f64.const 3
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Float64Array#lastIndexOf@varargs
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|633
  f64.const 3
  i32.const 4
  call $~lib/typedarray/Float64Array#lastIndexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|633
  f64.const 3
  i32.const 3
  call $~lib/typedarray/Float64Array#lastIndexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|633
  f64.const 3
  i32.const 2
  call $~lib/typedarray/Float64Array#lastIndexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|633
  f64.const 1
  i32.const 100
  call $~lib/typedarray/Float64Array#lastIndexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|633
  f64.const 1
  i32.const -10
  call $~lib/typedarray/Float64Array#lastIndexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|633
  f64.const 1
  i32.const -11
  call $~lib/typedarray/Float64Array#lastIndexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $array|633
  i32.const 4
  i32.const 9
  call $~lib/typedarray/Float64Array#subarray
  local.set $sliced|636
  local.get $sliced|636
  f64.const 3
  i32.const 0
  call $~lib/typedarray/Float64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced|636
  f64.const 4
  i32.const 0
  call $~lib/typedarray/Float64Array#indexOf
  i32.const 4
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced|636
  f64.const 5
  i32.const 0
  call $~lib/typedarray/Float64Array#indexOf
  i32.const 5
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced|636
  f64.const 9
  i32.const 0
  call $~lib/typedarray/Float64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced|636
  f64.const 10
  i32.const 0
  call $~lib/typedarray/Float64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced|636
  f64.const 11
  i32.const 0
  call $~lib/typedarray/Float64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced|636
  f64.const 5
  i32.const 1
  call $~lib/typedarray/Float64Array#indexOf
  i32.const 5
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $sliced|636
  f64.const 5
  i32.const 2
  call $~lib/typedarray/Float64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Float64Array#constructor
  local.set $arrNaN64
  local.get $arrNaN64
  i32.const 0
  f64.const nan:0x8000000000000
  call $~lib/typedarray/Float64Array#__set
  local.get $arrNaN64
  f64.const nan:0x8000000000000
  i32.const 0
  call $~lib/typedarray/Float64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $arrNaN64
  f64.const nan:0x8000000000000
  i32.const 0
  call $~lib/typedarray/Float64Array#includes
  i32.const 0
  i32.ne
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Float32Array#constructor
  local.set $arrNaN32
  local.get $arrNaN32
  i32.const 0
  f32.const nan:0x400000
  call $~lib/typedarray/Float32Array#__set
  local.get $arrNaN32
  f32.const nan:0x400000
  i32.const 0
  call $~lib/typedarray/Float32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $arrNaN32
  f32.const nan:0x400000
  i32.const 0
  call $~lib/typedarray/Float32Array#includes
  i32.const 0
  i32.ne
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 0
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $buffer
  local.get $buffer
  i32.const 0
  i32.const 2
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint8Array.wrap@varargs
  local.set $array|642
  local.get $array|642
  call $~lib/typedarray/Uint8Array#get:length
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 2
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.set $buffer
  local.get $buffer
  i32.const 2
  i32.const 2
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint8Array.wrap@varargs
  local.set $array|642
  local.get $array|642
  call $~lib/typedarray/Uint8Array#get:length
  i32.const 0
  i32.eq
  i32.eqz
  if
   unreachable
  end
  global.get $std/typedarray/testArrayWrapValues
  local.set $values|643
  local.get $values|643
  call $~lib/array/Array<i32>#get:length
  local.set $length|644
  i32.const 0
  local.get $length|644
  call $~lib/typedarray/Int8Array#constructor
  local.set $array|645
  i32.const 0
  local.set $i|646
  loop $for-loop|59
   local.get $i|646
   local.get $length|644
   i32.lt_s
   local.set $647
   local.get $647
   if
    local.get $array|645
    local.get $i|646
    local.get $values|643
    local.get $i|646
    call $~lib/array/Array<i32>#__get
    i32.extend8_s
    call $~lib/typedarray/Int8Array#__set
    local.get $i|646
    i32.const 1
    i32.add
    local.set $i|646
    br $for-loop|59
   end
  end
  local.get $array|645
  i32.load $0
  local.get $array|645
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  local.get $array|645
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  local.get $array|645
  i32.load $0 offset=8
  i32.add
  call $~lib/arraybuffer/ArrayBuffer#slice
  local.set $buffer|648
  i32.const 1
  drop
  local.get $buffer|648
  i32.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Int8Array.wrap@varargs
  local.set $result|649
  i32.const 0
  local.set $i|650
  loop $for-loop|60
   local.get $i|650
   local.get $length|644
   i32.lt_s
   local.set $651
   local.get $651
   if
    local.get $array|645
    local.get $i|650
    call $~lib/typedarray/Int8Array#__get
    local.get $result|649
    local.get $i|650
    call $~lib/typedarray/Int8Array#__get
    i32.eq
    i32.eqz
    if
     unreachable
    end
    local.get $i|650
    i32.const 1
    i32.add
    local.set $i|650
    br $for-loop|60
   end
  end
  global.get $std/typedarray/testArrayWrapValues
  local.set $values|652
  local.get $values|652
  call $~lib/array/Array<i32>#get:length
  local.set $length|653
  i32.const 0
  local.get $length|653
  call $~lib/typedarray/Uint8Array#constructor
  local.set $array|654
  i32.const 0
  local.set $i|655
  loop $for-loop|61
   local.get $i|655
   local.get $length|653
   i32.lt_s
   local.set $656
   local.get $656
   if
    local.get $array|654
    local.get $i|655
    local.get $values|652
    local.get $i|655
    call $~lib/array/Array<i32>#__get
    i32.const 255
    i32.and
    call $~lib/typedarray/Uint8Array#__set
    local.get $i|655
    i32.const 1
    i32.add
    local.set $i|655
    br $for-loop|61
   end
  end
  local.get $array|654
  i32.load $0
  local.get $array|654
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  local.get $array|654
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  local.get $array|654
  i32.load $0 offset=8
  i32.add
  call $~lib/arraybuffer/ArrayBuffer#slice
  local.set $buffer|657
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $buffer|657
  i32.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint8Array.wrap@varargs
  local.set $result|658
  i32.const 0
  local.set $i|659
  loop $for-loop|62
   local.get $i|659
   local.get $length|653
   i32.lt_s
   local.set $660
   local.get $660
   if
    local.get $array|654
    local.get $i|659
    call $~lib/typedarray/Uint8Array#__get
    local.get $result|658
    local.get $i|659
    call $~lib/typedarray/Uint8Array#__get
    i32.eq
    i32.eqz
    if
     unreachable
    end
    local.get $i|659
    i32.const 1
    i32.add
    local.set $i|659
    br $for-loop|62
   end
  end
  global.get $std/typedarray/testArrayWrapValues
  local.set $values|661
  local.get $values|661
  call $~lib/array/Array<i32>#get:length
  local.set $length|662
  i32.const 0
  local.get $length|662
  call $~lib/typedarray/Uint8ClampedArray#constructor
  local.set $array|663
  i32.const 0
  local.set $i|664
  loop $for-loop|63
   local.get $i|664
   local.get $length|662
   i32.lt_s
   local.set $665
   local.get $665
   if
    local.get $array|663
    local.get $i|664
    local.get $values|661
    local.get $i|664
    call $~lib/array/Array<i32>#__get
    i32.const 255
    i32.and
    call $~lib/typedarray/Uint8ClampedArray#__set
    local.get $i|664
    i32.const 1
    i32.add
    local.set $i|664
    br $for-loop|63
   end
  end
  local.get $array|663
  i32.load $0
  local.get $array|663
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  local.get $array|663
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  local.get $array|663
  i32.load $0 offset=8
  i32.add
  call $~lib/arraybuffer/ArrayBuffer#slice
  local.set $buffer|666
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $buffer|666
  i32.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray.wrap@varargs
  local.set $result|667
  i32.const 0
  local.set $i|668
  loop $for-loop|64
   local.get $i|668
   local.get $length|662
   i32.lt_s
   local.set $669
   local.get $669
   if
    local.get $array|663
    local.get $i|668
    call $~lib/typedarray/Uint8ClampedArray#__get
    local.get $result|667
    local.get $i|668
    call $~lib/typedarray/Uint8ClampedArray#__get
    i32.eq
    i32.eqz
    if
     unreachable
    end
    local.get $i|668
    i32.const 1
    i32.add
    local.set $i|668
    br $for-loop|64
   end
  end
  global.get $std/typedarray/testArrayWrapValues
  local.set $values|670
  local.get $values|670
  call $~lib/array/Array<i32>#get:length
  local.set $length|671
  i32.const 0
  local.get $length|671
  call $~lib/typedarray/Int16Array#constructor
  local.set $array|672
  i32.const 0
  local.set $i|673
  loop $for-loop|65
   local.get $i|673
   local.get $length|671
   i32.lt_s
   local.set $674
   local.get $674
   if
    local.get $array|672
    local.get $i|673
    local.get $values|670
    local.get $i|673
    call $~lib/array/Array<i32>#__get
    i32.extend16_s
    call $~lib/typedarray/Int16Array#__set
    local.get $i|673
    i32.const 1
    i32.add
    local.set $i|673
    br $for-loop|65
   end
  end
  local.get $array|672
  i32.load $0
  local.get $array|672
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  local.get $array|672
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  local.get $array|672
  i32.load $0 offset=8
  i32.add
  call $~lib/arraybuffer/ArrayBuffer#slice
  local.set $buffer|675
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $buffer|675
  i32.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Int16Array.wrap@varargs
  local.set $result|676
  i32.const 0
  local.set $i|677
  loop $for-loop|66
   local.get $i|677
   local.get $length|671
   i32.lt_s
   local.set $678
   local.get $678
   if
    local.get $array|672
    local.get $i|677
    call $~lib/typedarray/Int16Array#__get
    local.get $result|676
    local.get $i|677
    call $~lib/typedarray/Int16Array#__get
    i32.eq
    i32.eqz
    if
     unreachable
    end
    local.get $i|677
    i32.const 1
    i32.add
    local.set $i|677
    br $for-loop|66
   end
  end
  global.get $std/typedarray/testArrayWrapValues
  local.set $values|679
  local.get $values|679
  call $~lib/array/Array<i32>#get:length
  local.set $length|680
  i32.const 0
  local.get $length|680
  call $~lib/typedarray/Uint16Array#constructor
  local.set $array|681
  i32.const 0
  local.set $i|682
  loop $for-loop|67
   local.get $i|682
   local.get $length|680
   i32.lt_s
   local.set $683
   local.get $683
   if
    local.get $array|681
    local.get $i|682
    local.get $values|679
    local.get $i|682
    call $~lib/array/Array<i32>#__get
    i32.const 65535
    i32.and
    call $~lib/typedarray/Uint16Array#__set
    local.get $i|682
    i32.const 1
    i32.add
    local.set $i|682
    br $for-loop|67
   end
  end
  local.get $array|681
  i32.load $0
  local.get $array|681
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  local.get $array|681
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  local.get $array|681
  i32.load $0 offset=8
  i32.add
  call $~lib/arraybuffer/ArrayBuffer#slice
  local.set $buffer|684
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $buffer|684
  i32.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint16Array.wrap@varargs
  local.set $result|685
  i32.const 0
  local.set $i|686
  loop $for-loop|68
   local.get $i|686
   local.get $length|680
   i32.lt_s
   local.set $687
   local.get $687
   if
    local.get $array|681
    local.get $i|686
    call $~lib/typedarray/Uint16Array#__get
    local.get $result|685
    local.get $i|686
    call $~lib/typedarray/Uint16Array#__get
    i32.eq
    i32.eqz
    if
     unreachable
    end
    local.get $i|686
    i32.const 1
    i32.add
    local.set $i|686
    br $for-loop|68
   end
  end
  global.get $std/typedarray/testArrayWrapValues
  local.set $values|688
  local.get $values|688
  call $~lib/array/Array<i32>#get:length
  local.set $length|689
  i32.const 0
  local.get $length|689
  call $~lib/typedarray/Int32Array#constructor
  local.set $array|690
  i32.const 0
  local.set $i|691
  loop $for-loop|69
   local.get $i|691
   local.get $length|689
   i32.lt_s
   local.set $692
   local.get $692
   if
    local.get $array|690
    local.get $i|691
    local.get $values|688
    local.get $i|691
    call $~lib/array/Array<i32>#__get
    call $~lib/typedarray/Int32Array#__set
    local.get $i|691
    i32.const 1
    i32.add
    local.set $i|691
    br $for-loop|69
   end
  end
  local.get $array|690
  i32.load $0
  local.get $array|690
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  local.get $array|690
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  local.get $array|690
  i32.load $0 offset=8
  i32.add
  call $~lib/arraybuffer/ArrayBuffer#slice
  local.set $buffer|693
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $buffer|693
  i32.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Int32Array.wrap@varargs
  local.set $result|694
  i32.const 0
  local.set $i|695
  loop $for-loop|70
   local.get $i|695
   local.get $length|689
   i32.lt_s
   local.set $696
   local.get $696
   if
    local.get $array|690
    local.get $i|695
    call $~lib/typedarray/Int32Array#__get
    local.get $result|694
    local.get $i|695
    call $~lib/typedarray/Int32Array#__get
    i32.eq
    i32.eqz
    if
     unreachable
    end
    local.get $i|695
    i32.const 1
    i32.add
    local.set $i|695
    br $for-loop|70
   end
  end
  global.get $std/typedarray/testArrayWrapValues
  local.set $values|697
  local.get $values|697
  call $~lib/array/Array<i32>#get:length
  local.set $length|698
  i32.const 0
  local.get $length|698
  call $~lib/typedarray/Uint32Array#constructor
  local.set $array|699
  i32.const 0
  local.set $i|700
  loop $for-loop|71
   local.get $i|700
   local.get $length|698
   i32.lt_s
   local.set $701
   local.get $701
   if
    local.get $array|699
    local.get $i|700
    local.get $values|697
    local.get $i|700
    call $~lib/array/Array<i32>#__get
    call $~lib/typedarray/Uint32Array#__set
    local.get $i|700
    i32.const 1
    i32.add
    local.set $i|700
    br $for-loop|71
   end
  end
  local.get $array|699
  i32.load $0
  local.get $array|699
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  local.get $array|699
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  local.get $array|699
  i32.load $0 offset=8
  i32.add
  call $~lib/arraybuffer/ArrayBuffer#slice
  local.set $buffer|702
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $buffer|702
  i32.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint32Array.wrap@varargs
  local.set $result|703
  i32.const 0
  local.set $i|704
  loop $for-loop|72
   local.get $i|704
   local.get $length|698
   i32.lt_s
   local.set $705
   local.get $705
   if
    local.get $array|699
    local.get $i|704
    call $~lib/typedarray/Uint32Array#__get
    local.get $result|703
    local.get $i|704
    call $~lib/typedarray/Uint32Array#__get
    i32.eq
    i32.eqz
    if
     unreachable
    end
    local.get $i|704
    i32.const 1
    i32.add
    local.set $i|704
    br $for-loop|72
   end
  end
  global.get $std/typedarray/testArrayWrapValues
  local.set $values|706
  local.get $values|706
  call $~lib/array/Array<i32>#get:length
  local.set $length|707
  i32.const 0
  local.get $length|707
  call $~lib/typedarray/Int64Array#constructor
  local.set $array|708
  i32.const 0
  local.set $i|709
  loop $for-loop|73
   local.get $i|709
   local.get $length|707
   i32.lt_s
   local.set $710
   local.get $710
   if
    local.get $array|708
    local.get $i|709
    local.get $values|706
    local.get $i|709
    call $~lib/array/Array<i32>#__get
    i64.extend_i32_s
    call $~lib/typedarray/Int64Array#__set
    local.get $i|709
    i32.const 1
    i32.add
    local.set $i|709
    br $for-loop|73
   end
  end
  local.get $array|708
  i32.load $0
  local.get $array|708
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  local.get $array|708
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  local.get $array|708
  i32.load $0 offset=8
  i32.add
  call $~lib/arraybuffer/ArrayBuffer#slice
  local.set $buffer|711
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $buffer|711
  i32.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Int64Array.wrap@varargs
  local.set $result|712
  i32.const 0
  local.set $i|713
  loop $for-loop|74
   local.get $i|713
   local.get $length|707
   i32.lt_s
   local.set $714
   local.get $714
   if
    local.get $array|708
    local.get $i|713
    call $~lib/typedarray/Int64Array#__get
    local.get $result|712
    local.get $i|713
    call $~lib/typedarray/Int64Array#__get
    i64.eq
    i32.eqz
    if
     unreachable
    end
    local.get $i|713
    i32.const 1
    i32.add
    local.set $i|713
    br $for-loop|74
   end
  end
  global.get $std/typedarray/testArrayWrapValues
  local.set $values|715
  local.get $values|715
  call $~lib/array/Array<i32>#get:length
  local.set $length|716
  i32.const 0
  local.get $length|716
  call $~lib/typedarray/Uint64Array#constructor
  local.set $array|717
  i32.const 0
  local.set $i|718
  loop $for-loop|75
   local.get $i|718
   local.get $length|716
   i32.lt_s
   local.set $719
   local.get $719
   if
    local.get $array|717
    local.get $i|718
    local.get $values|715
    local.get $i|718
    call $~lib/array/Array<i32>#__get
    i64.extend_i32_s
    call $~lib/typedarray/Uint64Array#__set
    local.get $i|718
    i32.const 1
    i32.add
    local.set $i|718
    br $for-loop|75
   end
  end
  local.get $array|717
  i32.load $0
  local.get $array|717
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  local.get $array|717
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  local.get $array|717
  i32.load $0 offset=8
  i32.add
  call $~lib/arraybuffer/ArrayBuffer#slice
  local.set $buffer|720
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $buffer|720
  i32.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint64Array.wrap@varargs
  local.set $result|721
  i32.const 0
  local.set $i|722
  loop $for-loop|76
   local.get $i|722
   local.get $length|716
   i32.lt_s
   local.set $723
   local.get $723
   if
    local.get $array|717
    local.get $i|722
    call $~lib/typedarray/Uint64Array#__get
    local.get $result|721
    local.get $i|722
    call $~lib/typedarray/Uint64Array#__get
    i64.eq
    i32.eqz
    if
     unreachable
    end
    local.get $i|722
    i32.const 1
    i32.add
    local.set $i|722
    br $for-loop|76
   end
  end
  global.get $std/typedarray/testArrayWrapValues
  local.set $values|724
  local.get $values|724
  call $~lib/array/Array<i32>#get:length
  local.set $length|725
  i32.const 0
  local.get $length|725
  call $~lib/typedarray/Float32Array#constructor
  local.set $array|726
  i32.const 0
  local.set $i|727
  loop $for-loop|77
   local.get $i|727
   local.get $length|725
   i32.lt_s
   local.set $728
   local.get $728
   if
    local.get $array|726
    local.get $i|727
    local.get $values|724
    local.get $i|727
    call $~lib/array/Array<i32>#__get
    f32.convert_i32_s
    call $~lib/typedarray/Float32Array#__set
    local.get $i|727
    i32.const 1
    i32.add
    local.set $i|727
    br $for-loop|77
   end
  end
  local.get $array|726
  i32.load $0
  local.get $array|726
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  local.get $array|726
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  local.get $array|726
  i32.load $0 offset=8
  i32.add
  call $~lib/arraybuffer/ArrayBuffer#slice
  local.set $buffer|729
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $buffer|729
  i32.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Float32Array.wrap@varargs
  local.set $result|730
  i32.const 0
  local.set $i|731
  loop $for-loop|78
   local.get $i|731
   local.get $length|725
   i32.lt_s
   local.set $732
   local.get $732
   if
    local.get $array|726
    local.get $i|731
    call $~lib/typedarray/Float32Array#__get
    local.get $result|730
    local.get $i|731
    call $~lib/typedarray/Float32Array#__get
    f32.eq
    i32.eqz
    if
     unreachable
    end
    local.get $i|731
    i32.const 1
    i32.add
    local.set $i|731
    br $for-loop|78
   end
  end
  global.get $std/typedarray/testArrayWrapValues
  local.set $values|733
  local.get $values|733
  call $~lib/array/Array<i32>#get:length
  local.set $length|734
  i32.const 0
  local.get $length|734
  call $~lib/typedarray/Float64Array#constructor
  local.set $array|735
  i32.const 0
  local.set $i|736
  loop $for-loop|79
   local.get $i|736
   local.get $length|734
   i32.lt_s
   local.set $737
   local.get $737
   if
    local.get $array|735
    local.get $i|736
    local.get $values|733
    local.get $i|736
    call $~lib/array/Array<i32>#__get
    f64.convert_i32_s
    call $~lib/typedarray/Float64Array#__set
    local.get $i|736
    i32.const 1
    i32.add
    local.set $i|736
    br $for-loop|79
   end
  end
  local.get $array|735
  i32.load $0
  local.get $array|735
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  local.get $array|735
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  local.get $array|735
  i32.load $0 offset=8
  i32.add
  call $~lib/arraybuffer/ArrayBuffer#slice
  local.set $buffer|738
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $buffer|738
  i32.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Float64Array.wrap@varargs
  local.set $result|739
  i32.const 0
  local.set $i|740
  loop $for-loop|80
   local.get $i|740
   local.get $length|734
   i32.lt_s
   local.set $741
   local.get $741
   if
    local.get $array|735
    local.get $i|740
    call $~lib/typedarray/Float64Array#__get
    local.get $result|739
    local.get $i|740
    call $~lib/typedarray/Float64Array#__get
    f64.eq
    i32.eqz
    if
     unreachable
    end
    local.get $i|740
    i32.const 1
    i32.add
    local.set $i|740
    br $for-loop|80
   end
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int64Array#constructor
  local.set $setSource4
  local.get $setSource4
  i32.const 0
  i64.const 7
  call $~lib/typedarray/Int64Array#__set
  local.get $setSource4
  i32.const 1
  i64.const 8
  call $~lib/typedarray/Int64Array#__set
  local.get $setSource4
  i32.const 2
  i64.const 9
  call $~lib/typedarray/Int64Array#__set
  i32.const 0
  i32.const 4
  call $~lib/typedarray/Uint8Array#constructor
  local.set $setSource5
  local.get $setSource5
  i32.const 0
  i32.const 100
  call $~lib/typedarray/Uint8Array#__set
  local.get $setSource5
  i32.const 1
  i32.const 101
  call $~lib/typedarray/Uint8Array#__set
  local.get $setSource5
  i32.const 2
  i32.const 102
  call $~lib/typedarray/Uint8Array#__set
  local.get $setSource5
  i32.const 3
  i32.const 103
  call $~lib/typedarray/Uint8Array#__set
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int16Array#constructor
  local.set $setSource6
  local.get $setSource6
  i32.const 0
  i32.const 1000
  call $~lib/typedarray/Int16Array#__set
  local.get $setSource6
  i32.const 1
  i32.const 1001
  call $~lib/typedarray/Int16Array#__set
  local.get $setSource6
  i32.const 2
  i32.const 1002
  call $~lib/typedarray/Int16Array#__set
  i32.const 0
  i32.const 10
  call $~lib/typedarray/Int8Array#constructor
  local.set $a|753
  local.get $a|753
  global.get $std/typedarray/setSource1
  i32.const 0
  call $~lib/typedarray/Int8Array#set<~lib/array/Array<i32>>
  local.get $a|753
  local.set $target
  i32.const 10
  i32.const 0
  i32.const 15
  i32.const 6688
  call $~lib/rt/__newArray
  local.set $compare
  local.get $target
  call $~lib/typedarray/Int8Array#get:length
  local.set $len|758
  local.get $len|758
  local.get $compare
  call $~lib/array/Array<i8>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $i|759
  loop $for-loop|81
   local.get $i|759
   local.get $len|758
   i32.lt_s
   local.set $760
   local.get $760
   if
    local.get $target
    local.get $i|759
    call $~lib/typedarray/Int8Array#__uget
    local.set $vala
    local.get $compare
    local.get $i|759
    call $~lib/array/Array<i8>#__uget
    local.set $valb
    local.get $vala
    local.get $valb
    i32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $i|759
    i32.const 1
    i32.add
    local.set $i|759
    br $for-loop|81
   end
  end
  local.get $a|753
  global.get $std/typedarray/setSource2
  i32.const 3
  call $~lib/typedarray/Int8Array#set<~lib/array/Array<f32>>
  local.get $a|753
  local.set $target|765
  i32.const 10
  i32.const 0
  i32.const 15
  i32.const 6720
  call $~lib/rt/__newArray
  local.set $compare|766
  local.get $target|765
  call $~lib/typedarray/Int8Array#get:length
  local.set $len|767
  local.get $len|767
  local.get $compare|766
  call $~lib/array/Array<i8>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $i|768
  loop $for-loop|82
   local.get $i|768
   local.get $len|767
   i32.lt_s
   local.set $769
   local.get $769
   if
    local.get $target|765
    local.get $i|768
    call $~lib/typedarray/Int8Array#__uget
    local.set $vala|770
    local.get $compare|766
    local.get $i|768
    call $~lib/array/Array<i8>#__uget
    local.set $valb|771
    local.get $vala|770
    local.get $valb|771
    i32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $i|768
    i32.const 1
    i32.add
    local.set $i|768
    br $for-loop|82
   end
  end
  local.get $a|753
  local.get $setSource4
  i32.const 6
  call $~lib/typedarray/Int8Array#set<~lib/typedarray/Int64Array>
  local.get $a|753
  local.set $target|774
  i32.const 10
  i32.const 0
  i32.const 15
  i32.const 6752
  call $~lib/rt/__newArray
  local.set $compare|775
  local.get $target|774
  call $~lib/typedarray/Int8Array#get:length
  local.set $len|776
  local.get $len|776
  local.get $compare|775
  call $~lib/array/Array<i8>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $i|777
  loop $for-loop|83
   local.get $i|777
   local.get $len|776
   i32.lt_s
   local.set $778
   local.get $778
   if
    local.get $target|774
    local.get $i|777
    call $~lib/typedarray/Int8Array#__uget
    local.set $vala|779
    local.get $compare|775
    local.get $i|777
    call $~lib/array/Array<i8>#__uget
    local.set $valb|780
    local.get $vala|779
    local.get $valb|780
    i32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $i|777
    i32.const 1
    i32.add
    local.set $i|777
    br $for-loop|83
   end
  end
  i32.const 1
  drop
  local.get $a|753
  global.get $std/typedarray/setSource3
  i32.const 2
  call $~lib/typedarray/Int8Array#set<~lib/array/Array<f64>>
  local.get $a|753
  local.set $target|783
  i32.const 10
  i32.const 0
  i32.const 15
  i32.const 6784
  call $~lib/rt/__newArray
  local.set $compare|784
  local.get $target|783
  call $~lib/typedarray/Int8Array#get:length
  local.set $len|785
  local.get $len|785
  local.get $compare|784
  call $~lib/array/Array<i8>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $i|786
  loop $for-loop|84
   local.get $i|786
   local.get $len|785
   i32.lt_s
   local.set $787
   local.get $787
   if
    local.get $target|783
    local.get $i|786
    call $~lib/typedarray/Int8Array#__uget
    local.set $vala|788
    local.get $compare|784
    local.get $i|786
    call $~lib/array/Array<i8>#__uget
    local.set $valb|789
    local.get $vala|788
    local.get $valb|789
    i32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $i|786
    i32.const 1
    i32.add
    local.set $i|786
    br $for-loop|84
   end
  end
  local.get $a|753
  local.get $setSource5
  i32.const 0
  call $~lib/typedarray/Int8Array#set<~lib/typedarray/Uint8Array>
  local.get $a|753
  local.get $setSource6
  i32.const 4
  call $~lib/typedarray/Int8Array#set<~lib/typedarray/Int16Array>
  local.get $a|753
  global.get $std/typedarray/setSource7
  i32.const 7
  call $~lib/typedarray/Int8Array#set<~lib/array/Array<i8>>
  i32.const 0
  drop
  local.get $a|753
  local.set $target|792
  i32.const 10
  i32.const 0
  i32.const 15
  i32.const 6816
  call $~lib/rt/__newArray
  local.set $compare|793
  local.get $target|792
  call $~lib/typedarray/Int8Array#get:length
  local.set $len|794
  local.get $len|794
  local.get $compare|793
  call $~lib/array/Array<i8>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $i|795
  loop $for-loop|85
   local.get $i|795
   local.get $len|794
   i32.lt_s
   local.set $796
   local.get $796
   if
    local.get $target|792
    local.get $i|795
    call $~lib/typedarray/Int8Array#__uget
    local.set $vala|797
    local.get $compare|793
    local.get $i|795
    call $~lib/array/Array<i8>#__uget
    local.set $valb|798
    local.get $vala|797
    local.get $valb|798
    i32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $i|795
    i32.const 1
    i32.add
    local.set $i|795
    br $for-loop|85
   end
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int64Array#constructor
  local.set $setSource4|799
  local.get $setSource4|799
  i32.const 0
  i64.const 7
  call $~lib/typedarray/Int64Array#__set
  local.get $setSource4|799
  i32.const 1
  i64.const 8
  call $~lib/typedarray/Int64Array#__set
  local.get $setSource4|799
  i32.const 2
  i64.const 9
  call $~lib/typedarray/Int64Array#__set
  i32.const 0
  i32.const 4
  call $~lib/typedarray/Uint8Array#constructor
  local.set $setSource5|800
  local.get $setSource5|800
  i32.const 0
  i32.const 100
  call $~lib/typedarray/Uint8Array#__set
  local.get $setSource5|800
  i32.const 1
  i32.const 101
  call $~lib/typedarray/Uint8Array#__set
  local.get $setSource5|800
  i32.const 2
  i32.const 102
  call $~lib/typedarray/Uint8Array#__set
  local.get $setSource5|800
  i32.const 3
  i32.const 103
  call $~lib/typedarray/Uint8Array#__set
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int16Array#constructor
  local.set $setSource6|801
  local.get $setSource6|801
  i32.const 0
  i32.const 1000
  call $~lib/typedarray/Int16Array#__set
  local.get $setSource6|801
  i32.const 1
  i32.const 1001
  call $~lib/typedarray/Int16Array#__set
  local.get $setSource6|801
  i32.const 2
  i32.const 1002
  call $~lib/typedarray/Int16Array#__set
  i32.const 0
  i32.const 10
  call $~lib/typedarray/Uint8Array#constructor
  local.set $a|802
  local.get $a|802
  global.get $std/typedarray/setSource1
  i32.const 0
  call $~lib/typedarray/Uint8Array#set<~lib/array/Array<i32>>
  local.get $a|802
  local.set $target|805
  i32.const 10
  i32.const 0
  i32.const 63
  i32.const 6848
  call $~lib/rt/__newArray
  local.set $compare|806
  local.get $target|805
  call $~lib/typedarray/Uint8Array#get:length
  local.set $len|807
  local.get $len|807
  local.get $compare|806
  call $~lib/array/Array<u8>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $i|808
  loop $for-loop|86
   local.get $i|808
   local.get $len|807
   i32.lt_s
   local.set $809
   local.get $809
   if
    local.get $target|805
    local.get $i|808
    call $~lib/typedarray/Uint8Array#__uget
    local.set $vala|810
    local.get $compare|806
    local.get $i|808
    call $~lib/array/Array<u8>#__uget
    local.set $valb|811
    local.get $vala|810
    local.get $valb|811
    i32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $i|808
    i32.const 1
    i32.add
    local.set $i|808
    br $for-loop|86
   end
  end
  local.get $a|802
  global.get $std/typedarray/setSource2
  i32.const 3
  call $~lib/typedarray/Uint8Array#set<~lib/array/Array<f32>>
  local.get $a|802
  local.set $target|814
  i32.const 10
  i32.const 0
  i32.const 63
  i32.const 6880
  call $~lib/rt/__newArray
  local.set $compare|815
  local.get $target|814
  call $~lib/typedarray/Uint8Array#get:length
  local.set $len|816
  local.get $len|816
  local.get $compare|815
  call $~lib/array/Array<u8>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $i|817
  loop $for-loop|87
   local.get $i|817
   local.get $len|816
   i32.lt_s
   local.set $818
   local.get $818
   if
    local.get $target|814
    local.get $i|817
    call $~lib/typedarray/Uint8Array#__uget
    local.set $vala|819
    local.get $compare|815
    local.get $i|817
    call $~lib/array/Array<u8>#__uget
    local.set $valb|820
    local.get $vala|819
    local.get $valb|820
    i32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $i|817
    i32.const 1
    i32.add
    local.set $i|817
    br $for-loop|87
   end
  end
  local.get $a|802
  local.get $setSource4|799
  i32.const 6
  call $~lib/typedarray/Uint8Array#set<~lib/typedarray/Int64Array>
  local.get $a|802
  local.set $target|823
  i32.const 10
  i32.const 0
  i32.const 63
  i32.const 6912
  call $~lib/rt/__newArray
  local.set $compare|824
  local.get $target|823
  call $~lib/typedarray/Uint8Array#get:length
  local.set $len|825
  local.get $len|825
  local.get $compare|824
  call $~lib/array/Array<u8>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $i|826
  loop $for-loop|88
   local.get $i|826
   local.get $len|825
   i32.lt_s
   local.set $827
   local.get $827
   if
    local.get $target|823
    local.get $i|826
    call $~lib/typedarray/Uint8Array#__uget
    local.set $vala|828
    local.get $compare|824
    local.get $i|826
    call $~lib/array/Array<u8>#__uget
    local.set $valb|829
    local.get $vala|828
    local.get $valb|829
    i32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $i|826
    i32.const 1
    i32.add
    local.set $i|826
    br $for-loop|88
   end
  end
  i32.const 1
  drop
  local.get $a|802
  global.get $std/typedarray/setSource3
  i32.const 2
  call $~lib/typedarray/Uint8Array#set<~lib/array/Array<f64>>
  local.get $a|802
  local.set $target|832
  i32.const 10
  i32.const 0
  i32.const 63
  i32.const 6944
  call $~lib/rt/__newArray
  local.set $compare|833
  local.get $target|832
  call $~lib/typedarray/Uint8Array#get:length
  local.set $len|834
  local.get $len|834
  local.get $compare|833
  call $~lib/array/Array<u8>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $i|835
  loop $for-loop|89
   local.get $i|835
   local.get $len|834
   i32.lt_s
   local.set $836
   local.get $836
   if
    local.get $target|832
    local.get $i|835
    call $~lib/typedarray/Uint8Array#__uget
    local.set $vala|837
    local.get $compare|833
    local.get $i|835
    call $~lib/array/Array<u8>#__uget
    local.set $valb|838
    local.get $vala|837
    local.get $valb|838
    i32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $i|835
    i32.const 1
    i32.add
    local.set $i|835
    br $for-loop|89
   end
  end
  local.get $a|802
  local.get $setSource5|800
  i32.const 0
  call $~lib/typedarray/Uint8Array#set<~lib/typedarray/Uint8Array>
  local.get $a|802
  local.get $setSource6|801
  i32.const 4
  call $~lib/typedarray/Uint8Array#set<~lib/typedarray/Int16Array>
  local.get $a|802
  global.get $std/typedarray/setSource7
  i32.const 7
  call $~lib/typedarray/Uint8Array#set<~lib/array/Array<i8>>
  i32.const 0
  drop
  local.get $a|802
  local.set $target|841
  i32.const 10
  i32.const 0
  i32.const 63
  i32.const 6976
  call $~lib/rt/__newArray
  local.set $compare|842
  local.get $target|841
  call $~lib/typedarray/Uint8Array#get:length
  local.set $len|843
  local.get $len|843
  local.get $compare|842
  call $~lib/array/Array<u8>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $i|844
  loop $for-loop|90
   local.get $i|844
   local.get $len|843
   i32.lt_s
   local.set $845
   local.get $845
   if
    local.get $target|841
    local.get $i|844
    call $~lib/typedarray/Uint8Array#__uget
    local.set $vala|846
    local.get $compare|842
    local.get $i|844
    call $~lib/array/Array<u8>#__uget
    local.set $valb|847
    local.get $vala|846
    local.get $valb|847
    i32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $i|844
    i32.const 1
    i32.add
    local.set $i|844
    br $for-loop|90
   end
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int64Array#constructor
  local.set $setSource4|848
  local.get $setSource4|848
  i32.const 0
  i64.const 7
  call $~lib/typedarray/Int64Array#__set
  local.get $setSource4|848
  i32.const 1
  i64.const 8
  call $~lib/typedarray/Int64Array#__set
  local.get $setSource4|848
  i32.const 2
  i64.const 9
  call $~lib/typedarray/Int64Array#__set
  i32.const 0
  i32.const 4
  call $~lib/typedarray/Uint8Array#constructor
  local.set $setSource5|849
  local.get $setSource5|849
  i32.const 0
  i32.const 100
  call $~lib/typedarray/Uint8Array#__set
  local.get $setSource5|849
  i32.const 1
  i32.const 101
  call $~lib/typedarray/Uint8Array#__set
  local.get $setSource5|849
  i32.const 2
  i32.const 102
  call $~lib/typedarray/Uint8Array#__set
  local.get $setSource5|849
  i32.const 3
  i32.const 103
  call $~lib/typedarray/Uint8Array#__set
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int16Array#constructor
  local.set $setSource6|850
  local.get $setSource6|850
  i32.const 0
  i32.const 1000
  call $~lib/typedarray/Int16Array#__set
  local.get $setSource6|850
  i32.const 1
  i32.const 1001
  call $~lib/typedarray/Int16Array#__set
  local.get $setSource6|850
  i32.const 2
  i32.const 1002
  call $~lib/typedarray/Int16Array#__set
  i32.const 0
  i32.const 10
  call $~lib/typedarray/Uint8ClampedArray#constructor
  local.set $a|851
  local.get $a|851
  global.get $std/typedarray/setSource1
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#set<~lib/array/Array<i32>>
  local.get $a|851
  local.set $target|854
  i32.const 10
  i32.const 0
  i32.const 63
  i32.const 7008
  call $~lib/rt/__newArray
  local.set $compare|855
  local.get $target|854
  call $~lib/typedarray/Uint8ClampedArray#get:length
  local.set $len|856
  local.get $len|856
  local.get $compare|855
  call $~lib/array/Array<u8>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $i|857
  loop $for-loop|91
   local.get $i|857
   local.get $len|856
   i32.lt_s
   local.set $858
   local.get $858
   if
    local.get $target|854
    local.get $i|857
    call $~lib/typedarray/Uint8ClampedArray#__uget
    local.set $vala|859
    local.get $compare|855
    local.get $i|857
    call $~lib/array/Array<u8>#__uget
    local.set $valb|860
    local.get $vala|859
    local.get $valb|860
    i32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $i|857
    i32.const 1
    i32.add
    local.set $i|857
    br $for-loop|91
   end
  end
  local.get $a|851
  global.get $std/typedarray/setSource2
  i32.const 3
  call $~lib/typedarray/Uint8ClampedArray#set<~lib/array/Array<f32>>
  local.get $a|851
  local.set $target|863
  i32.const 10
  i32.const 0
  i32.const 63
  i32.const 7040
  call $~lib/rt/__newArray
  local.set $compare|864
  local.get $target|863
  call $~lib/typedarray/Uint8ClampedArray#get:length
  local.set $len|865
  local.get $len|865
  local.get $compare|864
  call $~lib/array/Array<u8>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $i|866
  loop $for-loop|92
   local.get $i|866
   local.get $len|865
   i32.lt_s
   local.set $867
   local.get $867
   if
    local.get $target|863
    local.get $i|866
    call $~lib/typedarray/Uint8ClampedArray#__uget
    local.set $vala|868
    local.get $compare|864
    local.get $i|866
    call $~lib/array/Array<u8>#__uget
    local.set $valb|869
    local.get $vala|868
    local.get $valb|869
    i32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $i|866
    i32.const 1
    i32.add
    local.set $i|866
    br $for-loop|92
   end
  end
  local.get $a|851
  local.get $setSource4|848
  i32.const 6
  call $~lib/typedarray/Uint8ClampedArray#set<~lib/typedarray/Int64Array>
  local.get $a|851
  local.set $target|872
  i32.const 10
  i32.const 0
  i32.const 63
  i32.const 7072
  call $~lib/rt/__newArray
  local.set $compare|873
  local.get $target|872
  call $~lib/typedarray/Uint8ClampedArray#get:length
  local.set $len|874
  local.get $len|874
  local.get $compare|873
  call $~lib/array/Array<u8>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $i|875
  loop $for-loop|93
   local.get $i|875
   local.get $len|874
   i32.lt_s
   local.set $876
   local.get $876
   if
    local.get $target|872
    local.get $i|875
    call $~lib/typedarray/Uint8ClampedArray#__uget
    local.set $vala|877
    local.get $compare|873
    local.get $i|875
    call $~lib/array/Array<u8>#__uget
    local.set $valb|878
    local.get $vala|877
    local.get $valb|878
    i32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $i|875
    i32.const 1
    i32.add
    local.set $i|875
    br $for-loop|93
   end
  end
  i32.const 1
  drop
  local.get $a|851
  global.get $std/typedarray/setSource3
  i32.const 2
  call $~lib/typedarray/Uint8ClampedArray#set<~lib/array/Array<f64>>
  local.get $a|851
  local.set $target|881
  i32.const 10
  i32.const 0
  i32.const 63
  i32.const 7104
  call $~lib/rt/__newArray
  local.set $compare|882
  local.get $target|881
  call $~lib/typedarray/Uint8ClampedArray#get:length
  local.set $len|883
  local.get $len|883
  local.get $compare|882
  call $~lib/array/Array<u8>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $i|884
  loop $for-loop|94
   local.get $i|884
   local.get $len|883
   i32.lt_s
   local.set $885
   local.get $885
   if
    local.get $target|881
    local.get $i|884
    call $~lib/typedarray/Uint8ClampedArray#__uget
    local.set $vala|886
    local.get $compare|882
    local.get $i|884
    call $~lib/array/Array<u8>#__uget
    local.set $valb|887
    local.get $vala|886
    local.get $valb|887
    i32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $i|884
    i32.const 1
    i32.add
    local.set $i|884
    br $for-loop|94
   end
  end
  local.get $a|851
  local.get $setSource5|849
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#set<~lib/typedarray/Uint8Array>
  local.get $a|851
  local.get $setSource6|850
  i32.const 4
  call $~lib/typedarray/Uint8ClampedArray#set<~lib/typedarray/Int16Array>
  local.get $a|851
  global.get $std/typedarray/setSource7
  i32.const 7
  call $~lib/typedarray/Uint8ClampedArray#set<~lib/array/Array<i8>>
  i32.const 1
  drop
  local.get $a|851
  local.set $target|890
  i32.const 10
  i32.const 0
  i32.const 63
  i32.const 7136
  call $~lib/rt/__newArray
  local.set $compare|891
  local.get $target|890
  call $~lib/typedarray/Uint8ClampedArray#get:length
  local.set $len|892
  local.get $len|892
  local.get $compare|891
  call $~lib/array/Array<u8>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $i|893
  loop $for-loop|95
   local.get $i|893
   local.get $len|892
   i32.lt_s
   local.set $894
   local.get $894
   if
    local.get $target|890
    local.get $i|893
    call $~lib/typedarray/Uint8ClampedArray#__uget
    local.set $vala|895
    local.get $compare|891
    local.get $i|893
    call $~lib/array/Array<u8>#__uget
    local.set $valb|896
    local.get $vala|895
    local.get $valb|896
    i32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $i|893
    i32.const 1
    i32.add
    local.set $i|893
    br $for-loop|95
   end
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int64Array#constructor
  local.set $setSource4|897
  local.get $setSource4|897
  i32.const 0
  i64.const 7
  call $~lib/typedarray/Int64Array#__set
  local.get $setSource4|897
  i32.const 1
  i64.const 8
  call $~lib/typedarray/Int64Array#__set
  local.get $setSource4|897
  i32.const 2
  i64.const 9
  call $~lib/typedarray/Int64Array#__set
  i32.const 0
  i32.const 4
  call $~lib/typedarray/Uint8Array#constructor
  local.set $setSource5|898
  local.get $setSource5|898
  i32.const 0
  i32.const 100
  call $~lib/typedarray/Uint8Array#__set
  local.get $setSource5|898
  i32.const 1
  i32.const 101
  call $~lib/typedarray/Uint8Array#__set
  local.get $setSource5|898
  i32.const 2
  i32.const 102
  call $~lib/typedarray/Uint8Array#__set
  local.get $setSource5|898
  i32.const 3
  i32.const 103
  call $~lib/typedarray/Uint8Array#__set
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int16Array#constructor
  local.set $setSource6|899
  local.get $setSource6|899
  i32.const 0
  i32.const 1000
  call $~lib/typedarray/Int16Array#__set
  local.get $setSource6|899
  i32.const 1
  i32.const 1001
  call $~lib/typedarray/Int16Array#__set
  local.get $setSource6|899
  i32.const 2
  i32.const 1002
  call $~lib/typedarray/Int16Array#__set
  i32.const 0
  i32.const 10
  call $~lib/typedarray/Int16Array#constructor
  local.set $a|900
  local.get $a|900
  global.get $std/typedarray/setSource1
  i32.const 0
  call $~lib/typedarray/Int16Array#set<~lib/array/Array<i32>>
  local.get $a|900
  local.set $target|903
  i32.const 10
  i32.const 1
  i32.const 64
  i32.const 7168
  call $~lib/rt/__newArray
  local.set $compare|904
  local.get $target|903
  call $~lib/typedarray/Int16Array#get:length
  local.set $len|905
  local.get $len|905
  local.get $compare|904
  call $~lib/array/Array<i16>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $i|906
  loop $for-loop|96
   local.get $i|906
   local.get $len|905
   i32.lt_s
   local.set $907
   local.get $907
   if
    local.get $target|903
    local.get $i|906
    call $~lib/typedarray/Int16Array#__uget
    local.set $vala|908
    local.get $compare|904
    local.get $i|906
    call $~lib/array/Array<i16>#__uget
    local.set $valb|909
    local.get $vala|908
    local.get $valb|909
    i32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $i|906
    i32.const 1
    i32.add
    local.set $i|906
    br $for-loop|96
   end
  end
  local.get $a|900
  global.get $std/typedarray/setSource2
  i32.const 3
  call $~lib/typedarray/Int16Array#set<~lib/array/Array<f32>>
  local.get $a|900
  local.set $target|912
  i32.const 10
  i32.const 1
  i32.const 64
  i32.const 7216
  call $~lib/rt/__newArray
  local.set $compare|913
  local.get $target|912
  call $~lib/typedarray/Int16Array#get:length
  local.set $len|914
  local.get $len|914
  local.get $compare|913
  call $~lib/array/Array<i16>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $i|915
  loop $for-loop|97
   local.get $i|915
   local.get $len|914
   i32.lt_s
   local.set $916
   local.get $916
   if
    local.get $target|912
    local.get $i|915
    call $~lib/typedarray/Int16Array#__uget
    local.set $vala|917
    local.get $compare|913
    local.get $i|915
    call $~lib/array/Array<i16>#__uget
    local.set $valb|918
    local.get $vala|917
    local.get $valb|918
    i32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $i|915
    i32.const 1
    i32.add
    local.set $i|915
    br $for-loop|97
   end
  end
  local.get $a|900
  local.get $setSource4|897
  i32.const 6
  call $~lib/typedarray/Int16Array#set<~lib/typedarray/Int64Array>
  local.get $a|900
  local.set $target|921
  i32.const 10
  i32.const 1
  i32.const 64
  i32.const 7264
  call $~lib/rt/__newArray
  local.set $compare|922
  local.get $target|921
  call $~lib/typedarray/Int16Array#get:length
  local.set $len|923
  local.get $len|923
  local.get $compare|922
  call $~lib/array/Array<i16>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $i|924
  loop $for-loop|98
   local.get $i|924
   local.get $len|923
   i32.lt_s
   local.set $925
   local.get $925
   if
    local.get $target|921
    local.get $i|924
    call $~lib/typedarray/Int16Array#__uget
    local.set $vala|926
    local.get $compare|922
    local.get $i|924
    call $~lib/array/Array<i16>#__uget
    local.set $valb|927
    local.get $vala|926
    local.get $valb|927
    i32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $i|924
    i32.const 1
    i32.add
    local.set $i|924
    br $for-loop|98
   end
  end
  i32.const 1
  drop
  local.get $a|900
  global.get $std/typedarray/setSource3
  i32.const 2
  call $~lib/typedarray/Int16Array#set<~lib/array/Array<f64>>
  local.get $a|900
  local.set $target|930
  i32.const 10
  i32.const 1
  i32.const 64
  i32.const 7312
  call $~lib/rt/__newArray
  local.set $compare|931
  local.get $target|930
  call $~lib/typedarray/Int16Array#get:length
  local.set $len|932
  local.get $len|932
  local.get $compare|931
  call $~lib/array/Array<i16>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $i|933
  loop $for-loop|99
   local.get $i|933
   local.get $len|932
   i32.lt_s
   local.set $934
   local.get $934
   if
    local.get $target|930
    local.get $i|933
    call $~lib/typedarray/Int16Array#__uget
    local.set $vala|935
    local.get $compare|931
    local.get $i|933
    call $~lib/array/Array<i16>#__uget
    local.set $valb|936
    local.get $vala|935
    local.get $valb|936
    i32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $i|933
    i32.const 1
    i32.add
    local.set $i|933
    br $for-loop|99
   end
  end
  local.get $a|900
  local.get $setSource5|898
  i32.const 0
  call $~lib/typedarray/Int16Array#set<~lib/typedarray/Uint8Array>
  local.get $a|900
  local.get $setSource6|899
  i32.const 4
  call $~lib/typedarray/Int16Array#set<~lib/typedarray/Int16Array>
  local.get $a|900
  global.get $std/typedarray/setSource7
  i32.const 7
  call $~lib/typedarray/Int16Array#set<~lib/array/Array<i8>>
  i32.const 0
  drop
  local.get $a|900
  local.set $target|939
  i32.const 10
  i32.const 1
  i32.const 64
  i32.const 7360
  call $~lib/rt/__newArray
  local.set $compare|940
  local.get $target|939
  call $~lib/typedarray/Int16Array#get:length
  local.set $len|941
  local.get $len|941
  local.get $compare|940
  call $~lib/array/Array<i16>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $i|942
  loop $for-loop|100
   local.get $i|942
   local.get $len|941
   i32.lt_s
   local.set $943
   local.get $943
   if
    local.get $target|939
    local.get $i|942
    call $~lib/typedarray/Int16Array#__uget
    local.set $vala|944
    local.get $compare|940
    local.get $i|942
    call $~lib/array/Array<i16>#__uget
    local.set $valb|945
    local.get $vala|944
    local.get $valb|945
    i32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $i|942
    i32.const 1
    i32.add
    local.set $i|942
    br $for-loop|100
   end
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int64Array#constructor
  local.set $setSource4|946
  local.get $setSource4|946
  i32.const 0
  i64.const 7
  call $~lib/typedarray/Int64Array#__set
  local.get $setSource4|946
  i32.const 1
  i64.const 8
  call $~lib/typedarray/Int64Array#__set
  local.get $setSource4|946
  i32.const 2
  i64.const 9
  call $~lib/typedarray/Int64Array#__set
  i32.const 0
  i32.const 4
  call $~lib/typedarray/Uint8Array#constructor
  local.set $setSource5|947
  local.get $setSource5|947
  i32.const 0
  i32.const 100
  call $~lib/typedarray/Uint8Array#__set
  local.get $setSource5|947
  i32.const 1
  i32.const 101
  call $~lib/typedarray/Uint8Array#__set
  local.get $setSource5|947
  i32.const 2
  i32.const 102
  call $~lib/typedarray/Uint8Array#__set
  local.get $setSource5|947
  i32.const 3
  i32.const 103
  call $~lib/typedarray/Uint8Array#__set
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int16Array#constructor
  local.set $setSource6|948
  local.get $setSource6|948
  i32.const 0
  i32.const 1000
  call $~lib/typedarray/Int16Array#__set
  local.get $setSource6|948
  i32.const 1
  i32.const 1001
  call $~lib/typedarray/Int16Array#__set
  local.get $setSource6|948
  i32.const 2
  i32.const 1002
  call $~lib/typedarray/Int16Array#__set
  i32.const 0
  i32.const 10
  call $~lib/typedarray/Uint16Array#constructor
  local.set $a|949
  local.get $a|949
  global.get $std/typedarray/setSource1
  i32.const 0
  call $~lib/typedarray/Uint16Array#set<~lib/array/Array<i32>>
  local.get $a|949
  local.set $target|952
  i32.const 10
  i32.const 1
  i32.const 65
  i32.const 7408
  call $~lib/rt/__newArray
  local.set $compare|953
  local.get $target|952
  call $~lib/typedarray/Uint16Array#get:length
  local.set $len|954
  local.get $len|954
  local.get $compare|953
  call $~lib/array/Array<u16>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $i|955
  loop $for-loop|101
   local.get $i|955
   local.get $len|954
   i32.lt_s
   local.set $956
   local.get $956
   if
    local.get $target|952
    local.get $i|955
    call $~lib/typedarray/Uint16Array#__uget
    local.set $vala|957
    local.get $compare|953
    local.get $i|955
    call $~lib/array/Array<u16>#__uget
    local.set $valb|958
    local.get $vala|957
    local.get $valb|958
    i32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $i|955
    i32.const 1
    i32.add
    local.set $i|955
    br $for-loop|101
   end
  end
  local.get $a|949
  global.get $std/typedarray/setSource2
  i32.const 3
  call $~lib/typedarray/Uint16Array#set<~lib/array/Array<f32>>
  local.get $a|949
  local.set $target|961
  i32.const 10
  i32.const 1
  i32.const 65
  i32.const 7456
  call $~lib/rt/__newArray
  local.set $compare|962
  local.get $target|961
  call $~lib/typedarray/Uint16Array#get:length
  local.set $len|963
  local.get $len|963
  local.get $compare|962
  call $~lib/array/Array<u16>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $i|964
  loop $for-loop|102
   local.get $i|964
   local.get $len|963
   i32.lt_s
   local.set $965
   local.get $965
   if
    local.get $target|961
    local.get $i|964
    call $~lib/typedarray/Uint16Array#__uget
    local.set $vala|966
    local.get $compare|962
    local.get $i|964
    call $~lib/array/Array<u16>#__uget
    local.set $valb|967
    local.get $vala|966
    local.get $valb|967
    i32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $i|964
    i32.const 1
    i32.add
    local.set $i|964
    br $for-loop|102
   end
  end
  local.get $a|949
  local.get $setSource4|946
  i32.const 6
  call $~lib/typedarray/Uint16Array#set<~lib/typedarray/Int64Array>
  local.get $a|949
  local.set $target|970
  i32.const 10
  i32.const 1
  i32.const 65
  i32.const 7504
  call $~lib/rt/__newArray
  local.set $compare|971
  local.get $target|970
  call $~lib/typedarray/Uint16Array#get:length
  local.set $len|972
  local.get $len|972
  local.get $compare|971
  call $~lib/array/Array<u16>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $i|973
  loop $for-loop|103
   local.get $i|973
   local.get $len|972
   i32.lt_s
   local.set $974
   local.get $974
   if
    local.get $target|970
    local.get $i|973
    call $~lib/typedarray/Uint16Array#__uget
    local.set $vala|975
    local.get $compare|971
    local.get $i|973
    call $~lib/array/Array<u16>#__uget
    local.set $valb|976
    local.get $vala|975
    local.get $valb|976
    i32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $i|973
    i32.const 1
    i32.add
    local.set $i|973
    br $for-loop|103
   end
  end
  i32.const 1
  drop
  local.get $a|949
  global.get $std/typedarray/setSource3
  i32.const 2
  call $~lib/typedarray/Uint16Array#set<~lib/array/Array<f64>>
  local.get $a|949
  local.set $target|979
  i32.const 10
  i32.const 1
  i32.const 65
  i32.const 7552
  call $~lib/rt/__newArray
  local.set $compare|980
  local.get $target|979
  call $~lib/typedarray/Uint16Array#get:length
  local.set $len|981
  local.get $len|981
  local.get $compare|980
  call $~lib/array/Array<u16>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $i|982
  loop $for-loop|104
   local.get $i|982
   local.get $len|981
   i32.lt_s
   local.set $983
   local.get $983
   if
    local.get $target|979
    local.get $i|982
    call $~lib/typedarray/Uint16Array#__uget
    local.set $vala|984
    local.get $compare|980
    local.get $i|982
    call $~lib/array/Array<u16>#__uget
    local.set $valb|985
    local.get $vala|984
    local.get $valb|985
    i32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $i|982
    i32.const 1
    i32.add
    local.set $i|982
    br $for-loop|104
   end
  end
  local.get $a|949
  local.get $setSource5|947
  i32.const 0
  call $~lib/typedarray/Uint16Array#set<~lib/typedarray/Uint8Array>
  local.get $a|949
  local.get $setSource6|948
  i32.const 4
  call $~lib/typedarray/Uint16Array#set<~lib/typedarray/Int16Array>
  local.get $a|949
  global.get $std/typedarray/setSource7
  i32.const 7
  call $~lib/typedarray/Uint16Array#set<~lib/array/Array<i8>>
  i32.const 0
  drop
  local.get $a|949
  local.set $target|988
  i32.const 10
  i32.const 1
  i32.const 65
  i32.const 7600
  call $~lib/rt/__newArray
  local.set $compare|989
  local.get $target|988
  call $~lib/typedarray/Uint16Array#get:length
  local.set $len|990
  local.get $len|990
  local.get $compare|989
  call $~lib/array/Array<u16>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $i|991
  loop $for-loop|105
   local.get $i|991
   local.get $len|990
   i32.lt_s
   local.set $992
   local.get $992
   if
    local.get $target|988
    local.get $i|991
    call $~lib/typedarray/Uint16Array#__uget
    local.set $vala|993
    local.get $compare|989
    local.get $i|991
    call $~lib/array/Array<u16>#__uget
    local.set $valb|994
    local.get $vala|993
    local.get $valb|994
    i32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $i|991
    i32.const 1
    i32.add
    local.set $i|991
    br $for-loop|105
   end
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int64Array#constructor
  local.set $setSource4|995
  local.get $setSource4|995
  i32.const 0
  i64.const 7
  call $~lib/typedarray/Int64Array#__set
  local.get $setSource4|995
  i32.const 1
  i64.const 8
  call $~lib/typedarray/Int64Array#__set
  local.get $setSource4|995
  i32.const 2
  i64.const 9
  call $~lib/typedarray/Int64Array#__set
  i32.const 0
  i32.const 4
  call $~lib/typedarray/Uint8Array#constructor
  local.set $setSource5|996
  local.get $setSource5|996
  i32.const 0
  i32.const 100
  call $~lib/typedarray/Uint8Array#__set
  local.get $setSource5|996
  i32.const 1
  i32.const 101
  call $~lib/typedarray/Uint8Array#__set
  local.get $setSource5|996
  i32.const 2
  i32.const 102
  call $~lib/typedarray/Uint8Array#__set
  local.get $setSource5|996
  i32.const 3
  i32.const 103
  call $~lib/typedarray/Uint8Array#__set
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int16Array#constructor
  local.set $setSource6|997
  local.get $setSource6|997
  i32.const 0
  i32.const 1000
  call $~lib/typedarray/Int16Array#__set
  local.get $setSource6|997
  i32.const 1
  i32.const 1001
  call $~lib/typedarray/Int16Array#__set
  local.get $setSource6|997
  i32.const 2
  i32.const 1002
  call $~lib/typedarray/Int16Array#__set
  i32.const 0
  i32.const 10
  call $~lib/typedarray/Int32Array#constructor
  local.set $a|998
  local.get $a|998
  global.get $std/typedarray/setSource1
  i32.const 0
  call $~lib/typedarray/Int32Array#set<~lib/array/Array<i32>>
  local.get $a|998
  local.set $target|1001
  i32.const 10
  i32.const 2
  i32.const 16
  i32.const 7648
  call $~lib/rt/__newArray
  local.set $compare|1002
  local.get $target|1001
  call $~lib/typedarray/Int32Array#get:length
  local.set $len|1003
  local.get $len|1003
  local.get $compare|1002
  call $~lib/array/Array<i32>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $i|1004
  loop $for-loop|106
   local.get $i|1004
   local.get $len|1003
   i32.lt_s
   local.set $1005
   local.get $1005
   if
    local.get $target|1001
    local.get $i|1004
    call $~lib/typedarray/Int32Array#__uget
    local.set $vala|1006
    local.get $compare|1002
    local.get $i|1004
    call $~lib/array/Array<i32>#__uget
    local.set $valb|1007
    local.get $vala|1006
    local.get $valb|1007
    i32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $i|1004
    i32.const 1
    i32.add
    local.set $i|1004
    br $for-loop|106
   end
  end
  local.get $a|998
  global.get $std/typedarray/setSource2
  i32.const 3
  call $~lib/typedarray/Int32Array#set<~lib/array/Array<f32>>
  local.get $a|998
  local.set $target|1010
  i32.const 10
  i32.const 2
  i32.const 16
  i32.const 7712
  call $~lib/rt/__newArray
  local.set $compare|1011
  local.get $target|1010
  call $~lib/typedarray/Int32Array#get:length
  local.set $len|1012
  local.get $len|1012
  local.get $compare|1011
  call $~lib/array/Array<i32>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $i|1013
  loop $for-loop|107
   local.get $i|1013
   local.get $len|1012
   i32.lt_s
   local.set $1014
   local.get $1014
   if
    local.get $target|1010
    local.get $i|1013
    call $~lib/typedarray/Int32Array#__uget
    local.set $vala|1015
    local.get $compare|1011
    local.get $i|1013
    call $~lib/array/Array<i32>#__uget
    local.set $valb|1016
    local.get $vala|1015
    local.get $valb|1016
    i32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $i|1013
    i32.const 1
    i32.add
    local.set $i|1013
    br $for-loop|107
   end
  end
  local.get $a|998
  local.get $setSource4|995
  i32.const 6
  call $~lib/typedarray/Int32Array#set<~lib/typedarray/Int64Array>
  local.get $a|998
  local.set $target|1019
  i32.const 10
  i32.const 2
  i32.const 16
  i32.const 7776
  call $~lib/rt/__newArray
  local.set $compare|1020
  local.get $target|1019
  call $~lib/typedarray/Int32Array#get:length
  local.set $len|1021
  local.get $len|1021
  local.get $compare|1020
  call $~lib/array/Array<i32>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $i|1022
  loop $for-loop|108
   local.get $i|1022
   local.get $len|1021
   i32.lt_s
   local.set $1023
   local.get $1023
   if
    local.get $target|1019
    local.get $i|1022
    call $~lib/typedarray/Int32Array#__uget
    local.set $vala|1024
    local.get $compare|1020
    local.get $i|1022
    call $~lib/array/Array<i32>#__uget
    local.set $valb|1025
    local.get $vala|1024
    local.get $valb|1025
    i32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $i|1022
    i32.const 1
    i32.add
    local.set $i|1022
    br $for-loop|108
   end
  end
  i32.const 1
  drop
  local.get $a|998
  global.get $std/typedarray/setSource3
  i32.const 2
  call $~lib/typedarray/Int32Array#set<~lib/array/Array<f64>>
  local.get $a|998
  local.set $target|1028
  i32.const 10
  i32.const 2
  i32.const 16
  i32.const 7840
  call $~lib/rt/__newArray
  local.set $compare|1029
  local.get $target|1028
  call $~lib/typedarray/Int32Array#get:length
  local.set $len|1030
  local.get $len|1030
  local.get $compare|1029
  call $~lib/array/Array<i32>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $i|1031
  loop $for-loop|109
   local.get $i|1031
   local.get $len|1030
   i32.lt_s
   local.set $1032
   local.get $1032
   if
    local.get $target|1028
    local.get $i|1031
    call $~lib/typedarray/Int32Array#__uget
    local.set $vala|1033
    local.get $compare|1029
    local.get $i|1031
    call $~lib/array/Array<i32>#__uget
    local.set $valb|1034
    local.get $vala|1033
    local.get $valb|1034
    i32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $i|1031
    i32.const 1
    i32.add
    local.set $i|1031
    br $for-loop|109
   end
  end
  local.get $a|998
  local.get $setSource5|996
  i32.const 0
  call $~lib/typedarray/Int32Array#set<~lib/typedarray/Uint8Array>
  local.get $a|998
  local.get $setSource6|997
  i32.const 4
  call $~lib/typedarray/Int32Array#set<~lib/typedarray/Int16Array>
  local.get $a|998
  global.get $std/typedarray/setSource7
  i32.const 7
  call $~lib/typedarray/Int32Array#set<~lib/array/Array<i8>>
  i32.const 0
  drop
  local.get $a|998
  local.set $target|1037
  i32.const 10
  i32.const 2
  i32.const 16
  i32.const 7904
  call $~lib/rt/__newArray
  local.set $compare|1038
  local.get $target|1037
  call $~lib/typedarray/Int32Array#get:length
  local.set $len|1039
  local.get $len|1039
  local.get $compare|1038
  call $~lib/array/Array<i32>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $i|1040
  loop $for-loop|110
   local.get $i|1040
   local.get $len|1039
   i32.lt_s
   local.set $1041
   local.get $1041
   if
    local.get $target|1037
    local.get $i|1040
    call $~lib/typedarray/Int32Array#__uget
    local.set $vala|1042
    local.get $compare|1038
    local.get $i|1040
    call $~lib/array/Array<i32>#__uget
    local.set $valb|1043
    local.get $vala|1042
    local.get $valb|1043
    i32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $i|1040
    i32.const 1
    i32.add
    local.set $i|1040
    br $for-loop|110
   end
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int64Array#constructor
  local.set $setSource4|1044
  local.get $setSource4|1044
  i32.const 0
  i64.const 7
  call $~lib/typedarray/Int64Array#__set
  local.get $setSource4|1044
  i32.const 1
  i64.const 8
  call $~lib/typedarray/Int64Array#__set
  local.get $setSource4|1044
  i32.const 2
  i64.const 9
  call $~lib/typedarray/Int64Array#__set
  i32.const 0
  i32.const 4
  call $~lib/typedarray/Uint8Array#constructor
  local.set $setSource5|1045
  local.get $setSource5|1045
  i32.const 0
  i32.const 100
  call $~lib/typedarray/Uint8Array#__set
  local.get $setSource5|1045
  i32.const 1
  i32.const 101
  call $~lib/typedarray/Uint8Array#__set
  local.get $setSource5|1045
  i32.const 2
  i32.const 102
  call $~lib/typedarray/Uint8Array#__set
  local.get $setSource5|1045
  i32.const 3
  i32.const 103
  call $~lib/typedarray/Uint8Array#__set
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int16Array#constructor
  local.set $setSource6|1046
  local.get $setSource6|1046
  i32.const 0
  i32.const 1000
  call $~lib/typedarray/Int16Array#__set
  local.get $setSource6|1046
  i32.const 1
  i32.const 1001
  call $~lib/typedarray/Int16Array#__set
  local.get $setSource6|1046
  i32.const 2
  i32.const 1002
  call $~lib/typedarray/Int16Array#__set
  i32.const 0
  i32.const 10
  call $~lib/typedarray/Uint32Array#constructor
  local.set $a|1047
  local.get $a|1047
  global.get $std/typedarray/setSource1
  i32.const 0
  call $~lib/typedarray/Uint32Array#set<~lib/array/Array<i32>>
  local.get $a|1047
  local.set $target|1050
  i32.const 10
  i32.const 2
  i32.const 66
  i32.const 7968
  call $~lib/rt/__newArray
  local.set $compare|1051
  local.get $target|1050
  call $~lib/typedarray/Uint32Array#get:length
  local.set $len|1052
  local.get $len|1052
  local.get $compare|1051
  call $~lib/array/Array<u32>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $i|1053
  loop $for-loop|111
   local.get $i|1053
   local.get $len|1052
   i32.lt_s
   local.set $1054
   local.get $1054
   if
    local.get $target|1050
    local.get $i|1053
    call $~lib/typedarray/Uint32Array#__uget
    local.set $vala|1055
    local.get $compare|1051
    local.get $i|1053
    call $~lib/array/Array<u32>#__uget
    local.set $valb|1056
    local.get $vala|1055
    local.get $valb|1056
    i32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $i|1053
    i32.const 1
    i32.add
    local.set $i|1053
    br $for-loop|111
   end
  end
  local.get $a|1047
  global.get $std/typedarray/setSource2
  i32.const 3
  call $~lib/typedarray/Uint32Array#set<~lib/array/Array<f32>>
  local.get $a|1047
  local.set $target|1059
  i32.const 10
  i32.const 2
  i32.const 66
  i32.const 8032
  call $~lib/rt/__newArray
  local.set $compare|1060
  local.get $target|1059
  call $~lib/typedarray/Uint32Array#get:length
  local.set $len|1061
  local.get $len|1061
  local.get $compare|1060
  call $~lib/array/Array<u32>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $i|1062
  loop $for-loop|112
   local.get $i|1062
   local.get $len|1061
   i32.lt_s
   local.set $1063
   local.get $1063
   if
    local.get $target|1059
    local.get $i|1062
    call $~lib/typedarray/Uint32Array#__uget
    local.set $vala|1064
    local.get $compare|1060
    local.get $i|1062
    call $~lib/array/Array<u32>#__uget
    local.set $valb|1065
    local.get $vala|1064
    local.get $valb|1065
    i32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $i|1062
    i32.const 1
    i32.add
    local.set $i|1062
    br $for-loop|112
   end
  end
  local.get $a|1047
  local.get $setSource4|1044
  i32.const 6
  call $~lib/typedarray/Uint32Array#set<~lib/typedarray/Int64Array>
  local.get $a|1047
  local.set $target|1068
  i32.const 10
  i32.const 2
  i32.const 66
  i32.const 8096
  call $~lib/rt/__newArray
  local.set $compare|1069
  local.get $target|1068
  call $~lib/typedarray/Uint32Array#get:length
  local.set $len|1070
  local.get $len|1070
  local.get $compare|1069
  call $~lib/array/Array<u32>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $i|1071
  loop $for-loop|113
   local.get $i|1071
   local.get $len|1070
   i32.lt_s
   local.set $1072
   local.get $1072
   if
    local.get $target|1068
    local.get $i|1071
    call $~lib/typedarray/Uint32Array#__uget
    local.set $vala|1073
    local.get $compare|1069
    local.get $i|1071
    call $~lib/array/Array<u32>#__uget
    local.set $valb|1074
    local.get $vala|1073
    local.get $valb|1074
    i32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $i|1071
    i32.const 1
    i32.add
    local.set $i|1071
    br $for-loop|113
   end
  end
  i32.const 1
  drop
  local.get $a|1047
  global.get $std/typedarray/setSource3
  i32.const 2
  call $~lib/typedarray/Uint32Array#set<~lib/array/Array<f64>>
  local.get $a|1047
  local.set $target|1077
  i32.const 10
  i32.const 2
  i32.const 66
  i32.const 8160
  call $~lib/rt/__newArray
  local.set $compare|1078
  local.get $target|1077
  call $~lib/typedarray/Uint32Array#get:length
  local.set $len|1079
  local.get $len|1079
  local.get $compare|1078
  call $~lib/array/Array<u32>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $i|1080
  loop $for-loop|114
   local.get $i|1080
   local.get $len|1079
   i32.lt_s
   local.set $1081
   local.get $1081
   if
    local.get $target|1077
    local.get $i|1080
    call $~lib/typedarray/Uint32Array#__uget
    local.set $vala|1082
    local.get $compare|1078
    local.get $i|1080
    call $~lib/array/Array<u32>#__uget
    local.set $valb|1083
    local.get $vala|1082
    local.get $valb|1083
    i32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $i|1080
    i32.const 1
    i32.add
    local.set $i|1080
    br $for-loop|114
   end
  end
  local.get $a|1047
  local.get $setSource5|1045
  i32.const 0
  call $~lib/typedarray/Uint32Array#set<~lib/typedarray/Uint8Array>
  local.get $a|1047
  local.get $setSource6|1046
  i32.const 4
  call $~lib/typedarray/Uint32Array#set<~lib/typedarray/Int16Array>
  local.get $a|1047
  global.get $std/typedarray/setSource7
  i32.const 7
  call $~lib/typedarray/Uint32Array#set<~lib/array/Array<i8>>
  i32.const 0
  drop
  local.get $a|1047
  local.set $target|1086
  i32.const 10
  i32.const 2
  i32.const 66
  i32.const 8224
  call $~lib/rt/__newArray
  local.set $compare|1087
  local.get $target|1086
  call $~lib/typedarray/Uint32Array#get:length
  local.set $len|1088
  local.get $len|1088
  local.get $compare|1087
  call $~lib/array/Array<u32>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $i|1089
  loop $for-loop|115
   local.get $i|1089
   local.get $len|1088
   i32.lt_s
   local.set $1090
   local.get $1090
   if
    local.get $target|1086
    local.get $i|1089
    call $~lib/typedarray/Uint32Array#__uget
    local.set $vala|1091
    local.get $compare|1087
    local.get $i|1089
    call $~lib/array/Array<u32>#__uget
    local.set $valb|1092
    local.get $vala|1091
    local.get $valb|1092
    i32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $i|1089
    i32.const 1
    i32.add
    local.set $i|1089
    br $for-loop|115
   end
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int64Array#constructor
  local.set $setSource4|1093
  local.get $setSource4|1093
  i32.const 0
  i64.const 7
  call $~lib/typedarray/Int64Array#__set
  local.get $setSource4|1093
  i32.const 1
  i64.const 8
  call $~lib/typedarray/Int64Array#__set
  local.get $setSource4|1093
  i32.const 2
  i64.const 9
  call $~lib/typedarray/Int64Array#__set
  i32.const 0
  i32.const 4
  call $~lib/typedarray/Uint8Array#constructor
  local.set $setSource5|1094
  local.get $setSource5|1094
  i32.const 0
  i32.const 100
  call $~lib/typedarray/Uint8Array#__set
  local.get $setSource5|1094
  i32.const 1
  i32.const 101
  call $~lib/typedarray/Uint8Array#__set
  local.get $setSource5|1094
  i32.const 2
  i32.const 102
  call $~lib/typedarray/Uint8Array#__set
  local.get $setSource5|1094
  i32.const 3
  i32.const 103
  call $~lib/typedarray/Uint8Array#__set
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int16Array#constructor
  local.set $setSource6|1095
  local.get $setSource6|1095
  i32.const 0
  i32.const 1000
  call $~lib/typedarray/Int16Array#__set
  local.get $setSource6|1095
  i32.const 1
  i32.const 1001
  call $~lib/typedarray/Int16Array#__set
  local.get $setSource6|1095
  i32.const 2
  i32.const 1002
  call $~lib/typedarray/Int16Array#__set
  i32.const 0
  i32.const 10
  call $~lib/typedarray/Float32Array#constructor
  local.set $a|1096
  local.get $a|1096
  global.get $std/typedarray/setSource1
  i32.const 0
  call $~lib/typedarray/Float32Array#set<~lib/array/Array<i32>>
  local.get $a|1096
  local.set $target|1099
  i32.const 10
  i32.const 2
  i32.const 61
  i32.const 8288
  call $~lib/rt/__newArray
  local.set $compare|1100
  local.get $target|1099
  call $~lib/typedarray/Float32Array#get:length
  local.set $len|1101
  local.get $len|1101
  local.get $compare|1100
  call $~lib/array/Array<f32>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $i|1102
  loop $for-loop|116
   local.get $i|1102
   local.get $len|1101
   i32.lt_s
   local.set $1103
   local.get $1103
   if
    local.get $target|1099
    local.get $i|1102
    call $~lib/typedarray/Float32Array#__uget
    local.set $vala|1104
    local.get $compare|1100
    local.get $i|1102
    call $~lib/array/Array<f32>#__uget
    local.set $valb|1105
    local.get $vala|1104
    local.get $valb|1105
    f32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $i|1102
    i32.const 1
    i32.add
    local.set $i|1102
    br $for-loop|116
   end
  end
  local.get $a|1096
  global.get $std/typedarray/setSource2
  i32.const 3
  call $~lib/typedarray/Float32Array#set<~lib/array/Array<f32>>
  local.get $a|1096
  local.set $target|1108
  i32.const 10
  i32.const 2
  i32.const 61
  i32.const 8352
  call $~lib/rt/__newArray
  local.set $compare|1109
  local.get $target|1108
  call $~lib/typedarray/Float32Array#get:length
  local.set $len|1110
  local.get $len|1110
  local.get $compare|1109
  call $~lib/array/Array<f32>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $i|1111
  loop $for-loop|117
   local.get $i|1111
   local.get $len|1110
   i32.lt_s
   local.set $1112
   local.get $1112
   if
    local.get $target|1108
    local.get $i|1111
    call $~lib/typedarray/Float32Array#__uget
    local.set $vala|1113
    local.get $compare|1109
    local.get $i|1111
    call $~lib/array/Array<f32>#__uget
    local.set $valb|1114
    local.get $vala|1113
    local.get $valb|1114
    f32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $i|1111
    i32.const 1
    i32.add
    local.set $i|1111
    br $for-loop|117
   end
  end
  local.get $a|1096
  local.get $setSource4|1093
  i32.const 6
  call $~lib/typedarray/Float32Array#set<~lib/typedarray/Int64Array>
  local.get $a|1096
  local.set $target|1117
  i32.const 10
  i32.const 2
  i32.const 61
  i32.const 8416
  call $~lib/rt/__newArray
  local.set $compare|1118
  local.get $target|1117
  call $~lib/typedarray/Float32Array#get:length
  local.set $len|1119
  local.get $len|1119
  local.get $compare|1118
  call $~lib/array/Array<f32>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $i|1120
  loop $for-loop|118
   local.get $i|1120
   local.get $len|1119
   i32.lt_s
   local.set $1121
   local.get $1121
   if
    local.get $target|1117
    local.get $i|1120
    call $~lib/typedarray/Float32Array#__uget
    local.set $vala|1122
    local.get $compare|1118
    local.get $i|1120
    call $~lib/array/Array<f32>#__uget
    local.set $valb|1123
    local.get $vala|1122
    local.get $valb|1123
    f32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $i|1120
    i32.const 1
    i32.add
    local.set $i|1120
    br $for-loop|118
   end
  end
  i32.const 0
  drop
  local.get $a|1096
  local.get $setSource5|1094
  i32.const 0
  call $~lib/typedarray/Float32Array#set<~lib/typedarray/Uint8Array>
  local.get $a|1096
  local.get $setSource6|1095
  i32.const 4
  call $~lib/typedarray/Float32Array#set<~lib/typedarray/Int16Array>
  local.get $a|1096
  global.get $std/typedarray/setSource7
  i32.const 7
  call $~lib/typedarray/Float32Array#set<~lib/array/Array<i8>>
  i32.const 0
  drop
  local.get $a|1096
  local.set $target|1126
  i32.const 10
  i32.const 2
  i32.const 61
  i32.const 8480
  call $~lib/rt/__newArray
  local.set $compare|1127
  local.get $target|1126
  call $~lib/typedarray/Float32Array#get:length
  local.set $len|1128
  local.get $len|1128
  local.get $compare|1127
  call $~lib/array/Array<f32>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $i|1129
  loop $for-loop|119
   local.get $i|1129
   local.get $len|1128
   i32.lt_s
   local.set $1130
   local.get $1130
   if
    local.get $target|1126
    local.get $i|1129
    call $~lib/typedarray/Float32Array#__uget
    local.set $vala|1131
    local.get $compare|1127
    local.get $i|1129
    call $~lib/array/Array<f32>#__uget
    local.set $valb|1132
    local.get $vala|1131
    local.get $valb|1132
    f32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $i|1129
    i32.const 1
    i32.add
    local.set $i|1129
    br $for-loop|119
   end
  end
  i32.const 0
  i32.const 10
  call $~lib/typedarray/Uint8ClampedArray#constructor
  local.set $targetClampedArray
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Float32Array#constructor
  local.set $a|1134
  local.get $a|1134
  i32.const 0
  f32.const 400
  call $~lib/typedarray/Float32Array#__set
  local.get $a|1134
  i32.const 1
  f32.const nan:0x400000
  call $~lib/typedarray/Float32Array#__set
  local.get $a|1134
  i32.const 2
  f32.const inf
  call $~lib/typedarray/Float32Array#__set
  i32.const 0
  i32.const 4
  call $~lib/typedarray/Int64Array#constructor
  local.set $b|1135
  local.get $b|1135
  i32.const 0
  i64.const -10
  call $~lib/typedarray/Int64Array#__set
  local.get $b|1135
  i32.const 1
  i64.const 100
  call $~lib/typedarray/Int64Array#__set
  local.get $b|1135
  i32.const 2
  i64.const 10
  call $~lib/typedarray/Int64Array#__set
  local.get $b|1135
  i32.const 3
  i64.const 300
  call $~lib/typedarray/Int64Array#__set
  i32.const 0
  i32.const 2
  call $~lib/typedarray/Int32Array#constructor
  local.set $c
  local.get $c
  i32.const 0
  i32.const 300
  call $~lib/typedarray/Int32Array#__set
  local.get $c
  i32.const 1
  i32.const -1
  call $~lib/typedarray/Int32Array#__set
  local.get $targetClampedArray
  local.get $a|1134
  i32.const 1
  call $~lib/typedarray/Uint8ClampedArray#set<~lib/typedarray/Float32Array>
  local.get $targetClampedArray
  local.get $b|1135
  i32.const 4
  call $~lib/typedarray/Uint8ClampedArray#set<~lib/typedarray/Int64Array>
  local.get $targetClampedArray
  local.get $c
  i32.const 8
  call $~lib/typedarray/Uint8ClampedArray#set<~lib/typedarray/Int32Array>
  local.get $targetClampedArray
  local.set $target|1139
  i32.const 10
  i32.const 0
  i32.const 63
  i32.const 8544
  call $~lib/rt/__newArray
  local.set $compare|1140
  local.get $target|1139
  call $~lib/typedarray/Uint8ClampedArray#get:length
  local.set $len|1141
  local.get $len|1141
  local.get $compare|1140
  call $~lib/array/Array<u8>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $i|1142
  loop $for-loop|120
   local.get $i|1142
   local.get $len|1141
   i32.lt_s
   local.set $1143
   local.get $1143
   if
    local.get $target|1139
    local.get $i|1142
    call $~lib/typedarray/Uint8ClampedArray#__uget
    local.set $vala|1144
    local.get $compare|1140
    local.get $i|1142
    call $~lib/array/Array<u8>#__uget
    local.set $valb|1145
    local.get $vala|1144
    local.get $valb|1145
    i32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $i|1142
    i32.const 1
    i32.add
    local.set $i|1142
    br $for-loop|120
   end
  end
  i32.const 0
  i32.const 4
  call $~lib/typedarray/Uint32Array#constructor
  local.set $d
  local.get $d
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint32Array#__set
  local.get $d
  i32.const 1
  i32.const 300
  call $~lib/typedarray/Uint32Array#__set
  local.get $d
  i32.const 2
  i32.const 100
  call $~lib/typedarray/Uint32Array#__set
  local.get $d
  i32.const 3
  i32.const -1
  call $~lib/typedarray/Uint32Array#__set
  i32.const 0
  i32.const 4
  call $~lib/typedarray/Int16Array#constructor
  local.set $e
  local.get $e
  i32.const 0
  i32.const -10
  call $~lib/typedarray/Int16Array#__set
  local.get $e
  i32.const 1
  i32.const 100
  call $~lib/typedarray/Int16Array#__set
  local.get $e
  i32.const 2
  i32.const 10
  call $~lib/typedarray/Int16Array#__set
  local.get $e
  i32.const 3
  i32.const 300
  call $~lib/typedarray/Int16Array#__set
  local.get $targetClampedArray
  local.get $d
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#set<~lib/typedarray/Uint32Array>
  local.get $targetClampedArray
  local.get $e
  i32.const 5
  call $~lib/typedarray/Uint8ClampedArray#set<~lib/typedarray/Int16Array>
  local.get $targetClampedArray
  local.set $target|1150
  i32.const 10
  i32.const 0
  i32.const 63
  i32.const 8576
  call $~lib/rt/__newArray
  local.set $compare|1151
  local.get $target|1150
  call $~lib/typedarray/Uint8ClampedArray#get:length
  local.set $len|1152
  local.get $len|1152
  local.get $compare|1151
  call $~lib/array/Array<u8>#get:length
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $i|1153
  loop $for-loop|121
   local.get $i|1153
   local.get $len|1152
   i32.lt_s
   local.set $1154
   local.get $1154
   if
    local.get $target|1150
    local.get $i|1153
    call $~lib/typedarray/Uint8ClampedArray#__uget
    local.set $vala|1155
    local.get $compare|1151
    local.get $i|1153
    call $~lib/array/Array<u8>#__uget
    local.set $valb|1156
    local.get $vala|1155
    local.get $valb|1156
    i32.ne
    if
     i32.const 0
     i32.eqz
     if
      unreachable
     end
    end
    local.get $i|1153
    i32.const 1
    i32.add
    local.set $i|1153
    br $for-loop|121
   end
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int8Array#constructor
  local.set $source|1157
  local.get $source|1157
  i32.const 2
  i32.const 1
  call $~lib/typedarray/Int8Array#__set
  local.get $source|1157
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int8Array#__set
  local.get $source|1157
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int8Array#__set
  local.get $source|1157
  i32.const 0
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Int8Array#sort@varargs
  local.set $result|1158
  local.get $result|1158
  i32.const 0
  call $~lib/typedarray/Int8Array#__get
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|1158
  i32.const 1
  call $~lib/typedarray/Int8Array#__get
  i32.const 2
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|1158
  i32.const 2
  call $~lib/typedarray/Int8Array#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|1158
  i32.const 8640
  call $~lib/typedarray/Int8Array#sort
  drop
  local.get $result|1158
  i32.const 0
  call $~lib/typedarray/Int8Array#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|1158
  i32.const 1
  call $~lib/typedarray/Int8Array#__get
  i32.const 2
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|1158
  i32.const 2
  call $~lib/typedarray/Int8Array#__get
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint8Array#constructor
  local.set $source|1159
  local.get $source|1159
  i32.const 2
  i32.const 1
  call $~lib/typedarray/Uint8Array#__set
  local.get $source|1159
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint8Array#__set
  local.get $source|1159
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint8Array#__set
  local.get $source|1159
  i32.const 0
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint8Array#sort@varargs
  local.set $result|1160
  local.get $result|1160
  i32.const 0
  call $~lib/typedarray/Uint8Array#__get
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|1160
  i32.const 1
  call $~lib/typedarray/Uint8Array#__get
  i32.const 2
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|1160
  i32.const 2
  call $~lib/typedarray/Uint8Array#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|1160
  i32.const 8704
  call $~lib/typedarray/Uint8Array#sort
  drop
  local.get $result|1160
  i32.const 0
  call $~lib/typedarray/Uint8Array#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|1160
  i32.const 1
  call $~lib/typedarray/Uint8Array#__get
  i32.const 2
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|1160
  i32.const 2
  call $~lib/typedarray/Uint8Array#__get
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint8ClampedArray#constructor
  local.set $source|1161
  local.get $source|1161
  i32.const 2
  i32.const 1
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $source|1161
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $source|1161
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $source|1161
  i32.const 0
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#sort@varargs
  local.set $result|1162
  local.get $result|1162
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#__get
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|1162
  i32.const 1
  call $~lib/typedarray/Uint8ClampedArray#__get
  i32.const 2
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|1162
  i32.const 2
  call $~lib/typedarray/Uint8ClampedArray#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|1162
  i32.const 8768
  call $~lib/typedarray/Uint8ClampedArray#sort
  drop
  local.get $result|1162
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|1162
  i32.const 1
  call $~lib/typedarray/Uint8ClampedArray#__get
  i32.const 2
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|1162
  i32.const 2
  call $~lib/typedarray/Uint8ClampedArray#__get
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int16Array#constructor
  local.set $source|1163
  local.get $source|1163
  i32.const 2
  i32.const 1
  call $~lib/typedarray/Int16Array#__set
  local.get $source|1163
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int16Array#__set
  local.get $source|1163
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int16Array#__set
  local.get $source|1163
  i32.const 0
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Int16Array#sort@varargs
  local.set $result|1164
  local.get $result|1164
  i32.const 0
  call $~lib/typedarray/Int16Array#__get
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|1164
  i32.const 1
  call $~lib/typedarray/Int16Array#__get
  i32.const 2
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|1164
  i32.const 2
  call $~lib/typedarray/Int16Array#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|1164
  i32.const 8832
  call $~lib/typedarray/Int16Array#sort
  drop
  local.get $result|1164
  i32.const 0
  call $~lib/typedarray/Int16Array#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|1164
  i32.const 1
  call $~lib/typedarray/Int16Array#__get
  i32.const 2
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|1164
  i32.const 2
  call $~lib/typedarray/Int16Array#__get
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint16Array#constructor
  local.set $source|1165
  local.get $source|1165
  i32.const 2
  i32.const 1
  call $~lib/typedarray/Uint16Array#__set
  local.get $source|1165
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint16Array#__set
  local.get $source|1165
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint16Array#__set
  local.get $source|1165
  i32.const 0
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint16Array#sort@varargs
  local.set $result|1166
  local.get $result|1166
  i32.const 0
  call $~lib/typedarray/Uint16Array#__get
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|1166
  i32.const 1
  call $~lib/typedarray/Uint16Array#__get
  i32.const 2
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|1166
  i32.const 2
  call $~lib/typedarray/Uint16Array#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|1166
  i32.const 8896
  call $~lib/typedarray/Uint16Array#sort
  drop
  local.get $result|1166
  i32.const 0
  call $~lib/typedarray/Uint16Array#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|1166
  i32.const 1
  call $~lib/typedarray/Uint16Array#__get
  i32.const 2
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|1166
  i32.const 2
  call $~lib/typedarray/Uint16Array#__get
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int32Array#constructor
  local.set $source|1167
  local.get $source|1167
  i32.const 2
  i32.const 1
  call $~lib/typedarray/Int32Array#__set
  local.get $source|1167
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int32Array#__set
  local.get $source|1167
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int32Array#__set
  local.get $source|1167
  i32.const 0
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Int32Array#sort@varargs
  local.set $result|1168
  local.get $result|1168
  i32.const 0
  call $~lib/typedarray/Int32Array#__get
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|1168
  i32.const 1
  call $~lib/typedarray/Int32Array#__get
  i32.const 2
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|1168
  i32.const 2
  call $~lib/typedarray/Int32Array#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|1168
  i32.const 8960
  call $~lib/typedarray/Int32Array#sort
  drop
  local.get $result|1168
  i32.const 0
  call $~lib/typedarray/Int32Array#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|1168
  i32.const 1
  call $~lib/typedarray/Int32Array#__get
  i32.const 2
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|1168
  i32.const 2
  call $~lib/typedarray/Int32Array#__get
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint32Array#constructor
  local.set $source|1169
  local.get $source|1169
  i32.const 2
  i32.const 1
  call $~lib/typedarray/Uint32Array#__set
  local.get $source|1169
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint32Array#__set
  local.get $source|1169
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint32Array#__set
  local.get $source|1169
  i32.const 0
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint32Array#sort@varargs
  local.set $result|1170
  local.get $result|1170
  i32.const 0
  call $~lib/typedarray/Uint32Array#__get
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|1170
  i32.const 1
  call $~lib/typedarray/Uint32Array#__get
  i32.const 2
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|1170
  i32.const 2
  call $~lib/typedarray/Uint32Array#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|1170
  i32.const 9024
  call $~lib/typedarray/Uint32Array#sort
  drop
  local.get $result|1170
  i32.const 0
  call $~lib/typedarray/Uint32Array#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|1170
  i32.const 1
  call $~lib/typedarray/Uint32Array#__get
  i32.const 2
  i32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|1170
  i32.const 2
  call $~lib/typedarray/Uint32Array#__get
  i32.const 1
  i32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int64Array#constructor
  local.set $source|1171
  local.get $source|1171
  i32.const 2
  i64.const 1
  call $~lib/typedarray/Int64Array#__set
  local.get $source|1171
  i32.const 1
  i64.const 2
  call $~lib/typedarray/Int64Array#__set
  local.get $source|1171
  i32.const 0
  i64.const 3
  call $~lib/typedarray/Int64Array#__set
  local.get $source|1171
  i32.const 0
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Int64Array#sort@varargs
  local.set $result|1172
  local.get $result|1172
  i32.const 0
  call $~lib/typedarray/Int64Array#__get
  i64.const 1
  i64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|1172
  i32.const 1
  call $~lib/typedarray/Int64Array#__get
  i64.const 2
  i64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|1172
  i32.const 2
  call $~lib/typedarray/Int64Array#__get
  i64.const 3
  i64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|1172
  i32.const 9088
  call $~lib/typedarray/Int64Array#sort
  drop
  local.get $result|1172
  i32.const 0
  call $~lib/typedarray/Int64Array#__get
  i64.const 3
  i64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|1172
  i32.const 1
  call $~lib/typedarray/Int64Array#__get
  i64.const 2
  i64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|1172
  i32.const 2
  call $~lib/typedarray/Int64Array#__get
  i64.const 1
  i64.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint64Array#constructor
  local.set $source|1173
  local.get $source|1173
  i32.const 2
  i64.const 1
  call $~lib/typedarray/Uint64Array#__set
  local.get $source|1173
  i32.const 1
  i64.const 2
  call $~lib/typedarray/Uint64Array#__set
  local.get $source|1173
  i32.const 0
  i64.const 3
  call $~lib/typedarray/Uint64Array#__set
  local.get $source|1173
  i32.const 0
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint64Array#sort@varargs
  local.set $result|1174
  local.get $result|1174
  i32.const 0
  call $~lib/typedarray/Uint64Array#__get
  i64.const 1
  i64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|1174
  i32.const 1
  call $~lib/typedarray/Uint64Array#__get
  i64.const 2
  i64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|1174
  i32.const 2
  call $~lib/typedarray/Uint64Array#__get
  i64.const 3
  i64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|1174
  i32.const 9152
  call $~lib/typedarray/Uint64Array#sort
  drop
  local.get $result|1174
  i32.const 0
  call $~lib/typedarray/Uint64Array#__get
  i64.const 3
  i64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|1174
  i32.const 1
  call $~lib/typedarray/Uint64Array#__get
  i64.const 2
  i64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|1174
  i32.const 2
  call $~lib/typedarray/Uint64Array#__get
  i64.const 1
  i64.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Float32Array#constructor
  local.set $source|1175
  local.get $source|1175
  i32.const 2
  f32.const 1
  call $~lib/typedarray/Float32Array#__set
  local.get $source|1175
  i32.const 1
  f32.const 2
  call $~lib/typedarray/Float32Array#__set
  local.get $source|1175
  i32.const 0
  f32.const 3
  call $~lib/typedarray/Float32Array#__set
  local.get $source|1175
  i32.const 0
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Float32Array#sort@varargs
  local.set $result|1176
  local.get $result|1176
  i32.const 0
  call $~lib/typedarray/Float32Array#__get
  f32.const 1
  f32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|1176
  i32.const 1
  call $~lib/typedarray/Float32Array#__get
  f32.const 2
  f32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|1176
  i32.const 2
  call $~lib/typedarray/Float32Array#__get
  f32.const 3
  f32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|1176
  i32.const 9216
  call $~lib/typedarray/Float32Array#sort
  drop
  local.get $result|1176
  i32.const 0
  call $~lib/typedarray/Float32Array#__get
  f32.const 3
  f32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|1176
  i32.const 1
  call $~lib/typedarray/Float32Array#__get
  f32.const 2
  f32.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|1176
  i32.const 2
  call $~lib/typedarray/Float32Array#__get
  f32.const 1
  f32.eq
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Float64Array#constructor
  local.set $source|1177
  local.get $source|1177
  i32.const 2
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $source|1177
  i32.const 1
  f64.const 2
  call $~lib/typedarray/Float64Array#__set
  local.get $source|1177
  i32.const 0
  f64.const 3
  call $~lib/typedarray/Float64Array#__set
  local.get $source|1177
  i32.const 0
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Float64Array#sort@varargs
  local.set $result|1178
  local.get $result|1178
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.const 1
  f64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|1178
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.const 2
  f64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|1178
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.const 3
  f64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|1178
  i32.const 9248
  call $~lib/typedarray/Float64Array#sort
  drop
  local.get $result|1178
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.const 3
  f64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|1178
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.const 2
  f64.eq
  i32.eqz
  if
   unreachable
  end
  local.get $result|1178
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.const 1
  f64.eq
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/memory/__heap_base
  global.set $~lib/memory/__stack_pointer
  call $~lib/rt/stub/__collect
 )
)
