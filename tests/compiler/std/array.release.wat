(module
 (type $i32_i32_=>_i32 (func_subtype (param i32 i32) (result i32) func))
 (type $i32_i32_i32_=>_i32 (func_subtype (param i32 i32 i32) (result i32) func))
 (type $f32_f32_=>_i32 (func_subtype (param f32 f32) (result i32) func))
 (type $f64_f64_=>_i32 (func_subtype (param f64 f64) (result i32) func))
 (type $i32_i32_i32_i32_=>_i32 (func_subtype (param i32 i32 i32 i32) (result i32) func))
 (type $i32_i32_i32_=>_none (func_subtype (param i32 i32 i32) func))
 (type $i32_i32_i32_=>_f32 (func_subtype (param i32 i32 i32) (result f32) func))
 (type $none_=>_f64 (func_subtype (result f64) func))
 (type $i32_i32_=>_none (func_subtype (param i32 i32) func))
 (type $none_=>_none (func_subtype func))
 (import "env" "Math.random" (func $~lib/bindings/dom/Math.random (result f64)))
 (import "env" "seed" (func $~lib/builtins/seed (result f64)))
 (import "env" "_g" (func $~lib/builtins/_g (param i32 i32) (result i32)))
 (global $~lib/rt/stub/offset (mut i32) (i32.const 0))
 (global $std/array/arr (mut i32) (i32.const 0))
 (global $std/array/i (mut i32) (i32.const 0))
 (global $~lib/math/random_state0_64 (mut i64) (i64.const 0))
 (global $~lib/math/random_state1_64 (mut i64) (i64.const 0))
 (global $~lib/math/random_seeded (mut i32) (i32.const 0))
 (global $std/array/inputStabArr (mut i32) (i32.const 0))
 (global $std/array/outputStabArr (mut i32) (i32.const 0))
 (global $~started (mut i32) (i32.const 0))
 (memory $0 1)
 (data (i32.const 1036) ",\00\00\00\01\00\00\00\0e")
 (data (i32.const 1056) "Invalid length")
 (data (i32.const 1084) "\1c\00\00\00\01\00\00\00\03")
 (data (i32.const 1104) "abc")
 (data (i32.const 1116) "\1c\00\00\00\00\00\00\00\05")
 (data (i32.const 1136) "\01\02\03\04\05")
 (data (i32.const 1148) "\1c\00\00\00\01")
 (data (i32.const 1180) "\1c\00\00\00\00\00\00\00\05")
 (data (i32.const 1200) "\01\01\01\04\05")
 (data (i32.const 1212) ",\00\00\00\01\00\00\00\12")
 (data (i32.const 1232) "Index out of range")
 (data (i32.const 1260) "\1c\00\00\00\00\00\00\00\05")
 (data (i32.const 1292) "\1c\00\00\00\00\00\00\00\05")
 (data (i32.const 1312) "\01\01")
 (data (i32.const 1324) "\1c\00\00\00\00\00\00\00\05")
 (data (i32.const 1344) "\01\01\00\02\02")
 (data (i32.const 1356) "\1c\00\00\00\00\00\00\00\05")
 (data (i32.const 1376) "\01\01\00\02\02")
 (data (i32.const 1388) "\1c\00\00\00\00\00\00\00\05")
 (data (i32.const 1408) "\ff\ff\ff\ff\ff")
 (data (i32.const 1420) ",\00\00\00\00\00\00\00\14")
 (data (i32.const 1440) "\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 1468) ",\00\00\00\00\00\00\00\14")
 (data (i32.const 1488) "\01\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00\05")
 (data (i32.const 1516) ",\00\00\00\00\00\00\00\14")
 (data (i32.const 1564) ",\00\00\00\00\00\00\00\14")
 (data (i32.const 1584) "\01\00\00\00\01")
 (data (i32.const 1612) ",\00\00\00\00\00\00\00\14")
 (data (i32.const 1632) "\01\00\00\00\01\00\00\00\00\00\00\00\02\00\00\00\02")
 (data (i32.const 1660) ",\00\00\00\00\00\00\00\14")
 (data (i32.const 1680) "\01\00\00\00\01\00\00\00\00\00\00\00\02\00\00\00\02")
 (data (i32.const 1708) ",\00\00\00\00\00\00\00\14")
 (data (i32.const 1728) "\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff")
 (data (i32.const 1756) ",\00\00\00\00\00\00\00\14")
 (data (i32.const 1779) "?\00\00\80?\00\00\c0?\00\00 @\00\00@@")
 (data (i32.const 1804) ",\00\00\00\00\00\00\00\14")
 (data (i32.const 1827) "?\00\00\80?\00\00\80?\00\00 @\00\00@@")
 (data (i32.const 1852) ",\00\00\00\00\00\00\00\14")
 (data (i32.const 1900) ",\00\00\00\00\00\00\00\14")
 (data (i32.const 1922) "\80?\00\00\80?")
 (data (i32.const 1948) ",\00\00\00\00\00\00\00\14")
 (data (i32.const 1970) "\80?\00\00\80?\00\00\00\00\00\00\00@\00\00\00@")
 (data (i32.const 1996) ",\00\00\00\00\00\00\00\14")
 (data (i32.const 2018) "\80?\00\00\80?\00\00\00\00\00\00\00@\00\00\00@")
 (data (i32.const 2044) ",\00\00\00\00\00\00\00\14")
 (data (i32.const 2066) "\80\bf\00\00\80\bf\00\00\80\bf\00\00\80\bf\00\00\80\bf")
 (data (i32.const 2092) ",\00\00\00\00\00\00\00\14")
 (data (i32.const 2115) "\80\00\00\00\80\00\00\00\80\00\00\00\80\00\00\00\80")
 (data (i32.const 2140) ",\00\00\00\01\00\00\00\14")
 (data (i32.const 2160) "Allocation too large")
 (data (i32.const 2188) ",\00\00\00\01\00\00\00\0e")
 (data (i32.const 2208) "Array is empty")
 (data (i32.const 2236) ",\00\00\00\00\00\00\00\10")
 (data (i32.const 2256) "\01\00\00\00\02\00\00\00\03\00\00\00\04")
 (data (i32.const 2284) "\1c")
 (data (i32.const 2316) "\1c")
 (data (i32.const 2348) ",\00\00\00\00\00\00\00\14")
 (data (i32.const 2368) "\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 2396) ",\00\00\00\00\00\00\00\14")
 (data (i32.const 2416) "\04\00\00\00\05\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 2444) ",\00\00\00\00\00\00\00\14")
 (data (i32.const 2464) "\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 2492) ",\00\00\00\00\00\00\00\14")
 (data (i32.const 2512) "\01\00\00\00\04\00\00\00\05\00\00\00\04\00\00\00\05")
 (data (i32.const 2540) ",\00\00\00\00\00\00\00\14")
 (data (i32.const 2560) "\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 2588) ",\00\00\00\00\00\00\00\14")
 (data (i32.const 2608) "\01\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\05")
 (data (i32.const 2636) ",\00\00\00\00\00\00\00\14")
 (data (i32.const 2656) "\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 2684) ",\00\00\00\00\00\00\00\14")
 (data (i32.const 2704) "\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 2732) ",\00\00\00\00\00\00\00\14")
 (data (i32.const 2752) "\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 2780) ",\00\00\00\00\00\00\00\14")
 (data (i32.const 2800) "\04\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 2828) ",\00\00\00\00\00\00\00\14")
 (data (i32.const 2848) "\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 2876) ",\00\00\00\00\00\00\00\14")
 (data (i32.const 2896) "\01\00\00\00\04\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 2924) ",\00\00\00\00\00\00\00\14")
 (data (i32.const 2944) "\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 2972) ",\00\00\00\00\00\00\00\14")
 (data (i32.const 2992) "\01\00\00\00\03\00\00\00\04\00\00\00\04\00\00\00\05")
 (data (i32.const 3020) ",\00\00\00\00\00\00\00\14")
 (data (i32.const 3040) "\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 3068) ",\00\00\00\00\00\00\00\14")
 (data (i32.const 3088) "\04\00\00\00\05\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 3116) ",\00\00\00\00\00\00\00\14")
 (data (i32.const 3136) "\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 3164) ",\00\00\00\00\00\00\00\14")
 (data (i32.const 3184) "\04\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 3212) ",\00\00\00\00\00\00\00\14")
 (data (i32.const 3232) "\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 3260) ",\00\00\00\00\00\00\00\14")
 (data (i32.const 3280) "\01\00\00\00\03\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 3308) ",\00\00\00\00\00\00\00\14")
 (data (i32.const 3328) "\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 3356) ",\00\00\00\00\00\00\00\14")
 (data (i32.const 3376) "\01\00\00\00\03\00\00\00\04\00\00\00\04\00\00\00\05")
 (data (i32.const 3404) ",\00\00\00\00\00\00\00\14")
 (data (i32.const 3424) "\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 3452) ",\00\00\00\00\00\00\00\14")
 (data (i32.const 3472) "\01\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\05")
 (data (i32.const 3500) ",\00\00\00\00\00\00\00\14")
 (data (i32.const 3520) "\03\00\00\00\05\00\00\00\07\00\00\00\t\00\00\00\0b")
 (data (i32.const 3548) "\1c\00\00\00\00\00\00\00\0c")
 (data (i32.const 3568) "\07\00\00\00\t\00\00\00\0b")
 (data (i32.const 3580) "\1c\00\00\00\00\00\00\00\08")
 (data (i32.const 3600) "\07\00\00\00\t")
 (data (i32.const 3612) ",\00\00\00\00\00\00\00\10")
 (data (i32.const 3632) "\05\00\00\00\07\00\00\00\t\00\00\00\0b")
 (data (i32.const 3660) "\1c\00\00\00\00\00\00\00\08")
 (data (i32.const 3680) "\t\00\00\00\0b")
 (data (i32.const 3692) "\1c\00\00\00\00\00\00\00\08")
 (data (i32.const 3712) "\07\00\00\00\t")
 (data (i32.const 3724) "\1c\00\00\00\00\00\00\00\08")
 (data (i32.const 3744) "\07\00\00\00\t")
 (data (i32.const 3756) "\1c\00\00\00\00\00\00\00\04")
 (data (i32.const 3777) "\01\02\03")
 (data (i32.const 3788) "\1c\00\00\00\00\00\00\00\08")
 (data (i32.const 3809) "\01\02\03\04\05\06\07")
 (data (i32.const 3820) ",\00\00\00\00\00\00\00\11")
 (data (i32.const 3841) "\01\02\03\04\05\06\07\08\t\n\0b\0c\r\0e\0f\10")
 (data (i32.const 3868) ",\00\00\00\00\00\00\00\0e")
 (data (i32.const 3890) "\01\00\02\00\03\00\04\00\05\00\06")
 (data (i32.const 3916) ",\00\00\00\00\00\00\00\10")
 (data (i32.const 3938) "\01\00\02\00\03\00\04\00\05\00\06\00\07")
 (data (i32.const 3964) ",\00\00\00\00\00\00\00\12")
 (data (i32.const 3986) "\01\00\02\00\03\00\04\00\05\00\06\00\07\00\08")
 (data (i32.const 4012) "\1c\00\00\00\00\00\00\00\04")
 (data (i32.const 4034) "\c0\7f")
 (data (i32.const 4044) "\1c\00\00\00\00\00\00\00\08")
 (data (i32.const 4070) "\f8\7f")
 (data (i32.const 4076) ",\00\00\00\00\00\00\00\10")
 (data (i32.const 4096) "\02\00\00\00\05\00\00\00\t\00\00\00\02")
 (data (i32.const 4124) "\1c\00\00\00\00\00\00\00\04")
 (data (i32.const 4146) "\c0\7f")
 (data (i32.const 4156) "\1c\00\00\00\00\00\00\00\08")
 (data (i32.const 4182) "\f8\7f")
 (data (i32.const 4188) ",\00\00\00\00\00\00\00\14")
 (data (i32.const 4208) "\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 4236) ",\00\00\00\00\00\00\00\14")
 (data (i32.const 4256) "\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 4284) "\1c")
 (data (i32.const 4316) ",\00\00\00\00\00\00\00\14")
 (data (i32.const 4336) "\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 4364) "\1c")
 (data (i32.const 4396) ",\00\00\00\00\00\00\00\14")
 (data (i32.const 4416) "\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 4444) ",\00\00\00\00\00\00\00\14")
 (data (i32.const 4464) "\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 4492) "\1c\00\00\00\00\00\00\00\0c")
 (data (i32.const 4512) "\03\00\00\00\04\00\00\00\05")
 (data (i32.const 4524) "\1c\00\00\00\00\00\00\00\08")
 (data (i32.const 4544) "\01\00\00\00\02")
 (data (i32.const 4556) ",\00\00\00\00\00\00\00\14")
 (data (i32.const 4576) "\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 4604) "\1c\00\00\00\00\00\00\00\08")
 (data (i32.const 4624) "\03\00\00\00\04")
 (data (i32.const 4636) "\1c\00\00\00\00\00\00\00\0c")
 (data (i32.const 4656) "\01\00\00\00\02\00\00\00\05")
 (data (i32.const 4668) ",\00\00\00\00\00\00\00\14")
 (data (i32.const 4688) "\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 4716) "\1c\00\00\00\00\00\00\00\04")
 (data (i32.const 4736) "\01")
 (data (i32.const 4748) ",\00\00\00\00\00\00\00\10")
 (data (i32.const 4768) "\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 4796) ",\00\00\00\00\00\00\00\14")
 (data (i32.const 4816) "\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 4844) "\1c\00\00\00\00\00\00\00\04")
 (data (i32.const 4864) "\05")
 (data (i32.const 4876) ",\00\00\00\00\00\00\00\10")
 (data (i32.const 4896) "\01\00\00\00\02\00\00\00\03\00\00\00\04")
 (data (i32.const 4924) ",\00\00\00\00\00\00\00\14")
 (data (i32.const 4944) "\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 4972) "\1c\00\00\00\00\00\00\00\08")
 (data (i32.const 4992) "\04\00\00\00\05")
 (data (i32.const 5004) "\1c\00\00\00\00\00\00\00\0c")
 (data (i32.const 5024) "\01\00\00\00\02\00\00\00\03")
 (data (i32.const 5036) ",\00\00\00\00\00\00\00\14")
 (data (i32.const 5056) "\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 5084) "\1c\00\00\00\00\00\00\00\04")
 (data (i32.const 5104) "\04")
 (data (i32.const 5116) ",\00\00\00\00\00\00\00\10")
 (data (i32.const 5136) "\01\00\00\00\02\00\00\00\03\00\00\00\05")
 (data (i32.const 5164) ",\00\00\00\00\00\00\00\14")
 (data (i32.const 5184) "\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 5212) "\1c\00\00\00\00\00\00\00\04")
 (data (i32.const 5232) "\01")
 (data (i32.const 5244) ",\00\00\00\00\00\00\00\10")
 (data (i32.const 5264) "\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 5292) ",\00\00\00\00\00\00\00\14")
 (data (i32.const 5312) "\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 5340) "\1c")
 (data (i32.const 5372) ",\00\00\00\00\00\00\00\14")
 (data (i32.const 5392) "\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 5420) ",\00\00\00\00\00\00\00\14")
 (data (i32.const 5440) "\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 5468) "\1c")
 (data (i32.const 5500) ",\00\00\00\00\00\00\00\14")
 (data (i32.const 5520) "\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 5548) ",\00\00\00\00\00\00\00\14")
 (data (i32.const 5568) "\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 5596) "\1c")
 (data (i32.const 5628) ",\00\00\00\00\00\00\00\14")
 (data (i32.const 5648) "\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 5676) ",\00\00\00\00\00\00\00\14")
 (data (i32.const 5696) "\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 5724) "\1c")
 (data (i32.const 5756) ",\00\00\00\00\00\00\00\14")
 (data (i32.const 5776) "\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 5804) ",\00\00\00\00\00\00\00\14")
 (data (i32.const 5824) "\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 5852) "\1c")
 (data (i32.const 5884) ",\00\00\00\00\00\00\00\14")
 (data (i32.const 5904) "\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 5932) "\1c")
 (data (i32.const 5964) "L\00\00\00\01\00\00\00/")
 (data (i32.const 5984) "Element type must be nullable if array is holey")
 (data (i32.const 6044) ",\00\00\00\01\00\00\00\0f")
 (data (i32.const 6064) "unexpected null")
 (data (i32.const 6092) "\1c\00\00\00\0e\00\00\00\08")
 (data (i32.const 6112) "\01")
 (data (i32.const 6124) "\1c\00\00\00\0e\00\00\00\08")
 (data (i32.const 6144) "\02")
 (data (i32.const 6156) "\1c\00\00\00\0e\00\00\00\08")
 (data (i32.const 6176) "\03")
 (data (i32.const 6188) "\1c\00\00\00\0e\00\00\00\08")
 (data (i32.const 6208) "\04")
 (data (i32.const 6220) "\1c\00\00\00\0e\00\00\00\08")
 (data (i32.const 6240) "\05")
 (data (i32.const 6252) "\1c\00\00\00\0e\00\00\00\08")
 (data (i32.const 6272) "\06")
 (data (i32.const 6284) ",\00\00\00\00\00\00\00\10")
 (data (i32.const 6308) "\01\00\00\00\02\00\00\00\03")
 (data (i32.const 6332) "\1c\00\00\00\0e\00\00\00\08")
 (data (i32.const 6352) "\07")
 (data (i32.const 6364) "\1c\00\00\00\0e\00\00\00\08")
 (data (i32.const 6384) "\08")
 (data (i32.const 6396) "\1c\00\00\00\0e\00\00\00\08")
 (data (i32.const 6416) "\t")
 (data (i32.const 6428) "\1c\00\00\00\0e\00\00\00\08")
 (data (i32.const 6448) "\n")
 (data (i32.const 6460) "\1c\00\00\00\0e\00\00\00\08")
 (data (i32.const 6480) "\0b")
 (data (i32.const 6492) "\1c\00\00\00\0e\00\00\00\08")
 (data (i32.const 6512) "\0c")
 (data (i32.const 6524) "\1c\00\00\00\0e\00\00\00\08")
 (data (i32.const 6544) "\r")
 (data (i32.const 6556) "\1c\00\00\00\0e\00\00\00\08")
 (data (i32.const 6576) "\0e")
 (data (i32.const 6588) "\1c\00\00\00\0e\00\00\00\08")
 (data (i32.const 6608) "\0f")
 (data (i32.const 6620) "\1c\00\00\00\0e\00\00\00\08")
 (data (i32.const 6640) "\10")
 (data (i32.const 6652) "\1c\00\00\00\0e\00\00\00\08")
 (data (i32.const 6672) "\11")
 (data (i32.const 6684) "\1c\00\00\00\0e\00\00\00\08")
 (data (i32.const 6704) "\12")
 (data (i32.const 6716) "\1c\00\00\00\0e\00\00\00\08")
 (data (i32.const 6736) "\13")
 (data (i32.const 6748) "\1c\00\00\00\0e\00\00\00\08")
 (data (i32.const 6768) "\14")
 (data (i32.const 6780) "\1c\00\00\00\0f\00\00\00\08")
 (data (i32.const 6800) "\15")
 (data (i32.const 6812) "\1c\00\00\00\0f\00\00\00\08")
 (data (i32.const 6832) "\16")
 (data (i32.const 6844) "\1c\00\00\00\0f\00\00\00\08")
 (data (i32.const 6864) "\17")
 (data (i32.const 6876) "\1c\00\00\00\0f\00\00\00\08")
 (data (i32.const 6896) "\18")
 (data (i32.const 6908) "\1c\00\00\00\0f\00\00\00\08")
 (data (i32.const 6928) "\19")
 (data (i32.const 6940) "\1c\00\00\00\01\00\00\00\01")
 (data (i32.const 6960) "0")
 (data (i32.const 6972) "\1c\00\00\00\11\00\00\00\08")
 (data (i32.const 6992) "\1a")
 (data (i32.const 7004) "\1c\00\00\00\12\00\00\00\08")
 (data (i32.const 7024) "\1b")
 (data (i32.const 7036) "\1c\00\00\00\13\00\00\00\08")
 (data (i32.const 7056) "\1c")
 (data (i32.const 7068) "\1c\00\00\00\13\00\00\00\08")
 (data (i32.const 7088) "\1d")
 (data (i32.const 7100) "\1c\00\00\00\13\00\00\00\08")
 (data (i32.const 7120) "\1e")
 (data (i32.const 7132) "\1c\00\00\00\0e\00\00\00\08")
 (data (i32.const 7152) "\1f")
 (data (i32.const 7164) "\1c\00\00\00\0e\00\00\00\08")
 (data (i32.const 7184) " ")
 (data (i32.const 7196) "\1c\00\00\00\0e\00\00\00\08")
 (data (i32.const 7216) "!")
 (data (i32.const 7228) "\1c\00\00\00\0e\00\00\00\08")
 (data (i32.const 7248) "\"")
 (data (i32.const 7260) "\1c\00\00\00\14\00\00\00\08")
 (data (i32.const 7280) "#")
 (data (i32.const 7292) "\1c\00\00\00\14\00\00\00\08")
 (data (i32.const 7312) "$")
 (data (i32.const 7324) "\1c\00\00\00\15\00\00\00\08")
 (data (i32.const 7344) "%")
 (data (i32.const 7356) "\1c\00\00\00\15\00\00\00\08")
 (data (i32.const 7376) "&")
 (data (i32.const 7388) "\1c\00\00\00\14\00\00\00\08")
 (data (i32.const 7408) "\'")
 (data (i32.const 7420) "\1c\00\00\00\14\00\00\00\08")
 (data (i32.const 7440) "(")
 (data (i32.const 7452) "\1c\00\00\00\14\00\00\00\08")
 (data (i32.const 7472) ")")
 (data (i32.const 7484) "\1c\00\00\00\14\00\00\00\08")
 (data (i32.const 7504) "*")
 (data (i32.const 7516) "\1c\00\00\00\14\00\00\00\08")
 (data (i32.const 7536) "+")
 (data (i32.const 7548) "\1c\00\00\00\15\00\00\00\08")
 (data (i32.const 7568) ",")
 (data (i32.const 7580) "\1c\00\00\00\15\00\00\00\08")
 (data (i32.const 7600) "-")
 (data (i32.const 7612) "\1c\00\00\00\14\00\00\00\08")
 (data (i32.const 7632) ".")
 (data (i32.const 7644) "\1c\00\00\00\14\00\00\00\08")
 (data (i32.const 7664) "/")
 (data (i32.const 7676) "\1c\00\00\00\14\00\00\00\08")
 (data (i32.const 7696) "0")
 (data (i32.const 7708) "l\00\00\00\01\00\00\00V")
 (data (i32.const 7728) "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789_-,.+/\\[]{}()<>*&$%^@#!?")
 (data (i32.const 7820) "\1c\00\00\00\00\00\00\00\0c")
 (data (i32.const 7843) "@\00\00\80\bf")
 (data (i32.const 7852) "\1c\00\00\00\18\00\00\00\08")
 (data (i32.const 7872) "1")
 (data (i32.const 7884) "\1c\00\00\00\00\00\00\00\0c")
 (data (i32.const 7906) "\80\bf\00\00\00\00\00\00\00@")
 (data (i32.const 7916) "<\00\00\00\00\00\00\00 ")
 (data (i32.const 7938) "\80?\00\00\c0\7f\00\00\80\ff\00\00\80?\00\00\00\00\00\00\80\bf\00\00\00\c0\00\00\80\7f")
 (data (i32.const 7980) "<\00\00\00\00\00\00\00 ")
 (data (i32.const 8002) "\80\ff\00\00\00\c0\00\00\80\bf\00\00\00\00\00\00\80?\00\00\80?\00\00\80\7f\00\00\c0\7f")
 (data (i32.const 8044) "L\00\00\00\00\00\00\008")
 (data (i32.const 8070) "\f0?\00\00\00\00\00\00\f8\7f\00\00\00\00\00\00\f0\ff\05\00\00\00\00\00\f0?")
 (data (i32.const 8110) "\f0\bf\00\00\00\00\00\00\00\c0")
 (data (i32.const 8124) "\1c\00\00\00\19\00\00\00\08")
 (data (i32.const 8144) "2")
 (data (i32.const 8156) "L\00\00\00\00\00\00\008")
 (data (i32.const 8182) "\f0\ff\00\00\00\00\00\00\00\c0\00\00\00\00\00\00\f0\bf")
 (data (i32.const 8214) "\f0?\05\00\00\00\00\00\f0?\00\00\00\00\00\00\f8\7f")
 (data (i32.const 8236) ",\00\00\00\00\00\00\00\14")
 (data (i32.const 8256) "\01\00\00\00\fe\ff\ff\ff\ff\ff\ff\ff\00\00\00\00\02")
 (data (i32.const 8284) "\1c\00\00\00\1a\00\00\00\08")
 (data (i32.const 8304) "3")
 (data (i32.const 8316) ",\00\00\00\00\00\00\00\14")
 (data (i32.const 8336) "\fe\ff\ff\ff\ff\ff\ff\ff\00\00\00\00\01\00\00\00\02")
 (data (i32.const 8364) ",\00\00\00\00\00\00\00\14")
 (data (i32.const 8384) "\01\00\00\00\ff\ff\ff\ff\fe\ff\ff\ff\00\00\00\00\02")
 (data (i32.const 8412) "\1c\00\00\00\1b\00\00\00\08")
 (data (i32.const 8432) "4")
 (data (i32.const 8444) ",\00\00\00\00\00\00\00\14")
 (data (i32.const 8468) "\01\00\00\00\02\00\00\00\fe\ff\ff\ff\ff\ff\ff\ff")
 (data (i32.const 8492) "\1c")
 (data (i32.const 8524) "\1c\00\00\00\00\00\00\00\04")
 (data (i32.const 8544) "\01")
 (data (i32.const 8556) "\1c\00\00\00\00\00\00\00\08")
 (data (i32.const 8576) "\02\00\00\00\01")
 (data (i32.const 8588) ",\00\00\00\00\00\00\00\10")
 (data (i32.const 8608) "\03\00\00\00\02\00\00\00\01")
 (data (i32.const 8636) ",\00\00\00\00\00\00\00\10")
 (data (i32.const 8660) "\01\00\00\00\02\00\00\00\03")
 (data (i32.const 8684) "\1c\00\00\00\1a\00\00\00\08")
 (data (i32.const 8704) "5")
 (data (i32.const 8716) "\1c\00\00\00\1a\00\00\00\08")
 (data (i32.const 8736) "6")
 (data (i32.const 8748) "\1c\00\00\00\00\00\00\00\04")
 (data (i32.const 8768) "\01")
 (data (i32.const 8780) "\1c\00\00\00\1a\00\00\00\08")
 (data (i32.const 8800) "7")
 (data (i32.const 8812) "\1c\00\00\00\00\00\00\00\08")
 (data (i32.const 8832) "\01\00\00\00\02")
 (data (i32.const 8844) "\1c\00\00\00\1a\00\00\00\08")
 (data (i32.const 8864) "8")
 (data (i32.const 8876) "\1c\00\00\00\1a\00\00\00\08")
 (data (i32.const 8896) "9")
 (data (i32.const 8908) "\1c\00\00\00\1a\00\00\00\08")
 (data (i32.const 8928) ":")
 (data (i32.const 8940) "\1c\00\00\00\1a\00\00\00\08")
 (data (i32.const 8960) ";")
 (data (i32.const 8972) "\1c\00\00\00\1a\00\00\00\08")
 (data (i32.const 8992) "<")
 (data (i32.const 9004) "\1c\00\00\00\1c\00\00\00\08")
 (data (i32.const 9024) "=")
 (data (i32.const 9036) "\1c\00\00\00\1a\00\00\00\08")
 (data (i32.const 9056) ">")
 (data (i32.const 9068) "\1c\00\00\00\1a\00\00\00\08")
 (data (i32.const 9088) "?")
 (data (i32.const 9100) "\1c\00\00\00\1a\00\00\00\08")
 (data (i32.const 9120) "@")
 (data (i32.const 9132) "\1c\00\00\00\1a\00\00\00\08")
 (data (i32.const 9152) "A")
 (data (i32.const 9164) "\1c\00\00\00\1e\00\00\00\08")
 (data (i32.const 9184) "B")
 (data (i32.const 9196) "\1c\00\00\00!\00\00\00\08")
 (data (i32.const 9216) "C")
 (data (i32.const 9228) "\1c\00\00\00\00\00\00\00\04")
 (data (i32.const 9260) "\1c\00\00\00\00\00\00\00\0c")
 (data (i32.const 9280) "\01\00\00\00\02\00\00\00\03")
 (data (i32.const 9292) "\1c\00\00\00\00\00\00\00\0c")
 (data (i32.const 9312) "\04\00\00\00\05\00\00\00\06")
 (data (i32.const 9324) "\1c\00\00\00\00\00\00\00\0c")
 (data (i32.const 9344) "\07\00\00\00\08\00\00\00\t")
 (data (i32.const 9356) "\1c\00\00\00\01\00\00\00\03")
 (data (i32.const 9376) "one")
 (data (i32.const 9388) "\1c\00\00\00\00\00\00\00\04")
 (data (i32.const 9408) "\a0$")
 (data (i32.const 9420) "\1c\00\00\00\01\00\00\00\03")
 (data (i32.const 9440) "two")
 (data (i32.const 9452) "\1c\00\00\00\01\00\00\00\05")
 (data (i32.const 9472) "three")
 (data (i32.const 9484) "\1c\00\00\00\00\00\00\00\0c")
 (data (i32.const 9504) "\e0$\00\00\00\00\00\00\00%")
 (data (i32.const 9516) "\1c\00\00\00\01\00\00\00\04")
 (data (i32.const 9536) "four")
 (data (i32.const 9548) "\1c\00\00\00\01\00\00\00\04")
 (data (i32.const 9568) "five")
 (data (i32.const 9580) "\1c\00\00\00\01\00\00\00\03")
 (data (i32.const 9600) "six")
 (data (i32.const 9612) "\1c\00\00\00\00\00\00\00\0c")
 (data (i32.const 9632) "@%\00\00`%\00\00\80%")
 (data (i32.const 9644) "\1c\00\00\00\01\00\00\00\05")
 (data (i32.const 9664) "seven")
 (data (i32.const 9676) "\1c\00\00\00\00\00\00\00\04")
 (data (i32.const 9696) "\c0%")
 (data (i32.const 9708) "<\00\00\00\00\00\00\00 ")
 (data (i32.const 9728) "\a0$\00\00\e0$\00\00\00\00\00\00\00%\00\00@%\00\00`%\00\00\80%\00\00\c0%")
 (data (i32.const 9772) "\1c")
 (data (i32.const 9804) "\1c")
 (data (i32.const 9836) "\1c\00\00\00\00\00\00\00\04")
 (data (i32.const 9856) "\01")
 (data (i32.const 9868) "\1c\00\00\00\00\00\00\00\04")
 (data (i32.const 9888) "\02")
 (data (i32.const 9900) "\1c\00\00\00$\00\00\00\08")
 (data (i32.const 9920) "D")
 (table $0 69 69 funcref)
 (elem $0 (i32.const 1) $start:std/array~anonymous|0 $start:std/array~anonymous|1 $start:std/array~anonymous|2 $start:std/array~anonymous|3 $start:std/array~anonymous|2 $start:std/array~anonymous|5 $start:std/array~anonymous|0 $start:std/array~anonymous|1 $start:std/array~anonymous|2 $start:std/array~anonymous|5 $start:std/array~anonymous|10 $start:std/array~anonymous|11 $start:std/array~anonymous|12 $start:std/array~anonymous|13 $start:std/array~anonymous|14 $start:std/array~anonymous|15 $start:std/array~anonymous|16 $start:std/array~anonymous|17 $start:std/array~anonymous|18 $start:std/array~anonymous|19 $start:std/array~anonymous|20 $start:std/array~anonymous|21 $start:std/array~anonymous|20 $start:std/array~anonymous|23 $start:std/array~anonymous|24 $start:std/array~anonymous|25 $start:std/array~anonymous|26 $start:std/array~anonymous|27 $start:std/array~anonymous|28 $start:std/array~anonymous|29 $start:std/array~anonymous|30 $start:std/array~anonymous|31 $start:std/array~anonymous|32 $start:std/array~anonymous|33 $start:std/array~anonymous|34 $start:std/array~anonymous|34 $start:std/array~anonymous|36 $start:std/array~anonymous|37 $start:std/array~anonymous|38 $start:std/array~anonymous|34 $start:std/array~anonymous|40 $start:std/array~anonymous|34 $start:std/array~anonymous|34 $start:std/array~anonymous|36 $start:std/array~anonymous|37 $start:std/array~anonymous|38 $start:std/array~anonymous|34 $start:std/array~anonymous|40 $~lib/util/sort/COMPARATOR<f32>~anonymous|0 $~lib/util/sort/COMPARATOR<f64>~anonymous|0 $~lib/util/sort/COMPARATOR<i32>~anonymous|0 $~lib/util/sort/COMPARATOR<u32>~anonymous|0 $~lib/util/sort/COMPARATOR<i32>~anonymous|0 $~lib/util/sort/COMPARATOR<i32>~anonymous|0 $~lib/util/sort/COMPARATOR<i32>~anonymous|0 $~lib/util/sort/COMPARATOR<i32>~anonymous|0 $~lib/util/sort/COMPARATOR<i32>~anonymous|0 $~lib/util/sort/COMPARATOR<i32>~anonymous|0 $~lib/util/sort/COMPARATOR<i32>~anonymous|0 $~lib/util/sort/COMPARATOR<i32>~anonymous|0 $std/array/assertStableSortedForComplexObjects~anonymous|0 $~lib/util/sort/COMPARATOR<i32>~anonymous|0 $start:std/array~anonymous|49 $~lib/util/sort/COMPARATOR<i32>~anonymous|0 $start:std/array~anonymous|49 $start:std/array~anonymous|52 $std/array/assertStableSortedForComplexObjects~anonymous|0 $start:std/array~anonymous|54)
 (export "memory" (memory $0))
 (export "_start" (func $~start))
 (func $start:std/array~anonymous|0 (type $i32_i32_i32_=>_i32) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  i32.eqz
 )
 (func $start:std/array~anonymous|1 (type $i32_i32_i32_=>_i32) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  i32.const 1
  i32.eq
 )
 (func $start:std/array~anonymous|2 (type $i32_i32_i32_=>_i32) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  i32.const 100
  i32.eq
 )
 (func $start:std/array~anonymous|3 (type $i32_i32_i32_=>_i32) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  local.get $2
  i32.load $0 offset=12
  local.tee $7
  i32.const 1
  i32.add
  local.tee $8
  local.tee $1
  local.get $2
  i32.load $0 offset=8
  local.tee $4
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   local.get $1
   i32.const 268435455
   i32.gt_u
   if
    unreachable
   end
   local.get $2
   i32.load $0
   local.set $6
   i32.const 1073741820
   local.get $4
   i32.const 1
   i32.shl
   local.tee $3
   local.get $3
   i32.const 1073741820
   i32.ge_u
   select
   local.tee $3
   i32.const 8
   local.get $1
   local.get $1
   i32.const 8
   i32.le_u
   select
   i32.const 2
   i32.shl
   local.tee $1
   local.get $1
   local.get $3
   i32.lt_u
   select
   local.tee $9
   i32.const 1073741804
   i32.gt_u
   if
    unreachable
   end
   local.get $6
   i32.const 16
   i32.sub
   local.tee $1
   i32.const 15
   i32.and
   i32.const 1
   local.get $1
   select
   if
    unreachable
   end
   global.get $~lib/rt/stub/offset
   local.get $1
   i32.const 4
   i32.sub
   local.tee $3
   i32.load $0
   local.tee $5
   local.get $1
   i32.add
   i32.eq
   local.set $10
   local.get $9
   i32.const 16
   i32.add
   local.tee $11
   i32.const 19
   i32.add
   i32.const -16
   i32.and
   i32.const 4
   i32.sub
   local.set $12
   local.get $5
   local.get $11
   i32.lt_u
   if
    local.get $10
    if
     local.get $11
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     local.get $1
     local.get $12
     i32.add
     local.tee $5
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $5
     global.set $~lib/rt/stub/offset
     local.get $3
     local.get $12
     i32.store $0
    else
     local.get $12
     local.get $5
     i32.const 1
     i32.shl
     local.tee $3
     local.get $3
     local.get $12
     i32.lt_u
     select
     local.tee $10
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     global.get $~lib/rt/stub/offset
     i32.eqz
     if
      i32.const 9932
      global.set $~lib/rt/stub/offset
     end
     global.get $~lib/rt/stub/offset
     local.tee $3
     local.set $11
     local.get $3
     i32.const 4
     i32.add
     local.tee $3
     local.get $10
     i32.const 19
     i32.add
     i32.const -16
     i32.and
     i32.const 4
     i32.sub
     local.tee $10
     i32.add
     local.tee $12
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $12
     global.set $~lib/rt/stub/offset
     local.get $11
     local.get $10
     i32.store $0
     local.get $3
     local.get $1
     local.get $5
     memory.copy $0 $0
     local.get $3
     local.set $1
    end
   else
    local.get $10
    if
     local.get $1
     local.get $12
     i32.add
     global.set $~lib/rt/stub/offset
     local.get $3
     local.get $12
     i32.store $0
    end
   end
   local.get $1
   i32.const 4
   i32.sub
   local.get $9
   i32.store $0 offset=8
   local.get $4
   local.get $1
   i32.const 16
   i32.add
   local.tee $1
   i32.add
   i32.const 0
   local.get $9
   local.get $4
   i32.sub
   memory.fill $0
   local.get $1
   local.get $6
   i32.ne
   if
    local.get $2
    local.get $1
    i32.store $0
    local.get $2
    local.get $1
    i32.store $0 offset=4
   end
   local.get $2
   local.get $9
   i32.store $0 offset=8
  end
  local.get $2
  i32.load $0 offset=4
  local.get $7
  i32.const 2
  i32.shl
  i32.add
  i32.const 100
  i32.store $0
  local.get $2
  local.get $8
  i32.store $0 offset=12
  local.get $0
  i32.const 100
  i32.eq
 )
 (func $start:std/array~anonymous|5 (type $i32_i32_i32_=>_i32) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $2
  i32.load $0 offset=12
  local.tee $1
  i32.const 0
  i32.le_s
  if
   unreachable
  end
  local.get $2
  i32.load $0 offset=4
  local.get $1
  i32.const 1
  i32.sub
  local.tee $1
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  drop
  local.get $2
  local.get $1
  i32.store $0 offset=12
  local.get $0
  i32.const 100
  i32.eq
 )
 (func $start:std/array~anonymous|10 (type $i32_i32_i32_=>_i32) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  i32.const 0
  i32.ge_s
 )
 (func $start:std/array~anonymous|11 (type $i32_i32_i32_=>_i32) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  i32.const 0
  i32.le_s
 )
 (func $start:std/array~anonymous|12 (type $i32_i32_i32_=>_i32) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  local.get $2
  i32.load $0 offset=12
  local.tee $7
  i32.const 1
  i32.add
  local.tee $8
  local.tee $1
  local.get $2
  i32.load $0 offset=8
  local.tee $4
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   local.get $1
   i32.const 268435455
   i32.gt_u
   if
    unreachable
   end
   local.get $2
   i32.load $0
   local.set $6
   i32.const 1073741820
   local.get $4
   i32.const 1
   i32.shl
   local.tee $3
   local.get $3
   i32.const 1073741820
   i32.ge_u
   select
   local.tee $3
   i32.const 8
   local.get $1
   local.get $1
   i32.const 8
   i32.le_u
   select
   i32.const 2
   i32.shl
   local.tee $1
   local.get $1
   local.get $3
   i32.lt_u
   select
   local.tee $9
   i32.const 1073741804
   i32.gt_u
   if
    unreachable
   end
   local.get $6
   i32.const 16
   i32.sub
   local.tee $1
   i32.const 15
   i32.and
   i32.const 1
   local.get $1
   select
   if
    unreachable
   end
   global.get $~lib/rt/stub/offset
   local.get $1
   i32.const 4
   i32.sub
   local.tee $3
   i32.load $0
   local.tee $5
   local.get $1
   i32.add
   i32.eq
   local.set $10
   local.get $9
   i32.const 16
   i32.add
   local.tee $11
   i32.const 19
   i32.add
   i32.const -16
   i32.and
   i32.const 4
   i32.sub
   local.set $12
   local.get $5
   local.get $11
   i32.lt_u
   if
    local.get $10
    if
     local.get $11
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     local.get $1
     local.get $12
     i32.add
     local.tee $5
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $5
     global.set $~lib/rt/stub/offset
     local.get $3
     local.get $12
     i32.store $0
    else
     local.get $12
     local.get $5
     i32.const 1
     i32.shl
     local.tee $3
     local.get $3
     local.get $12
     i32.lt_u
     select
     local.tee $10
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     global.get $~lib/rt/stub/offset
     i32.eqz
     if
      i32.const 9932
      global.set $~lib/rt/stub/offset
     end
     global.get $~lib/rt/stub/offset
     local.tee $3
     local.set $11
     local.get $3
     i32.const 4
     i32.add
     local.tee $3
     local.get $10
     i32.const 19
     i32.add
     i32.const -16
     i32.and
     i32.const 4
     i32.sub
     local.tee $10
     i32.add
     local.tee $12
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $12
     global.set $~lib/rt/stub/offset
     local.get $11
     local.get $10
     i32.store $0
     local.get $3
     local.get $1
     local.get $5
     memory.copy $0 $0
     local.get $3
     local.set $1
    end
   else
    local.get $10
    if
     local.get $1
     local.get $12
     i32.add
     global.set $~lib/rt/stub/offset
     local.get $3
     local.get $12
     i32.store $0
    end
   end
   local.get $1
   i32.const 4
   i32.sub
   local.get $9
   i32.store $0 offset=8
   local.get $4
   local.get $1
   i32.const 16
   i32.add
   local.tee $1
   i32.add
   i32.const 0
   local.get $9
   local.get $4
   i32.sub
   memory.fill $0
   local.get $1
   local.get $6
   i32.ne
   if
    local.get $2
    local.get $1
    i32.store $0
    local.get $2
    local.get $1
    i32.store $0 offset=4
   end
   local.get $2
   local.get $9
   i32.store $0 offset=8
  end
  local.get $2
  i32.load $0 offset=4
  local.get $7
  i32.const 2
  i32.shl
  i32.add
  i32.const 100
  i32.store $0
  local.get $2
  local.get $8
  i32.store $0 offset=12
  local.get $0
  i32.const 10
  i32.lt_s
 )
 (func $start:std/array~anonymous|13 (type $i32_i32_i32_=>_i32) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  i32.const 10
  i32.lt_s
 )
 (func $start:std/array~anonymous|14 (type $i32_i32_i32_=>_i32) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $2
  i32.load $0 offset=12
  local.tee $1
  i32.const 0
  i32.le_s
  if
   unreachable
  end
  local.get $2
  i32.load $0 offset=4
  local.get $1
  i32.const 1
  i32.sub
  local.tee $1
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  drop
  local.get $2
  local.get $1
  i32.store $0 offset=12
  local.get $0
  i32.const 3
  i32.lt_s
 )
 (func $start:std/array~anonymous|15 (type $i32_i32_i32_=>_i32) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  i32.const 3
  i32.ge_s
 )
 (func $start:std/array~anonymous|16 (type $i32_i32_i32_=>_i32) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  i32.const 0
  i32.lt_s
 )
 (func $start:std/array~anonymous|17 (type $i32_i32_i32_=>_i32) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  local.get $2
  i32.load $0 offset=12
  local.tee $7
  i32.const 1
  i32.add
  local.tee $8
  local.tee $1
  local.get $2
  i32.load $0 offset=8
  local.tee $4
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   local.get $1
   i32.const 268435455
   i32.gt_u
   if
    unreachable
   end
   local.get $2
   i32.load $0
   local.set $6
   i32.const 1073741820
   local.get $4
   i32.const 1
   i32.shl
   local.tee $3
   local.get $3
   i32.const 1073741820
   i32.ge_u
   select
   local.tee $3
   i32.const 8
   local.get $1
   local.get $1
   i32.const 8
   i32.le_u
   select
   i32.const 2
   i32.shl
   local.tee $1
   local.get $1
   local.get $3
   i32.lt_u
   select
   local.tee $9
   i32.const 1073741804
   i32.gt_u
   if
    unreachable
   end
   local.get $6
   i32.const 16
   i32.sub
   local.tee $1
   i32.const 15
   i32.and
   i32.const 1
   local.get $1
   select
   if
    unreachable
   end
   global.get $~lib/rt/stub/offset
   local.get $1
   i32.const 4
   i32.sub
   local.tee $3
   i32.load $0
   local.tee $5
   local.get $1
   i32.add
   i32.eq
   local.set $10
   local.get $9
   i32.const 16
   i32.add
   local.tee $11
   i32.const 19
   i32.add
   i32.const -16
   i32.and
   i32.const 4
   i32.sub
   local.set $12
   local.get $5
   local.get $11
   i32.lt_u
   if
    local.get $10
    if
     local.get $11
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     local.get $1
     local.get $12
     i32.add
     local.tee $5
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $5
     global.set $~lib/rt/stub/offset
     local.get $3
     local.get $12
     i32.store $0
    else
     local.get $12
     local.get $5
     i32.const 1
     i32.shl
     local.tee $3
     local.get $3
     local.get $12
     i32.lt_u
     select
     local.tee $10
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     global.get $~lib/rt/stub/offset
     i32.eqz
     if
      i32.const 9932
      global.set $~lib/rt/stub/offset
     end
     global.get $~lib/rt/stub/offset
     local.tee $3
     local.set $11
     local.get $3
     i32.const 4
     i32.add
     local.tee $3
     local.get $10
     i32.const 19
     i32.add
     i32.const -16
     i32.and
     i32.const 4
     i32.sub
     local.tee $10
     i32.add
     local.tee $12
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $12
     global.set $~lib/rt/stub/offset
     local.get $11
     local.get $10
     i32.store $0
     local.get $3
     local.get $1
     local.get $5
     memory.copy $0 $0
     local.get $3
     local.set $1
    end
   else
    local.get $10
    if
     local.get $1
     local.get $12
     i32.add
     global.set $~lib/rt/stub/offset
     local.get $3
     local.get $12
     i32.store $0
    end
   end
   local.get $1
   i32.const 4
   i32.sub
   local.get $9
   i32.store $0 offset=8
   local.get $4
   local.get $1
   i32.const 16
   i32.add
   local.tee $1
   i32.add
   i32.const 0
   local.get $9
   local.get $4
   i32.sub
   memory.fill $0
   local.get $1
   local.get $6
   i32.ne
   if
    local.get $2
    local.get $1
    i32.store $0
    local.get $2
    local.get $1
    i32.store $0 offset=4
   end
   local.get $2
   local.get $9
   i32.store $0 offset=8
  end
  local.get $2
  i32.load $0 offset=4
  local.get $7
  i32.const 2
  i32.shl
  i32.add
  i32.const 100
  i32.store $0
  local.get $2
  local.get $8
  i32.store $0 offset=12
  local.get $0
  i32.const 10
  i32.gt_s
 )
 (func $start:std/array~anonymous|18 (type $i32_i32_i32_=>_i32) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  i32.const 10
  i32.gt_s
 )
 (func $start:std/array~anonymous|19 (type $i32_i32_i32_=>_i32) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $2
  i32.load $0 offset=12
  local.tee $1
  i32.const 0
  i32.le_s
  if
   unreachable
  end
  local.get $2
  i32.load $0 offset=4
  local.get $1
  i32.const 1
  i32.sub
  local.tee $1
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  drop
  local.get $2
  local.get $1
  i32.store $0 offset=12
  local.get $0
  i32.const 3
  i32.gt_s
 )
 (func $start:std/array~anonymous|20 (type $i32_i32_i32_=>_none) (param $0 i32) (param $1 i32) (param $2 i32)
  global.get $std/array/i
  local.get $0
  i32.add
  global.set $std/array/i
 )
 (func $start:std/array~anonymous|21 (type $i32_i32_i32_=>_none) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  local.get $2
  i32.load $0 offset=12
  local.tee $7
  i32.const 1
  i32.add
  local.tee $8
  local.tee $1
  local.get $2
  i32.load $0 offset=8
  local.tee $4
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   local.get $1
   i32.const 268435455
   i32.gt_u
   if
    unreachable
   end
   local.get $2
   i32.load $0
   local.set $6
   i32.const 1073741820
   local.get $4
   i32.const 1
   i32.shl
   local.tee $3
   local.get $3
   i32.const 1073741820
   i32.ge_u
   select
   local.tee $3
   i32.const 8
   local.get $1
   local.get $1
   i32.const 8
   i32.le_u
   select
   i32.const 2
   i32.shl
   local.tee $1
   local.get $1
   local.get $3
   i32.lt_u
   select
   local.tee $9
   i32.const 1073741804
   i32.gt_u
   if
    unreachable
   end
   local.get $6
   i32.const 16
   i32.sub
   local.tee $1
   i32.const 15
   i32.and
   i32.const 1
   local.get $1
   select
   if
    unreachable
   end
   global.get $~lib/rt/stub/offset
   local.get $1
   i32.const 4
   i32.sub
   local.tee $3
   i32.load $0
   local.tee $5
   local.get $1
   i32.add
   i32.eq
   local.set $10
   local.get $9
   i32.const 16
   i32.add
   local.tee $11
   i32.const 19
   i32.add
   i32.const -16
   i32.and
   i32.const 4
   i32.sub
   local.set $12
   local.get $5
   local.get $11
   i32.lt_u
   if
    local.get $10
    if
     local.get $11
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     local.get $1
     local.get $12
     i32.add
     local.tee $5
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $5
     global.set $~lib/rt/stub/offset
     local.get $3
     local.get $12
     i32.store $0
    else
     local.get $12
     local.get $5
     i32.const 1
     i32.shl
     local.tee $3
     local.get $3
     local.get $12
     i32.lt_u
     select
     local.tee $10
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     global.get $~lib/rt/stub/offset
     i32.eqz
     if
      i32.const 9932
      global.set $~lib/rt/stub/offset
     end
     global.get $~lib/rt/stub/offset
     local.tee $3
     local.set $11
     local.get $3
     i32.const 4
     i32.add
     local.tee $3
     local.get $10
     i32.const 19
     i32.add
     i32.const -16
     i32.and
     i32.const 4
     i32.sub
     local.tee $10
     i32.add
     local.tee $12
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $12
     global.set $~lib/rt/stub/offset
     local.get $11
     local.get $10
     i32.store $0
     local.get $3
     local.get $1
     local.get $5
     memory.copy $0 $0
     local.get $3
     local.set $1
    end
   else
    local.get $10
    if
     local.get $1
     local.get $12
     i32.add
     global.set $~lib/rt/stub/offset
     local.get $3
     local.get $12
     i32.store $0
    end
   end
   local.get $1
   i32.const 4
   i32.sub
   local.get $9
   i32.store $0 offset=8
   local.get $4
   local.get $1
   i32.const 16
   i32.add
   local.tee $1
   i32.add
   i32.const 0
   local.get $9
   local.get $4
   i32.sub
   memory.fill $0
   local.get $1
   local.get $6
   i32.ne
   if
    local.get $2
    local.get $1
    i32.store $0
    local.get $2
    local.get $1
    i32.store $0 offset=4
   end
   local.get $2
   local.get $9
   i32.store $0 offset=8
  end
  local.get $2
  i32.load $0 offset=4
  local.get $7
  i32.const 2
  i32.shl
  i32.add
  i32.const 100
  i32.store $0
  local.get $2
  local.get $8
  i32.store $0 offset=12
  global.get $std/array/i
  local.get $0
  i32.add
  global.set $std/array/i
 )
 (func $start:std/array~anonymous|23 (type $i32_i32_i32_=>_none) (param $0 i32) (param $1 i32) (param $2 i32)
  local.get $2
  i32.load $0 offset=12
  local.tee $1
  i32.const 0
  i32.le_s
  if
   unreachable
  end
  local.get $2
  i32.load $0 offset=4
  local.get $1
  i32.const 1
  i32.sub
  local.tee $1
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  drop
  local.get $2
  local.get $1
  i32.store $0 offset=12
  global.get $std/array/i
  local.get $0
  i32.add
  global.set $std/array/i
 )
 (func $start:std/array~anonymous|24 (type $i32_i32_i32_=>_none) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  local.get $1
  i32.eqz
  if
   loop $for-loop|0
    local.get $3
    i32.const 4
    i32.lt_s
    if
     local.get $2
     i32.load $0 offset=12
     local.tee $4
     i32.const 0
     i32.le_s
     if
      unreachable
     end
     local.get $2
     i32.load $0 offset=4
     local.get $4
     i32.const 1
     i32.sub
     local.tee $4
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     drop
     local.get $2
     local.get $4
     i32.store $0 offset=12
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     br $for-loop|0
    end
   end
   loop $for-loop|1
    local.get $5
    i32.const 100
    i32.lt_s
    if
     local.get $2
     i32.load $0 offset=12
     local.tee $8
     i32.const 1
     i32.add
     local.tee $9
     local.tee $3
     local.get $2
     i32.load $0 offset=8
     local.tee $10
     i32.const 2
     i32.shr_u
     i32.gt_u
     if
      local.get $3
      i32.const 268435455
      i32.gt_u
      if
       unreachable
      end
      local.get $2
      i32.load $0
      local.set $11
      i32.const 1073741820
      local.get $10
      i32.const 1
      i32.shl
      local.tee $4
      local.get $4
      i32.const 1073741820
      i32.ge_u
      select
      local.tee $4
      i32.const 8
      local.get $3
      local.get $3
      i32.const 8
      i32.le_u
      select
      i32.const 2
      i32.shl
      local.tee $3
      local.get $3
      local.get $4
      i32.lt_u
      select
      local.tee $12
      i32.const 1073741804
      i32.gt_u
      if
       unreachable
      end
      local.get $11
      i32.const 16
      i32.sub
      local.tee $3
      i32.const 15
      i32.and
      i32.const 1
      local.get $3
      select
      if
       unreachable
      end
      global.get $~lib/rt/stub/offset
      local.get $3
      i32.const 4
      i32.sub
      local.tee $4
      i32.load $0
      local.tee $13
      local.get $3
      i32.add
      i32.eq
      local.set $14
      local.get $12
      i32.const 16
      i32.add
      local.tee $15
      i32.const 19
      i32.add
      i32.const -16
      i32.and
      i32.const 4
      i32.sub
      local.set $16
      local.get $13
      local.get $15
      i32.lt_u
      if
       local.get $14
       if
        local.get $15
        i32.const 1073741820
        i32.gt_u
        if
         unreachable
        end
        local.get $3
        local.get $16
        i32.add
        local.tee $13
        memory.size $0
        i32.const 16
        i32.shl
        i32.const 15
        i32.add
        i32.const -16
        i32.and
        i32.gt_u
        if
         unreachable
        end
        local.get $13
        global.set $~lib/rt/stub/offset
        local.get $4
        local.get $16
        i32.store $0
       else
        local.get $16
        local.get $13
        i32.const 1
        i32.shl
        local.tee $4
        local.get $4
        local.get $16
        i32.lt_u
        select
        local.tee $14
        i32.const 1073741820
        i32.gt_u
        if
         unreachable
        end
        global.get $~lib/rt/stub/offset
        i32.eqz
        if
         i32.const 9932
         global.set $~lib/rt/stub/offset
        end
        global.get $~lib/rt/stub/offset
        local.tee $4
        local.set $15
        local.get $4
        i32.const 4
        i32.add
        local.tee $4
        local.get $14
        i32.const 19
        i32.add
        i32.const -16
        i32.and
        i32.const 4
        i32.sub
        local.tee $14
        i32.add
        local.tee $16
        memory.size $0
        i32.const 16
        i32.shl
        i32.const 15
        i32.add
        i32.const -16
        i32.and
        i32.gt_u
        if
         unreachable
        end
        local.get $16
        global.set $~lib/rt/stub/offset
        local.get $15
        local.get $14
        i32.store $0
        local.get $4
        local.get $3
        local.get $13
        memory.copy $0 $0
        local.get $4
        local.set $3
       end
      else
       local.get $14
       if
        local.get $3
        local.get $16
        i32.add
        global.set $~lib/rt/stub/offset
        local.get $4
        local.get $16
        i32.store $0
       end
      end
      local.get $3
      i32.const 4
      i32.sub
      local.get $12
      i32.store $0 offset=8
      local.get $10
      local.get $3
      i32.const 16
      i32.add
      local.tee $3
      i32.add
      i32.const 0
      local.get $12
      local.get $10
      i32.sub
      memory.fill $0
      local.get $3
      local.get $11
      i32.ne
      if
       local.get $2
       local.get $3
       i32.store $0
       local.get $2
       local.get $3
       i32.store $0 offset=4
      end
      local.get $2
      local.get $12
      i32.store $0 offset=8
     end
     local.get $2
     i32.load $0 offset=4
     local.get $8
     i32.const 2
     i32.shl
     i32.add
     local.get $5
     i32.const 100
     i32.add
     i32.store $0
     local.get $2
     local.get $9
     i32.store $0 offset=12
     local.get $5
     i32.const 1
     i32.add
     local.set $5
     br $for-loop|1
    end
   end
   loop $for-loop|2
    local.get $7
    i32.const 100
    i32.lt_s
    if
     local.get $2
     i32.load $0 offset=12
     local.tee $3
     i32.const 0
     i32.le_s
     if
      unreachable
     end
     local.get $2
     i32.load $0 offset=4
     local.get $3
     i32.const 1
     i32.sub
     local.tee $3
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     drop
     local.get $2
     local.get $3
     i32.store $0 offset=12
     local.get $7
     i32.const 1
     i32.add
     local.set $7
     br $for-loop|2
    end
   end
   loop $for-loop|3
    local.get $6
    i32.const 100
    i32.lt_s
    if
     local.get $2
     i32.load $0 offset=12
     local.tee $5
     i32.const 1
     i32.add
     local.tee $7
     local.tee $3
     local.get $2
     i32.load $0 offset=8
     local.tee $8
     i32.const 2
     i32.shr_u
     i32.gt_u
     if
      local.get $3
      i32.const 268435455
      i32.gt_u
      if
       unreachable
      end
      local.get $2
      i32.load $0
      local.set $9
      i32.const 1073741820
      local.get $8
      i32.const 1
      i32.shl
      local.tee $4
      local.get $4
      i32.const 1073741820
      i32.ge_u
      select
      local.tee $4
      i32.const 8
      local.get $3
      local.get $3
      i32.const 8
      i32.le_u
      select
      i32.const 2
      i32.shl
      local.tee $3
      local.get $3
      local.get $4
      i32.lt_u
      select
      local.tee $10
      i32.const 1073741804
      i32.gt_u
      if
       unreachable
      end
      local.get $9
      i32.const 16
      i32.sub
      local.tee $3
      i32.const 15
      i32.and
      i32.const 1
      local.get $3
      select
      if
       unreachable
      end
      global.get $~lib/rt/stub/offset
      local.get $3
      i32.const 4
      i32.sub
      local.tee $4
      i32.load $0
      local.tee $11
      local.get $3
      i32.add
      i32.eq
      local.set $12
      local.get $10
      i32.const 16
      i32.add
      local.tee $13
      i32.const 19
      i32.add
      i32.const -16
      i32.and
      i32.const 4
      i32.sub
      local.set $14
      local.get $11
      local.get $13
      i32.lt_u
      if
       local.get $12
       if
        local.get $13
        i32.const 1073741820
        i32.gt_u
        if
         unreachable
        end
        local.get $3
        local.get $14
        i32.add
        local.tee $11
        memory.size $0
        i32.const 16
        i32.shl
        i32.const 15
        i32.add
        i32.const -16
        i32.and
        i32.gt_u
        if
         unreachable
        end
        local.get $11
        global.set $~lib/rt/stub/offset
        local.get $4
        local.get $14
        i32.store $0
       else
        local.get $14
        local.get $11
        i32.const 1
        i32.shl
        local.tee $4
        local.get $4
        local.get $14
        i32.lt_u
        select
        local.tee $12
        i32.const 1073741820
        i32.gt_u
        if
         unreachable
        end
        global.get $~lib/rt/stub/offset
        i32.eqz
        if
         i32.const 9932
         global.set $~lib/rt/stub/offset
        end
        global.get $~lib/rt/stub/offset
        local.tee $4
        local.set $13
        local.get $4
        i32.const 4
        i32.add
        local.tee $4
        local.get $12
        i32.const 19
        i32.add
        i32.const -16
        i32.and
        i32.const 4
        i32.sub
        local.tee $12
        i32.add
        local.tee $14
        memory.size $0
        i32.const 16
        i32.shl
        i32.const 15
        i32.add
        i32.const -16
        i32.and
        i32.gt_u
        if
         unreachable
        end
        local.get $14
        global.set $~lib/rt/stub/offset
        local.get $13
        local.get $12
        i32.store $0
        local.get $4
        local.get $3
        local.get $11
        memory.copy $0 $0
        local.get $4
        local.set $3
       end
      else
       local.get $12
       if
        local.get $3
        local.get $14
        i32.add
        global.set $~lib/rt/stub/offset
        local.get $4
        local.get $14
        i32.store $0
       end
      end
      local.get $3
      i32.const 4
      i32.sub
      local.get $10
      i32.store $0 offset=8
      local.get $8
      local.get $3
      i32.const 16
      i32.add
      local.tee $3
      i32.add
      i32.const 0
      local.get $10
      local.get $8
      i32.sub
      memory.fill $0
      local.get $3
      local.get $9
      i32.ne
      if
       local.get $2
       local.get $3
       i32.store $0
       local.get $2
       local.get $3
       i32.store $0 offset=4
      end
      local.get $2
      local.get $10
      i32.store $0 offset=8
     end
     local.get $2
     i32.load $0 offset=4
     local.get $5
     i32.const 2
     i32.shl
     i32.add
     local.get $6
     i32.const 200
     i32.add
     i32.store $0
     local.get $2
     local.get $7
     i32.store $0 offset=12
     local.get $6
     i32.const 1
     i32.add
     local.set $6
     br $for-loop|3
    end
   end
  end
  local.get $1
  i32.const 2
  i32.eq
  local.get $0
  i32.const 202
  i32.ne
  i32.and
  if
   unreachable
  end
 )
 (func $start:std/array~anonymous|25 (type $i32_i32_i32_=>_i32) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $0
  if
   i32.const 0
   local.get $0
   i32.sub
   local.get $0
   local.get $0
   i32.const 31
   i32.shr_u
   local.tee $2
   select
   local.tee $1
   i32.const 100000
   i32.lt_u
   if (result i32)
    local.get $1
    i32.const 100
    i32.lt_u
    if (result i32)
     local.get $1
     i32.const 10
     i32.ge_u
     i32.const 1
     i32.add
    else
     local.get $1
     i32.const 10000
     i32.ge_u
     i32.const 3
     i32.add
     local.get $1
     i32.const 1000
     i32.ge_u
     i32.add
    end
   else
    local.get $1
    i32.const 10000000
    i32.lt_u
    if (result i32)
     local.get $1
     i32.const 1000000
     i32.ge_u
     i32.const 6
     i32.add
    else
     local.get $1
     i32.const 1000000000
     i32.ge_u
     i32.const 8
     i32.add
     local.get $1
     i32.const 100000000
     i32.ge_u
     i32.add
    end
   end
   local.tee $5
   local.get $2
   i32.add
   local.tee $0
   i32.const 16
   i32.add
   local.tee $3
   i32.const 1073741820
   i32.gt_u
   if
    unreachable
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $4
   i32.const 4
   i32.add
   local.tee $6
   local.get $3
   i32.const 19
   i32.add
   i32.const -16
   i32.and
   i32.const 4
   i32.sub
   local.tee $7
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $4
   local.get $7
   i32.store $0
   local.get $6
   i32.const 4
   i32.sub
   local.tee $3
   i32.const 1
   i32.store $0 offset=4
   local.get $3
   local.get $0
   i32.store $0 offset=8
   local.get $6
   i32.const 16
   i32.add
   local.tee $0
   local.get $2
   i32.add
   local.get $5
   i32.add
   i32.const 1
   i32.sub
   local.tee $3
   local.get $1
   i32.const 10
   i32.rem_u
   i32.const 48
   i32.add
   i32.store8 $0
   local.get $1
   i32.const 10
   i32.div_u
   local.tee $1
   if
    local.get $3
    i32.const 1
    i32.sub
    local.tee $3
    local.get $1
    i32.const 10
    i32.rem_u
    i32.const 48
    i32.add
    i32.store8 $0
    local.get $1
    i32.const 10
    i32.div_u
    local.tee $1
    if
     local.get $3
     i32.const 1
     i32.sub
     local.tee $3
     local.get $1
     i32.const 10
     i32.rem_u
     i32.const 48
     i32.add
     i32.store8 $0
     local.get $1
     i32.const 10
     i32.div_u
     local.tee $1
     if
      local.get $3
      i32.const 1
      i32.sub
      local.tee $3
      local.get $1
      i32.const 10
      i32.rem_u
      i32.const 48
      i32.add
      i32.store8 $0
      local.get $1
      i32.const 10
      i32.div_u
      local.tee $1
      if
       local.get $3
       i32.const 1
       i32.sub
       local.tee $3
       local.get $1
       i32.const 10
       i32.rem_u
       i32.const 48
       i32.add
       i32.store8 $0
       local.get $1
       i32.const 10
       i32.div_u
       local.tee $1
       if
        local.get $3
        i32.const 1
        i32.sub
        local.tee $3
        local.get $1
        i32.const 10
        i32.rem_u
        i32.const 48
        i32.add
        i32.store8 $0
        local.get $1
        i32.const 10
        i32.div_u
        local.tee $1
        if
         local.get $3
         i32.const 1
         i32.sub
         local.tee $3
         local.get $1
         i32.const 10
         i32.rem_u
         i32.const 48
         i32.add
         i32.store8 $0
         local.get $1
         i32.const 10
         i32.div_u
         local.tee $1
         if
          local.get $3
          i32.const 1
          i32.sub
          local.tee $3
          local.get $1
          i32.const 10
          i32.rem_u
          i32.const 48
          i32.add
          i32.store8 $0
          local.get $1
          i32.const 10
          i32.div_u
          local.tee $1
          if
           local.get $3
           i32.const 1
           i32.sub
           local.tee $3
           local.get $1
           i32.const 10
           i32.rem_u
           i32.const 48
           i32.add
           i32.store8 $0
           local.get $1
           i32.const 10
           i32.div_u
           local.tee $1
           if
            local.get $3
            i32.const 1
            i32.sub
            local.get $1
            i32.const 48
            i32.add
            i32.store8 $0
           end
          end
         end
        end
       end
      end
     end
    end
   end
   local.get $2
   if
    local.get $0
    i32.const 45
    i32.store8 $0
   end
  else
   i32.const 6960
   local.set $0
  end
  local.get $0
 )
 (func $start:std/array~anonymous|26 (type $i32_i32_i32_=>_f32) (param $0 i32) (param $1 i32) (param $2 i32) (result f32)
  local.get $0
  f32.convert_i32_s
 )
 (func $start:std/array~anonymous|27 (type $i32_i32_i32_=>_i32) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  local.get $2
  i32.load $0 offset=12
  local.tee $7
  i32.const 1
  i32.add
  local.tee $8
  local.tee $1
  local.get $2
  i32.load $0 offset=8
  local.tee $4
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   local.get $1
   i32.const 268435455
   i32.gt_u
   if
    unreachable
   end
   local.get $2
   i32.load $0
   local.set $6
   i32.const 1073741820
   local.get $4
   i32.const 1
   i32.shl
   local.tee $3
   local.get $3
   i32.const 1073741820
   i32.ge_u
   select
   local.tee $3
   i32.const 8
   local.get $1
   local.get $1
   i32.const 8
   i32.le_u
   select
   i32.const 2
   i32.shl
   local.tee $1
   local.get $1
   local.get $3
   i32.lt_u
   select
   local.tee $9
   i32.const 1073741804
   i32.gt_u
   if
    unreachable
   end
   local.get $6
   i32.const 16
   i32.sub
   local.tee $1
   i32.const 15
   i32.and
   i32.const 1
   local.get $1
   select
   if
    unreachable
   end
   global.get $~lib/rt/stub/offset
   local.get $1
   i32.const 4
   i32.sub
   local.tee $3
   i32.load $0
   local.tee $5
   local.get $1
   i32.add
   i32.eq
   local.set $10
   local.get $9
   i32.const 16
   i32.add
   local.tee $11
   i32.const 19
   i32.add
   i32.const -16
   i32.and
   i32.const 4
   i32.sub
   local.set $12
   local.get $5
   local.get $11
   i32.lt_u
   if
    local.get $10
    if
     local.get $11
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     local.get $1
     local.get $12
     i32.add
     local.tee $5
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $5
     global.set $~lib/rt/stub/offset
     local.get $3
     local.get $12
     i32.store $0
    else
     local.get $12
     local.get $5
     i32.const 1
     i32.shl
     local.tee $3
     local.get $3
     local.get $12
     i32.lt_u
     select
     local.tee $10
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     global.get $~lib/rt/stub/offset
     i32.eqz
     if
      i32.const 9932
      global.set $~lib/rt/stub/offset
     end
     global.get $~lib/rt/stub/offset
     local.tee $3
     local.set $11
     local.get $3
     i32.const 4
     i32.add
     local.tee $3
     local.get $10
     i32.const 19
     i32.add
     i32.const -16
     i32.and
     i32.const 4
     i32.sub
     local.tee $10
     i32.add
     local.tee $12
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $12
     global.set $~lib/rt/stub/offset
     local.get $11
     local.get $10
     i32.store $0
     local.get $3
     local.get $1
     local.get $5
     memory.copy $0 $0
     local.get $3
     local.set $1
    end
   else
    local.get $10
    if
     local.get $1
     local.get $12
     i32.add
     global.set $~lib/rt/stub/offset
     local.get $3
     local.get $12
     i32.store $0
    end
   end
   local.get $1
   i32.const 4
   i32.sub
   local.get $9
   i32.store $0 offset=8
   local.get $4
   local.get $1
   i32.const 16
   i32.add
   local.tee $1
   i32.add
   i32.const 0
   local.get $9
   local.get $4
   i32.sub
   memory.fill $0
   local.get $1
   local.get $6
   i32.ne
   if
    local.get $2
    local.get $1
    i32.store $0
    local.get $2
    local.get $1
    i32.store $0 offset=4
   end
   local.get $2
   local.get $9
   i32.store $0 offset=8
  end
  local.get $2
  i32.load $0 offset=4
  local.get $7
  i32.const 2
  i32.shl
  i32.add
  i32.const 100
  i32.store $0
  local.get $2
  local.get $8
  i32.store $0 offset=12
  global.get $std/array/i
  local.get $0
  i32.add
  global.set $std/array/i
  local.get $0
 )
 (func $start:std/array~anonymous|28 (type $i32_i32_i32_=>_i32) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  global.get $std/array/i
  local.get $0
  i32.add
  global.set $std/array/i
  local.get $0
 )
 (func $start:std/array~anonymous|29 (type $i32_i32_i32_=>_i32) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $2
  i32.load $0 offset=12
  local.tee $1
  i32.const 0
  i32.le_s
  if
   unreachable
  end
  local.get $2
  i32.load $0 offset=4
  local.get $1
  i32.const 1
  i32.sub
  local.tee $1
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  drop
  local.get $2
  local.get $1
  i32.store $0 offset=12
  global.get $std/array/i
  local.get $0
  i32.add
  global.set $std/array/i
  local.get $0
 )
 (func $start:std/array~anonymous|30 (type $i32_i32_i32_=>_i32) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  i32.const 2
  i32.ge_s
 )
 (func $~lib/array/Array<i32>#filter (type $i32_i32_=>_i32) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $2
  i32.const 4
  i32.add
  local.tee $3
  i32.const 28
  i32.add
  local.tee $4
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $4
  global.set $~lib/rt/stub/offset
  local.get $2
  i32.const 28
  i32.store $0
  local.get $3
  i32.const 4
  i32.sub
  local.tee $2
  i32.const 0
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $2
  i32.const 4
  i32.add
  local.tee $4
  i32.const 44
  i32.add
  local.tee $5
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $5
  global.set $~lib/rt/stub/offset
  local.get $2
  i32.const 44
  i32.store $0
  local.get $4
  i32.const 4
  i32.sub
  local.tee $2
  i32.const 3
  i32.store $0 offset=4
  local.get $2
  i32.const 16
  i32.store $0 offset=8
  local.get $4
  i32.const 16
  i32.add
  local.tee $5
  local.get $3
  i32.const 16
  i32.add
  local.tee $2
  i32.store $0
  local.get $5
  local.get $2
  i32.store $0 offset=4
  local.get $5
  i32.const 0
  i32.store $0 offset=8
  local.get $5
  i32.const 0
  i32.store $0 offset=12
  local.get $0
  i32.load $0 offset=12
  local.set $10
  loop $for-loop|0
   local.get $13
   local.get $10
   local.get $0
   i32.load $0 offset=12
   local.tee $2
   local.get $2
   local.get $10
   i32.gt_s
   select
   i32.lt_s
   if
    local.get $0
    i32.load $0 offset=4
    local.get $13
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.tee $8
    local.get $13
    local.get $0
    local.get $1
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    if
     local.get $5
     i32.load $0 offset=12
     local.tee $7
     i32.const 1
     i32.add
     local.tee $6
     local.tee $2
     local.get $5
     i32.load $0 offset=8
     local.tee $12
     i32.const 2
     i32.shr_u
     i32.gt_u
     if
      local.get $2
      i32.const 268435455
      i32.gt_u
      if
       unreachable
      end
      local.get $5
      i32.load $0
      local.set $9
      i32.const 1073741820
      local.get $12
      i32.const 1
      i32.shl
      local.tee $3
      local.get $3
      i32.const 1073741820
      i32.ge_u
      select
      local.tee $3
      i32.const 8
      local.get $2
      local.get $2
      i32.const 8
      i32.le_u
      select
      i32.const 2
      i32.shl
      local.tee $2
      local.get $2
      local.get $3
      i32.lt_u
      select
      local.tee $4
      i32.const 1073741804
      i32.gt_u
      if
       unreachable
      end
      local.get $9
      i32.const 16
      i32.sub
      local.tee $2
      i32.const 15
      i32.and
      i32.const 1
      local.get $2
      select
      if
       unreachable
      end
      global.get $~lib/rt/stub/offset
      local.get $2
      i32.const 4
      i32.sub
      local.tee $3
      i32.load $0
      local.tee $11
      local.get $2
      i32.add
      i32.eq
      local.set $14
      local.get $4
      i32.const 16
      i32.add
      local.tee $15
      i32.const 19
      i32.add
      i32.const -16
      i32.and
      i32.const 4
      i32.sub
      local.set $16
      local.get $11
      local.get $15
      i32.lt_u
      if
       local.get $14
       if
        local.get $15
        i32.const 1073741820
        i32.gt_u
        if
         unreachable
        end
        local.get $2
        local.get $16
        i32.add
        local.tee $11
        memory.size $0
        i32.const 16
        i32.shl
        i32.const 15
        i32.add
        i32.const -16
        i32.and
        i32.gt_u
        if
         unreachable
        end
        local.get $11
        global.set $~lib/rt/stub/offset
        local.get $3
        local.get $16
        i32.store $0
       else
        local.get $16
        local.get $11
        i32.const 1
        i32.shl
        local.tee $3
        local.get $3
        local.get $16
        i32.lt_u
        select
        local.tee $14
        i32.const 1073741820
        i32.gt_u
        if
         unreachable
        end
        global.get $~lib/rt/stub/offset
        i32.eqz
        if
         i32.const 9932
         global.set $~lib/rt/stub/offset
        end
        global.get $~lib/rt/stub/offset
        local.tee $3
        local.set $15
        local.get $3
        i32.const 4
        i32.add
        local.tee $3
        local.get $14
        i32.const 19
        i32.add
        i32.const -16
        i32.and
        i32.const 4
        i32.sub
        local.tee $14
        i32.add
        local.tee $16
        memory.size $0
        i32.const 16
        i32.shl
        i32.const 15
        i32.add
        i32.const -16
        i32.and
        i32.gt_u
        if
         unreachable
        end
        local.get $16
        global.set $~lib/rt/stub/offset
        local.get $15
        local.get $14
        i32.store $0
        local.get $3
        local.get $2
        local.get $11
        memory.copy $0 $0
        local.get $3
        local.set $2
       end
      else
       local.get $14
       if
        local.get $2
        local.get $16
        i32.add
        global.set $~lib/rt/stub/offset
        local.get $3
        local.get $16
        i32.store $0
       end
      end
      local.get $2
      i32.const 4
      i32.sub
      local.get $4
      i32.store $0 offset=8
      local.get $2
      i32.const 16
      i32.add
      local.tee $2
      local.get $12
      i32.add
      i32.const 0
      local.get $4
      local.get $12
      i32.sub
      memory.fill $0
      local.get $2
      local.get $9
      i32.ne
      if
       local.get $5
       local.get $2
       i32.store $0
       local.get $5
       local.get $2
       i32.store $0 offset=4
      end
      local.get $5
      local.get $4
      i32.store $0 offset=8
     end
     local.get $5
     i32.load $0 offset=4
     local.get $7
     i32.const 2
     i32.shl
     i32.add
     local.get $8
     i32.store $0
     local.get $5
     local.get $6
     i32.store $0 offset=12
    end
    local.get $13
    i32.const 1
    i32.add
    local.set $13
    br $for-loop|0
   end
  end
  local.get $5
 )
 (func $start:std/array~anonymous|31 (type $i32_i32_i32_=>_i32) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  local.get $2
  i32.load $0 offset=12
  local.tee $7
  i32.const 1
  i32.add
  local.tee $8
  local.tee $1
  local.get $2
  i32.load $0 offset=8
  local.tee $4
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   local.get $1
   i32.const 268435455
   i32.gt_u
   if
    unreachable
   end
   local.get $2
   i32.load $0
   local.set $6
   i32.const 1073741820
   local.get $4
   i32.const 1
   i32.shl
   local.tee $3
   local.get $3
   i32.const 1073741820
   i32.ge_u
   select
   local.tee $3
   i32.const 8
   local.get $1
   local.get $1
   i32.const 8
   i32.le_u
   select
   i32.const 2
   i32.shl
   local.tee $1
   local.get $1
   local.get $3
   i32.lt_u
   select
   local.tee $9
   i32.const 1073741804
   i32.gt_u
   if
    unreachable
   end
   local.get $6
   i32.const 16
   i32.sub
   local.tee $1
   i32.const 15
   i32.and
   i32.const 1
   local.get $1
   select
   if
    unreachable
   end
   global.get $~lib/rt/stub/offset
   local.get $1
   i32.const 4
   i32.sub
   local.tee $3
   i32.load $0
   local.tee $5
   local.get $1
   i32.add
   i32.eq
   local.set $10
   local.get $9
   i32.const 16
   i32.add
   local.tee $11
   i32.const 19
   i32.add
   i32.const -16
   i32.and
   i32.const 4
   i32.sub
   local.set $12
   local.get $5
   local.get $11
   i32.lt_u
   if
    local.get $10
    if
     local.get $11
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     local.get $1
     local.get $12
     i32.add
     local.tee $5
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $5
     global.set $~lib/rt/stub/offset
     local.get $3
     local.get $12
     i32.store $0
    else
     local.get $12
     local.get $5
     i32.const 1
     i32.shl
     local.tee $3
     local.get $3
     local.get $12
     i32.lt_u
     select
     local.tee $10
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     global.get $~lib/rt/stub/offset
     i32.eqz
     if
      i32.const 9932
      global.set $~lib/rt/stub/offset
     end
     global.get $~lib/rt/stub/offset
     local.tee $3
     local.set $11
     local.get $3
     i32.const 4
     i32.add
     local.tee $3
     local.get $10
     i32.const 19
     i32.add
     i32.const -16
     i32.and
     i32.const 4
     i32.sub
     local.tee $10
     i32.add
     local.tee $12
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $12
     global.set $~lib/rt/stub/offset
     local.get $11
     local.get $10
     i32.store $0
     local.get $3
     local.get $1
     local.get $5
     memory.copy $0 $0
     local.get $3
     local.set $1
    end
   else
    local.get $10
    if
     local.get $1
     local.get $12
     i32.add
     global.set $~lib/rt/stub/offset
     local.get $3
     local.get $12
     i32.store $0
    end
   end
   local.get $1
   i32.const 4
   i32.sub
   local.get $9
   i32.store $0 offset=8
   local.get $4
   local.get $1
   i32.const 16
   i32.add
   local.tee $1
   i32.add
   i32.const 0
   local.get $9
   local.get $4
   i32.sub
   memory.fill $0
   local.get $1
   local.get $6
   i32.ne
   if
    local.get $2
    local.get $1
    i32.store $0
    local.get $2
    local.get $1
    i32.store $0 offset=4
   end
   local.get $2
   local.get $9
   i32.store $0 offset=8
  end
  local.get $2
  i32.load $0 offset=4
  local.get $7
  i32.const 2
  i32.shl
  i32.add
  i32.const 100
  i32.store $0
  local.get $2
  local.get $8
  i32.store $0 offset=12
  global.get $std/array/i
  local.get $0
  i32.add
  global.set $std/array/i
  local.get $0
  i32.const 2
  i32.ge_s
 )
 (func $start:std/array~anonymous|32 (type $i32_i32_i32_=>_i32) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  global.get $std/array/i
  local.get $0
  i32.add
  global.set $std/array/i
  local.get $0
  i32.const 2
  i32.ge_s
 )
 (func $start:std/array~anonymous|33 (type $i32_i32_i32_=>_i32) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $2
  i32.load $0 offset=12
  local.tee $1
  i32.const 0
  i32.le_s
  if
   unreachable
  end
  local.get $2
  i32.load $0 offset=4
  local.get $1
  i32.const 1
  i32.sub
  local.tee $1
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  drop
  local.get $2
  local.get $1
  i32.store $0 offset=12
  global.get $std/array/i
  local.get $0
  i32.add
  global.set $std/array/i
  local.get $0
  i32.const 2
  i32.ge_s
 )
 (func $start:std/array~anonymous|34 (type $i32_i32_i32_i32_=>_i32) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  local.get $0
  local.get $1
  i32.add
 )
 (func $start:std/array~anonymous|36 (type $i32_i32_i32_i32_=>_i32) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  i32.const 1
  local.get $1
  i32.const 2
  i32.gt_s
  local.get $0
  select
 )
 (func $start:std/array~anonymous|37 (type $i32_i32_i32_i32_=>_i32) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  i32.const 1
  local.get $1
  i32.const 100
  i32.gt_s
  local.get $0
  select
 )
 (func $start:std/array~anonymous|38 (type $i32_i32_i32_i32_=>_i32) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  local.get $3
  i32.load $0 offset=12
  local.tee $8
  i32.const 1
  i32.add
  local.tee $9
  local.tee $2
  local.get $3
  i32.load $0 offset=8
  local.tee $5
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   local.get $2
   i32.const 268435455
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   i32.load $0
   local.set $7
   i32.const 1073741820
   local.get $5
   i32.const 1
   i32.shl
   local.tee $4
   local.get $4
   i32.const 1073741820
   i32.ge_u
   select
   local.tee $4
   i32.const 8
   local.get $2
   local.get $2
   i32.const 8
   i32.le_u
   select
   i32.const 2
   i32.shl
   local.tee $2
   local.get $2
   local.get $4
   i32.lt_u
   select
   local.tee $10
   i32.const 1073741804
   i32.gt_u
   if
    unreachable
   end
   local.get $7
   i32.const 16
   i32.sub
   local.tee $2
   i32.const 15
   i32.and
   i32.const 1
   local.get $2
   select
   if
    unreachable
   end
   global.get $~lib/rt/stub/offset
   local.get $2
   i32.const 4
   i32.sub
   local.tee $4
   i32.load $0
   local.tee $6
   local.get $2
   i32.add
   i32.eq
   local.set $11
   local.get $10
   i32.const 16
   i32.add
   local.tee $12
   i32.const 19
   i32.add
   i32.const -16
   i32.and
   i32.const 4
   i32.sub
   local.set $13
   local.get $6
   local.get $12
   i32.lt_u
   if
    local.get $11
    if
     local.get $12
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     local.get $2
     local.get $13
     i32.add
     local.tee $6
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $6
     global.set $~lib/rt/stub/offset
     local.get $4
     local.get $13
     i32.store $0
    else
     local.get $13
     local.get $6
     i32.const 1
     i32.shl
     local.tee $4
     local.get $4
     local.get $13
     i32.lt_u
     select
     local.tee $11
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     global.get $~lib/rt/stub/offset
     i32.eqz
     if
      i32.const 9932
      global.set $~lib/rt/stub/offset
     end
     global.get $~lib/rt/stub/offset
     local.tee $4
     local.set $12
     local.get $4
     i32.const 4
     i32.add
     local.tee $4
     local.get $11
     i32.const 19
     i32.add
     i32.const -16
     i32.and
     i32.const 4
     i32.sub
     local.tee $11
     i32.add
     local.tee $13
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $13
     global.set $~lib/rt/stub/offset
     local.get $12
     local.get $11
     i32.store $0
     local.get $4
     local.get $2
     local.get $6
     memory.copy $0 $0
     local.get $4
     local.set $2
    end
   else
    local.get $11
    if
     local.get $2
     local.get $13
     i32.add
     global.set $~lib/rt/stub/offset
     local.get $4
     local.get $13
     i32.store $0
    end
   end
   local.get $2
   i32.const 4
   i32.sub
   local.get $10
   i32.store $0 offset=8
   local.get $5
   local.get $2
   i32.const 16
   i32.add
   local.tee $2
   i32.add
   i32.const 0
   local.get $10
   local.get $5
   i32.sub
   memory.fill $0
   local.get $2
   local.get $7
   i32.ne
   if
    local.get $3
    local.get $2
    i32.store $0
    local.get $3
    local.get $2
    i32.store $0 offset=4
   end
   local.get $3
   local.get $10
   i32.store $0 offset=8
  end
  local.get $3
  i32.load $0 offset=4
  local.get $8
  i32.const 2
  i32.shl
  i32.add
  i32.const 1
  i32.store $0
  local.get $3
  local.get $9
  i32.store $0 offset=12
  local.get $0
  local.get $1
  i32.add
 )
 (func $start:std/array~anonymous|40 (type $i32_i32_i32_i32_=>_i32) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  local.get $3
  i32.load $0 offset=12
  local.tee $2
  i32.const 0
  i32.le_s
  if
   unreachable
  end
  local.get $3
  i32.load $0 offset=4
  local.get $2
  i32.const 1
  i32.sub
  local.tee $2
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  drop
  local.get $3
  local.get $2
  i32.store $0 offset=12
  local.get $0
  local.get $1
  i32.add
 )
 (func $~lib/util/sort/SORT<f32> (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 f32)
  (local $5 i32)
  (local $6 i32)
  (local $7 f32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i64)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 f32)
  (local $18 i32)
  local.get $1
  i32.const 48
  i32.le_s
  if
   local.get $1
   i32.const 1
   i32.le_s
   if
    return
   end
   block $break|0
    block $case1|0
     local.get $1
     i32.const 3
     i32.ne
     if
      local.get $1
      i32.const 2
      i32.eq
      br_if $case1|0
      br $break|0
     end
     local.get $0
     f32.load $0
     local.tee $4
     local.get $0
     f32.load $0 offset=4
     local.tee $7
     i32.const 7872
     i32.load $0
     call_indirect $0 (type $f32_f32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $1
     local.get $0
     local.get $7
     local.get $4
     local.get $1
     select
     f32.store $0
     local.get $4
     local.get $7
     local.get $1
     select
     local.tee $4
     local.get $0
     f32.load $0 offset=8
     local.tee $7
     i32.const 7872
     i32.load $0
     call_indirect $0 (type $f32_f32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $1
     local.get $0
     local.get $7
     local.get $4
     local.get $1
     select
     f32.store $0 offset=4
     local.get $0
     local.get $4
     local.get $7
     local.get $1
     select
     f32.store $0 offset=8
    end
    local.get $0
    f32.load $0
    local.tee $4
    local.get $0
    f32.load $0 offset=4
    local.tee $7
    i32.const 7872
    i32.load $0
    call_indirect $0 (type $f32_f32_=>_i32)
    i32.const 0
    i32.gt_s
    local.set $1
    local.get $0
    local.get $7
    local.get $4
    local.get $1
    select
    f32.store $0
    local.get $0
    local.get $4
    local.get $7
    local.get $1
    select
    f32.store $0 offset=4
    return
   end
   local.get $1
   i32.const 1
   i32.sub
   local.tee $2
   i32.const 1
   i32.add
   i32.const 1
   i32.and
   local.set $3
   loop $for-loop|0
    local.get $2
    local.get $3
    i32.ge_s
    if
     local.get $0
     local.get $3
     i32.const 2
     i32.shl
     i32.add
     local.tee $1
     f32.load $0
     local.tee $17
     local.tee $4
     local.get $1
     f32.load $0 offset=4
     local.tee $7
     i32.const 7872
     i32.load $0
     call_indirect $0 (type $f32_f32_=>_i32)
     i32.const 0
     i32.le_s
     if
      local.get $7
      local.set $4
      local.get $17
      local.set $7
     end
     local.get $3
     i32.const 1
     i32.sub
     local.set $1
     loop $while-continue|1
      local.get $1
      i32.const 0
      i32.ge_s
      if
       local.get $0
       local.get $1
       i32.const 2
       i32.shl
       i32.add
       f32.load $0
       local.tee $17
       local.get $4
       i32.const 7872
       i32.load $0
       call_indirect $0 (type $f32_f32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $0
        local.get $1
        i32.const 2
        i32.shl
        i32.add
        local.get $17
        f32.store $0 offset=8
        local.get $1
        i32.const 1
        i32.sub
        local.set $1
        br $while-continue|1
       end
      end
     end
     local.get $0
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     local.get $4
     f32.store $0 offset=8
     loop $while-continue|2
      local.get $1
      i32.const 0
      i32.ge_s
      if
       local.get $0
       local.get $1
       i32.const 2
       i32.shl
       i32.add
       f32.load $0
       local.tee $4
       local.get $7
       i32.const 7872
       i32.load $0
       call_indirect $0 (type $f32_f32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $0
        local.get $1
        i32.const 2
        i32.shl
        i32.add
        local.get $4
        f32.store $0 offset=4
        local.get $1
        i32.const 1
        i32.sub
        local.set $1
        br $while-continue|2
       end
      end
     end
     local.get $0
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     local.get $7
     f32.store $0 offset=4
     local.get $3
     i32.const 2
     i32.add
     local.set $3
     br $for-loop|0
    end
   end
   return
  end
  i32.const 33
  local.get $1
  i32.clz
  i32.sub
  local.tee $2
  i32.const 2
  i32.shl
  local.tee $6
  i32.const 1
  i32.shl
  local.tee $8
  i32.const 1073741820
  i32.gt_u
  if
   unreachable
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  local.get $8
  i32.const 19
  i32.add
  i32.const -16
  i32.and
  i32.const 4
  i32.sub
  local.tee $8
  global.get $~lib/rt/stub/offset
  local.tee $9
  i32.const 4
  i32.add
  local.tee $14
  i32.add
  local.tee $10
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $10
  global.set $~lib/rt/stub/offset
  local.get $9
  local.get $8
  i32.store $0
  loop $for-loop|1
   local.get $2
   local.get $3
   i32.gt_u
   if
    local.get $14
    local.get $3
    i32.const 2
    i32.shl
    i32.add
    i32.const -1
    i32.store $0
    local.get $3
    i32.const 1
    i32.add
    local.set $3
    br $for-loop|1
   end
  end
  local.get $1
  i32.const 2
  i32.shl
  local.tee $2
  i32.const 1073741820
  i32.gt_u
  if
   unreachable
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  local.get $2
  i32.const 19
  i32.add
  i32.const -16
  i32.and
  i32.const 4
  i32.sub
  local.tee $2
  global.get $~lib/rt/stub/offset
  local.tee $3
  i32.const 4
  i32.add
  local.tee $16
  i32.add
  local.tee $8
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $8
  global.set $~lib/rt/stub/offset
  local.get $3
  local.get $2
  i32.store $0
  block $__inlined_func$~lib/util/sort/extendRunRight<f32>
   local.get $1
   i32.const 1
   i32.sub
   local.tee $15
   local.tee $2
   i32.eqz
   if
    i32.const 0
    local.set $1
    br $__inlined_func$~lib/util/sort/extendRunRight<f32>
   end
   i32.const 1
   local.set $1
   local.get $0
   f32.load $0
   local.get $0
   f32.load $0 offset=4
   i32.const 7872
   i32.load $0
   call_indirect $0 (type $f32_f32_=>_i32)
   i32.const 0
   i32.gt_s
   if
    loop $while-continue|0
     local.get $1
     local.get $2
     i32.lt_s
     if (result i32)
      local.get $0
      local.get $1
      i32.const 2
      i32.shl
      i32.add
      local.tee $3
      f32.load $0 offset=4
      local.get $3
      f32.load $0
      i32.const 7872
      i32.load $0
      call_indirect $0 (type $f32_f32_=>_i32)
      i32.const 31
      i32.shr_u
     else
      i32.const 0
     end
     if
      local.get $1
      i32.const 1
      i32.add
      local.set $1
      br $while-continue|0
     end
    end
    local.get $1
    local.set $2
    loop $while-continue|11
     local.get $2
     local.get $5
     i32.gt_s
     if
      local.get $0
      local.get $5
      i32.const 2
      i32.shl
      i32.add
      local.tee $3
      f32.load $0
      local.set $4
      local.get $3
      local.get $0
      local.get $2
      i32.const 2
      i32.shl
      i32.add
      local.tee $3
      f32.load $0
      f32.store $0
      local.get $5
      i32.const 1
      i32.add
      local.set $5
      local.get $3
      local.get $4
      f32.store $0
      local.get $2
      i32.const 1
      i32.sub
      local.set $2
      br $while-continue|11
     end
    end
   else
    loop $while-continue|23
     local.get $1
     local.get $2
     i32.lt_s
     if (result i32)
      local.get $0
      local.get $1
      i32.const 2
      i32.shl
      i32.add
      local.tee $3
      f32.load $0 offset=4
      local.get $3
      f32.load $0
      i32.const 7872
      i32.load $0
      call_indirect $0 (type $f32_f32_=>_i32)
      i32.const 0
      i32.ge_s
     else
      i32.const 0
     end
     if
      local.get $1
      i32.const 1
      i32.add
      local.set $1
      br $while-continue|23
     end
    end
   end
  end
  local.get $1
  local.tee $5
  i32.const 1
  i32.add
  local.tee $1
  i32.const 32
  i32.lt_s
  if
   local.get $1
   i32.const 31
   local.get $15
   local.get $15
   i32.const 31
   i32.ge_s
   select
   local.tee $5
   i32.const 1
   i32.add
   local.tee $2
   local.get $1
   i32.sub
   i32.const 1
   i32.and
   i32.sub
   local.get $2
   i32.const 1
   i32.and
   local.get $1
   select
   local.set $2
   loop $for-loop|06
    local.get $2
    local.get $5
    i32.le_s
    if
     local.get $0
     local.get $2
     i32.const 2
     i32.shl
     i32.add
     local.tee $1
     f32.load $0
     local.tee $17
     local.tee $4
     local.get $1
     f32.load $0 offset=4
     local.tee $7
     i32.const 7872
     i32.load $0
     call_indirect $0 (type $f32_f32_=>_i32)
     i32.const 0
     i32.le_s
     if
      local.get $7
      local.set $4
      local.get $17
      local.set $7
     end
     local.get $2
     i32.const 1
     i32.sub
     local.set $1
     loop $while-continue|19
      local.get $1
      i32.const 0
      i32.ge_s
      if
       local.get $0
       local.get $1
       i32.const 2
       i32.shl
       i32.add
       f32.load $0
       local.tee $17
       local.get $4
       i32.const 7872
       i32.load $0
       call_indirect $0 (type $f32_f32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $0
        local.get $1
        i32.const 2
        i32.shl
        i32.add
        local.get $17
        f32.store $0 offset=8
        local.get $1
        i32.const 1
        i32.sub
        local.set $1
        br $while-continue|19
       end
      end
     end
     local.get $0
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     local.get $4
     f32.store $0 offset=8
     loop $while-continue|211
      local.get $1
      i32.const 0
      i32.ge_s
      if
       local.get $0
       local.get $1
       i32.const 2
       i32.shl
       i32.add
       f32.load $0
       local.tee $4
       local.get $7
       i32.const 7872
       i32.load $0
       call_indirect $0 (type $f32_f32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $0
        local.get $1
        i32.const 2
        i32.shl
        i32.add
        local.get $4
        f32.store $0 offset=4
        local.get $1
        i32.const 1
        i32.sub
        local.set $1
        br $while-continue|211
       end
      end
     end
     local.get $0
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     local.get $7
     f32.store $0 offset=4
     local.get $2
     i32.const 2
     i32.add
     local.set $2
     br $for-loop|06
    end
   end
  end
  local.get $6
  local.get $14
  i32.add
  local.set $13
  i32.const 0
  local.set $1
  i32.const 0
  local.set $3
  loop $while-continue|213
   local.get $5
   local.get $15
   i32.lt_s
   if
    local.get $15
    local.get $5
    i32.const 1
    i32.add
    local.tee $8
    local.tee $2
    i32.ne
    if
     local.get $0
     local.get $2
     i32.const 2
     i32.shl
     i32.add
     f32.load $0
     local.get $0
     local.get $2
     i32.const 1
     i32.add
     local.tee $10
     i32.const 2
     i32.shl
     i32.add
     f32.load $0
     i32.const 7872
     i32.load $0
     call_indirect $0 (type $f32_f32_=>_i32)
     i32.const 0
     i32.gt_s
     if
      loop $while-continue|016
       local.get $10
       local.get $15
       i32.lt_s
       if (result i32)
        local.get $0
        local.get $10
        i32.const 2
        i32.shl
        i32.add
        local.tee $6
        f32.load $0 offset=4
        local.get $6
        f32.load $0
        i32.const 7872
        i32.load $0
        call_indirect $0 (type $f32_f32_=>_i32)
        i32.const 31
        i32.shr_u
       else
        i32.const 0
       end
       if
        local.get $10
        i32.const 1
        i32.add
        local.set $10
        br $while-continue|016
       end
      end
      local.get $10
      local.set $6
      loop $while-continue|118
       local.get $2
       local.get $6
       i32.lt_s
       if
        local.get $0
        local.get $2
        i32.const 2
        i32.shl
        i32.add
        local.tee $9
        f32.load $0
        local.set $4
        local.get $9
        local.get $0
        local.get $6
        i32.const 2
        i32.shl
        i32.add
        local.tee $9
        f32.load $0
        f32.store $0
        local.get $2
        i32.const 1
        i32.add
        local.set $2
        local.get $9
        local.get $4
        f32.store $0
        local.get $6
        i32.const 1
        i32.sub
        local.set $6
        br $while-continue|118
       end
      end
     else
      loop $while-continue|220
       local.get $10
       local.get $15
       i32.lt_s
       if (result i32)
        local.get $0
        local.get $10
        i32.const 2
        i32.shl
        i32.add
        local.tee $2
        f32.load $0 offset=4
        local.get $2
        f32.load $0
        i32.const 7872
        i32.load $0
        call_indirect $0 (type $f32_f32_=>_i32)
        i32.const 0
        i32.ge_s
       else
        i32.const 0
       end
       if
        local.get $10
        i32.const 1
        i32.add
        local.set $10
        br $while-continue|220
       end
      end
     end
     local.get $10
     local.set $2
    end
    local.get $2
    local.get $8
    i32.sub
    i32.const 1
    i32.add
    local.tee $6
    i32.const 32
    i32.lt_s
    if
     local.get $8
     local.get $6
     local.get $15
     local.get $8
     i32.const 31
     i32.add
     local.tee $2
     local.get $2
     local.get $15
     i32.gt_s
     select
     local.tee $2
     local.get $8
     i32.sub
     i32.const 1
     i32.add
     local.tee $9
     local.get $6
     i32.sub
     i32.const 1
     i32.and
     i32.sub
     local.get $9
     i32.const 1
     i32.and
     local.get $6
     select
     i32.add
     local.set $6
     loop $for-loop|023
      local.get $2
      local.get $6
      i32.ge_s
      if
       local.get $0
       local.get $6
       i32.const 2
       i32.shl
       i32.add
       local.tee $9
       f32.load $0
       local.tee $17
       local.tee $4
       local.get $9
       f32.load $0 offset=4
       local.tee $7
       i32.const 7872
       i32.load $0
       call_indirect $0 (type $f32_f32_=>_i32)
       i32.const 0
       i32.le_s
       if
        local.get $7
        local.set $4
        local.get $17
        local.set $7
       end
       local.get $6
       i32.const 1
       i32.sub
       local.set $10
       loop $while-continue|126
        local.get $8
        local.get $10
        i32.le_s
        if
         local.get $0
         local.get $10
         i32.const 2
         i32.shl
         i32.add
         f32.load $0
         local.tee $17
         local.get $4
         i32.const 7872
         i32.load $0
         call_indirect $0 (type $f32_f32_=>_i32)
         i32.const 0
         i32.gt_s
         if
          local.get $0
          local.get $10
          i32.const 2
          i32.shl
          i32.add
          local.get $17
          f32.store $0 offset=8
          local.get $10
          i32.const 1
          i32.sub
          local.set $10
          br $while-continue|126
         end
        end
       end
       local.get $0
       local.get $10
       i32.const 2
       i32.shl
       i32.add
       local.get $4
       f32.store $0 offset=8
       loop $while-continue|228
        local.get $8
        local.get $10
        i32.le_s
        if
         local.get $0
         local.get $10
         i32.const 2
         i32.shl
         i32.add
         f32.load $0
         local.tee $4
         local.get $7
         i32.const 7872
         i32.load $0
         call_indirect $0 (type $f32_f32_=>_i32)
         i32.const 0
         i32.gt_s
         if
          local.get $0
          local.get $10
          i32.const 2
          i32.shl
          i32.add
          local.get $4
          f32.store $0 offset=4
          local.get $10
          i32.const 1
          i32.sub
          local.set $10
          br $while-continue|228
         end
        end
       end
       local.get $0
       local.get $10
       i32.const 2
       i32.shl
       i32.add
       local.get $7
       f32.store $0 offset=4
       local.get $6
       i32.const 2
       i32.add
       local.set $6
       br $for-loop|023
      end
     end
    end
    local.get $3
    local.get $8
    i32.add
    i64.extend_i32_u
    i64.const 30
    i64.shl
    local.get $15
    i32.const 1
    i32.add
    i64.extend_i32_u
    local.tee $12
    i64.div_u
    local.get $2
    local.get $8
    i32.add
    i32.const 1
    i32.add
    i64.extend_i32_u
    i64.const 30
    i64.shl
    local.get $12
    i64.div_u
    i64.xor
    i32.wrap_i64
    i32.clz
    local.set $9
    local.get $1
    local.set $6
    loop $for-loop|3
     local.get $6
     local.get $9
     i32.gt_u
     if
      local.get $14
      local.get $6
      i32.const 2
      i32.shl
      i32.add
      i32.load $0
      local.tee $11
      i32.const -1
      i32.ne
      if
       local.get $5
       local.get $13
       local.get $6
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       local.tee $3
       i32.add
       local.set $18
       local.get $3
       i32.const 1
       i32.add
       local.set $10
       loop $for-loop|030
        local.get $10
        local.get $11
        i32.gt_s
        if
         local.get $10
         i32.const 1
         i32.sub
         local.tee $10
         i32.const 2
         i32.shl
         local.tee $1
         local.get $16
         i32.add
         local.get $0
         local.get $1
         i32.add
         f32.load $0
         f32.store $0
         br $for-loop|030
        end
       end
       loop $for-loop|133
        local.get $3
        local.get $5
        i32.lt_s
        if
         local.get $16
         local.get $18
         local.get $3
         i32.sub
         i32.const 2
         i32.shl
         i32.add
         local.get $0
         local.get $3
         i32.const 2
         i32.shl
         i32.add
         f32.load $0 offset=4
         f32.store $0
         local.get $3
         i32.const 1
         i32.add
         local.set $3
         br $for-loop|133
        end
       end
       local.get $11
       local.set $1
       loop $for-loop|2
        local.get $1
        local.get $5
        i32.le_s
        if
         local.get $16
         local.get $3
         i32.const 2
         i32.shl
         i32.add
         f32.load $0
         local.tee $4
         local.get $16
         local.get $10
         i32.const 2
         i32.shl
         i32.add
         f32.load $0
         local.tee $7
         i32.const 7872
         i32.load $0
         call_indirect $0 (type $f32_f32_=>_i32)
         i32.const 0
         i32.lt_s
         if
          local.get $0
          local.get $1
          i32.const 2
          i32.shl
          i32.add
          local.get $4
          f32.store $0
          local.get $3
          i32.const 1
          i32.sub
          local.set $3
         else
          local.get $0
          local.get $1
          i32.const 2
          i32.shl
          i32.add
          local.get $7
          f32.store $0
          local.get $10
          i32.const 1
          i32.add
          local.set $10
         end
         local.get $1
         i32.const 1
         i32.add
         local.set $1
         br $for-loop|2
        end
       end
       local.get $14
       local.get $6
       i32.const 2
       i32.shl
       i32.add
       i32.const -1
       i32.store $0
       local.get $11
       local.set $3
      end
      local.get $6
      i32.const 1
      i32.sub
      local.set $6
      br $for-loop|3
     end
    end
    local.get $14
    local.get $9
    i32.const 2
    i32.shl
    local.tee $1
    i32.add
    local.get $3
    i32.store $0
    local.get $1
    local.get $13
    i32.add
    local.get $5
    i32.store $0
    local.get $8
    local.set $3
    local.get $2
    local.set $5
    local.get $9
    local.set $1
    br $while-continue|213
   end
  end
  local.get $1
  local.set $2
  loop $for-loop|4
   local.get $2
   if
    local.get $14
    local.get $2
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.tee $1
    i32.const -1
    i32.ne
    if
     local.get $15
     local.get $13
     local.get $2
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.tee $5
     i32.add
     local.set $6
     local.get $5
     i32.const 1
     i32.add
     local.set $3
     loop $for-loop|037
      local.get $1
      local.get $3
      i32.lt_s
      if
       local.get $16
       local.get $3
       i32.const 1
       i32.sub
       local.tee $3
       i32.const 2
       i32.shl
       local.tee $8
       i32.add
       local.get $0
       local.get $8
       i32.add
       f32.load $0
       f32.store $0
       br $for-loop|037
      end
     end
     loop $for-loop|140
      local.get $5
      local.get $15
      i32.lt_s
      if
       local.get $16
       local.get $6
       local.get $5
       i32.sub
       i32.const 2
       i32.shl
       i32.add
       local.get $0
       local.get $5
       i32.const 2
       i32.shl
       i32.add
       f32.load $0 offset=4
       f32.store $0
       local.get $5
       i32.const 1
       i32.add
       local.set $5
       br $for-loop|140
      end
     end
     loop $for-loop|243
      local.get $1
      local.get $15
      i32.le_s
      if
       local.get $16
       local.get $5
       i32.const 2
       i32.shl
       i32.add
       f32.load $0
       local.tee $4
       local.get $16
       local.get $3
       i32.const 2
       i32.shl
       i32.add
       f32.load $0
       local.tee $7
       i32.const 7872
       i32.load $0
       call_indirect $0 (type $f32_f32_=>_i32)
       i32.const 0
       i32.lt_s
       if
        local.get $0
        local.get $1
        i32.const 2
        i32.shl
        i32.add
        local.get $4
        f32.store $0
        local.get $5
        i32.const 1
        i32.sub
        local.set $5
       else
        local.get $0
        local.get $1
        i32.const 2
        i32.shl
        i32.add
        local.get $7
        f32.store $0
        local.get $3
        i32.const 1
        i32.add
        local.set $3
       end
       local.get $1
       i32.const 1
       i32.add
       local.set $1
       br $for-loop|243
      end
     end
    end
    local.get $2
    i32.const 1
    i32.sub
    local.set $2
    br $for-loop|4
   end
  end
  local.get $16
  i32.const 15
  i32.and
  i32.const 1
  local.get $16
  select
  if
   unreachable
  end
  global.get $~lib/rt/stub/offset
  local.get $16
  local.get $16
  i32.const 4
  i32.sub
  local.tee $0
  i32.load $0
  i32.add
  i32.eq
  if
   local.get $0
   global.set $~lib/rt/stub/offset
  end
  local.get $14
  i32.const 15
  i32.and
  i32.const 1
  local.get $14
  select
  if
   unreachable
  end
  global.get $~lib/rt/stub/offset
  local.get $14
  local.get $14
  i32.const 4
  i32.sub
  local.tee $0
  i32.load $0
  i32.add
  i32.eq
  if
   local.get $0
   global.set $~lib/rt/stub/offset
  end
 )
 (func $~lib/util/sort/COMPARATOR<f32>~anonymous|0 (type $f32_f32_=>_i32) (param $0 f32) (param $1 f32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  i32.reinterpret_f32
  local.tee $2
  i32.const 31
  i32.shr_s
  i32.const 1
  i32.shr_u
  local.get $2
  i32.xor
  local.tee $2
  local.get $1
  i32.reinterpret_f32
  local.tee $3
  i32.const 31
  i32.shr_s
  i32.const 1
  i32.shr_u
  local.get $3
  i32.xor
  local.tee $3
  i32.gt_s
  local.get $2
  local.get $3
  i32.lt_s
  i32.sub
 )
 (func $~lib/util/sort/SORT<f64> (type $i32_i32_=>_none) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 f64)
  (local $5 i32)
  (local $6 i32)
  (local $7 f64)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i64)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 f64)
  (local $18 i32)
  local.get $1
  i32.const 48
  i32.le_s
  if
   local.get $1
   i32.const 1
   i32.le_s
   if
    return
   end
   block $break|0
    block $case1|0
     local.get $1
     i32.const 3
     i32.ne
     if
      local.get $1
      i32.const 2
      i32.eq
      br_if $case1|0
      br $break|0
     end
     local.get $0
     f64.load $0
     local.tee $4
     local.get $0
     f64.load $0 offset=8
     local.tee $7
     i32.const 8144
     i32.load $0
     call_indirect $0 (type $f64_f64_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $1
     local.get $0
     local.get $7
     local.get $4
     local.get $1
     select
     f64.store $0
     local.get $4
     local.get $7
     local.get $1
     select
     local.tee $4
     local.get $0
     f64.load $0 offset=16
     local.tee $7
     i32.const 8144
     i32.load $0
     call_indirect $0 (type $f64_f64_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $1
     local.get $0
     local.get $7
     local.get $4
     local.get $1
     select
     f64.store $0 offset=8
     local.get $0
     local.get $4
     local.get $7
     local.get $1
     select
     f64.store $0 offset=16
    end
    local.get $0
    f64.load $0
    local.tee $4
    local.get $0
    f64.load $0 offset=8
    local.tee $7
    i32.const 8144
    i32.load $0
    call_indirect $0 (type $f64_f64_=>_i32)
    i32.const 0
    i32.gt_s
    local.set $1
    local.get $0
    local.get $7
    local.get $4
    local.get $1
    select
    f64.store $0
    local.get $0
    local.get $4
    local.get $7
    local.get $1
    select
    f64.store $0 offset=8
    return
   end
   local.get $1
   i32.const 1
   i32.sub
   local.tee $2
   i32.const 1
   i32.add
   i32.const 1
   i32.and
   local.set $3
   loop $for-loop|0
    local.get $2
    local.get $3
    i32.ge_s
    if
     local.get $0
     local.get $3
     i32.const 3
     i32.shl
     i32.add
     local.tee $1
     f64.load $0
     local.tee $17
     local.tee $4
     local.get $1
     f64.load $0 offset=8
     local.tee $7
     i32.const 8144
     i32.load $0
     call_indirect $0 (type $f64_f64_=>_i32)
     i32.const 0
     i32.le_s
     if
      local.get $7
      local.set $4
      local.get $17
      local.set $7
     end
     local.get $3
     i32.const 1
     i32.sub
     local.set $1
     loop $while-continue|1
      local.get $1
      i32.const 0
      i32.ge_s
      if
       local.get $0
       local.get $1
       i32.const 3
       i32.shl
       i32.add
       f64.load $0
       local.tee $17
       local.get $4
       i32.const 8144
       i32.load $0
       call_indirect $0 (type $f64_f64_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $0
        local.get $1
        i32.const 3
        i32.shl
        i32.add
        local.get $17
        f64.store $0 offset=16
        local.get $1
        i32.const 1
        i32.sub
        local.set $1
        br $while-continue|1
       end
      end
     end
     local.get $0
     local.get $1
     i32.const 3
     i32.shl
     i32.add
     local.get $4
     f64.store $0 offset=16
     loop $while-continue|2
      local.get $1
      i32.const 0
      i32.ge_s
      if
       local.get $0
       local.get $1
       i32.const 3
       i32.shl
       i32.add
       f64.load $0
       local.tee $4
       local.get $7
       i32.const 8144
       i32.load $0
       call_indirect $0 (type $f64_f64_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $0
        local.get $1
        i32.const 3
        i32.shl
        i32.add
        local.get $4
        f64.store $0 offset=8
        local.get $1
        i32.const 1
        i32.sub
        local.set $1
        br $while-continue|2
       end
      end
     end
     local.get $0
     local.get $1
     i32.const 3
     i32.shl
     i32.add
     local.get $7
     f64.store $0 offset=8
     local.get $3
     i32.const 2
     i32.add
     local.set $3
     br $for-loop|0
    end
   end
   return
  end
  i32.const 33
  local.get $1
  i32.clz
  i32.sub
  local.tee $2
  i32.const 2
  i32.shl
  local.tee $6
  i32.const 1
  i32.shl
  local.tee $8
  i32.const 1073741820
  i32.gt_u
  if
   unreachable
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  local.get $8
  i32.const 19
  i32.add
  i32.const -16
  i32.and
  i32.const 4
  i32.sub
  local.tee $8
  global.get $~lib/rt/stub/offset
  local.tee $9
  i32.const 4
  i32.add
  local.tee $14
  i32.add
  local.tee $10
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $10
  global.set $~lib/rt/stub/offset
  local.get $9
  local.get $8
  i32.store $0
  loop $for-loop|1
   local.get $2
   local.get $3
   i32.gt_u
   if
    local.get $14
    local.get $3
    i32.const 2
    i32.shl
    i32.add
    i32.const -1
    i32.store $0
    local.get $3
    i32.const 1
    i32.add
    local.set $3
    br $for-loop|1
   end
  end
  local.get $1
  i32.const 3
  i32.shl
  local.tee $2
  i32.const 1073741820
  i32.gt_u
  if
   unreachable
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  local.get $2
  i32.const 19
  i32.add
  i32.const -16
  i32.and
  i32.const 4
  i32.sub
  local.tee $2
  global.get $~lib/rt/stub/offset
  local.tee $3
  i32.const 4
  i32.add
  local.tee $16
  i32.add
  local.tee $8
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $8
  global.set $~lib/rt/stub/offset
  local.get $3
  local.get $2
  i32.store $0
  block $__inlined_func$~lib/util/sort/extendRunRight<f64>
   local.get $1
   i32.const 1
   i32.sub
   local.tee $15
   local.tee $2
   i32.eqz
   if
    i32.const 0
    local.set $1
    br $__inlined_func$~lib/util/sort/extendRunRight<f64>
   end
   i32.const 1
   local.set $1
   local.get $0
   f64.load $0
   local.get $0
   f64.load $0 offset=8
   i32.const 8144
   i32.load $0
   call_indirect $0 (type $f64_f64_=>_i32)
   i32.const 0
   i32.gt_s
   if
    loop $while-continue|0
     local.get $1
     local.get $2
     i32.lt_s
     if (result i32)
      local.get $0
      local.get $1
      i32.const 3
      i32.shl
      i32.add
      local.tee $3
      f64.load $0 offset=8
      local.get $3
      f64.load $0
      i32.const 8144
      i32.load $0
      call_indirect $0 (type $f64_f64_=>_i32)
      i32.const 31
      i32.shr_u
     else
      i32.const 0
     end
     if
      local.get $1
      i32.const 1
      i32.add
      local.set $1
      br $while-continue|0
     end
    end
    local.get $1
    local.set $2
    loop $while-continue|11
     local.get $2
     local.get $5
     i32.gt_s
     if
      local.get $0
      local.get $5
      i32.const 3
      i32.shl
      i32.add
      local.tee $3
      f64.load $0
      local.set $4
      local.get $3
      local.get $0
      local.get $2
      i32.const 3
      i32.shl
      i32.add
      local.tee $3
      f64.load $0
      f64.store $0
      local.get $5
      i32.const 1
      i32.add
      local.set $5
      local.get $3
      local.get $4
      f64.store $0
      local.get $2
      i32.const 1
      i32.sub
      local.set $2
      br $while-continue|11
     end
    end
   else
    loop $while-continue|23
     local.get $1
     local.get $2
     i32.lt_s
     if (result i32)
      local.get $0
      local.get $1
      i32.const 3
      i32.shl
      i32.add
      local.tee $3
      f64.load $0 offset=8
      local.get $3
      f64.load $0
      i32.const 8144
      i32.load $0
      call_indirect $0 (type $f64_f64_=>_i32)
      i32.const 0
      i32.ge_s
     else
      i32.const 0
     end
     if
      local.get $1
      i32.const 1
      i32.add
      local.set $1
      br $while-continue|23
     end
    end
   end
  end
  local.get $1
  local.tee $5
  i32.const 1
  i32.add
  local.tee $1
  i32.const 32
  i32.lt_s
  if
   local.get $1
   i32.const 31
   local.get $15
   local.get $15
   i32.const 31
   i32.ge_s
   select
   local.tee $5
   i32.const 1
   i32.add
   local.tee $2
   local.get $1
   i32.sub
   i32.const 1
   i32.and
   i32.sub
   local.get $2
   i32.const 1
   i32.and
   local.get $1
   select
   local.set $2
   loop $for-loop|06
    local.get $2
    local.get $5
    i32.le_s
    if
     local.get $0
     local.get $2
     i32.const 3
     i32.shl
     i32.add
     local.tee $1
     f64.load $0
     local.tee $17
     local.tee $4
     local.get $1
     f64.load $0 offset=8
     local.tee $7
     i32.const 8144
     i32.load $0
     call_indirect $0 (type $f64_f64_=>_i32)
     i32.const 0
     i32.le_s
     if
      local.get $7
      local.set $4
      local.get $17
      local.set $7
     end
     local.get $2
     i32.const 1
     i32.sub
     local.set $1
     loop $while-continue|19
      local.get $1
      i32.const 0
      i32.ge_s
      if
       local.get $0
       local.get $1
       i32.const 3
       i32.shl
       i32.add
       f64.load $0
       local.tee $17
       local.get $4
       i32.const 8144
       i32.load $0
       call_indirect $0 (type $f64_f64_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $0
        local.get $1
        i32.const 3
        i32.shl
        i32.add
        local.get $17
        f64.store $0 offset=16
        local.get $1
        i32.const 1
        i32.sub
        local.set $1
        br $while-continue|19
       end
      end
     end
     local.get $0
     local.get $1
     i32.const 3
     i32.shl
     i32.add
     local.get $4
     f64.store $0 offset=16
     loop $while-continue|211
      local.get $1
      i32.const 0
      i32.ge_s
      if
       local.get $0
       local.get $1
       i32.const 3
       i32.shl
       i32.add
       f64.load $0
       local.tee $4
       local.get $7
       i32.const 8144
       i32.load $0
       call_indirect $0 (type $f64_f64_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $0
        local.get $1
        i32.const 3
        i32.shl
        i32.add
        local.get $4
        f64.store $0 offset=8
        local.get $1
        i32.const 1
        i32.sub
        local.set $1
        br $while-continue|211
       end
      end
     end
     local.get $0
     local.get $1
     i32.const 3
     i32.shl
     i32.add
     local.get $7
     f64.store $0 offset=8
     local.get $2
     i32.const 2
     i32.add
     local.set $2
     br $for-loop|06
    end
   end
  end
  local.get $6
  local.get $14
  i32.add
  local.set $13
  i32.const 0
  local.set $1
  i32.const 0
  local.set $3
  loop $while-continue|213
   local.get $5
   local.get $15
   i32.lt_s
   if
    local.get $15
    local.get $5
    i32.const 1
    i32.add
    local.tee $8
    local.tee $2
    i32.ne
    if
     local.get $0
     local.get $2
     i32.const 3
     i32.shl
     i32.add
     f64.load $0
     local.get $0
     local.get $2
     i32.const 1
     i32.add
     local.tee $10
     i32.const 3
     i32.shl
     i32.add
     f64.load $0
     i32.const 8144
     i32.load $0
     call_indirect $0 (type $f64_f64_=>_i32)
     i32.const 0
     i32.gt_s
     if
      loop $while-continue|016
       local.get $10
       local.get $15
       i32.lt_s
       if (result i32)
        local.get $0
        local.get $10
        i32.const 3
        i32.shl
        i32.add
        local.tee $6
        f64.load $0 offset=8
        local.get $6
        f64.load $0
        i32.const 8144
        i32.load $0
        call_indirect $0 (type $f64_f64_=>_i32)
        i32.const 31
        i32.shr_u
       else
        i32.const 0
       end
       if
        local.get $10
        i32.const 1
        i32.add
        local.set $10
        br $while-continue|016
       end
      end
      local.get $10
      local.set $6
      loop $while-continue|118
       local.get $2
       local.get $6
       i32.lt_s
       if
        local.get $0
        local.get $2
        i32.const 3
        i32.shl
        i32.add
        local.tee $9
        f64.load $0
        local.set $4
        local.get $9
        local.get $0
        local.get $6
        i32.const 3
        i32.shl
        i32.add
        local.tee $9
        f64.load $0
        f64.store $0
        local.get $2
        i32.const 1
        i32.add
        local.set $2
        local.get $9
        local.get $4
        f64.store $0
        local.get $6
        i32.const 1
        i32.sub
        local.set $6
        br $while-continue|118
       end
      end
     else
      loop $while-continue|220
       local.get $10
       local.get $15
       i32.lt_s
       if (result i32)
        local.get $0
        local.get $10
        i32.const 3
        i32.shl
        i32.add
        local.tee $2
        f64.load $0 offset=8
        local.get $2
        f64.load $0
        i32.const 8144
        i32.load $0
        call_indirect $0 (type $f64_f64_=>_i32)
        i32.const 0
        i32.ge_s
       else
        i32.const 0
       end
       if
        local.get $10
        i32.const 1
        i32.add
        local.set $10
        br $while-continue|220
       end
      end
     end
     local.get $10
     local.set $2
    end
    local.get $2
    local.get $8
    i32.sub
    i32.const 1
    i32.add
    local.tee $6
    i32.const 32
    i32.lt_s
    if
     local.get $8
     local.get $6
     local.get $15
     local.get $8
     i32.const 31
     i32.add
     local.tee $2
     local.get $2
     local.get $15
     i32.gt_s
     select
     local.tee $2
     local.get $8
     i32.sub
     i32.const 1
     i32.add
     local.tee $9
     local.get $6
     i32.sub
     i32.const 1
     i32.and
     i32.sub
     local.get $9
     i32.const 1
     i32.and
     local.get $6
     select
     i32.add
     local.set $6
     loop $for-loop|023
      local.get $2
      local.get $6
      i32.ge_s
      if
       local.get $0
       local.get $6
       i32.const 3
       i32.shl
       i32.add
       local.tee $9
       f64.load $0
       local.tee $17
       local.tee $4
       local.get $9
       f64.load $0 offset=8
       local.tee $7
       i32.const 8144
       i32.load $0
       call_indirect $0 (type $f64_f64_=>_i32)
       i32.const 0
       i32.le_s
       if
        local.get $7
        local.set $4
        local.get $17
        local.set $7
       end
       local.get $6
       i32.const 1
       i32.sub
       local.set $10
       loop $while-continue|126
        local.get $8
        local.get $10
        i32.le_s
        if
         local.get $0
         local.get $10
         i32.const 3
         i32.shl
         i32.add
         f64.load $0
         local.tee $17
         local.get $4
         i32.const 8144
         i32.load $0
         call_indirect $0 (type $f64_f64_=>_i32)
         i32.const 0
         i32.gt_s
         if
          local.get $0
          local.get $10
          i32.const 3
          i32.shl
          i32.add
          local.get $17
          f64.store $0 offset=16
          local.get $10
          i32.const 1
          i32.sub
          local.set $10
          br $while-continue|126
         end
        end
       end
       local.get $0
       local.get $10
       i32.const 3
       i32.shl
       i32.add
       local.get $4
       f64.store $0 offset=16
       loop $while-continue|228
        local.get $8
        local.get $10
        i32.le_s
        if
         local.get $0
         local.get $10
         i32.const 3
         i32.shl
         i32.add
         f64.load $0
         local.tee $4
         local.get $7
         i32.const 8144
         i32.load $0
         call_indirect $0 (type $f64_f64_=>_i32)
         i32.const 0
         i32.gt_s
         if
          local.get $0
          local.get $10
          i32.const 3
          i32.shl
          i32.add
          local.get $4
          f64.store $0 offset=8
          local.get $10
          i32.const 1
          i32.sub
          local.set $10
          br $while-continue|228
         end
        end
       end
       local.get $0
       local.get $10
       i32.const 3
       i32.shl
       i32.add
       local.get $7
       f64.store $0 offset=8
       local.get $6
       i32.const 2
       i32.add
       local.set $6
       br $for-loop|023
      end
     end
    end
    local.get $3
    local.get $8
    i32.add
    i64.extend_i32_u
    i64.const 30
    i64.shl
    local.get $15
    i32.const 1
    i32.add
    i64.extend_i32_u
    local.tee $12
    i64.div_u
    local.get $2
    local.get $8
    i32.add
    i32.const 1
    i32.add
    i64.extend_i32_u
    i64.const 30
    i64.shl
    local.get $12
    i64.div_u
    i64.xor
    i32.wrap_i64
    i32.clz
    local.set $9
    local.get $1
    local.set $6
    loop $for-loop|3
     local.get $6
     local.get $9
     i32.gt_u
     if
      local.get $14
      local.get $6
      i32.const 2
      i32.shl
      i32.add
      i32.load $0
      local.tee $11
      i32.const -1
      i32.ne
      if
       local.get $5
       local.get $13
       local.get $6
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       local.tee $3
       i32.add
       local.set $18
       local.get $3
       i32.const 1
       i32.add
       local.set $10
       loop $for-loop|030
        local.get $10
        local.get $11
        i32.gt_s
        if
         local.get $10
         i32.const 1
         i32.sub
         local.tee $10
         i32.const 3
         i32.shl
         local.tee $1
         local.get $16
         i32.add
         local.get $0
         local.get $1
         i32.add
         f64.load $0
         f64.store $0
         br $for-loop|030
        end
       end
       loop $for-loop|133
        local.get $3
        local.get $5
        i32.lt_s
        if
         local.get $16
         local.get $18
         local.get $3
         i32.sub
         i32.const 3
         i32.shl
         i32.add
         local.get $0
         local.get $3
         i32.const 3
         i32.shl
         i32.add
         f64.load $0 offset=8
         f64.store $0
         local.get $3
         i32.const 1
         i32.add
         local.set $3
         br $for-loop|133
        end
       end
       local.get $11
       local.set $1
       loop $for-loop|2
        local.get $1
        local.get $5
        i32.le_s
        if
         local.get $16
         local.get $3
         i32.const 3
         i32.shl
         i32.add
         f64.load $0
         local.tee $4
         local.get $16
         local.get $10
         i32.const 3
         i32.shl
         i32.add
         f64.load $0
         local.tee $7
         i32.const 8144
         i32.load $0
         call_indirect $0 (type $f64_f64_=>_i32)
         i32.const 0
         i32.lt_s
         if
          local.get $0
          local.get $1
          i32.const 3
          i32.shl
          i32.add
          local.get $4
          f64.store $0
          local.get $3
          i32.const 1
          i32.sub
          local.set $3
         else
          local.get $0
          local.get $1
          i32.const 3
          i32.shl
          i32.add
          local.get $7
          f64.store $0
          local.get $10
          i32.const 1
          i32.add
          local.set $10
         end
         local.get $1
         i32.const 1
         i32.add
         local.set $1
         br $for-loop|2
        end
       end
       local.get $14
       local.get $6
       i32.const 2
       i32.shl
       i32.add
       i32.const -1
       i32.store $0
       local.get $11
       local.set $3
      end
      local.get $6
      i32.const 1
      i32.sub
      local.set $6
      br $for-loop|3
     end
    end
    local.get $14
    local.get $9
    i32.const 2
    i32.shl
    local.tee $1
    i32.add
    local.get $3
    i32.store $0
    local.get $1
    local.get $13
    i32.add
    local.get $5
    i32.store $0
    local.get $8
    local.set $3
    local.get $2
    local.set $5
    local.get $9
    local.set $1
    br $while-continue|213
   end
  end
  local.get $1
  local.set $2
  loop $for-loop|4
   local.get $2
   if
    local.get $14
    local.get $2
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.tee $1
    i32.const -1
    i32.ne
    if
     local.get $15
     local.get $13
     local.get $2
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.tee $5
     i32.add
     local.set $6
     local.get $5
     i32.const 1
     i32.add
     local.set $3
     loop $for-loop|037
      local.get $1
      local.get $3
      i32.lt_s
      if
       local.get $16
       local.get $3
       i32.const 1
       i32.sub
       local.tee $3
       i32.const 3
       i32.shl
       local.tee $8
       i32.add
       local.get $0
       local.get $8
       i32.add
       f64.load $0
       f64.store $0
       br $for-loop|037
      end
     end
     loop $for-loop|140
      local.get $5
      local.get $15
      i32.lt_s
      if
       local.get $16
       local.get $6
       local.get $5
       i32.sub
       i32.const 3
       i32.shl
       i32.add
       local.get $0
       local.get $5
       i32.const 3
       i32.shl
       i32.add
       f64.load $0 offset=8
       f64.store $0
       local.get $5
       i32.const 1
       i32.add
       local.set $5
       br $for-loop|140
      end
     end
     loop $for-loop|243
      local.get $1
      local.get $15
      i32.le_s
      if
       local.get $16
       local.get $5
       i32.const 3
       i32.shl
       i32.add
       f64.load $0
       local.tee $4
       local.get $16
       local.get $3
       i32.const 3
       i32.shl
       i32.add
       f64.load $0
       local.tee $7
       i32.const 8144
       i32.load $0
       call_indirect $0 (type $f64_f64_=>_i32)
       i32.const 0
       i32.lt_s
       if
        local.get $0
        local.get $1
        i32.const 3
        i32.shl
        i32.add
        local.get $4
        f64.store $0
        local.get $5
        i32.const 1
        i32.sub
        local.set $5
       else
        local.get $0
        local.get $1
        i32.const 3
        i32.shl
        i32.add
        local.get $7
        f64.store $0
        local.get $3
        i32.const 1
        i32.add
        local.set $3
       end
       local.get $1
       i32.const 1
       i32.add
       local.set $1
       br $for-loop|243
      end
     end
    end
    local.get $2
    i32.const 1
    i32.sub
    local.set $2
    br $for-loop|4
   end
  end
  local.get $16
  i32.const 15
  i32.and
  i32.const 1
  local.get $16
  select
  if
   unreachable
  end
  global.get $~lib/rt/stub/offset
  local.get $16
  local.get $16
  i32.const 4
  i32.sub
  local.tee $0
  i32.load $0
  i32.add
  i32.eq
  if
   local.get $0
   global.set $~lib/rt/stub/offset
  end
  local.get $14
  i32.const 15
  i32.and
  i32.const 1
  local.get $14
  select
  if
   unreachable
  end
  global.get $~lib/rt/stub/offset
  local.get $14
  local.get $14
  i32.const 4
  i32.sub
  local.tee $0
  i32.load $0
  i32.add
  i32.eq
  if
   local.get $0
   global.set $~lib/rt/stub/offset
  end
 )
 (func $~lib/util/sort/COMPARATOR<f64>~anonymous|0 (type $f64_f64_=>_i32) (param $0 f64) (param $1 f64) (result i32)
  (local $2 i64)
  (local $3 i64)
  local.get $0
  i64.reinterpret_f64
  local.tee $2
  i64.const 63
  i64.shr_s
  i64.const 1
  i64.shr_u
  local.get $2
  i64.xor
  local.tee $2
  local.get $1
  i64.reinterpret_f64
  local.tee $3
  i64.const 63
  i64.shr_s
  i64.const 1
  i64.shr_u
  local.get $3
  i64.xor
  local.tee $3
  i64.gt_s
  local.get $2
  local.get $3
  i64.lt_s
  i32.sub
 )
 (func $~lib/util/sort/SORT<i32> (type $i32_i32_i32_=>_none) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i64)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  local.get $1
  i32.const 48
  i32.le_s
  if
   local.get $1
   i32.const 1
   i32.le_s
   if
    return
   end
   block $break|0
    block $case1|0
     local.get $1
     i32.const 3
     i32.ne
     if
      local.get $1
      i32.const 2
      i32.eq
      br_if $case1|0
      br $break|0
     end
     local.get $0
     i32.load $0
     local.tee $1
     local.get $0
     i32.load $0 offset=4
     local.tee $3
     local.get $2
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $4
     local.get $0
     local.get $3
     local.get $1
     local.get $4
     select
     i32.store $0
     local.get $1
     local.get $3
     local.get $4
     select
     local.tee $1
     local.get $0
     i32.load $0 offset=8
     local.tee $3
     local.get $2
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $4
     local.get $0
     local.get $3
     local.get $1
     local.get $4
     select
     i32.store $0 offset=4
     local.get $0
     local.get $1
     local.get $3
     local.get $4
     select
     i32.store $0 offset=8
    end
    local.get $0
    i32.load $0
    local.tee $1
    local.get $0
    i32.load $0 offset=4
    local.tee $3
    local.get $2
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.gt_s
    local.set $2
    local.get $0
    local.get $3
    local.get $1
    local.get $2
    select
    i32.store $0
    local.get $0
    local.get $1
    local.get $3
    local.get $2
    select
    i32.store $0 offset=4
    return
   end
   local.get $1
   i32.const 1
   i32.sub
   local.tee $6
   i32.const 1
   i32.add
   i32.const 1
   i32.and
   local.set $3
   loop $for-loop|0
    local.get $3
    local.get $6
    i32.le_s
    if
     local.get $0
     local.get $3
     i32.const 2
     i32.shl
     i32.add
     local.tee $4
     i32.load $0 offset=4
     local.set $1
     local.get $4
     i32.load $0
     local.tee $5
     local.tee $4
     local.get $1
     local.get $2
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.le_s
     if
      local.get $1
      local.set $4
      local.get $5
      local.set $1
     end
     local.get $3
     i32.const 1
     i32.sub
     local.set $5
     loop $while-continue|1
      local.get $5
      i32.const 0
      i32.ge_s
      if
       local.get $0
       local.get $5
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       local.tee $7
       local.get $4
       local.get $2
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $0
        local.get $5
        i32.const 2
        i32.shl
        i32.add
        local.get $7
        i32.store $0 offset=8
        local.get $5
        i32.const 1
        i32.sub
        local.set $5
        br $while-continue|1
       end
      end
     end
     local.get $0
     local.get $5
     i32.const 2
     i32.shl
     i32.add
     local.get $4
     i32.store $0 offset=8
     loop $while-continue|2
      local.get $5
      i32.const 0
      i32.ge_s
      if
       local.get $0
       local.get $5
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       local.tee $4
       local.get $1
       local.get $2
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $0
        local.get $5
        i32.const 2
        i32.shl
        i32.add
        local.get $4
        i32.store $0 offset=4
        local.get $5
        i32.const 1
        i32.sub
        local.set $5
        br $while-continue|2
       end
      end
     end
     local.get $0
     local.get $5
     i32.const 2
     i32.shl
     i32.add
     local.get $1
     i32.store $0 offset=4
     local.get $3
     i32.const 2
     i32.add
     local.set $3
     br $for-loop|0
    end
   end
   return
  end
  i32.const 33
  local.get $1
  i32.clz
  i32.sub
  local.tee $3
  i32.const 2
  i32.shl
  local.tee $8
  i32.const 1
  i32.shl
  local.tee $5
  i32.const 1073741820
  i32.gt_u
  if
   unreachable
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $6
  i32.const 4
  i32.add
  local.tee $13
  local.get $5
  i32.const 19
  i32.add
  i32.const -16
  i32.and
  i32.const 4
  i32.sub
  local.tee $5
  i32.add
  local.tee $9
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $9
  global.set $~lib/rt/stub/offset
  local.get $6
  local.get $5
  i32.store $0
  loop $for-loop|1
   local.get $3
   local.get $4
   i32.gt_u
   if
    local.get $13
    local.get $4
    i32.const 2
    i32.shl
    i32.add
    i32.const -1
    i32.store $0
    local.get $4
    i32.const 1
    i32.add
    local.set $4
    br $for-loop|1
   end
  end
  local.get $1
  i32.const 2
  i32.shl
  local.tee $3
  i32.const 1073741820
  i32.gt_u
  if
   unreachable
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $4
  i32.const 4
  i32.add
  local.tee $14
  local.get $3
  i32.const 19
  i32.add
  i32.const -16
  i32.and
  i32.const 4
  i32.sub
  local.tee $3
  i32.add
  local.tee $5
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $5
  global.set $~lib/rt/stub/offset
  local.get $4
  local.get $3
  i32.store $0
  block $__inlined_func$~lib/util/sort/extendRunRight<i32>
   local.get $1
   i32.const 1
   i32.sub
   local.tee $15
   i32.eqz
   if
    i32.const 0
    local.set $1
    br $__inlined_func$~lib/util/sort/extendRunRight<i32>
   end
   i32.const 1
   local.set $1
   local.get $0
   i32.load $0
   local.get $0
   i32.load $0 offset=4
   local.get $2
   i32.load $0
   call_indirect $0 (type $i32_i32_=>_i32)
   i32.const 0
   i32.gt_s
   if
    loop $while-continue|0
     local.get $1
     local.get $15
     i32.lt_s
     if (result i32)
      local.get $0
      local.get $1
      i32.const 2
      i32.shl
      i32.add
      local.tee $3
      i32.load $0 offset=4
      local.get $3
      i32.load $0
      local.get $2
      i32.load $0
      call_indirect $0 (type $i32_i32_=>_i32)
      i32.const 31
      i32.shr_u
     else
      i32.const 0
     end
     if
      local.get $1
      i32.const 1
      i32.add
      local.set $1
      br $while-continue|0
     end
    end
    local.get $1
    local.set $5
    loop $while-continue|11
     local.get $5
     local.get $7
     i32.gt_s
     if
      local.get $0
      local.get $7
      i32.const 2
      i32.shl
      i32.add
      local.tee $3
      i32.load $0
      local.set $4
      local.get $3
      local.get $0
      local.get $5
      i32.const 2
      i32.shl
      i32.add
      local.tee $3
      i32.load $0
      i32.store $0
      local.get $7
      i32.const 1
      i32.add
      local.set $7
      local.get $3
      local.get $4
      i32.store $0
      local.get $5
      i32.const 1
      i32.sub
      local.set $5
      br $while-continue|11
     end
    end
   else
    loop $while-continue|23
     local.get $1
     local.get $15
     i32.lt_s
     if (result i32)
      local.get $0
      local.get $1
      i32.const 2
      i32.shl
      i32.add
      local.tee $3
      i32.load $0 offset=4
      local.get $3
      i32.load $0
      local.get $2
      i32.load $0
      call_indirect $0 (type $i32_i32_=>_i32)
      i32.const 0
      i32.ge_s
     else
      i32.const 0
     end
     if
      local.get $1
      i32.const 1
      i32.add
      local.set $1
      br $while-continue|23
     end
    end
   end
  end
  local.get $1
  local.tee $7
  i32.const 1
  i32.add
  local.tee $1
  i32.const 32
  i32.lt_s
  if
   local.get $1
   i32.const 31
   local.get $15
   local.get $15
   i32.const 31
   i32.ge_s
   select
   local.tee $7
   i32.const 1
   i32.add
   local.tee $3
   local.get $1
   i32.sub
   i32.const 1
   i32.and
   i32.sub
   local.get $3
   i32.const 1
   i32.and
   local.get $1
   select
   local.set $4
   loop $for-loop|06
    local.get $4
    local.get $7
    i32.le_s
    if
     local.get $0
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     local.tee $3
     i32.load $0 offset=4
     local.set $1
     local.get $3
     i32.load $0
     local.tee $5
     local.tee $3
     local.get $1
     local.get $2
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.le_s
     if
      local.get $1
      local.set $3
      local.get $5
      local.set $1
     end
     local.get $4
     i32.const 1
     i32.sub
     local.set $6
     loop $while-continue|19
      local.get $6
      i32.const 0
      i32.ge_s
      if
       local.get $0
       local.get $6
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       local.tee $5
       local.get $3
       local.get $2
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $0
        local.get $6
        i32.const 2
        i32.shl
        i32.add
        local.get $5
        i32.store $0 offset=8
        local.get $6
        i32.const 1
        i32.sub
        local.set $6
        br $while-continue|19
       end
      end
     end
     local.get $0
     local.get $6
     i32.const 2
     i32.shl
     i32.add
     local.get $3
     i32.store $0 offset=8
     loop $while-continue|211
      local.get $6
      i32.const 0
      i32.ge_s
      if
       local.get $0
       local.get $6
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       local.tee $3
       local.get $1
       local.get $2
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $0
        local.get $6
        i32.const 2
        i32.shl
        i32.add
        local.get $3
        i32.store $0 offset=4
        local.get $6
        i32.const 1
        i32.sub
        local.set $6
        br $while-continue|211
       end
      end
     end
     local.get $0
     local.get $6
     i32.const 2
     i32.shl
     i32.add
     local.get $1
     i32.store $0 offset=4
     local.get $4
     i32.const 2
     i32.add
     local.set $4
     br $for-loop|06
    end
   end
  end
  local.get $8
  local.get $13
  i32.add
  local.set $12
  i32.const 0
  local.set $1
  i32.const 0
  local.set $3
  loop $while-continue|213
   local.get $7
   local.get $15
   i32.lt_s
   if
    local.get $7
    i32.const 1
    i32.add
    local.tee $8
    local.tee $4
    local.get $15
    i32.ne
    if
     local.get $0
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.get $0
     local.get $4
     i32.const 1
     i32.add
     local.tee $6
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.get $2
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     if
      loop $while-continue|016
       local.get $6
       local.get $15
       i32.lt_s
       if (result i32)
        local.get $0
        local.get $6
        i32.const 2
        i32.shl
        i32.add
        local.tee $5
        i32.load $0 offset=4
        local.get $5
        i32.load $0
        local.get $2
        i32.load $0
        call_indirect $0 (type $i32_i32_=>_i32)
        i32.const 31
        i32.shr_u
       else
        i32.const 0
       end
       if
        local.get $6
        i32.const 1
        i32.add
        local.set $6
        br $while-continue|016
       end
      end
      local.get $6
      local.set $5
      loop $while-continue|118
       local.get $4
       local.get $5
       i32.lt_s
       if
        local.get $0
        local.get $4
        i32.const 2
        i32.shl
        i32.add
        local.tee $9
        i32.load $0
        local.set $10
        local.get $9
        local.get $0
        local.get $5
        i32.const 2
        i32.shl
        i32.add
        local.tee $9
        i32.load $0
        i32.store $0
        local.get $4
        i32.const 1
        i32.add
        local.set $4
        local.get $9
        local.get $10
        i32.store $0
        local.get $5
        i32.const 1
        i32.sub
        local.set $5
        br $while-continue|118
       end
      end
     else
      loop $while-continue|220
       local.get $6
       local.get $15
       i32.lt_s
       if (result i32)
        local.get $0
        local.get $6
        i32.const 2
        i32.shl
        i32.add
        local.tee $4
        i32.load $0 offset=4
        local.get $4
        i32.load $0
        local.get $2
        i32.load $0
        call_indirect $0 (type $i32_i32_=>_i32)
        i32.const 0
        i32.ge_s
       else
        i32.const 0
       end
       if
        local.get $6
        i32.const 1
        i32.add
        local.set $6
        br $while-continue|220
       end
      end
     end
     local.get $6
     local.set $4
    end
    local.get $4
    local.get $8
    i32.sub
    i32.const 1
    i32.add
    local.tee $5
    i32.const 32
    i32.lt_s
    if
     local.get $8
     local.get $5
     local.get $15
     local.get $8
     i32.const 31
     i32.add
     local.tee $4
     local.get $4
     local.get $15
     i32.gt_s
     select
     local.tee $4
     local.get $8
     i32.sub
     i32.const 1
     i32.add
     local.tee $6
     local.get $5
     i32.sub
     i32.const 1
     i32.and
     i32.sub
     local.get $6
     i32.const 1
     i32.and
     local.get $5
     select
     i32.add
     local.set $9
     loop $for-loop|023
      local.get $4
      local.get $9
      i32.ge_s
      if
       local.get $0
       local.get $9
       i32.const 2
       i32.shl
       i32.add
       local.tee $6
       i32.load $0 offset=4
       local.set $5
       local.get $6
       i32.load $0
       local.tee $10
       local.tee $6
       local.get $5
       local.get $2
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.le_s
       if
        local.get $5
        local.set $6
        local.get $10
        local.set $5
       end
       local.get $9
       i32.const 1
       i32.sub
       local.set $16
       loop $while-continue|126
        local.get $8
        local.get $16
        i32.le_s
        if
         local.get $0
         local.get $16
         i32.const 2
         i32.shl
         i32.add
         i32.load $0
         local.tee $10
         local.get $6
         local.get $2
         i32.load $0
         call_indirect $0 (type $i32_i32_=>_i32)
         i32.const 0
         i32.gt_s
         if
          local.get $0
          local.get $16
          i32.const 2
          i32.shl
          i32.add
          local.get $10
          i32.store $0 offset=8
          local.get $16
          i32.const 1
          i32.sub
          local.set $16
          br $while-continue|126
         end
        end
       end
       local.get $0
       local.get $16
       i32.const 2
       i32.shl
       i32.add
       local.get $6
       i32.store $0 offset=8
       loop $while-continue|228
        local.get $8
        local.get $16
        i32.le_s
        if
         local.get $0
         local.get $16
         i32.const 2
         i32.shl
         i32.add
         i32.load $0
         local.tee $6
         local.get $5
         local.get $2
         i32.load $0
         call_indirect $0 (type $i32_i32_=>_i32)
         i32.const 0
         i32.gt_s
         if
          local.get $0
          local.get $16
          i32.const 2
          i32.shl
          i32.add
          local.get $6
          i32.store $0 offset=4
          local.get $16
          i32.const 1
          i32.sub
          local.set $16
          br $while-continue|228
         end
        end
       end
       local.get $0
       local.get $16
       i32.const 2
       i32.shl
       i32.add
       local.get $5
       i32.store $0 offset=4
       local.get $9
       i32.const 2
       i32.add
       local.set $9
       br $for-loop|023
      end
     end
    end
    local.get $3
    local.get $8
    i32.add
    i64.extend_i32_u
    i64.const 30
    i64.shl
    local.get $15
    i32.const 1
    i32.add
    i64.extend_i32_u
    local.tee $11
    i64.div_u
    local.get $4
    local.get $8
    i32.add
    i32.const 1
    i32.add
    i64.extend_i32_u
    i64.const 30
    i64.shl
    local.get $11
    i64.div_u
    i64.xor
    i32.wrap_i64
    i32.clz
    local.set $9
    local.get $1
    local.set $5
    loop $for-loop|3
     local.get $5
     local.get $9
     i32.gt_u
     if
      local.get $13
      local.get $5
      i32.const 2
      i32.shl
      i32.add
      i32.load $0
      local.tee $1
      i32.const -1
      i32.ne
      if
       local.get $7
       local.get $12
       local.get $5
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       local.tee $3
       i32.add
       local.set $6
       local.get $3
       i32.const 1
       i32.add
       local.set $16
       loop $for-loop|030
        local.get $1
        local.get $16
        i32.lt_s
        if
         local.get $16
         i32.const 1
         i32.sub
         local.tee $16
         i32.const 2
         i32.shl
         local.tee $10
         local.get $14
         i32.add
         local.get $0
         local.get $10
         i32.add
         i32.load $0
         i32.store $0
         br $for-loop|030
        end
       end
       loop $for-loop|133
        local.get $3
        local.get $7
        i32.lt_s
        if
         local.get $14
         local.get $6
         local.get $3
         i32.sub
         i32.const 2
         i32.shl
         i32.add
         local.get $0
         local.get $3
         i32.const 2
         i32.shl
         i32.add
         i32.load $0 offset=4
         i32.store $0
         local.get $3
         i32.const 1
         i32.add
         local.set $3
         br $for-loop|133
        end
       end
       local.get $1
       local.set $6
       loop $for-loop|2
        local.get $6
        local.get $7
        i32.le_s
        if
         local.get $14
         local.get $3
         i32.const 2
         i32.shl
         i32.add
         i32.load $0
         local.tee $17
         local.get $14
         local.get $16
         i32.const 2
         i32.shl
         i32.add
         i32.load $0
         local.tee $10
         local.get $2
         i32.load $0
         call_indirect $0 (type $i32_i32_=>_i32)
         i32.const 0
         i32.lt_s
         if
          local.get $0
          local.get $6
          i32.const 2
          i32.shl
          i32.add
          local.get $17
          i32.store $0
          local.get $3
          i32.const 1
          i32.sub
          local.set $3
         else
          local.get $0
          local.get $6
          i32.const 2
          i32.shl
          i32.add
          local.get $10
          i32.store $0
          local.get $16
          i32.const 1
          i32.add
          local.set $16
         end
         local.get $6
         i32.const 1
         i32.add
         local.set $6
         br $for-loop|2
        end
       end
       local.get $13
       local.get $5
       i32.const 2
       i32.shl
       i32.add
       i32.const -1
       i32.store $0
       local.get $1
       local.set $3
      end
      local.get $5
      i32.const 1
      i32.sub
      local.set $5
      br $for-loop|3
     end
    end
    local.get $9
    i32.const 2
    i32.shl
    local.tee $1
    local.get $13
    i32.add
    local.get $3
    i32.store $0
    local.get $1
    local.get $12
    i32.add
    local.get $7
    i32.store $0
    local.get $8
    local.set $3
    local.get $4
    local.set $7
    local.get $9
    local.set $1
    br $while-continue|213
   end
  end
  local.get $1
  local.set $5
  loop $for-loop|4
   local.get $5
   if
    local.get $13
    local.get $5
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.tee $1
    i32.const -1
    i32.ne
    if
     local.get $15
     local.get $12
     local.get $5
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.tee $7
     i32.add
     local.set $4
     local.get $7
     i32.const 1
     i32.add
     local.set $3
     loop $for-loop|037
      local.get $1
      local.get $3
      i32.lt_s
      if
       local.get $3
       i32.const 1
       i32.sub
       local.tee $3
       i32.const 2
       i32.shl
       local.tee $6
       local.get $14
       i32.add
       local.get $0
       local.get $6
       i32.add
       i32.load $0
       i32.store $0
       br $for-loop|037
      end
     end
     loop $for-loop|140
      local.get $7
      local.get $15
      i32.lt_s
      if
       local.get $14
       local.get $4
       local.get $7
       i32.sub
       i32.const 2
       i32.shl
       i32.add
       local.get $0
       local.get $7
       i32.const 2
       i32.shl
       i32.add
       i32.load $0 offset=4
       i32.store $0
       local.get $7
       i32.const 1
       i32.add
       local.set $7
       br $for-loop|140
      end
     end
     loop $for-loop|243
      local.get $1
      local.get $15
      i32.le_s
      if
       local.get $14
       local.get $7
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       local.tee $4
       local.get $14
       local.get $3
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       local.tee $6
       local.get $2
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.lt_s
       if
        local.get $0
        local.get $1
        i32.const 2
        i32.shl
        i32.add
        local.get $4
        i32.store $0
        local.get $7
        i32.const 1
        i32.sub
        local.set $7
       else
        local.get $0
        local.get $1
        i32.const 2
        i32.shl
        i32.add
        local.get $6
        i32.store $0
        local.get $3
        i32.const 1
        i32.add
        local.set $3
       end
       local.get $1
       i32.const 1
       i32.add
       local.set $1
       br $for-loop|243
      end
     end
    end
    local.get $5
    i32.const 1
    i32.sub
    local.set $5
    br $for-loop|4
   end
  end
  local.get $14
  i32.const 15
  i32.and
  i32.const 1
  local.get $14
  select
  if
   unreachable
  end
  global.get $~lib/rt/stub/offset
  local.get $14
  local.get $14
  i32.const 4
  i32.sub
  local.tee $0
  i32.load $0
  i32.add
  i32.eq
  if
   local.get $0
   global.set $~lib/rt/stub/offset
  end
  local.get $13
  i32.const 15
  i32.and
  i32.const 1
  local.get $13
  select
  if
   unreachable
  end
  global.get $~lib/rt/stub/offset
  local.get $13
  local.get $13
  i32.const 4
  i32.sub
  local.tee $0
  i32.load $0
  i32.add
  i32.eq
  if
   local.get $0
   global.set $~lib/rt/stub/offset
  end
 )
 (func $~lib/util/sort/COMPARATOR<i32>~anonymous|0 (type $i32_i32_=>_i32) (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  local.get $1
  i32.sub
 )
 (func $~lib/util/sort/SORT<u32> (type $i32_i32_i32_=>_none) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i64)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  local.get $1
  i32.const 48
  i32.le_s
  if
   local.get $1
   i32.const 1
   i32.le_s
   if
    return
   end
   block $break|0
    block $case1|0
     local.get $1
     i32.const 3
     i32.ne
     if
      local.get $1
      i32.const 2
      i32.eq
      br_if $case1|0
      br $break|0
     end
     local.get $0
     i32.load $0
     local.tee $1
     local.get $0
     i32.load $0 offset=4
     local.tee $3
     local.get $2
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $4
     local.get $0
     local.get $3
     local.get $1
     local.get $4
     select
     i32.store $0
     local.get $1
     local.get $3
     local.get $4
     select
     local.tee $1
     local.get $0
     i32.load $0 offset=8
     local.tee $3
     local.get $2
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $4
     local.get $0
     local.get $3
     local.get $1
     local.get $4
     select
     i32.store $0 offset=4
     local.get $0
     local.get $1
     local.get $3
     local.get $4
     select
     i32.store $0 offset=8
    end
    local.get $0
    i32.load $0
    local.tee $1
    local.get $0
    i32.load $0 offset=4
    local.tee $3
    local.get $2
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.gt_s
    local.set $2
    local.get $0
    local.get $3
    local.get $1
    local.get $2
    select
    i32.store $0
    local.get $0
    local.get $1
    local.get $3
    local.get $2
    select
    i32.store $0 offset=4
    return
   end
   local.get $1
   i32.const 1
   i32.sub
   local.tee $6
   i32.const 1
   i32.add
   i32.const 1
   i32.and
   local.set $3
   loop $for-loop|0
    local.get $3
    local.get $6
    i32.le_s
    if
     local.get $0
     local.get $3
     i32.const 2
     i32.shl
     i32.add
     local.tee $4
     i32.load $0 offset=4
     local.set $1
     local.get $4
     i32.load $0
     local.tee $5
     local.tee $4
     local.get $1
     local.get $2
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.le_s
     if
      local.get $1
      local.set $4
      local.get $5
      local.set $1
     end
     local.get $3
     i32.const 1
     i32.sub
     local.set $5
     loop $while-continue|1
      local.get $5
      i32.const 0
      i32.ge_s
      if
       local.get $0
       local.get $5
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       local.tee $7
       local.get $4
       local.get $2
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $0
        local.get $5
        i32.const 2
        i32.shl
        i32.add
        local.get $7
        i32.store $0 offset=8
        local.get $5
        i32.const 1
        i32.sub
        local.set $5
        br $while-continue|1
       end
      end
     end
     local.get $0
     local.get $5
     i32.const 2
     i32.shl
     i32.add
     local.get $4
     i32.store $0 offset=8
     loop $while-continue|2
      local.get $5
      i32.const 0
      i32.ge_s
      if
       local.get $0
       local.get $5
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       local.tee $4
       local.get $1
       local.get $2
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $0
        local.get $5
        i32.const 2
        i32.shl
        i32.add
        local.get $4
        i32.store $0 offset=4
        local.get $5
        i32.const 1
        i32.sub
        local.set $5
        br $while-continue|2
       end
      end
     end
     local.get $0
     local.get $5
     i32.const 2
     i32.shl
     i32.add
     local.get $1
     i32.store $0 offset=4
     local.get $3
     i32.const 2
     i32.add
     local.set $3
     br $for-loop|0
    end
   end
   return
  end
  i32.const 33
  local.get $1
  i32.clz
  i32.sub
  local.tee $3
  i32.const 2
  i32.shl
  local.tee $8
  i32.const 1
  i32.shl
  local.tee $5
  i32.const 1073741820
  i32.gt_u
  if
   unreachable
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $6
  i32.const 4
  i32.add
  local.tee $13
  local.get $5
  i32.const 19
  i32.add
  i32.const -16
  i32.and
  i32.const 4
  i32.sub
  local.tee $5
  i32.add
  local.tee $9
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $9
  global.set $~lib/rt/stub/offset
  local.get $6
  local.get $5
  i32.store $0
  loop $for-loop|1
   local.get $3
   local.get $4
   i32.gt_u
   if
    local.get $13
    local.get $4
    i32.const 2
    i32.shl
    i32.add
    i32.const -1
    i32.store $0
    local.get $4
    i32.const 1
    i32.add
    local.set $4
    br $for-loop|1
   end
  end
  local.get $1
  i32.const 2
  i32.shl
  local.tee $3
  i32.const 1073741820
  i32.gt_u
  if
   unreachable
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $4
  i32.const 4
  i32.add
  local.tee $14
  local.get $3
  i32.const 19
  i32.add
  i32.const -16
  i32.and
  i32.const 4
  i32.sub
  local.tee $3
  i32.add
  local.tee $5
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $5
  global.set $~lib/rt/stub/offset
  local.get $4
  local.get $3
  i32.store $0
  block $__inlined_func$~lib/util/sort/extendRunRight<u32>
   local.get $1
   i32.const 1
   i32.sub
   local.tee $15
   i32.eqz
   if
    i32.const 0
    local.set $1
    br $__inlined_func$~lib/util/sort/extendRunRight<u32>
   end
   i32.const 1
   local.set $1
   local.get $0
   i32.load $0
   local.get $0
   i32.load $0 offset=4
   local.get $2
   i32.load $0
   call_indirect $0 (type $i32_i32_=>_i32)
   i32.const 0
   i32.gt_s
   if
    loop $while-continue|0
     local.get $1
     local.get $15
     i32.lt_s
     if (result i32)
      local.get $0
      local.get $1
      i32.const 2
      i32.shl
      i32.add
      local.tee $3
      i32.load $0 offset=4
      local.get $3
      i32.load $0
      local.get $2
      i32.load $0
      call_indirect $0 (type $i32_i32_=>_i32)
      i32.const 31
      i32.shr_u
     else
      i32.const 0
     end
     if
      local.get $1
      i32.const 1
      i32.add
      local.set $1
      br $while-continue|0
     end
    end
    local.get $1
    local.set $5
    loop $while-continue|11
     local.get $5
     local.get $7
     i32.gt_s
     if
      local.get $0
      local.get $7
      i32.const 2
      i32.shl
      i32.add
      local.tee $3
      i32.load $0
      local.set $4
      local.get $3
      local.get $0
      local.get $5
      i32.const 2
      i32.shl
      i32.add
      local.tee $3
      i32.load $0
      i32.store $0
      local.get $7
      i32.const 1
      i32.add
      local.set $7
      local.get $3
      local.get $4
      i32.store $0
      local.get $5
      i32.const 1
      i32.sub
      local.set $5
      br $while-continue|11
     end
    end
   else
    loop $while-continue|23
     local.get $1
     local.get $15
     i32.lt_s
     if (result i32)
      local.get $0
      local.get $1
      i32.const 2
      i32.shl
      i32.add
      local.tee $3
      i32.load $0 offset=4
      local.get $3
      i32.load $0
      local.get $2
      i32.load $0
      call_indirect $0 (type $i32_i32_=>_i32)
      i32.const 0
      i32.ge_s
     else
      i32.const 0
     end
     if
      local.get $1
      i32.const 1
      i32.add
      local.set $1
      br $while-continue|23
     end
    end
   end
  end
  local.get $1
  local.tee $7
  i32.const 1
  i32.add
  local.tee $1
  i32.const 32
  i32.lt_s
  if
   local.get $1
   i32.const 31
   local.get $15
   local.get $15
   i32.const 31
   i32.ge_s
   select
   local.tee $7
   i32.const 1
   i32.add
   local.tee $3
   local.get $1
   i32.sub
   i32.const 1
   i32.and
   i32.sub
   local.get $3
   i32.const 1
   i32.and
   local.get $1
   select
   local.set $4
   loop $for-loop|06
    local.get $4
    local.get $7
    i32.le_s
    if
     local.get $0
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     local.tee $3
     i32.load $0 offset=4
     local.set $1
     local.get $3
     i32.load $0
     local.tee $5
     local.tee $3
     local.get $1
     local.get $2
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.le_s
     if
      local.get $1
      local.set $3
      local.get $5
      local.set $1
     end
     local.get $4
     i32.const 1
     i32.sub
     local.set $6
     loop $while-continue|19
      local.get $6
      i32.const 0
      i32.ge_s
      if
       local.get $0
       local.get $6
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       local.tee $5
       local.get $3
       local.get $2
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $0
        local.get $6
        i32.const 2
        i32.shl
        i32.add
        local.get $5
        i32.store $0 offset=8
        local.get $6
        i32.const 1
        i32.sub
        local.set $6
        br $while-continue|19
       end
      end
     end
     local.get $0
     local.get $6
     i32.const 2
     i32.shl
     i32.add
     local.get $3
     i32.store $0 offset=8
     loop $while-continue|211
      local.get $6
      i32.const 0
      i32.ge_s
      if
       local.get $0
       local.get $6
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       local.tee $3
       local.get $1
       local.get $2
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $0
        local.get $6
        i32.const 2
        i32.shl
        i32.add
        local.get $3
        i32.store $0 offset=4
        local.get $6
        i32.const 1
        i32.sub
        local.set $6
        br $while-continue|211
       end
      end
     end
     local.get $0
     local.get $6
     i32.const 2
     i32.shl
     i32.add
     local.get $1
     i32.store $0 offset=4
     local.get $4
     i32.const 2
     i32.add
     local.set $4
     br $for-loop|06
    end
   end
  end
  local.get $8
  local.get $13
  i32.add
  local.set $12
  i32.const 0
  local.set $1
  i32.const 0
  local.set $3
  loop $while-continue|213
   local.get $7
   local.get $15
   i32.lt_s
   if
    local.get $7
    i32.const 1
    i32.add
    local.tee $8
    local.tee $4
    local.get $15
    i32.ne
    if
     local.get $0
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.get $0
     local.get $4
     i32.const 1
     i32.add
     local.tee $6
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.get $2
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     if
      loop $while-continue|016
       local.get $6
       local.get $15
       i32.lt_s
       if (result i32)
        local.get $0
        local.get $6
        i32.const 2
        i32.shl
        i32.add
        local.tee $5
        i32.load $0 offset=4
        local.get $5
        i32.load $0
        local.get $2
        i32.load $0
        call_indirect $0 (type $i32_i32_=>_i32)
        i32.const 31
        i32.shr_u
       else
        i32.const 0
       end
       if
        local.get $6
        i32.const 1
        i32.add
        local.set $6
        br $while-continue|016
       end
      end
      local.get $6
      local.set $5
      loop $while-continue|118
       local.get $4
       local.get $5
       i32.lt_s
       if
        local.get $0
        local.get $4
        i32.const 2
        i32.shl
        i32.add
        local.tee $9
        i32.load $0
        local.set $10
        local.get $9
        local.get $0
        local.get $5
        i32.const 2
        i32.shl
        i32.add
        local.tee $9
        i32.load $0
        i32.store $0
        local.get $4
        i32.const 1
        i32.add
        local.set $4
        local.get $9
        local.get $10
        i32.store $0
        local.get $5
        i32.const 1
        i32.sub
        local.set $5
        br $while-continue|118
       end
      end
     else
      loop $while-continue|220
       local.get $6
       local.get $15
       i32.lt_s
       if (result i32)
        local.get $0
        local.get $6
        i32.const 2
        i32.shl
        i32.add
        local.tee $4
        i32.load $0 offset=4
        local.get $4
        i32.load $0
        local.get $2
        i32.load $0
        call_indirect $0 (type $i32_i32_=>_i32)
        i32.const 0
        i32.ge_s
       else
        i32.const 0
       end
       if
        local.get $6
        i32.const 1
        i32.add
        local.set $6
        br $while-continue|220
       end
      end
     end
     local.get $6
     local.set $4
    end
    local.get $4
    local.get $8
    i32.sub
    i32.const 1
    i32.add
    local.tee $5
    i32.const 32
    i32.lt_s
    if
     local.get $8
     local.get $5
     local.get $15
     local.get $8
     i32.const 31
     i32.add
     local.tee $4
     local.get $4
     local.get $15
     i32.gt_s
     select
     local.tee $4
     local.get $8
     i32.sub
     i32.const 1
     i32.add
     local.tee $6
     local.get $5
     i32.sub
     i32.const 1
     i32.and
     i32.sub
     local.get $6
     i32.const 1
     i32.and
     local.get $5
     select
     i32.add
     local.set $9
     loop $for-loop|023
      local.get $4
      local.get $9
      i32.ge_s
      if
       local.get $0
       local.get $9
       i32.const 2
       i32.shl
       i32.add
       local.tee $6
       i32.load $0 offset=4
       local.set $5
       local.get $6
       i32.load $0
       local.tee $10
       local.tee $6
       local.get $5
       local.get $2
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.le_s
       if
        local.get $5
        local.set $6
        local.get $10
        local.set $5
       end
       local.get $9
       i32.const 1
       i32.sub
       local.set $16
       loop $while-continue|126
        local.get $8
        local.get $16
        i32.le_s
        if
         local.get $0
         local.get $16
         i32.const 2
         i32.shl
         i32.add
         i32.load $0
         local.tee $10
         local.get $6
         local.get $2
         i32.load $0
         call_indirect $0 (type $i32_i32_=>_i32)
         i32.const 0
         i32.gt_s
         if
          local.get $0
          local.get $16
          i32.const 2
          i32.shl
          i32.add
          local.get $10
          i32.store $0 offset=8
          local.get $16
          i32.const 1
          i32.sub
          local.set $16
          br $while-continue|126
         end
        end
       end
       local.get $0
       local.get $16
       i32.const 2
       i32.shl
       i32.add
       local.get $6
       i32.store $0 offset=8
       loop $while-continue|228
        local.get $8
        local.get $16
        i32.le_s
        if
         local.get $0
         local.get $16
         i32.const 2
         i32.shl
         i32.add
         i32.load $0
         local.tee $6
         local.get $5
         local.get $2
         i32.load $0
         call_indirect $0 (type $i32_i32_=>_i32)
         i32.const 0
         i32.gt_s
         if
          local.get $0
          local.get $16
          i32.const 2
          i32.shl
          i32.add
          local.get $6
          i32.store $0 offset=4
          local.get $16
          i32.const 1
          i32.sub
          local.set $16
          br $while-continue|228
         end
        end
       end
       local.get $0
       local.get $16
       i32.const 2
       i32.shl
       i32.add
       local.get $5
       i32.store $0 offset=4
       local.get $9
       i32.const 2
       i32.add
       local.set $9
       br $for-loop|023
      end
     end
    end
    local.get $3
    local.get $8
    i32.add
    i64.extend_i32_u
    i64.const 30
    i64.shl
    local.get $15
    i32.const 1
    i32.add
    i64.extend_i32_u
    local.tee $11
    i64.div_u
    local.get $4
    local.get $8
    i32.add
    i32.const 1
    i32.add
    i64.extend_i32_u
    i64.const 30
    i64.shl
    local.get $11
    i64.div_u
    i64.xor
    i32.wrap_i64
    i32.clz
    local.set $9
    local.get $1
    local.set $5
    loop $for-loop|3
     local.get $5
     local.get $9
     i32.gt_u
     if
      local.get $13
      local.get $5
      i32.const 2
      i32.shl
      i32.add
      i32.load $0
      local.tee $1
      i32.const -1
      i32.ne
      if
       local.get $7
       local.get $12
       local.get $5
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       local.tee $3
       i32.add
       local.set $6
       local.get $3
       i32.const 1
       i32.add
       local.set $16
       loop $for-loop|030
        local.get $1
        local.get $16
        i32.lt_s
        if
         local.get $16
         i32.const 1
         i32.sub
         local.tee $16
         i32.const 2
         i32.shl
         local.tee $10
         local.get $14
         i32.add
         local.get $0
         local.get $10
         i32.add
         i32.load $0
         i32.store $0
         br $for-loop|030
        end
       end
       loop $for-loop|133
        local.get $3
        local.get $7
        i32.lt_s
        if
         local.get $14
         local.get $6
         local.get $3
         i32.sub
         i32.const 2
         i32.shl
         i32.add
         local.get $0
         local.get $3
         i32.const 2
         i32.shl
         i32.add
         i32.load $0 offset=4
         i32.store $0
         local.get $3
         i32.const 1
         i32.add
         local.set $3
         br $for-loop|133
        end
       end
       local.get $1
       local.set $6
       loop $for-loop|2
        local.get $6
        local.get $7
        i32.le_s
        if
         local.get $14
         local.get $3
         i32.const 2
         i32.shl
         i32.add
         i32.load $0
         local.tee $17
         local.get $14
         local.get $16
         i32.const 2
         i32.shl
         i32.add
         i32.load $0
         local.tee $10
         local.get $2
         i32.load $0
         call_indirect $0 (type $i32_i32_=>_i32)
         i32.const 0
         i32.lt_s
         if
          local.get $0
          local.get $6
          i32.const 2
          i32.shl
          i32.add
          local.get $17
          i32.store $0
          local.get $3
          i32.const 1
          i32.sub
          local.set $3
         else
          local.get $0
          local.get $6
          i32.const 2
          i32.shl
          i32.add
          local.get $10
          i32.store $0
          local.get $16
          i32.const 1
          i32.add
          local.set $16
         end
         local.get $6
         i32.const 1
         i32.add
         local.set $6
         br $for-loop|2
        end
       end
       local.get $13
       local.get $5
       i32.const 2
       i32.shl
       i32.add
       i32.const -1
       i32.store $0
       local.get $1
       local.set $3
      end
      local.get $5
      i32.const 1
      i32.sub
      local.set $5
      br $for-loop|3
     end
    end
    local.get $9
    i32.const 2
    i32.shl
    local.tee $1
    local.get $13
    i32.add
    local.get $3
    i32.store $0
    local.get $1
    local.get $12
    i32.add
    local.get $7
    i32.store $0
    local.get $8
    local.set $3
    local.get $4
    local.set $7
    local.get $9
    local.set $1
    br $while-continue|213
   end
  end
  local.get $1
  local.set $5
  loop $for-loop|4
   local.get $5
   if
    local.get $13
    local.get $5
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.tee $1
    i32.const -1
    i32.ne
    if
     local.get $15
     local.get $12
     local.get $5
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.tee $7
     i32.add
     local.set $4
     local.get $7
     i32.const 1
     i32.add
     local.set $3
     loop $for-loop|037
      local.get $1
      local.get $3
      i32.lt_s
      if
       local.get $3
       i32.const 1
       i32.sub
       local.tee $3
       i32.const 2
       i32.shl
       local.tee $6
       local.get $14
       i32.add
       local.get $0
       local.get $6
       i32.add
       i32.load $0
       i32.store $0
       br $for-loop|037
      end
     end
     loop $for-loop|140
      local.get $7
      local.get $15
      i32.lt_s
      if
       local.get $14
       local.get $4
       local.get $7
       i32.sub
       i32.const 2
       i32.shl
       i32.add
       local.get $0
       local.get $7
       i32.const 2
       i32.shl
       i32.add
       i32.load $0 offset=4
       i32.store $0
       local.get $7
       i32.const 1
       i32.add
       local.set $7
       br $for-loop|140
      end
     end
     loop $for-loop|243
      local.get $1
      local.get $15
      i32.le_s
      if
       local.get $14
       local.get $7
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       local.tee $4
       local.get $14
       local.get $3
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       local.tee $6
       local.get $2
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.lt_s
       if
        local.get $0
        local.get $1
        i32.const 2
        i32.shl
        i32.add
        local.get $4
        i32.store $0
        local.get $7
        i32.const 1
        i32.sub
        local.set $7
       else
        local.get $0
        local.get $1
        i32.const 2
        i32.shl
        i32.add
        local.get $6
        i32.store $0
        local.get $3
        i32.const 1
        i32.add
        local.set $3
       end
       local.get $1
       i32.const 1
       i32.add
       local.set $1
       br $for-loop|243
      end
     end
    end
    local.get $5
    i32.const 1
    i32.sub
    local.set $5
    br $for-loop|4
   end
  end
  local.get $14
  i32.const 15
  i32.and
  i32.const 1
  local.get $14
  select
  if
   unreachable
  end
  global.get $~lib/rt/stub/offset
  local.get $14
  local.get $14
  i32.const 4
  i32.sub
  local.tee $0
  i32.load $0
  i32.add
  i32.eq
  if
   local.get $0
   global.set $~lib/rt/stub/offset
  end
  local.get $13
  i32.const 15
  i32.and
  i32.const 1
  local.get $13
  select
  if
   unreachable
  end
  global.get $~lib/rt/stub/offset
  local.get $13
  local.get $13
  i32.const 4
  i32.sub
  local.tee $0
  i32.load $0
  i32.add
  i32.eq
  if
   local.get $0
   global.set $~lib/rt/stub/offset
  end
 )
 (func $~lib/util/sort/COMPARATOR<u32>~anonymous|0 (type $i32_i32_=>_i32) (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  local.get $1
  i32.gt_u
  local.get $0
  local.get $1
  i32.lt_u
  i32.sub
 )
 (func $std/array/assertStableSortedForComplexObjects~anonymous|0 (type $i32_i32_=>_i32) (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.load $0
  local.get $1
  i32.load $0
  i32.sub
 )
 (func $start:std/array~anonymous|49 (type $i32_i32_=>_i32) (param $0 i32) (param $1 i32) (result i32)
  local.get $1
  local.get $0
  i32.sub
 )
 (func $start:std/array~anonymous|52 (type $i32_i32_=>_i32) (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.load $0 offset=12
  i32.eqz
  if
   unreachable
  end
  local.get $0
  i32.load $0 offset=4
  i32.load $0
  local.set $0
  local.get $1
  i32.load $0 offset=12
  i32.eqz
  if
   unreachable
  end
  local.get $0
  local.get $1
  i32.load $0 offset=4
  i32.load $0
  i32.sub
 )
 (func $start:std/array~anonymous|54 (type $i32_i32_i32_=>_i32) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  local.get $0
  i32.load $0 offset=12
  i32.const 1
  i32.ne
  if
   unreachable
  end
  local.get $0
  i32.load $0 offset=12
  local.tee $6
  i32.const 1
  i32.add
  local.tee $7
  local.tee $1
  local.get $0
  i32.load $0 offset=8
  local.tee $3
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   local.get $1
   i32.const 268435455
   i32.gt_u
   if
    unreachable
   end
   local.get $0
   i32.load $0
   local.set $5
   i32.const 1073741820
   local.get $3
   i32.const 1
   i32.shl
   local.tee $2
   local.get $2
   i32.const 1073741820
   i32.ge_u
   select
   local.tee $2
   i32.const 8
   local.get $1
   local.get $1
   i32.const 8
   i32.le_u
   select
   i32.const 2
   i32.shl
   local.tee $1
   local.get $1
   local.get $2
   i32.lt_u
   select
   local.tee $8
   i32.const 1073741804
   i32.gt_u
   if
    unreachable
   end
   local.get $5
   i32.const 16
   i32.sub
   local.tee $2
   i32.const 15
   i32.and
   i32.const 1
   local.get $2
   select
   if
    unreachable
   end
   global.get $~lib/rt/stub/offset
   local.get $2
   i32.const 4
   i32.sub
   local.tee $1
   i32.load $0
   local.tee $4
   local.get $2
   i32.add
   i32.eq
   local.set $9
   local.get $8
   i32.const 16
   i32.add
   local.tee $10
   i32.const 19
   i32.add
   i32.const -16
   i32.and
   i32.const 4
   i32.sub
   local.set $11
   local.get $4
   local.get $10
   i32.lt_u
   if
    local.get $9
    if
     local.get $10
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     local.get $2
     local.get $11
     i32.add
     local.tee $4
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $4
     global.set $~lib/rt/stub/offset
     local.get $1
     local.get $11
     i32.store $0
    else
     local.get $11
     local.get $4
     i32.const 1
     i32.shl
     local.tee $1
     local.get $1
     local.get $11
     i32.lt_u
     select
     local.tee $9
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     global.get $~lib/rt/stub/offset
     i32.eqz
     if
      i32.const 9932
      global.set $~lib/rt/stub/offset
     end
     global.get $~lib/rt/stub/offset
     local.tee $1
     local.set $10
     local.get $1
     i32.const 4
     i32.add
     local.tee $1
     local.get $9
     i32.const 19
     i32.add
     i32.const -16
     i32.and
     i32.const 4
     i32.sub
     local.tee $9
     i32.add
     local.tee $11
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $11
     global.set $~lib/rt/stub/offset
     local.get $10
     local.get $9
     i32.store $0
     local.get $1
     local.get $2
     local.get $4
     memory.copy $0 $0
     local.get $1
     local.set $2
    end
   else
    local.get $9
    if
     local.get $2
     local.get $11
     i32.add
     global.set $~lib/rt/stub/offset
     local.get $1
     local.get $11
     i32.store $0
    end
   end
   local.get $2
   i32.const 4
   i32.sub
   local.get $8
   i32.store $0 offset=8
   local.get $3
   local.get $2
   i32.const 16
   i32.add
   local.tee $1
   i32.add
   i32.const 0
   local.get $8
   local.get $3
   i32.sub
   memory.fill $0
   local.get $1
   local.get $5
   i32.ne
   if
    local.get $0
    local.get $1
    i32.store $0
    local.get $0
    local.get $1
    i32.store $0 offset=4
   end
   local.get $0
   local.get $8
   i32.store $0 offset=8
  end
  local.get $0
  i32.load $0 offset=4
  local.get $6
  i32.const 2
  i32.shl
  i32.add
  i32.const 3
  i32.store $0
  local.get $0
  local.get $7
  i32.store $0 offset=12
  local.get $0
  i32.load $0 offset=12
  i32.const 2
  i32.ne
  if
   unreachable
  end
  local.get $0
 )
 (func $start:std/array (type $none_=>_none)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i64)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 f32)
  (local $9 f64)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i64)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 44
  i32.add
  local.tee $2
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $2
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 44
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 3
  i32.store $0 offset=4
  local.get $0
  i32.const 16
  i32.store $0 offset=8
  local.get $1
  i32.const 16
  i32.add
  local.tee $0
  i32.const 0
  i32.store $0
  local.get $0
  i32.const 0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0 offset=8
  local.get $0
  i32.const 0
  i32.store $0 offset=12
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $1
  i32.const 4
  i32.add
  local.tee $2
  i32.const 60
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $1
  i32.const 60
  i32.store $0
  local.get $2
  i32.const 4
  i32.sub
  local.tee $1
  i32.const 0
  i32.store $0 offset=4
  local.get $1
  i32.const 32
  i32.store $0 offset=8
  local.get $2
  i32.const 16
  i32.add
  local.tee $1
  i32.const 0
  i32.const 32
  memory.fill $0
  local.get $0
  local.get $1
  i32.store $0
  local.get $0
  local.get $1
  i32.store $0 offset=4
  local.get $0
  i32.const 32
  i32.store $0 offset=8
  local.get $0
  i32.const 0
  i32.store $0 offset=12
  local.get $0
  global.set $std/array/arr
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 28
  i32.add
  local.tee $2
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $2
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 28
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 4
  i32.store $0 offset=4
  local.get $0
  i32.const 4
  i32.store $0 offset=8
  local.get $1
  i32.const 0
  i32.store $0 offset=16
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 28
  i32.add
  local.tee $2
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $2
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 28
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 5
  i32.store $0 offset=4
  local.get $0
  i32.const 12
  i32.store $0 offset=8
  local.get $1
  i32.const 16
  i32.add
  local.tee $0
  i32.eqz
  if
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $1
   i32.const 28
   i32.add
   local.tee $2
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $2
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 28
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 2
   i32.store $0 offset=4
   local.get $0
   i32.const 12
   i32.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.set $0
  end
  local.get $0
  i32.const 0
  i32.store $0
  local.get $0
  i32.const 0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $1
  i32.const 4
  i32.add
  local.tee $2
  i32.const 28
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $1
  i32.const 28
  i32.store $0
  local.get $2
  i32.const 4
  i32.sub
  local.tee $1
  i32.const 0
  i32.store $0 offset=4
  local.get $1
  i32.const 1
  i32.store $0 offset=8
  local.get $2
  i32.const 0
  i32.store8 $0 offset=16
  local.get $0
  local.get $2
  i32.const 16
  i32.add
  local.tee $1
  i32.store $0
  local.get $0
  local.get $1
  i32.store $0 offset=4
  local.get $0
  i32.const 1
  i32.store $0 offset=8
  global.get $std/array/arr
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 28
  i32.add
  local.tee $2
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $2
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 28
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 0
  i32.store $0 offset=4
  local.get $0
  i32.const 5
  i32.store $0 offset=8
  local.get $1
  i32.const 16
  i32.add
  local.tee $2
  local.tee $0
  i32.const 1136
  i32.load $0
  i32.store $0
  i32.const 1140
  local.set $1
  local.get $0
  i32.const 4
  i32.add
  local.set $0
  i32.const 1
  local.set $3
  local.get $3
  if
   local.get $0
   local.get $1
   i32.load8_u $0
   i32.store8 $0
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 44
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 44
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 6
  i32.store $0 offset=4
  local.get $0
  i32.const 16
  i32.store $0 offset=8
  local.get $1
  i32.const 16
  i32.add
  local.tee $10
  local.get $2
  i32.store $0
  local.get $10
  local.get $2
  i32.store $0 offset=4
  local.get $10
  i32.const 5
  i32.store $0 offset=8
  local.get $10
  i32.const 5
  i32.store $0 offset=12
  local.get $10
  i32.load $0 offset=4
  local.set $0
  i32.const 1
  local.get $10
  i32.load $0 offset=12
  local.tee $1
  local.get $1
  i32.const 1
  i32.gt_s
  select
  local.tee $2
  i32.const 3
  local.get $1
  local.get $1
  i32.const 3
  i32.gt_s
  select
  local.tee $1
  i32.lt_s
  if
   local.get $0
   local.get $2
   i32.add
   i32.const 1
   local.get $1
   local.get $2
   i32.sub
   memory.fill $0
  end
  block $std/array/isArraysEqual<u8>|inlined.0 (result i32)
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $1
   i32.const 28
   i32.add
   local.tee $2
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $2
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 28
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 5
   i32.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $1
   local.tee $0
   i32.const 1200
   i32.load $0
   i32.store $0
   i32.const 1204
   local.set $3
   local.get $0
   i32.const 4
   i32.add
   local.set $0
   i32.const 1
   local.set $5
   local.get $5
   if
    local.get $0
    local.get $3
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $2
   i32.const 44
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 6
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $2
   local.get $1
   i32.store $0
   local.get $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   i32.const 5
   i32.store $0 offset=8
   local.get $2
   i32.const 5
   i32.store $0 offset=12
   i32.const 0
   local.get $10
   i32.load $0 offset=12
   local.tee $1
   local.get $2
   i32.load $0 offset=12
   i32.ne
   br_if $std/array/isArraysEqual<u8>|inlined.0
   drop
   i32.const 1
   local.get $2
   local.get $10
   i32.eq
   br_if $std/array/isArraysEqual<u8>|inlined.0
   drop
   i32.const 0
   local.set $0
   loop $for-loop|0
    local.get $0
    local.get $1
    i32.lt_s
    if
     local.get $0
     local.get $10
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $0
     local.get $2
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $10
     i32.load $0 offset=4
     local.get $0
     i32.add
     i32.load8_u $0
     local.get $2
     i32.load $0 offset=4
     local.get $0
     i32.add
     i32.load8_u $0
     i32.ne
     br_if $std/array/isArraysEqual<u8>|inlined.0
     drop
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|0
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  local.get $10
  i32.load $0 offset=4
  local.set $0
  local.get $10
  i32.load $0 offset=12
  local.tee $1
  i32.const 0
  local.get $1
  i32.const 0
  i32.le_s
  select
  local.tee $2
  local.get $1
  i32.lt_s
  if
   local.get $0
   local.get $2
   i32.add
   i32.const 0
   local.get $1
   local.get $2
   i32.sub
   memory.fill $0
  end
  block $std/array/isArraysEqual<u8>|inlined.1 (result i32)
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $1
   i32.const 28
   i32.add
   local.tee $2
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $2
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 28
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 5
   i32.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $1
   local.tee $0
   i32.const 1280
   i32.load $0
   i32.store $0
   i32.const 1284
   local.set $3
   local.get $0
   i32.const 4
   i32.add
   local.set $0
   i32.const 1
   local.set $5
   local.get $5
   if
    local.get $0
    local.get $3
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $2
   i32.const 44
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 6
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $2
   local.get $1
   i32.store $0
   local.get $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   i32.const 5
   i32.store $0 offset=8
   local.get $2
   i32.const 5
   i32.store $0 offset=12
   i32.const 0
   local.get $10
   i32.load $0 offset=12
   local.tee $1
   local.get $2
   i32.load $0 offset=12
   i32.ne
   br_if $std/array/isArraysEqual<u8>|inlined.1
   drop
   i32.const 1
   local.get $2
   local.get $10
   i32.eq
   br_if $std/array/isArraysEqual<u8>|inlined.1
   drop
   i32.const 0
   local.set $0
   loop $for-loop|1
    local.get $0
    local.get $1
    i32.lt_s
    if
     local.get $0
     local.get $10
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $0
     local.get $2
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $10
     i32.load $0 offset=4
     local.get $0
     i32.add
     i32.load8_u $0
     local.get $2
     i32.load $0 offset=4
     local.get $0
     i32.add
     i32.load8_u $0
     i32.ne
     br_if $std/array/isArraysEqual<u8>|inlined.1
     drop
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|1
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  local.get $10
  i32.load $0 offset=4
  local.set $0
  local.get $10
  i32.load $0 offset=12
  local.tee $1
  i32.const 0
  local.get $1
  i32.const 0
  i32.le_s
  select
  local.tee $2
  local.get $1
  i32.const 3
  i32.sub
  local.tee $1
  i32.lt_s
  if
   local.get $0
   local.get $2
   i32.add
   i32.const 1
   local.get $1
   local.get $2
   i32.sub
   memory.fill $0
  end
  block $std/array/isArraysEqual<u8>|inlined.2 (result i32)
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $1
   i32.const 28
   i32.add
   local.tee $2
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $2
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 28
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 5
   i32.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $1
   local.tee $0
   i32.const 1312
   i32.load $0
   i32.store $0
   i32.const 1316
   local.set $3
   local.get $0
   i32.const 4
   i32.add
   local.set $0
   i32.const 1
   local.set $5
   local.get $5
   if
    local.get $0
    local.get $3
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $2
   i32.const 44
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 6
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $2
   local.get $1
   i32.store $0
   local.get $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   i32.const 5
   i32.store $0 offset=8
   local.get $2
   i32.const 5
   i32.store $0 offset=12
   i32.const 0
   local.get $10
   i32.load $0 offset=12
   local.tee $1
   local.get $2
   i32.load $0 offset=12
   i32.ne
   br_if $std/array/isArraysEqual<u8>|inlined.2
   drop
   i32.const 1
   local.get $2
   local.get $10
   i32.eq
   br_if $std/array/isArraysEqual<u8>|inlined.2
   drop
   i32.const 0
   local.set $0
   loop $for-loop|2
    local.get $0
    local.get $1
    i32.lt_s
    if
     local.get $0
     local.get $10
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $0
     local.get $2
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $10
     i32.load $0 offset=4
     local.get $0
     i32.add
     i32.load8_u $0
     local.get $2
     i32.load $0 offset=4
     local.get $0
     i32.add
     i32.load8_u $0
     i32.ne
     br_if $std/array/isArraysEqual<u8>|inlined.2
     drop
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|2
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  local.get $10
  i32.load $0 offset=4
  local.set $0
  local.get $10
  i32.load $0 offset=12
  local.tee $1
  i32.const 2
  i32.sub
  local.set $2
  local.get $1
  local.get $2
  i32.gt_s
  if
   local.get $0
   local.get $2
   i32.add
   i32.const 2
   local.get $1
   local.get $2
   i32.sub
   memory.fill $0
  end
  block $std/array/isArraysEqual<u8>|inlined.3 (result i32)
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $1
   i32.const 28
   i32.add
   local.tee $2
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $2
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 28
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 5
   i32.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $1
   local.tee $0
   i32.const 1344
   i32.load $0
   i32.store $0
   i32.const 1348
   local.set $3
   local.get $0
   i32.const 4
   i32.add
   local.set $0
   i32.const 1
   local.set $5
   local.get $5
   if
    local.get $0
    local.get $3
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $2
   i32.const 44
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 6
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $2
   local.get $1
   i32.store $0
   local.get $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   i32.const 5
   i32.store $0 offset=8
   local.get $2
   i32.const 5
   i32.store $0 offset=12
   i32.const 0
   local.get $10
   i32.load $0 offset=12
   local.tee $1
   local.get $2
   i32.load $0 offset=12
   i32.ne
   br_if $std/array/isArraysEqual<u8>|inlined.3
   drop
   i32.const 1
   local.get $2
   local.get $10
   i32.eq
   br_if $std/array/isArraysEqual<u8>|inlined.3
   drop
   i32.const 0
   local.set $0
   loop $for-loop|3
    local.get $0
    local.get $1
    i32.lt_s
    if
     local.get $0
     local.get $10
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $0
     local.get $2
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $10
     i32.load $0 offset=4
     local.get $0
     i32.add
     i32.load8_u $0
     local.get $2
     i32.load $0 offset=4
     local.get $0
     i32.add
     i32.load8_u $0
     i32.ne
     br_if $std/array/isArraysEqual<u8>|inlined.3
     drop
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|3
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  local.get $10
  i32.load $0 offset=4
  local.set $0
  i32.const 1
  local.get $10
  i32.load $0 offset=12
  local.tee $1
  local.get $1
  i32.const 1
  i32.gt_s
  select
  local.tee $2
  local.get $1
  i32.const 0
  local.get $1
  i32.const 0
  i32.le_s
  select
  local.tee $1
  i32.lt_s
  if
   local.get $0
   local.get $2
   i32.add
   i32.const 0
   local.get $1
   local.get $2
   i32.sub
   memory.fill $0
  end
  block $std/array/isArraysEqual<u8>|inlined.4 (result i32)
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $1
   i32.const 28
   i32.add
   local.tee $2
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $2
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 28
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 5
   i32.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $1
   local.tee $0
   i32.const 1376
   i32.load $0
   i32.store $0
   i32.const 1380
   local.set $3
   local.get $0
   i32.const 4
   i32.add
   local.set $0
   i32.const 1
   local.set $5
   local.get $5
   if
    local.get $0
    local.get $3
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $2
   i32.const 44
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 6
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $2
   local.get $1
   i32.store $0
   local.get $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   i32.const 5
   i32.store $0 offset=8
   local.get $2
   i32.const 5
   i32.store $0 offset=12
   i32.const 0
   local.get $10
   i32.load $0 offset=12
   local.tee $1
   local.get $2
   i32.load $0 offset=12
   i32.ne
   br_if $std/array/isArraysEqual<u8>|inlined.4
   drop
   i32.const 1
   local.get $2
   local.get $10
   i32.eq
   br_if $std/array/isArraysEqual<u8>|inlined.4
   drop
   i32.const 0
   local.set $0
   loop $for-loop|4
    local.get $0
    local.get $1
    i32.lt_s
    if
     local.get $0
     local.get $10
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $0
     local.get $2
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $10
     i32.load $0 offset=4
     local.get $0
     i32.add
     i32.load8_u $0
     local.get $2
     i32.load $0 offset=4
     local.get $0
     i32.add
     i32.load8_u $0
     i32.ne
     br_if $std/array/isArraysEqual<u8>|inlined.4
     drop
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|4
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  local.get $10
  i32.load $0 offset=4
  local.set $0
  local.get $10
  i32.load $0 offset=12
  local.tee $1
  i32.const 0
  local.get $1
  i32.const 0
  i32.le_s
  select
  local.tee $2
  local.get $1
  i32.lt_s
  if
   local.get $0
   local.get $2
   i32.add
   i32.const -1
   local.get $1
   local.get $2
   i32.sub
   memory.fill $0
  end
  block $std/array/isArraysEqual<u8>|inlined.5 (result i32)
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $1
   i32.const 28
   i32.add
   local.tee $2
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $2
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 28
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 5
   i32.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $1
   local.tee $0
   i32.const 1408
   i32.load $0
   i32.store $0
   i32.const 1412
   local.set $3
   local.get $0
   i32.const 4
   i32.add
   local.set $0
   i32.const 1
   local.set $5
   local.get $5
   if
    local.get $0
    local.get $3
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $2
   i32.const 44
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 6
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $0
   local.get $1
   i32.store $0
   local.get $0
   local.get $1
   i32.store $0 offset=4
   local.get $0
   i32.const 5
   i32.store $0 offset=8
   local.get $0
   i32.const 5
   i32.store $0 offset=12
   i32.const 0
   local.get $10
   i32.load $0 offset=12
   local.tee $2
   local.get $0
   i32.load $0 offset=12
   i32.ne
   br_if $std/array/isArraysEqual<u8>|inlined.5
   drop
   i32.const 1
   local.get $0
   local.get $10
   i32.eq
   br_if $std/array/isArraysEqual<u8>|inlined.5
   drop
   i32.const 0
   local.set $1
   loop $for-loop|5
    local.get $1
    local.get $2
    i32.lt_s
    if
     local.get $1
     local.get $10
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $1
     local.get $0
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $10
     i32.load $0 offset=4
     local.get $1
     i32.add
     i32.load8_u $0
     local.get $0
     i32.load $0 offset=4
     local.get $1
     i32.add
     i32.load8_u $0
     i32.ne
     br_if $std/array/isArraysEqual<u8>|inlined.5
     drop
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|5
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 44
  i32.add
  local.tee $2
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $2
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 44
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 0
  i32.store $0 offset=4
  local.get $0
  i32.const 20
  i32.store $0 offset=8
  local.get $1
  i32.const 16
  i32.add
  local.tee $2
  i32.const 1440
  i64.load $0
  i64.store $0
  local.get $2
  i32.const 1448
  i64.load $0
  i64.store $0 offset=8
  local.get $2
  i32.const 16
  i32.add
  local.tee $0
  i32.const 1456
  i32.load $0
  i32.store $0
  i32.const 1460
  local.set $1
  local.get $0
  i32.const 4
  i32.add
  local.set $0
  i32.const 0
  local.set $3
  local.get $3
  if
   local.get $0
   local.get $1
   i32.load8_u $0
   i32.store8 $0
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 44
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 44
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 7
  i32.store $0 offset=4
  local.get $0
  i32.const 16
  i32.store $0 offset=8
  local.get $1
  i32.const 16
  i32.add
  local.tee $1
  local.get $2
  i32.store $0
  local.get $1
  local.get $2
  i32.store $0 offset=4
  local.get $1
  i32.const 20
  i32.store $0 offset=8
  local.get $1
  i32.const 5
  i32.store $0 offset=12
  local.get $1
  i32.load $0 offset=4
  local.set $2
  i32.const 1
  local.get $1
  i32.load $0 offset=12
  local.tee $3
  local.get $3
  i32.const 1
  i32.gt_s
  select
  local.set $0
  i32.const 3
  local.get $3
  local.get $3
  i32.const 3
  i32.gt_s
  select
  local.set $3
  loop $for-loop|011
   local.get $0
   local.get $3
   i32.lt_s
   if
    local.get $2
    local.get $0
    i32.const 2
    i32.shl
    i32.add
    i32.const 1
    i32.store $0
    local.get $0
    i32.const 1
    i32.add
    local.set $0
    br $for-loop|011
   end
  end
  block $std/array/isArraysEqual<u32>|inlined.0 (result i32)
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $2
   i32.const 44
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 20
   i32.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $2
   i32.const 1488
   i64.load $0
   i64.store $0
   local.get $2
   i32.const 1496
   i64.load $0
   i64.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $0
   i32.const 1504
   i32.load $0
   i32.store $0
   i32.const 1508
   local.set $3
   local.get $0
   i32.const 4
   i32.add
   local.set $0
   i32.const 0
   local.set $5
   local.get $5
   if
    local.get $0
    local.get $3
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $3
   i32.const 44
   i32.add
   local.tee $5
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $5
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $3
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 7
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $3
   i32.const 16
   i32.add
   local.tee $3
   local.get $2
   i32.store $0
   local.get $3
   local.get $2
   i32.store $0 offset=4
   local.get $3
   i32.const 20
   i32.store $0 offset=8
   local.get $3
   i32.const 5
   i32.store $0 offset=12
   i32.const 0
   local.get $1
   i32.load $0 offset=12
   local.tee $2
   local.get $3
   i32.load $0 offset=12
   i32.ne
   br_if $std/array/isArraysEqual<u32>|inlined.0
   drop
   i32.const 1
   local.get $1
   local.get $3
   i32.eq
   br_if $std/array/isArraysEqual<u32>|inlined.0
   drop
   i32.const 0
   local.set $0
   loop $for-loop|6
    local.get $0
    local.get $2
    i32.lt_s
    if
     local.get $0
     local.get $1
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $0
     local.get $3
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $0
     i32.const 2
     i32.shl
     local.tee $5
     local.get $1
     i32.load $0 offset=4
     i32.add
     i32.load $0
     local.get $3
     i32.load $0 offset=4
     local.get $5
     i32.add
     i32.load $0
     i32.ne
     br_if $std/array/isArraysEqual<u32>|inlined.0
     drop
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|6
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  local.get $1
  i32.load $0 offset=4
  local.set $0
  local.get $1
  i32.load $0 offset=12
  local.tee $2
  i32.const 0
  local.get $2
  i32.const 0
  i32.le_s
  select
  local.tee $3
  local.get $2
  i32.lt_s
  if
   local.get $0
   local.get $3
   i32.const 2
   i32.shl
   i32.add
   i32.const 0
   local.get $2
   local.get $3
   i32.sub
   i32.const 2
   i32.shl
   memory.fill $0
  end
  block $std/array/isArraysEqual<u32>|inlined.1 (result i32)
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $2
   i32.const 44
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 20
   i32.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $2
   i32.const 1536
   i64.load $0
   i64.store $0
   local.get $2
   i32.const 1544
   i64.load $0
   i64.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $0
   i32.const 1552
   i32.load $0
   i32.store $0
   i32.const 1556
   local.set $3
   local.get $0
   i32.const 4
   i32.add
   local.set $0
   i32.const 0
   local.set $5
   local.get $5
   if
    local.get $0
    local.get $3
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $3
   i32.const 44
   i32.add
   local.tee $5
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $5
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $3
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 7
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $3
   i32.const 16
   i32.add
   local.tee $3
   local.get $2
   i32.store $0
   local.get $3
   local.get $2
   i32.store $0 offset=4
   local.get $3
   i32.const 20
   i32.store $0 offset=8
   local.get $3
   i32.const 5
   i32.store $0 offset=12
   i32.const 0
   local.get $1
   i32.load $0 offset=12
   local.tee $2
   local.get $3
   i32.load $0 offset=12
   i32.ne
   br_if $std/array/isArraysEqual<u32>|inlined.1
   drop
   i32.const 1
   local.get $1
   local.get $3
   i32.eq
   br_if $std/array/isArraysEqual<u32>|inlined.1
   drop
   i32.const 0
   local.set $0
   loop $for-loop|7
    local.get $0
    local.get $2
    i32.lt_s
    if
     local.get $0
     local.get $1
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $0
     local.get $3
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $0
     i32.const 2
     i32.shl
     local.tee $5
     local.get $1
     i32.load $0 offset=4
     i32.add
     i32.load $0
     local.get $3
     i32.load $0 offset=4
     local.get $5
     i32.add
     i32.load $0
     i32.ne
     br_if $std/array/isArraysEqual<u32>|inlined.1
     drop
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|7
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  local.get $1
  i32.load $0 offset=4
  local.set $2
  local.get $1
  i32.load $0 offset=12
  local.tee $3
  i32.const 0
  local.get $3
  i32.const 0
  i32.le_s
  select
  local.set $0
  local.get $3
  i32.const 3
  i32.sub
  local.set $3
  loop $for-loop|021
   local.get $0
   local.get $3
   i32.lt_s
   if
    local.get $2
    local.get $0
    i32.const 2
    i32.shl
    i32.add
    i32.const 1
    i32.store $0
    local.get $0
    i32.const 1
    i32.add
    local.set $0
    br $for-loop|021
   end
  end
  block $std/array/isArraysEqual<u32>|inlined.2 (result i32)
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $2
   i32.const 44
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 20
   i32.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $2
   i32.const 1584
   i64.load $0
   i64.store $0
   local.get $2
   i32.const 1592
   i64.load $0
   i64.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $0
   i32.const 1600
   i32.load $0
   i32.store $0
   i32.const 1604
   local.set $3
   local.get $0
   i32.const 4
   i32.add
   local.set $0
   i32.const 0
   local.set $5
   local.get $5
   if
    local.get $0
    local.get $3
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $3
   i32.const 44
   i32.add
   local.tee $5
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $5
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $3
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 7
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $3
   i32.const 16
   i32.add
   local.tee $3
   local.get $2
   i32.store $0
   local.get $3
   local.get $2
   i32.store $0 offset=4
   local.get $3
   i32.const 20
   i32.store $0 offset=8
   local.get $3
   i32.const 5
   i32.store $0 offset=12
   i32.const 0
   local.get $1
   i32.load $0 offset=12
   local.tee $2
   local.get $3
   i32.load $0 offset=12
   i32.ne
   br_if $std/array/isArraysEqual<u32>|inlined.2
   drop
   i32.const 1
   local.get $1
   local.get $3
   i32.eq
   br_if $std/array/isArraysEqual<u32>|inlined.2
   drop
   i32.const 0
   local.set $0
   loop $for-loop|8
    local.get $0
    local.get $2
    i32.lt_s
    if
     local.get $0
     local.get $1
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $0
     local.get $3
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $0
     i32.const 2
     i32.shl
     local.tee $5
     local.get $1
     i32.load $0 offset=4
     i32.add
     i32.load $0
     local.get $3
     i32.load $0 offset=4
     local.get $5
     i32.add
     i32.load $0
     i32.ne
     br_if $std/array/isArraysEqual<u32>|inlined.2
     drop
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|8
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  local.get $1
  i32.load $0 offset=4
  local.set $2
  local.get $1
  i32.load $0 offset=12
  local.tee $3
  i32.const 2
  i32.sub
  local.set $0
  loop $for-loop|026
   local.get $0
   local.get $3
   i32.lt_s
   if
    local.get $2
    local.get $0
    i32.const 2
    i32.shl
    i32.add
    i32.const 2
    i32.store $0
    local.get $0
    i32.const 1
    i32.add
    local.set $0
    br $for-loop|026
   end
  end
  block $std/array/isArraysEqual<u32>|inlined.3 (result i32)
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $2
   i32.const 44
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 20
   i32.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $2
   i32.const 1632
   i64.load $0
   i64.store $0
   local.get $2
   i32.const 1640
   i64.load $0
   i64.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $0
   i32.const 1648
   i32.load $0
   i32.store $0
   i32.const 1652
   local.set $3
   local.get $0
   i32.const 4
   i32.add
   local.set $0
   i32.const 0
   local.set $5
   local.get $5
   if
    local.get $0
    local.get $3
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $3
   i32.const 44
   i32.add
   local.tee $5
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $5
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $3
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 7
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $3
   i32.const 16
   i32.add
   local.tee $3
   local.get $2
   i32.store $0
   local.get $3
   local.get $2
   i32.store $0 offset=4
   local.get $3
   i32.const 20
   i32.store $0 offset=8
   local.get $3
   i32.const 5
   i32.store $0 offset=12
   i32.const 0
   local.get $1
   i32.load $0 offset=12
   local.tee $2
   local.get $3
   i32.load $0 offset=12
   i32.ne
   br_if $std/array/isArraysEqual<u32>|inlined.3
   drop
   i32.const 1
   local.get $1
   local.get $3
   i32.eq
   br_if $std/array/isArraysEqual<u32>|inlined.3
   drop
   i32.const 0
   local.set $0
   loop $for-loop|9
    local.get $0
    local.get $2
    i32.lt_s
    if
     local.get $0
     local.get $1
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $0
     local.get $3
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $0
     i32.const 2
     i32.shl
     local.tee $5
     local.get $1
     i32.load $0 offset=4
     i32.add
     i32.load $0
     local.get $3
     i32.load $0 offset=4
     local.get $5
     i32.add
     i32.load $0
     i32.ne
     br_if $std/array/isArraysEqual<u32>|inlined.3
     drop
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|9
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  local.get $1
  i32.load $0 offset=4
  local.set $0
  i32.const 1
  local.get $1
  i32.load $0 offset=12
  local.tee $2
  local.get $2
  i32.const 1
  i32.gt_s
  select
  local.tee $3
  local.get $2
  i32.const 0
  local.get $2
  i32.const 0
  i32.le_s
  select
  local.tee $2
  i32.lt_s
  if
   local.get $0
   local.get $3
   i32.const 2
   i32.shl
   i32.add
   i32.const 0
   local.get $2
   local.get $3
   i32.sub
   i32.const 2
   i32.shl
   memory.fill $0
  end
  block $std/array/isArraysEqual<u32>|inlined.4 (result i32)
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $2
   i32.const 44
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 20
   i32.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $2
   i32.const 1680
   i64.load $0
   i64.store $0
   local.get $2
   i32.const 1688
   i64.load $0
   i64.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $0
   i32.const 1696
   i32.load $0
   i32.store $0
   i32.const 1700
   local.set $3
   local.get $0
   i32.const 4
   i32.add
   local.set $0
   i32.const 0
   local.set $5
   local.get $5
   if
    local.get $0
    local.get $3
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $3
   i32.const 44
   i32.add
   local.tee $5
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $5
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $3
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 7
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $3
   i32.const 16
   i32.add
   local.tee $3
   local.get $2
   i32.store $0
   local.get $3
   local.get $2
   i32.store $0 offset=4
   local.get $3
   i32.const 20
   i32.store $0 offset=8
   local.get $3
   i32.const 5
   i32.store $0 offset=12
   i32.const 0
   local.get $1
   i32.load $0 offset=12
   local.tee $2
   local.get $3
   i32.load $0 offset=12
   i32.ne
   br_if $std/array/isArraysEqual<u32>|inlined.4
   drop
   i32.const 1
   local.get $1
   local.get $3
   i32.eq
   br_if $std/array/isArraysEqual<u32>|inlined.4
   drop
   i32.const 0
   local.set $0
   loop $for-loop|10
    local.get $0
    local.get $2
    i32.lt_s
    if
     local.get $0
     local.get $1
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $0
     local.get $3
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $0
     i32.const 2
     i32.shl
     local.tee $5
     local.get $1
     i32.load $0 offset=4
     i32.add
     i32.load $0
     local.get $3
     i32.load $0 offset=4
     local.get $5
     i32.add
     i32.load $0
     i32.ne
     br_if $std/array/isArraysEqual<u32>|inlined.4
     drop
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|10
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  local.get $1
  i32.load $0 offset=4
  local.set $0
  local.get $1
  i32.load $0 offset=12
  local.tee $2
  i32.const 0
  local.get $2
  i32.const 0
  i32.le_s
  select
  local.tee $3
  local.get $2
  i32.lt_s
  if
   local.get $0
   local.get $3
   i32.const 2
   i32.shl
   i32.add
   i32.const -1
   local.get $2
   local.get $3
   i32.sub
   i32.const 2
   i32.shl
   memory.fill $0
  end
  block $std/array/isArraysEqual<u32>|inlined.5 (result i32)
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $2
   i32.const 44
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 20
   i32.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $2
   i32.const 1728
   i64.load $0
   i64.store $0
   local.get $2
   i32.const 1736
   i64.load $0
   i64.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $0
   i32.const 1744
   i32.load $0
   i32.store $0
   i32.const 1748
   local.set $3
   local.get $0
   i32.const 4
   i32.add
   local.set $0
   i32.const 0
   local.set $5
   local.get $5
   if
    local.get $0
    local.get $3
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $3
   i32.const 44
   i32.add
   local.tee $5
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $5
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $3
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 7
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $3
   i32.const 16
   i32.add
   local.tee $3
   local.get $2
   i32.store $0
   local.get $3
   local.get $2
   i32.store $0 offset=4
   local.get $3
   i32.const 20
   i32.store $0 offset=8
   local.get $3
   i32.const 5
   i32.store $0 offset=12
   i32.const 0
   local.get $1
   i32.load $0 offset=12
   local.tee $2
   local.get $3
   i32.load $0 offset=12
   i32.ne
   br_if $std/array/isArraysEqual<u32>|inlined.5
   drop
   i32.const 1
   local.get $1
   local.get $3
   i32.eq
   br_if $std/array/isArraysEqual<u32>|inlined.5
   drop
   local.get $1
   local.set $0
   i32.const 0
   local.set $1
   loop $for-loop|11
    local.get $1
    local.get $2
    i32.lt_s
    if
     local.get $1
     local.get $0
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $1
     local.get $3
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $1
     i32.const 2
     i32.shl
     local.tee $5
     local.get $0
     i32.load $0 offset=4
     i32.add
     i32.load $0
     local.get $3
     i32.load $0 offset=4
     local.get $5
     i32.add
     i32.load $0
     i32.ne
     br_if $std/array/isArraysEqual<u32>|inlined.5
     drop
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|11
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 44
  i32.add
  local.tee $2
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $2
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 44
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 0
  i32.store $0 offset=4
  local.get $0
  i32.const 20
  i32.store $0 offset=8
  local.get $1
  i32.const 16
  i32.add
  local.tee $2
  i32.const 1776
  i64.load $0
  i64.store $0
  local.get $2
  i32.const 1784
  i64.load $0
  i64.store $0 offset=8
  local.get $2
  i32.const 16
  i32.add
  local.tee $0
  i32.const 1792
  i32.load $0
  i32.store $0
  i32.const 1796
  local.set $1
  local.get $0
  i32.const 4
  i32.add
  local.set $0
  i32.const 0
  local.set $3
  local.get $3
  if
   local.get $0
   local.get $1
   i32.load8_u $0
   i32.store8 $0
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 44
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 44
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 8
  i32.store $0 offset=4
  local.get $0
  i32.const 16
  i32.store $0 offset=8
  local.get $1
  i32.const 16
  i32.add
  local.tee $1
  local.get $2
  i32.store $0
  local.get $1
  local.get $2
  i32.store $0 offset=4
  local.get $1
  i32.const 20
  i32.store $0 offset=8
  local.get $1
  i32.const 5
  i32.store $0 offset=12
  local.get $1
  i32.load $0 offset=4
  local.set $2
  i32.const 1
  local.get $1
  i32.load $0 offset=12
  local.tee $3
  local.get $3
  i32.const 1
  i32.gt_s
  select
  local.set $0
  i32.const 3
  local.get $3
  local.get $3
  i32.const 3
  i32.gt_s
  select
  local.set $3
  loop $for-loop|039
   local.get $0
   local.get $3
   i32.lt_s
   if
    local.get $2
    local.get $0
    i32.const 2
    i32.shl
    i32.add
    f32.const 1
    f32.store $0
    local.get $0
    i32.const 1
    i32.add
    local.set $0
    br $for-loop|039
   end
  end
  block $std/array/isArraysEqual<f32>|inlined.0 (result i32)
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $2
   i32.const 44
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 20
   i32.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $3
   i32.const 1824
   i64.load $0
   i64.store $0
   local.get $3
   i32.const 1832
   i64.load $0
   i64.store $0 offset=8
   local.get $3
   i32.const 16
   i32.add
   local.tee $0
   i32.const 1840
   i32.load $0
   i32.store $0
   i32.const 1844
   local.set $2
   local.get $0
   i32.const 4
   i32.add
   local.set $0
   i32.const 0
   local.set $5
   local.get $5
   if
    local.get $0
    local.get $2
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $2
   i32.const 44
   i32.add
   local.tee $5
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $5
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 8
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $2
   local.get $3
   i32.store $0
   local.get $2
   local.get $3
   i32.store $0 offset=4
   local.get $2
   i32.const 20
   i32.store $0 offset=8
   local.get $2
   i32.const 5
   i32.store $0 offset=12
   i32.const 0
   local.get $1
   i32.load $0 offset=12
   local.tee $3
   local.get $2
   i32.load $0 offset=12
   i32.ne
   br_if $std/array/isArraysEqual<f32>|inlined.0
   drop
   i32.const 1
   local.get $1
   local.get $2
   i32.eq
   br_if $std/array/isArraysEqual<f32>|inlined.0
   drop
   i32.const 0
   local.set $0
   loop $for-loop|12
    local.get $0
    local.get $3
    i32.lt_s
    if
     local.get $0
     local.get $1
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $1
     i32.load $0 offset=4
     local.get $0
     i32.const 2
     i32.shl
     i32.add
     f32.load $0
     local.tee $8
     local.get $8
     f32.ne
     if (result i32)
      local.get $0
      local.get $2
      i32.load $0 offset=12
      i32.ge_u
      if
       unreachable
      end
      local.get $2
      i32.load $0 offset=4
      local.get $0
      i32.const 2
      i32.shl
      i32.add
      f32.load $0
      local.tee $8
      local.get $8
      f32.ne
     else
      i32.const 0
     end
     i32.eqz
     if
      local.get $0
      local.get $1
      i32.load $0 offset=12
      i32.ge_u
      if
       unreachable
      end
      local.get $0
      local.get $2
      i32.load $0 offset=12
      i32.ge_u
      if
       unreachable
      end
      i32.const 0
      local.get $0
      i32.const 2
      i32.shl
      local.tee $5
      local.get $1
      i32.load $0 offset=4
      i32.add
      f32.load $0
      f64.promote_f32
      i64.reinterpret_f64
      i64.const 63
      i64.shr_u
      i32.wrap_i64
      local.get $2
      i32.load $0 offset=4
      local.get $5
      i32.add
      f32.load $0
      f64.promote_f32
      i64.reinterpret_f64
      i64.const 63
      i64.shr_u
      i32.wrap_i64
      i32.ne
      br_if $std/array/isArraysEqual<f32>|inlined.0
      drop
      local.get $0
      local.get $1
      i32.load $0 offset=12
      i32.ge_u
      if
       unreachable
      end
      local.get $0
      local.get $2
      i32.load $0 offset=12
      i32.ge_u
      if
       unreachable
      end
      i32.const 0
      local.get $0
      i32.const 2
      i32.shl
      local.tee $5
      local.get $1
      i32.load $0 offset=4
      i32.add
      f32.load $0
      local.get $2
      i32.load $0 offset=4
      local.get $5
      i32.add
      f32.load $0
      f32.ne
      br_if $std/array/isArraysEqual<f32>|inlined.0
      drop
     end
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|12
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  local.get $1
  i32.load $0 offset=4
  local.set $0
  local.get $1
  i32.load $0 offset=12
  local.tee $2
  i32.const 0
  local.get $2
  i32.const 0
  i32.le_s
  select
  local.tee $3
  local.get $2
  i32.lt_s
  if
   local.get $0
   local.get $3
   i32.const 2
   i32.shl
   i32.add
   i32.const 0
   local.get $2
   local.get $3
   i32.sub
   i32.const 2
   i32.shl
   memory.fill $0
  end
  block $std/array/isArraysEqual<f32>|inlined.1 (result i32)
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $2
   i32.const 44
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 20
   i32.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $3
   i32.const 1872
   i64.load $0
   i64.store $0
   local.get $3
   i32.const 1880
   i64.load $0
   i64.store $0 offset=8
   local.get $3
   i32.const 16
   i32.add
   local.tee $0
   i32.const 1888
   i32.load $0
   i32.store $0
   i32.const 1892
   local.set $2
   local.get $0
   i32.const 4
   i32.add
   local.set $0
   i32.const 0
   local.set $5
   local.get $5
   if
    local.get $0
    local.get $2
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $2
   i32.const 44
   i32.add
   local.tee $5
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $5
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 8
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $2
   local.get $3
   i32.store $0
   local.get $2
   local.get $3
   i32.store $0 offset=4
   local.get $2
   i32.const 20
   i32.store $0 offset=8
   local.get $2
   i32.const 5
   i32.store $0 offset=12
   i32.const 0
   local.get $1
   i32.load $0 offset=12
   local.tee $3
   local.get $2
   i32.load $0 offset=12
   i32.ne
   br_if $std/array/isArraysEqual<f32>|inlined.1
   drop
   i32.const 1
   local.get $1
   local.get $2
   i32.eq
   br_if $std/array/isArraysEqual<f32>|inlined.1
   drop
   i32.const 0
   local.set $0
   loop $for-loop|13
    local.get $0
    local.get $3
    i32.lt_s
    if
     local.get $0
     local.get $1
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $1
     i32.load $0 offset=4
     local.get $0
     i32.const 2
     i32.shl
     i32.add
     f32.load $0
     local.tee $8
     local.get $8
     f32.ne
     if (result i32)
      local.get $0
      local.get $2
      i32.load $0 offset=12
      i32.ge_u
      if
       unreachable
      end
      local.get $2
      i32.load $0 offset=4
      local.get $0
      i32.const 2
      i32.shl
      i32.add
      f32.load $0
      local.tee $8
      local.get $8
      f32.ne
     else
      i32.const 0
     end
     i32.eqz
     if
      local.get $0
      local.get $1
      i32.load $0 offset=12
      i32.ge_u
      if
       unreachable
      end
      local.get $0
      local.get $2
      i32.load $0 offset=12
      i32.ge_u
      if
       unreachable
      end
      i32.const 0
      local.get $0
      i32.const 2
      i32.shl
      local.tee $5
      local.get $1
      i32.load $0 offset=4
      i32.add
      f32.load $0
      f64.promote_f32
      i64.reinterpret_f64
      i64.const 63
      i64.shr_u
      i32.wrap_i64
      local.get $2
      i32.load $0 offset=4
      local.get $5
      i32.add
      f32.load $0
      f64.promote_f32
      i64.reinterpret_f64
      i64.const 63
      i64.shr_u
      i32.wrap_i64
      i32.ne
      br_if $std/array/isArraysEqual<f32>|inlined.1
      drop
      local.get $0
      local.get $1
      i32.load $0 offset=12
      i32.ge_u
      if
       unreachable
      end
      local.get $0
      local.get $2
      i32.load $0 offset=12
      i32.ge_u
      if
       unreachable
      end
      i32.const 0
      local.get $0
      i32.const 2
      i32.shl
      local.tee $5
      local.get $1
      i32.load $0 offset=4
      i32.add
      f32.load $0
      local.get $2
      i32.load $0 offset=4
      local.get $5
      i32.add
      f32.load $0
      f32.ne
      br_if $std/array/isArraysEqual<f32>|inlined.1
      drop
     end
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|13
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  local.get $1
  i32.load $0 offset=4
  local.set $2
  local.get $1
  i32.load $0 offset=12
  local.tee $3
  i32.const 0
  local.get $3
  i32.const 0
  i32.le_s
  select
  local.set $0
  local.get $3
  i32.const 3
  i32.sub
  local.set $3
  loop $for-loop|049
   local.get $0
   local.get $3
   i32.lt_s
   if
    local.get $2
    local.get $0
    i32.const 2
    i32.shl
    i32.add
    f32.const 1
    f32.store $0
    local.get $0
    i32.const 1
    i32.add
    local.set $0
    br $for-loop|049
   end
  end
  block $std/array/isArraysEqual<f32>|inlined.2 (result i32)
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $2
   i32.const 44
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 20
   i32.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $3
   i32.const 1920
   i64.load $0
   i64.store $0
   local.get $3
   i32.const 1928
   i64.load $0
   i64.store $0 offset=8
   local.get $3
   i32.const 16
   i32.add
   local.tee $0
   i32.const 1936
   i32.load $0
   i32.store $0
   i32.const 1940
   local.set $2
   local.get $0
   i32.const 4
   i32.add
   local.set $0
   i32.const 0
   local.set $5
   local.get $5
   if
    local.get $0
    local.get $2
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $2
   i32.const 44
   i32.add
   local.tee $5
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $5
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 8
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $2
   local.get $3
   i32.store $0
   local.get $2
   local.get $3
   i32.store $0 offset=4
   local.get $2
   i32.const 20
   i32.store $0 offset=8
   local.get $2
   i32.const 5
   i32.store $0 offset=12
   i32.const 0
   local.get $1
   i32.load $0 offset=12
   local.tee $3
   local.get $2
   i32.load $0 offset=12
   i32.ne
   br_if $std/array/isArraysEqual<f32>|inlined.2
   drop
   i32.const 1
   local.get $1
   local.get $2
   i32.eq
   br_if $std/array/isArraysEqual<f32>|inlined.2
   drop
   i32.const 0
   local.set $0
   loop $for-loop|14
    local.get $0
    local.get $3
    i32.lt_s
    if
     local.get $0
     local.get $1
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $1
     i32.load $0 offset=4
     local.get $0
     i32.const 2
     i32.shl
     i32.add
     f32.load $0
     local.tee $8
     local.get $8
     f32.ne
     if (result i32)
      local.get $0
      local.get $2
      i32.load $0 offset=12
      i32.ge_u
      if
       unreachable
      end
      local.get $2
      i32.load $0 offset=4
      local.get $0
      i32.const 2
      i32.shl
      i32.add
      f32.load $0
      local.tee $8
      local.get $8
      f32.ne
     else
      i32.const 0
     end
     i32.eqz
     if
      local.get $0
      local.get $1
      i32.load $0 offset=12
      i32.ge_u
      if
       unreachable
      end
      local.get $0
      local.get $2
      i32.load $0 offset=12
      i32.ge_u
      if
       unreachable
      end
      i32.const 0
      local.get $0
      i32.const 2
      i32.shl
      local.tee $5
      local.get $1
      i32.load $0 offset=4
      i32.add
      f32.load $0
      f64.promote_f32
      i64.reinterpret_f64
      i64.const 63
      i64.shr_u
      i32.wrap_i64
      local.get $2
      i32.load $0 offset=4
      local.get $5
      i32.add
      f32.load $0
      f64.promote_f32
      i64.reinterpret_f64
      i64.const 63
      i64.shr_u
      i32.wrap_i64
      i32.ne
      br_if $std/array/isArraysEqual<f32>|inlined.2
      drop
      local.get $0
      local.get $1
      i32.load $0 offset=12
      i32.ge_u
      if
       unreachable
      end
      local.get $0
      local.get $2
      i32.load $0 offset=12
      i32.ge_u
      if
       unreachable
      end
      i32.const 0
      local.get $0
      i32.const 2
      i32.shl
      local.tee $5
      local.get $1
      i32.load $0 offset=4
      i32.add
      f32.load $0
      local.get $2
      i32.load $0 offset=4
      local.get $5
      i32.add
      f32.load $0
      f32.ne
      br_if $std/array/isArraysEqual<f32>|inlined.2
      drop
     end
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|14
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  local.get $1
  i32.load $0 offset=4
  local.set $2
  local.get $1
  i32.load $0 offset=12
  local.tee $3
  i32.const 2
  i32.sub
  local.set $0
  loop $for-loop|054
   local.get $0
   local.get $3
   i32.lt_s
   if
    local.get $2
    local.get $0
    i32.const 2
    i32.shl
    i32.add
    f32.const 2
    f32.store $0
    local.get $0
    i32.const 1
    i32.add
    local.set $0
    br $for-loop|054
   end
  end
  block $std/array/isArraysEqual<f32>|inlined.3 (result i32)
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $2
   i32.const 44
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 20
   i32.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $3
   i32.const 1968
   i64.load $0
   i64.store $0
   local.get $3
   i32.const 1976
   i64.load $0
   i64.store $0 offset=8
   local.get $3
   i32.const 16
   i32.add
   local.tee $0
   i32.const 1984
   i32.load $0
   i32.store $0
   i32.const 1988
   local.set $2
   local.get $0
   i32.const 4
   i32.add
   local.set $0
   i32.const 0
   local.set $5
   local.get $5
   if
    local.get $0
    local.get $2
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $2
   i32.const 44
   i32.add
   local.tee $5
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $5
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 8
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $2
   local.get $3
   i32.store $0
   local.get $2
   local.get $3
   i32.store $0 offset=4
   local.get $2
   i32.const 20
   i32.store $0 offset=8
   local.get $2
   i32.const 5
   i32.store $0 offset=12
   i32.const 0
   local.get $1
   i32.load $0 offset=12
   local.tee $3
   local.get $2
   i32.load $0 offset=12
   i32.ne
   br_if $std/array/isArraysEqual<f32>|inlined.3
   drop
   i32.const 1
   local.get $1
   local.get $2
   i32.eq
   br_if $std/array/isArraysEqual<f32>|inlined.3
   drop
   i32.const 0
   local.set $0
   loop $for-loop|15
    local.get $0
    local.get $3
    i32.lt_s
    if
     local.get $0
     local.get $1
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $1
     i32.load $0 offset=4
     local.get $0
     i32.const 2
     i32.shl
     i32.add
     f32.load $0
     local.tee $8
     local.get $8
     f32.ne
     if (result i32)
      local.get $0
      local.get $2
      i32.load $0 offset=12
      i32.ge_u
      if
       unreachable
      end
      local.get $2
      i32.load $0 offset=4
      local.get $0
      i32.const 2
      i32.shl
      i32.add
      f32.load $0
      local.tee $8
      local.get $8
      f32.ne
     else
      i32.const 0
     end
     i32.eqz
     if
      local.get $0
      local.get $1
      i32.load $0 offset=12
      i32.ge_u
      if
       unreachable
      end
      local.get $0
      local.get $2
      i32.load $0 offset=12
      i32.ge_u
      if
       unreachable
      end
      i32.const 0
      local.get $0
      i32.const 2
      i32.shl
      local.tee $5
      local.get $1
      i32.load $0 offset=4
      i32.add
      f32.load $0
      f64.promote_f32
      i64.reinterpret_f64
      i64.const 63
      i64.shr_u
      i32.wrap_i64
      local.get $2
      i32.load $0 offset=4
      local.get $5
      i32.add
      f32.load $0
      f64.promote_f32
      i64.reinterpret_f64
      i64.const 63
      i64.shr_u
      i32.wrap_i64
      i32.ne
      br_if $std/array/isArraysEqual<f32>|inlined.3
      drop
      local.get $0
      local.get $1
      i32.load $0 offset=12
      i32.ge_u
      if
       unreachable
      end
      local.get $0
      local.get $2
      i32.load $0 offset=12
      i32.ge_u
      if
       unreachable
      end
      i32.const 0
      local.get $0
      i32.const 2
      i32.shl
      local.tee $5
      local.get $1
      i32.load $0 offset=4
      i32.add
      f32.load $0
      local.get $2
      i32.load $0 offset=4
      local.get $5
      i32.add
      f32.load $0
      f32.ne
      br_if $std/array/isArraysEqual<f32>|inlined.3
      drop
     end
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|15
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  local.get $1
  i32.load $0 offset=4
  local.set $0
  i32.const 1
  local.get $1
  i32.load $0 offset=12
  local.tee $2
  local.get $2
  i32.const 1
  i32.gt_s
  select
  local.tee $3
  local.get $2
  i32.const 0
  local.get $2
  i32.const 0
  i32.le_s
  select
  local.tee $2
  i32.lt_s
  if
   local.get $0
   local.get $3
   i32.const 2
   i32.shl
   i32.add
   i32.const 0
   local.get $2
   local.get $3
   i32.sub
   i32.const 2
   i32.shl
   memory.fill $0
  end
  block $std/array/isArraysEqual<f32>|inlined.4 (result i32)
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $2
   i32.const 44
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 20
   i32.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $3
   i32.const 2016
   i64.load $0
   i64.store $0
   local.get $3
   i32.const 2024
   i64.load $0
   i64.store $0 offset=8
   local.get $3
   i32.const 16
   i32.add
   local.tee $0
   i32.const 2032
   i32.load $0
   i32.store $0
   i32.const 2036
   local.set $2
   local.get $0
   i32.const 4
   i32.add
   local.set $0
   i32.const 0
   local.set $5
   local.get $5
   if
    local.get $0
    local.get $2
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $2
   i32.const 44
   i32.add
   local.tee $5
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $5
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 8
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $2
   local.get $3
   i32.store $0
   local.get $2
   local.get $3
   i32.store $0 offset=4
   local.get $2
   i32.const 20
   i32.store $0 offset=8
   local.get $2
   i32.const 5
   i32.store $0 offset=12
   i32.const 0
   local.get $1
   i32.load $0 offset=12
   local.tee $3
   local.get $2
   i32.load $0 offset=12
   i32.ne
   br_if $std/array/isArraysEqual<f32>|inlined.4
   drop
   i32.const 1
   local.get $1
   local.get $2
   i32.eq
   br_if $std/array/isArraysEqual<f32>|inlined.4
   drop
   i32.const 0
   local.set $0
   loop $for-loop|16
    local.get $0
    local.get $3
    i32.lt_s
    if
     local.get $0
     local.get $1
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $1
     i32.load $0 offset=4
     local.get $0
     i32.const 2
     i32.shl
     i32.add
     f32.load $0
     local.tee $8
     local.get $8
     f32.ne
     if (result i32)
      local.get $0
      local.get $2
      i32.load $0 offset=12
      i32.ge_u
      if
       unreachable
      end
      local.get $2
      i32.load $0 offset=4
      local.get $0
      i32.const 2
      i32.shl
      i32.add
      f32.load $0
      local.tee $8
      local.get $8
      f32.ne
     else
      i32.const 0
     end
     i32.eqz
     if
      local.get $0
      local.get $1
      i32.load $0 offset=12
      i32.ge_u
      if
       unreachable
      end
      local.get $0
      local.get $2
      i32.load $0 offset=12
      i32.ge_u
      if
       unreachable
      end
      i32.const 0
      local.get $0
      i32.const 2
      i32.shl
      local.tee $5
      local.get $1
      i32.load $0 offset=4
      i32.add
      f32.load $0
      f64.promote_f32
      i64.reinterpret_f64
      i64.const 63
      i64.shr_u
      i32.wrap_i64
      local.get $2
      i32.load $0 offset=4
      local.get $5
      i32.add
      f32.load $0
      f64.promote_f32
      i64.reinterpret_f64
      i64.const 63
      i64.shr_u
      i32.wrap_i64
      i32.ne
      br_if $std/array/isArraysEqual<f32>|inlined.4
      drop
      local.get $0
      local.get $1
      i32.load $0 offset=12
      i32.ge_u
      if
       unreachable
      end
      local.get $0
      local.get $2
      i32.load $0 offset=12
      i32.ge_u
      if
       unreachable
      end
      i32.const 0
      local.get $0
      i32.const 2
      i32.shl
      local.tee $5
      local.get $1
      i32.load $0 offset=4
      i32.add
      f32.load $0
      local.get $2
      i32.load $0 offset=4
      local.get $5
      i32.add
      f32.load $0
      f32.ne
      br_if $std/array/isArraysEqual<f32>|inlined.4
      drop
     end
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|16
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  local.get $1
  i32.load $0 offset=4
  local.set $2
  local.get $1
  i32.load $0 offset=12
  local.tee $3
  i32.const 0
  local.get $3
  i32.const 0
  i32.le_s
  select
  local.set $0
  loop $for-loop|064
   local.get $0
   local.get $3
   i32.lt_s
   if
    local.get $2
    local.get $0
    i32.const 2
    i32.shl
    i32.add
    f32.const -1
    f32.store $0
    local.get $0
    i32.const 1
    i32.add
    local.set $0
    br $for-loop|064
   end
  end
  block $std/array/isArraysEqual<f32>|inlined.5 (result i32)
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $2
   i32.const 44
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 20
   i32.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $3
   i32.const 2064
   i64.load $0
   i64.store $0
   local.get $3
   i32.const 2072
   i64.load $0
   i64.store $0 offset=8
   local.get $3
   i32.const 16
   i32.add
   local.tee $0
   i32.const 2080
   i32.load $0
   i32.store $0
   i32.const 2084
   local.set $2
   local.get $0
   i32.const 4
   i32.add
   local.set $0
   i32.const 0
   local.set $5
   local.get $5
   if
    local.get $0
    local.get $2
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $2
   i32.const 44
   i32.add
   local.tee $5
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $5
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 8
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $2
   local.get $3
   i32.store $0
   local.get $2
   local.get $3
   i32.store $0 offset=4
   local.get $2
   i32.const 20
   i32.store $0 offset=8
   local.get $2
   i32.const 5
   i32.store $0 offset=12
   i32.const 0
   local.get $1
   i32.load $0 offset=12
   local.tee $3
   local.get $2
   i32.load $0 offset=12
   i32.ne
   br_if $std/array/isArraysEqual<f32>|inlined.5
   drop
   i32.const 1
   local.get $1
   local.get $2
   i32.eq
   br_if $std/array/isArraysEqual<f32>|inlined.5
   drop
   i32.const 0
   local.set $0
   loop $for-loop|17
    local.get $0
    local.get $3
    i32.lt_s
    if
     local.get $0
     local.get $1
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $1
     i32.load $0 offset=4
     local.get $0
     i32.const 2
     i32.shl
     i32.add
     f32.load $0
     local.tee $8
     local.get $8
     f32.ne
     if (result i32)
      local.get $0
      local.get $2
      i32.load $0 offset=12
      i32.ge_u
      if
       unreachable
      end
      local.get $2
      i32.load $0 offset=4
      local.get $0
      i32.const 2
      i32.shl
      i32.add
      f32.load $0
      local.tee $8
      local.get $8
      f32.ne
     else
      i32.const 0
     end
     i32.eqz
     if
      local.get $0
      local.get $1
      i32.load $0 offset=12
      i32.ge_u
      if
       unreachable
      end
      local.get $0
      local.get $2
      i32.load $0 offset=12
      i32.ge_u
      if
       unreachable
      end
      i32.const 0
      local.get $0
      i32.const 2
      i32.shl
      local.tee $5
      local.get $1
      i32.load $0 offset=4
      i32.add
      f32.load $0
      f64.promote_f32
      i64.reinterpret_f64
      i64.const 63
      i64.shr_u
      i32.wrap_i64
      local.get $2
      i32.load $0 offset=4
      local.get $5
      i32.add
      f32.load $0
      f64.promote_f32
      i64.reinterpret_f64
      i64.const 63
      i64.shr_u
      i32.wrap_i64
      i32.ne
      br_if $std/array/isArraysEqual<f32>|inlined.5
      drop
      local.get $0
      local.get $1
      i32.load $0 offset=12
      i32.ge_u
      if
       unreachable
      end
      local.get $0
      local.get $2
      i32.load $0 offset=12
      i32.ge_u
      if
       unreachable
      end
      i32.const 0
      local.get $0
      i32.const 2
      i32.shl
      local.tee $5
      local.get $1
      i32.load $0 offset=4
      i32.add
      f32.load $0
      local.get $2
      i32.load $0 offset=4
      local.get $5
      i32.add
      f32.load $0
      f32.ne
      br_if $std/array/isArraysEqual<f32>|inlined.5
      drop
     end
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|17
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  local.get $1
  i32.load $0 offset=4
  local.set $2
  local.get $1
  i32.load $0 offset=12
  local.tee $3
  i32.const 0
  local.get $3
  i32.const 0
  i32.le_s
  select
  local.set $0
  loop $for-loop|069
   local.get $0
   local.get $3
   i32.lt_s
   if
    local.get $2
    local.get $0
    i32.const 2
    i32.shl
    i32.add
    f32.const -0
    f32.store $0
    local.get $0
    i32.const 1
    i32.add
    local.set $0
    br $for-loop|069
   end
  end
  block $std/array/isArraysEqual<f32>|inlined.6 (result i32)
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $2
   i32.const 44
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 20
   i32.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $2
   i32.const 2112
   i64.load $0
   i64.store $0
   local.get $2
   i32.const 2120
   i64.load $0
   i64.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $0
   i32.const 2128
   i32.load $0
   i32.store $0
   i32.const 2132
   local.set $3
   local.get $0
   i32.const 4
   i32.add
   local.set $0
   i32.const 0
   local.set $5
   local.get $5
   if
    local.get $0
    local.get $3
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $3
   i32.const 44
   i32.add
   local.tee $5
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $5
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $3
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 8
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $3
   i32.const 16
   i32.add
   local.tee $3
   local.get $2
   i32.store $0
   local.get $3
   local.get $2
   i32.store $0 offset=4
   local.get $3
   i32.const 20
   i32.store $0 offset=8
   local.get $3
   i32.const 5
   i32.store $0 offset=12
   i32.const 0
   local.get $1
   i32.load $0 offset=12
   local.tee $2
   local.get $3
   i32.load $0 offset=12
   i32.ne
   br_if $std/array/isArraysEqual<f32>|inlined.6
   drop
   i32.const 1
   local.get $1
   local.get $3
   i32.eq
   br_if $std/array/isArraysEqual<f32>|inlined.6
   drop
   local.get $1
   local.set $0
   i32.const 0
   local.set $1
   loop $for-loop|18
    local.get $1
    local.get $2
    i32.lt_s
    if
     local.get $1
     local.get $0
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $0
     i32.load $0 offset=4
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     f32.load $0
     local.tee $8
     local.get $8
     f32.ne
     if (result i32)
      local.get $1
      local.get $3
      i32.load $0 offset=12
      i32.ge_u
      if
       unreachable
      end
      local.get $3
      i32.load $0 offset=4
      local.get $1
      i32.const 2
      i32.shl
      i32.add
      f32.load $0
      local.tee $8
      local.get $8
      f32.ne
     else
      i32.const 0
     end
     i32.eqz
     if
      local.get $1
      local.get $0
      i32.load $0 offset=12
      i32.ge_u
      if
       unreachable
      end
      local.get $1
      local.get $3
      i32.load $0 offset=12
      i32.ge_u
      if
       unreachable
      end
      i32.const 0
      local.get $1
      i32.const 2
      i32.shl
      local.tee $5
      local.get $0
      i32.load $0 offset=4
      i32.add
      f32.load $0
      f64.promote_f32
      i64.reinterpret_f64
      i64.const 63
      i64.shr_u
      i32.wrap_i64
      local.get $3
      i32.load $0 offset=4
      local.get $5
      i32.add
      f32.load $0
      f64.promote_f32
      i64.reinterpret_f64
      i64.const 63
      i64.shr_u
      i32.wrap_i64
      i32.ne
      br_if $std/array/isArraysEqual<f32>|inlined.6
      drop
      local.get $1
      local.get $0
      i32.load $0 offset=12
      i32.ge_u
      if
       unreachable
      end
      local.get $1
      local.get $3
      i32.load $0 offset=12
      i32.ge_u
      if
       unreachable
      end
      i32.const 0
      local.get $1
      i32.const 2
      i32.shl
      local.tee $5
      local.get $0
      i32.load $0 offset=4
      i32.add
      f32.load $0
      local.get $3
      i32.load $0 offset=4
      local.get $5
      i32.add
      f32.load $0
      f32.ne
      br_if $std/array/isArraysEqual<f32>|inlined.6
      drop
     end
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|18
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.load $0 offset=12
  if
   unreachable
  end
  global.get $std/array/arr
  i32.load $0
  i32.const 20
  i32.sub
  i32.load $0 offset=8
  i32.const 2
  i32.shr_s
  i32.const 8
  i32.ne
  if
   unreachable
  end
  global.get $std/array/arr
  local.tee $2
  i32.load $0 offset=12
  local.tee $3
  i32.const 1
  i32.add
  local.tee $5
  local.tee $0
  local.get $2
  i32.load $0 offset=8
  local.tee $10
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   local.get $0
   i32.const 268435455
   i32.gt_u
   if
    unreachable
   end
   local.get $2
   i32.load $0
   local.set $11
   i32.const 1073741820
   local.get $10
   i32.const 1
   i32.shl
   local.tee $1
   local.get $1
   i32.const 1073741820
   i32.ge_u
   select
   local.tee $1
   i32.const 8
   local.get $0
   local.get $0
   i32.const 8
   i32.le_u
   select
   i32.const 2
   i32.shl
   local.tee $0
   local.get $0
   local.get $1
   i32.lt_u
   select
   local.tee $12
   i32.const 1073741804
   i32.gt_u
   if
    unreachable
   end
   local.get $11
   i32.const 16
   i32.sub
   local.tee $0
   i32.const 15
   i32.and
   i32.const 1
   local.get $0
   select
   if
    unreachable
   end
   global.get $~lib/rt/stub/offset
   local.get $0
   i32.const 4
   i32.sub
   local.tee $1
   i32.load $0
   local.tee $13
   local.get $0
   i32.add
   i32.eq
   local.set $14
   local.get $12
   i32.const 16
   i32.add
   local.tee $15
   i32.const 19
   i32.add
   i32.const -16
   i32.and
   i32.const 4
   i32.sub
   local.set $16
   local.get $13
   local.get $15
   i32.lt_u
   if
    local.get $14
    if
     local.get $15
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     local.get $0
     local.get $16
     i32.add
     local.tee $13
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $13
     global.set $~lib/rt/stub/offset
     local.get $1
     local.get $16
     i32.store $0
    else
     local.get $16
     local.get $13
     i32.const 1
     i32.shl
     local.tee $1
     local.get $1
     local.get $16
     i32.lt_u
     select
     local.tee $14
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     global.get $~lib/rt/stub/offset
     i32.eqz
     if
      i32.const 9932
      global.set $~lib/rt/stub/offset
     end
     global.get $~lib/rt/stub/offset
     local.tee $1
     local.set $15
     local.get $1
     i32.const 4
     i32.add
     local.tee $1
     local.get $14
     i32.const 19
     i32.add
     i32.const -16
     i32.and
     i32.const 4
     i32.sub
     local.tee $14
     i32.add
     local.tee $16
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $16
     global.set $~lib/rt/stub/offset
     local.get $15
     local.get $14
     i32.store $0
     local.get $1
     local.get $0
     local.get $13
     memory.copy $0 $0
     local.get $1
     local.set $0
    end
   else
    local.get $14
    if
     local.get $0
     local.get $16
     i32.add
     global.set $~lib/rt/stub/offset
     local.get $1
     local.get $16
     i32.store $0
    end
   end
   local.get $0
   i32.const 4
   i32.sub
   local.get $12
   i32.store $0 offset=8
   local.get $0
   i32.const 16
   i32.add
   local.tee $0
   local.get $10
   i32.add
   i32.const 0
   local.get $12
   local.get $10
   i32.sub
   memory.fill $0
   local.get $0
   local.get $11
   i32.ne
   if
    local.get $2
    local.get $0
    i32.store $0
    local.get $2
    local.get $0
    i32.store $0 offset=4
   end
   local.get $2
   local.get $12
   i32.store $0 offset=8
  end
  local.get $2
  i32.load $0 offset=4
  local.get $3
  i32.const 2
  i32.shl
  i32.add
  i32.const 42
  i32.store $0
  local.get $2
  local.get $5
  i32.store $0 offset=12
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  i32.eqz
  if
   unreachable
  end
  local.get $0
  i32.load $0 offset=4
  i32.load $0
  i32.const 42
  i32.ne
  if
   unreachable
  end
  global.get $std/array/arr
  i32.load $0 offset=12
  i32.const 1
  i32.ne
  if
   unreachable
  end
  global.get $std/array/arr
  i32.load $0
  i32.const 20
  i32.sub
  i32.load $0 offset=8
  i32.const 2
  i32.shr_s
  i32.const 8
  i32.ne
  if
   unreachable
  end
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  local.tee $1
  i32.const 0
  i32.le_s
  if
   unreachable
  end
  local.get $0
  i32.load $0 offset=4
  local.get $1
  i32.const 1
  i32.sub
  local.tee $1
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.set $2
  local.get $0
  local.get $1
  i32.store $0 offset=12
  local.get $2
  i32.const 42
  i32.ne
  if
   unreachable
  end
  global.get $std/array/arr
  i32.load $0 offset=12
  if
   unreachable
  end
  global.get $std/array/arr
  i32.load $0
  i32.const 20
  i32.sub
  i32.load $0 offset=8
  i32.const 2
  i32.shr_s
  i32.const 8
  i32.ne
  if
   unreachable
  end
  global.get $std/array/arr
  local.tee $2
  i32.load $0 offset=12
  local.tee $3
  i32.const 1
  i32.add
  local.tee $5
  local.tee $0
  local.get $2
  i32.load $0 offset=8
  local.tee $10
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   local.get $0
   i32.const 268435455
   i32.gt_u
   if
    unreachable
   end
   local.get $2
   i32.load $0
   local.set $11
   i32.const 1073741820
   local.get $10
   i32.const 1
   i32.shl
   local.tee $1
   local.get $1
   i32.const 1073741820
   i32.ge_u
   select
   local.tee $1
   i32.const 8
   local.get $0
   local.get $0
   i32.const 8
   i32.le_u
   select
   i32.const 2
   i32.shl
   local.tee $0
   local.get $0
   local.get $1
   i32.lt_u
   select
   local.tee $12
   i32.const 1073741804
   i32.gt_u
   if
    unreachable
   end
   local.get $11
   i32.const 16
   i32.sub
   local.tee $0
   i32.const 15
   i32.and
   i32.const 1
   local.get $0
   select
   if
    unreachable
   end
   global.get $~lib/rt/stub/offset
   local.get $0
   i32.const 4
   i32.sub
   local.tee $1
   i32.load $0
   local.tee $13
   local.get $0
   i32.add
   i32.eq
   local.set $14
   local.get $12
   i32.const 16
   i32.add
   local.tee $15
   i32.const 19
   i32.add
   i32.const -16
   i32.and
   i32.const 4
   i32.sub
   local.set $16
   local.get $13
   local.get $15
   i32.lt_u
   if
    local.get $14
    if
     local.get $15
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     local.get $0
     local.get $16
     i32.add
     local.tee $13
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $13
     global.set $~lib/rt/stub/offset
     local.get $1
     local.get $16
     i32.store $0
    else
     local.get $16
     local.get $13
     i32.const 1
     i32.shl
     local.tee $1
     local.get $1
     local.get $16
     i32.lt_u
     select
     local.tee $14
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     global.get $~lib/rt/stub/offset
     i32.eqz
     if
      i32.const 9932
      global.set $~lib/rt/stub/offset
     end
     global.get $~lib/rt/stub/offset
     local.tee $1
     local.set $15
     local.get $1
     i32.const 4
     i32.add
     local.tee $1
     local.get $14
     i32.const 19
     i32.add
     i32.const -16
     i32.and
     i32.const 4
     i32.sub
     local.tee $14
     i32.add
     local.tee $16
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $16
     global.set $~lib/rt/stub/offset
     local.get $15
     local.get $14
     i32.store $0
     local.get $1
     local.get $0
     local.get $13
     memory.copy $0 $0
     local.get $1
     local.set $0
    end
   else
    local.get $14
    if
     local.get $0
     local.get $16
     i32.add
     global.set $~lib/rt/stub/offset
     local.get $1
     local.get $16
     i32.store $0
    end
   end
   local.get $0
   i32.const 4
   i32.sub
   local.get $12
   i32.store $0 offset=8
   local.get $0
   i32.const 16
   i32.add
   local.tee $0
   local.get $10
   i32.add
   i32.const 0
   local.get $12
   local.get $10
   i32.sub
   memory.fill $0
   local.get $0
   local.get $11
   i32.ne
   if
    local.get $2
    local.get $0
    i32.store $0
    local.get $2
    local.get $0
    i32.store $0 offset=4
   end
   local.get $2
   local.get $12
   i32.store $0 offset=8
  end
  local.get $2
  i32.load $0 offset=4
  local.get $3
  i32.const 2
  i32.shl
  i32.add
  i32.const 43
  i32.store $0
  local.get $2
  local.get $5
  i32.store $0 offset=12
  global.get $std/array/arr
  i32.load $0 offset=12
  i32.const 1
  i32.ne
  if
   unreachable
  end
  global.get $std/array/arr
  i32.load $0
  i32.const 20
  i32.sub
  i32.load $0 offset=8
  i32.const 2
  i32.shr_s
  i32.const 8
  i32.ne
  if
   unreachable
  end
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  i32.eqz
  if
   unreachable
  end
  local.get $0
  i32.load $0 offset=4
  i32.load $0
  i32.const 43
  i32.ne
  if
   unreachable
  end
  global.get $std/array/arr
  local.tee $2
  i32.load $0 offset=12
  local.tee $3
  i32.const 1
  i32.add
  local.tee $5
  local.tee $0
  local.get $2
  i32.load $0 offset=8
  local.tee $10
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   local.get $0
   i32.const 268435455
   i32.gt_u
   if
    unreachable
   end
   local.get $2
   i32.load $0
   local.set $11
   i32.const 1073741820
   local.get $10
   i32.const 1
   i32.shl
   local.tee $1
   local.get $1
   i32.const 1073741820
   i32.ge_u
   select
   local.tee $1
   i32.const 8
   local.get $0
   local.get $0
   i32.const 8
   i32.le_u
   select
   i32.const 2
   i32.shl
   local.tee $0
   local.get $0
   local.get $1
   i32.lt_u
   select
   local.tee $12
   i32.const 1073741804
   i32.gt_u
   if
    unreachable
   end
   local.get $11
   i32.const 16
   i32.sub
   local.tee $0
   i32.const 15
   i32.and
   i32.const 1
   local.get $0
   select
   if
    unreachable
   end
   global.get $~lib/rt/stub/offset
   local.get $0
   i32.const 4
   i32.sub
   local.tee $1
   i32.load $0
   local.tee $13
   local.get $0
   i32.add
   i32.eq
   local.set $14
   local.get $12
   i32.const 16
   i32.add
   local.tee $15
   i32.const 19
   i32.add
   i32.const -16
   i32.and
   i32.const 4
   i32.sub
   local.set $16
   local.get $13
   local.get $15
   i32.lt_u
   if
    local.get $14
    if
     local.get $15
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     local.get $0
     local.get $16
     i32.add
     local.tee $13
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $13
     global.set $~lib/rt/stub/offset
     local.get $1
     local.get $16
     i32.store $0
    else
     local.get $16
     local.get $13
     i32.const 1
     i32.shl
     local.tee $1
     local.get $1
     local.get $16
     i32.lt_u
     select
     local.tee $14
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     global.get $~lib/rt/stub/offset
     i32.eqz
     if
      i32.const 9932
      global.set $~lib/rt/stub/offset
     end
     global.get $~lib/rt/stub/offset
     local.tee $1
     local.set $15
     local.get $1
     i32.const 4
     i32.add
     local.tee $1
     local.get $14
     i32.const 19
     i32.add
     i32.const -16
     i32.and
     i32.const 4
     i32.sub
     local.tee $14
     i32.add
     local.tee $16
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $16
     global.set $~lib/rt/stub/offset
     local.get $15
     local.get $14
     i32.store $0
     local.get $1
     local.get $0
     local.get $13
     memory.copy $0 $0
     local.get $1
     local.set $0
    end
   else
    local.get $14
    if
     local.get $0
     local.get $16
     i32.add
     global.set $~lib/rt/stub/offset
     local.get $1
     local.get $16
     i32.store $0
    end
   end
   local.get $0
   i32.const 4
   i32.sub
   local.get $12
   i32.store $0 offset=8
   local.get $0
   i32.const 16
   i32.add
   local.tee $0
   local.get $10
   i32.add
   i32.const 0
   local.get $12
   local.get $10
   i32.sub
   memory.fill $0
   local.get $0
   local.get $11
   i32.ne
   if
    local.get $2
    local.get $0
    i32.store $0
    local.get $2
    local.get $0
    i32.store $0 offset=4
   end
   local.get $2
   local.get $12
   i32.store $0 offset=8
  end
  local.get $2
  i32.load $0 offset=4
  local.get $3
  i32.const 2
  i32.shl
  i32.add
  i32.const 44
  i32.store $0
  local.get $2
  local.get $5
  i32.store $0 offset=12
  global.get $std/array/arr
  i32.load $0 offset=12
  i32.const 2
  i32.ne
  if
   unreachable
  end
  global.get $std/array/arr
  i32.load $0
  i32.const 20
  i32.sub
  i32.load $0 offset=8
  i32.const 2
  i32.shr_s
  i32.const 8
  i32.ne
  if
   unreachable
  end
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  i32.eqz
  if
   unreachable
  end
  local.get $0
  i32.load $0 offset=4
  i32.load $0
  i32.const 43
  i32.ne
  if
   unreachable
  end
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  i32.const 1
  i32.le_u
  if
   unreachable
  end
  local.get $0
  i32.load $0 offset=4
  i32.load $0 offset=4
  i32.const 44
  i32.ne
  if
   unreachable
  end
  global.get $std/array/arr
  local.tee $2
  i32.load $0 offset=12
  local.tee $3
  i32.const 1
  i32.add
  local.tee $5
  local.tee $0
  local.get $2
  i32.load $0 offset=8
  local.tee $10
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   local.get $0
   i32.const 268435455
   i32.gt_u
   if
    unreachable
   end
   local.get $2
   i32.load $0
   local.set $11
   i32.const 1073741820
   local.get $10
   i32.const 1
   i32.shl
   local.tee $1
   local.get $1
   i32.const 1073741820
   i32.ge_u
   select
   local.tee $1
   i32.const 8
   local.get $0
   local.get $0
   i32.const 8
   i32.le_u
   select
   i32.const 2
   i32.shl
   local.tee $0
   local.get $0
   local.get $1
   i32.lt_u
   select
   local.tee $12
   i32.const 1073741804
   i32.gt_u
   if
    unreachable
   end
   local.get $11
   i32.const 16
   i32.sub
   local.tee $0
   i32.const 15
   i32.and
   i32.const 1
   local.get $0
   select
   if
    unreachable
   end
   global.get $~lib/rt/stub/offset
   local.get $0
   i32.const 4
   i32.sub
   local.tee $1
   i32.load $0
   local.tee $13
   local.get $0
   i32.add
   i32.eq
   local.set $14
   local.get $12
   i32.const 16
   i32.add
   local.tee $15
   i32.const 19
   i32.add
   i32.const -16
   i32.and
   i32.const 4
   i32.sub
   local.set $16
   local.get $13
   local.get $15
   i32.lt_u
   if
    local.get $14
    if
     local.get $15
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     local.get $0
     local.get $16
     i32.add
     local.tee $13
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $13
     global.set $~lib/rt/stub/offset
     local.get $1
     local.get $16
     i32.store $0
    else
     local.get $16
     local.get $13
     i32.const 1
     i32.shl
     local.tee $1
     local.get $1
     local.get $16
     i32.lt_u
     select
     local.tee $14
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     global.get $~lib/rt/stub/offset
     i32.eqz
     if
      i32.const 9932
      global.set $~lib/rt/stub/offset
     end
     global.get $~lib/rt/stub/offset
     local.tee $1
     local.set $15
     local.get $1
     i32.const 4
     i32.add
     local.tee $1
     local.get $14
     i32.const 19
     i32.add
     i32.const -16
     i32.and
     i32.const 4
     i32.sub
     local.tee $14
     i32.add
     local.tee $16
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $16
     global.set $~lib/rt/stub/offset
     local.get $15
     local.get $14
     i32.store $0
     local.get $1
     local.get $0
     local.get $13
     memory.copy $0 $0
     local.get $1
     local.set $0
    end
   else
    local.get $14
    if
     local.get $0
     local.get $16
     i32.add
     global.set $~lib/rt/stub/offset
     local.get $1
     local.get $16
     i32.store $0
    end
   end
   local.get $0
   i32.const 4
   i32.sub
   local.get $12
   i32.store $0 offset=8
   local.get $0
   i32.const 16
   i32.add
   local.tee $0
   local.get $10
   i32.add
   i32.const 0
   local.get $12
   local.get $10
   i32.sub
   memory.fill $0
   local.get $0
   local.get $11
   i32.ne
   if
    local.get $2
    local.get $0
    i32.store $0
    local.get $2
    local.get $0
    i32.store $0 offset=4
   end
   local.get $2
   local.get $12
   i32.store $0 offset=8
  end
  local.get $2
  i32.load $0 offset=4
  local.get $3
  i32.const 2
  i32.shl
  i32.add
  i32.const 45
  i32.store $0
  local.get $2
  local.get $5
  i32.store $0 offset=12
  global.get $std/array/arr
  i32.load $0 offset=12
  i32.const 3
  i32.ne
  if
   unreachable
  end
  global.get $std/array/arr
  i32.load $0
  i32.const 20
  i32.sub
  i32.load $0 offset=8
  i32.const 2
  i32.shr_s
  i32.const 8
  i32.ne
  if
   unreachable
  end
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  i32.eqz
  if
   unreachable
  end
  local.get $0
  i32.load $0 offset=4
  i32.load $0
  i32.const 43
  i32.ne
  if
   unreachable
  end
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  i32.const 1
  i32.le_u
  if
   unreachable
  end
  local.get $0
  i32.load $0 offset=4
  i32.load $0 offset=4
  i32.const 44
  i32.ne
  if
   unreachable
  end
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  i32.const 2
  i32.le_u
  if
   unreachable
  end
  local.get $0
  i32.load $0 offset=4
  i32.load $0 offset=8
  i32.const 45
  i32.ne
  if
   unreachable
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 28
  i32.add
  local.tee $2
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $2
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 28
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 0
  i32.store $0 offset=4
  local.get $0
  i32.const 8
  i32.store $0 offset=8
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $2
  i32.const 44
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 44
  i32.store $0
  local.get $2
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 9
  i32.store $0 offset=4
  local.get $0
  i32.const 16
  i32.store $0 offset=8
  local.get $2
  local.get $1
  i32.const 16
  i32.add
  local.tee $0
  i32.store $0 offset=16
  local.get $2
  local.get $0
  i32.store $0 offset=20
  local.get $2
  i32.const 8
  i32.store $0 offset=24
  local.get $2
  i32.const 2
  i32.store $0 offset=28
  local.get $2
  i32.load $0 offset=20
  drop
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 28
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 28
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 4
  i32.store $0 offset=4
  local.get $0
  i32.const 4
  i32.store $0 offset=8
  local.get $1
  i32.const 0
  i32.store $0 offset=16
  local.get $2
  i32.load $0 offset=20
  local.get $1
  i32.const 16
  i32.add
  i32.store $0
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 28
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 28
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 4
  i32.store $0 offset=4
  local.get $0
  i32.const 4
  i32.store $0 offset=8
  local.get $1
  i32.const 0
  i32.store $0 offset=16
  local.get $2
  i32.load $0 offset=20
  local.get $1
  i32.const 16
  i32.add
  i32.store $0 offset=4
  local.get $2
  i32.load $0 offset=24
  drop
  local.get $2
  i32.const 0
  i32.store $0 offset=28
  local.get $2
  i32.load $0 offset=28
  if
   unreachable
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 44
  i32.add
  local.tee $2
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $2
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 44
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 0
  i32.store $0 offset=4
  local.get $0
  i32.const 16
  i32.store $0 offset=8
  local.get $1
  i32.const 16
  i32.add
  local.tee $1
  i32.const 2256
  i64.load $0
  i64.store $0
  local.get $1
  i32.const 2264
  i64.load $0
  i64.store $0 offset=8
  i32.const 2272
  local.set $2
  local.get $1
  i32.const 16
  i32.add
  local.set $0
  i32.const 0
  local.set $3
  local.get $3
  if
   local.get $0
   local.get $2
   i32.load8_u $0
   i32.store8 $0
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $2
  i32.const 44
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 44
  i32.store $0
  local.get $2
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 3
  i32.store $0 offset=4
  local.get $0
  i32.const 16
  i32.store $0 offset=8
  local.get $2
  local.get $1
  i32.store $0 offset=16
  local.get $2
  local.get $1
  i32.store $0 offset=20
  local.get $2
  i32.const 16
  i32.store $0 offset=24
  local.get $2
  i32.const 4
  i32.store $0 offset=28
  local.get $2
  i32.load $0 offset=28
  i32.eqz
  if
   unreachable
  end
  local.get $2
  i32.load $0 offset=20
  i32.load $0
  i32.const 1
  i32.ne
  if
   unreachable
  end
  local.get $2
  i32.load $0 offset=28
  i32.const 3
  i32.le_u
  if
   unreachable
  end
  local.get $2
  i32.load $0 offset=20
  i32.load $0 offset=12
  i32.const 4
  i32.ne
  if
   unreachable
  end
  local.get $2
  i32.load $0 offset=28
  local.tee $0
  i32.const 1
  i32.sub
  local.set $1
  local.get $0
  local.get $1
  i32.le_u
  if
   unreachable
  end
  local.get $2
  i32.load $0 offset=20
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  i32.const 4
  i32.ne
  if
   unreachable
  end
  local.get $2
  i32.load $0 offset=28
  local.tee $0
  i32.const 4
  i32.sub
  local.set $1
  local.get $0
  local.get $1
  i32.le_u
  if
   unreachable
  end
  local.get $2
  i32.load $0 offset=20
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  i32.const 1
  i32.ne
  if
   unreachable
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 44
  i32.add
  local.tee $2
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $2
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 44
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 3
  i32.store $0 offset=4
  local.get $0
  i32.const 16
  i32.store $0 offset=8
  local.get $1
  i32.const 0
  i32.store $0 offset=16
  local.get $1
  i32.const 0
  i32.store $0 offset=20
  local.get $1
  i32.const 0
  i32.store $0 offset=24
  local.get $1
  i32.const 0
  i32.store $0 offset=28
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $2
  i32.const 60
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 60
  i32.store $0
  local.get $2
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 0
  i32.store $0 offset=4
  local.get $0
  i32.const 32
  i32.store $0 offset=8
  local.get $2
  i32.const 16
  i32.add
  local.tee $0
  i32.const 0
  i32.const 32
  memory.fill $0
  local.get $1
  local.get $0
  i32.store $0 offset=16
  local.get $1
  local.get $0
  i32.store $0 offset=20
  local.get $1
  i32.const 32
  i32.store $0 offset=24
  local.get $1
  i32.const 0
  i32.store $0 offset=28
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  local.tee $2
  local.get $1
  i32.load $0 offset=28
  local.tee $3
  i32.add
  local.tee $5
  i32.const 268435455
  i32.gt_u
  if
   unreachable
  end
  local.get $5
  i32.const 2
  i32.shl
  local.tee $10
  i32.const 16
  i32.add
  local.tee $11
  i32.const 1073741820
  i32.gt_u
  if
   unreachable
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $12
  i32.const 4
  i32.add
  local.tee $13
  local.get $11
  i32.const 19
  i32.add
  i32.const -16
  i32.and
  i32.const 4
  i32.sub
  local.tee $11
  i32.add
  local.tee $14
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $14
  global.set $~lib/rt/stub/offset
  local.get $12
  local.get $11
  i32.store $0
  local.get $13
  i32.const 4
  i32.sub
  local.tee $11
  i32.const 0
  i32.store $0 offset=4
  local.get $11
  local.get $10
  i32.store $0 offset=8
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $11
  i32.const 4
  i32.add
  local.tee $12
  i32.const 44
  i32.add
  local.tee $14
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $14
  global.set $~lib/rt/stub/offset
  local.get $11
  i32.const 44
  i32.store $0
  local.get $12
  i32.const 4
  i32.sub
  local.tee $11
  i32.const 3
  i32.store $0 offset=4
  local.get $11
  i32.const 16
  i32.store $0 offset=8
  local.get $12
  local.get $13
  i32.const 16
  i32.add
  local.tee $11
  i32.store $0 offset=16
  local.get $12
  local.get $11
  i32.store $0 offset=20
  local.get $12
  local.get $10
  i32.store $0 offset=24
  local.get $12
  local.get $5
  i32.store $0 offset=28
  local.get $12
  i32.load $0 offset=20
  local.tee $5
  local.get $0
  i32.load $0 offset=4
  local.get $2
  i32.const 2
  i32.shl
  local.tee $0
  memory.copy $0 $0
  local.get $0
  local.get $5
  i32.add
  local.get $1
  i32.load $0 offset=20
  local.get $3
  i32.const 2
  i32.shl
  memory.copy $0 $0
  global.get $std/array/arr
  i32.load $0
  i32.const 20
  i32.sub
  i32.load $0 offset=8
  i32.const 2
  i32.shr_s
  i32.const 8
  i32.ne
  if
   unreachable
  end
  global.get $std/array/arr
  i32.load $0 offset=12
  i32.const 3
  i32.ne
  if
   unreachable
  end
  local.get $12
  i32.load $0 offset=28
  i32.const 3
  i32.ne
  if
   unreachable
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $2
  i32.const 28
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 28
  i32.store $0
  local.get $2
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0 offset=8
  local.get $2
  i32.const 16
  i32.add
  local.set $0
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $2
  i32.const 4
  i32.add
  local.tee $3
  i32.const 44
  i32.add
  local.tee $5
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $5
  global.set $~lib/rt/stub/offset
  local.get $2
  i32.const 44
  i32.store $0
  local.get $3
  i32.const 4
  i32.sub
  local.tee $2
  i32.const 3
  i32.store $0 offset=4
  local.get $2
  i32.const 16
  i32.store $0 offset=8
  local.get $3
  i32.const 16
  i32.add
  local.get $0
  i32.store $0
  local.get $3
  local.get $0
  i32.store $0 offset=20
  local.get $3
  i32.const 0
  i32.store $0 offset=24
  local.get $3
  i32.const 0
  i32.store $0 offset=28
  local.get $12
  i32.load $0 offset=28
  local.tee $0
  local.get $3
  i32.load $0 offset=28
  local.tee $2
  i32.add
  local.tee $5
  i32.const 268435455
  i32.gt_u
  if
   unreachable
  end
  local.get $5
  i32.const 2
  i32.shl
  local.tee $10
  i32.const 16
  i32.add
  local.tee $11
  i32.const 1073741820
  i32.gt_u
  if
   unreachable
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $13
  i32.const 4
  i32.add
  local.tee $14
  local.get $11
  i32.const 19
  i32.add
  i32.const -16
  i32.and
  i32.const 4
  i32.sub
  local.tee $11
  i32.add
  local.tee $15
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $15
  global.set $~lib/rt/stub/offset
  local.get $13
  local.get $11
  i32.store $0
  local.get $14
  i32.const 4
  i32.sub
  local.tee $11
  i32.const 0
  i32.store $0 offset=4
  local.get $11
  local.get $10
  i32.store $0 offset=8
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $11
  i32.const 4
  i32.add
  local.tee $13
  i32.const 44
  i32.add
  local.tee $15
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $15
  global.set $~lib/rt/stub/offset
  local.get $11
  i32.const 44
  i32.store $0
  local.get $13
  i32.const 4
  i32.sub
  local.tee $11
  i32.const 3
  i32.store $0 offset=4
  local.get $11
  i32.const 16
  i32.store $0 offset=8
  local.get $13
  local.get $14
  i32.const 16
  i32.add
  local.tee $11
  i32.store $0 offset=16
  local.get $13
  local.get $11
  i32.store $0 offset=20
  local.get $13
  local.get $10
  i32.store $0 offset=24
  local.get $13
  local.get $5
  i32.store $0 offset=28
  local.get $13
  i32.load $0 offset=20
  local.tee $5
  local.get $12
  i32.load $0 offset=20
  local.get $0
  i32.const 2
  i32.shl
  local.tee $0
  memory.copy $0 $0
  local.get $0
  local.get $5
  i32.add
  local.get $3
  i32.load $0 offset=20
  local.get $2
  i32.const 2
  i32.shl
  memory.copy $0 $0
  global.get $std/array/arr
  i32.load $0
  i32.const 20
  i32.sub
  i32.load $0 offset=8
  i32.const 2
  i32.shr_s
  i32.const 8
  i32.ne
  if
   unreachable
  end
  local.get $12
  i32.load $0 offset=28
  i32.eqz
  if
   unreachable
  end
  local.get $12
  i32.load $0 offset=20
  i32.load $0
  i32.const 43
  i32.ne
  if
   unreachable
  end
  local.get $12
  i32.load $0 offset=28
  i32.const 1
  i32.le_u
  if
   unreachable
  end
  local.get $12
  i32.load $0 offset=20
  i32.load $0 offset=4
  i32.const 44
  i32.ne
  if
   unreachable
  end
  local.get $12
  i32.load $0 offset=28
  i32.const 2
  i32.le_u
  if
   unreachable
  end
  local.get $12
  i32.load $0 offset=20
  i32.load $0 offset=8
  i32.const 45
  i32.ne
  if
   unreachable
  end
  local.get $1
  i32.load $0 offset=28
  local.tee $3
  i32.const 1
  i32.add
  local.tee $5
  local.tee $0
  local.get $1
  i32.load $0 offset=24
  local.tee $10
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   local.get $0
   i32.const 268435455
   i32.gt_u
   if
    unreachable
   end
   local.get $1
   i32.load $0 offset=16
   local.set $11
   i32.const 1073741820
   local.get $10
   i32.const 1
   i32.shl
   local.tee $2
   local.get $2
   i32.const 1073741820
   i32.ge_u
   select
   local.tee $2
   i32.const 8
   local.get $0
   local.get $0
   i32.const 8
   i32.le_u
   select
   i32.const 2
   i32.shl
   local.tee $0
   local.get $0
   local.get $2
   i32.lt_u
   select
   local.tee $12
   i32.const 1073741804
   i32.gt_u
   if
    unreachable
   end
   local.get $11
   i32.const 16
   i32.sub
   local.tee $2
   i32.const 15
   i32.and
   i32.const 1
   local.get $2
   select
   if
    unreachable
   end
   global.get $~lib/rt/stub/offset
   local.get $2
   i32.const 4
   i32.sub
   local.tee $0
   i32.load $0
   local.tee $13
   local.get $2
   i32.add
   i32.eq
   local.set $14
   local.get $12
   i32.const 16
   i32.add
   local.tee $15
   i32.const 19
   i32.add
   i32.const -16
   i32.and
   i32.const 4
   i32.sub
   local.set $16
   local.get $13
   local.get $15
   i32.lt_u
   if
    local.get $14
    if
     local.get $15
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     local.get $2
     local.get $16
     i32.add
     local.tee $13
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $13
     global.set $~lib/rt/stub/offset
     local.get $0
     local.get $16
     i32.store $0
    else
     local.get $16
     local.get $13
     i32.const 1
     i32.shl
     local.tee $0
     local.get $0
     local.get $16
     i32.lt_u
     select
     local.tee $14
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     global.get $~lib/rt/stub/offset
     i32.eqz
     if
      i32.const 9932
      global.set $~lib/rt/stub/offset
     end
     global.get $~lib/rt/stub/offset
     local.tee $0
     local.set $15
     local.get $0
     i32.const 4
     i32.add
     local.tee $0
     local.get $14
     i32.const 19
     i32.add
     i32.const -16
     i32.and
     i32.const 4
     i32.sub
     local.tee $14
     i32.add
     local.tee $16
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $16
     global.set $~lib/rt/stub/offset
     local.get $15
     local.get $14
     i32.store $0
     local.get $0
     local.get $2
     local.get $13
     memory.copy $0 $0
     local.get $0
     local.set $2
    end
   else
    local.get $14
    if
     local.get $2
     local.get $16
     i32.add
     global.set $~lib/rt/stub/offset
     local.get $0
     local.get $16
     i32.store $0
    end
   end
   local.get $2
   i32.const 4
   i32.sub
   local.get $12
   i32.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $0
   local.get $10
   i32.add
   i32.const 0
   local.get $12
   local.get $10
   i32.sub
   memory.fill $0
   local.get $0
   local.get $11
   i32.ne
   if
    local.get $1
    local.get $0
    i32.store $0 offset=16
    local.get $1
    local.get $0
    i32.store $0 offset=20
   end
   local.get $1
   local.get $12
   i32.store $0 offset=24
  end
  local.get $1
  i32.load $0 offset=20
  local.get $3
  i32.const 2
  i32.shl
  i32.add
  i32.const 46
  i32.store $0
  local.get $1
  local.get $5
  i32.store $0 offset=28
  local.get $1
  i32.load $0 offset=28
  local.tee $3
  i32.const 1
  i32.add
  local.tee $5
  local.tee $0
  local.get $1
  i32.load $0 offset=24
  local.tee $10
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   local.get $0
   i32.const 268435455
   i32.gt_u
   if
    unreachable
   end
   local.get $1
   i32.load $0 offset=16
   local.set $11
   i32.const 1073741820
   local.get $10
   i32.const 1
   i32.shl
   local.tee $2
   local.get $2
   i32.const 1073741820
   i32.ge_u
   select
   local.tee $2
   i32.const 8
   local.get $0
   local.get $0
   i32.const 8
   i32.le_u
   select
   i32.const 2
   i32.shl
   local.tee $0
   local.get $0
   local.get $2
   i32.lt_u
   select
   local.tee $12
   i32.const 1073741804
   i32.gt_u
   if
    unreachable
   end
   local.get $11
   i32.const 16
   i32.sub
   local.tee $2
   i32.const 15
   i32.and
   i32.const 1
   local.get $2
   select
   if
    unreachable
   end
   global.get $~lib/rt/stub/offset
   local.get $2
   i32.const 4
   i32.sub
   local.tee $0
   i32.load $0
   local.tee $13
   local.get $2
   i32.add
   i32.eq
   local.set $14
   local.get $12
   i32.const 16
   i32.add
   local.tee $15
   i32.const 19
   i32.add
   i32.const -16
   i32.and
   i32.const 4
   i32.sub
   local.set $16
   local.get $13
   local.get $15
   i32.lt_u
   if
    local.get $14
    if
     local.get $15
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     local.get $2
     local.get $16
     i32.add
     local.tee $13
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $13
     global.set $~lib/rt/stub/offset
     local.get $0
     local.get $16
     i32.store $0
    else
     local.get $16
     local.get $13
     i32.const 1
     i32.shl
     local.tee $0
     local.get $0
     local.get $16
     i32.lt_u
     select
     local.tee $14
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     global.get $~lib/rt/stub/offset
     i32.eqz
     if
      i32.const 9932
      global.set $~lib/rt/stub/offset
     end
     global.get $~lib/rt/stub/offset
     local.tee $0
     local.set $15
     local.get $0
     i32.const 4
     i32.add
     local.tee $0
     local.get $14
     i32.const 19
     i32.add
     i32.const -16
     i32.and
     i32.const 4
     i32.sub
     local.tee $14
     i32.add
     local.tee $16
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $16
     global.set $~lib/rt/stub/offset
     local.get $15
     local.get $14
     i32.store $0
     local.get $0
     local.get $2
     local.get $13
     memory.copy $0 $0
     local.get $0
     local.set $2
    end
   else
    local.get $14
    if
     local.get $2
     local.get $16
     i32.add
     global.set $~lib/rt/stub/offset
     local.get $0
     local.get $16
     i32.store $0
    end
   end
   local.get $2
   i32.const 4
   i32.sub
   local.get $12
   i32.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $0
   local.get $10
   i32.add
   i32.const 0
   local.get $12
   local.get $10
   i32.sub
   memory.fill $0
   local.get $0
   local.get $11
   i32.ne
   if
    local.get $1
    local.get $0
    i32.store $0 offset=16
    local.get $1
    local.get $0
    i32.store $0 offset=20
   end
   local.get $1
   local.get $12
   i32.store $0 offset=24
  end
  local.get $1
  i32.load $0 offset=20
  local.get $3
  i32.const 2
  i32.shl
  i32.add
  i32.const 47
  i32.store $0
  local.get $1
  local.get $5
  i32.store $0 offset=28
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  local.tee $2
  local.get $1
  i32.load $0 offset=28
  local.tee $3
  i32.add
  local.tee $5
  i32.const 268435455
  i32.gt_u
  if
   unreachable
  end
  local.get $5
  i32.const 2
  i32.shl
  local.tee $10
  i32.const 16
  i32.add
  local.tee $11
  i32.const 1073741820
  i32.gt_u
  if
   unreachable
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $12
  i32.const 4
  i32.add
  local.tee $13
  local.get $11
  i32.const 19
  i32.add
  i32.const -16
  i32.and
  i32.const 4
  i32.sub
  local.tee $11
  i32.add
  local.tee $14
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $14
  global.set $~lib/rt/stub/offset
  local.get $12
  local.get $11
  i32.store $0
  local.get $13
  i32.const 4
  i32.sub
  local.tee $11
  i32.const 0
  i32.store $0 offset=4
  local.get $11
  local.get $10
  i32.store $0 offset=8
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $11
  i32.const 4
  i32.add
  local.tee $12
  i32.const 44
  i32.add
  local.tee $14
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $14
  global.set $~lib/rt/stub/offset
  local.get $11
  i32.const 44
  i32.store $0
  local.get $12
  i32.const 4
  i32.sub
  local.tee $11
  i32.const 3
  i32.store $0 offset=4
  local.get $11
  i32.const 16
  i32.store $0 offset=8
  local.get $12
  local.get $13
  i32.const 16
  i32.add
  local.tee $11
  i32.store $0 offset=16
  local.get $12
  local.get $11
  i32.store $0 offset=20
  local.get $12
  local.get $10
  i32.store $0 offset=24
  local.get $12
  local.get $5
  i32.store $0 offset=28
  local.get $12
  i32.load $0 offset=20
  local.tee $5
  local.get $0
  i32.load $0 offset=4
  local.get $2
  i32.const 2
  i32.shl
  local.tee $0
  memory.copy $0 $0
  local.get $0
  local.get $5
  i32.add
  local.get $1
  i32.load $0 offset=20
  local.get $3
  i32.const 2
  i32.shl
  memory.copy $0 $0
  global.get $std/array/arr
  i32.load $0
  i32.const 20
  i32.sub
  i32.load $0 offset=8
  i32.const 2
  i32.shr_s
  i32.const 8
  i32.ne
  if
   unreachable
  end
  local.get $1
  i32.load $0 offset=28
  i32.const 2
  i32.ne
  if
   unreachable
  end
  local.get $12
  i32.load $0 offset=28
  i32.const 5
  i32.ne
  if
   unreachable
  end
  local.get $12
  i32.load $0 offset=28
  i32.eqz
  if
   unreachable
  end
  local.get $12
  i32.load $0 offset=20
  i32.load $0
  i32.const 43
  i32.ne
  if
   unreachable
  end
  local.get $12
  i32.load $0 offset=28
  i32.const 1
  i32.le_u
  if
   unreachable
  end
  local.get $12
  i32.load $0 offset=20
  i32.load $0 offset=4
  i32.const 44
  i32.ne
  if
   unreachable
  end
  local.get $12
  i32.load $0 offset=28
  i32.const 2
  i32.le_u
  if
   unreachable
  end
  local.get $12
  i32.load $0 offset=20
  i32.load $0 offset=8
  i32.const 45
  i32.ne
  if
   unreachable
  end
  local.get $12
  i32.load $0 offset=28
  i32.const 3
  i32.le_u
  if
   unreachable
  end
  local.get $12
  i32.load $0 offset=20
  i32.load $0 offset=12
  i32.const 46
  i32.ne
  if
   unreachable
  end
  local.get $12
  i32.load $0 offset=28
  i32.const 4
  i32.le_u
  if
   unreachable
  end
  local.get $12
  i32.load $0 offset=20
  i32.load $0 offset=16
  i32.const 47
  i32.ne
  if
   unreachable
  end
  local.get $12
  i32.load $0 offset=28
  local.tee $0
  i32.const 0
  i32.le_s
  if
   unreachable
  end
  local.get $12
  i32.load $0 offset=20
  local.get $0
  i32.const 1
  i32.sub
  local.tee $0
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  drop
  local.get $12
  local.get $0
  i32.store $0 offset=28
  local.get $12
  i32.load $0 offset=28
  i32.const 4
  i32.ne
  if
   unreachable
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 28
  i32.add
  local.tee $2
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $2
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 28
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0 offset=8
  local.get $1
  i32.const 16
  i32.add
  local.set $0
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $1
  i32.const 4
  i32.add
  local.tee $2
  i32.const 44
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $1
  i32.const 44
  i32.store $0
  local.get $2
  i32.const 4
  i32.sub
  local.tee $1
  i32.const 3
  i32.store $0 offset=4
  local.get $1
  i32.const 16
  i32.store $0 offset=8
  local.get $2
  local.get $0
  i32.store $0 offset=16
  local.get $2
  local.get $0
  i32.store $0 offset=20
  local.get $2
  i32.const 0
  i32.store $0 offset=24
  local.get $2
  i32.const 0
  i32.store $0 offset=28
  local.get $2
  i32.load $0 offset=28
  if
   unreachable
  end
  local.get $2
  i32.load $0 offset=28
  local.tee $0
  global.get $std/array/arr
  local.tee $1
  i32.load $0 offset=12
  local.tee $3
  i32.add
  local.tee $5
  i32.const 268435455
  i32.gt_u
  if
   unreachable
  end
  local.get $5
  i32.const 2
  i32.shl
  local.tee $10
  i32.const 16
  i32.add
  local.tee $11
  i32.const 1073741820
  i32.gt_u
  if
   unreachable
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $12
  i32.const 4
  i32.add
  local.tee $13
  local.get $11
  i32.const 19
  i32.add
  i32.const -16
  i32.and
  i32.const 4
  i32.sub
  local.tee $11
  i32.add
  local.tee $14
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $14
  global.set $~lib/rt/stub/offset
  local.get $12
  local.get $11
  i32.store $0
  local.get $13
  i32.const 4
  i32.sub
  local.tee $11
  i32.const 0
  i32.store $0 offset=4
  local.get $11
  local.get $10
  i32.store $0 offset=8
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $11
  i32.const 4
  i32.add
  local.tee $12
  i32.const 44
  i32.add
  local.tee $14
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $14
  global.set $~lib/rt/stub/offset
  local.get $11
  i32.const 44
  i32.store $0
  local.get $12
  i32.const 4
  i32.sub
  local.tee $11
  i32.const 3
  i32.store $0 offset=4
  local.get $11
  i32.const 16
  i32.store $0 offset=8
  local.get $12
  local.get $13
  i32.const 16
  i32.add
  local.tee $11
  i32.store $0 offset=16
  local.get $12
  local.get $11
  i32.store $0 offset=20
  local.get $12
  local.get $10
  i32.store $0 offset=24
  local.get $12
  local.get $5
  i32.store $0 offset=28
  local.get $12
  i32.load $0 offset=20
  local.tee $5
  local.get $2
  i32.load $0 offset=20
  local.get $0
  i32.const 2
  i32.shl
  local.tee $0
  memory.copy $0 $0
  local.get $0
  local.get $5
  i32.add
  local.get $1
  i32.load $0 offset=4
  local.get $3
  i32.const 2
  i32.shl
  memory.copy $0 $0
  local.get $12
  i32.load $0 offset=28
  i32.const 3
  i32.ne
  if
   unreachable
  end
  local.get $2
  i32.load $0 offset=28
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.0 (result i32)
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $1
   i32.const 44
   i32.add
   local.tee $2
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $2
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 20
   i32.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $1
   i32.const 2368
   i64.load $0
   i64.store $0
   local.get $1
   i32.const 2376
   i64.load $0
   i64.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $0
   i32.const 2384
   i32.load $0
   i32.store $0
   i32.const 2388
   local.set $2
   local.get $0
   i32.const 4
   i32.add
   local.set $0
   i32.const 0
   local.set $3
   local.get $3
   if
    local.get $0
    local.get $2
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $2
   i32.const 44
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 3
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $2
   local.get $1
   i32.store $0
   local.get $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   i32.const 20
   i32.store $0 offset=8
   local.get $2
   i32.const 5
   i32.store $0 offset=12
   local.get $2
   i32.load $0 offset=4
   local.tee $0
   local.get $2
   i32.load $0 offset=12
   local.tee $1
   i32.const 0
   local.get $1
   i32.const 0
   i32.le_s
   select
   local.tee $3
   i32.const 2
   i32.shl
   i32.add
   local.get $0
   i32.const 3
   local.get $1
   local.get $1
   i32.const 3
   i32.gt_s
   select
   local.tee $0
   i32.const 2
   i32.shl
   i32.add
   local.get $1
   i32.const 0
   i32.lt_s
   if (result i32)
    local.get $1
    local.get $1
    i32.add
    local.tee $5
    i32.const 0
    local.get $5
    i32.const 0
    i32.gt_s
    select
   else
    local.get $1
   end
   local.get $0
   i32.sub
   local.tee $0
   local.get $1
   local.get $3
   i32.sub
   local.tee $1
   local.get $0
   local.get $1
   i32.lt_s
   select
   i32.const 2
   i32.shl
   memory.copy $0 $0
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $1
   i32.const 44
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 20
   i32.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $1
   i32.const 2416
   i64.load $0
   i64.store $0
   local.get $1
   i32.const 2424
   i64.load $0
   i64.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $0
   i32.const 2432
   i32.load $0
   i32.store $0
   i32.const 2436
   local.set $3
   local.get $0
   i32.const 4
   i32.add
   local.set $0
   i32.const 0
   local.set $5
   local.get $5
   if
    local.get $0
    local.get $3
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $3
   i32.const 44
   i32.add
   local.tee $5
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $5
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $3
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 3
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $3
   i32.const 16
   i32.add
   local.tee $0
   local.get $1
   i32.store $0
   local.get $0
   local.get $1
   i32.store $0 offset=4
   local.get $0
   i32.const 20
   i32.store $0 offset=8
   local.get $0
   i32.const 5
   i32.store $0 offset=12
   i32.const 0
   local.get $2
   i32.load $0 offset=12
   local.tee $3
   local.get $0
   i32.load $0 offset=12
   i32.ne
   br_if $std/array/isArraysEqual<i32>|inlined.0
   drop
   i32.const 1
   local.get $0
   local.get $2
   i32.eq
   br_if $std/array/isArraysEqual<i32>|inlined.0
   drop
   i32.const 0
   local.set $1
   loop $for-loop|19
    local.get $1
    local.get $3
    i32.lt_s
    if
     local.get $1
     local.get $2
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $1
     local.get $0
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $1
     i32.const 2
     i32.shl
     local.tee $5
     local.get $2
     i32.load $0 offset=4
     i32.add
     i32.load $0
     local.get $0
     i32.load $0 offset=4
     local.get $5
     i32.add
     i32.load $0
     i32.ne
     br_if $std/array/isArraysEqual<i32>|inlined.0
     drop
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|19
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.1 (result i32)
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $1
   i32.const 44
   i32.add
   local.tee $2
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $2
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 20
   i32.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $1
   i32.const 2464
   i64.load $0
   i64.store $0
   local.get $1
   i32.const 2472
   i64.load $0
   i64.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $0
   i32.const 2480
   i32.load $0
   i32.store $0
   i32.const 2484
   local.set $2
   local.get $0
   i32.const 4
   i32.add
   local.set $0
   i32.const 0
   local.set $3
   local.get $3
   if
    local.get $0
    local.get $2
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $2
   i32.const 44
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 3
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $2
   local.get $1
   i32.store $0
   local.get $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   i32.const 20
   i32.store $0 offset=8
   local.get $2
   i32.const 5
   i32.store $0 offset=12
   local.get $2
   i32.load $0 offset=4
   local.tee $0
   i32.const 1
   local.get $2
   i32.load $0 offset=12
   local.tee $1
   local.get $1
   i32.const 1
   i32.gt_s
   select
   local.tee $3
   i32.const 2
   i32.shl
   i32.add
   local.get $0
   i32.const 3
   local.get $1
   local.get $1
   i32.const 3
   i32.gt_s
   select
   local.tee $0
   i32.const 2
   i32.shl
   i32.add
   local.get $1
   i32.const 0
   i32.lt_s
   if (result i32)
    local.get $1
    local.get $1
    i32.add
    local.tee $5
    i32.const 0
    local.get $5
    i32.const 0
    i32.gt_s
    select
   else
    local.get $1
   end
   local.get $0
   i32.sub
   local.tee $0
   local.get $1
   local.get $3
   i32.sub
   local.tee $1
   local.get $0
   local.get $1
   i32.lt_s
   select
   i32.const 2
   i32.shl
   memory.copy $0 $0
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $1
   i32.const 44
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 20
   i32.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $1
   i32.const 2512
   i64.load $0
   i64.store $0
   local.get $1
   i32.const 2520
   i64.load $0
   i64.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $0
   i32.const 2528
   i32.load $0
   i32.store $0
   i32.const 2532
   local.set $3
   local.get $0
   i32.const 4
   i32.add
   local.set $0
   i32.const 0
   local.set $5
   local.get $5
   if
    local.get $0
    local.get $3
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $3
   i32.const 44
   i32.add
   local.tee $5
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $5
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $3
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 3
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $3
   i32.const 16
   i32.add
   local.tee $0
   local.get $1
   i32.store $0
   local.get $0
   local.get $1
   i32.store $0 offset=4
   local.get $0
   i32.const 20
   i32.store $0 offset=8
   local.get $0
   i32.const 5
   i32.store $0 offset=12
   i32.const 0
   local.get $2
   i32.load $0 offset=12
   local.tee $3
   local.get $0
   i32.load $0 offset=12
   i32.ne
   br_if $std/array/isArraysEqual<i32>|inlined.1
   drop
   i32.const 1
   local.get $0
   local.get $2
   i32.eq
   br_if $std/array/isArraysEqual<i32>|inlined.1
   drop
   i32.const 0
   local.set $1
   loop $for-loop|20
    local.get $1
    local.get $3
    i32.lt_s
    if
     local.get $1
     local.get $2
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $1
     local.get $0
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $1
     i32.const 2
     i32.shl
     local.tee $5
     local.get $2
     i32.load $0 offset=4
     i32.add
     i32.load $0
     local.get $0
     i32.load $0 offset=4
     local.get $5
     i32.add
     i32.load $0
     i32.ne
     br_if $std/array/isArraysEqual<i32>|inlined.1
     drop
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|20
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.2 (result i32)
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $1
   i32.const 44
   i32.add
   local.tee $2
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $2
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 20
   i32.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $1
   i32.const 2560
   i64.load $0
   i64.store $0
   local.get $1
   i32.const 2568
   i64.load $0
   i64.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $0
   i32.const 2576
   i32.load $0
   i32.store $0
   i32.const 2580
   local.set $2
   local.get $0
   i32.const 4
   i32.add
   local.set $0
   i32.const 0
   local.set $3
   local.get $3
   if
    local.get $0
    local.get $2
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $2
   i32.const 44
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 3
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $2
   local.get $1
   i32.store $0
   local.get $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   i32.const 20
   i32.store $0 offset=8
   local.get $2
   i32.const 5
   i32.store $0 offset=12
   local.get $2
   i32.load $0 offset=4
   local.tee $0
   i32.const 1
   local.get $2
   i32.load $0 offset=12
   local.tee $1
   local.get $1
   i32.const 1
   i32.gt_s
   select
   local.tee $3
   i32.const 2
   i32.shl
   i32.add
   local.get $0
   i32.const 2
   local.get $1
   local.get $1
   i32.const 2
   i32.gt_s
   select
   local.tee $0
   i32.const 2
   i32.shl
   i32.add
   local.get $1
   i32.const 0
   i32.lt_s
   if (result i32)
    local.get $1
    local.get $1
    i32.add
    local.tee $5
    i32.const 0
    local.get $5
    i32.const 0
    i32.gt_s
    select
   else
    local.get $1
   end
   local.get $0
   i32.sub
   local.tee $0
   local.get $1
   local.get $3
   i32.sub
   local.tee $1
   local.get $0
   local.get $1
   i32.lt_s
   select
   i32.const 2
   i32.shl
   memory.copy $0 $0
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $1
   i32.const 44
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 20
   i32.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $1
   i32.const 2608
   i64.load $0
   i64.store $0
   local.get $1
   i32.const 2616
   i64.load $0
   i64.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $0
   i32.const 2624
   i32.load $0
   i32.store $0
   i32.const 2628
   local.set $3
   local.get $0
   i32.const 4
   i32.add
   local.set $0
   i32.const 0
   local.set $5
   local.get $5
   if
    local.get $0
    local.get $3
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $3
   i32.const 44
   i32.add
   local.tee $5
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $5
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $3
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 3
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $3
   i32.const 16
   i32.add
   local.tee $0
   local.get $1
   i32.store $0
   local.get $0
   local.get $1
   i32.store $0 offset=4
   local.get $0
   i32.const 20
   i32.store $0 offset=8
   local.get $0
   i32.const 5
   i32.store $0 offset=12
   i32.const 0
   local.get $2
   i32.load $0 offset=12
   local.tee $3
   local.get $0
   i32.load $0 offset=12
   i32.ne
   br_if $std/array/isArraysEqual<i32>|inlined.2
   drop
   i32.const 1
   local.get $0
   local.get $2
   i32.eq
   br_if $std/array/isArraysEqual<i32>|inlined.2
   drop
   i32.const 0
   local.set $1
   loop $for-loop|21
    local.get $1
    local.get $3
    i32.lt_s
    if
     local.get $1
     local.get $2
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $1
     local.get $0
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $1
     i32.const 2
     i32.shl
     local.tee $5
     local.get $2
     i32.load $0 offset=4
     i32.add
     i32.load $0
     local.get $0
     i32.load $0 offset=4
     local.get $5
     i32.add
     i32.load $0
     i32.ne
     br_if $std/array/isArraysEqual<i32>|inlined.2
     drop
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|21
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.3 (result i32)
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $1
   i32.const 44
   i32.add
   local.tee $2
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $2
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 20
   i32.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $1
   i32.const 2656
   i64.load $0
   i64.store $0
   local.get $1
   i32.const 2664
   i64.load $0
   i64.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $0
   i32.const 2672
   i32.load $0
   i32.store $0
   i32.const 2676
   local.set $2
   local.get $0
   i32.const 4
   i32.add
   local.set $0
   i32.const 0
   local.set $3
   local.get $3
   if
    local.get $0
    local.get $2
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $2
   i32.const 44
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 3
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $2
   local.get $1
   i32.store $0
   local.get $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   i32.const 20
   i32.store $0 offset=8
   local.get $2
   i32.const 5
   i32.store $0 offset=12
   local.get $2
   i32.load $0 offset=4
   i32.const 2
   local.get $2
   i32.load $0 offset=12
   local.tee $0
   local.get $0
   i32.const 2
   i32.gt_s
   select
   local.tee $1
   i32.const 2
   i32.shl
   i32.add
   local.tee $3
   local.get $3
   local.get $0
   i32.const 0
   i32.lt_s
   if (result i32)
    local.get $0
    local.get $0
    i32.add
    local.tee $3
    i32.const 0
    local.get $3
    i32.const 0
    i32.gt_s
    select
   else
    local.get $0
   end
   local.get $1
   i32.sub
   local.tee $3
   local.get $0
   local.get $1
   i32.sub
   local.tee $0
   local.get $0
   local.get $3
   i32.gt_s
   select
   i32.const 2
   i32.shl
   memory.copy $0 $0
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $1
   i32.const 44
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 20
   i32.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $1
   i32.const 2704
   i64.load $0
   i64.store $0
   local.get $1
   i32.const 2712
   i64.load $0
   i64.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $0
   i32.const 2720
   i32.load $0
   i32.store $0
   i32.const 2724
   local.set $3
   local.get $0
   i32.const 4
   i32.add
   local.set $0
   i32.const 0
   local.set $5
   local.get $5
   if
    local.get $0
    local.get $3
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $3
   i32.const 44
   i32.add
   local.tee $5
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $5
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $3
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 3
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $3
   i32.const 16
   i32.add
   local.tee $0
   local.get $1
   i32.store $0
   local.get $0
   local.get $1
   i32.store $0 offset=4
   local.get $0
   i32.const 20
   i32.store $0 offset=8
   local.get $0
   i32.const 5
   i32.store $0 offset=12
   i32.const 0
   local.get $2
   i32.load $0 offset=12
   local.tee $3
   local.get $0
   i32.load $0 offset=12
   i32.ne
   br_if $std/array/isArraysEqual<i32>|inlined.3
   drop
   i32.const 1
   local.get $0
   local.get $2
   i32.eq
   br_if $std/array/isArraysEqual<i32>|inlined.3
   drop
   i32.const 0
   local.set $1
   loop $for-loop|22
    local.get $1
    local.get $3
    i32.lt_s
    if
     local.get $1
     local.get $2
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $1
     local.get $0
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $1
     i32.const 2
     i32.shl
     local.tee $5
     local.get $2
     i32.load $0 offset=4
     i32.add
     i32.load $0
     local.get $0
     i32.load $0 offset=4
     local.get $5
     i32.add
     i32.load $0
     i32.ne
     br_if $std/array/isArraysEqual<i32>|inlined.3
     drop
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|22
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.4 (result i32)
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $1
   i32.const 44
   i32.add
   local.tee $2
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $2
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 20
   i32.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $1
   i32.const 2752
   i64.load $0
   i64.store $0
   local.get $1
   i32.const 2760
   i64.load $0
   i64.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $0
   i32.const 2768
   i32.load $0
   i32.store $0
   i32.const 2772
   local.set $2
   local.get $0
   i32.const 4
   i32.add
   local.set $0
   i32.const 0
   local.set $3
   local.get $3
   if
    local.get $0
    local.get $2
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $2
   i32.const 44
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 3
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $2
   local.get $1
   i32.store $0
   local.get $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   i32.const 20
   i32.store $0 offset=8
   local.get $2
   i32.const 5
   i32.store $0 offset=12
   i32.const 4
   local.get $2
   i32.load $0 offset=12
   local.tee $0
   local.get $0
   i32.const 4
   i32.gt_s
   select
   local.set $1
   local.get $2
   i32.load $0 offset=4
   local.tee $3
   local.get $0
   i32.const 0
   local.get $0
   i32.const 0
   i32.le_s
   select
   local.tee $5
   i32.const 2
   i32.shl
   i32.add
   local.get $3
   i32.const 3
   local.get $0
   local.get $0
   i32.const 3
   i32.gt_s
   select
   local.tee $3
   i32.const 2
   i32.shl
   i32.add
   local.get $1
   i32.const 0
   i32.lt_s
   if (result i32)
    local.get $0
    local.get $1
    i32.add
    local.tee $1
    i32.const 0
    local.get $1
    i32.const 0
    i32.gt_s
    select
   else
    local.get $1
    local.get $0
    local.get $0
    local.get $1
    i32.gt_s
    select
   end
   local.get $3
   i32.sub
   local.tee $1
   local.get $0
   local.get $5
   i32.sub
   local.tee $0
   local.get $0
   local.get $1
   i32.gt_s
   select
   i32.const 2
   i32.shl
   memory.copy $0 $0
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $1
   i32.const 44
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 20
   i32.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $1
   i32.const 2800
   i64.load $0
   i64.store $0
   local.get $1
   i32.const 2808
   i64.load $0
   i64.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $0
   i32.const 2816
   i32.load $0
   i32.store $0
   i32.const 2820
   local.set $3
   local.get $0
   i32.const 4
   i32.add
   local.set $0
   i32.const 0
   local.set $5
   local.get $5
   if
    local.get $0
    local.get $3
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $3
   i32.const 44
   i32.add
   local.tee $5
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $5
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $3
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 3
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $3
   i32.const 16
   i32.add
   local.tee $0
   local.get $1
   i32.store $0
   local.get $0
   local.get $1
   i32.store $0 offset=4
   local.get $0
   i32.const 20
   i32.store $0 offset=8
   local.get $0
   i32.const 5
   i32.store $0 offset=12
   i32.const 0
   local.get $2
   i32.load $0 offset=12
   local.tee $3
   local.get $0
   i32.load $0 offset=12
   i32.ne
   br_if $std/array/isArraysEqual<i32>|inlined.4
   drop
   i32.const 1
   local.get $0
   local.get $2
   i32.eq
   br_if $std/array/isArraysEqual<i32>|inlined.4
   drop
   i32.const 0
   local.set $1
   loop $for-loop|23
    local.get $1
    local.get $3
    i32.lt_s
    if
     local.get $1
     local.get $2
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $1
     local.get $0
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $1
     i32.const 2
     i32.shl
     local.tee $5
     local.get $2
     i32.load $0 offset=4
     i32.add
     i32.load $0
     local.get $0
     i32.load $0 offset=4
     local.get $5
     i32.add
     i32.load $0
     i32.ne
     br_if $std/array/isArraysEqual<i32>|inlined.4
     drop
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|23
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.5 (result i32)
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $1
   i32.const 44
   i32.add
   local.tee $2
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $2
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 20
   i32.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $1
   i32.const 2848
   i64.load $0
   i64.store $0
   local.get $1
   i32.const 2856
   i64.load $0
   i64.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $0
   i32.const 2864
   i32.load $0
   i32.store $0
   i32.const 2868
   local.set $2
   local.get $0
   i32.const 4
   i32.add
   local.set $0
   i32.const 0
   local.set $3
   local.get $3
   if
    local.get $0
    local.get $2
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $2
   i32.const 44
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 3
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $2
   local.get $1
   i32.store $0
   local.get $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   i32.const 20
   i32.store $0 offset=8
   local.get $2
   i32.const 5
   i32.store $0 offset=12
   i32.const 4
   local.get $2
   i32.load $0 offset=12
   local.tee $0
   local.get $0
   i32.const 4
   i32.gt_s
   select
   local.set $1
   local.get $2
   i32.load $0 offset=4
   local.tee $3
   i32.const 1
   local.get $0
   local.get $0
   i32.const 1
   i32.gt_s
   select
   local.tee $5
   i32.const 2
   i32.shl
   i32.add
   local.get $3
   i32.const 3
   local.get $0
   local.get $0
   i32.const 3
   i32.gt_s
   select
   local.tee $3
   i32.const 2
   i32.shl
   i32.add
   local.get $1
   i32.const 0
   i32.lt_s
   if (result i32)
    local.get $0
    local.get $1
    i32.add
    local.tee $1
    i32.const 0
    local.get $1
    i32.const 0
    i32.gt_s
    select
   else
    local.get $1
    local.get $0
    local.get $0
    local.get $1
    i32.gt_s
    select
   end
   local.get $3
   i32.sub
   local.tee $1
   local.get $0
   local.get $5
   i32.sub
   local.tee $0
   local.get $0
   local.get $1
   i32.gt_s
   select
   i32.const 2
   i32.shl
   memory.copy $0 $0
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $1
   i32.const 44
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 20
   i32.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $1
   i32.const 2896
   i64.load $0
   i64.store $0
   local.get $1
   i32.const 2904
   i64.load $0
   i64.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $0
   i32.const 2912
   i32.load $0
   i32.store $0
   i32.const 2916
   local.set $3
   local.get $0
   i32.const 4
   i32.add
   local.set $0
   i32.const 0
   local.set $5
   local.get $5
   if
    local.get $0
    local.get $3
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $3
   i32.const 44
   i32.add
   local.tee $5
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $5
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $3
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 3
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $3
   i32.const 16
   i32.add
   local.tee $0
   local.get $1
   i32.store $0
   local.get $0
   local.get $1
   i32.store $0 offset=4
   local.get $0
   i32.const 20
   i32.store $0 offset=8
   local.get $0
   i32.const 5
   i32.store $0 offset=12
   i32.const 0
   local.get $2
   i32.load $0 offset=12
   local.tee $3
   local.get $0
   i32.load $0 offset=12
   i32.ne
   br_if $std/array/isArraysEqual<i32>|inlined.5
   drop
   i32.const 1
   local.get $0
   local.get $2
   i32.eq
   br_if $std/array/isArraysEqual<i32>|inlined.5
   drop
   i32.const 0
   local.set $1
   loop $for-loop|24
    local.get $1
    local.get $3
    i32.lt_s
    if
     local.get $1
     local.get $2
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $1
     local.get $0
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $1
     i32.const 2
     i32.shl
     local.tee $5
     local.get $2
     i32.load $0 offset=4
     i32.add
     i32.load $0
     local.get $0
     i32.load $0 offset=4
     local.get $5
     i32.add
     i32.load $0
     i32.ne
     br_if $std/array/isArraysEqual<i32>|inlined.5
     drop
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|24
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.6 (result i32)
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $1
   i32.const 44
   i32.add
   local.tee $2
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $2
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 20
   i32.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $1
   i32.const 2944
   i64.load $0
   i64.store $0
   local.get $1
   i32.const 2952
   i64.load $0
   i64.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $0
   i32.const 2960
   i32.load $0
   i32.store $0
   i32.const 2964
   local.set $2
   local.get $0
   i32.const 4
   i32.add
   local.set $0
   i32.const 0
   local.set $3
   local.get $3
   if
    local.get $0
    local.get $2
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $2
   i32.const 44
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 3
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $2
   local.get $1
   i32.store $0
   local.get $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   i32.const 20
   i32.store $0 offset=8
   local.get $2
   i32.const 5
   i32.store $0 offset=12
   i32.const 4
   local.get $2
   i32.load $0 offset=12
   local.tee $0
   local.get $0
   i32.const 4
   i32.gt_s
   select
   local.set $1
   local.get $2
   i32.load $0 offset=4
   local.tee $3
   i32.const 1
   local.get $0
   local.get $0
   i32.const 1
   i32.gt_s
   select
   local.tee $5
   i32.const 2
   i32.shl
   i32.add
   local.get $3
   i32.const 2
   local.get $0
   local.get $0
   i32.const 2
   i32.gt_s
   select
   local.tee $3
   i32.const 2
   i32.shl
   i32.add
   local.get $1
   i32.const 0
   i32.lt_s
   if (result i32)
    local.get $0
    local.get $1
    i32.add
    local.tee $1
    i32.const 0
    local.get $1
    i32.const 0
    i32.gt_s
    select
   else
    local.get $1
    local.get $0
    local.get $0
    local.get $1
    i32.gt_s
    select
   end
   local.get $3
   i32.sub
   local.tee $1
   local.get $0
   local.get $5
   i32.sub
   local.tee $0
   local.get $0
   local.get $1
   i32.gt_s
   select
   i32.const 2
   i32.shl
   memory.copy $0 $0
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $1
   i32.const 44
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 20
   i32.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $1
   i32.const 2992
   i64.load $0
   i64.store $0
   local.get $1
   i32.const 3000
   i64.load $0
   i64.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $0
   i32.const 3008
   i32.load $0
   i32.store $0
   i32.const 3012
   local.set $3
   local.get $0
   i32.const 4
   i32.add
   local.set $0
   i32.const 0
   local.set $5
   local.get $5
   if
    local.get $0
    local.get $3
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $3
   i32.const 44
   i32.add
   local.tee $5
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $5
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $3
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 3
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $3
   i32.const 16
   i32.add
   local.tee $0
   local.get $1
   i32.store $0
   local.get $0
   local.get $1
   i32.store $0 offset=4
   local.get $0
   i32.const 20
   i32.store $0 offset=8
   local.get $0
   i32.const 5
   i32.store $0 offset=12
   i32.const 0
   local.get $2
   i32.load $0 offset=12
   local.tee $3
   local.get $0
   i32.load $0 offset=12
   i32.ne
   br_if $std/array/isArraysEqual<i32>|inlined.6
   drop
   i32.const 1
   local.get $0
   local.get $2
   i32.eq
   br_if $std/array/isArraysEqual<i32>|inlined.6
   drop
   i32.const 0
   local.set $1
   loop $for-loop|25
    local.get $1
    local.get $3
    i32.lt_s
    if
     local.get $1
     local.get $2
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $1
     local.get $0
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $1
     i32.const 2
     i32.shl
     local.tee $5
     local.get $2
     i32.load $0 offset=4
     i32.add
     i32.load $0
     local.get $0
     i32.load $0 offset=4
     local.get $5
     i32.add
     i32.load $0
     i32.ne
     br_if $std/array/isArraysEqual<i32>|inlined.6
     drop
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|25
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.7 (result i32)
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $1
   i32.const 44
   i32.add
   local.tee $2
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $2
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 20
   i32.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $1
   i32.const 3040
   i64.load $0
   i64.store $0
   local.get $1
   i32.const 3048
   i64.load $0
   i64.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $0
   i32.const 3056
   i32.load $0
   i32.store $0
   i32.const 3060
   local.set $2
   local.get $0
   i32.const 4
   i32.add
   local.set $0
   i32.const 0
   local.set $3
   local.get $3
   if
    local.get $0
    local.get $2
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $2
   i32.const 44
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 3
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $2
   local.get $1
   i32.store $0
   local.get $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   i32.const 20
   i32.store $0 offset=8
   local.get $2
   i32.const 5
   i32.store $0 offset=12
   local.get $2
   i32.load $0 offset=4
   local.tee $0
   local.get $2
   i32.load $0 offset=12
   local.tee $1
   i32.const 0
   local.get $1
   i32.const 0
   i32.le_s
   select
   local.tee $3
   i32.const 2
   i32.shl
   i32.add
   local.get $0
   local.get $1
   i32.const 2
   i32.sub
   local.tee $0
   i32.const 0
   local.get $0
   i32.const 0
   i32.gt_s
   select
   local.tee $0
   i32.const 2
   i32.shl
   i32.add
   local.get $1
   i32.const 0
   i32.lt_s
   if (result i32)
    local.get $1
    local.get $1
    i32.add
    local.tee $5
    i32.const 0
    local.get $5
    i32.const 0
    i32.gt_s
    select
   else
    local.get $1
   end
   local.get $0
   i32.sub
   local.tee $0
   local.get $1
   local.get $3
   i32.sub
   local.tee $1
   local.get $0
   local.get $1
   i32.lt_s
   select
   i32.const 2
   i32.shl
   memory.copy $0 $0
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $1
   i32.const 44
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 20
   i32.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $1
   i32.const 3088
   i64.load $0
   i64.store $0
   local.get $1
   i32.const 3096
   i64.load $0
   i64.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $0
   i32.const 3104
   i32.load $0
   i32.store $0
   i32.const 3108
   local.set $3
   local.get $0
   i32.const 4
   i32.add
   local.set $0
   i32.const 0
   local.set $5
   local.get $5
   if
    local.get $0
    local.get $3
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $3
   i32.const 44
   i32.add
   local.tee $5
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $5
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $3
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 3
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $3
   i32.const 16
   i32.add
   local.tee $0
   local.get $1
   i32.store $0
   local.get $0
   local.get $1
   i32.store $0 offset=4
   local.get $0
   i32.const 20
   i32.store $0 offset=8
   local.get $0
   i32.const 5
   i32.store $0 offset=12
   i32.const 0
   local.get $2
   i32.load $0 offset=12
   local.tee $3
   local.get $0
   i32.load $0 offset=12
   i32.ne
   br_if $std/array/isArraysEqual<i32>|inlined.7
   drop
   i32.const 1
   local.get $0
   local.get $2
   i32.eq
   br_if $std/array/isArraysEqual<i32>|inlined.7
   drop
   i32.const 0
   local.set $1
   loop $for-loop|26
    local.get $1
    local.get $3
    i32.lt_s
    if
     local.get $1
     local.get $2
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $1
     local.get $0
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $1
     i32.const 2
     i32.shl
     local.tee $5
     local.get $2
     i32.load $0 offset=4
     i32.add
     i32.load $0
     local.get $0
     i32.load $0 offset=4
     local.get $5
     i32.add
     i32.load $0
     i32.ne
     br_if $std/array/isArraysEqual<i32>|inlined.7
     drop
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|26
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.8 (result i32)
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $1
   i32.const 44
   i32.add
   local.tee $2
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $2
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 20
   i32.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $1
   i32.const 3136
   i64.load $0
   i64.store $0
   local.get $1
   i32.const 3144
   i64.load $0
   i64.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $0
   i32.const 3152
   i32.load $0
   i32.store $0
   i32.const 3156
   local.set $2
   local.get $0
   i32.const 4
   i32.add
   local.set $0
   i32.const 0
   local.set $3
   local.get $3
   if
    local.get $0
    local.get $2
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $2
   i32.const 44
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 3
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $2
   local.get $1
   i32.store $0
   local.get $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   i32.const 20
   i32.store $0 offset=8
   local.get $2
   i32.const 5
   i32.store $0 offset=12
   i32.const -1
   local.get $2
   i32.load $0 offset=12
   local.tee $0
   local.get $0
   i32.const 0
   i32.ge_s
   select
   local.set $1
   local.get $2
   i32.load $0 offset=4
   local.tee $3
   local.get $0
   i32.const 0
   local.get $0
   i32.const 0
   i32.le_s
   select
   local.tee $5
   i32.const 2
   i32.shl
   i32.add
   local.get $3
   local.get $0
   i32.const 2
   i32.sub
   local.tee $3
   i32.const 0
   local.get $3
   i32.const 0
   i32.gt_s
   select
   local.tee $3
   i32.const 2
   i32.shl
   i32.add
   local.get $1
   i32.const 0
   i32.lt_s
   if (result i32)
    local.get $0
    local.get $1
    i32.add
    local.tee $1
    i32.const 0
    local.get $1
    i32.const 0
    i32.gt_s
    select
   else
    local.get $1
    local.get $0
    local.get $0
    local.get $1
    i32.gt_s
    select
   end
   local.get $3
   i32.sub
   local.tee $1
   local.get $0
   local.get $5
   i32.sub
   local.tee $0
   local.get $0
   local.get $1
   i32.gt_s
   select
   i32.const 2
   i32.shl
   memory.copy $0 $0
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $1
   i32.const 44
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 20
   i32.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $1
   i32.const 3184
   i64.load $0
   i64.store $0
   local.get $1
   i32.const 3192
   i64.load $0
   i64.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $0
   i32.const 3200
   i32.load $0
   i32.store $0
   i32.const 3204
   local.set $3
   local.get $0
   i32.const 4
   i32.add
   local.set $0
   i32.const 0
   local.set $5
   local.get $5
   if
    local.get $0
    local.get $3
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $3
   i32.const 44
   i32.add
   local.tee $5
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $5
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $3
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 3
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $3
   i32.const 16
   i32.add
   local.tee $0
   local.get $1
   i32.store $0
   local.get $0
   local.get $1
   i32.store $0 offset=4
   local.get $0
   i32.const 20
   i32.store $0 offset=8
   local.get $0
   i32.const 5
   i32.store $0 offset=12
   i32.const 0
   local.get $2
   i32.load $0 offset=12
   local.tee $3
   local.get $0
   i32.load $0 offset=12
   i32.ne
   br_if $std/array/isArraysEqual<i32>|inlined.8
   drop
   i32.const 1
   local.get $0
   local.get $2
   i32.eq
   br_if $std/array/isArraysEqual<i32>|inlined.8
   drop
   i32.const 0
   local.set $1
   loop $for-loop|27
    local.get $1
    local.get $3
    i32.lt_s
    if
     local.get $1
     local.get $2
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $1
     local.get $0
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $1
     i32.const 2
     i32.shl
     local.tee $5
     local.get $2
     i32.load $0 offset=4
     i32.add
     i32.load $0
     local.get $0
     i32.load $0 offset=4
     local.get $5
     i32.add
     i32.load $0
     i32.ne
     br_if $std/array/isArraysEqual<i32>|inlined.8
     drop
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|27
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.9 (result i32)
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $1
   i32.const 44
   i32.add
   local.tee $2
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $2
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 20
   i32.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $1
   i32.const 3232
   i64.load $0
   i64.store $0
   local.get $1
   i32.const 3240
   i64.load $0
   i64.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $0
   i32.const 3248
   i32.load $0
   i32.store $0
   i32.const 3252
   local.set $2
   local.get $0
   i32.const 4
   i32.add
   local.set $0
   i32.const 0
   local.set $3
   local.get $3
   if
    local.get $0
    local.get $2
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $2
   i32.const 44
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 3
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $2
   local.get $1
   i32.store $0
   local.get $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   i32.const 20
   i32.store $0 offset=8
   local.get $2
   i32.const 5
   i32.store $0 offset=12
   i32.const -2
   local.get $2
   i32.load $0 offset=12
   local.tee $0
   local.get $0
   i32.const -2
   i32.gt_s
   select
   local.set $1
   local.get $2
   i32.load $0 offset=4
   local.tee $3
   local.get $0
   i32.const 4
   i32.sub
   local.tee $5
   i32.const 0
   local.get $5
   i32.const 0
   i32.gt_s
   select
   local.tee $5
   i32.const 2
   i32.shl
   i32.add
   local.get $3
   local.get $0
   i32.const 3
   i32.sub
   local.tee $3
   i32.const 0
   local.get $3
   i32.const 0
   i32.gt_s
   select
   local.tee $3
   i32.const 2
   i32.shl
   i32.add
   local.get $1
   i32.const 0
   i32.lt_s
   if (result i32)
    local.get $0
    local.get $1
    i32.add
    local.tee $1
    i32.const 0
    local.get $1
    i32.const 0
    i32.gt_s
    select
   else
    local.get $1
    local.get $0
    local.get $0
    local.get $1
    i32.gt_s
    select
   end
   local.get $3
   i32.sub
   local.tee $1
   local.get $0
   local.get $5
   i32.sub
   local.tee $0
   local.get $0
   local.get $1
   i32.gt_s
   select
   i32.const 2
   i32.shl
   memory.copy $0 $0
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $1
   i32.const 44
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 20
   i32.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $1
   i32.const 3280
   i64.load $0
   i64.store $0
   local.get $1
   i32.const 3288
   i64.load $0
   i64.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $0
   i32.const 3296
   i32.load $0
   i32.store $0
   i32.const 3300
   local.set $3
   local.get $0
   i32.const 4
   i32.add
   local.set $0
   i32.const 0
   local.set $5
   local.get $5
   if
    local.get $0
    local.get $3
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $3
   i32.const 44
   i32.add
   local.tee $5
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $5
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $3
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 3
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $3
   i32.const 16
   i32.add
   local.tee $0
   local.get $1
   i32.store $0
   local.get $0
   local.get $1
   i32.store $0 offset=4
   local.get $0
   i32.const 20
   i32.store $0 offset=8
   local.get $0
   i32.const 5
   i32.store $0 offset=12
   i32.const 0
   local.get $2
   i32.load $0 offset=12
   local.tee $3
   local.get $0
   i32.load $0 offset=12
   i32.ne
   br_if $std/array/isArraysEqual<i32>|inlined.9
   drop
   i32.const 1
   local.get $0
   local.get $2
   i32.eq
   br_if $std/array/isArraysEqual<i32>|inlined.9
   drop
   i32.const 0
   local.set $1
   loop $for-loop|28
    local.get $1
    local.get $3
    i32.lt_s
    if
     local.get $1
     local.get $2
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $1
     local.get $0
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $1
     i32.const 2
     i32.shl
     local.tee $5
     local.get $2
     i32.load $0 offset=4
     i32.add
     i32.load $0
     local.get $0
     i32.load $0 offset=4
     local.get $5
     i32.add
     i32.load $0
     i32.ne
     br_if $std/array/isArraysEqual<i32>|inlined.9
     drop
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|28
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.10 (result i32)
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $1
   i32.const 44
   i32.add
   local.tee $2
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $2
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 20
   i32.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $1
   i32.const 3328
   i64.load $0
   i64.store $0
   local.get $1
   i32.const 3336
   i64.load $0
   i64.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $0
   i32.const 3344
   i32.load $0
   i32.store $0
   i32.const 3348
   local.set $2
   local.get $0
   i32.const 4
   i32.add
   local.set $0
   i32.const 0
   local.set $3
   local.get $3
   if
    local.get $0
    local.get $2
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $2
   i32.const 44
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 3
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $2
   local.get $1
   i32.store $0
   local.get $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   i32.const 20
   i32.store $0 offset=8
   local.get $2
   i32.const 5
   i32.store $0 offset=12
   i32.const -1
   local.get $2
   i32.load $0 offset=12
   local.tee $0
   local.get $0
   i32.const 0
   i32.ge_s
   select
   local.set $1
   local.get $2
   i32.load $0 offset=4
   local.tee $3
   local.get $0
   i32.const 4
   i32.sub
   local.tee $5
   i32.const 0
   local.get $5
   i32.const 0
   i32.gt_s
   select
   local.tee $5
   i32.const 2
   i32.shl
   i32.add
   local.get $3
   local.get $0
   i32.const 3
   i32.sub
   local.tee $3
   i32.const 0
   local.get $3
   i32.const 0
   i32.gt_s
   select
   local.tee $3
   i32.const 2
   i32.shl
   i32.add
   local.get $1
   i32.const 0
   i32.lt_s
   if (result i32)
    local.get $0
    local.get $1
    i32.add
    local.tee $1
    i32.const 0
    local.get $1
    i32.const 0
    i32.gt_s
    select
   else
    local.get $1
    local.get $0
    local.get $0
    local.get $1
    i32.gt_s
    select
   end
   local.get $3
   i32.sub
   local.tee $1
   local.get $0
   local.get $5
   i32.sub
   local.tee $0
   local.get $0
   local.get $1
   i32.gt_s
   select
   i32.const 2
   i32.shl
   memory.copy $0 $0
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $1
   i32.const 44
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 20
   i32.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $1
   i32.const 3376
   i64.load $0
   i64.store $0
   local.get $1
   i32.const 3384
   i64.load $0
   i64.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $0
   i32.const 3392
   i32.load $0
   i32.store $0
   i32.const 3396
   local.set $3
   local.get $0
   i32.const 4
   i32.add
   local.set $0
   i32.const 0
   local.set $5
   local.get $5
   if
    local.get $0
    local.get $3
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $3
   i32.const 44
   i32.add
   local.tee $5
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $5
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $3
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 3
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $3
   i32.const 16
   i32.add
   local.tee $0
   local.get $1
   i32.store $0
   local.get $0
   local.get $1
   i32.store $0 offset=4
   local.get $0
   i32.const 20
   i32.store $0 offset=8
   local.get $0
   i32.const 5
   i32.store $0 offset=12
   i32.const 0
   local.get $2
   i32.load $0 offset=12
   local.tee $3
   local.get $0
   i32.load $0 offset=12
   i32.ne
   br_if $std/array/isArraysEqual<i32>|inlined.10
   drop
   i32.const 1
   local.get $0
   local.get $2
   i32.eq
   br_if $std/array/isArraysEqual<i32>|inlined.10
   drop
   i32.const 0
   local.set $1
   loop $for-loop|29
    local.get $1
    local.get $3
    i32.lt_s
    if
     local.get $1
     local.get $2
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $1
     local.get $0
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $1
     i32.const 2
     i32.shl
     local.tee $5
     local.get $2
     i32.load $0 offset=4
     i32.add
     i32.load $0
     local.get $0
     i32.load $0 offset=4
     local.get $5
     i32.add
     i32.load $0
     i32.ne
     br_if $std/array/isArraysEqual<i32>|inlined.10
     drop
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|29
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.11 (result i32)
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $1
   i32.const 44
   i32.add
   local.tee $2
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $2
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 20
   i32.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $1
   i32.const 3424
   i64.load $0
   i64.store $0
   local.get $1
   i32.const 3432
   i64.load $0
   i64.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $0
   i32.const 3440
   i32.load $0
   i32.store $0
   i32.const 3444
   local.set $2
   local.get $0
   i32.const 4
   i32.add
   local.set $0
   i32.const 0
   local.set $3
   local.get $3
   if
    local.get $0
    local.get $2
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $2
   i32.const 44
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 3
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $2
   local.get $1
   i32.store $0
   local.get $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   i32.const 20
   i32.store $0 offset=8
   local.get $2
   i32.const 5
   i32.store $0 offset=12
   local.get $2
   i32.load $0 offset=4
   local.tee $0
   local.get $2
   i32.load $0 offset=12
   local.tee $1
   i32.const 4
   i32.sub
   local.tee $3
   i32.const 0
   local.get $3
   i32.const 0
   i32.gt_s
   select
   local.tee $3
   i32.const 2
   i32.shl
   i32.add
   local.get $0
   local.get $1
   i32.const 3
   i32.sub
   local.tee $0
   i32.const 0
   local.get $0
   i32.const 0
   i32.gt_s
   select
   local.tee $0
   i32.const 2
   i32.shl
   i32.add
   local.get $1
   i32.const 0
   i32.lt_s
   if (result i32)
    local.get $1
    local.get $1
    i32.add
    local.tee $5
    i32.const 0
    local.get $5
    i32.const 0
    i32.gt_s
    select
   else
    local.get $1
   end
   local.get $0
   i32.sub
   local.tee $0
   local.get $1
   local.get $3
   i32.sub
   local.tee $1
   local.get $0
   local.get $1
   i32.lt_s
   select
   i32.const 2
   i32.shl
   memory.copy $0 $0
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $1
   i32.const 44
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 20
   i32.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $1
   i32.const 3472
   i64.load $0
   i64.store $0
   local.get $1
   i32.const 3480
   i64.load $0
   i64.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $0
   i32.const 3488
   i32.load $0
   i32.store $0
   i32.const 3492
   local.set $3
   local.get $0
   i32.const 4
   i32.add
   local.set $0
   i32.const 0
   local.set $5
   local.get $5
   if
    local.get $0
    local.get $3
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $3
   i32.const 44
   i32.add
   local.tee $5
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $5
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $3
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 3
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $3
   i32.const 16
   i32.add
   local.tee $0
   local.get $1
   i32.store $0
   local.get $0
   local.get $1
   i32.store $0 offset=4
   local.get $0
   i32.const 20
   i32.store $0 offset=8
   local.get $0
   i32.const 5
   i32.store $0 offset=12
   i32.const 0
   local.get $2
   i32.load $0 offset=12
   local.tee $3
   local.get $0
   i32.load $0 offset=12
   i32.ne
   br_if $std/array/isArraysEqual<i32>|inlined.11
   drop
   i32.const 1
   local.get $0
   local.get $2
   i32.eq
   br_if $std/array/isArraysEqual<i32>|inlined.11
   drop
   i32.const 0
   local.set $1
   loop $for-loop|30
    local.get $1
    local.get $3
    i32.lt_s
    if
     local.get $1
     local.get $2
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $1
     local.get $0
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $1
     i32.const 2
     i32.shl
     local.tee $5
     local.get $2
     i32.load $0 offset=4
     i32.add
     i32.load $0
     local.get $0
     i32.load $0 offset=4
     local.get $5
     i32.add
     i32.load $0
     i32.ne
     br_if $std/array/isArraysEqual<i32>|inlined.11
     drop
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|30
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.tee $2
  i32.load $0 offset=12
  i32.const 1
  i32.add
  local.tee $3
  local.tee $0
  local.get $2
  i32.load $0 offset=8
  local.tee $5
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   local.get $0
   i32.const 268435455
   i32.gt_u
   if
    unreachable
   end
   local.get $2
   i32.load $0
   local.set $10
   i32.const 1073741820
   local.get $5
   i32.const 1
   i32.shl
   local.tee $1
   local.get $1
   i32.const 1073741820
   i32.ge_u
   select
   local.tee $1
   i32.const 8
   local.get $0
   local.get $0
   i32.const 8
   i32.le_u
   select
   i32.const 2
   i32.shl
   local.tee $0
   local.get $0
   local.get $1
   i32.lt_u
   select
   local.tee $11
   i32.const 1073741804
   i32.gt_u
   if
    unreachable
   end
   local.get $10
   i32.const 16
   i32.sub
   local.tee $0
   i32.const 15
   i32.and
   i32.const 1
   local.get $0
   select
   if
    unreachable
   end
   global.get $~lib/rt/stub/offset
   local.get $0
   i32.const 4
   i32.sub
   local.tee $1
   i32.load $0
   local.tee $12
   local.get $0
   i32.add
   i32.eq
   local.set $13
   local.get $11
   i32.const 16
   i32.add
   local.tee $14
   i32.const 19
   i32.add
   i32.const -16
   i32.and
   i32.const 4
   i32.sub
   local.set $15
   local.get $12
   local.get $14
   i32.lt_u
   if
    local.get $13
    if
     local.get $14
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     local.get $0
     local.get $15
     i32.add
     local.tee $12
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $12
     global.set $~lib/rt/stub/offset
     local.get $1
     local.get $15
     i32.store $0
    else
     local.get $15
     local.get $12
     i32.const 1
     i32.shl
     local.tee $1
     local.get $1
     local.get $15
     i32.lt_u
     select
     local.tee $13
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     global.get $~lib/rt/stub/offset
     i32.eqz
     if
      i32.const 9932
      global.set $~lib/rt/stub/offset
     end
     global.get $~lib/rt/stub/offset
     local.tee $1
     local.set $14
     local.get $1
     i32.const 4
     i32.add
     local.tee $1
     local.get $13
     i32.const 19
     i32.add
     i32.const -16
     i32.and
     i32.const 4
     i32.sub
     local.tee $13
     i32.add
     local.tee $15
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $15
     global.set $~lib/rt/stub/offset
     local.get $14
     local.get $13
     i32.store $0
     local.get $1
     local.get $0
     local.get $12
     memory.copy $0 $0
     local.get $1
     local.set $0
    end
   else
    local.get $13
    if
     local.get $0
     local.get $15
     i32.add
     global.set $~lib/rt/stub/offset
     local.get $1
     local.get $15
     i32.store $0
    end
   end
   local.get $0
   i32.const 4
   i32.sub
   local.get $11
   i32.store $0 offset=8
   local.get $0
   i32.const 16
   i32.add
   local.tee $0
   local.get $5
   i32.add
   i32.const 0
   local.get $11
   local.get $5
   i32.sub
   memory.fill $0
   local.get $0
   local.get $10
   i32.ne
   if
    local.get $2
    local.get $0
    i32.store $0
    local.get $2
    local.get $0
    i32.store $0 offset=4
   end
   local.get $2
   local.get $11
   i32.store $0 offset=8
  end
  local.get $2
  i32.load $0 offset=4
  local.tee $0
  i32.const 4
  i32.add
  local.get $0
  local.get $3
  i32.const 1
  i32.sub
  i32.const 2
  i32.shl
  memory.copy $0 $0
  local.get $0
  i32.const 42
  i32.store $0
  local.get $2
  local.get $3
  i32.store $0 offset=12
  global.get $std/array/arr
  i32.load $0 offset=12
  i32.const 4
  i32.ne
  if
   unreachable
  end
  global.get $std/array/arr
  i32.load $0
  i32.const 20
  i32.sub
  i32.load $0 offset=8
  i32.const 2
  i32.shr_s
  i32.const 8
  i32.ne
  if
   unreachable
  end
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  i32.eqz
  if
   unreachable
  end
  local.get $0
  i32.load $0 offset=4
  i32.load $0
  i32.const 42
  i32.ne
  if
   unreachable
  end
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  i32.const 1
  i32.le_u
  if
   unreachable
  end
  local.get $0
  i32.load $0 offset=4
  i32.load $0 offset=4
  i32.const 43
  i32.ne
  if
   unreachable
  end
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  i32.const 2
  i32.le_u
  if
   unreachable
  end
  local.get $0
  i32.load $0 offset=4
  i32.load $0 offset=8
  i32.const 44
  i32.ne
  if
   unreachable
  end
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  i32.const 3
  i32.le_u
  if
   unreachable
  end
  local.get $0
  i32.load $0 offset=4
  i32.load $0 offset=12
  i32.const 45
  i32.ne
  if
   unreachable
  end
  global.get $std/array/arr
  local.tee $2
  i32.load $0 offset=12
  i32.const 1
  i32.add
  local.tee $3
  local.tee $0
  local.get $2
  i32.load $0 offset=8
  local.tee $5
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   local.get $0
   i32.const 268435455
   i32.gt_u
   if
    unreachable
   end
   local.get $2
   i32.load $0
   local.set $10
   i32.const 1073741820
   local.get $5
   i32.const 1
   i32.shl
   local.tee $1
   local.get $1
   i32.const 1073741820
   i32.ge_u
   select
   local.tee $1
   i32.const 8
   local.get $0
   local.get $0
   i32.const 8
   i32.le_u
   select
   i32.const 2
   i32.shl
   local.tee $0
   local.get $0
   local.get $1
   i32.lt_u
   select
   local.tee $11
   i32.const 1073741804
   i32.gt_u
   if
    unreachable
   end
   local.get $10
   i32.const 16
   i32.sub
   local.tee $0
   i32.const 15
   i32.and
   i32.const 1
   local.get $0
   select
   if
    unreachable
   end
   global.get $~lib/rt/stub/offset
   local.get $0
   i32.const 4
   i32.sub
   local.tee $1
   i32.load $0
   local.tee $12
   local.get $0
   i32.add
   i32.eq
   local.set $13
   local.get $11
   i32.const 16
   i32.add
   local.tee $14
   i32.const 19
   i32.add
   i32.const -16
   i32.and
   i32.const 4
   i32.sub
   local.set $15
   local.get $12
   local.get $14
   i32.lt_u
   if
    local.get $13
    if
     local.get $14
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     local.get $0
     local.get $15
     i32.add
     local.tee $12
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $12
     global.set $~lib/rt/stub/offset
     local.get $1
     local.get $15
     i32.store $0
    else
     local.get $15
     local.get $12
     i32.const 1
     i32.shl
     local.tee $1
     local.get $1
     local.get $15
     i32.lt_u
     select
     local.tee $13
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     global.get $~lib/rt/stub/offset
     i32.eqz
     if
      i32.const 9932
      global.set $~lib/rt/stub/offset
     end
     global.get $~lib/rt/stub/offset
     local.tee $1
     local.set $14
     local.get $1
     i32.const 4
     i32.add
     local.tee $1
     local.get $13
     i32.const 19
     i32.add
     i32.const -16
     i32.and
     i32.const 4
     i32.sub
     local.tee $13
     i32.add
     local.tee $15
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $15
     global.set $~lib/rt/stub/offset
     local.get $14
     local.get $13
     i32.store $0
     local.get $1
     local.get $0
     local.get $12
     memory.copy $0 $0
     local.get $1
     local.set $0
    end
   else
    local.get $13
    if
     local.get $0
     local.get $15
     i32.add
     global.set $~lib/rt/stub/offset
     local.get $1
     local.get $15
     i32.store $0
    end
   end
   local.get $0
   i32.const 4
   i32.sub
   local.get $11
   i32.store $0 offset=8
   local.get $0
   i32.const 16
   i32.add
   local.tee $0
   local.get $5
   i32.add
   i32.const 0
   local.get $11
   local.get $5
   i32.sub
   memory.fill $0
   local.get $0
   local.get $10
   i32.ne
   if
    local.get $2
    local.get $0
    i32.store $0
    local.get $2
    local.get $0
    i32.store $0 offset=4
   end
   local.get $2
   local.get $11
   i32.store $0 offset=8
  end
  local.get $2
  i32.load $0 offset=4
  local.tee $0
  i32.const 4
  i32.add
  local.get $0
  local.get $3
  i32.const 1
  i32.sub
  i32.const 2
  i32.shl
  memory.copy $0 $0
  local.get $0
  i32.const 41
  i32.store $0
  local.get $2
  local.get $3
  i32.store $0 offset=12
  global.get $std/array/arr
  i32.load $0 offset=12
  i32.const 5
  i32.ne
  if
   unreachable
  end
  global.get $std/array/arr
  i32.load $0
  i32.const 20
  i32.sub
  i32.load $0 offset=8
  i32.const 2
  i32.shr_s
  i32.const 8
  i32.ne
  if
   unreachable
  end
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  i32.eqz
  if
   unreachable
  end
  local.get $0
  i32.load $0 offset=4
  i32.load $0
  i32.const 41
  i32.ne
  if
   unreachable
  end
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  i32.const 1
  i32.le_u
  if
   unreachable
  end
  local.get $0
  i32.load $0 offset=4
  i32.load $0 offset=4
  i32.const 42
  i32.ne
  if
   unreachable
  end
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  i32.const 2
  i32.le_u
  if
   unreachable
  end
  local.get $0
  i32.load $0 offset=4
  i32.load $0 offset=8
  i32.const 43
  i32.ne
  if
   unreachable
  end
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  i32.const 3
  i32.le_u
  if
   unreachable
  end
  local.get $0
  i32.load $0 offset=4
  i32.load $0 offset=12
  i32.const 44
  i32.ne
  if
   unreachable
  end
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  i32.const 4
  i32.le_u
  if
   unreachable
  end
  local.get $0
  i32.load $0 offset=4
  i32.load $0 offset=16
  i32.const 45
  i32.ne
  if
   unreachable
  end
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  local.tee $1
  i32.const 0
  i32.le_s
  if
   unreachable
  end
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  i32.load $0
  local.set $3
  local.get $2
  local.get $2
  i32.const 4
  i32.add
  local.get $1
  i32.const 1
  i32.sub
  local.tee $1
  i32.const 2
  i32.shl
  local.tee $5
  memory.copy $0 $0
  local.get $2
  local.get $5
  i32.add
  i32.const 0
  i32.store $0
  local.get $0
  local.get $1
  i32.store $0 offset=12
  local.get $3
  global.set $std/array/i
  global.get $std/array/i
  i32.const 41
  i32.ne
  if
   unreachable
  end
  global.get $std/array/arr
  i32.load $0 offset=12
  i32.const 4
  i32.ne
  if
   unreachable
  end
  global.get $std/array/arr
  i32.load $0
  i32.const 20
  i32.sub
  i32.load $0 offset=8
  i32.const 2
  i32.shr_s
  i32.const 8
  i32.ne
  if
   unreachable
  end
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  i32.eqz
  if
   unreachable
  end
  local.get $0
  i32.load $0 offset=4
  i32.load $0
  i32.const 42
  i32.ne
  if
   unreachable
  end
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  i32.const 1
  i32.le_u
  if
   unreachable
  end
  local.get $0
  i32.load $0 offset=4
  i32.load $0 offset=4
  i32.const 43
  i32.ne
  if
   unreachable
  end
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  i32.const 2
  i32.le_u
  if
   unreachable
  end
  local.get $0
  i32.load $0 offset=4
  i32.load $0 offset=8
  i32.const 44
  i32.ne
  if
   unreachable
  end
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  i32.const 3
  i32.le_u
  if
   unreachable
  end
  local.get $0
  i32.load $0 offset=4
  i32.load $0 offset=12
  i32.const 45
  i32.ne
  if
   unreachable
  end
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  local.tee $1
  i32.const 0
  i32.le_s
  if
   unreachable
  end
  local.get $0
  i32.load $0 offset=4
  local.get $1
  i32.const 1
  i32.sub
  local.tee $1
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.set $2
  local.get $0
  local.get $1
  i32.store $0 offset=12
  local.get $2
  global.set $std/array/i
  global.get $std/array/i
  i32.const 45
  i32.ne
  if
   unreachable
  end
  global.get $std/array/arr
  i32.load $0 offset=12
  i32.const 3
  i32.ne
  if
   unreachable
  end
  global.get $std/array/arr
  i32.load $0
  i32.const 20
  i32.sub
  i32.load $0 offset=8
  i32.const 2
  i32.shr_s
  i32.const 8
  i32.ne
  if
   unreachable
  end
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  i32.eqz
  if
   unreachable
  end
  local.get $0
  i32.load $0 offset=4
  i32.load $0
  i32.const 42
  i32.ne
  if
   unreachable
  end
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  i32.const 1
  i32.le_u
  if
   unreachable
  end
  local.get $0
  i32.load $0 offset=4
  i32.load $0 offset=4
  i32.const 43
  i32.ne
  if
   unreachable
  end
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  i32.const 2
  i32.le_u
  if
   unreachable
  end
  local.get $0
  i32.load $0 offset=4
  i32.load $0 offset=8
  i32.const 44
  i32.ne
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.12 (result i32)
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $1
   i32.const 44
   i32.add
   local.tee $2
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $2
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 20
   i32.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $1
   i32.const 3520
   i64.load $0
   i64.store $0
   local.get $1
   i32.const 3528
   i64.load $0
   i64.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $0
   i32.const 3536
   i32.load $0
   i32.store $0
   i32.const 3540
   local.set $2
   local.get $0
   i32.const 4
   i32.add
   local.set $0
   i32.const 0
   local.set $3
   local.get $3
   if
    local.get $0
    local.get $2
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $2
   i32.const 44
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 3
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $2
   local.get $1
   i32.store $0
   local.get $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   i32.const 20
   i32.store $0 offset=8
   local.get $2
   i32.const 5
   i32.store $0 offset=12
   i32.const 2
   local.get $2
   i32.load $0 offset=12
   local.tee $0
   local.get $0
   i32.const 2
   i32.gt_s
   select
   local.set $1
   local.get $0
   local.get $1
   i32.sub
   local.tee $0
   i32.const 0
   local.get $0
   i32.const 0
   i32.gt_s
   select
   local.tee $0
   i32.const 2
   i32.shl
   local.tee $3
   i32.const 16
   i32.add
   local.tee $5
   i32.const 1073741820
   i32.gt_u
   if
    unreachable
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $10
   i32.const 4
   i32.add
   local.tee $11
   local.get $5
   i32.const 19
   i32.add
   i32.const -16
   i32.and
   i32.const 4
   i32.sub
   local.tee $5
   i32.add
   local.tee $12
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $12
   global.set $~lib/rt/stub/offset
   local.get $10
   local.get $5
   i32.store $0
   local.get $11
   i32.const 4
   i32.sub
   local.tee $5
   i32.const 0
   i32.store $0 offset=4
   local.get $5
   local.get $3
   i32.store $0 offset=8
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $5
   i32.const 4
   i32.add
   local.tee $10
   i32.const 44
   i32.add
   local.tee $12
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $12
   global.set $~lib/rt/stub/offset
   local.get $5
   i32.const 44
   i32.store $0
   local.get $10
   i32.const 4
   i32.sub
   local.tee $5
   i32.const 3
   i32.store $0 offset=4
   local.get $5
   i32.const 16
   i32.store $0 offset=8
   local.get $10
   i32.const 16
   i32.add
   local.tee $10
   local.get $11
   i32.const 16
   i32.add
   local.tee $5
   i32.store $0
   local.get $10
   local.get $5
   i32.store $0 offset=4
   local.get $10
   local.get $3
   i32.store $0 offset=8
   local.get $10
   local.get $0
   i32.store $0 offset=12
   local.get $10
   i32.load $0 offset=4
   local.get $2
   i32.load $0 offset=4
   local.get $1
   i32.const 2
   i32.shl
   i32.add
   local.get $0
   i32.const 2
   i32.shl
   memory.copy $0 $0
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $1
   i32.const 28
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 28
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 12
   i32.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $1
   local.tee $0
   i32.const 3568
   i64.load $0
   i64.store $0
   i32.const 3576
   local.set $3
   local.get $0
   i32.const 8
   i32.add
   local.set $0
   i32.const 4
   local.tee $5
   i32.const 4
   i32.ge_u
   if
    local.get $0
    i32.const 3576
    i32.load $0
    i32.store $0
    i32.const 3580
    local.set $3
    i32.const 0
    local.set $5
    local.get $0
    i32.const 4
    i32.add
    local.set $0
   end
   local.get $5
   i32.const 2
   i32.ge_s
   if
    local.get $0
    local.get $3
    i32.load16_u $0
    i32.store16 $0
    local.get $3
    i32.const 2
    i32.add
    local.set $3
    local.get $5
    i32.const 2
    i32.sub
    local.set $5
    local.get $0
    i32.const 2
    i32.add
    local.set $0
   end
   local.get $5
   if
    local.get $0
    local.get $3
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $3
   i32.const 44
   i32.add
   local.tee $5
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $5
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $3
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 3
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $3
   i32.const 16
   i32.add
   local.tee $0
   local.get $1
   i32.store $0
   local.get $0
   local.get $1
   i32.store $0 offset=4
   local.get $0
   i32.const 12
   i32.store $0 offset=8
   local.get $0
   i32.const 3
   i32.store $0 offset=12
   i32.const 0
   local.get $10
   i32.load $0 offset=12
   local.tee $3
   local.get $0
   i32.load $0 offset=12
   i32.ne
   br_if $std/array/isArraysEqual<i32>|inlined.12
   drop
   i32.const 1
   local.get $0
   local.get $10
   i32.eq
   br_if $std/array/isArraysEqual<i32>|inlined.12
   drop
   i32.const 0
   local.set $1
   loop $for-loop|31
    local.get $1
    local.get $3
    i32.lt_s
    if
     local.get $1
     local.get $10
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $1
     local.get $0
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $1
     i32.const 2
     i32.shl
     local.tee $5
     local.get $10
     i32.load $0 offset=4
     i32.add
     i32.load $0
     local.get $0
     i32.load $0 offset=4
     local.get $5
     i32.add
     i32.load $0
     i32.ne
     br_if $std/array/isArraysEqual<i32>|inlined.12
     drop
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|31
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.13 (result i32)
   i32.const 2
   local.get $2
   i32.load $0 offset=12
   local.tee $0
   local.get $0
   i32.const 2
   i32.gt_s
   select
   local.set $1
   i32.const 4
   local.get $0
   local.get $0
   i32.const 4
   i32.gt_s
   select
   local.get $1
   i32.sub
   local.tee $0
   i32.const 0
   local.get $0
   i32.const 0
   i32.gt_s
   select
   local.tee $0
   i32.const 2
   i32.shl
   local.tee $3
   i32.const 16
   i32.add
   local.tee $5
   i32.const 1073741820
   i32.gt_u
   if
    unreachable
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $10
   i32.const 4
   i32.add
   local.tee $11
   local.get $5
   i32.const 19
   i32.add
   i32.const -16
   i32.and
   i32.const 4
   i32.sub
   local.tee $5
   i32.add
   local.tee $12
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $12
   global.set $~lib/rt/stub/offset
   local.get $10
   local.get $5
   i32.store $0
   local.get $11
   i32.const 4
   i32.sub
   local.tee $5
   i32.const 0
   i32.store $0 offset=4
   local.get $5
   local.get $3
   i32.store $0 offset=8
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $5
   i32.const 4
   i32.add
   local.tee $10
   i32.const 44
   i32.add
   local.tee $12
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $12
   global.set $~lib/rt/stub/offset
   local.get $5
   i32.const 44
   i32.store $0
   local.get $10
   i32.const 4
   i32.sub
   local.tee $5
   i32.const 3
   i32.store $0 offset=4
   local.get $5
   i32.const 16
   i32.store $0 offset=8
   local.get $10
   i32.const 16
   i32.add
   local.tee $10
   local.get $11
   i32.const 16
   i32.add
   local.tee $5
   i32.store $0
   local.get $10
   local.get $5
   i32.store $0 offset=4
   local.get $10
   local.get $3
   i32.store $0 offset=8
   local.get $10
   local.get $0
   i32.store $0 offset=12
   local.get $10
   i32.load $0 offset=4
   local.get $2
   i32.load $0 offset=4
   local.get $1
   i32.const 2
   i32.shl
   i32.add
   local.get $0
   i32.const 2
   i32.shl
   memory.copy $0 $0
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $1
   i32.const 28
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 28
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 8
   i32.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $1
   local.tee $0
   i32.const 3600
   i64.load $0
   i64.store $0
   i32.const 3608
   local.set $3
   local.get $0
   i32.const 8
   i32.add
   local.set $0
   i32.const 0
   local.set $5
   local.get $5
   i32.const 2
   i32.ge_s
   if
    local.get $0
    local.get $3
    i32.load16_u $0
    i32.store16 $0
    local.get $3
    i32.const 2
    i32.add
    local.set $3
    local.get $5
    i32.const 2
    i32.sub
    local.set $5
    local.get $0
    i32.const 2
    i32.add
    local.set $0
   end
   local.get $5
   if
    local.get $0
    local.get $3
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $3
   i32.const 44
   i32.add
   local.tee $5
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $5
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $3
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 3
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $3
   i32.const 16
   i32.add
   local.tee $0
   local.get $1
   i32.store $0
   local.get $0
   local.get $1
   i32.store $0 offset=4
   local.get $0
   i32.const 8
   i32.store $0 offset=8
   local.get $0
   i32.const 2
   i32.store $0 offset=12
   i32.const 0
   local.get $10
   i32.load $0 offset=12
   local.tee $3
   local.get $0
   i32.load $0 offset=12
   i32.ne
   br_if $std/array/isArraysEqual<i32>|inlined.13
   drop
   i32.const 1
   local.get $0
   local.get $10
   i32.eq
   br_if $std/array/isArraysEqual<i32>|inlined.13
   drop
   i32.const 0
   local.set $1
   loop $for-loop|32
    local.get $1
    local.get $3
    i32.lt_s
    if
     local.get $1
     local.get $10
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $1
     local.get $0
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $1
     i32.const 2
     i32.shl
     local.tee $5
     local.get $10
     i32.load $0 offset=4
     i32.add
     i32.load $0
     local.get $0
     i32.load $0 offset=4
     local.get $5
     i32.add
     i32.load $0
     i32.ne
     br_if $std/array/isArraysEqual<i32>|inlined.13
     drop
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|32
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.14 (result i32)
   i32.const 1
   local.get $2
   i32.load $0 offset=12
   local.tee $0
   local.get $0
   i32.const 1
   i32.gt_s
   select
   local.set $1
   i32.const 5
   local.get $0
   local.get $0
   i32.const 5
   i32.gt_s
   select
   local.get $1
   i32.sub
   local.tee $0
   i32.const 0
   local.get $0
   i32.const 0
   i32.gt_s
   select
   local.tee $0
   i32.const 2
   i32.shl
   local.tee $3
   i32.const 16
   i32.add
   local.tee $5
   i32.const 1073741820
   i32.gt_u
   if
    unreachable
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $10
   i32.const 4
   i32.add
   local.tee $11
   local.get $5
   i32.const 19
   i32.add
   i32.const -16
   i32.and
   i32.const 4
   i32.sub
   local.tee $5
   i32.add
   local.tee $12
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $12
   global.set $~lib/rt/stub/offset
   local.get $10
   local.get $5
   i32.store $0
   local.get $11
   i32.const 4
   i32.sub
   local.tee $5
   i32.const 0
   i32.store $0 offset=4
   local.get $5
   local.get $3
   i32.store $0 offset=8
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $5
   i32.const 4
   i32.add
   local.tee $10
   i32.const 44
   i32.add
   local.tee $12
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $12
   global.set $~lib/rt/stub/offset
   local.get $5
   i32.const 44
   i32.store $0
   local.get $10
   i32.const 4
   i32.sub
   local.tee $5
   i32.const 3
   i32.store $0 offset=4
   local.get $5
   i32.const 16
   i32.store $0 offset=8
   local.get $10
   i32.const 16
   i32.add
   local.tee $10
   local.get $11
   i32.const 16
   i32.add
   local.tee $5
   i32.store $0
   local.get $10
   local.get $5
   i32.store $0 offset=4
   local.get $10
   local.get $3
   i32.store $0 offset=8
   local.get $10
   local.get $0
   i32.store $0 offset=12
   local.get $10
   i32.load $0 offset=4
   local.get $2
   i32.load $0 offset=4
   local.get $1
   i32.const 2
   i32.shl
   i32.add
   local.get $0
   i32.const 2
   i32.shl
   memory.copy $0 $0
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $1
   i32.const 44
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $1
   i32.const 3632
   i64.load $0
   i64.store $0
   local.get $1
   i32.const 3640
   i64.load $0
   i64.store $0 offset=8
   i32.const 3648
   local.set $3
   local.get $1
   i32.const 16
   i32.add
   local.set $0
   i32.const 0
   local.set $5
   local.get $5
   if
    local.get $0
    local.get $3
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $3
   i32.const 44
   i32.add
   local.tee $5
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $5
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $3
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 3
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $3
   i32.const 16
   i32.add
   local.tee $0
   local.get $1
   i32.store $0
   local.get $0
   local.get $1
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $0
   i32.const 4
   i32.store $0 offset=12
   i32.const 0
   local.get $10
   i32.load $0 offset=12
   local.tee $3
   local.get $0
   i32.load $0 offset=12
   i32.ne
   br_if $std/array/isArraysEqual<i32>|inlined.14
   drop
   i32.const 1
   local.get $0
   local.get $10
   i32.eq
   br_if $std/array/isArraysEqual<i32>|inlined.14
   drop
   i32.const 0
   local.set $1
   loop $for-loop|33
    local.get $1
    local.get $3
    i32.lt_s
    if
     local.get $1
     local.get $10
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $1
     local.get $0
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $1
     i32.const 2
     i32.shl
     local.tee $5
     local.get $10
     i32.load $0 offset=4
     i32.add
     i32.load $0
     local.get $0
     i32.load $0 offset=4
     local.get $5
     i32.add
     i32.load $0
     i32.ne
     br_if $std/array/isArraysEqual<i32>|inlined.14
     drop
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|33
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.15 (result i32)
   local.get $2
   i32.load $0 offset=12
   local.tee $0
   i32.const 0
   local.get $0
   i32.const 0
   i32.le_s
   select
   local.set $1
   local.get $0
   local.get $1
   i32.sub
   local.tee $0
   i32.const 0
   local.get $0
   i32.const 0
   i32.gt_s
   select
   local.tee $0
   i32.const 2
   i32.shl
   local.tee $3
   i32.const 16
   i32.add
   local.tee $5
   i32.const 1073741820
   i32.gt_u
   if
    unreachable
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $10
   i32.const 4
   i32.add
   local.tee $11
   local.get $5
   i32.const 19
   i32.add
   i32.const -16
   i32.and
   i32.const 4
   i32.sub
   local.tee $5
   i32.add
   local.tee $12
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $12
   global.set $~lib/rt/stub/offset
   local.get $10
   local.get $5
   i32.store $0
   local.get $11
   i32.const 4
   i32.sub
   local.tee $5
   i32.const 0
   i32.store $0 offset=4
   local.get $5
   local.get $3
   i32.store $0 offset=8
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $5
   i32.const 4
   i32.add
   local.tee $10
   i32.const 44
   i32.add
   local.tee $12
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $12
   global.set $~lib/rt/stub/offset
   local.get $5
   i32.const 44
   i32.store $0
   local.get $10
   i32.const 4
   i32.sub
   local.tee $5
   i32.const 3
   i32.store $0 offset=4
   local.get $5
   i32.const 16
   i32.store $0 offset=8
   local.get $10
   i32.const 16
   i32.add
   local.tee $5
   local.get $11
   i32.const 16
   i32.add
   local.tee $10
   i32.store $0
   local.get $5
   local.get $10
   i32.store $0 offset=4
   local.get $5
   local.get $3
   i32.store $0 offset=8
   local.get $5
   local.get $0
   i32.store $0 offset=12
   local.get $5
   i32.load $0 offset=4
   local.get $2
   i32.load $0 offset=4
   local.get $1
   i32.const 2
   i32.shl
   i32.add
   local.get $0
   i32.const 2
   i32.shl
   memory.copy $0 $0
   i32.const 0
   local.get $5
   i32.load $0 offset=12
   local.tee $0
   local.get $2
   i32.load $0 offset=12
   i32.ne
   br_if $std/array/isArraysEqual<i32>|inlined.15
   drop
   i32.const 1
   local.get $2
   local.get $5
   i32.eq
   br_if $std/array/isArraysEqual<i32>|inlined.15
   drop
   i32.const 0
   local.set $1
   loop $for-loop|34
    local.get $0
    local.get $1
    i32.gt_s
    if
     local.get $1
     local.get $5
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $1
     local.get $2
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $1
     i32.const 2
     i32.shl
     local.tee $3
     local.get $5
     i32.load $0 offset=4
     i32.add
     i32.load $0
     local.get $2
     i32.load $0 offset=4
     local.get $3
     i32.add
     i32.load $0
     i32.ne
     br_if $std/array/isArraysEqual<i32>|inlined.15
     drop
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|34
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.16 (result i32)
   local.get $2
   i32.load $0 offset=12
   local.tee $0
   i32.const 2
   i32.sub
   local.tee $1
   i32.const 0
   local.get $1
   i32.const 0
   i32.gt_s
   select
   local.set $1
   local.get $0
   local.get $1
   i32.sub
   local.tee $0
   i32.const 0
   local.get $0
   i32.const 0
   i32.gt_s
   select
   local.tee $0
   i32.const 2
   i32.shl
   local.tee $3
   i32.const 16
   i32.add
   local.tee $5
   i32.const 1073741820
   i32.gt_u
   if
    unreachable
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $10
   i32.const 4
   i32.add
   local.tee $11
   local.get $5
   i32.const 19
   i32.add
   i32.const -16
   i32.and
   i32.const 4
   i32.sub
   local.tee $5
   i32.add
   local.tee $12
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $12
   global.set $~lib/rt/stub/offset
   local.get $10
   local.get $5
   i32.store $0
   local.get $11
   i32.const 4
   i32.sub
   local.tee $5
   i32.const 0
   i32.store $0 offset=4
   local.get $5
   local.get $3
   i32.store $0 offset=8
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $5
   i32.const 4
   i32.add
   local.tee $10
   i32.const 44
   i32.add
   local.tee $12
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $12
   global.set $~lib/rt/stub/offset
   local.get $5
   i32.const 44
   i32.store $0
   local.get $10
   i32.const 4
   i32.sub
   local.tee $5
   i32.const 3
   i32.store $0 offset=4
   local.get $5
   i32.const 16
   i32.store $0 offset=8
   local.get $10
   i32.const 16
   i32.add
   local.tee $10
   local.get $11
   i32.const 16
   i32.add
   local.tee $5
   i32.store $0
   local.get $10
   local.get $5
   i32.store $0 offset=4
   local.get $10
   local.get $3
   i32.store $0 offset=8
   local.get $10
   local.get $0
   i32.store $0 offset=12
   local.get $10
   i32.load $0 offset=4
   local.get $2
   i32.load $0 offset=4
   local.get $1
   i32.const 2
   i32.shl
   i32.add
   local.get $0
   i32.const 2
   i32.shl
   memory.copy $0 $0
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $1
   i32.const 28
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 28
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 8
   i32.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $1
   local.tee $0
   i32.const 3680
   i64.load $0
   i64.store $0
   i32.const 3688
   local.set $3
   local.get $0
   i32.const 8
   i32.add
   local.set $0
   i32.const 0
   local.set $5
   local.get $5
   i32.const 2
   i32.ge_s
   if
    local.get $0
    local.get $3
    i32.load16_u $0
    i32.store16 $0
    local.get $3
    i32.const 2
    i32.add
    local.set $3
    local.get $5
    i32.const 2
    i32.sub
    local.set $5
    local.get $0
    i32.const 2
    i32.add
    local.set $0
   end
   local.get $5
   if
    local.get $0
    local.get $3
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $3
   i32.const 44
   i32.add
   local.tee $5
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $5
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $3
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 3
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $3
   i32.const 16
   i32.add
   local.tee $0
   local.get $1
   i32.store $0
   local.get $0
   local.get $1
   i32.store $0 offset=4
   local.get $0
   i32.const 8
   i32.store $0 offset=8
   local.get $0
   i32.const 2
   i32.store $0 offset=12
   i32.const 0
   local.get $10
   i32.load $0 offset=12
   local.tee $3
   local.get $0
   i32.load $0 offset=12
   i32.ne
   br_if $std/array/isArraysEqual<i32>|inlined.16
   drop
   i32.const 1
   local.get $0
   local.get $10
   i32.eq
   br_if $std/array/isArraysEqual<i32>|inlined.16
   drop
   i32.const 0
   local.set $1
   loop $for-loop|35
    local.get $1
    local.get $3
    i32.lt_s
    if
     local.get $1
     local.get $10
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $1
     local.get $0
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $1
     i32.const 2
     i32.shl
     local.tee $5
     local.get $10
     i32.load $0 offset=4
     i32.add
     i32.load $0
     local.get $0
     i32.load $0 offset=4
     local.get $5
     i32.add
     i32.load $0
     i32.ne
     br_if $std/array/isArraysEqual<i32>|inlined.16
     drop
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|35
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.17 (result i32)
   i32.const 2
   local.get $2
   i32.load $0 offset=12
   local.tee $0
   local.get $0
   i32.const 2
   i32.gt_s
   select
   local.set $1
   local.get $0
   i32.const 1
   i32.sub
   local.tee $0
   i32.const 0
   local.get $0
   i32.const 0
   i32.gt_s
   select
   local.get $1
   i32.sub
   local.tee $0
   i32.const 0
   local.get $0
   i32.const 0
   i32.gt_s
   select
   local.tee $0
   i32.const 2
   i32.shl
   local.tee $3
   i32.const 16
   i32.add
   local.tee $5
   i32.const 1073741820
   i32.gt_u
   if
    unreachable
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $10
   i32.const 4
   i32.add
   local.tee $11
   local.get $5
   i32.const 19
   i32.add
   i32.const -16
   i32.and
   i32.const 4
   i32.sub
   local.tee $5
   i32.add
   local.tee $12
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $12
   global.set $~lib/rt/stub/offset
   local.get $10
   local.get $5
   i32.store $0
   local.get $11
   i32.const 4
   i32.sub
   local.tee $5
   i32.const 0
   i32.store $0 offset=4
   local.get $5
   local.get $3
   i32.store $0 offset=8
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $5
   i32.const 4
   i32.add
   local.tee $10
   i32.const 44
   i32.add
   local.tee $12
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $12
   global.set $~lib/rt/stub/offset
   local.get $5
   i32.const 44
   i32.store $0
   local.get $10
   i32.const 4
   i32.sub
   local.tee $5
   i32.const 3
   i32.store $0 offset=4
   local.get $5
   i32.const 16
   i32.store $0 offset=8
   local.get $10
   i32.const 16
   i32.add
   local.tee $10
   local.get $11
   i32.const 16
   i32.add
   local.tee $5
   i32.store $0
   local.get $10
   local.get $5
   i32.store $0 offset=4
   local.get $10
   local.get $3
   i32.store $0 offset=8
   local.get $10
   local.get $0
   i32.store $0 offset=12
   local.get $10
   i32.load $0 offset=4
   local.get $2
   i32.load $0 offset=4
   local.get $1
   i32.const 2
   i32.shl
   i32.add
   local.get $0
   i32.const 2
   i32.shl
   memory.copy $0 $0
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $1
   i32.const 28
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 28
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 8
   i32.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $1
   local.tee $0
   i32.const 3712
   i64.load $0
   i64.store $0
   i32.const 3720
   local.set $3
   local.get $0
   i32.const 8
   i32.add
   local.set $0
   i32.const 0
   local.set $5
   local.get $5
   i32.const 2
   i32.ge_s
   if
    local.get $0
    local.get $3
    i32.load16_u $0
    i32.store16 $0
    local.get $3
    i32.const 2
    i32.add
    local.set $3
    local.get $5
    i32.const 2
    i32.sub
    local.set $5
    local.get $0
    i32.const 2
    i32.add
    local.set $0
   end
   local.get $5
   if
    local.get $0
    local.get $3
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $3
   i32.const 44
   i32.add
   local.tee $5
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $5
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $3
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 3
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $3
   i32.const 16
   i32.add
   local.tee $0
   local.get $1
   i32.store $0
   local.get $0
   local.get $1
   i32.store $0 offset=4
   local.get $0
   i32.const 8
   i32.store $0 offset=8
   local.get $0
   i32.const 2
   i32.store $0 offset=12
   i32.const 0
   local.get $10
   i32.load $0 offset=12
   local.tee $3
   local.get $0
   i32.load $0 offset=12
   i32.ne
   br_if $std/array/isArraysEqual<i32>|inlined.17
   drop
   i32.const 1
   local.get $0
   local.get $10
   i32.eq
   br_if $std/array/isArraysEqual<i32>|inlined.17
   drop
   i32.const 0
   local.set $1
   loop $for-loop|36
    local.get $1
    local.get $3
    i32.lt_s
    if
     local.get $1
     local.get $10
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $1
     local.get $0
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $1
     i32.const 2
     i32.shl
     local.tee $5
     local.get $10
     i32.load $0 offset=4
     i32.add
     i32.load $0
     local.get $0
     i32.load $0 offset=4
     local.get $5
     i32.add
     i32.load $0
     i32.ne
     br_if $std/array/isArraysEqual<i32>|inlined.17
     drop
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|36
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.18 (result i32)
   local.get $2
   i32.load $0 offset=12
   local.tee $0
   i32.const 3
   i32.sub
   local.tee $1
   i32.const 0
   local.get $1
   i32.const 0
   i32.gt_s
   select
   local.set $1
   local.get $0
   i32.const 1
   i32.sub
   local.tee $0
   i32.const 0
   local.get $0
   i32.const 0
   i32.gt_s
   select
   local.get $1
   i32.sub
   local.tee $0
   i32.const 0
   local.get $0
   i32.const 0
   i32.gt_s
   select
   local.tee $0
   i32.const 2
   i32.shl
   local.tee $3
   i32.const 16
   i32.add
   local.tee $5
   i32.const 1073741820
   i32.gt_u
   if
    unreachable
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $10
   i32.const 4
   i32.add
   local.tee $11
   local.get $5
   i32.const 19
   i32.add
   i32.const -16
   i32.and
   i32.const 4
   i32.sub
   local.tee $5
   i32.add
   local.tee $12
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $12
   global.set $~lib/rt/stub/offset
   local.get $10
   local.get $5
   i32.store $0
   local.get $11
   i32.const 4
   i32.sub
   local.tee $5
   i32.const 0
   i32.store $0 offset=4
   local.get $5
   local.get $3
   i32.store $0 offset=8
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $5
   i32.const 4
   i32.add
   local.tee $10
   i32.const 44
   i32.add
   local.tee $12
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $12
   global.set $~lib/rt/stub/offset
   local.get $5
   i32.const 44
   i32.store $0
   local.get $10
   i32.const 4
   i32.sub
   local.tee $5
   i32.const 3
   i32.store $0 offset=4
   local.get $5
   i32.const 16
   i32.store $0 offset=8
   local.get $10
   i32.const 16
   i32.add
   local.tee $10
   local.get $11
   i32.const 16
   i32.add
   local.tee $5
   i32.store $0
   local.get $10
   local.get $5
   i32.store $0 offset=4
   local.get $10
   local.get $3
   i32.store $0 offset=8
   local.get $10
   local.get $0
   i32.store $0 offset=12
   local.get $10
   i32.load $0 offset=4
   local.get $2
   i32.load $0 offset=4
   local.get $1
   i32.const 2
   i32.shl
   i32.add
   local.get $0
   i32.const 2
   i32.shl
   memory.copy $0 $0
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $1
   i32.const 28
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 28
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 8
   i32.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $1
   local.tee $0
   i32.const 3744
   i64.load $0
   i64.store $0
   i32.const 3752
   local.set $3
   local.get $0
   i32.const 8
   i32.add
   local.set $0
   i32.const 0
   local.set $5
   local.get $5
   i32.const 2
   i32.ge_s
   if
    local.get $0
    local.get $3
    i32.load16_u $0
    i32.store16 $0
    local.get $3
    i32.const 2
    i32.add
    local.set $3
    local.get $5
    i32.const 2
    i32.sub
    local.set $5
    local.get $0
    i32.const 2
    i32.add
    local.set $0
   end
   local.get $5
   if
    local.get $0
    local.get $3
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $3
   i32.const 44
   i32.add
   local.tee $5
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $5
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $3
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 3
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $3
   i32.const 16
   i32.add
   local.tee $0
   local.get $1
   i32.store $0
   local.get $0
   local.get $1
   i32.store $0 offset=4
   local.get $0
   i32.const 8
   i32.store $0 offset=8
   local.get $0
   i32.const 2
   i32.store $0 offset=12
   i32.const 0
   local.get $10
   i32.load $0 offset=12
   local.tee $3
   local.get $0
   i32.load $0 offset=12
   i32.ne
   br_if $std/array/isArraysEqual<i32>|inlined.18
   drop
   i32.const 1
   local.get $0
   local.get $10
   i32.eq
   br_if $std/array/isArraysEqual<i32>|inlined.18
   drop
   i32.const 0
   local.set $1
   loop $for-loop|37
    local.get $1
    local.get $3
    i32.lt_s
    if
     local.get $1
     local.get $10
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $1
     local.get $0
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $1
     i32.const 2
     i32.shl
     local.tee $5
     local.get $10
     i32.load $0 offset=4
     i32.add
     i32.load $0
     local.get $0
     i32.load $0 offset=4
     local.get $5
     i32.add
     i32.load $0
     i32.ne
     br_if $std/array/isArraysEqual<i32>|inlined.18
     drop
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|37
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  local.get $2
  i32.load $0 offset=12
  local.tee $0
  i32.const 1
  i32.sub
  local.tee $1
  i32.const 0
  local.get $1
  i32.const 0
  i32.gt_s
  select
  local.set $1
  local.get $0
  i32.const 3
  i32.sub
  local.tee $0
  i32.const 0
  local.get $0
  i32.const 0
  i32.gt_s
  select
  local.get $1
  i32.sub
  local.tee $0
  i32.const 0
  local.get $0
  i32.const 0
  i32.gt_s
  select
  local.tee $0
  i32.const 2
  i32.shl
  local.tee $3
  i32.const 16
  i32.add
  local.tee $5
  i32.const 1073741820
  i32.gt_u
  if
   unreachable
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $10
  i32.const 4
  i32.add
  local.tee $11
  local.get $5
  i32.const 19
  i32.add
  i32.const -16
  i32.and
  i32.const 4
  i32.sub
  local.tee $5
  i32.add
  local.tee $12
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $12
  global.set $~lib/rt/stub/offset
  local.get $10
  local.get $5
  i32.store $0
  local.get $11
  i32.const 4
  i32.sub
  local.tee $5
  i32.const 0
  i32.store $0 offset=4
  local.get $5
  local.get $3
  i32.store $0 offset=8
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $5
  i32.const 4
  i32.add
  local.tee $10
  i32.const 44
  i32.add
  local.tee $12
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $12
  global.set $~lib/rt/stub/offset
  local.get $5
  i32.const 44
  i32.store $0
  local.get $10
  i32.const 4
  i32.sub
  local.tee $5
  i32.const 3
  i32.store $0 offset=4
  local.get $5
  i32.const 16
  i32.store $0 offset=8
  local.get $10
  local.get $11
  i32.const 16
  i32.add
  local.tee $5
  i32.store $0 offset=16
  local.get $10
  local.get $5
  i32.store $0 offset=20
  local.get $10
  local.get $3
  i32.store $0 offset=24
  local.get $10
  local.get $0
  i32.store $0 offset=28
  local.get $10
  i32.load $0 offset=20
  local.get $2
  i32.load $0 offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  local.get $0
  i32.const 2
  i32.shl
  memory.copy $0 $0
  local.get $10
  i32.load $0 offset=28
  if
   unreachable
  end
  i32.const 10
  local.get $2
  i32.load $0 offset=12
  local.tee $0
  local.get $0
  i32.const 10
  i32.gt_s
  select
  local.set $1
  local.get $0
  local.get $1
  i32.sub
  local.tee $0
  i32.const 0
  local.get $0
  i32.const 0
  i32.gt_s
  select
  local.tee $0
  i32.const 2
  i32.shl
  local.tee $3
  i32.const 16
  i32.add
  local.tee $5
  i32.const 1073741820
  i32.gt_u
  if
   unreachable
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $10
  i32.const 4
  i32.add
  local.tee $11
  local.get $5
  i32.const 19
  i32.add
  i32.const -16
  i32.and
  i32.const 4
  i32.sub
  local.tee $5
  i32.add
  local.tee $12
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $12
  global.set $~lib/rt/stub/offset
  local.get $10
  local.get $5
  i32.store $0
  local.get $11
  i32.const 4
  i32.sub
  local.tee $5
  i32.const 0
  i32.store $0 offset=4
  local.get $5
  local.get $3
  i32.store $0 offset=8
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $5
  i32.const 4
  i32.add
  local.tee $10
  i32.const 44
  i32.add
  local.tee $12
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $12
  global.set $~lib/rt/stub/offset
  local.get $5
  i32.const 44
  i32.store $0
  local.get $10
  i32.const 4
  i32.sub
  local.tee $5
  i32.const 3
  i32.store $0 offset=4
  local.get $5
  i32.const 16
  i32.store $0 offset=8
  local.get $10
  local.get $11
  i32.const 16
  i32.add
  local.tee $5
  i32.store $0 offset=16
  local.get $10
  local.get $5
  i32.store $0 offset=20
  local.get $10
  local.get $3
  i32.store $0 offset=24
  local.get $10
  local.get $0
  i32.store $0 offset=28
  local.get $10
  i32.load $0 offset=20
  local.get $2
  i32.load $0 offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  local.get $0
  i32.const 2
  i32.shl
  memory.copy $0 $0
  local.get $10
  i32.load $0 offset=28
  if
   unreachable
  end
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=4
  local.set $2
  local.get $0
  i32.load $0 offset=12
  local.tee $0
  i32.const 1
  i32.gt_u
  if
   i32.const 0
   local.set $1
   local.get $0
   i32.const 1
   i32.shr_u
   local.set $3
   local.get $0
   i32.const 1
   i32.sub
   local.set $0
   loop $while-continue|0
    local.get $1
    local.get $3
    i32.lt_u
    if
     local.get $2
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     local.tee $5
     i32.load $0
     local.set $10
     local.get $5
     local.get $2
     local.get $0
     local.get $1
     i32.sub
     i32.const 2
     i32.shl
     i32.add
     local.tee $5
     i32.load $0
     i32.store $0
     local.get $5
     local.get $10
     i32.store $0
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $while-continue|0
    end
   end
  end
  global.get $std/array/arr
  i32.load $0 offset=12
  i32.const 3
  i32.ne
  if
   unreachable
  end
  global.get $std/array/arr
  i32.load $0
  i32.const 20
  i32.sub
  i32.load $0 offset=8
  i32.const 2
  i32.shr_s
  i32.const 8
  i32.ne
  if
   unreachable
  end
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  i32.eqz
  if
   unreachable
  end
  local.get $0
  i32.load $0 offset=4
  i32.load $0
  i32.const 44
  i32.ne
  if
   unreachable
  end
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  i32.const 1
  i32.le_u
  if
   unreachable
  end
  local.get $0
  i32.load $0 offset=4
  i32.load $0 offset=4
  i32.const 43
  i32.ne
  if
   unreachable
  end
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  i32.const 2
  i32.le_u
  if
   unreachable
  end
  local.get $0
  i32.load $0 offset=4
  i32.load $0 offset=8
  i32.const 42
  i32.ne
  if
   unreachable
  end
  global.get $std/array/arr
  local.tee $2
  i32.load $0 offset=12
  local.tee $3
  i32.const 1
  i32.add
  local.tee $5
  local.tee $0
  local.get $2
  i32.load $0 offset=8
  local.tee $10
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   local.get $0
   i32.const 268435455
   i32.gt_u
   if
    unreachable
   end
   local.get $2
   i32.load $0
   local.set $11
   i32.const 1073741820
   local.get $10
   i32.const 1
   i32.shl
   local.tee $1
   local.get $1
   i32.const 1073741820
   i32.ge_u
   select
   local.tee $1
   i32.const 8
   local.get $0
   local.get $0
   i32.const 8
   i32.le_u
   select
   i32.const 2
   i32.shl
   local.tee $0
   local.get $0
   local.get $1
   i32.lt_u
   select
   local.tee $12
   i32.const 1073741804
   i32.gt_u
   if
    unreachable
   end
   local.get $11
   i32.const 16
   i32.sub
   local.tee $0
   i32.const 15
   i32.and
   i32.const 1
   local.get $0
   select
   if
    unreachable
   end
   global.get $~lib/rt/stub/offset
   local.get $0
   i32.const 4
   i32.sub
   local.tee $1
   i32.load $0
   local.tee $13
   local.get $0
   i32.add
   i32.eq
   local.set $14
   local.get $12
   i32.const 16
   i32.add
   local.tee $15
   i32.const 19
   i32.add
   i32.const -16
   i32.and
   i32.const 4
   i32.sub
   local.set $16
   local.get $13
   local.get $15
   i32.lt_u
   if
    local.get $14
    if
     local.get $15
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     local.get $0
     local.get $16
     i32.add
     local.tee $13
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $13
     global.set $~lib/rt/stub/offset
     local.get $1
     local.get $16
     i32.store $0
    else
     local.get $16
     local.get $13
     i32.const 1
     i32.shl
     local.tee $1
     local.get $1
     local.get $16
     i32.lt_u
     select
     local.tee $14
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     global.get $~lib/rt/stub/offset
     i32.eqz
     if
      i32.const 9932
      global.set $~lib/rt/stub/offset
     end
     global.get $~lib/rt/stub/offset
     local.tee $1
     local.set $15
     local.get $1
     i32.const 4
     i32.add
     local.tee $1
     local.get $14
     i32.const 19
     i32.add
     i32.const -16
     i32.and
     i32.const 4
     i32.sub
     local.tee $14
     i32.add
     local.tee $16
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $16
     global.set $~lib/rt/stub/offset
     local.get $15
     local.get $14
     i32.store $0
     local.get $1
     local.get $0
     local.get $13
     memory.copy $0 $0
     local.get $1
     local.set $0
    end
   else
    local.get $14
    if
     local.get $0
     local.get $16
     i32.add
     global.set $~lib/rt/stub/offset
     local.get $1
     local.get $16
     i32.store $0
    end
   end
   local.get $0
   i32.const 4
   i32.sub
   local.get $12
   i32.store $0 offset=8
   local.get $0
   i32.const 16
   i32.add
   local.tee $0
   local.get $10
   i32.add
   i32.const 0
   local.get $12
   local.get $10
   i32.sub
   memory.fill $0
   local.get $0
   local.get $11
   i32.ne
   if
    local.get $2
    local.get $0
    i32.store $0
    local.get $2
    local.get $0
    i32.store $0 offset=4
   end
   local.get $2
   local.get $12
   i32.store $0 offset=8
  end
  local.get $2
  i32.load $0 offset=4
  local.get $3
  i32.const 2
  i32.shl
  i32.add
  i32.const 43
  i32.store $0
  local.get $2
  local.get $5
  i32.store $0 offset=12
  global.get $std/array/arr
  local.tee $2
  i32.load $0 offset=12
  local.tee $3
  i32.const 1
  i32.add
  local.tee $5
  local.tee $0
  local.get $2
  i32.load $0 offset=8
  local.tee $10
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   local.get $0
   i32.const 268435455
   i32.gt_u
   if
    unreachable
   end
   local.get $2
   i32.load $0
   local.set $11
   i32.const 1073741820
   local.get $10
   i32.const 1
   i32.shl
   local.tee $1
   local.get $1
   i32.const 1073741820
   i32.ge_u
   select
   local.tee $1
   i32.const 8
   local.get $0
   local.get $0
   i32.const 8
   i32.le_u
   select
   i32.const 2
   i32.shl
   local.tee $0
   local.get $0
   local.get $1
   i32.lt_u
   select
   local.tee $12
   i32.const 1073741804
   i32.gt_u
   if
    unreachable
   end
   local.get $11
   i32.const 16
   i32.sub
   local.tee $0
   i32.const 15
   i32.and
   i32.const 1
   local.get $0
   select
   if
    unreachable
   end
   global.get $~lib/rt/stub/offset
   local.get $0
   i32.const 4
   i32.sub
   local.tee $1
   i32.load $0
   local.tee $13
   local.get $0
   i32.add
   i32.eq
   local.set $14
   local.get $12
   i32.const 16
   i32.add
   local.tee $15
   i32.const 19
   i32.add
   i32.const -16
   i32.and
   i32.const 4
   i32.sub
   local.set $16
   local.get $13
   local.get $15
   i32.lt_u
   if
    local.get $14
    if
     local.get $15
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     local.get $0
     local.get $16
     i32.add
     local.tee $13
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $13
     global.set $~lib/rt/stub/offset
     local.get $1
     local.get $16
     i32.store $0
    else
     local.get $16
     local.get $13
     i32.const 1
     i32.shl
     local.tee $1
     local.get $1
     local.get $16
     i32.lt_u
     select
     local.tee $14
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     global.get $~lib/rt/stub/offset
     i32.eqz
     if
      i32.const 9932
      global.set $~lib/rt/stub/offset
     end
     global.get $~lib/rt/stub/offset
     local.tee $1
     local.set $15
     local.get $1
     i32.const 4
     i32.add
     local.tee $1
     local.get $14
     i32.const 19
     i32.add
     i32.const -16
     i32.and
     i32.const 4
     i32.sub
     local.tee $14
     i32.add
     local.tee $16
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $16
     global.set $~lib/rt/stub/offset
     local.get $15
     local.get $14
     i32.store $0
     local.get $1
     local.get $0
     local.get $13
     memory.copy $0 $0
     local.get $1
     local.set $0
    end
   else
    local.get $14
    if
     local.get $0
     local.get $16
     i32.add
     global.set $~lib/rt/stub/offset
     local.get $1
     local.get $16
     i32.store $0
    end
   end
   local.get $0
   i32.const 4
   i32.sub
   local.get $12
   i32.store $0 offset=8
   local.get $0
   i32.const 16
   i32.add
   local.tee $0
   local.get $10
   i32.add
   i32.const 0
   local.get $12
   local.get $10
   i32.sub
   memory.fill $0
   local.get $0
   local.get $11
   i32.ne
   if
    local.get $2
    local.get $0
    i32.store $0
    local.get $2
    local.get $0
    i32.store $0 offset=4
   end
   local.get $2
   local.get $12
   i32.store $0 offset=8
  end
  local.get $2
  i32.load $0 offset=4
  local.get $3
  i32.const 2
  i32.shl
  i32.add
  i32.const 44
  i32.store $0
  local.get $2
  local.get $5
  i32.store $0 offset=12
  i32.const 0
  local.set $1
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $2
  i32.const 28
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 28
  i32.store $0
  local.get $2
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 0
  i32.store $0 offset=4
  local.get $0
  i32.const 4
  i32.store $0 offset=8
  local.get $2
  i32.const 16
  i32.add
  local.tee $3
  local.tee $0
  i32.const 3776
  i32.load $0
  i32.store $0
  i32.const 3780
  local.set $2
  local.get $0
  i32.const 4
  i32.add
  local.set $0
  i32.const 0
  local.set $5
  local.get $5
  if
   local.get $0
   local.get $2
   i32.load8_u $0
   i32.store8 $0
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $2
  i32.const 44
  i32.add
  local.tee $5
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $5
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 44
  i32.store $0
  local.get $2
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 6
  i32.store $0 offset=4
  local.get $0
  i32.const 16
  i32.store $0 offset=8
  local.get $2
  local.get $3
  i32.store $0 offset=16
  local.get $2
  local.get $3
  i32.store $0 offset=20
  local.get $2
  i32.const 4
  i32.store $0 offset=24
  local.get $2
  i32.const 4
  i32.store $0 offset=28
  local.get $2
  i32.load $0 offset=20
  local.set $3
  local.get $2
  i32.load $0 offset=28
  local.tee $5
  i32.const 1
  i32.gt_u
  if
   i32.const 0
   local.set $0
   local.get $5
   i32.const 1
   i32.shr_u
   local.set $10
   local.get $5
   i32.const 8
   i32.sub
   local.set $11
   loop $while-continue|098
    local.get $0
    i32.const 7
    i32.add
    local.get $10
    i32.lt_u
    if
     local.get $0
     local.get $3
     i32.add
     local.tee $12
     i64.load $0
     local.tee $4
     i64.const 8
     i64.shr_u
     i64.const 71777214294589695
     i64.and
     local.get $4
     i64.const 71777214294589695
     i64.and
     i64.const 8
     i64.shl
     i64.or
     local.set $4
     local.get $12
     local.get $3
     local.get $11
     i32.add
     local.get $0
     i32.sub
     local.tee $12
     i64.load $0
     local.tee $17
     i64.const 8
     i64.shr_u
     i64.const 71777214294589695
     i64.and
     local.get $17
     i64.const 71777214294589695
     i64.and
     i64.const 8
     i64.shl
     i64.or
     local.tee $17
     i64.const 16
     i64.shr_u
     i64.const 281470681808895
     i64.and
     local.get $17
     i64.const 281470681808895
     i64.and
     i64.const 16
     i64.shl
     i64.or
     i64.const 32
     i64.rotr
     i64.store $0
     local.get $12
     local.get $4
     i64.const 16
     i64.shr_u
     i64.const 281470681808895
     i64.and
     local.get $4
     i64.const 281470681808895
     i64.and
     i64.const 16
     i64.shl
     i64.or
     i64.const 32
     i64.rotr
     i64.store $0
     local.get $0
     i32.const 8
     i32.add
     local.set $0
     br $while-continue|098
    end
   end
   local.get $5
   i32.const 1
   i32.sub
   local.set $5
   loop $while-continue|1
    local.get $0
    local.get $10
    i32.lt_u
    if
     local.get $0
     local.get $3
     i32.add
     local.tee $11
     i32.load8_u $0
     local.set $12
     local.get $11
     local.get $3
     local.get $5
     local.get $0
     i32.sub
     i32.add
     local.tee $11
     i32.load8_u $0
     i32.store8 $0
     local.get $11
     local.get $12
     i32.store8 $0
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $while-continue|1
    end
   end
  end
  local.get $2
  i32.load $0 offset=28
  local.set $0
  loop $for-loop|38
   local.get $0
   local.get $1
   i32.gt_s
   if
    local.get $1
    local.get $2
    i32.load $0 offset=28
    i32.ge_u
    if
     unreachable
    end
    local.get $2
    i32.load $0 offset=20
    local.get $1
    i32.add
    i32.load8_u $0
    local.get $2
    i32.load $0 offset=28
    local.get $1
    i32.sub
    i32.const 1
    i32.sub
    i32.ne
    if
     unreachable
    end
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|38
   end
  end
  i32.const 0
  local.set $1
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $2
  i32.const 28
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 28
  i32.store $0
  local.get $2
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 0
  i32.store $0 offset=4
  local.get $0
  i32.const 8
  i32.store $0 offset=8
  local.get $2
  i32.const 16
  i32.add
  local.tee $3
  local.tee $0
  i32.const 3808
  i64.load $0
  i64.store $0
  i32.const 3816
  local.set $2
  local.get $0
  i32.const 8
  i32.add
  local.set $0
  i32.const 0
  local.set $5
  local.get $5
  i32.const 2
  i32.ge_s
  if
   local.get $0
   local.get $2
   i32.load16_u $0
   i32.store16 $0
   local.get $2
   i32.const 2
   i32.add
   local.set $2
   local.get $5
   i32.const 2
   i32.sub
   local.set $5
   local.get $0
   i32.const 2
   i32.add
   local.set $0
  end
  local.get $5
  if
   local.get $0
   local.get $2
   i32.load8_u $0
   i32.store8 $0
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $2
  i32.const 44
  i32.add
  local.tee $5
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $5
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 44
  i32.store $0
  local.get $2
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 6
  i32.store $0 offset=4
  local.get $0
  i32.const 16
  i32.store $0 offset=8
  local.get $2
  local.get $3
  i32.store $0 offset=16
  local.get $2
  local.get $3
  i32.store $0 offset=20
  local.get $2
  i32.const 8
  i32.store $0 offset=24
  local.get $2
  i32.const 8
  i32.store $0 offset=28
  local.get $2
  i32.load $0 offset=20
  local.set $3
  local.get $2
  i32.load $0 offset=28
  local.tee $5
  i32.const 1
  i32.gt_u
  if
   i32.const 0
   local.set $0
   local.get $5
   i32.const 1
   i32.shr_u
   local.set $10
   local.get $5
   i32.const 8
   i32.sub
   local.set $11
   loop $while-continue|0102
    local.get $0
    i32.const 7
    i32.add
    local.get $10
    i32.lt_u
    if
     local.get $0
     local.get $3
     i32.add
     local.tee $12
     i64.load $0
     local.tee $4
     i64.const 8
     i64.shr_u
     i64.const 71777214294589695
     i64.and
     local.get $4
     i64.const 71777214294589695
     i64.and
     i64.const 8
     i64.shl
     i64.or
     local.set $4
     local.get $12
     local.get $3
     local.get $11
     i32.add
     local.get $0
     i32.sub
     local.tee $12
     i64.load $0
     local.tee $17
     i64.const 8
     i64.shr_u
     i64.const 71777214294589695
     i64.and
     local.get $17
     i64.const 71777214294589695
     i64.and
     i64.const 8
     i64.shl
     i64.or
     local.tee $17
     i64.const 16
     i64.shr_u
     i64.const 281470681808895
     i64.and
     local.get $17
     i64.const 281470681808895
     i64.and
     i64.const 16
     i64.shl
     i64.or
     i64.const 32
     i64.rotr
     i64.store $0
     local.get $12
     local.get $4
     i64.const 16
     i64.shr_u
     i64.const 281470681808895
     i64.and
     local.get $4
     i64.const 281470681808895
     i64.and
     i64.const 16
     i64.shl
     i64.or
     i64.const 32
     i64.rotr
     i64.store $0
     local.get $0
     i32.const 8
     i32.add
     local.set $0
     br $while-continue|0102
    end
   end
   local.get $5
   i32.const 1
   i32.sub
   local.set $5
   loop $while-continue|1104
    local.get $0
    local.get $10
    i32.lt_u
    if
     local.get $0
     local.get $3
     i32.add
     local.tee $11
     i32.load8_u $0
     local.set $12
     local.get $11
     local.get $3
     local.get $5
     local.get $0
     i32.sub
     i32.add
     local.tee $11
     i32.load8_u $0
     i32.store8 $0
     local.get $11
     local.get $12
     i32.store8 $0
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $while-continue|1104
    end
   end
  end
  local.get $2
  i32.load $0 offset=28
  local.set $0
  loop $for-loop|39
   local.get $0
   local.get $1
   i32.gt_s
   if
    local.get $1
    local.get $2
    i32.load $0 offset=28
    i32.ge_u
    if
     unreachable
    end
    local.get $2
    i32.load $0 offset=20
    local.get $1
    i32.add
    i32.load8_u $0
    local.get $2
    i32.load $0 offset=28
    local.get $1
    i32.sub
    i32.const 1
    i32.sub
    i32.ne
    if
     unreachable
    end
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|39
   end
  end
  i32.const 0
  local.set $1
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $2
  i32.const 44
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 44
  i32.store $0
  local.get $2
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 0
  i32.store $0 offset=4
  local.get $0
  i32.const 17
  i32.store $0 offset=8
  local.get $2
  i32.const 16
  i32.add
  local.tee $3
  i32.const 3840
  i64.load $0
  i64.store $0
  local.get $3
  i32.const 3848
  i64.load $0
  i64.store $0 offset=8
  i32.const 3856
  local.set $2
  local.get $3
  i32.const 16
  i32.add
  local.set $0
  i32.const 1
  local.set $5
  local.get $5
  if
   local.get $0
   local.get $2
   i32.load8_u $0
   i32.store8 $0
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $2
  i32.const 44
  i32.add
  local.tee $5
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $5
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 44
  i32.store $0
  local.get $2
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 6
  i32.store $0 offset=4
  local.get $0
  i32.const 16
  i32.store $0 offset=8
  local.get $2
  local.get $3
  i32.store $0 offset=16
  local.get $2
  local.get $3
  i32.store $0 offset=20
  local.get $2
  i32.const 17
  i32.store $0 offset=24
  local.get $2
  i32.const 17
  i32.store $0 offset=28
  local.get $2
  i32.load $0 offset=20
  local.set $3
  local.get $2
  i32.load $0 offset=28
  local.tee $5
  i32.const 1
  i32.gt_u
  if
   i32.const 0
   local.set $0
   local.get $5
   i32.const 1
   i32.shr_u
   local.set $10
   local.get $5
   i32.const 8
   i32.sub
   local.set $11
   loop $while-continue|0108
    local.get $0
    i32.const 7
    i32.add
    local.get $10
    i32.lt_u
    if
     local.get $0
     local.get $3
     i32.add
     local.tee $12
     i64.load $0
     local.tee $4
     i64.const 8
     i64.shr_u
     i64.const 71777214294589695
     i64.and
     local.get $4
     i64.const 71777214294589695
     i64.and
     i64.const 8
     i64.shl
     i64.or
     local.set $4
     local.get $12
     local.get $3
     local.get $11
     i32.add
     local.get $0
     i32.sub
     local.tee $12
     i64.load $0
     local.tee $17
     i64.const 8
     i64.shr_u
     i64.const 71777214294589695
     i64.and
     local.get $17
     i64.const 71777214294589695
     i64.and
     i64.const 8
     i64.shl
     i64.or
     local.tee $17
     i64.const 16
     i64.shr_u
     i64.const 281470681808895
     i64.and
     local.get $17
     i64.const 281470681808895
     i64.and
     i64.const 16
     i64.shl
     i64.or
     i64.const 32
     i64.rotr
     i64.store $0
     local.get $12
     local.get $4
     i64.const 16
     i64.shr_u
     i64.const 281470681808895
     i64.and
     local.get $4
     i64.const 281470681808895
     i64.and
     i64.const 16
     i64.shl
     i64.or
     i64.const 32
     i64.rotr
     i64.store $0
     local.get $0
     i32.const 8
     i32.add
     local.set $0
     br $while-continue|0108
    end
   end
   local.get $5
   i32.const 1
   i32.sub
   local.set $5
   loop $while-continue|1110
    local.get $0
    local.get $10
    i32.lt_u
    if
     local.get $0
     local.get $3
     i32.add
     local.tee $11
     i32.load8_u $0
     local.set $12
     local.get $11
     local.get $3
     local.get $5
     local.get $0
     i32.sub
     i32.add
     local.tee $11
     i32.load8_u $0
     i32.store8 $0
     local.get $11
     local.get $12
     i32.store8 $0
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $while-continue|1110
    end
   end
  end
  local.get $2
  i32.load $0 offset=28
  local.set $0
  loop $for-loop|40
   local.get $0
   local.get $1
   i32.gt_s
   if
    local.get $1
    local.get $2
    i32.load $0 offset=28
    i32.ge_u
    if
     unreachable
    end
    local.get $2
    i32.load $0 offset=20
    local.get $1
    i32.add
    i32.load8_u $0
    local.get $2
    i32.load $0 offset=28
    local.get $1
    i32.sub
    i32.const 1
    i32.sub
    i32.ne
    if
     unreachable
    end
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|40
   end
  end
  i32.const 0
  local.set $1
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $2
  i32.const 44
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 44
  i32.store $0
  local.get $2
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 0
  i32.store $0 offset=4
  local.get $0
  i32.const 14
  i32.store $0 offset=8
  local.get $2
  i32.const 16
  i32.add
  local.tee $3
  local.tee $0
  i32.const 3888
  i64.load $0
  i64.store $0
  i32.const 3896
  local.set $2
  local.get $0
  i32.const 8
  i32.add
  local.set $0
  i32.const 6
  local.tee $5
  i32.const 4
  i32.ge_u
  if
   local.get $0
   i32.const 3896
   i32.load $0
   i32.store $0
   i32.const 3900
   local.set $2
   i32.const 2
   local.set $5
   local.get $0
   i32.const 4
   i32.add
   local.set $0
  end
  local.get $5
  i32.const 2
  i32.ge_s
  if
   local.get $0
   local.get $2
   i32.load16_u $0
   i32.store16 $0
   local.get $2
   i32.const 2
   i32.add
   local.set $2
   local.get $5
   i32.const 2
   i32.sub
   local.set $5
   local.get $0
   i32.const 2
   i32.add
   local.set $0
  end
  local.get $5
  if
   local.get $0
   local.get $2
   i32.load8_u $0
   i32.store8 $0
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $2
  i32.const 44
  i32.add
  local.tee $5
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $5
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 44
  i32.store $0
  local.get $2
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 11
  i32.store $0 offset=4
  local.get $0
  i32.const 16
  i32.store $0 offset=8
  local.get $2
  local.get $3
  i32.store $0 offset=16
  local.get $2
  local.get $3
  i32.store $0 offset=20
  local.get $2
  i32.const 14
  i32.store $0 offset=24
  local.get $2
  i32.const 7
  i32.store $0 offset=28
  local.get $2
  i32.load $0 offset=20
  local.set $3
  local.get $2
  i32.load $0 offset=28
  local.tee $5
  i32.const 1
  i32.gt_u
  if
   i32.const 0
   local.set $0
   local.get $5
   i32.const 1
   i32.shr_u
   local.set $10
   local.get $5
   i32.const 2
   i32.sub
   local.set $11
   loop $while-continue|0112
    local.get $0
    i32.const 1
    i32.add
    local.get $10
    i32.lt_u
    if
     local.get $3
     local.get $11
     local.get $0
     i32.sub
     i32.const 1
     i32.shl
     i32.add
     local.tee $12
     i32.load $0
     i32.const 16
     i32.rotr
     local.set $13
     local.get $12
     local.get $3
     local.get $0
     i32.const 1
     i32.shl
     i32.add
     local.tee $12
     i32.load $0
     i32.const 16
     i32.rotr
     i32.store $0
     local.get $12
     local.get $13
     i32.store $0
     local.get $0
     i32.const 2
     i32.add
     local.set $0
     br $while-continue|0112
    end
   end
   local.get $5
   i32.const 1
   i32.sub
   local.set $5
   loop $while-continue|1114
    local.get $0
    local.get $10
    i32.lt_u
    if
     local.get $3
     local.get $0
     i32.const 1
     i32.shl
     i32.add
     local.tee $11
     i32.load16_u $0
     local.set $12
     local.get $11
     local.get $3
     local.get $5
     local.get $0
     i32.sub
     i32.const 1
     i32.shl
     i32.add
     local.tee $11
     i32.load16_u $0
     i32.store16 $0
     local.get $11
     local.get $12
     i32.store16 $0
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $while-continue|1114
    end
   end
  end
  local.get $2
  i32.load $0 offset=28
  local.set $0
  loop $for-loop|41
   local.get $0
   local.get $1
   i32.gt_s
   if
    local.get $1
    local.get $2
    i32.load $0 offset=28
    i32.ge_u
    if
     unreachable
    end
    local.get $2
    i32.load $0 offset=20
    local.get $1
    i32.const 1
    i32.shl
    i32.add
    i32.load16_u $0
    local.get $2
    i32.load $0 offset=28
    local.get $1
    i32.sub
    i32.const 1
    i32.sub
    i32.ne
    if
     unreachable
    end
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|41
   end
  end
  i32.const 0
  local.set $1
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $2
  i32.const 44
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 44
  i32.store $0
  local.get $2
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 0
  i32.store $0 offset=4
  local.get $0
  i32.const 16
  i32.store $0 offset=8
  local.get $2
  i32.const 16
  i32.add
  local.tee $3
  i32.const 3936
  i64.load $0
  i64.store $0
  local.get $3
  i32.const 3944
  i64.load $0
  i64.store $0 offset=8
  i32.const 3952
  local.set $2
  local.get $3
  i32.const 16
  i32.add
  local.set $0
  i32.const 0
  local.set $5
  local.get $5
  if
   local.get $0
   local.get $2
   i32.load8_u $0
   i32.store8 $0
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $2
  i32.const 44
  i32.add
  local.tee $5
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $5
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 44
  i32.store $0
  local.get $2
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 11
  i32.store $0 offset=4
  local.get $0
  i32.const 16
  i32.store $0 offset=8
  local.get $2
  local.get $3
  i32.store $0 offset=16
  local.get $2
  local.get $3
  i32.store $0 offset=20
  local.get $2
  i32.const 16
  i32.store $0 offset=24
  local.get $2
  i32.const 8
  i32.store $0 offset=28
  local.get $2
  i32.load $0 offset=20
  local.set $3
  local.get $2
  i32.load $0 offset=28
  local.tee $5
  i32.const 1
  i32.gt_u
  if
   i32.const 0
   local.set $0
   local.get $5
   i32.const 1
   i32.shr_u
   local.set $10
   local.get $5
   i32.const 2
   i32.sub
   local.set $11
   loop $while-continue|0118
    local.get $0
    i32.const 1
    i32.add
    local.get $10
    i32.lt_u
    if
     local.get $3
     local.get $11
     local.get $0
     i32.sub
     i32.const 1
     i32.shl
     i32.add
     local.tee $12
     i32.load $0
     i32.const 16
     i32.rotr
     local.set $13
     local.get $12
     local.get $3
     local.get $0
     i32.const 1
     i32.shl
     i32.add
     local.tee $12
     i32.load $0
     i32.const 16
     i32.rotr
     i32.store $0
     local.get $12
     local.get $13
     i32.store $0
     local.get $0
     i32.const 2
     i32.add
     local.set $0
     br $while-continue|0118
    end
   end
   local.get $5
   i32.const 1
   i32.sub
   local.set $5
   loop $while-continue|1120
    local.get $0
    local.get $10
    i32.lt_u
    if
     local.get $3
     local.get $0
     i32.const 1
     i32.shl
     i32.add
     local.tee $11
     i32.load16_u $0
     local.set $12
     local.get $11
     local.get $3
     local.get $5
     local.get $0
     i32.sub
     i32.const 1
     i32.shl
     i32.add
     local.tee $11
     i32.load16_u $0
     i32.store16 $0
     local.get $11
     local.get $12
     i32.store16 $0
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $while-continue|1120
    end
   end
  end
  local.get $2
  i32.load $0 offset=28
  local.set $0
  loop $for-loop|42
   local.get $0
   local.get $1
   i32.gt_s
   if
    local.get $1
    local.get $2
    i32.load $0 offset=28
    i32.ge_u
    if
     unreachable
    end
    local.get $2
    i32.load $0 offset=20
    local.get $1
    i32.const 1
    i32.shl
    i32.add
    i32.load16_u $0
    local.get $2
    i32.load $0 offset=28
    local.get $1
    i32.sub
    i32.const 1
    i32.sub
    i32.ne
    if
     unreachable
    end
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|42
   end
  end
  i32.const 0
  local.set $1
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $2
  i32.const 44
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 44
  i32.store $0
  local.get $2
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 0
  i32.store $0 offset=4
  local.get $0
  i32.const 18
  i32.store $0 offset=8
  local.get $2
  i32.const 16
  i32.add
  local.tee $3
  i32.const 3984
  i64.load $0
  i64.store $0
  local.get $3
  i32.const 3992
  i64.load $0
  i64.store $0 offset=8
  i32.const 4000
  local.set $2
  local.get $3
  i32.const 16
  i32.add
  local.set $0
  i32.const 2
  local.tee $5
  i32.const 2
  i32.ge_u
  if
   local.get $0
   i32.const 4000
   i32.load16_u $0
   i32.store16 $0
   i32.const 4002
   local.set $2
   i32.const 0
   local.set $5
   local.get $0
   i32.const 2
   i32.add
   local.set $0
  end
  local.get $5
  if
   local.get $0
   local.get $2
   i32.load8_u $0
   i32.store8 $0
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $2
  i32.const 44
  i32.add
  local.tee $5
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $5
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 44
  i32.store $0
  local.get $2
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 11
  i32.store $0 offset=4
  local.get $0
  i32.const 16
  i32.store $0 offset=8
  local.get $2
  local.get $3
  i32.store $0 offset=16
  local.get $2
  local.get $3
  i32.store $0 offset=20
  local.get $2
  i32.const 18
  i32.store $0 offset=24
  local.get $2
  i32.const 9
  i32.store $0 offset=28
  local.get $2
  i32.load $0 offset=20
  local.set $3
  local.get $2
  i32.load $0 offset=28
  local.tee $5
  i32.const 1
  i32.gt_u
  if
   i32.const 0
   local.set $0
   local.get $5
   i32.const 1
   i32.shr_u
   local.set $10
   local.get $5
   i32.const 2
   i32.sub
   local.set $11
   loop $while-continue|0124
    local.get $0
    i32.const 1
    i32.add
    local.get $10
    i32.lt_u
    if
     local.get $3
     local.get $11
     local.get $0
     i32.sub
     i32.const 1
     i32.shl
     i32.add
     local.tee $12
     i32.load $0
     i32.const 16
     i32.rotr
     local.set $13
     local.get $12
     local.get $3
     local.get $0
     i32.const 1
     i32.shl
     i32.add
     local.tee $12
     i32.load $0
     i32.const 16
     i32.rotr
     i32.store $0
     local.get $12
     local.get $13
     i32.store $0
     local.get $0
     i32.const 2
     i32.add
     local.set $0
     br $while-continue|0124
    end
   end
   local.get $5
   i32.const 1
   i32.sub
   local.set $5
   loop $while-continue|1126
    local.get $0
    local.get $10
    i32.lt_u
    if
     local.get $3
     local.get $0
     i32.const 1
     i32.shl
     i32.add
     local.tee $11
     i32.load16_u $0
     local.set $12
     local.get $11
     local.get $3
     local.get $5
     local.get $0
     i32.sub
     i32.const 1
     i32.shl
     i32.add
     local.tee $11
     i32.load16_u $0
     i32.store16 $0
     local.get $11
     local.get $12
     i32.store16 $0
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $while-continue|1126
    end
   end
  end
  local.get $2
  i32.load $0 offset=28
  local.set $0
  loop $for-loop|43
   local.get $0
   local.get $1
   i32.gt_s
   if
    local.get $1
    local.get $2
    i32.load $0 offset=28
    i32.ge_u
    if
     unreachable
    end
    local.get $2
    i32.load $0 offset=20
    local.get $1
    i32.const 1
    i32.shl
    i32.add
    i32.load16_u $0
    local.get $2
    i32.load $0 offset=28
    local.get $1
    i32.sub
    i32.const 1
    i32.sub
    i32.ne
    if
     unreachable
    end
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|43
   end
  end
  i32.const 0
  local.set $1
  i32.const -1
  local.set $0
  block $__inlined_func$~lib/array/Array<i32>#indexOf
   global.get $std/array/arr
   local.tee $2
   i32.load $0 offset=12
   local.tee $3
   i32.eqz
   local.get $3
   i32.const 0
   i32.le_s
   i32.or
   br_if $__inlined_func$~lib/array/Array<i32>#indexOf
   local.get $2
   i32.load $0 offset=4
   local.set $2
   loop $while-continue|0128
    local.get $1
    local.get $3
    i32.lt_s
    if
     local.get $2
     local.get $1
     local.tee $0
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 44
     i32.eq
     br_if $__inlined_func$~lib/array/Array<i32>#indexOf
     local.get $0
     i32.const 1
     i32.add
     local.set $1
     br $while-continue|0128
    end
   end
   i32.const -1
   local.set $0
  end
  local.get $0
  global.set $std/array/i
  global.get $std/array/i
  if
   unreachable
  end
  i32.const 0
  local.set $1
  i32.const -1
  local.set $0
  block $__inlined_func$~lib/array/Array<i32>#indexOf280
   global.get $std/array/arr
   local.tee $2
   i32.load $0 offset=12
   local.tee $3
   i32.eqz
   local.get $3
   i32.const 0
   i32.le_s
   i32.or
   br_if $__inlined_func$~lib/array/Array<i32>#indexOf280
   local.get $2
   i32.load $0 offset=4
   local.set $2
   loop $while-continue|0282
    local.get $1
    local.get $3
    i32.lt_s
    if
     local.get $2
     local.get $1
     local.tee $0
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 42
     i32.eq
     br_if $__inlined_func$~lib/array/Array<i32>#indexOf280
     local.get $0
     i32.const 1
     i32.add
     local.set $1
     br $while-continue|0282
    end
   end
   i32.const -1
   local.set $0
  end
  local.get $0
  global.set $std/array/i
  global.get $std/array/i
  i32.const 2
  i32.ne
  if
   unreachable
  end
  i32.const 0
  local.set $1
  i32.const -1
  local.set $0
  block $__inlined_func$~lib/array/Array<i32>#indexOf283
   global.get $std/array/arr
   local.tee $2
   i32.load $0 offset=12
   local.tee $3
   i32.eqz
   local.get $3
   i32.const 0
   i32.le_s
   i32.or
   br_if $__inlined_func$~lib/array/Array<i32>#indexOf283
   local.get $2
   i32.load $0 offset=4
   local.set $2
   loop $while-continue|0285
    local.get $1
    local.get $3
    i32.lt_s
    if
     local.get $2
     local.get $1
     local.tee $0
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 45
     i32.eq
     br_if $__inlined_func$~lib/array/Array<i32>#indexOf283
     local.get $0
     i32.const 1
     i32.add
     local.set $1
     br $while-continue|0285
    end
   end
   i32.const -1
   local.set $0
  end
  local.get $0
  global.set $std/array/i
  global.get $std/array/i
  i32.const -1
  i32.ne
  if
   unreachable
  end
  i32.const 100
  local.set $1
  i32.const -1
  local.set $0
  block $__inlined_func$~lib/array/Array<i32>#indexOf286
   global.get $std/array/arr
   local.tee $2
   i32.load $0 offset=12
   local.tee $3
   i32.eqz
   local.get $3
   i32.const 100
   i32.le_s
   i32.or
   br_if $__inlined_func$~lib/array/Array<i32>#indexOf286
   local.get $2
   i32.load $0 offset=4
   local.set $2
   loop $while-continue|0288
    local.get $1
    local.get $3
    i32.lt_s
    if
     local.get $2
     local.get $1
     local.tee $0
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 43
     i32.eq
     br_if $__inlined_func$~lib/array/Array<i32>#indexOf286
     local.get $0
     i32.const 1
     i32.add
     local.set $1
     br $while-continue|0288
    end
   end
   i32.const -1
   local.set $0
  end
  local.get $0
  global.set $std/array/i
  global.get $std/array/i
  i32.const -1
  i32.ne
  if
   unreachable
  end
  i32.const -1
  local.set $1
  block $__inlined_func$~lib/array/Array<i32>#indexOf289
   global.get $std/array/arr
   local.tee $0
   i32.load $0 offset=12
   local.tee $2
   i32.eqz
   local.get $2
   i32.const -100
   i32.le_s
   i32.or
   br_if $__inlined_func$~lib/array/Array<i32>#indexOf289
   local.get $2
   i32.const 100
   i32.sub
   local.tee $1
   i32.const 0
   local.get $1
   i32.const 0
   i32.gt_s
   select
   local.set $1
   local.get $0
   i32.load $0 offset=4
   local.set $0
   loop $while-continue|0291
    local.get $1
    local.get $2
    i32.lt_s
    if
     local.get $0
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 43
     i32.eq
     br_if $__inlined_func$~lib/array/Array<i32>#indexOf289
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $while-continue|0291
    end
   end
   i32.const -1
   local.set $1
  end
  local.get $1
  global.set $std/array/i
  global.get $std/array/i
  i32.const 1
  i32.ne
  if
   unreachable
  end
  i32.const -1
  local.set $1
  block $__inlined_func$~lib/array/Array<i32>#indexOf292
   global.get $std/array/arr
   local.tee $0
   i32.load $0 offset=12
   local.tee $2
   i32.eqz
   local.get $2
   i32.const -2
   i32.le_s
   i32.or
   br_if $__inlined_func$~lib/array/Array<i32>#indexOf292
   local.get $2
   i32.const 2
   i32.sub
   local.tee $1
   i32.const 0
   local.get $1
   i32.const 0
   i32.gt_s
   select
   local.set $1
   local.get $0
   i32.load $0 offset=4
   local.set $0
   loop $while-continue|0294
    local.get $1
    local.get $2
    i32.lt_s
    if
     local.get $0
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 43
     i32.eq
     br_if $__inlined_func$~lib/array/Array<i32>#indexOf292
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $while-continue|0294
    end
   end
   i32.const -1
   local.set $1
  end
  local.get $1
  global.set $std/array/i
  global.get $std/array/i
  i32.const 3
  i32.ne
  if
   unreachable
  end
  i32.const -1
  local.set $1
  block $__inlined_func$~lib/array/Array<i32>#indexOf295
   global.get $std/array/arr
   local.tee $0
   i32.load $0 offset=12
   local.tee $2
   i32.eqz
   local.get $2
   i32.const -4
   i32.le_s
   i32.or
   br_if $__inlined_func$~lib/array/Array<i32>#indexOf295
   local.get $2
   i32.const 4
   i32.sub
   local.tee $1
   i32.const 0
   local.get $1
   i32.const 0
   i32.gt_s
   select
   local.set $1
   local.get $0
   i32.load $0 offset=4
   local.set $0
   loop $while-continue|0297
    local.get $1
    local.get $2
    i32.lt_s
    if
     local.get $0
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 43
     i32.eq
     br_if $__inlined_func$~lib/array/Array<i32>#indexOf295
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $while-continue|0297
    end
   end
   i32.const -1
   local.set $1
  end
  local.get $1
  global.set $std/array/i
  global.get $std/array/i
  i32.const 1
  i32.ne
  if
   unreachable
  end
  i32.const 0
  local.set $1
  i32.const -1
  local.set $0
  block $__inlined_func$~lib/array/Array<i32>#indexOf298
   global.get $std/array/arr
   local.tee $2
   i32.load $0 offset=12
   local.tee $3
   i32.eqz
   local.get $3
   i32.const 0
   i32.le_s
   i32.or
   br_if $__inlined_func$~lib/array/Array<i32>#indexOf298
   local.get $2
   i32.load $0 offset=4
   local.set $2
   loop $while-continue|0300
    local.get $1
    local.get $3
    i32.lt_s
    if
     local.get $2
     local.get $1
     local.tee $0
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 43
     i32.eq
     br_if $__inlined_func$~lib/array/Array<i32>#indexOf298
     local.get $0
     i32.const 1
     i32.add
     local.set $1
     br $while-continue|0300
    end
   end
   i32.const -1
   local.set $0
  end
  local.get $0
  global.set $std/array/i
  global.get $std/array/i
  i32.const 1
  i32.ne
  if
   unreachable
  end
  i32.const 1
  local.set $1
  i32.const -1
  local.set $0
  block $__inlined_func$~lib/array/Array<i32>#indexOf301
   global.get $std/array/arr
   local.tee $2
   i32.load $0 offset=12
   local.tee $3
   i32.eqz
   local.get $3
   i32.const 1
   i32.le_s
   i32.or
   br_if $__inlined_func$~lib/array/Array<i32>#indexOf301
   local.get $2
   i32.load $0 offset=4
   local.set $2
   loop $while-continue|0303
    local.get $1
    local.get $3
    i32.lt_s
    if
     local.get $2
     local.get $1
     local.tee $0
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 43
     i32.eq
     br_if $__inlined_func$~lib/array/Array<i32>#indexOf301
     local.get $0
     i32.const 1
     i32.add
     local.set $1
     br $while-continue|0303
    end
   end
   i32.const -1
   local.set $0
  end
  local.get $0
  global.set $std/array/i
  global.get $std/array/i
  i32.const 1
  i32.ne
  if
   unreachable
  end
  i32.const 2
  local.set $1
  i32.const -1
  local.set $0
  block $__inlined_func$~lib/array/Array<i32>#indexOf304
   global.get $std/array/arr
   local.tee $2
   i32.load $0 offset=12
   local.tee $3
   i32.eqz
   local.get $3
   i32.const 2
   i32.le_s
   i32.or
   br_if $__inlined_func$~lib/array/Array<i32>#indexOf304
   local.get $2
   i32.load $0 offset=4
   local.set $2
   loop $while-continue|0306
    local.get $1
    local.get $3
    i32.lt_s
    if
     local.get $2
     local.get $1
     local.tee $0
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 43
     i32.eq
     br_if $__inlined_func$~lib/array/Array<i32>#indexOf304
     local.get $0
     i32.const 1
     i32.add
     local.set $1
     br $while-continue|0306
    end
   end
   i32.const -1
   local.set $0
  end
  local.get $0
  global.set $std/array/i
  global.get $std/array/i
  i32.const 3
  i32.ne
  if
   unreachable
  end
  i32.const 0
  local.set $1
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $2
  i32.const 28
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 28
  i32.store $0
  local.get $2
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 0
  i32.store $0 offset=4
  local.get $0
  i32.const 4
  i32.store $0 offset=8
  local.get $2
  i32.const 16
  i32.add
  local.tee $2
  local.tee $0
  i32.const 4032
  i32.load $0
  i32.store $0
  i32.const 4036
  local.set $3
  local.get $0
  i32.const 4
  i32.add
  local.set $0
  i32.const 0
  local.set $5
  local.get $5
  if
   local.get $0
   local.get $3
   i32.load8_u $0
   i32.store8 $0
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $3
  i32.const 44
  i32.add
  local.tee $5
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $5
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 44
  i32.store $0
  local.get $3
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 8
  i32.store $0 offset=4
  local.get $0
  i32.const 16
  i32.store $0 offset=8
  local.get $3
  local.get $2
  i32.store $0 offset=16
  local.get $3
  local.get $2
  i32.store $0 offset=20
  local.get $3
  i32.const 4
  i32.store $0 offset=24
  local.get $3
  i32.const 1
  i32.store $0 offset=28
  i32.const -1
  local.set $0
  block $__inlined_func$~lib/array/Array<f32>#indexOf
   local.get $3
   i32.load $0 offset=28
   local.tee $2
   i32.eqz
   local.get $2
   i32.const 0
   i32.le_s
   i32.or
   br_if $__inlined_func$~lib/array/Array<f32>#indexOf
   local.get $3
   i32.load $0 offset=20
   local.set $3
   loop $while-continue|0308
    local.get $1
    local.get $2
    i32.lt_s
    if
     local.get $3
     local.get $1
     local.tee $0
     i32.const 2
     i32.shl
     i32.add
     f32.load $0
     f32.const nan:0x400000
     f32.eq
     br_if $__inlined_func$~lib/array/Array<f32>#indexOf
     local.get $0
     i32.const 1
     i32.add
     local.set $1
     br $while-continue|0308
    end
   end
   i32.const -1
   local.set $0
  end
  local.get $0
  i32.const -1
  i32.ne
  if
   unreachable
  end
  i32.const 0
  local.set $1
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $2
  i32.const 28
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 28
  i32.store $0
  local.get $2
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 0
  i32.store $0 offset=4
  local.get $0
  i32.const 8
  i32.store $0 offset=8
  local.get $2
  i32.const 16
  i32.add
  local.tee $2
  local.tee $0
  i32.const 4064
  i64.load $0
  i64.store $0
  i32.const 4072
  local.set $3
  local.get $0
  i32.const 8
  i32.add
  local.set $0
  i32.const 0
  local.set $5
  local.get $5
  i32.const 2
  i32.ge_s
  if
   local.get $0
   local.get $3
   i32.load16_u $0
   i32.store16 $0
   local.get $3
   i32.const 2
   i32.add
   local.set $3
   local.get $5
   i32.const 2
   i32.sub
   local.set $5
   local.get $0
   i32.const 2
   i32.add
   local.set $0
  end
  local.get $5
  if
   local.get $0
   local.get $3
   i32.load8_u $0
   i32.store8 $0
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $3
  i32.const 44
  i32.add
  local.tee $5
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $5
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 44
  i32.store $0
  local.get $3
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 12
  i32.store $0 offset=4
  local.get $0
  i32.const 16
  i32.store $0 offset=8
  local.get $3
  local.get $2
  i32.store $0 offset=16
  local.get $3
  local.get $2
  i32.store $0 offset=20
  local.get $3
  i32.const 8
  i32.store $0 offset=24
  local.get $3
  i32.const 1
  i32.store $0 offset=28
  i32.const -1
  local.set $0
  block $__inlined_func$~lib/array/Array<f64>#indexOf
   local.get $3
   i32.load $0 offset=28
   local.tee $2
   i32.eqz
   local.get $2
   i32.const 0
   i32.le_s
   i32.or
   br_if $__inlined_func$~lib/array/Array<f64>#indexOf
   local.get $3
   i32.load $0 offset=20
   local.set $3
   loop $while-continue|0310
    local.get $1
    local.get $2
    i32.lt_s
    if
     local.get $3
     local.get $1
     local.tee $0
     i32.const 3
     i32.shl
     i32.add
     f64.load $0
     f64.const nan:0x8000000000000
     f64.eq
     br_if $__inlined_func$~lib/array/Array<f64>#indexOf
     local.get $0
     i32.const 1
     i32.add
     local.set $1
     br $while-continue|0310
    end
   end
   i32.const -1
   local.set $0
  end
  local.get $0
  i32.const -1
  i32.ne
  if
   unreachable
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 44
  i32.add
  local.tee $2
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $2
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 44
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 0
  i32.store $0 offset=4
  local.get $0
  i32.const 16
  i32.store $0 offset=8
  local.get $1
  i32.const 16
  i32.add
  local.tee $2
  i32.const 4096
  i64.load $0
  i64.store $0
  local.get $2
  i32.const 4104
  i64.load $0
  i64.store $0 offset=8
  i32.const 4112
  local.set $1
  local.get $2
  i32.const 16
  i32.add
  local.set $0
  i32.const 0
  local.set $3
  local.get $3
  if
   local.get $0
   local.get $1
   i32.load8_u $0
   i32.store8 $0
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 44
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 44
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 3
  i32.store $0 offset=4
  local.get $0
  i32.const 16
  i32.store $0 offset=8
  local.get $1
  local.get $2
  i32.store $0 offset=16
  local.get $1
  local.get $2
  i32.store $0 offset=20
  local.get $1
  i32.const 16
  i32.store $0 offset=24
  local.get $1
  i32.const 4
  i32.store $0 offset=28
  i32.const -1
  local.set $0
  block $__inlined_func$~lib/array/Array<i32>#lastIndexOf
   local.get $1
   i32.load $0 offset=28
   local.tee $2
   i32.eqz
   br_if $__inlined_func$~lib/array/Array<i32>#lastIndexOf
   local.get $2
   local.get $2
   i32.add
   local.get $2
   i32.const 1
   i32.sub
   local.get $2
   i32.const 0
   i32.lt_s
   select
   local.set $0
   local.get $1
   i32.load $0 offset=20
   local.set $2
   loop $while-continue|0130
    local.get $0
    i32.const 0
    i32.ge_s
    if
     local.get $2
     local.get $0
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 2
     i32.eq
     br_if $__inlined_func$~lib/array/Array<i32>#lastIndexOf
     local.get $0
     i32.const 1
     i32.sub
     local.set $0
     br $while-continue|0130
    end
   end
   i32.const -1
   local.set $0
  end
  local.get $0
  i32.const 3
  i32.ne
  if
   unreachable
  end
  i32.const -1
  local.set $0
  block $__inlined_func$~lib/array/Array<i32>#lastIndexOf135
   local.get $1
   i32.load $0 offset=28
   local.tee $2
   i32.eqz
   br_if $__inlined_func$~lib/array/Array<i32>#lastIndexOf135
   local.get $2
   local.get $2
   i32.add
   local.get $2
   i32.const 1
   i32.sub
   local.get $2
   i32.const 0
   i32.lt_s
   select
   local.set $0
   local.get $1
   i32.load $0 offset=20
   local.set $2
   loop $while-continue|0137
    local.get $0
    i32.const 0
    i32.ge_s
    if
     local.get $2
     local.get $0
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 7
     i32.eq
     br_if $__inlined_func$~lib/array/Array<i32>#lastIndexOf135
     local.get $0
     i32.const 1
     i32.sub
     local.set $0
     br $while-continue|0137
    end
   end
   i32.const -1
   local.set $0
  end
  local.get $0
  i32.const -1
  i32.ne
  if
   unreachable
  end
  i32.const -1
  local.set $0
  block $__inlined_func$~lib/array/Array<i32>#lastIndexOf138
   local.get $1
   i32.load $0 offset=28
   local.tee $2
   i32.eqz
   br_if $__inlined_func$~lib/array/Array<i32>#lastIndexOf138
   i32.const 3
   local.get $2
   i32.const 1
   i32.sub
   local.get $2
   i32.const 3
   i32.gt_s
   select
   local.set $0
   local.get $1
   i32.load $0 offset=20
   local.set $2
   loop $while-continue|0312
    local.get $0
    i32.const 0
    i32.ge_s
    if
     local.get $2
     local.get $0
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 2
     i32.eq
     br_if $__inlined_func$~lib/array/Array<i32>#lastIndexOf138
     local.get $0
     i32.const 1
     i32.sub
     local.set $0
     br $while-continue|0312
    end
   end
   i32.const -1
   local.set $0
  end
  local.get $0
  i32.const 3
  i32.ne
  if
   unreachable
  end
  i32.const -1
  local.set $0
  block $__inlined_func$~lib/array/Array<i32>#lastIndexOf313
   local.get $1
   i32.load $0 offset=28
   local.tee $2
   i32.eqz
   br_if $__inlined_func$~lib/array/Array<i32>#lastIndexOf313
   i32.const 2
   local.get $2
   i32.const 1
   i32.sub
   local.get $2
   i32.const 2
   i32.gt_s
   select
   local.set $0
   local.get $1
   i32.load $0 offset=20
   local.set $2
   loop $while-continue|0315
    local.get $0
    i32.const 0
    i32.ge_s
    if
     local.get $2
     local.get $0
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 2
     i32.eq
     br_if $__inlined_func$~lib/array/Array<i32>#lastIndexOf313
     local.get $0
     i32.const 1
     i32.sub
     local.set $0
     br $while-continue|0315
    end
   end
   i32.const -1
   local.set $0
  end
  local.get $0
  if
   unreachable
  end
  i32.const -1
  local.set $0
  block $__inlined_func$~lib/array/Array<i32>#lastIndexOf316
   local.get $1
   i32.load $0 offset=28
   local.tee $2
   i32.eqz
   br_if $__inlined_func$~lib/array/Array<i32>#lastIndexOf316
   local.get $2
   i32.const 2
   i32.sub
   local.set $0
   local.get $1
   i32.load $0 offset=20
   local.set $2
   loop $while-continue|0318
    local.get $0
    i32.const 0
    i32.ge_s
    if
     local.get $2
     local.get $0
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 2
     i32.eq
     br_if $__inlined_func$~lib/array/Array<i32>#lastIndexOf316
     local.get $0
     i32.const 1
     i32.sub
     local.set $0
     br $while-continue|0318
    end
   end
   i32.const -1
   local.set $0
  end
  local.get $0
  if
   unreachable
  end
  i32.const -1
  local.set $0
  block $__inlined_func$~lib/array/Array<i32>#lastIndexOf319
   local.get $1
   i32.load $0 offset=28
   local.tee $2
   i32.eqz
   br_if $__inlined_func$~lib/array/Array<i32>#lastIndexOf319
   local.get $2
   i32.const 1
   i32.sub
   local.set $0
   local.get $1
   i32.load $0 offset=20
   local.set $1
   loop $while-continue|0321
    local.get $0
    i32.const 0
    i32.ge_s
    if
     local.get $1
     local.get $0
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 2
     i32.eq
     br_if $__inlined_func$~lib/array/Array<i32>#lastIndexOf319
     local.get $0
     i32.const 1
     i32.sub
     local.set $0
     br $while-continue|0321
    end
   end
   i32.const -1
   local.set $0
  end
  local.get $0
  i32.const 3
  i32.ne
  if
   unreachable
  end
  i32.const 0
  local.set $1
  i32.const -1
  local.set $0
  block $__inlined_func$~lib/array/Array<i32>#indexOf139
   global.get $std/array/arr
   local.tee $2
   i32.load $0 offset=12
   local.tee $3
   i32.eqz
   local.get $3
   i32.const 0
   i32.le_s
   i32.or
   br_if $__inlined_func$~lib/array/Array<i32>#indexOf139
   local.get $2
   i32.load $0 offset=4
   local.set $2
   loop $while-continue|0141
    local.get $1
    local.get $3
    i32.lt_s
    if
     local.get $2
     local.get $1
     local.tee $0
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 44
     i32.eq
     br_if $__inlined_func$~lib/array/Array<i32>#indexOf139
     local.get $0
     i32.const 1
     i32.add
     local.set $1
     br $while-continue|0141
    end
   end
   i32.const -1
   local.set $0
  end
  local.get $0
  i32.const 0
  i32.lt_s
  if
   unreachable
  end
  i32.const 0
  local.set $1
  i32.const -1
  local.set $0
  block $__inlined_func$~lib/array/Array<i32>#indexOf143
   global.get $std/array/arr
   local.tee $2
   i32.load $0 offset=12
   local.tee $3
   i32.eqz
   local.get $3
   i32.const 0
   i32.le_s
   i32.or
   br_if $__inlined_func$~lib/array/Array<i32>#indexOf143
   local.get $2
   i32.load $0 offset=4
   local.set $2
   loop $while-continue|0145
    local.get $1
    local.get $3
    i32.lt_s
    if
     local.get $2
     local.get $1
     local.tee $0
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 42
     i32.eq
     br_if $__inlined_func$~lib/array/Array<i32>#indexOf143
     local.get $0
     i32.const 1
     i32.add
     local.set $1
     br $while-continue|0145
    end
   end
   i32.const -1
   local.set $0
  end
  local.get $0
  i32.const 0
  i32.lt_s
  if
   unreachable
  end
  i32.const 0
  local.set $1
  i32.const -1
  local.set $0
  block $__inlined_func$~lib/array/Array<i32>#indexOf147
   global.get $std/array/arr
   local.tee $2
   i32.load $0 offset=12
   local.tee $3
   i32.eqz
   local.get $3
   i32.const 0
   i32.le_s
   i32.or
   br_if $__inlined_func$~lib/array/Array<i32>#indexOf147
   local.get $2
   i32.load $0 offset=4
   local.set $2
   loop $while-continue|0149
    local.get $1
    local.get $3
    i32.lt_s
    if
     local.get $2
     local.get $1
     local.tee $0
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 45
     i32.eq
     br_if $__inlined_func$~lib/array/Array<i32>#indexOf147
     local.get $0
     i32.const 1
     i32.add
     local.set $1
     br $while-continue|0149
    end
   end
   i32.const -1
   local.set $0
  end
  local.get $0
  i32.const 0
  i32.ge_s
  if
   unreachable
  end
  i32.const 100
  local.set $1
  i32.const -1
  local.set $0
  block $__inlined_func$~lib/array/Array<i32>#indexOf151
   global.get $std/array/arr
   local.tee $2
   i32.load $0 offset=12
   local.tee $3
   i32.eqz
   local.get $3
   i32.const 100
   i32.le_s
   i32.or
   br_if $__inlined_func$~lib/array/Array<i32>#indexOf151
   local.get $2
   i32.load $0 offset=4
   local.set $2
   loop $while-continue|0153
    local.get $1
    local.get $3
    i32.lt_s
    if
     local.get $2
     local.get $1
     local.tee $0
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 43
     i32.eq
     br_if $__inlined_func$~lib/array/Array<i32>#indexOf151
     local.get $0
     i32.const 1
     i32.add
     local.set $1
     br $while-continue|0153
    end
   end
   i32.const -1
   local.set $0
  end
  local.get $0
  i32.const 0
  i32.ge_s
  if
   unreachable
  end
  i32.const -1
  local.set $1
  block $__inlined_func$~lib/array/Array<i32>#indexOf155
   global.get $std/array/arr
   local.tee $0
   i32.load $0 offset=12
   local.tee $2
   i32.eqz
   local.get $2
   i32.const -100
   i32.le_s
   i32.or
   br_if $__inlined_func$~lib/array/Array<i32>#indexOf155
   local.get $2
   i32.const 100
   i32.sub
   local.tee $1
   i32.const 0
   local.get $1
   i32.const 0
   i32.gt_s
   select
   local.set $1
   local.get $0
   i32.load $0 offset=4
   local.set $0
   loop $while-continue|0157
    local.get $1
    local.get $2
    i32.lt_s
    if
     local.get $0
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 43
     i32.eq
     br_if $__inlined_func$~lib/array/Array<i32>#indexOf155
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $while-continue|0157
    end
   end
   i32.const -1
   local.set $1
  end
  local.get $1
  i32.const 0
  i32.lt_s
  if
   unreachable
  end
  i32.const -1
  local.set $1
  block $__inlined_func$~lib/array/Array<i32>#indexOf159
   global.get $std/array/arr
   local.tee $0
   i32.load $0 offset=12
   local.tee $2
   i32.eqz
   local.get $2
   i32.const -2
   i32.le_s
   i32.or
   br_if $__inlined_func$~lib/array/Array<i32>#indexOf159
   local.get $2
   i32.const 2
   i32.sub
   local.tee $1
   i32.const 0
   local.get $1
   i32.const 0
   i32.gt_s
   select
   local.set $1
   local.get $0
   i32.load $0 offset=4
   local.set $0
   loop $while-continue|0161
    local.get $1
    local.get $2
    i32.lt_s
    if
     local.get $0
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 43
     i32.eq
     br_if $__inlined_func$~lib/array/Array<i32>#indexOf159
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $while-continue|0161
    end
   end
   i32.const -1
   local.set $1
  end
  local.get $1
  i32.const 0
  i32.lt_s
  if
   unreachable
  end
  i32.const -1
  local.set $1
  block $__inlined_func$~lib/array/Array<i32>#indexOf163
   global.get $std/array/arr
   local.tee $0
   i32.load $0 offset=12
   local.tee $2
   i32.eqz
   local.get $2
   i32.const -4
   i32.le_s
   i32.or
   br_if $__inlined_func$~lib/array/Array<i32>#indexOf163
   local.get $2
   i32.const 4
   i32.sub
   local.tee $1
   i32.const 0
   local.get $1
   i32.const 0
   i32.gt_s
   select
   local.set $1
   local.get $0
   i32.load $0 offset=4
   local.set $0
   loop $while-continue|0165
    local.get $1
    local.get $2
    i32.lt_s
    if
     local.get $0
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 43
     i32.eq
     br_if $__inlined_func$~lib/array/Array<i32>#indexOf163
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $while-continue|0165
    end
   end
   i32.const -1
   local.set $1
  end
  local.get $1
  i32.const 0
  i32.lt_s
  if
   unreachable
  end
  i32.const 0
  local.set $1
  i32.const -1
  local.set $0
  block $__inlined_func$~lib/array/Array<i32>#indexOf167
   global.get $std/array/arr
   local.tee $2
   i32.load $0 offset=12
   local.tee $3
   i32.eqz
   local.get $3
   i32.const 0
   i32.le_s
   i32.or
   br_if $__inlined_func$~lib/array/Array<i32>#indexOf167
   local.get $2
   i32.load $0 offset=4
   local.set $2
   loop $while-continue|0169
    local.get $1
    local.get $3
    i32.lt_s
    if
     local.get $2
     local.get $1
     local.tee $0
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 43
     i32.eq
     br_if $__inlined_func$~lib/array/Array<i32>#indexOf167
     local.get $0
     i32.const 1
     i32.add
     local.set $1
     br $while-continue|0169
    end
   end
   i32.const -1
   local.set $0
  end
  local.get $0
  i32.const 0
  i32.lt_s
  if
   unreachable
  end
  i32.const 1
  local.set $1
  i32.const -1
  local.set $0
  block $__inlined_func$~lib/array/Array<i32>#indexOf171
   global.get $std/array/arr
   local.tee $2
   i32.load $0 offset=12
   local.tee $3
   i32.eqz
   local.get $3
   i32.const 1
   i32.le_s
   i32.or
   br_if $__inlined_func$~lib/array/Array<i32>#indexOf171
   local.get $2
   i32.load $0 offset=4
   local.set $2
   loop $while-continue|0173
    local.get $1
    local.get $3
    i32.lt_s
    if
     local.get $2
     local.get $1
     local.tee $0
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 43
     i32.eq
     br_if $__inlined_func$~lib/array/Array<i32>#indexOf171
     local.get $0
     i32.const 1
     i32.add
     local.set $1
     br $while-continue|0173
    end
   end
   i32.const -1
   local.set $0
  end
  local.get $0
  i32.const 0
  i32.lt_s
  if
   unreachable
  end
  i32.const 2
  local.set $1
  i32.const -1
  local.set $0
  block $__inlined_func$~lib/array/Array<i32>#indexOf175
   global.get $std/array/arr
   local.tee $2
   i32.load $0 offset=12
   local.tee $3
   i32.eqz
   local.get $3
   i32.const 2
   i32.le_s
   i32.or
   br_if $__inlined_func$~lib/array/Array<i32>#indexOf175
   local.get $2
   i32.load $0 offset=4
   local.set $2
   loop $while-continue|0177
    local.get $1
    local.get $3
    i32.lt_s
    if
     local.get $2
     local.get $1
     local.tee $0
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 43
     i32.eq
     br_if $__inlined_func$~lib/array/Array<i32>#indexOf175
     local.get $0
     i32.const 1
     i32.add
     local.set $1
     br $while-continue|0177
    end
   end
   i32.const -1
   local.set $0
  end
  local.get $0
  i32.const 0
  i32.lt_s
  if
   unreachable
  end
  block $__inlined_func$~lib/array/Array<f32>#includes (result i32)
   i32.const 0
   local.set $1
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $2
   i32.const 28
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 28
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 4
   i32.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $2
   local.tee $0
   i32.const 4144
   i32.load $0
   i32.store $0
   i32.const 4148
   local.set $3
   local.get $0
   i32.const 4
   i32.add
   local.set $0
   i32.const 0
   local.set $5
   local.get $5
   if
    local.get $0
    local.get $3
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $3
   i32.const 44
   i32.add
   local.tee $5
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $5
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $3
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 8
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $3
   local.get $2
   i32.store $0 offset=16
   local.get $3
   local.get $2
   i32.store $0 offset=20
   local.get $3
   i32.const 4
   i32.store $0 offset=24
   local.get $3
   i32.const 1
   i32.store $0 offset=28
   i32.const 0
   local.get $3
   i32.load $0 offset=28
   local.tee $0
   i32.eqz
   local.get $0
   i32.const 0
   i32.le_s
   i32.or
   br_if $__inlined_func$~lib/array/Array<f32>#includes
   drop
   local.get $3
   i32.load $0 offset=20
   local.set $2
   loop $while-continue|0323
    local.get $0
    local.get $1
    i32.gt_s
    if
     i32.const 1
     local.get $2
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     f32.load $0
     local.tee $8
     local.get $8
     f32.ne
     br_if $__inlined_func$~lib/array/Array<f32>#includes
     drop
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $while-continue|0323
    end
   end
   i32.const 0
  end
  i32.eqz
  if
   unreachable
  end
  block $__inlined_func$~lib/array/Array<f64>#includes (result i32)
   i32.const 0
   local.set $1
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $2
   i32.const 28
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 28
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 8
   i32.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $2
   local.tee $0
   i32.const 4176
   i64.load $0
   i64.store $0
   i32.const 4184
   local.set $3
   local.get $0
   i32.const 8
   i32.add
   local.set $0
   i32.const 0
   local.set $5
   local.get $5
   i32.const 2
   i32.ge_s
   if
    local.get $0
    local.get $3
    i32.load16_u $0
    i32.store16 $0
    local.get $3
    i32.const 2
    i32.add
    local.set $3
    local.get $5
    i32.const 2
    i32.sub
    local.set $5
    local.get $0
    i32.const 2
    i32.add
    local.set $0
   end
   local.get $5
   if
    local.get $0
    local.get $3
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $3
   i32.const 44
   i32.add
   local.tee $5
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $5
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $3
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 12
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $3
   local.get $2
   i32.store $0 offset=16
   local.get $3
   local.get $2
   i32.store $0 offset=20
   local.get $3
   i32.const 8
   i32.store $0 offset=24
   local.get $3
   i32.const 1
   i32.store $0 offset=28
   i32.const 0
   local.get $3
   i32.load $0 offset=28
   local.tee $0
   i32.eqz
   local.get $0
   i32.const 0
   i32.le_s
   i32.or
   br_if $__inlined_func$~lib/array/Array<f64>#includes
   drop
   local.get $3
   i32.load $0 offset=20
   local.set $2
   loop $while-continue|0325
    local.get $0
    local.get $1
    i32.gt_s
    if
     i32.const 1
     local.get $2
     local.get $1
     i32.const 3
     i32.shl
     i32.add
     f64.load $0
     local.tee $9
     local.get $9
     f64.ne
     br_if $__inlined_func$~lib/array/Array<f64>#includes
     drop
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $while-continue|0325
    end
   end
   i32.const 0
  end
  i32.eqz
  if
   unreachable
  end
  i32.const 1
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  local.tee $1
  local.get $1
  i32.const 1
  i32.gt_s
  select
  local.set $2
  i32.const 1
  local.get $1
  local.get $2
  i32.sub
  local.tee $3
  local.get $3
  i32.const 1
  i32.gt_s
  select
  local.tee $3
  i32.const 0
  local.get $3
  i32.const 0
  i32.gt_s
  select
  local.tee $3
  i32.const 2
  i32.shl
  local.set $5
  local.get $5
  i32.const 16
  i32.add
  local.tee $10
  i32.const 1073741820
  i32.gt_u
  if
   unreachable
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $11
  i32.const 4
  i32.add
  local.tee $12
  local.get $10
  i32.const 19
  i32.add
  i32.const -16
  i32.and
  i32.const 4
  i32.sub
  local.tee $10
  i32.add
  local.tee $13
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $13
  global.set $~lib/rt/stub/offset
  local.get $11
  local.get $10
  i32.store $0
  local.get $12
  i32.const 4
  i32.sub
  local.tee $10
  i32.const 0
  i32.store $0 offset=4
  local.get $10
  local.get $5
  i32.store $0 offset=8
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $10
  i32.const 4
  i32.add
  local.tee $11
  i32.const 44
  i32.add
  local.tee $13
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $13
  global.set $~lib/rt/stub/offset
  local.get $10
  i32.const 44
  i32.store $0
  local.get $11
  i32.const 4
  i32.sub
  local.tee $10
  i32.const 3
  i32.store $0 offset=4
  local.get $10
  i32.const 16
  i32.store $0 offset=8
  local.get $11
  i32.const 16
  i32.add
  local.get $12
  i32.const 16
  i32.add
  local.tee $10
  i32.store $0
  local.get $11
  local.get $10
  i32.store $0 offset=20
  local.get $11
  local.get $5
  i32.store $0 offset=24
  local.get $11
  local.get $3
  i32.store $0 offset=28
  local.get $11
  i32.load $0 offset=20
  local.get $0
  i32.load $0 offset=4
  local.tee $5
  local.get $2
  i32.const 2
  i32.shl
  i32.add
  local.tee $10
  local.get $3
  i32.const 2
  i32.shl
  memory.copy $0 $0
  local.get $2
  local.get $3
  i32.add
  local.tee $2
  local.get $1
  i32.ne
  if
   local.get $10
   local.get $5
   local.get $2
   i32.const 2
   i32.shl
   i32.add
   local.get $1
   local.get $2
   i32.sub
   i32.const 2
   i32.shl
   memory.copy $0 $0
  end
  local.get $0
  local.get $1
  local.get $3
  i32.sub
  i32.store $0 offset=12
  global.get $std/array/arr
  i32.load $0 offset=12
  i32.const 4
  i32.ne
  if
   unreachable
  end
  global.get $std/array/arr
  i32.load $0
  i32.const 20
  i32.sub
  i32.load $0 offset=8
  i32.const 2
  i32.shr_s
  i32.const 8
  i32.ne
  if
   unreachable
  end
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  i32.eqz
  if
   unreachable
  end
  local.get $0
  i32.load $0 offset=4
  i32.load $0
  i32.const 44
  i32.ne
  if
   unreachable
  end
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  i32.const 1
  i32.le_u
  if
   unreachable
  end
  local.get $0
  i32.load $0 offset=4
  i32.load $0 offset=4
  i32.const 42
  i32.ne
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.19 (result i32)
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $1
   i32.const 44
   i32.add
   local.tee $2
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $2
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 20
   i32.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $2
   i32.const 4208
   i64.load $0
   i64.store $0
   local.get $2
   i32.const 4216
   i64.load $0
   i64.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $0
   i32.const 4224
   i32.load $0
   i32.store $0
   i32.const 4228
   local.set $1
   local.get $0
   i32.const 4
   i32.add
   local.set $0
   i32.const 0
   local.set $3
   local.get $3
   if
    local.get $0
    local.get $1
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $1
   i32.const 44
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 3
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $1
   local.get $2
   i32.store $0
   local.get $1
   local.get $2
   i32.store $0 offset=4
   local.get $1
   i32.const 20
   i32.store $0 offset=8
   local.get $1
   i32.const 5
   i32.store $0 offset=12
   local.get $1
   i32.load $0 offset=12
   local.tee $0
   i32.const 0
   local.get $0
   i32.const 0
   i32.le_s
   select
   local.set $2
   local.get $0
   local.get $2
   i32.sub
   local.tee $3
   i32.const 0
   local.get $3
   i32.const 0
   i32.gt_s
   select
   local.tee $3
   i32.const 2
   i32.shl
   local.tee $5
   i32.const 16
   i32.add
   local.tee $10
   i32.const 1073741820
   i32.gt_u
   if
    unreachable
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $11
   i32.const 4
   i32.add
   local.tee $12
   local.get $10
   i32.const 19
   i32.add
   i32.const -16
   i32.and
   i32.const 4
   i32.sub
   local.tee $10
   i32.add
   local.tee $13
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $13
   global.set $~lib/rt/stub/offset
   local.get $11
   local.get $10
   i32.store $0
   local.get $12
   i32.const 4
   i32.sub
   local.tee $10
   i32.const 0
   i32.store $0 offset=4
   local.get $10
   local.get $5
   i32.store $0 offset=8
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $10
   i32.const 4
   i32.add
   local.tee $11
   i32.const 44
   i32.add
   local.tee $13
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $13
   global.set $~lib/rt/stub/offset
   local.get $10
   i32.const 44
   i32.store $0
   local.get $11
   i32.const 4
   i32.sub
   local.tee $10
   i32.const 3
   i32.store $0 offset=4
   local.get $10
   i32.const 16
   i32.store $0 offset=8
   local.get $11
   i32.const 16
   i32.add
   local.tee $10
   local.get $12
   i32.const 16
   i32.add
   local.tee $11
   i32.store $0
   local.get $10
   local.get $11
   i32.store $0 offset=4
   local.get $10
   local.get $5
   i32.store $0 offset=8
   local.get $10
   local.get $3
   i32.store $0 offset=12
   local.get $10
   i32.load $0 offset=4
   local.get $1
   i32.load $0 offset=4
   local.tee $5
   local.get $2
   i32.const 2
   i32.shl
   i32.add
   local.tee $11
   local.get $3
   i32.const 2
   i32.shl
   memory.copy $0 $0
   local.get $2
   local.get $3
   i32.add
   local.tee $2
   local.get $0
   i32.ne
   if
    local.get $11
    local.get $5
    local.get $2
    i32.const 2
    i32.shl
    i32.add
    local.get $0
    local.get $2
    i32.sub
    i32.const 2
    i32.shl
    memory.copy $0 $0
   end
   local.get $1
   local.get $0
   local.get $3
   i32.sub
   i32.store $0 offset=12
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $2
   i32.const 44
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 20
   i32.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $2
   i32.const 4256
   i64.load $0
   i64.store $0
   local.get $2
   i32.const 4264
   i64.load $0
   i64.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $0
   i32.const 4272
   i32.load $0
   i32.store $0
   i32.const 4276
   local.set $3
   local.get $0
   i32.const 4
   i32.add
   local.set $0
   i32.const 0
   local.set $5
   local.get $5
   if
    local.get $0
    local.get $3
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $3
   i32.const 44
   i32.add
   local.tee $5
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $5
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $3
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 3
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $3
   i32.const 16
   i32.add
   local.tee $3
   local.get $2
   i32.store $0
   local.get $3
   local.get $2
   i32.store $0 offset=4
   local.get $3
   i32.const 20
   i32.store $0 offset=8
   local.get $3
   i32.const 5
   i32.store $0 offset=12
   i32.const 0
   local.get $10
   i32.load $0 offset=12
   local.tee $2
   local.get $3
   i32.load $0 offset=12
   i32.ne
   br_if $std/array/isArraysEqual<i32>|inlined.19
   drop
   i32.const 1
   local.get $3
   local.get $10
   i32.eq
   br_if $std/array/isArraysEqual<i32>|inlined.19
   drop
   i32.const 0
   local.set $0
   loop $for-loop|44
    local.get $0
    local.get $2
    i32.lt_s
    if
     local.get $0
     local.get $10
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $0
     local.get $3
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $0
     i32.const 2
     i32.shl
     local.tee $5
     local.get $10
     i32.load $0 offset=4
     i32.add
     i32.load $0
     local.get $3
     i32.load $0 offset=4
     local.get $5
     i32.add
     i32.load $0
     i32.ne
     br_if $std/array/isArraysEqual<i32>|inlined.19
     drop
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|44
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.20 (result i32)
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $2
   i32.const 28
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 28
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 0
   i32.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.set $0
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $2
   i32.const 4
   i32.add
   local.tee $3
   i32.const 44
   i32.add
   local.tee $5
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $5
   global.set $~lib/rt/stub/offset
   local.get $2
   i32.const 44
   i32.store $0
   local.get $3
   i32.const 4
   i32.sub
   local.tee $2
   i32.const 3
   i32.store $0 offset=4
   local.get $2
   i32.const 16
   i32.store $0 offset=8
   local.get $3
   i32.const 16
   i32.add
   local.tee $2
   local.get $0
   i32.store $0
   local.get $2
   local.get $0
   i32.store $0 offset=4
   local.get $2
   i32.const 0
   i32.store $0 offset=8
   local.get $2
   i32.const 0
   i32.store $0 offset=12
   i32.const 0
   local.get $1
   i32.load $0 offset=12
   local.tee $3
   local.get $2
   i32.load $0 offset=12
   i32.ne
   br_if $std/array/isArraysEqual<i32>|inlined.20
   drop
   i32.const 1
   local.get $1
   local.tee $0
   local.get $2
   i32.eq
   br_if $std/array/isArraysEqual<i32>|inlined.20
   drop
   i32.const 0
   local.set $1
   loop $for-loop|45
    local.get $1
    local.get $3
    i32.lt_s
    if
     local.get $1
     local.get $0
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $1
     local.get $2
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $1
     i32.const 2
     i32.shl
     local.tee $5
     local.get $0
     i32.load $0 offset=4
     i32.add
     i32.load $0
     local.get $2
     i32.load $0 offset=4
     local.get $5
     i32.add
     i32.load $0
     i32.ne
     br_if $std/array/isArraysEqual<i32>|inlined.20
     drop
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|45
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.21 (result i32)
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $1
   i32.const 44
   i32.add
   local.tee $2
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $2
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 20
   i32.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $2
   i32.const 4336
   i64.load $0
   i64.store $0
   local.get $2
   i32.const 4344
   i64.load $0
   i64.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $0
   i32.const 4352
   i32.load $0
   i32.store $0
   i32.const 4356
   local.set $1
   local.get $0
   i32.const 4
   i32.add
   local.set $0
   i32.const 0
   local.set $3
   local.get $3
   if
    local.get $0
    local.get $1
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $1
   i32.const 44
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 3
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $1
   local.get $2
   i32.store $0
   local.get $1
   local.get $2
   i32.store $0 offset=4
   local.get $1
   i32.const 20
   i32.store $0 offset=8
   local.get $1
   i32.const 5
   i32.store $0 offset=12
   local.get $1
   i32.load $0 offset=12
   local.tee $0
   i32.const 0
   local.get $0
   i32.const 0
   i32.le_s
   select
   local.set $2
   local.get $0
   local.get $2
   i32.sub
   local.tee $3
   i32.const 0
   local.get $3
   i32.const 0
   i32.le_s
   select
   local.tee $3
   i32.const 0
   local.get $3
   i32.const 0
   i32.gt_s
   select
   local.tee $3
   i32.const 2
   i32.shl
   local.tee $5
   i32.const 16
   i32.add
   local.tee $10
   i32.const 1073741820
   i32.gt_u
   if
    unreachable
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $11
   i32.const 4
   i32.add
   local.tee $12
   local.get $10
   i32.const 19
   i32.add
   i32.const -16
   i32.and
   i32.const 4
   i32.sub
   local.tee $10
   i32.add
   local.tee $13
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $13
   global.set $~lib/rt/stub/offset
   local.get $11
   local.get $10
   i32.store $0
   local.get $12
   i32.const 4
   i32.sub
   local.tee $10
   i32.const 0
   i32.store $0 offset=4
   local.get $10
   local.get $5
   i32.store $0 offset=8
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $10
   i32.const 4
   i32.add
   local.tee $11
   i32.const 44
   i32.add
   local.tee $13
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $13
   global.set $~lib/rt/stub/offset
   local.get $10
   i32.const 44
   i32.store $0
   local.get $11
   i32.const 4
   i32.sub
   local.tee $10
   i32.const 3
   i32.store $0 offset=4
   local.get $10
   i32.const 16
   i32.store $0 offset=8
   local.get $11
   i32.const 16
   i32.add
   local.tee $10
   local.get $12
   i32.const 16
   i32.add
   local.tee $11
   i32.store $0
   local.get $10
   local.get $11
   i32.store $0 offset=4
   local.get $10
   local.get $5
   i32.store $0 offset=8
   local.get $10
   local.get $3
   i32.store $0 offset=12
   local.get $10
   i32.load $0 offset=4
   local.get $1
   i32.load $0 offset=4
   local.tee $5
   local.get $2
   i32.const 2
   i32.shl
   i32.add
   local.tee $11
   local.get $3
   i32.const 2
   i32.shl
   memory.copy $0 $0
   local.get $2
   local.get $3
   i32.add
   local.tee $2
   local.get $0
   i32.ne
   if
    local.get $11
    local.get $5
    local.get $2
    i32.const 2
    i32.shl
    i32.add
    local.get $0
    local.get $2
    i32.sub
    i32.const 2
    i32.shl
    memory.copy $0 $0
   end
   local.get $1
   local.get $0
   local.get $3
   i32.sub
   i32.store $0 offset=12
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $2
   i32.const 28
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 28
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 0
   i32.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.set $0
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $2
   i32.const 4
   i32.add
   local.tee $3
   i32.const 44
   i32.add
   local.tee $5
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $5
   global.set $~lib/rt/stub/offset
   local.get $2
   i32.const 44
   i32.store $0
   local.get $3
   i32.const 4
   i32.sub
   local.tee $2
   i32.const 3
   i32.store $0 offset=4
   local.get $2
   i32.const 16
   i32.store $0 offset=8
   local.get $3
   i32.const 16
   i32.add
   local.tee $2
   local.get $0
   i32.store $0
   local.get $2
   local.get $0
   i32.store $0 offset=4
   local.get $2
   i32.const 0
   i32.store $0 offset=8
   local.get $2
   i32.const 0
   i32.store $0 offset=12
   i32.const 0
   local.get $10
   i32.load $0 offset=12
   local.tee $3
   local.get $2
   i32.load $0 offset=12
   i32.ne
   br_if $std/array/isArraysEqual<i32>|inlined.21
   drop
   i32.const 1
   local.get $2
   local.get $10
   i32.eq
   br_if $std/array/isArraysEqual<i32>|inlined.21
   drop
   i32.const 0
   local.set $0
   loop $for-loop|46
    local.get $0
    local.get $3
    i32.lt_s
    if
     local.get $0
     local.get $10
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $0
     local.get $2
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $0
     i32.const 2
     i32.shl
     local.tee $5
     local.get $10
     i32.load $0 offset=4
     i32.add
     i32.load $0
     local.get $2
     i32.load $0 offset=4
     local.get $5
     i32.add
     i32.load $0
     i32.ne
     br_if $std/array/isArraysEqual<i32>|inlined.21
     drop
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|46
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.22 (result i32)
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $2
   i32.const 44
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 20
   i32.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $0
   i32.const 4416
   i64.load $0
   i64.store $0
   local.get $0
   i32.const 4424
   i64.load $0
   i64.store $0 offset=8
   local.get $0
   i32.const 16
   i32.add
   i32.const 4432
   i32.load $0
   i32.store $0
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $2
   i32.const 4
   i32.add
   local.tee $3
   i32.const 44
   i32.add
   local.tee $5
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $5
   global.set $~lib/rt/stub/offset
   local.get $2
   i32.const 44
   i32.store $0
   local.get $3
   i32.const 4
   i32.sub
   local.tee $2
   i32.const 3
   i32.store $0 offset=4
   local.get $2
   i32.const 16
   i32.store $0 offset=8
   local.get $3
   i32.const 16
   i32.add
   local.tee $2
   local.get $0
   i32.store $0
   local.get $2
   local.get $0
   i32.store $0 offset=4
   local.get $2
   i32.const 20
   i32.store $0 offset=8
   local.get $2
   i32.const 5
   i32.store $0 offset=12
   i32.const 0
   local.get $1
   i32.load $0 offset=12
   local.tee $3
   local.get $2
   i32.load $0 offset=12
   i32.ne
   br_if $std/array/isArraysEqual<i32>|inlined.22
   drop
   i32.const 1
   local.get $1
   local.tee $0
   local.get $2
   i32.eq
   br_if $std/array/isArraysEqual<i32>|inlined.22
   drop
   i32.const 0
   local.set $1
   loop $for-loop|47
    local.get $1
    local.get $3
    i32.lt_s
    if
     local.get $1
     local.get $0
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $1
     local.get $2
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $1
     i32.const 2
     i32.shl
     local.tee $5
     local.get $0
     i32.load $0 offset=4
     i32.add
     i32.load $0
     local.get $2
     i32.load $0 offset=4
     local.get $5
     i32.add
     i32.load $0
     i32.ne
     br_if $std/array/isArraysEqual<i32>|inlined.22
     drop
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|47
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.23 (result i32)
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $1
   i32.const 44
   i32.add
   local.tee $2
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $2
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 20
   i32.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $2
   i32.const 4464
   i64.load $0
   i64.store $0
   local.get $2
   i32.const 4472
   i64.load $0
   i64.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $0
   i32.const 4480
   i32.load $0
   i32.store $0
   i32.const 4484
   local.set $1
   local.get $0
   i32.const 4
   i32.add
   local.set $0
   i32.const 0
   local.set $3
   local.get $3
   if
    local.get $0
    local.get $1
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $1
   i32.const 44
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 3
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $1
   local.get $2
   i32.store $0
   local.get $1
   local.get $2
   i32.store $0 offset=4
   local.get $1
   i32.const 20
   i32.store $0 offset=8
   local.get $1
   i32.const 5
   i32.store $0 offset=12
   i32.const 2
   local.get $1
   i32.load $0 offset=12
   local.tee $0
   local.get $0
   i32.const 2
   i32.gt_s
   select
   local.set $2
   local.get $0
   local.get $2
   i32.sub
   local.tee $3
   i32.const 0
   local.get $3
   i32.const 0
   i32.gt_s
   select
   local.tee $3
   i32.const 2
   i32.shl
   local.tee $5
   i32.const 16
   i32.add
   local.tee $10
   i32.const 1073741820
   i32.gt_u
   if
    unreachable
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $11
   i32.const 4
   i32.add
   local.tee $12
   local.get $10
   i32.const 19
   i32.add
   i32.const -16
   i32.and
   i32.const 4
   i32.sub
   local.tee $10
   i32.add
   local.tee $13
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $13
   global.set $~lib/rt/stub/offset
   local.get $11
   local.get $10
   i32.store $0
   local.get $12
   i32.const 4
   i32.sub
   local.tee $10
   i32.const 0
   i32.store $0 offset=4
   local.get $10
   local.get $5
   i32.store $0 offset=8
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $10
   i32.const 4
   i32.add
   local.tee $11
   i32.const 44
   i32.add
   local.tee $13
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $13
   global.set $~lib/rt/stub/offset
   local.get $10
   i32.const 44
   i32.store $0
   local.get $11
   i32.const 4
   i32.sub
   local.tee $10
   i32.const 3
   i32.store $0 offset=4
   local.get $10
   i32.const 16
   i32.store $0 offset=8
   local.get $11
   i32.const 16
   i32.add
   local.tee $10
   local.get $12
   i32.const 16
   i32.add
   local.tee $11
   i32.store $0
   local.get $10
   local.get $11
   i32.store $0 offset=4
   local.get $10
   local.get $5
   i32.store $0 offset=8
   local.get $10
   local.get $3
   i32.store $0 offset=12
   local.get $10
   i32.load $0 offset=4
   local.get $1
   i32.load $0 offset=4
   local.tee $5
   local.get $2
   i32.const 2
   i32.shl
   i32.add
   local.tee $11
   local.get $3
   i32.const 2
   i32.shl
   memory.copy $0 $0
   local.get $2
   local.get $3
   i32.add
   local.tee $2
   local.get $0
   i32.ne
   if
    local.get $11
    local.get $5
    local.get $2
    i32.const 2
    i32.shl
    i32.add
    local.get $0
    local.get $2
    i32.sub
    i32.const 2
    i32.shl
    memory.copy $0 $0
   end
   local.get $1
   local.get $0
   local.get $3
   i32.sub
   i32.store $0 offset=12
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $2
   i32.const 28
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 28
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 12
   i32.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $2
   local.tee $0
   i32.const 4512
   i64.load $0
   i64.store $0
   i32.const 4520
   local.set $3
   local.get $0
   i32.const 8
   i32.add
   local.set $0
   i32.const 4
   local.tee $5
   i32.const 4
   i32.ge_u
   if
    local.get $0
    i32.const 4520
    i32.load $0
    i32.store $0
    i32.const 4524
    local.set $3
    i32.const 0
    local.set $5
    local.get $0
    i32.const 4
    i32.add
    local.set $0
   end
   local.get $5
   i32.const 2
   i32.ge_s
   if
    local.get $0
    local.get $3
    i32.load16_u $0
    i32.store16 $0
    local.get $3
    i32.const 2
    i32.add
    local.set $3
    local.get $5
    i32.const 2
    i32.sub
    local.set $5
    local.get $0
    i32.const 2
    i32.add
    local.set $0
   end
   local.get $5
   if
    local.get $0
    local.get $3
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $3
   i32.const 44
   i32.add
   local.tee $5
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $5
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $3
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 3
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $3
   i32.const 16
   i32.add
   local.tee $3
   local.get $2
   i32.store $0
   local.get $3
   local.get $2
   i32.store $0 offset=4
   local.get $3
   i32.const 12
   i32.store $0 offset=8
   local.get $3
   i32.const 3
   i32.store $0 offset=12
   i32.const 0
   local.get $10
   i32.load $0 offset=12
   local.tee $2
   local.get $3
   i32.load $0 offset=12
   i32.ne
   br_if $std/array/isArraysEqual<i32>|inlined.23
   drop
   i32.const 1
   local.get $3
   local.get $10
   i32.eq
   br_if $std/array/isArraysEqual<i32>|inlined.23
   drop
   i32.const 0
   local.set $0
   loop $for-loop|48
    local.get $0
    local.get $2
    i32.lt_s
    if
     local.get $0
     local.get $10
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $0
     local.get $3
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $0
     i32.const 2
     i32.shl
     local.tee $5
     local.get $10
     i32.load $0 offset=4
     i32.add
     i32.load $0
     local.get $3
     i32.load $0 offset=4
     local.get $5
     i32.add
     i32.load $0
     i32.ne
     br_if $std/array/isArraysEqual<i32>|inlined.23
     drop
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|48
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.24 (result i32)
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $2
   i32.const 28
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 28
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 8
   i32.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $2
   local.tee $0
   i32.const 4544
   i64.load $0
   i64.store $0
   i32.const 4552
   local.set $3
   local.get $0
   i32.const 8
   i32.add
   local.set $0
   i32.const 0
   local.set $5
   local.get $5
   i32.const 2
   i32.ge_s
   if
    local.get $0
    local.get $3
    i32.load16_u $0
    i32.store16 $0
    local.get $3
    i32.const 2
    i32.add
    local.set $3
    local.get $5
    i32.const 2
    i32.sub
    local.set $5
    local.get $0
    i32.const 2
    i32.add
    local.set $0
   end
   local.get $5
   if
    local.get $0
    local.get $3
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $3
   i32.const 44
   i32.add
   local.tee $5
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $5
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $3
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 3
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $3
   i32.const 16
   i32.add
   local.tee $3
   local.get $2
   i32.store $0
   local.get $3
   local.get $2
   i32.store $0 offset=4
   local.get $3
   i32.const 8
   i32.store $0 offset=8
   local.get $3
   i32.const 2
   i32.store $0 offset=12
   i32.const 0
   local.get $1
   i32.load $0 offset=12
   local.tee $2
   local.get $3
   i32.load $0 offset=12
   i32.ne
   br_if $std/array/isArraysEqual<i32>|inlined.24
   drop
   i32.const 1
   local.get $1
   local.tee $0
   local.get $3
   i32.eq
   br_if $std/array/isArraysEqual<i32>|inlined.24
   drop
   i32.const 0
   local.set $1
   loop $for-loop|49
    local.get $1
    local.get $2
    i32.lt_s
    if
     local.get $1
     local.get $0
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $1
     local.get $3
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $1
     i32.const 2
     i32.shl
     local.tee $5
     local.get $0
     i32.load $0 offset=4
     i32.add
     i32.load $0
     local.get $3
     i32.load $0 offset=4
     local.get $5
     i32.add
     i32.load $0
     i32.ne
     br_if $std/array/isArraysEqual<i32>|inlined.24
     drop
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|49
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.25 (result i32)
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $1
   i32.const 44
   i32.add
   local.tee $2
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $2
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 20
   i32.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $2
   i32.const 4576
   i64.load $0
   i64.store $0
   local.get $2
   i32.const 4584
   i64.load $0
   i64.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $0
   i32.const 4592
   i32.load $0
   i32.store $0
   i32.const 4596
   local.set $1
   local.get $0
   i32.const 4
   i32.add
   local.set $0
   i32.const 0
   local.set $3
   local.get $3
   if
    local.get $0
    local.get $1
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $1
   i32.const 44
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 3
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $1
   local.get $2
   i32.store $0
   local.get $1
   local.get $2
   i32.store $0 offset=4
   local.get $1
   i32.const 20
   i32.store $0 offset=8
   local.get $1
   i32.const 5
   i32.store $0 offset=12
   i32.const 2
   local.get $1
   i32.load $0 offset=12
   local.tee $0
   local.get $0
   i32.const 2
   i32.gt_s
   select
   local.set $2
   i32.const 2
   local.get $0
   local.get $2
   i32.sub
   local.tee $3
   local.get $3
   i32.const 2
   i32.gt_s
   select
   local.tee $3
   i32.const 0
   local.get $3
   i32.const 0
   i32.gt_s
   select
   local.tee $3
   i32.const 2
   i32.shl
   local.tee $5
   i32.const 16
   i32.add
   local.tee $10
   i32.const 1073741820
   i32.gt_u
   if
    unreachable
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $11
   i32.const 4
   i32.add
   local.tee $12
   local.get $10
   i32.const 19
   i32.add
   i32.const -16
   i32.and
   i32.const 4
   i32.sub
   local.tee $10
   i32.add
   local.tee $13
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $13
   global.set $~lib/rt/stub/offset
   local.get $11
   local.get $10
   i32.store $0
   local.get $12
   i32.const 4
   i32.sub
   local.tee $10
   i32.const 0
   i32.store $0 offset=4
   local.get $10
   local.get $5
   i32.store $0 offset=8
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $10
   i32.const 4
   i32.add
   local.tee $11
   i32.const 44
   i32.add
   local.tee $13
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $13
   global.set $~lib/rt/stub/offset
   local.get $10
   i32.const 44
   i32.store $0
   local.get $11
   i32.const 4
   i32.sub
   local.tee $10
   i32.const 3
   i32.store $0 offset=4
   local.get $10
   i32.const 16
   i32.store $0 offset=8
   local.get $11
   i32.const 16
   i32.add
   local.tee $10
   local.get $12
   i32.const 16
   i32.add
   local.tee $11
   i32.store $0
   local.get $10
   local.get $11
   i32.store $0 offset=4
   local.get $10
   local.get $5
   i32.store $0 offset=8
   local.get $10
   local.get $3
   i32.store $0 offset=12
   local.get $10
   i32.load $0 offset=4
   local.get $1
   i32.load $0 offset=4
   local.tee $5
   local.get $2
   i32.const 2
   i32.shl
   i32.add
   local.tee $11
   local.get $3
   i32.const 2
   i32.shl
   memory.copy $0 $0
   local.get $2
   local.get $3
   i32.add
   local.tee $2
   local.get $0
   i32.ne
   if
    local.get $11
    local.get $5
    local.get $2
    i32.const 2
    i32.shl
    i32.add
    local.get $0
    local.get $2
    i32.sub
    i32.const 2
    i32.shl
    memory.copy $0 $0
   end
   local.get $1
   local.get $0
   local.get $3
   i32.sub
   i32.store $0 offset=12
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $2
   i32.const 28
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 28
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 8
   i32.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $2
   local.tee $0
   i32.const 4624
   i64.load $0
   i64.store $0
   i32.const 4632
   local.set $3
   local.get $0
   i32.const 8
   i32.add
   local.set $0
   i32.const 0
   local.set $5
   local.get $5
   i32.const 2
   i32.ge_s
   if
    local.get $0
    local.get $3
    i32.load16_u $0
    i32.store16 $0
    local.get $3
    i32.const 2
    i32.add
    local.set $3
    local.get $5
    i32.const 2
    i32.sub
    local.set $5
    local.get $0
    i32.const 2
    i32.add
    local.set $0
   end
   local.get $5
   if
    local.get $0
    local.get $3
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $3
   i32.const 44
   i32.add
   local.tee $5
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $5
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $3
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 3
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $3
   i32.const 16
   i32.add
   local.tee $3
   local.get $2
   i32.store $0
   local.get $3
   local.get $2
   i32.store $0 offset=4
   local.get $3
   i32.const 8
   i32.store $0 offset=8
   local.get $3
   i32.const 2
   i32.store $0 offset=12
   i32.const 0
   local.get $10
   i32.load $0 offset=12
   local.tee $2
   local.get $3
   i32.load $0 offset=12
   i32.ne
   br_if $std/array/isArraysEqual<i32>|inlined.25
   drop
   i32.const 1
   local.get $3
   local.get $10
   i32.eq
   br_if $std/array/isArraysEqual<i32>|inlined.25
   drop
   i32.const 0
   local.set $0
   loop $for-loop|50
    local.get $0
    local.get $2
    i32.lt_s
    if
     local.get $0
     local.get $10
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $0
     local.get $3
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $0
     i32.const 2
     i32.shl
     local.tee $5
     local.get $10
     i32.load $0 offset=4
     i32.add
     i32.load $0
     local.get $3
     i32.load $0 offset=4
     local.get $5
     i32.add
     i32.load $0
     i32.ne
     br_if $std/array/isArraysEqual<i32>|inlined.25
     drop
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|50
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.26 (result i32)
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $2
   i32.const 28
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 28
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 12
   i32.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $2
   local.tee $0
   i32.const 4656
   i64.load $0
   i64.store $0
   i32.const 4664
   local.set $3
   local.get $0
   i32.const 8
   i32.add
   local.set $0
   i32.const 4
   local.tee $5
   i32.const 4
   i32.ge_u
   if
    local.get $0
    i32.const 4664
    i32.load $0
    i32.store $0
    i32.const 4668
    local.set $3
    i32.const 0
    local.set $5
    local.get $0
    i32.const 4
    i32.add
    local.set $0
   end
   local.get $5
   i32.const 2
   i32.ge_s
   if
    local.get $0
    local.get $3
    i32.load16_u $0
    i32.store16 $0
    local.get $3
    i32.const 2
    i32.add
    local.set $3
    local.get $5
    i32.const 2
    i32.sub
    local.set $5
    local.get $0
    i32.const 2
    i32.add
    local.set $0
   end
   local.get $5
   if
    local.get $0
    local.get $3
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $3
   i32.const 44
   i32.add
   local.tee $5
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $5
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $3
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 3
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $3
   i32.const 16
   i32.add
   local.tee $3
   local.get $2
   i32.store $0
   local.get $3
   local.get $2
   i32.store $0 offset=4
   local.get $3
   i32.const 12
   i32.store $0 offset=8
   local.get $3
   i32.const 3
   i32.store $0 offset=12
   i32.const 0
   local.get $1
   i32.load $0 offset=12
   local.tee $2
   local.get $3
   i32.load $0 offset=12
   i32.ne
   br_if $std/array/isArraysEqual<i32>|inlined.26
   drop
   i32.const 1
   local.get $1
   local.tee $0
   local.get $3
   i32.eq
   br_if $std/array/isArraysEqual<i32>|inlined.26
   drop
   i32.const 0
   local.set $1
   loop $for-loop|51
    local.get $1
    local.get $2
    i32.lt_s
    if
     local.get $1
     local.get $0
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $1
     local.get $3
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $1
     i32.const 2
     i32.shl
     local.tee $5
     local.get $0
     i32.load $0 offset=4
     i32.add
     i32.load $0
     local.get $3
     i32.load $0 offset=4
     local.get $5
     i32.add
     i32.load $0
     i32.ne
     br_if $std/array/isArraysEqual<i32>|inlined.26
     drop
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|51
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.27 (result i32)
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $1
   i32.const 44
   i32.add
   local.tee $2
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $2
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 20
   i32.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $2
   i32.const 4688
   i64.load $0
   i64.store $0
   local.get $2
   i32.const 4696
   i64.load $0
   i64.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $0
   i32.const 4704
   i32.load $0
   i32.store $0
   i32.const 4708
   local.set $1
   local.get $0
   i32.const 4
   i32.add
   local.set $0
   i32.const 0
   local.set $3
   local.get $3
   if
    local.get $0
    local.get $1
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $1
   i32.const 44
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 3
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $1
   local.get $2
   i32.store $0
   local.get $1
   local.get $2
   i32.store $0 offset=4
   local.get $1
   i32.const 20
   i32.store $0 offset=8
   local.get $1
   i32.const 5
   i32.store $0 offset=12
   local.get $1
   i32.load $0 offset=12
   local.tee $0
   i32.const 0
   local.get $0
   i32.const 0
   i32.le_s
   select
   local.set $2
   i32.const 1
   local.get $0
   local.get $2
   i32.sub
   local.tee $3
   local.get $3
   i32.const 1
   i32.gt_s
   select
   local.tee $3
   i32.const 0
   local.get $3
   i32.const 0
   i32.gt_s
   select
   local.tee $3
   i32.const 2
   i32.shl
   local.tee $5
   i32.const 16
   i32.add
   local.tee $10
   i32.const 1073741820
   i32.gt_u
   if
    unreachable
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $11
   i32.const 4
   i32.add
   local.tee $12
   local.get $10
   i32.const 19
   i32.add
   i32.const -16
   i32.and
   i32.const 4
   i32.sub
   local.tee $10
   i32.add
   local.tee $13
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $13
   global.set $~lib/rt/stub/offset
   local.get $11
   local.get $10
   i32.store $0
   local.get $12
   i32.const 4
   i32.sub
   local.tee $10
   i32.const 0
   i32.store $0 offset=4
   local.get $10
   local.get $5
   i32.store $0 offset=8
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $10
   i32.const 4
   i32.add
   local.tee $11
   i32.const 44
   i32.add
   local.tee $13
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $13
   global.set $~lib/rt/stub/offset
   local.get $10
   i32.const 44
   i32.store $0
   local.get $11
   i32.const 4
   i32.sub
   local.tee $10
   i32.const 3
   i32.store $0 offset=4
   local.get $10
   i32.const 16
   i32.store $0 offset=8
   local.get $11
   i32.const 16
   i32.add
   local.tee $10
   local.get $12
   i32.const 16
   i32.add
   local.tee $11
   i32.store $0
   local.get $10
   local.get $11
   i32.store $0 offset=4
   local.get $10
   local.get $5
   i32.store $0 offset=8
   local.get $10
   local.get $3
   i32.store $0 offset=12
   local.get $10
   i32.load $0 offset=4
   local.get $1
   i32.load $0 offset=4
   local.tee $5
   local.get $2
   i32.const 2
   i32.shl
   i32.add
   local.tee $11
   local.get $3
   i32.const 2
   i32.shl
   memory.copy $0 $0
   local.get $2
   local.get $3
   i32.add
   local.tee $2
   local.get $0
   i32.ne
   if
    local.get $11
    local.get $5
    local.get $2
    i32.const 2
    i32.shl
    i32.add
    local.get $0
    local.get $2
    i32.sub
    i32.const 2
    i32.shl
    memory.copy $0 $0
   end
   local.get $1
   local.get $0
   local.get $3
   i32.sub
   i32.store $0 offset=12
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $2
   i32.const 28
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 28
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 4
   i32.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $2
   local.tee $0
   i32.const 4736
   i32.load $0
   i32.store $0
   i32.const 4740
   local.set $3
   local.get $0
   i32.const 4
   i32.add
   local.set $0
   i32.const 0
   local.set $5
   local.get $5
   if
    local.get $0
    local.get $3
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $3
   i32.const 44
   i32.add
   local.tee $5
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $5
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $3
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 3
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $3
   i32.const 16
   i32.add
   local.tee $3
   local.get $2
   i32.store $0
   local.get $3
   local.get $2
   i32.store $0 offset=4
   local.get $3
   i32.const 4
   i32.store $0 offset=8
   local.get $3
   i32.const 1
   i32.store $0 offset=12
   i32.const 0
   local.get $10
   i32.load $0 offset=12
   local.tee $2
   local.get $3
   i32.load $0 offset=12
   i32.ne
   br_if $std/array/isArraysEqual<i32>|inlined.27
   drop
   i32.const 1
   local.get $3
   local.get $10
   i32.eq
   br_if $std/array/isArraysEqual<i32>|inlined.27
   drop
   i32.const 0
   local.set $0
   loop $for-loop|52
    local.get $0
    local.get $2
    i32.lt_s
    if
     local.get $0
     local.get $10
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $0
     local.get $3
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $0
     i32.const 2
     i32.shl
     local.tee $5
     local.get $10
     i32.load $0 offset=4
     i32.add
     i32.load $0
     local.get $3
     i32.load $0 offset=4
     local.get $5
     i32.add
     i32.load $0
     i32.ne
     br_if $std/array/isArraysEqual<i32>|inlined.27
     drop
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|52
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.28 (result i32)
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $2
   i32.const 44
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $2
   i32.const 4768
   i64.load $0
   i64.store $0
   local.get $2
   i32.const 4776
   i64.load $0
   i64.store $0 offset=8
   i32.const 4784
   local.set $3
   local.get $2
   i32.const 16
   i32.add
   local.set $0
   i32.const 0
   local.set $5
   local.get $5
   if
    local.get $0
    local.get $3
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $3
   i32.const 44
   i32.add
   local.tee $5
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $5
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $3
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 3
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $3
   i32.const 16
   i32.add
   local.tee $3
   local.get $2
   i32.store $0
   local.get $3
   local.get $2
   i32.store $0 offset=4
   local.get $3
   i32.const 16
   i32.store $0 offset=8
   local.get $3
   i32.const 4
   i32.store $0 offset=12
   i32.const 0
   local.get $1
   i32.load $0 offset=12
   local.tee $2
   local.get $3
   i32.load $0 offset=12
   i32.ne
   br_if $std/array/isArraysEqual<i32>|inlined.28
   drop
   i32.const 1
   local.get $1
   local.tee $0
   local.get $3
   i32.eq
   br_if $std/array/isArraysEqual<i32>|inlined.28
   drop
   i32.const 0
   local.set $1
   loop $for-loop|53
    local.get $1
    local.get $2
    i32.lt_s
    if
     local.get $1
     local.get $0
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $1
     local.get $3
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $1
     i32.const 2
     i32.shl
     local.tee $5
     local.get $0
     i32.load $0 offset=4
     i32.add
     i32.load $0
     local.get $3
     i32.load $0 offset=4
     local.get $5
     i32.add
     i32.load $0
     i32.ne
     br_if $std/array/isArraysEqual<i32>|inlined.28
     drop
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|53
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.29 (result i32)
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $1
   i32.const 44
   i32.add
   local.tee $2
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $2
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 20
   i32.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $2
   i32.const 4816
   i64.load $0
   i64.store $0
   local.get $2
   i32.const 4824
   i64.load $0
   i64.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $0
   i32.const 4832
   i32.load $0
   i32.store $0
   i32.const 4836
   local.set $1
   local.get $0
   i32.const 4
   i32.add
   local.set $0
   i32.const 0
   local.set $3
   local.get $3
   if
    local.get $0
    local.get $1
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $1
   i32.const 44
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 3
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $1
   local.get $2
   i32.store $0
   local.get $1
   local.get $2
   i32.store $0 offset=4
   local.get $1
   i32.const 20
   i32.store $0 offset=8
   local.get $1
   i32.const 5
   i32.store $0 offset=12
   local.get $1
   i32.load $0 offset=12
   local.tee $0
   i32.const 1
   i32.sub
   local.tee $2
   i32.const 0
   local.get $2
   i32.const 0
   i32.gt_s
   select
   local.set $2
   local.get $0
   local.get $2
   i32.sub
   local.tee $3
   i32.const 0
   local.get $3
   i32.const 0
   i32.gt_s
   select
   local.tee $3
   i32.const 2
   i32.shl
   local.tee $5
   i32.const 16
   i32.add
   local.tee $10
   i32.const 1073741820
   i32.gt_u
   if
    unreachable
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $11
   i32.const 4
   i32.add
   local.tee $12
   local.get $10
   i32.const 19
   i32.add
   i32.const -16
   i32.and
   i32.const 4
   i32.sub
   local.tee $10
   i32.add
   local.tee $13
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $13
   global.set $~lib/rt/stub/offset
   local.get $11
   local.get $10
   i32.store $0
   local.get $12
   i32.const 4
   i32.sub
   local.tee $10
   i32.const 0
   i32.store $0 offset=4
   local.get $10
   local.get $5
   i32.store $0 offset=8
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $10
   i32.const 4
   i32.add
   local.tee $11
   i32.const 44
   i32.add
   local.tee $13
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $13
   global.set $~lib/rt/stub/offset
   local.get $10
   i32.const 44
   i32.store $0
   local.get $11
   i32.const 4
   i32.sub
   local.tee $10
   i32.const 3
   i32.store $0 offset=4
   local.get $10
   i32.const 16
   i32.store $0 offset=8
   local.get $11
   i32.const 16
   i32.add
   local.tee $10
   local.get $12
   i32.const 16
   i32.add
   local.tee $11
   i32.store $0
   local.get $10
   local.get $11
   i32.store $0 offset=4
   local.get $10
   local.get $5
   i32.store $0 offset=8
   local.get $10
   local.get $3
   i32.store $0 offset=12
   local.get $10
   i32.load $0 offset=4
   local.get $1
   i32.load $0 offset=4
   local.tee $5
   local.get $2
   i32.const 2
   i32.shl
   i32.add
   local.tee $11
   local.get $3
   i32.const 2
   i32.shl
   memory.copy $0 $0
   local.get $2
   local.get $3
   i32.add
   local.tee $2
   local.get $0
   i32.ne
   if
    local.get $11
    local.get $5
    local.get $2
    i32.const 2
    i32.shl
    i32.add
    local.get $0
    local.get $2
    i32.sub
    i32.const 2
    i32.shl
    memory.copy $0 $0
   end
   local.get $1
   local.get $0
   local.get $3
   i32.sub
   i32.store $0 offset=12
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $2
   i32.const 28
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 28
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 4
   i32.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $2
   local.tee $0
   i32.const 4864
   i32.load $0
   i32.store $0
   i32.const 4868
   local.set $3
   local.get $0
   i32.const 4
   i32.add
   local.set $0
   i32.const 0
   local.set $5
   local.get $5
   if
    local.get $0
    local.get $3
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $3
   i32.const 44
   i32.add
   local.tee $5
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $5
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $3
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 3
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $3
   i32.const 16
   i32.add
   local.tee $3
   local.get $2
   i32.store $0
   local.get $3
   local.get $2
   i32.store $0 offset=4
   local.get $3
   i32.const 4
   i32.store $0 offset=8
   local.get $3
   i32.const 1
   i32.store $0 offset=12
   i32.const 0
   local.get $10
   i32.load $0 offset=12
   local.tee $2
   local.get $3
   i32.load $0 offset=12
   i32.ne
   br_if $std/array/isArraysEqual<i32>|inlined.29
   drop
   i32.const 1
   local.get $3
   local.get $10
   i32.eq
   br_if $std/array/isArraysEqual<i32>|inlined.29
   drop
   i32.const 0
   local.set $0
   loop $for-loop|54
    local.get $0
    local.get $2
    i32.lt_s
    if
     local.get $0
     local.get $10
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $0
     local.get $3
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $0
     i32.const 2
     i32.shl
     local.tee $5
     local.get $10
     i32.load $0 offset=4
     i32.add
     i32.load $0
     local.get $3
     i32.load $0 offset=4
     local.get $5
     i32.add
     i32.load $0
     i32.ne
     br_if $std/array/isArraysEqual<i32>|inlined.29
     drop
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|54
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.30 (result i32)
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $2
   i32.const 44
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $2
   i32.const 4896
   i64.load $0
   i64.store $0
   local.get $2
   i32.const 4904
   i64.load $0
   i64.store $0 offset=8
   i32.const 4912
   local.set $3
   local.get $2
   i32.const 16
   i32.add
   local.set $0
   i32.const 0
   local.set $5
   local.get $5
   if
    local.get $0
    local.get $3
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $3
   i32.const 44
   i32.add
   local.tee $5
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $5
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $3
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 3
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $3
   i32.const 16
   i32.add
   local.tee $3
   local.get $2
   i32.store $0
   local.get $3
   local.get $2
   i32.store $0 offset=4
   local.get $3
   i32.const 16
   i32.store $0 offset=8
   local.get $3
   i32.const 4
   i32.store $0 offset=12
   i32.const 0
   local.get $1
   i32.load $0 offset=12
   local.tee $2
   local.get $3
   i32.load $0 offset=12
   i32.ne
   br_if $std/array/isArraysEqual<i32>|inlined.30
   drop
   i32.const 1
   local.get $1
   local.tee $0
   local.get $3
   i32.eq
   br_if $std/array/isArraysEqual<i32>|inlined.30
   drop
   i32.const 0
   local.set $1
   loop $for-loop|55
    local.get $1
    local.get $2
    i32.lt_s
    if
     local.get $1
     local.get $0
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $1
     local.get $3
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $1
     i32.const 2
     i32.shl
     local.tee $5
     local.get $0
     i32.load $0 offset=4
     i32.add
     i32.load $0
     local.get $3
     i32.load $0 offset=4
     local.get $5
     i32.add
     i32.load $0
     i32.ne
     br_if $std/array/isArraysEqual<i32>|inlined.30
     drop
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|55
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.31 (result i32)
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $1
   i32.const 44
   i32.add
   local.tee $2
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $2
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 20
   i32.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $2
   i32.const 4944
   i64.load $0
   i64.store $0
   local.get $2
   i32.const 4952
   i64.load $0
   i64.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $0
   i32.const 4960
   i32.load $0
   i32.store $0
   i32.const 4964
   local.set $1
   local.get $0
   i32.const 4
   i32.add
   local.set $0
   i32.const 0
   local.set $3
   local.get $3
   if
    local.get $0
    local.get $1
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $1
   i32.const 44
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 3
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $1
   local.get $2
   i32.store $0
   local.get $1
   local.get $2
   i32.store $0 offset=4
   local.get $1
   i32.const 20
   i32.store $0 offset=8
   local.get $1
   i32.const 5
   i32.store $0 offset=12
   local.get $1
   i32.load $0 offset=12
   local.tee $0
   i32.const 2
   i32.sub
   local.tee $2
   i32.const 0
   local.get $2
   i32.const 0
   i32.gt_s
   select
   local.set $2
   local.get $0
   local.get $2
   i32.sub
   local.tee $3
   i32.const 0
   local.get $3
   i32.const 0
   i32.gt_s
   select
   local.tee $3
   i32.const 2
   i32.shl
   local.tee $5
   i32.const 16
   i32.add
   local.tee $10
   i32.const 1073741820
   i32.gt_u
   if
    unreachable
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $11
   i32.const 4
   i32.add
   local.tee $12
   local.get $10
   i32.const 19
   i32.add
   i32.const -16
   i32.and
   i32.const 4
   i32.sub
   local.tee $10
   i32.add
   local.tee $13
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $13
   global.set $~lib/rt/stub/offset
   local.get $11
   local.get $10
   i32.store $0
   local.get $12
   i32.const 4
   i32.sub
   local.tee $10
   i32.const 0
   i32.store $0 offset=4
   local.get $10
   local.get $5
   i32.store $0 offset=8
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $10
   i32.const 4
   i32.add
   local.tee $11
   i32.const 44
   i32.add
   local.tee $13
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $13
   global.set $~lib/rt/stub/offset
   local.get $10
   i32.const 44
   i32.store $0
   local.get $11
   i32.const 4
   i32.sub
   local.tee $10
   i32.const 3
   i32.store $0 offset=4
   local.get $10
   i32.const 16
   i32.store $0 offset=8
   local.get $11
   i32.const 16
   i32.add
   local.tee $10
   local.get $12
   i32.const 16
   i32.add
   local.tee $11
   i32.store $0
   local.get $10
   local.get $11
   i32.store $0 offset=4
   local.get $10
   local.get $5
   i32.store $0 offset=8
   local.get $10
   local.get $3
   i32.store $0 offset=12
   local.get $10
   i32.load $0 offset=4
   local.get $1
   i32.load $0 offset=4
   local.tee $5
   local.get $2
   i32.const 2
   i32.shl
   i32.add
   local.tee $11
   local.get $3
   i32.const 2
   i32.shl
   memory.copy $0 $0
   local.get $2
   local.get $3
   i32.add
   local.tee $2
   local.get $0
   i32.ne
   if
    local.get $11
    local.get $5
    local.get $2
    i32.const 2
    i32.shl
    i32.add
    local.get $0
    local.get $2
    i32.sub
    i32.const 2
    i32.shl
    memory.copy $0 $0
   end
   local.get $1
   local.get $0
   local.get $3
   i32.sub
   i32.store $0 offset=12
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $2
   i32.const 28
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 28
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 8
   i32.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $2
   local.tee $0
   i32.const 4992
   i64.load $0
   i64.store $0
   i32.const 5000
   local.set $3
   local.get $0
   i32.const 8
   i32.add
   local.set $0
   i32.const 0
   local.set $5
   local.get $5
   i32.const 2
   i32.ge_s
   if
    local.get $0
    local.get $3
    i32.load16_u $0
    i32.store16 $0
    local.get $3
    i32.const 2
    i32.add
    local.set $3
    local.get $5
    i32.const 2
    i32.sub
    local.set $5
    local.get $0
    i32.const 2
    i32.add
    local.set $0
   end
   local.get $5
   if
    local.get $0
    local.get $3
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $3
   i32.const 44
   i32.add
   local.tee $5
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $5
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $3
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 3
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $3
   i32.const 16
   i32.add
   local.tee $3
   local.get $2
   i32.store $0
   local.get $3
   local.get $2
   i32.store $0 offset=4
   local.get $3
   i32.const 8
   i32.store $0 offset=8
   local.get $3
   i32.const 2
   i32.store $0 offset=12
   i32.const 0
   local.get $10
   i32.load $0 offset=12
   local.tee $2
   local.get $3
   i32.load $0 offset=12
   i32.ne
   br_if $std/array/isArraysEqual<i32>|inlined.31
   drop
   i32.const 1
   local.get $3
   local.get $10
   i32.eq
   br_if $std/array/isArraysEqual<i32>|inlined.31
   drop
   i32.const 0
   local.set $0
   loop $for-loop|56
    local.get $0
    local.get $2
    i32.lt_s
    if
     local.get $0
     local.get $10
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $0
     local.get $3
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $0
     i32.const 2
     i32.shl
     local.tee $5
     local.get $10
     i32.load $0 offset=4
     i32.add
     i32.load $0
     local.get $3
     i32.load $0 offset=4
     local.get $5
     i32.add
     i32.load $0
     i32.ne
     br_if $std/array/isArraysEqual<i32>|inlined.31
     drop
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|56
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.32 (result i32)
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $2
   i32.const 28
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 28
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 12
   i32.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $2
   local.tee $0
   i32.const 5024
   i64.load $0
   i64.store $0
   i32.const 5032
   local.set $3
   local.get $0
   i32.const 8
   i32.add
   local.set $0
   i32.const 4
   local.tee $5
   i32.const 4
   i32.ge_u
   if
    local.get $0
    i32.const 5032
    i32.load $0
    i32.store $0
    i32.const 5036
    local.set $3
    i32.const 0
    local.set $5
    local.get $0
    i32.const 4
    i32.add
    local.set $0
   end
   local.get $5
   i32.const 2
   i32.ge_s
   if
    local.get $0
    local.get $3
    i32.load16_u $0
    i32.store16 $0
    local.get $3
    i32.const 2
    i32.add
    local.set $3
    local.get $5
    i32.const 2
    i32.sub
    local.set $5
    local.get $0
    i32.const 2
    i32.add
    local.set $0
   end
   local.get $5
   if
    local.get $0
    local.get $3
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $3
   i32.const 44
   i32.add
   local.tee $5
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $5
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $3
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 3
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $3
   i32.const 16
   i32.add
   local.tee $3
   local.get $2
   i32.store $0
   local.get $3
   local.get $2
   i32.store $0 offset=4
   local.get $3
   i32.const 12
   i32.store $0 offset=8
   local.get $3
   i32.const 3
   i32.store $0 offset=12
   i32.const 0
   local.get $1
   i32.load $0 offset=12
   local.tee $2
   local.get $3
   i32.load $0 offset=12
   i32.ne
   br_if $std/array/isArraysEqual<i32>|inlined.32
   drop
   i32.const 1
   local.get $1
   local.tee $0
   local.get $3
   i32.eq
   br_if $std/array/isArraysEqual<i32>|inlined.32
   drop
   i32.const 0
   local.set $1
   loop $for-loop|57
    local.get $1
    local.get $2
    i32.lt_s
    if
     local.get $1
     local.get $0
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $1
     local.get $3
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $1
     i32.const 2
     i32.shl
     local.tee $5
     local.get $0
     i32.load $0 offset=4
     i32.add
     i32.load $0
     local.get $3
     i32.load $0 offset=4
     local.get $5
     i32.add
     i32.load $0
     i32.ne
     br_if $std/array/isArraysEqual<i32>|inlined.32
     drop
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|57
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.33 (result i32)
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $1
   i32.const 44
   i32.add
   local.tee $2
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $2
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 20
   i32.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $2
   i32.const 5056
   i64.load $0
   i64.store $0
   local.get $2
   i32.const 5064
   i64.load $0
   i64.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $0
   i32.const 5072
   i32.load $0
   i32.store $0
   i32.const 5076
   local.set $1
   local.get $0
   i32.const 4
   i32.add
   local.set $0
   i32.const 0
   local.set $3
   local.get $3
   if
    local.get $0
    local.get $1
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $1
   i32.const 44
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 3
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $1
   local.get $2
   i32.store $0
   local.get $1
   local.get $2
   i32.store $0 offset=4
   local.get $1
   i32.const 20
   i32.store $0 offset=8
   local.get $1
   i32.const 5
   i32.store $0 offset=12
   local.get $1
   i32.load $0 offset=12
   local.tee $0
   i32.const 2
   i32.sub
   local.tee $2
   i32.const 0
   local.get $2
   i32.const 0
   i32.gt_s
   select
   local.set $2
   i32.const 1
   local.get $0
   local.get $2
   i32.sub
   local.tee $3
   local.get $3
   i32.const 1
   i32.gt_s
   select
   local.tee $3
   i32.const 0
   local.get $3
   i32.const 0
   i32.gt_s
   select
   local.tee $3
   i32.const 2
   i32.shl
   local.tee $5
   i32.const 16
   i32.add
   local.tee $10
   i32.const 1073741820
   i32.gt_u
   if
    unreachable
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $11
   i32.const 4
   i32.add
   local.tee $12
   local.get $10
   i32.const 19
   i32.add
   i32.const -16
   i32.and
   i32.const 4
   i32.sub
   local.tee $10
   i32.add
   local.tee $13
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $13
   global.set $~lib/rt/stub/offset
   local.get $11
   local.get $10
   i32.store $0
   local.get $12
   i32.const 4
   i32.sub
   local.tee $10
   i32.const 0
   i32.store $0 offset=4
   local.get $10
   local.get $5
   i32.store $0 offset=8
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $10
   i32.const 4
   i32.add
   local.tee $11
   i32.const 44
   i32.add
   local.tee $13
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $13
   global.set $~lib/rt/stub/offset
   local.get $10
   i32.const 44
   i32.store $0
   local.get $11
   i32.const 4
   i32.sub
   local.tee $10
   i32.const 3
   i32.store $0 offset=4
   local.get $10
   i32.const 16
   i32.store $0 offset=8
   local.get $11
   i32.const 16
   i32.add
   local.tee $10
   local.get $12
   i32.const 16
   i32.add
   local.tee $11
   i32.store $0
   local.get $10
   local.get $11
   i32.store $0 offset=4
   local.get $10
   local.get $5
   i32.store $0 offset=8
   local.get $10
   local.get $3
   i32.store $0 offset=12
   local.get $10
   i32.load $0 offset=4
   local.get $1
   i32.load $0 offset=4
   local.tee $5
   local.get $2
   i32.const 2
   i32.shl
   i32.add
   local.tee $11
   local.get $3
   i32.const 2
   i32.shl
   memory.copy $0 $0
   local.get $2
   local.get $3
   i32.add
   local.tee $2
   local.get $0
   i32.ne
   if
    local.get $11
    local.get $5
    local.get $2
    i32.const 2
    i32.shl
    i32.add
    local.get $0
    local.get $2
    i32.sub
    i32.const 2
    i32.shl
    memory.copy $0 $0
   end
   local.get $1
   local.get $0
   local.get $3
   i32.sub
   i32.store $0 offset=12
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $2
   i32.const 28
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 28
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 4
   i32.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $2
   local.tee $0
   i32.const 5104
   i32.load $0
   i32.store $0
   i32.const 5108
   local.set $3
   local.get $0
   i32.const 4
   i32.add
   local.set $0
   i32.const 0
   local.set $5
   local.get $5
   if
    local.get $0
    local.get $3
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $3
   i32.const 44
   i32.add
   local.tee $5
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $5
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $3
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 3
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $3
   i32.const 16
   i32.add
   local.tee $3
   local.get $2
   i32.store $0
   local.get $3
   local.get $2
   i32.store $0 offset=4
   local.get $3
   i32.const 4
   i32.store $0 offset=8
   local.get $3
   i32.const 1
   i32.store $0 offset=12
   i32.const 0
   local.get $10
   i32.load $0 offset=12
   local.tee $2
   local.get $3
   i32.load $0 offset=12
   i32.ne
   br_if $std/array/isArraysEqual<i32>|inlined.33
   drop
   i32.const 1
   local.get $3
   local.get $10
   i32.eq
   br_if $std/array/isArraysEqual<i32>|inlined.33
   drop
   i32.const 0
   local.set $0
   loop $for-loop|58
    local.get $0
    local.get $2
    i32.lt_s
    if
     local.get $0
     local.get $10
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $0
     local.get $3
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $0
     i32.const 2
     i32.shl
     local.tee $5
     local.get $10
     i32.load $0 offset=4
     i32.add
     i32.load $0
     local.get $3
     i32.load $0 offset=4
     local.get $5
     i32.add
     i32.load $0
     i32.ne
     br_if $std/array/isArraysEqual<i32>|inlined.33
     drop
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|58
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.34 (result i32)
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $2
   i32.const 44
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $2
   i32.const 5136
   i64.load $0
   i64.store $0
   local.get $2
   i32.const 5144
   i64.load $0
   i64.store $0 offset=8
   i32.const 5152
   local.set $3
   local.get $2
   i32.const 16
   i32.add
   local.set $0
   i32.const 0
   local.set $5
   local.get $5
   if
    local.get $0
    local.get $3
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $3
   i32.const 44
   i32.add
   local.tee $5
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $5
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $3
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 3
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $3
   i32.const 16
   i32.add
   local.tee $3
   local.get $2
   i32.store $0
   local.get $3
   local.get $2
   i32.store $0 offset=4
   local.get $3
   i32.const 16
   i32.store $0 offset=8
   local.get $3
   i32.const 4
   i32.store $0 offset=12
   i32.const 0
   local.get $1
   i32.load $0 offset=12
   local.tee $2
   local.get $3
   i32.load $0 offset=12
   i32.ne
   br_if $std/array/isArraysEqual<i32>|inlined.34
   drop
   i32.const 1
   local.get $1
   local.tee $0
   local.get $3
   i32.eq
   br_if $std/array/isArraysEqual<i32>|inlined.34
   drop
   i32.const 0
   local.set $1
   loop $for-loop|59
    local.get $1
    local.get $2
    i32.lt_s
    if
     local.get $1
     local.get $0
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $1
     local.get $3
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $1
     i32.const 2
     i32.shl
     local.tee $5
     local.get $0
     i32.load $0 offset=4
     i32.add
     i32.load $0
     local.get $3
     i32.load $0 offset=4
     local.get $5
     i32.add
     i32.load $0
     i32.ne
     br_if $std/array/isArraysEqual<i32>|inlined.34
     drop
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|59
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.35 (result i32)
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $1
   i32.const 44
   i32.add
   local.tee $2
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $2
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 20
   i32.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $2
   i32.const 5184
   i64.load $0
   i64.store $0
   local.get $2
   i32.const 5192
   i64.load $0
   i64.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $0
   i32.const 5200
   i32.load $0
   i32.store $0
   i32.const 5204
   local.set $1
   local.get $0
   i32.const 4
   i32.add
   local.set $0
   i32.const 0
   local.set $3
   local.get $3
   if
    local.get $0
    local.get $1
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $1
   i32.const 44
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 3
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $1
   local.get $2
   i32.store $0
   local.get $1
   local.get $2
   i32.store $0 offset=4
   local.get $1
   i32.const 20
   i32.store $0 offset=8
   local.get $1
   i32.const 5
   i32.store $0 offset=12
   local.get $1
   i32.load $0 offset=12
   local.tee $0
   i32.const 7
   i32.sub
   local.tee $2
   i32.const 0
   local.get $2
   i32.const 0
   i32.gt_s
   select
   local.set $2
   i32.const 1
   local.get $0
   local.get $2
   i32.sub
   local.tee $3
   local.get $3
   i32.const 1
   i32.gt_s
   select
   local.tee $3
   i32.const 0
   local.get $3
   i32.const 0
   i32.gt_s
   select
   local.tee $3
   i32.const 2
   i32.shl
   local.tee $5
   i32.const 16
   i32.add
   local.tee $10
   i32.const 1073741820
   i32.gt_u
   if
    unreachable
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $11
   i32.const 4
   i32.add
   local.tee $12
   local.get $10
   i32.const 19
   i32.add
   i32.const -16
   i32.and
   i32.const 4
   i32.sub
   local.tee $10
   i32.add
   local.tee $13
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $13
   global.set $~lib/rt/stub/offset
   local.get $11
   local.get $10
   i32.store $0
   local.get $12
   i32.const 4
   i32.sub
   local.tee $10
   i32.const 0
   i32.store $0 offset=4
   local.get $10
   local.get $5
   i32.store $0 offset=8
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $10
   i32.const 4
   i32.add
   local.tee $11
   i32.const 44
   i32.add
   local.tee $13
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $13
   global.set $~lib/rt/stub/offset
   local.get $10
   i32.const 44
   i32.store $0
   local.get $11
   i32.const 4
   i32.sub
   local.tee $10
   i32.const 3
   i32.store $0 offset=4
   local.get $10
   i32.const 16
   i32.store $0 offset=8
   local.get $11
   i32.const 16
   i32.add
   local.tee $10
   local.get $12
   i32.const 16
   i32.add
   local.tee $11
   i32.store $0
   local.get $10
   local.get $11
   i32.store $0 offset=4
   local.get $10
   local.get $5
   i32.store $0 offset=8
   local.get $10
   local.get $3
   i32.store $0 offset=12
   local.get $10
   i32.load $0 offset=4
   local.get $1
   i32.load $0 offset=4
   local.tee $5
   local.get $2
   i32.const 2
   i32.shl
   i32.add
   local.tee $11
   local.get $3
   i32.const 2
   i32.shl
   memory.copy $0 $0
   local.get $2
   local.get $3
   i32.add
   local.tee $2
   local.get $0
   i32.ne
   if
    local.get $11
    local.get $5
    local.get $2
    i32.const 2
    i32.shl
    i32.add
    local.get $0
    local.get $2
    i32.sub
    i32.const 2
    i32.shl
    memory.copy $0 $0
   end
   local.get $1
   local.get $0
   local.get $3
   i32.sub
   i32.store $0 offset=12
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $2
   i32.const 28
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 28
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 4
   i32.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $2
   local.tee $0
   i32.const 5232
   i32.load $0
   i32.store $0
   i32.const 5236
   local.set $3
   local.get $0
   i32.const 4
   i32.add
   local.set $0
   i32.const 0
   local.set $5
   local.get $5
   if
    local.get $0
    local.get $3
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $3
   i32.const 44
   i32.add
   local.tee $5
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $5
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $3
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 3
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $3
   i32.const 16
   i32.add
   local.tee $3
   local.get $2
   i32.store $0
   local.get $3
   local.get $2
   i32.store $0 offset=4
   local.get $3
   i32.const 4
   i32.store $0 offset=8
   local.get $3
   i32.const 1
   i32.store $0 offset=12
   i32.const 0
   local.get $10
   i32.load $0 offset=12
   local.tee $2
   local.get $3
   i32.load $0 offset=12
   i32.ne
   br_if $std/array/isArraysEqual<i32>|inlined.35
   drop
   i32.const 1
   local.get $3
   local.get $10
   i32.eq
   br_if $std/array/isArraysEqual<i32>|inlined.35
   drop
   i32.const 0
   local.set $0
   loop $for-loop|60
    local.get $0
    local.get $2
    i32.lt_s
    if
     local.get $0
     local.get $10
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $0
     local.get $3
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $0
     i32.const 2
     i32.shl
     local.tee $5
     local.get $10
     i32.load $0 offset=4
     i32.add
     i32.load $0
     local.get $3
     i32.load $0 offset=4
     local.get $5
     i32.add
     i32.load $0
     i32.ne
     br_if $std/array/isArraysEqual<i32>|inlined.35
     drop
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|60
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.36 (result i32)
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $2
   i32.const 44
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $2
   i32.const 5264
   i64.load $0
   i64.store $0
   local.get $2
   i32.const 5272
   i64.load $0
   i64.store $0 offset=8
   i32.const 5280
   local.set $3
   local.get $2
   i32.const 16
   i32.add
   local.set $0
   i32.const 0
   local.set $5
   local.get $5
   if
    local.get $0
    local.get $3
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $3
   i32.const 44
   i32.add
   local.tee $5
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $5
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $3
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 3
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $3
   i32.const 16
   i32.add
   local.tee $3
   local.get $2
   i32.store $0
   local.get $3
   local.get $2
   i32.store $0 offset=4
   local.get $3
   i32.const 16
   i32.store $0 offset=8
   local.get $3
   i32.const 4
   i32.store $0 offset=12
   i32.const 0
   local.get $1
   i32.load $0 offset=12
   local.tee $2
   local.get $3
   i32.load $0 offset=12
   i32.ne
   br_if $std/array/isArraysEqual<i32>|inlined.36
   drop
   i32.const 1
   local.get $1
   local.tee $0
   local.get $3
   i32.eq
   br_if $std/array/isArraysEqual<i32>|inlined.36
   drop
   i32.const 0
   local.set $1
   loop $for-loop|61
    local.get $1
    local.get $2
    i32.lt_s
    if
     local.get $1
     local.get $0
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $1
     local.get $3
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $1
     i32.const 2
     i32.shl
     local.tee $5
     local.get $0
     i32.load $0 offset=4
     i32.add
     i32.load $0
     local.get $3
     i32.load $0 offset=4
     local.get $5
     i32.add
     i32.load $0
     i32.ne
     br_if $std/array/isArraysEqual<i32>|inlined.36
     drop
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|61
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.37 (result i32)
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $1
   i32.const 44
   i32.add
   local.tee $2
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $2
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 20
   i32.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $2
   i32.const 5312
   i64.load $0
   i64.store $0
   local.get $2
   i32.const 5320
   i64.load $0
   i64.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $0
   i32.const 5328
   i32.load $0
   i32.store $0
   i32.const 5332
   local.set $1
   local.get $0
   i32.const 4
   i32.add
   local.set $0
   i32.const 0
   local.set $3
   local.get $3
   if
    local.get $0
    local.get $1
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $1
   i32.const 44
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 3
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $1
   local.get $2
   i32.store $0
   local.get $1
   local.get $2
   i32.store $0 offset=4
   local.get $1
   i32.const 20
   i32.store $0 offset=8
   local.get $1
   i32.const 5
   i32.store $0 offset=12
   local.get $1
   i32.load $0 offset=12
   local.tee $0
   i32.const 2
   i32.sub
   local.tee $2
   i32.const 0
   local.get $2
   i32.const 0
   i32.gt_s
   select
   local.set $2
   i32.const -1
   local.get $0
   local.get $2
   i32.sub
   local.tee $3
   local.get $3
   i32.const 0
   i32.ge_s
   select
   local.tee $3
   i32.const 0
   local.get $3
   i32.const 0
   i32.gt_s
   select
   local.tee $3
   i32.const 2
   i32.shl
   local.tee $5
   i32.const 16
   i32.add
   local.tee $10
   i32.const 1073741820
   i32.gt_u
   if
    unreachable
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $11
   i32.const 4
   i32.add
   local.tee $12
   local.get $10
   i32.const 19
   i32.add
   i32.const -16
   i32.and
   i32.const 4
   i32.sub
   local.tee $10
   i32.add
   local.tee $13
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $13
   global.set $~lib/rt/stub/offset
   local.get $11
   local.get $10
   i32.store $0
   local.get $12
   i32.const 4
   i32.sub
   local.tee $10
   i32.const 0
   i32.store $0 offset=4
   local.get $10
   local.get $5
   i32.store $0 offset=8
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $10
   i32.const 4
   i32.add
   local.tee $11
   i32.const 44
   i32.add
   local.tee $13
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $13
   global.set $~lib/rt/stub/offset
   local.get $10
   i32.const 44
   i32.store $0
   local.get $11
   i32.const 4
   i32.sub
   local.tee $10
   i32.const 3
   i32.store $0 offset=4
   local.get $10
   i32.const 16
   i32.store $0 offset=8
   local.get $11
   i32.const 16
   i32.add
   local.tee $10
   local.get $12
   i32.const 16
   i32.add
   local.tee $11
   i32.store $0
   local.get $10
   local.get $11
   i32.store $0 offset=4
   local.get $10
   local.get $5
   i32.store $0 offset=8
   local.get $10
   local.get $3
   i32.store $0 offset=12
   local.get $10
   i32.load $0 offset=4
   local.get $1
   i32.load $0 offset=4
   local.tee $5
   local.get $2
   i32.const 2
   i32.shl
   i32.add
   local.tee $11
   local.get $3
   i32.const 2
   i32.shl
   memory.copy $0 $0
   local.get $2
   local.get $3
   i32.add
   local.tee $2
   local.get $0
   i32.ne
   if
    local.get $11
    local.get $5
    local.get $2
    i32.const 2
    i32.shl
    i32.add
    local.get $0
    local.get $2
    i32.sub
    i32.const 2
    i32.shl
    memory.copy $0 $0
   end
   local.get $1
   local.get $0
   local.get $3
   i32.sub
   i32.store $0 offset=12
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $2
   i32.const 28
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 28
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 0
   i32.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.set $0
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $2
   i32.const 4
   i32.add
   local.tee $3
   i32.const 44
   i32.add
   local.tee $5
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $5
   global.set $~lib/rt/stub/offset
   local.get $2
   i32.const 44
   i32.store $0
   local.get $3
   i32.const 4
   i32.sub
   local.tee $2
   i32.const 3
   i32.store $0 offset=4
   local.get $2
   i32.const 16
   i32.store $0 offset=8
   local.get $3
   i32.const 16
   i32.add
   local.tee $2
   local.get $0
   i32.store $0
   local.get $2
   local.get $0
   i32.store $0 offset=4
   local.get $2
   i32.const 0
   i32.store $0 offset=8
   local.get $2
   i32.const 0
   i32.store $0 offset=12
   i32.const 0
   local.get $10
   i32.load $0 offset=12
   local.tee $3
   local.get $2
   i32.load $0 offset=12
   i32.ne
   br_if $std/array/isArraysEqual<i32>|inlined.37
   drop
   i32.const 1
   local.get $2
   local.get $10
   i32.eq
   br_if $std/array/isArraysEqual<i32>|inlined.37
   drop
   i32.const 0
   local.set $0
   loop $for-loop|62
    local.get $0
    local.get $3
    i32.lt_s
    if
     local.get $0
     local.get $10
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $0
     local.get $2
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $0
     i32.const 2
     i32.shl
     local.tee $5
     local.get $10
     i32.load $0 offset=4
     i32.add
     i32.load $0
     local.get $2
     i32.load $0 offset=4
     local.get $5
     i32.add
     i32.load $0
     i32.ne
     br_if $std/array/isArraysEqual<i32>|inlined.37
     drop
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|62
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.38 (result i32)
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $2
   i32.const 44
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 20
   i32.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $0
   i32.const 5392
   i64.load $0
   i64.store $0
   local.get $0
   i32.const 5400
   i64.load $0
   i64.store $0 offset=8
   local.get $0
   i32.const 16
   i32.add
   i32.const 5408
   i32.load $0
   i32.store $0
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $2
   i32.const 4
   i32.add
   local.tee $3
   i32.const 44
   i32.add
   local.tee $5
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $5
   global.set $~lib/rt/stub/offset
   local.get $2
   i32.const 44
   i32.store $0
   local.get $3
   i32.const 4
   i32.sub
   local.tee $2
   i32.const 3
   i32.store $0 offset=4
   local.get $2
   i32.const 16
   i32.store $0 offset=8
   local.get $3
   i32.const 16
   i32.add
   local.tee $2
   local.get $0
   i32.store $0
   local.get $2
   local.get $0
   i32.store $0 offset=4
   local.get $2
   i32.const 20
   i32.store $0 offset=8
   local.get $2
   i32.const 5
   i32.store $0 offset=12
   i32.const 0
   local.get $1
   i32.load $0 offset=12
   local.tee $3
   local.get $2
   i32.load $0 offset=12
   i32.ne
   br_if $std/array/isArraysEqual<i32>|inlined.38
   drop
   i32.const 1
   local.get $1
   local.tee $0
   local.get $2
   i32.eq
   br_if $std/array/isArraysEqual<i32>|inlined.38
   drop
   i32.const 0
   local.set $1
   loop $for-loop|63
    local.get $1
    local.get $3
    i32.lt_s
    if
     local.get $1
     local.get $0
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $1
     local.get $2
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $1
     i32.const 2
     i32.shl
     local.tee $5
     local.get $0
     i32.load $0 offset=4
     i32.add
     i32.load $0
     local.get $2
     i32.load $0 offset=4
     local.get $5
     i32.add
     i32.load $0
     i32.ne
     br_if $std/array/isArraysEqual<i32>|inlined.38
     drop
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|63
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.39 (result i32)
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $1
   i32.const 44
   i32.add
   local.tee $2
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $2
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 20
   i32.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $2
   i32.const 5440
   i64.load $0
   i64.store $0
   local.get $2
   i32.const 5448
   i64.load $0
   i64.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $0
   i32.const 5456
   i32.load $0
   i32.store $0
   i32.const 5460
   local.set $1
   local.get $0
   i32.const 4
   i32.add
   local.set $0
   i32.const 0
   local.set $3
   local.get $3
   if
    local.get $0
    local.get $1
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $1
   i32.const 44
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 3
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $1
   local.get $2
   i32.store $0
   local.get $1
   local.get $2
   i32.store $0 offset=4
   local.get $1
   i32.const 20
   i32.store $0 offset=8
   local.get $1
   i32.const 5
   i32.store $0 offset=12
   i32.const 1
   local.get $1
   i32.load $0 offset=12
   local.tee $0
   local.get $0
   i32.const 1
   i32.gt_s
   select
   local.set $2
   i32.const -2
   local.get $0
   local.get $2
   i32.sub
   local.tee $3
   local.get $3
   i32.const -2
   i32.gt_s
   select
   local.tee $3
   i32.const 0
   local.get $3
   i32.const 0
   i32.gt_s
   select
   local.tee $3
   i32.const 2
   i32.shl
   local.tee $5
   i32.const 16
   i32.add
   local.tee $10
   i32.const 1073741820
   i32.gt_u
   if
    unreachable
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $11
   i32.const 4
   i32.add
   local.tee $12
   local.get $10
   i32.const 19
   i32.add
   i32.const -16
   i32.and
   i32.const 4
   i32.sub
   local.tee $10
   i32.add
   local.tee $13
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $13
   global.set $~lib/rt/stub/offset
   local.get $11
   local.get $10
   i32.store $0
   local.get $12
   i32.const 4
   i32.sub
   local.tee $10
   i32.const 0
   i32.store $0 offset=4
   local.get $10
   local.get $5
   i32.store $0 offset=8
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $10
   i32.const 4
   i32.add
   local.tee $11
   i32.const 44
   i32.add
   local.tee $13
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $13
   global.set $~lib/rt/stub/offset
   local.get $10
   i32.const 44
   i32.store $0
   local.get $11
   i32.const 4
   i32.sub
   local.tee $10
   i32.const 3
   i32.store $0 offset=4
   local.get $10
   i32.const 16
   i32.store $0 offset=8
   local.get $11
   i32.const 16
   i32.add
   local.tee $10
   local.get $12
   i32.const 16
   i32.add
   local.tee $11
   i32.store $0
   local.get $10
   local.get $11
   i32.store $0 offset=4
   local.get $10
   local.get $5
   i32.store $0 offset=8
   local.get $10
   local.get $3
   i32.store $0 offset=12
   local.get $10
   i32.load $0 offset=4
   local.get $1
   i32.load $0 offset=4
   local.tee $5
   local.get $2
   i32.const 2
   i32.shl
   i32.add
   local.tee $11
   local.get $3
   i32.const 2
   i32.shl
   memory.copy $0 $0
   local.get $2
   local.get $3
   i32.add
   local.tee $2
   local.get $0
   i32.ne
   if
    local.get $11
    local.get $5
    local.get $2
    i32.const 2
    i32.shl
    i32.add
    local.get $0
    local.get $2
    i32.sub
    i32.const 2
    i32.shl
    memory.copy $0 $0
   end
   local.get $1
   local.get $0
   local.get $3
   i32.sub
   i32.store $0 offset=12
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $2
   i32.const 28
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 28
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 0
   i32.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.set $0
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $2
   i32.const 4
   i32.add
   local.tee $3
   i32.const 44
   i32.add
   local.tee $5
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $5
   global.set $~lib/rt/stub/offset
   local.get $2
   i32.const 44
   i32.store $0
   local.get $3
   i32.const 4
   i32.sub
   local.tee $2
   i32.const 3
   i32.store $0 offset=4
   local.get $2
   i32.const 16
   i32.store $0 offset=8
   local.get $3
   i32.const 16
   i32.add
   local.tee $2
   local.get $0
   i32.store $0
   local.get $2
   local.get $0
   i32.store $0 offset=4
   local.get $2
   i32.const 0
   i32.store $0 offset=8
   local.get $2
   i32.const 0
   i32.store $0 offset=12
   i32.const 0
   local.get $10
   i32.load $0 offset=12
   local.tee $3
   local.get $2
   i32.load $0 offset=12
   i32.ne
   br_if $std/array/isArraysEqual<i32>|inlined.39
   drop
   i32.const 1
   local.get $2
   local.get $10
   i32.eq
   br_if $std/array/isArraysEqual<i32>|inlined.39
   drop
   i32.const 0
   local.set $0
   loop $for-loop|64
    local.get $0
    local.get $3
    i32.lt_s
    if
     local.get $0
     local.get $10
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $0
     local.get $2
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $0
     i32.const 2
     i32.shl
     local.tee $5
     local.get $10
     i32.load $0 offset=4
     i32.add
     i32.load $0
     local.get $2
     i32.load $0 offset=4
     local.get $5
     i32.add
     i32.load $0
     i32.ne
     br_if $std/array/isArraysEqual<i32>|inlined.39
     drop
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|64
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.40 (result i32)
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $2
   i32.const 44
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 20
   i32.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $0
   i32.const 5520
   i64.load $0
   i64.store $0
   local.get $0
   i32.const 5528
   i64.load $0
   i64.store $0 offset=8
   local.get $0
   i32.const 16
   i32.add
   i32.const 5536
   i32.load $0
   i32.store $0
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $2
   i32.const 4
   i32.add
   local.tee $3
   i32.const 44
   i32.add
   local.tee $5
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $5
   global.set $~lib/rt/stub/offset
   local.get $2
   i32.const 44
   i32.store $0
   local.get $3
   i32.const 4
   i32.sub
   local.tee $2
   i32.const 3
   i32.store $0 offset=4
   local.get $2
   i32.const 16
   i32.store $0 offset=8
   local.get $3
   i32.const 16
   i32.add
   local.tee $2
   local.get $0
   i32.store $0
   local.get $2
   local.get $0
   i32.store $0 offset=4
   local.get $2
   i32.const 20
   i32.store $0 offset=8
   local.get $2
   i32.const 5
   i32.store $0 offset=12
   i32.const 0
   local.get $1
   i32.load $0 offset=12
   local.tee $3
   local.get $2
   i32.load $0 offset=12
   i32.ne
   br_if $std/array/isArraysEqual<i32>|inlined.40
   drop
   i32.const 1
   local.get $1
   local.tee $0
   local.get $2
   i32.eq
   br_if $std/array/isArraysEqual<i32>|inlined.40
   drop
   i32.const 0
   local.set $1
   loop $for-loop|65
    local.get $1
    local.get $3
    i32.lt_s
    if
     local.get $1
     local.get $0
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $1
     local.get $2
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $1
     i32.const 2
     i32.shl
     local.tee $5
     local.get $0
     i32.load $0 offset=4
     i32.add
     i32.load $0
     local.get $2
     i32.load $0 offset=4
     local.get $5
     i32.add
     i32.load $0
     i32.ne
     br_if $std/array/isArraysEqual<i32>|inlined.40
     drop
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|65
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.41 (result i32)
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $1
   i32.const 44
   i32.add
   local.tee $2
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $2
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 20
   i32.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $2
   i32.const 5568
   i64.load $0
   i64.store $0
   local.get $2
   i32.const 5576
   i64.load $0
   i64.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $0
   i32.const 5584
   i32.load $0
   i32.store $0
   i32.const 5588
   local.set $1
   local.get $0
   i32.const 4
   i32.add
   local.set $0
   i32.const 0
   local.set $3
   local.get $3
   if
    local.get $0
    local.get $1
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $1
   i32.const 44
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 3
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $1
   local.get $2
   i32.store $0
   local.get $1
   local.get $2
   i32.store $0 offset=4
   local.get $1
   i32.const 20
   i32.store $0 offset=8
   local.get $1
   i32.const 5
   i32.store $0 offset=12
   i32.const 4
   local.get $1
   i32.load $0 offset=12
   local.tee $0
   local.get $0
   i32.const 4
   i32.gt_s
   select
   local.set $2
   local.get $0
   local.get $2
   i32.sub
   local.tee $3
   i32.const 0
   local.get $3
   i32.const 0
   i32.le_s
   select
   local.tee $3
   i32.const 0
   local.get $3
   i32.const 0
   i32.gt_s
   select
   local.tee $3
   i32.const 2
   i32.shl
   local.tee $5
   i32.const 16
   i32.add
   local.tee $10
   i32.const 1073741820
   i32.gt_u
   if
    unreachable
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $11
   i32.const 4
   i32.add
   local.tee $12
   local.get $10
   i32.const 19
   i32.add
   i32.const -16
   i32.and
   i32.const 4
   i32.sub
   local.tee $10
   i32.add
   local.tee $13
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $13
   global.set $~lib/rt/stub/offset
   local.get $11
   local.get $10
   i32.store $0
   local.get $12
   i32.const 4
   i32.sub
   local.tee $10
   i32.const 0
   i32.store $0 offset=4
   local.get $10
   local.get $5
   i32.store $0 offset=8
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $10
   i32.const 4
   i32.add
   local.tee $11
   i32.const 44
   i32.add
   local.tee $13
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $13
   global.set $~lib/rt/stub/offset
   local.get $10
   i32.const 44
   i32.store $0
   local.get $11
   i32.const 4
   i32.sub
   local.tee $10
   i32.const 3
   i32.store $0 offset=4
   local.get $10
   i32.const 16
   i32.store $0 offset=8
   local.get $11
   i32.const 16
   i32.add
   local.tee $10
   local.get $12
   i32.const 16
   i32.add
   local.tee $11
   i32.store $0
   local.get $10
   local.get $11
   i32.store $0 offset=4
   local.get $10
   local.get $5
   i32.store $0 offset=8
   local.get $10
   local.get $3
   i32.store $0 offset=12
   local.get $10
   i32.load $0 offset=4
   local.get $1
   i32.load $0 offset=4
   local.tee $5
   local.get $2
   i32.const 2
   i32.shl
   i32.add
   local.tee $11
   local.get $3
   i32.const 2
   i32.shl
   memory.copy $0 $0
   local.get $2
   local.get $3
   i32.add
   local.tee $2
   local.get $0
   i32.ne
   if
    local.get $11
    local.get $5
    local.get $2
    i32.const 2
    i32.shl
    i32.add
    local.get $0
    local.get $2
    i32.sub
    i32.const 2
    i32.shl
    memory.copy $0 $0
   end
   local.get $1
   local.get $0
   local.get $3
   i32.sub
   i32.store $0 offset=12
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $2
   i32.const 28
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 28
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 0
   i32.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.set $0
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $2
   i32.const 4
   i32.add
   local.tee $3
   i32.const 44
   i32.add
   local.tee $5
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $5
   global.set $~lib/rt/stub/offset
   local.get $2
   i32.const 44
   i32.store $0
   local.get $3
   i32.const 4
   i32.sub
   local.tee $2
   i32.const 3
   i32.store $0 offset=4
   local.get $2
   i32.const 16
   i32.store $0 offset=8
   local.get $3
   i32.const 16
   i32.add
   local.tee $2
   local.get $0
   i32.store $0
   local.get $2
   local.get $0
   i32.store $0 offset=4
   local.get $2
   i32.const 0
   i32.store $0 offset=8
   local.get $2
   i32.const 0
   i32.store $0 offset=12
   i32.const 0
   local.get $10
   i32.load $0 offset=12
   local.tee $3
   local.get $2
   i32.load $0 offset=12
   i32.ne
   br_if $std/array/isArraysEqual<i32>|inlined.41
   drop
   i32.const 1
   local.get $2
   local.get $10
   i32.eq
   br_if $std/array/isArraysEqual<i32>|inlined.41
   drop
   i32.const 0
   local.set $0
   loop $for-loop|66
    local.get $0
    local.get $3
    i32.lt_s
    if
     local.get $0
     local.get $10
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $0
     local.get $2
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $0
     i32.const 2
     i32.shl
     local.tee $5
     local.get $10
     i32.load $0 offset=4
     i32.add
     i32.load $0
     local.get $2
     i32.load $0 offset=4
     local.get $5
     i32.add
     i32.load $0
     i32.ne
     br_if $std/array/isArraysEqual<i32>|inlined.41
     drop
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|66
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.42 (result i32)
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $2
   i32.const 44
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 20
   i32.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $0
   i32.const 5648
   i64.load $0
   i64.store $0
   local.get $0
   i32.const 5656
   i64.load $0
   i64.store $0 offset=8
   local.get $0
   i32.const 16
   i32.add
   i32.const 5664
   i32.load $0
   i32.store $0
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $2
   i32.const 4
   i32.add
   local.tee $3
   i32.const 44
   i32.add
   local.tee $5
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $5
   global.set $~lib/rt/stub/offset
   local.get $2
   i32.const 44
   i32.store $0
   local.get $3
   i32.const 4
   i32.sub
   local.tee $2
   i32.const 3
   i32.store $0 offset=4
   local.get $2
   i32.const 16
   i32.store $0 offset=8
   local.get $3
   i32.const 16
   i32.add
   local.tee $2
   local.get $0
   i32.store $0
   local.get $2
   local.get $0
   i32.store $0 offset=4
   local.get $2
   i32.const 20
   i32.store $0 offset=8
   local.get $2
   i32.const 5
   i32.store $0 offset=12
   i32.const 0
   local.get $1
   i32.load $0 offset=12
   local.tee $3
   local.get $2
   i32.load $0 offset=12
   i32.ne
   br_if $std/array/isArraysEqual<i32>|inlined.42
   drop
   i32.const 1
   local.get $1
   local.tee $0
   local.get $2
   i32.eq
   br_if $std/array/isArraysEqual<i32>|inlined.42
   drop
   i32.const 0
   local.set $1
   loop $for-loop|67
    local.get $1
    local.get $3
    i32.lt_s
    if
     local.get $1
     local.get $0
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $1
     local.get $2
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $1
     i32.const 2
     i32.shl
     local.tee $5
     local.get $0
     i32.load $0 offset=4
     i32.add
     i32.load $0
     local.get $2
     i32.load $0 offset=4
     local.get $5
     i32.add
     i32.load $0
     i32.ne
     br_if $std/array/isArraysEqual<i32>|inlined.42
     drop
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|67
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.43 (result i32)
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $1
   i32.const 44
   i32.add
   local.tee $2
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $2
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 20
   i32.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $2
   i32.const 5696
   i64.load $0
   i64.store $0
   local.get $2
   i32.const 5704
   i64.load $0
   i64.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $0
   i32.const 5712
   i32.load $0
   i32.store $0
   i32.const 5716
   local.set $1
   local.get $0
   i32.const 4
   i32.add
   local.set $0
   i32.const 0
   local.set $3
   local.get $3
   if
    local.get $0
    local.get $1
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $1
   i32.const 44
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 3
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $1
   local.get $2
   i32.store $0
   local.get $1
   local.get $2
   i32.store $0 offset=4
   local.get $1
   i32.const 20
   i32.store $0 offset=8
   local.get $1
   i32.const 5
   i32.store $0 offset=12
   i32.const 7
   local.get $1
   i32.load $0 offset=12
   local.tee $0
   local.get $0
   i32.const 7
   i32.gt_s
   select
   local.set $2
   local.get $0
   local.get $2
   i32.sub
   local.tee $3
   i32.const 0
   local.get $3
   i32.const 0
   i32.le_s
   select
   local.tee $3
   i32.const 0
   local.get $3
   i32.const 0
   i32.gt_s
   select
   local.tee $3
   i32.const 2
   i32.shl
   local.tee $5
   i32.const 16
   i32.add
   local.tee $10
   i32.const 1073741820
   i32.gt_u
   if
    unreachable
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $11
   i32.const 4
   i32.add
   local.tee $12
   local.get $10
   i32.const 19
   i32.add
   i32.const -16
   i32.and
   i32.const 4
   i32.sub
   local.tee $10
   i32.add
   local.tee $13
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $13
   global.set $~lib/rt/stub/offset
   local.get $11
   local.get $10
   i32.store $0
   local.get $12
   i32.const 4
   i32.sub
   local.tee $10
   i32.const 0
   i32.store $0 offset=4
   local.get $10
   local.get $5
   i32.store $0 offset=8
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $10
   i32.const 4
   i32.add
   local.tee $11
   i32.const 44
   i32.add
   local.tee $13
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $13
   global.set $~lib/rt/stub/offset
   local.get $10
   i32.const 44
   i32.store $0
   local.get $11
   i32.const 4
   i32.sub
   local.tee $10
   i32.const 3
   i32.store $0 offset=4
   local.get $10
   i32.const 16
   i32.store $0 offset=8
   local.get $11
   i32.const 16
   i32.add
   local.tee $10
   local.get $12
   i32.const 16
   i32.add
   local.tee $11
   i32.store $0
   local.get $10
   local.get $11
   i32.store $0 offset=4
   local.get $10
   local.get $5
   i32.store $0 offset=8
   local.get $10
   local.get $3
   i32.store $0 offset=12
   local.get $10
   i32.load $0 offset=4
   local.get $1
   i32.load $0 offset=4
   local.tee $5
   local.get $2
   i32.const 2
   i32.shl
   i32.add
   local.tee $11
   local.get $3
   i32.const 2
   i32.shl
   memory.copy $0 $0
   local.get $2
   local.get $3
   i32.add
   local.tee $2
   local.get $0
   i32.ne
   if
    local.get $11
    local.get $5
    local.get $2
    i32.const 2
    i32.shl
    i32.add
    local.get $0
    local.get $2
    i32.sub
    i32.const 2
    i32.shl
    memory.copy $0 $0
   end
   local.get $1
   local.get $0
   local.get $3
   i32.sub
   i32.store $0 offset=12
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $2
   i32.const 28
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 28
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 0
   i32.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.set $0
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $2
   i32.const 4
   i32.add
   local.tee $3
   i32.const 44
   i32.add
   local.tee $5
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $5
   global.set $~lib/rt/stub/offset
   local.get $2
   i32.const 44
   i32.store $0
   local.get $3
   i32.const 4
   i32.sub
   local.tee $2
   i32.const 3
   i32.store $0 offset=4
   local.get $2
   i32.const 16
   i32.store $0 offset=8
   local.get $3
   i32.const 16
   i32.add
   local.tee $2
   local.get $0
   i32.store $0
   local.get $2
   local.get $0
   i32.store $0 offset=4
   local.get $2
   i32.const 0
   i32.store $0 offset=8
   local.get $2
   i32.const 0
   i32.store $0 offset=12
   i32.const 0
   local.get $10
   i32.load $0 offset=12
   local.tee $3
   local.get $2
   i32.load $0 offset=12
   i32.ne
   br_if $std/array/isArraysEqual<i32>|inlined.43
   drop
   i32.const 1
   local.get $2
   local.get $10
   i32.eq
   br_if $std/array/isArraysEqual<i32>|inlined.43
   drop
   i32.const 0
   local.set $0
   loop $for-loop|68
    local.get $0
    local.get $3
    i32.lt_s
    if
     local.get $0
     local.get $10
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $0
     local.get $2
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $0
     i32.const 2
     i32.shl
     local.tee $5
     local.get $10
     i32.load $0 offset=4
     i32.add
     i32.load $0
     local.get $2
     i32.load $0 offset=4
     local.get $5
     i32.add
     i32.load $0
     i32.ne
     br_if $std/array/isArraysEqual<i32>|inlined.43
     drop
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|68
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.44 (result i32)
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $2
   i32.const 44
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 20
   i32.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $0
   i32.const 5776
   i64.load $0
   i64.store $0
   local.get $0
   i32.const 5784
   i64.load $0
   i64.store $0 offset=8
   local.get $0
   i32.const 16
   i32.add
   i32.const 5792
   i32.load $0
   i32.store $0
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $2
   i32.const 4
   i32.add
   local.tee $3
   i32.const 44
   i32.add
   local.tee $5
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $5
   global.set $~lib/rt/stub/offset
   local.get $2
   i32.const 44
   i32.store $0
   local.get $3
   i32.const 4
   i32.sub
   local.tee $2
   i32.const 3
   i32.store $0 offset=4
   local.get $2
   i32.const 16
   i32.store $0 offset=8
   local.get $3
   i32.const 16
   i32.add
   local.tee $2
   local.get $0
   i32.store $0
   local.get $2
   local.get $0
   i32.store $0 offset=4
   local.get $2
   i32.const 20
   i32.store $0 offset=8
   local.get $2
   i32.const 5
   i32.store $0 offset=12
   i32.const 0
   local.get $1
   i32.load $0 offset=12
   local.tee $3
   local.get $2
   i32.load $0 offset=12
   i32.ne
   br_if $std/array/isArraysEqual<i32>|inlined.44
   drop
   i32.const 1
   local.get $1
   local.tee $0
   local.get $2
   i32.eq
   br_if $std/array/isArraysEqual<i32>|inlined.44
   drop
   i32.const 0
   local.set $1
   loop $for-loop|69
    local.get $1
    local.get $3
    i32.lt_s
    if
     local.get $1
     local.get $0
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $1
     local.get $2
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $1
     i32.const 2
     i32.shl
     local.tee $5
     local.get $0
     i32.load $0 offset=4
     i32.add
     i32.load $0
     local.get $2
     i32.load $0 offset=4
     local.get $5
     i32.add
     i32.load $0
     i32.ne
     br_if $std/array/isArraysEqual<i32>|inlined.44
     drop
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|69
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.45 (result i32)
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $1
   i32.const 44
   i32.add
   local.tee $2
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $2
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 20
   i32.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $2
   i32.const 5824
   i64.load $0
   i64.store $0
   local.get $2
   i32.const 5832
   i64.load $0
   i64.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $0
   i32.const 5840
   i32.load $0
   i32.store $0
   i32.const 5844
   local.set $1
   local.get $0
   i32.const 4
   i32.add
   local.set $0
   i32.const 0
   local.set $3
   local.get $3
   if
    local.get $0
    local.get $1
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $1
   i32.const 44
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 3
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $1
   local.get $2
   i32.store $0
   local.get $1
   local.get $2
   i32.store $0 offset=4
   local.get $1
   i32.const 20
   i32.store $0 offset=8
   local.get $1
   i32.const 5
   i32.store $0 offset=12
   i32.const 7
   local.get $1
   i32.load $0 offset=12
   local.tee $0
   local.get $0
   i32.const 7
   i32.gt_s
   select
   local.set $2
   i32.const 5
   local.get $0
   local.get $2
   i32.sub
   local.tee $3
   local.get $3
   i32.const 5
   i32.gt_s
   select
   local.tee $3
   i32.const 0
   local.get $3
   i32.const 0
   i32.gt_s
   select
   local.tee $3
   i32.const 2
   i32.shl
   local.tee $5
   i32.const 16
   i32.add
   local.tee $10
   i32.const 1073741820
   i32.gt_u
   if
    unreachable
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $11
   i32.const 4
   i32.add
   local.tee $12
   local.get $10
   i32.const 19
   i32.add
   i32.const -16
   i32.and
   i32.const 4
   i32.sub
   local.tee $10
   i32.add
   local.tee $13
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $13
   global.set $~lib/rt/stub/offset
   local.get $11
   local.get $10
   i32.store $0
   local.get $12
   i32.const 4
   i32.sub
   local.tee $10
   i32.const 0
   i32.store $0 offset=4
   local.get $10
   local.get $5
   i32.store $0 offset=8
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $10
   i32.const 4
   i32.add
   local.tee $11
   i32.const 44
   i32.add
   local.tee $13
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $13
   global.set $~lib/rt/stub/offset
   local.get $10
   i32.const 44
   i32.store $0
   local.get $11
   i32.const 4
   i32.sub
   local.tee $10
   i32.const 3
   i32.store $0 offset=4
   local.get $10
   i32.const 16
   i32.store $0 offset=8
   local.get $11
   i32.const 16
   i32.add
   local.tee $10
   local.get $12
   i32.const 16
   i32.add
   local.tee $11
   i32.store $0
   local.get $10
   local.get $11
   i32.store $0 offset=4
   local.get $10
   local.get $5
   i32.store $0 offset=8
   local.get $10
   local.get $3
   i32.store $0 offset=12
   local.get $10
   i32.load $0 offset=4
   local.get $1
   i32.load $0 offset=4
   local.tee $5
   local.get $2
   i32.const 2
   i32.shl
   i32.add
   local.tee $11
   local.get $3
   i32.const 2
   i32.shl
   memory.copy $0 $0
   local.get $2
   local.get $3
   i32.add
   local.tee $2
   local.get $0
   i32.ne
   if
    local.get $11
    local.get $5
    local.get $2
    i32.const 2
    i32.shl
    i32.add
    local.get $0
    local.get $2
    i32.sub
    i32.const 2
    i32.shl
    memory.copy $0 $0
   end
   local.get $1
   local.get $0
   local.get $3
   i32.sub
   i32.store $0 offset=12
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $2
   i32.const 28
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 28
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 0
   i32.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.set $0
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $2
   i32.const 4
   i32.add
   local.tee $3
   i32.const 44
   i32.add
   local.tee $5
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $5
   global.set $~lib/rt/stub/offset
   local.get $2
   i32.const 44
   i32.store $0
   local.get $3
   i32.const 4
   i32.sub
   local.tee $2
   i32.const 3
   i32.store $0 offset=4
   local.get $2
   i32.const 16
   i32.store $0 offset=8
   local.get $3
   i32.const 16
   i32.add
   local.tee $2
   local.get $0
   i32.store $0
   local.get $2
   local.get $0
   i32.store $0 offset=4
   local.get $2
   i32.const 0
   i32.store $0 offset=8
   local.get $2
   i32.const 0
   i32.store $0 offset=12
   i32.const 0
   local.get $10
   i32.load $0 offset=12
   local.tee $3
   local.get $2
   i32.load $0 offset=12
   i32.ne
   br_if $std/array/isArraysEqual<i32>|inlined.45
   drop
   i32.const 1
   local.get $2
   local.get $10
   i32.eq
   br_if $std/array/isArraysEqual<i32>|inlined.45
   drop
   i32.const 0
   local.set $0
   loop $for-loop|70
    local.get $0
    local.get $3
    i32.lt_s
    if
     local.get $0
     local.get $10
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $0
     local.get $2
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $0
     i32.const 2
     i32.shl
     local.tee $5
     local.get $10
     i32.load $0 offset=4
     i32.add
     i32.load $0
     local.get $2
     i32.load $0 offset=4
     local.get $5
     i32.add
     i32.load $0
     i32.ne
     br_if $std/array/isArraysEqual<i32>|inlined.45
     drop
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|70
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.46 (result i32)
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $2
   i32.const 44
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 20
   i32.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $0
   i32.const 5904
   i64.load $0
   i64.store $0
   local.get $0
   i32.const 5912
   i64.load $0
   i64.store $0 offset=8
   local.get $0
   i32.const 16
   i32.add
   i32.const 5920
   i32.load $0
   i32.store $0
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $2
   i32.const 4
   i32.add
   local.tee $3
   i32.const 44
   i32.add
   local.tee $5
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $5
   global.set $~lib/rt/stub/offset
   local.get $2
   i32.const 44
   i32.store $0
   local.get $3
   i32.const 4
   i32.sub
   local.tee $2
   i32.const 3
   i32.store $0 offset=4
   local.get $2
   i32.const 16
   i32.store $0 offset=8
   local.get $3
   i32.const 16
   i32.add
   local.tee $2
   local.get $0
   i32.store $0
   local.get $2
   local.get $0
   i32.store $0 offset=4
   local.get $2
   i32.const 20
   i32.store $0 offset=8
   local.get $2
   i32.const 5
   i32.store $0 offset=12
   i32.const 0
   local.get $1
   i32.load $0 offset=12
   local.tee $3
   local.get $2
   i32.load $0 offset=12
   i32.ne
   br_if $std/array/isArraysEqual<i32>|inlined.46
   drop
   i32.const 1
   local.get $1
   local.tee $0
   local.get $2
   i32.eq
   br_if $std/array/isArraysEqual<i32>|inlined.46
   drop
   i32.const 0
   local.set $1
   loop $for-loop|71
    local.get $1
    local.get $3
    i32.lt_s
    if
     local.get $1
     local.get $0
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $1
     local.get $2
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $1
     i32.const 2
     i32.shl
     local.tee $5
     local.get $0
     i32.load $0 offset=4
     i32.add
     i32.load $0
     local.get $2
     i32.load $0 offset=4
     local.get $5
     i32.add
     i32.load $0
     i32.ne
     br_if $std/array/isArraysEqual<i32>|inlined.46
     drop
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|71
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 28
  i32.add
  local.tee $2
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $2
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 28
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0 offset=8
  local.get $1
  i32.const 16
  i32.add
  local.set $0
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $1
  i32.const 4
  i32.add
  local.tee $2
  i32.const 44
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $1
  i32.const 44
  i32.store $0
  local.get $2
  i32.const 4
  i32.sub
  local.tee $1
  i32.const 9
  i32.store $0 offset=4
  local.get $1
  i32.const 16
  i32.store $0 offset=8
  local.get $2
  i32.const 16
  i32.add
  local.get $0
  i32.store $0
  local.get $2
  local.get $0
  i32.store $0 offset=20
  local.get $2
  i32.const 0
  i32.store $0 offset=24
  local.get $2
  i32.const 0
  i32.store $0 offset=28
  i32.const 1
  local.get $2
  i32.load $0 offset=28
  local.tee $0
  local.get $0
  i32.const 1
  i32.gt_s
  select
  local.set $1
  i32.const 2
  local.get $0
  local.get $1
  i32.sub
  local.tee $3
  local.get $3
  i32.const 2
  i32.gt_s
  select
  local.tee $3
  i32.const 0
  local.get $3
  i32.const 0
  i32.gt_s
  select
  local.tee $3
  i32.const 2
  i32.shl
  local.tee $5
  i32.const 16
  i32.add
  local.tee $10
  i32.const 1073741820
  i32.gt_u
  if
   unreachable
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $11
  i32.const 4
  i32.add
  local.tee $12
  local.get $10
  i32.const 19
  i32.add
  i32.const -16
  i32.and
  i32.const 4
  i32.sub
  local.tee $10
  i32.add
  local.tee $13
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $13
  global.set $~lib/rt/stub/offset
  local.get $11
  local.get $10
  i32.store $0
  local.get $12
  i32.const 4
  i32.sub
  local.tee $10
  i32.const 0
  i32.store $0 offset=4
  local.get $10
  local.get $5
  i32.store $0 offset=8
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $10
  i32.const 4
  i32.add
  local.tee $11
  i32.const 44
  i32.add
  local.tee $13
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $13
  global.set $~lib/rt/stub/offset
  local.get $10
  i32.const 44
  i32.store $0
  local.get $11
  i32.const 4
  i32.sub
  local.tee $10
  i32.const 9
  i32.store $0 offset=4
  local.get $10
  i32.const 16
  i32.store $0 offset=8
  local.get $11
  local.get $12
  i32.const 16
  i32.add
  local.tee $10
  i32.store $0 offset=16
  local.get $11
  local.get $10
  i32.store $0 offset=20
  local.get $11
  local.get $5
  i32.store $0 offset=24
  local.get $11
  local.get $3
  i32.store $0 offset=28
  local.get $11
  i32.load $0 offset=20
  local.get $2
  i32.load $0 offset=20
  local.tee $5
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  local.tee $10
  local.get $3
  i32.const 2
  i32.shl
  memory.copy $0 $0
  local.get $1
  local.get $3
  i32.add
  local.tee $1
  local.get $0
  i32.ne
  if
   local.get $10
   local.get $5
   local.get $1
   i32.const 2
   i32.shl
   i32.add
   local.get $0
   local.get $1
   i32.sub
   i32.const 2
   i32.shl
   memory.copy $0 $0
  end
  local.get $2
  local.get $0
  local.get $3
  i32.sub
  i32.store $0 offset=28
  local.get $11
  i32.load $0 offset=28
  if
   unreachable
  end
  local.get $2
  i32.load $0 offset=28
  if
   unreachable
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 44
  i32.add
  local.tee $2
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $2
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 44
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 0
  i32.store $0 offset=4
  local.get $0
  i32.const 20
  i32.store $0 offset=8
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $2
  i32.const 44
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 44
  i32.store $0
  local.get $2
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 9
  i32.store $0 offset=4
  local.get $0
  i32.const 16
  i32.store $0 offset=8
  local.get $2
  i32.const 16
  i32.add
  local.get $1
  i32.const 16
  i32.add
  local.tee $0
  i32.store $0
  local.get $2
  local.get $0
  i32.store $0 offset=20
  local.get $2
  i32.const 20
  i32.store $0 offset=24
  local.get $2
  i32.const 5
  i32.store $0 offset=28
  local.get $2
  i32.load $0 offset=20
  drop
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 28
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 28
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 4
  i32.store $0 offset=4
  local.get $0
  i32.const 4
  i32.store $0 offset=8
  local.get $1
  i32.const 1
  i32.store $0 offset=16
  local.get $2
  i32.load $0 offset=20
  local.get $1
  i32.const 16
  i32.add
  i32.store $0
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 28
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 28
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 4
  i32.store $0 offset=4
  local.get $0
  i32.const 4
  i32.store $0 offset=8
  local.get $1
  i32.const 2
  i32.store $0 offset=16
  local.get $2
  i32.load $0 offset=20
  local.get $1
  i32.const 16
  i32.add
  i32.store $0 offset=4
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 28
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 28
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 4
  i32.store $0 offset=4
  local.get $0
  i32.const 4
  i32.store $0 offset=8
  local.get $1
  i32.const 3
  i32.store $0 offset=16
  local.get $2
  i32.load $0 offset=20
  local.get $1
  i32.const 16
  i32.add
  i32.store $0 offset=8
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 28
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 28
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 4
  i32.store $0 offset=4
  local.get $0
  i32.const 4
  i32.store $0 offset=8
  local.get $1
  i32.const 4
  i32.store $0 offset=16
  local.get $2
  i32.load $0 offset=20
  local.get $1
  i32.const 16
  i32.add
  i32.store $0 offset=12
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 28
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 28
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 4
  i32.store $0 offset=4
  local.get $0
  i32.const 4
  i32.store $0 offset=8
  local.get $1
  i32.const 5
  i32.store $0 offset=16
  local.get $2
  i32.load $0 offset=20
  local.get $1
  i32.const 16
  i32.add
  i32.store $0 offset=16
  i32.const 2
  local.get $2
  i32.load $0 offset=28
  local.tee $0
  local.get $0
  i32.const 2
  i32.gt_s
  select
  local.set $1
  i32.const 2
  local.get $0
  local.get $1
  i32.sub
  local.tee $3
  local.get $3
  i32.const 2
  i32.gt_s
  select
  local.tee $3
  i32.const 0
  local.get $3
  i32.const 0
  i32.gt_s
  select
  local.tee $3
  i32.const 2
  i32.shl
  local.set $5
  local.get $5
  i32.const 16
  i32.add
  local.tee $10
  i32.const 1073741820
  i32.gt_u
  if
   unreachable
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $11
  i32.const 4
  i32.add
  local.tee $12
  local.get $10
  i32.const 19
  i32.add
  i32.const -16
  i32.and
  i32.const 4
  i32.sub
  local.tee $10
  i32.add
  local.tee $13
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $13
  global.set $~lib/rt/stub/offset
  local.get $11
  local.get $10
  i32.store $0
  local.get $12
  i32.const 4
  i32.sub
  local.tee $10
  i32.const 0
  i32.store $0 offset=4
  local.get $10
  local.get $5
  i32.store $0 offset=8
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $10
  i32.const 4
  i32.add
  local.tee $11
  i32.const 44
  i32.add
  local.tee $13
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $13
  global.set $~lib/rt/stub/offset
  local.get $10
  i32.const 44
  i32.store $0
  local.get $11
  i32.const 4
  i32.sub
  local.tee $10
  i32.const 9
  i32.store $0 offset=4
  local.get $10
  i32.const 16
  i32.store $0 offset=8
  local.get $11
  i32.const 16
  i32.add
  local.tee $10
  local.get $12
  i32.const 16
  i32.add
  local.tee $11
  i32.store $0
  local.get $10
  local.get $11
  i32.store $0 offset=4
  local.get $10
  local.get $5
  i32.store $0 offset=8
  local.get $10
  local.get $3
  i32.store $0 offset=12
  local.get $10
  i32.load $0 offset=4
  local.get $2
  i32.load $0 offset=20
  local.tee $5
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  local.tee $11
  local.get $3
  i32.const 2
  i32.shl
  memory.copy $0 $0
  local.get $1
  local.get $3
  i32.add
  local.tee $1
  local.get $0
  i32.ne
  if
   local.get $11
   local.get $5
   local.get $1
   i32.const 2
   i32.shl
   i32.add
   local.get $0
   local.get $1
   i32.sub
   i32.const 2
   i32.shl
   memory.copy $0 $0
  end
  local.get $2
  local.get $0
  local.get $3
  i32.sub
  i32.store $0 offset=28
  local.get $10
  i32.load $0 offset=12
  i32.const 2
  i32.ne
  if
   unreachable
  end
  local.get $10
  i32.load $0 offset=12
  i32.eqz
  if
   unreachable
  end
  local.get $10
  i32.load $0 offset=4
  i32.load $0
  local.tee $0
  i32.eqz
  if
   unreachable
  end
  local.get $0
  i32.load $0
  i32.const 3
  i32.ne
  if
   unreachable
  end
  local.get $10
  i32.load $0 offset=12
  i32.const 1
  i32.le_u
  if
   unreachable
  end
  local.get $10
  i32.load $0 offset=4
  i32.load $0 offset=4
  local.tee $0
  i32.eqz
  if
   unreachable
  end
  local.get $0
  i32.load $0
  i32.const 4
  i32.ne
  if
   unreachable
  end
  local.get $2
  i32.load $0 offset=28
  i32.const 3
  i32.ne
  if
   unreachable
  end
  local.get $2
  i32.load $0 offset=28
  i32.eqz
  if
   unreachable
  end
  local.get $2
  i32.load $0 offset=20
  i32.load $0
  local.tee $0
  i32.eqz
  if
   unreachable
  end
  local.get $0
  i32.load $0
  i32.const 1
  i32.ne
  if
   unreachable
  end
  local.get $2
  i32.load $0 offset=28
  i32.const 1
  i32.le_u
  if
   unreachable
  end
  local.get $2
  i32.load $0 offset=20
  i32.load $0 offset=4
  local.tee $0
  i32.eqz
  if
   unreachable
  end
  local.get $0
  i32.load $0
  i32.const 2
  i32.ne
  if
   unreachable
  end
  local.get $2
  i32.load $0 offset=28
  i32.const 2
  i32.le_u
  if
   unreachable
  end
  local.get $2
  i32.load $0 offset=20
  i32.load $0 offset=8
  local.tee $0
  i32.eqz
  if
   unreachable
  end
  local.get $0
  i32.load $0
  i32.const 5
  i32.ne
  if
   unreachable
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 28
  i32.add
  local.tee $2
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $2
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 28
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 0
  i32.store $0 offset=4
  local.get $0
  i32.const 12
  i32.store $0 offset=8
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $2
  i32.const 44
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 44
  i32.store $0
  local.get $2
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 13
  i32.store $0 offset=4
  local.get $0
  i32.const 16
  i32.store $0 offset=8
  local.get $2
  local.get $1
  i32.const 16
  i32.add
  local.tee $0
  i32.store $0 offset=16
  local.get $2
  local.get $0
  i32.store $0 offset=20
  local.get $2
  i32.const 12
  i32.store $0 offset=24
  local.get $2
  i32.const 3
  i32.store $0 offset=28
  local.get $2
  i32.load $0 offset=20
  drop
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 28
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 28
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 4
  i32.store $0 offset=4
  local.get $0
  i32.const 4
  i32.store $0 offset=8
  local.get $1
  i32.const 1
  i32.store $0 offset=16
  local.get $2
  i32.load $0 offset=20
  local.get $1
  i32.const 16
  i32.add
  i32.store $0
  local.get $2
  i32.load $0 offset=20
  i32.const 0
  i32.store $0 offset=4
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 28
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 28
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 4
  i32.store $0 offset=4
  local.get $0
  i32.const 4
  i32.store $0 offset=8
  local.get $1
  i32.const 2
  i32.store $0 offset=16
  local.get $2
  i32.load $0 offset=20
  local.get $1
  i32.const 16
  i32.add
  i32.store $0 offset=8
  local.get $2
  i32.load $0 offset=28
  local.tee $0
  i32.const 0
  local.get $0
  i32.const 0
  i32.le_s
  select
  local.set $1
  i32.const 1
  local.get $0
  local.get $1
  i32.sub
  local.tee $3
  local.get $3
  i32.const 1
  i32.gt_s
  select
  local.tee $3
  i32.const 0
  local.get $3
  i32.const 0
  i32.gt_s
  select
  local.tee $3
  i32.const 2
  i32.shl
  local.tee $5
  i32.const 16
  i32.add
  local.tee $10
  i32.const 1073741820
  i32.gt_u
  if
   unreachable
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $11
  i32.const 4
  i32.add
  local.tee $12
  local.get $10
  i32.const 19
  i32.add
  i32.const -16
  i32.and
  i32.const 4
  i32.sub
  local.tee $10
  i32.add
  local.tee $13
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $13
  global.set $~lib/rt/stub/offset
  local.get $11
  local.get $10
  i32.store $0
  local.get $12
  i32.const 4
  i32.sub
  local.tee $10
  i32.const 0
  i32.store $0 offset=4
  local.get $10
  local.get $5
  i32.store $0 offset=8
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $10
  i32.const 4
  i32.add
  local.tee $11
  i32.const 44
  i32.add
  local.tee $13
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $13
  global.set $~lib/rt/stub/offset
  local.get $10
  i32.const 44
  i32.store $0
  local.get $11
  i32.const 4
  i32.sub
  local.tee $10
  i32.const 13
  i32.store $0 offset=4
  local.get $10
  i32.const 16
  i32.store $0 offset=8
  local.get $11
  local.get $12
  i32.const 16
  i32.add
  local.tee $10
  i32.store $0 offset=16
  local.get $11
  local.get $10
  i32.store $0 offset=20
  local.get $11
  local.get $5
  i32.store $0 offset=24
  local.get $11
  local.get $3
  i32.store $0 offset=28
  local.get $11
  i32.load $0 offset=20
  local.get $2
  i32.load $0 offset=20
  local.tee $5
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  local.tee $10
  local.get $3
  i32.const 2
  i32.shl
  memory.copy $0 $0
  local.get $1
  local.get $3
  i32.add
  local.tee $1
  local.get $0
  i32.ne
  if
   local.get $10
   local.get $5
   local.get $1
   i32.const 2
   i32.shl
   i32.add
   local.get $0
   local.get $1
   i32.sub
   i32.const 2
   i32.shl
   memory.copy $0 $0
  end
  local.get $2
  local.get $0
  local.get $3
  i32.sub
  i32.store $0 offset=28
  local.get $11
  i32.load $0 offset=28
  i32.const 1
  i32.ne
  if
   unreachable
  end
  local.get $11
  i32.load $0 offset=28
  i32.eqz
  if
   unreachable
  end
  local.get $11
  i32.load $0 offset=20
  i32.load $0
  local.tee $0
  i32.eqz
  if
   unreachable
  end
  local.get $0
  i32.load $0
  i32.const 1
  i32.ne
  if
   unreachable
  end
  local.get $2
  i32.load $0 offset=28
  i32.const 2
  i32.ne
  if
   unreachable
  end
  local.get $2
  i32.load $0 offset=28
  i32.eqz
  if
   unreachable
  end
  local.get $2
  i32.load $0 offset=20
  i32.load $0
  if
   unreachable
  end
  local.get $2
  i32.load $0 offset=28
  i32.const 1
  i32.le_u
  if
   unreachable
  end
  local.get $2
  i32.load $0 offset=20
  i32.load $0 offset=4
  local.tee $0
  i32.eqz
  if
   unreachable
  end
  local.get $0
  i32.load $0
  i32.const 2
  i32.ne
  if
   unreachable
  end
  global.get $std/array/arr
  local.tee $2
  i32.load $0 offset=12
  i32.eqz
  if
   local.get $2
   i32.load $0 offset=8
   local.tee $3
   i32.const 2
   i32.shr_u
   i32.eqz
   if
    local.get $2
    i32.load $0
    local.set $5
    i32.const 32
    i32.const 1073741820
    local.get $3
    i32.const 1
    i32.shl
    local.tee $0
    local.get $0
    i32.const 1073741820
    i32.ge_u
    select
    local.tee $0
    local.get $0
    i32.const 32
    i32.le_u
    select
    local.tee $10
    i32.const 1073741804
    i32.gt_u
    if
     unreachable
    end
    local.get $5
    i32.const 16
    i32.sub
    local.tee $0
    i32.const 15
    i32.and
    i32.const 1
    local.get $0
    select
    if
     unreachable
    end
    global.get $~lib/rt/stub/offset
    local.get $0
    i32.const 4
    i32.sub
    local.tee $1
    i32.load $0
    local.tee $11
    local.get $0
    i32.add
    i32.eq
    local.set $12
    local.get $10
    i32.const 16
    i32.add
    local.tee $13
    i32.const 19
    i32.add
    i32.const -16
    i32.and
    i32.const 4
    i32.sub
    local.set $14
    local.get $11
    local.get $13
    i32.lt_u
    if
     local.get $12
     if
      local.get $13
      i32.const 1073741820
      i32.gt_u
      if
       unreachable
      end
      local.get $0
      local.get $14
      i32.add
      local.tee $11
      memory.size $0
      i32.const 16
      i32.shl
      i32.const 15
      i32.add
      i32.const -16
      i32.and
      i32.gt_u
      if
       unreachable
      end
      local.get $11
      global.set $~lib/rt/stub/offset
      local.get $1
      local.get $14
      i32.store $0
     else
      local.get $14
      local.get $11
      i32.const 1
      i32.shl
      local.tee $1
      local.get $1
      local.get $14
      i32.lt_u
      select
      local.tee $12
      i32.const 1073741820
      i32.gt_u
      if
       unreachable
      end
      global.get $~lib/rt/stub/offset
      i32.eqz
      if
       i32.const 9932
       global.set $~lib/rt/stub/offset
      end
      global.get $~lib/rt/stub/offset
      local.tee $1
      local.set $13
      local.get $1
      i32.const 4
      i32.add
      local.tee $1
      local.get $12
      i32.const 19
      i32.add
      i32.const -16
      i32.and
      i32.const 4
      i32.sub
      local.tee $12
      i32.add
      local.tee $14
      memory.size $0
      i32.const 16
      i32.shl
      i32.const 15
      i32.add
      i32.const -16
      i32.and
      i32.gt_u
      if
       unreachable
      end
      local.get $14
      global.set $~lib/rt/stub/offset
      local.get $13
      local.get $12
      i32.store $0
      local.get $1
      local.get $0
      local.get $11
      memory.copy $0 $0
      local.get $1
      local.set $0
     end
    else
     local.get $12
     if
      local.get $0
      local.get $14
      i32.add
      global.set $~lib/rt/stub/offset
      local.get $1
      local.get $14
      i32.store $0
     end
    end
    local.get $0
    i32.const 4
    i32.sub
    local.get $10
    i32.store $0 offset=8
    local.get $0
    i32.const 16
    i32.add
    local.tee $0
    local.get $3
    i32.add
    i32.const 0
    local.get $10
    local.get $3
    i32.sub
    memory.fill $0
    local.get $0
    local.get $5
    i32.ne
    if
     local.get $2
     local.get $0
     i32.store $0
     local.get $2
     local.get $0
     i32.store $0 offset=4
    end
    local.get $2
    local.get $10
    i32.store $0 offset=8
   end
   local.get $2
   i32.const 1
   i32.store $0 offset=12
  end
  local.get $2
  i32.load $0 offset=4
  i32.const 0
  i32.store $0
  global.get $std/array/arr
  local.tee $2
  i32.load $0 offset=12
  i32.const 1
  i32.le_u
  if
   local.get $2
   i32.load $0 offset=8
   local.tee $3
   i32.const 2
   i32.shr_u
   i32.const 2
   i32.lt_u
   if
    local.get $2
    i32.load $0
    local.set $5
    i32.const 32
    i32.const 1073741820
    local.get $3
    i32.const 1
    i32.shl
    local.tee $0
    local.get $0
    i32.const 1073741820
    i32.ge_u
    select
    local.tee $0
    local.get $0
    i32.const 32
    i32.le_u
    select
    local.tee $10
    i32.const 1073741804
    i32.gt_u
    if
     unreachable
    end
    local.get $5
    i32.const 16
    i32.sub
    local.tee $0
    i32.const 15
    i32.and
    i32.const 1
    local.get $0
    select
    if
     unreachable
    end
    global.get $~lib/rt/stub/offset
    local.get $0
    i32.const 4
    i32.sub
    local.tee $1
    i32.load $0
    local.tee $11
    local.get $0
    i32.add
    i32.eq
    local.set $12
    local.get $10
    i32.const 16
    i32.add
    local.tee $13
    i32.const 19
    i32.add
    i32.const -16
    i32.and
    i32.const 4
    i32.sub
    local.set $14
    local.get $11
    local.get $13
    i32.lt_u
    if
     local.get $12
     if
      local.get $13
      i32.const 1073741820
      i32.gt_u
      if
       unreachable
      end
      local.get $0
      local.get $14
      i32.add
      local.tee $11
      memory.size $0
      i32.const 16
      i32.shl
      i32.const 15
      i32.add
      i32.const -16
      i32.and
      i32.gt_u
      if
       unreachable
      end
      local.get $11
      global.set $~lib/rt/stub/offset
      local.get $1
      local.get $14
      i32.store $0
     else
      local.get $14
      local.get $11
      i32.const 1
      i32.shl
      local.tee $1
      local.get $1
      local.get $14
      i32.lt_u
      select
      local.tee $12
      i32.const 1073741820
      i32.gt_u
      if
       unreachable
      end
      global.get $~lib/rt/stub/offset
      i32.eqz
      if
       i32.const 9932
       global.set $~lib/rt/stub/offset
      end
      global.get $~lib/rt/stub/offset
      local.tee $1
      local.set $13
      local.get $1
      i32.const 4
      i32.add
      local.tee $1
      local.get $12
      i32.const 19
      i32.add
      i32.const -16
      i32.and
      i32.const 4
      i32.sub
      local.tee $12
      i32.add
      local.tee $14
      memory.size $0
      i32.const 16
      i32.shl
      i32.const 15
      i32.add
      i32.const -16
      i32.and
      i32.gt_u
      if
       unreachable
      end
      local.get $14
      global.set $~lib/rt/stub/offset
      local.get $13
      local.get $12
      i32.store $0
      local.get $1
      local.get $0
      local.get $11
      memory.copy $0 $0
      local.get $1
      local.set $0
     end
    else
     local.get $12
     if
      local.get $0
      local.get $14
      i32.add
      global.set $~lib/rt/stub/offset
      local.get $1
      local.get $14
      i32.store $0
     end
    end
    local.get $0
    i32.const 4
    i32.sub
    local.get $10
    i32.store $0 offset=8
    local.get $0
    i32.const 16
    i32.add
    local.tee $0
    local.get $3
    i32.add
    i32.const 0
    local.get $10
    local.get $3
    i32.sub
    memory.fill $0
    local.get $0
    local.get $5
    i32.ne
    if
     local.get $2
     local.get $0
     i32.store $0
     local.get $2
     local.get $0
     i32.store $0 offset=4
    end
    local.get $2
    local.get $10
    i32.store $0 offset=8
   end
   local.get $2
   i32.const 2
   i32.store $0 offset=12
  end
  local.get $2
  i32.load $0 offset=4
  i32.const 1
  i32.store $0 offset=4
  global.get $std/array/arr
  local.tee $2
  i32.load $0 offset=12
  i32.const 2
  i32.le_u
  if
   local.get $2
   i32.load $0 offset=8
   local.tee $3
   i32.const 2
   i32.shr_u
   i32.const 3
   i32.lt_u
   if
    local.get $2
    i32.load $0
    local.set $5
    i32.const 32
    i32.const 1073741820
    local.get $3
    i32.const 1
    i32.shl
    local.tee $0
    local.get $0
    i32.const 1073741820
    i32.ge_u
    select
    local.tee $0
    local.get $0
    i32.const 32
    i32.le_u
    select
    local.tee $10
    i32.const 1073741804
    i32.gt_u
    if
     unreachable
    end
    local.get $5
    i32.const 16
    i32.sub
    local.tee $0
    i32.const 15
    i32.and
    i32.const 1
    local.get $0
    select
    if
     unreachable
    end
    global.get $~lib/rt/stub/offset
    local.get $0
    i32.const 4
    i32.sub
    local.tee $1
    i32.load $0
    local.tee $11
    local.get $0
    i32.add
    i32.eq
    local.set $12
    local.get $10
    i32.const 16
    i32.add
    local.tee $13
    i32.const 19
    i32.add
    i32.const -16
    i32.and
    i32.const 4
    i32.sub
    local.set $14
    local.get $11
    local.get $13
    i32.lt_u
    if
     local.get $12
     if
      local.get $13
      i32.const 1073741820
      i32.gt_u
      if
       unreachable
      end
      local.get $0
      local.get $14
      i32.add
      local.tee $11
      memory.size $0
      i32.const 16
      i32.shl
      i32.const 15
      i32.add
      i32.const -16
      i32.and
      i32.gt_u
      if
       unreachable
      end
      local.get $11
      global.set $~lib/rt/stub/offset
      local.get $1
      local.get $14
      i32.store $0
     else
      local.get $14
      local.get $11
      i32.const 1
      i32.shl
      local.tee $1
      local.get $1
      local.get $14
      i32.lt_u
      select
      local.tee $12
      i32.const 1073741820
      i32.gt_u
      if
       unreachable
      end
      global.get $~lib/rt/stub/offset
      i32.eqz
      if
       i32.const 9932
       global.set $~lib/rt/stub/offset
      end
      global.get $~lib/rt/stub/offset
      local.tee $1
      local.set $13
      local.get $1
      i32.const 4
      i32.add
      local.tee $1
      local.get $12
      i32.const 19
      i32.add
      i32.const -16
      i32.and
      i32.const 4
      i32.sub
      local.tee $12
      i32.add
      local.tee $14
      memory.size $0
      i32.const 16
      i32.shl
      i32.const 15
      i32.add
      i32.const -16
      i32.and
      i32.gt_u
      if
       unreachable
      end
      local.get $14
      global.set $~lib/rt/stub/offset
      local.get $13
      local.get $12
      i32.store $0
      local.get $1
      local.get $0
      local.get $11
      memory.copy $0 $0
      local.get $1
      local.set $0
     end
    else
     local.get $12
     if
      local.get $0
      local.get $14
      i32.add
      global.set $~lib/rt/stub/offset
      local.get $1
      local.get $14
      i32.store $0
     end
    end
    local.get $0
    i32.const 4
    i32.sub
    local.get $10
    i32.store $0 offset=8
    local.get $0
    i32.const 16
    i32.add
    local.tee $0
    local.get $3
    i32.add
    i32.const 0
    local.get $10
    local.get $3
    i32.sub
    memory.fill $0
    local.get $0
    local.get $5
    i32.ne
    if
     local.get $2
     local.get $0
     i32.store $0
     local.get $2
     local.get $0
     i32.store $0 offset=4
    end
    local.get $2
    local.get $10
    i32.store $0 offset=8
   end
   local.get $2
   i32.const 3
   i32.store $0 offset=12
  end
  local.get $2
  i32.load $0 offset=4
  i32.const 2
  i32.store $0 offset=8
  global.get $std/array/arr
  local.tee $2
  i32.load $0 offset=12
  i32.const 3
  i32.le_u
  if
   local.get $2
   i32.load $0 offset=8
   local.tee $3
   i32.const 2
   i32.shr_u
   i32.const 4
   i32.lt_u
   if
    local.get $2
    i32.load $0
    local.set $5
    i32.const 32
    i32.const 1073741820
    local.get $3
    i32.const 1
    i32.shl
    local.tee $0
    local.get $0
    i32.const 1073741820
    i32.ge_u
    select
    local.tee $0
    local.get $0
    i32.const 32
    i32.le_u
    select
    local.tee $10
    i32.const 1073741804
    i32.gt_u
    if
     unreachable
    end
    local.get $5
    i32.const 16
    i32.sub
    local.tee $0
    i32.const 15
    i32.and
    i32.const 1
    local.get $0
    select
    if
     unreachable
    end
    global.get $~lib/rt/stub/offset
    local.get $0
    i32.const 4
    i32.sub
    local.tee $1
    i32.load $0
    local.tee $11
    local.get $0
    i32.add
    i32.eq
    local.set $12
    local.get $10
    i32.const 16
    i32.add
    local.tee $13
    i32.const 19
    i32.add
    i32.const -16
    i32.and
    i32.const 4
    i32.sub
    local.set $14
    local.get $11
    local.get $13
    i32.lt_u
    if
     local.get $12
     if
      local.get $13
      i32.const 1073741820
      i32.gt_u
      if
       unreachable
      end
      local.get $0
      local.get $14
      i32.add
      local.tee $11
      memory.size $0
      i32.const 16
      i32.shl
      i32.const 15
      i32.add
      i32.const -16
      i32.and
      i32.gt_u
      if
       unreachable
      end
      local.get $11
      global.set $~lib/rt/stub/offset
      local.get $1
      local.get $14
      i32.store $0
     else
      local.get $14
      local.get $11
      i32.const 1
      i32.shl
      local.tee $1
      local.get $1
      local.get $14
      i32.lt_u
      select
      local.tee $12
      i32.const 1073741820
      i32.gt_u
      if
       unreachable
      end
      global.get $~lib/rt/stub/offset
      i32.eqz
      if
       i32.const 9932
       global.set $~lib/rt/stub/offset
      end
      global.get $~lib/rt/stub/offset
      local.tee $1
      local.set $13
      local.get $1
      i32.const 4
      i32.add
      local.tee $1
      local.get $12
      i32.const 19
      i32.add
      i32.const -16
      i32.and
      i32.const 4
      i32.sub
      local.tee $12
      i32.add
      local.tee $14
      memory.size $0
      i32.const 16
      i32.shl
      i32.const 15
      i32.add
      i32.const -16
      i32.and
      i32.gt_u
      if
       unreachable
      end
      local.get $14
      global.set $~lib/rt/stub/offset
      local.get $13
      local.get $12
      i32.store $0
      local.get $1
      local.get $0
      local.get $11
      memory.copy $0 $0
      local.get $1
      local.set $0
     end
    else
     local.get $12
     if
      local.get $0
      local.get $14
      i32.add
      global.set $~lib/rt/stub/offset
      local.get $1
      local.get $14
      i32.store $0
     end
    end
    local.get $0
    i32.const 4
    i32.sub
    local.get $10
    i32.store $0 offset=8
    local.get $0
    i32.const 16
    i32.add
    local.tee $0
    local.get $3
    i32.add
    i32.const 0
    local.get $10
    local.get $3
    i32.sub
    memory.fill $0
    local.get $0
    local.get $5
    i32.ne
    if
     local.get $2
     local.get $0
     i32.store $0
     local.get $2
     local.get $0
     i32.store $0 offset=4
    end
    local.get $2
    local.get $10
    i32.store $0 offset=8
   end
   local.get $2
   i32.const 4
   i32.store $0 offset=12
  end
  local.get $2
  i32.load $0 offset=4
  i32.const 3
  i32.store $0 offset=12
  i32.const 0
  local.set $1
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  local.set $2
  block $__inlined_func$~lib/array/Array<i32>#findIndex
   loop $for-loop|0462
    local.get $1
    local.get $2
    local.get $0
    i32.load $0 offset=12
    local.tee $3
    local.get $2
    local.get $3
    i32.lt_s
    select
    i32.lt_s
    if
     local.get $0
     i32.load $0 offset=4
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.get $1
     local.get $0
     i32.const 6112
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     br_if $__inlined_func$~lib/array/Array<i32>#findIndex
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|0462
    end
   end
   i32.const -1
   local.set $1
  end
  local.get $1
  global.set $std/array/i
  global.get $std/array/i
  if
   unreachable
  end
  i32.const 0
  local.set $1
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  local.set $2
  block $__inlined_func$~lib/array/Array<i32>#findIndex464
   loop $for-loop|0466
    local.get $1
    local.get $2
    local.get $0
    i32.load $0 offset=12
    local.tee $3
    local.get $2
    local.get $3
    i32.lt_s
    select
    i32.lt_s
    if
     local.get $0
     i32.load $0 offset=4
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.get $1
     local.get $0
     i32.const 6144
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     br_if $__inlined_func$~lib/array/Array<i32>#findIndex464
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|0466
    end
   end
   i32.const -1
   local.set $1
  end
  local.get $1
  global.set $std/array/i
  global.get $std/array/i
  i32.const 1
  i32.ne
  if
   unreachable
  end
  i32.const 0
  local.set $1
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  local.set $2
  block $__inlined_func$~lib/array/Array<i32>#findIndex468
   loop $for-loop|0470
    local.get $1
    local.get $2
    local.get $0
    i32.load $0 offset=12
    local.tee $3
    local.get $2
    local.get $3
    i32.lt_s
    select
    i32.lt_s
    if
     local.get $0
     i32.load $0 offset=4
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.get $1
     local.get $0
     i32.const 6176
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     br_if $__inlined_func$~lib/array/Array<i32>#findIndex468
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|0470
    end
   end
   i32.const -1
   local.set $1
  end
  local.get $1
  global.set $std/array/i
  global.get $std/array/i
  i32.const -1
  i32.ne
  if
   unreachable
  end
  i32.const 0
  local.set $1
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  local.set $2
  block $__inlined_func$~lib/array/Array<i32>#findIndex472
   loop $for-loop|0474
    local.get $1
    local.get $2
    local.get $0
    i32.load $0 offset=12
    local.tee $3
    local.get $2
    local.get $3
    i32.lt_s
    select
    i32.lt_s
    if
     local.get $0
     i32.load $0 offset=4
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.get $1
     local.get $0
     i32.const 6208
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     br_if $__inlined_func$~lib/array/Array<i32>#findIndex472
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|0474
    end
   end
   i32.const -1
   local.set $1
  end
  local.get $1
  global.set $std/array/i
  global.get $std/array/i
  i32.const -1
  i32.ne
  if
   unreachable
  end
  global.get $std/array/arr
  i32.load $0 offset=12
  i32.const 8
  i32.ne
  if
   unreachable
  end
  i32.const 0
  local.set $1
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  local.set $2
  block $__inlined_func$~lib/array/Array<i32>#findIndex477
   loop $for-loop|0479
    local.get $1
    local.get $2
    local.get $0
    i32.load $0 offset=12
    local.tee $3
    local.get $2
    local.get $3
    i32.lt_s
    select
    i32.lt_s
    if
     local.get $0
     i32.load $0 offset=4
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.get $1
     local.get $0
     i32.const 6240
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     br_if $__inlined_func$~lib/array/Array<i32>#findIndex477
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|0479
    end
   end
   i32.const -1
   local.set $1
  end
  local.get $1
  global.set $std/array/i
  global.get $std/array/i
  i32.const -1
  i32.eq
  if
   unreachable
  end
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  local.tee $1
  i32.const 0
  i32.le_s
  if
   unreachable
  end
  local.get $0
  i32.load $0 offset=4
  local.get $1
  i32.const 1
  i32.sub
  local.tee $1
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  drop
  local.get $0
  local.get $1
  i32.store $0 offset=12
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  local.tee $1
  i32.const 0
  i32.le_s
  if
   unreachable
  end
  local.get $0
  i32.load $0 offset=4
  local.get $1
  i32.const 1
  i32.sub
  local.tee $1
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  drop
  local.get $0
  local.get $1
  i32.store $0 offset=12
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  local.tee $1
  i32.const 0
  i32.le_s
  if
   unreachable
  end
  local.get $0
  i32.load $0 offset=4
  local.get $1
  i32.const 1
  i32.sub
  local.tee $1
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  drop
  local.get $0
  local.get $1
  i32.store $0 offset=12
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  local.tee $1
  i32.const 0
  i32.le_s
  if
   unreachable
  end
  local.get $0
  i32.load $0 offset=4
  local.get $1
  i32.const 1
  i32.sub
  local.tee $1
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  drop
  local.get $0
  local.get $1
  i32.store $0 offset=12
  i32.const 0
  local.set $1
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  local.set $2
  block $__inlined_func$~lib/array/Array<i32>#findIndex481
   loop $for-loop|0483
    local.get $1
    local.get $2
    local.get $0
    i32.load $0 offset=12
    local.tee $3
    local.get $2
    local.get $3
    i32.lt_s
    select
    i32.lt_s
    if
     local.get $0
     i32.load $0 offset=4
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.get $1
     local.get $0
     i32.const 6272
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     br_if $__inlined_func$~lib/array/Array<i32>#findIndex481
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|0483
    end
   end
   i32.const -1
   local.set $1
  end
  local.get $1
  global.set $std/array/i
  global.get $std/array/i
  i32.const -1
  i32.ne
  if
   unreachable
  end
  global.get $std/array/arr
  i32.load $0 offset=12
  i32.const 2
  i32.ne
  if
   unreachable
  end
  global.get $std/array/arr
  local.tee $2
  i32.load $0 offset=12
  local.tee $3
  i32.const 1
  i32.add
  local.tee $5
  local.tee $0
  local.get $2
  i32.load $0 offset=8
  local.tee $10
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   local.get $0
   i32.const 268435455
   i32.gt_u
   if
    unreachable
   end
   local.get $2
   i32.load $0
   local.set $11
   i32.const 1073741820
   local.get $10
   i32.const 1
   i32.shl
   local.tee $1
   local.get $1
   i32.const 1073741820
   i32.ge_u
   select
   local.tee $1
   i32.const 8
   local.get $0
   local.get $0
   i32.const 8
   i32.le_u
   select
   i32.const 2
   i32.shl
   local.tee $0
   local.get $0
   local.get $1
   i32.lt_u
   select
   local.tee $12
   i32.const 1073741804
   i32.gt_u
   if
    unreachable
   end
   local.get $11
   i32.const 16
   i32.sub
   local.tee $0
   i32.const 15
   i32.and
   i32.const 1
   local.get $0
   select
   if
    unreachable
   end
   global.get $~lib/rt/stub/offset
   local.get $0
   i32.const 4
   i32.sub
   local.tee $1
   i32.load $0
   local.tee $13
   local.get $0
   i32.add
   i32.eq
   local.set $14
   local.get $12
   i32.const 16
   i32.add
   local.tee $15
   i32.const 19
   i32.add
   i32.const -16
   i32.and
   i32.const 4
   i32.sub
   local.set $16
   local.get $13
   local.get $15
   i32.lt_u
   if
    local.get $14
    if
     local.get $15
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     local.get $0
     local.get $16
     i32.add
     local.tee $13
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $13
     global.set $~lib/rt/stub/offset
     local.get $1
     local.get $16
     i32.store $0
    else
     local.get $16
     local.get $13
     i32.const 1
     i32.shl
     local.tee $1
     local.get $1
     local.get $16
     i32.lt_u
     select
     local.tee $14
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     global.get $~lib/rt/stub/offset
     i32.eqz
     if
      i32.const 9932
      global.set $~lib/rt/stub/offset
     end
     global.get $~lib/rt/stub/offset
     local.tee $1
     local.set $15
     local.get $1
     i32.const 4
     i32.add
     local.tee $1
     local.get $14
     i32.const 19
     i32.add
     i32.const -16
     i32.and
     i32.const 4
     i32.sub
     local.tee $14
     i32.add
     local.tee $16
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $16
     global.set $~lib/rt/stub/offset
     local.get $15
     local.get $14
     i32.store $0
     local.get $1
     local.get $0
     local.get $13
     memory.copy $0 $0
     local.get $1
     local.set $0
    end
   else
    local.get $14
    if
     local.get $0
     local.get $16
     i32.add
     global.set $~lib/rt/stub/offset
     local.get $1
     local.get $16
     i32.store $0
    end
   end
   local.get $0
   i32.const 4
   i32.sub
   local.get $12
   i32.store $0 offset=8
   local.get $0
   i32.const 16
   i32.add
   local.tee $0
   local.get $10
   i32.add
   i32.const 0
   local.get $12
   local.get $10
   i32.sub
   memory.fill $0
   local.get $0
   local.get $11
   i32.ne
   if
    local.get $2
    local.get $0
    i32.store $0
    local.get $2
    local.get $0
    i32.store $0 offset=4
   end
   local.get $2
   local.get $12
   i32.store $0 offset=8
  end
  local.get $2
  i32.load $0 offset=4
  local.get $3
  i32.const 2
  i32.shl
  i32.add
  i32.const 2
  i32.store $0
  local.get $2
  local.get $5
  i32.store $0 offset=12
  global.get $std/array/arr
  local.tee $2
  i32.load $0 offset=12
  local.tee $3
  i32.const 1
  i32.add
  local.tee $5
  local.tee $0
  local.get $2
  i32.load $0 offset=8
  local.tee $10
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   local.get $0
   i32.const 268435455
   i32.gt_u
   if
    unreachable
   end
   local.get $2
   i32.load $0
   local.set $11
   i32.const 1073741820
   local.get $10
   i32.const 1
   i32.shl
   local.tee $1
   local.get $1
   i32.const 1073741820
   i32.ge_u
   select
   local.tee $1
   i32.const 8
   local.get $0
   local.get $0
   i32.const 8
   i32.le_u
   select
   i32.const 2
   i32.shl
   local.tee $0
   local.get $0
   local.get $1
   i32.lt_u
   select
   local.tee $12
   i32.const 1073741804
   i32.gt_u
   if
    unreachable
   end
   local.get $11
   i32.const 16
   i32.sub
   local.tee $0
   i32.const 15
   i32.and
   i32.const 1
   local.get $0
   select
   if
    unreachable
   end
   global.get $~lib/rt/stub/offset
   local.get $0
   i32.const 4
   i32.sub
   local.tee $1
   i32.load $0
   local.tee $13
   local.get $0
   i32.add
   i32.eq
   local.set $14
   local.get $12
   i32.const 16
   i32.add
   local.tee $15
   i32.const 19
   i32.add
   i32.const -16
   i32.and
   i32.const 4
   i32.sub
   local.set $16
   local.get $13
   local.get $15
   i32.lt_u
   if
    local.get $14
    if
     local.get $15
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     local.get $0
     local.get $16
     i32.add
     local.tee $13
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $13
     global.set $~lib/rt/stub/offset
     local.get $1
     local.get $16
     i32.store $0
    else
     local.get $16
     local.get $13
     i32.const 1
     i32.shl
     local.tee $1
     local.get $1
     local.get $16
     i32.lt_u
     select
     local.tee $14
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     global.get $~lib/rt/stub/offset
     i32.eqz
     if
      i32.const 9932
      global.set $~lib/rt/stub/offset
     end
     global.get $~lib/rt/stub/offset
     local.tee $1
     local.set $15
     local.get $1
     i32.const 4
     i32.add
     local.tee $1
     local.get $14
     i32.const 19
     i32.add
     i32.const -16
     i32.and
     i32.const 4
     i32.sub
     local.tee $14
     i32.add
     local.tee $16
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $16
     global.set $~lib/rt/stub/offset
     local.get $15
     local.get $14
     i32.store $0
     local.get $1
     local.get $0
     local.get $13
     memory.copy $0 $0
     local.get $1
     local.set $0
    end
   else
    local.get $14
    if
     local.get $0
     local.get $16
     i32.add
     global.set $~lib/rt/stub/offset
     local.get $1
     local.get $16
     i32.store $0
    end
   end
   local.get $0
   i32.const 4
   i32.sub
   local.get $12
   i32.store $0 offset=8
   local.get $0
   i32.const 16
   i32.add
   local.tee $0
   local.get $10
   i32.add
   i32.const 0
   local.get $12
   local.get $10
   i32.sub
   memory.fill $0
   local.get $0
   local.get $11
   i32.ne
   if
    local.get $2
    local.get $0
    i32.store $0
    local.get $2
    local.get $0
    i32.store $0 offset=4
   end
   local.get $2
   local.get $12
   i32.store $0 offset=8
  end
  local.get $2
  i32.load $0 offset=4
  local.get $3
  i32.const 2
  i32.shl
  i32.add
  i32.const 3
  i32.store $0
  local.get $2
  local.get $5
  i32.store $0 offset=12
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 44
  i32.add
  local.tee $2
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $2
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 44
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 0
  i32.store $0 offset=4
  local.get $0
  i32.const 16
  i32.store $0 offset=8
  local.get $1
  i32.const 16
  i32.add
  local.tee $2
  i32.const 6304
  i64.load $0
  i64.store $0
  local.get $2
  i32.const 6312
  i64.load $0
  i64.store $0 offset=8
  i32.const 6320
  local.set $1
  local.get $2
  i32.const 16
  i32.add
  local.set $0
  i32.const 0
  local.set $3
  local.get $3
  if
   local.get $0
   local.get $1
   i32.load8_u $0
   i32.store8 $0
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 44
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 44
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 3
  i32.store $0 offset=4
  local.get $0
  i32.const 16
  i32.store $0 offset=8
  local.get $1
  i32.const 16
  i32.add
  local.tee $1
  local.get $2
  i32.store $0
  local.get $1
  local.get $2
  i32.store $0 offset=4
  local.get $1
  i32.const 16
  i32.store $0 offset=8
  local.get $1
  i32.const 4
  i32.store $0 offset=12
  local.get $1
  i32.load $0 offset=12
  i32.const 1
  i32.sub
  local.set $0
  block $__inlined_func$~lib/array/Array<i32>#findLastIndex
   loop $for-loop|0487
    local.get $0
    i32.const 0
    i32.ge_s
    if
     local.get $1
     i32.load $0 offset=4
     local.get $0
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.get $0
     local.get $1
     i32.const 6352
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     br_if $__inlined_func$~lib/array/Array<i32>#findLastIndex
     local.get $0
     i32.const 1
     i32.sub
     local.set $0
     br $for-loop|0487
    end
   end
   i32.const -1
   local.set $0
  end
  local.get $0
  global.set $std/array/i
  global.get $std/array/i
  if
   unreachable
  end
  local.get $1
  i32.load $0 offset=12
  i32.const 1
  i32.sub
  local.set $0
  block $__inlined_func$~lib/array/Array<i32>#findLastIndex489
   loop $for-loop|0491
    local.get $0
    i32.const 0
    i32.ge_s
    if
     local.get $1
     i32.load $0 offset=4
     local.get $0
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.get $0
     local.get $1
     i32.const 6384
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     br_if $__inlined_func$~lib/array/Array<i32>#findLastIndex489
     local.get $0
     i32.const 1
     i32.sub
     local.set $0
     br $for-loop|0491
    end
   end
   i32.const -1
   local.set $0
  end
  local.get $0
  global.set $std/array/i
  global.get $std/array/i
  i32.const 1
  i32.ne
  if
   unreachable
  end
  local.get $1
  i32.load $0 offset=12
  i32.const 1
  i32.sub
  local.set $0
  block $__inlined_func$~lib/array/Array<i32>#findLastIndex493
   loop $for-loop|0495
    local.get $0
    i32.const 0
    i32.ge_s
    if
     local.get $1
     i32.load $0 offset=4
     local.get $0
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.get $0
     local.get $1
     i32.const 6416
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     br_if $__inlined_func$~lib/array/Array<i32>#findLastIndex493
     local.get $0
     i32.const 1
     i32.sub
     local.set $0
     br $for-loop|0495
    end
   end
   i32.const -1
   local.set $0
  end
  local.get $0
  global.set $std/array/i
  global.get $std/array/i
  i32.const -1
  i32.ne
  if
   unreachable
  end
  local.get $1
  i32.load $0 offset=12
  i32.const 1
  i32.sub
  local.set $0
  block $__inlined_func$~lib/array/Array<i32>#findLastIndex497
   loop $for-loop|0499
    local.get $0
    i32.const 0
    i32.ge_s
    if
     local.get $1
     i32.load $0 offset=4
     local.get $0
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.get $0
     local.get $1
     i32.const 6448
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     br_if $__inlined_func$~lib/array/Array<i32>#findLastIndex497
     local.get $0
     i32.const 1
     i32.sub
     local.set $0
     br $for-loop|0499
    end
   end
   i32.const -1
   local.set $0
  end
  local.get $0
  global.set $std/array/i
  global.get $std/array/i
  i32.const -1
  i32.ne
  if
   unreachable
  end
  block $__inlined_func$~lib/array/Array<i32>#every (result i32)
   i32.const 0
   local.set $1
   global.get $std/array/arr
   local.tee $0
   i32.load $0 offset=12
   local.set $2
   loop $for-loop|0502
    local.get $1
    local.get $2
    local.get $0
    i32.load $0 offset=12
    local.tee $3
    local.get $2
    local.get $3
    i32.lt_s
    select
    i32.lt_s
    if
     i32.const 0
     local.get $0
     i32.load $0 offset=4
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.get $1
     local.get $0
     i32.const 6480
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     i32.eqz
     br_if $__inlined_func$~lib/array/Array<i32>#every
     drop
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|0502
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  block $__inlined_func$~lib/array/Array<i32>#every504 (result i32)
   i32.const 0
   local.set $1
   global.get $std/array/arr
   local.tee $0
   i32.load $0 offset=12
   local.set $2
   loop $for-loop|0506
    local.get $1
    local.get $2
    local.get $0
    i32.load $0 offset=12
    local.tee $3
    local.get $2
    local.get $3
    i32.lt_s
    select
    i32.lt_s
    if
     i32.const 0
     local.get $0
     i32.load $0 offset=4
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.get $1
     local.get $0
     i32.const 6512
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     i32.eqz
     br_if $__inlined_func$~lib/array/Array<i32>#every504
     drop
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|0506
    end
   end
   i32.const 1
  end
  if
   unreachable
  end
  block $__inlined_func$~lib/array/Array<i32>#every508 (result i32)
   i32.const 0
   local.set $1
   global.get $std/array/arr
   local.tee $0
   i32.load $0 offset=12
   local.set $2
   loop $for-loop|0510
    local.get $1
    local.get $2
    local.get $0
    i32.load $0 offset=12
    local.tee $3
    local.get $2
    local.get $3
    i32.lt_s
    select
    i32.lt_s
    if
     i32.const 0
     local.get $0
     i32.load $0 offset=4
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.get $1
     local.get $0
     i32.const 6544
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     i32.eqz
     br_if $__inlined_func$~lib/array/Array<i32>#every508
     drop
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|0510
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.load $0 offset=12
  i32.const 8
  i32.ne
  if
   unreachable
  end
  block $__inlined_func$~lib/array/Array<i32>#every513 (result i32)
   i32.const 0
   local.set $1
   global.get $std/array/arr
   local.tee $0
   i32.load $0 offset=12
   local.set $2
   loop $for-loop|0515
    local.get $1
    local.get $2
    local.get $0
    i32.load $0 offset=12
    local.tee $3
    local.get $2
    local.get $3
    i32.lt_s
    select
    i32.lt_s
    if
     i32.const 0
     local.get $0
     i32.load $0 offset=4
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.get $1
     local.get $0
     i32.const 6576
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     i32.eqz
     br_if $__inlined_func$~lib/array/Array<i32>#every513
     drop
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|0515
    end
   end
   i32.const 1
  end
  if
   unreachable
  end
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  local.tee $1
  i32.const 0
  i32.le_s
  if
   unreachable
  end
  local.get $0
  i32.load $0 offset=4
  local.get $1
  i32.const 1
  i32.sub
  local.tee $1
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  drop
  local.get $0
  local.get $1
  i32.store $0 offset=12
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  local.tee $1
  i32.const 0
  i32.le_s
  if
   unreachable
  end
  local.get $0
  i32.load $0 offset=4
  local.get $1
  i32.const 1
  i32.sub
  local.tee $1
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  drop
  local.get $0
  local.get $1
  i32.store $0 offset=12
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  local.tee $1
  i32.const 0
  i32.le_s
  if
   unreachable
  end
  local.get $0
  i32.load $0 offset=4
  local.get $1
  i32.const 1
  i32.sub
  local.tee $1
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  drop
  local.get $0
  local.get $1
  i32.store $0 offset=12
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  local.tee $1
  i32.const 0
  i32.le_s
  if
   unreachable
  end
  local.get $0
  i32.load $0 offset=4
  local.get $1
  i32.const 1
  i32.sub
  local.tee $1
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  drop
  local.get $0
  local.get $1
  i32.store $0 offset=12
  block $__inlined_func$~lib/array/Array<i32>#every517 (result i32)
   i32.const 0
   local.set $1
   global.get $std/array/arr
   local.tee $0
   i32.load $0 offset=12
   local.set $2
   loop $for-loop|0519
    local.get $1
    local.get $2
    local.get $0
    i32.load $0 offset=12
    local.tee $3
    local.get $2
    local.get $3
    i32.lt_s
    select
    i32.lt_s
    if
     i32.const 0
     local.get $0
     i32.load $0 offset=4
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.get $1
     local.get $0
     i32.const 6608
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     i32.eqz
     br_if $__inlined_func$~lib/array/Array<i32>#every517
     drop
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|0519
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  i32.load $0 offset=12
  i32.const 2
  i32.ne
  if
   unreachable
  end
  global.get $std/array/arr
  local.tee $2
  i32.load $0 offset=12
  local.tee $3
  i32.const 1
  i32.add
  local.tee $5
  local.tee $0
  local.get $2
  i32.load $0 offset=8
  local.tee $10
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   local.get $0
   i32.const 268435455
   i32.gt_u
   if
    unreachable
   end
   local.get $2
   i32.load $0
   local.set $11
   i32.const 1073741820
   local.get $10
   i32.const 1
   i32.shl
   local.tee $1
   local.get $1
   i32.const 1073741820
   i32.ge_u
   select
   local.tee $1
   i32.const 8
   local.get $0
   local.get $0
   i32.const 8
   i32.le_u
   select
   i32.const 2
   i32.shl
   local.tee $0
   local.get $0
   local.get $1
   i32.lt_u
   select
   local.tee $12
   i32.const 1073741804
   i32.gt_u
   if
    unreachable
   end
   local.get $11
   i32.const 16
   i32.sub
   local.tee $0
   i32.const 15
   i32.and
   i32.const 1
   local.get $0
   select
   if
    unreachable
   end
   global.get $~lib/rt/stub/offset
   local.get $0
   i32.const 4
   i32.sub
   local.tee $1
   i32.load $0
   local.tee $13
   local.get $0
   i32.add
   i32.eq
   local.set $14
   local.get $12
   i32.const 16
   i32.add
   local.tee $15
   i32.const 19
   i32.add
   i32.const -16
   i32.and
   i32.const 4
   i32.sub
   local.set $16
   local.get $13
   local.get $15
   i32.lt_u
   if
    local.get $14
    if
     local.get $15
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     local.get $0
     local.get $16
     i32.add
     local.tee $13
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $13
     global.set $~lib/rt/stub/offset
     local.get $1
     local.get $16
     i32.store $0
    else
     local.get $16
     local.get $13
     i32.const 1
     i32.shl
     local.tee $1
     local.get $1
     local.get $16
     i32.lt_u
     select
     local.tee $14
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     global.get $~lib/rt/stub/offset
     i32.eqz
     if
      i32.const 9932
      global.set $~lib/rt/stub/offset
     end
     global.get $~lib/rt/stub/offset
     local.tee $1
     local.set $15
     local.get $1
     i32.const 4
     i32.add
     local.tee $1
     local.get $14
     i32.const 19
     i32.add
     i32.const -16
     i32.and
     i32.const 4
     i32.sub
     local.tee $14
     i32.add
     local.tee $16
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $16
     global.set $~lib/rt/stub/offset
     local.get $15
     local.get $14
     i32.store $0
     local.get $1
     local.get $0
     local.get $13
     memory.copy $0 $0
     local.get $1
     local.set $0
    end
   else
    local.get $14
    if
     local.get $0
     local.get $16
     i32.add
     global.set $~lib/rt/stub/offset
     local.get $1
     local.get $16
     i32.store $0
    end
   end
   local.get $0
   i32.const 4
   i32.sub
   local.get $12
   i32.store $0 offset=8
   local.get $0
   i32.const 16
   i32.add
   local.tee $0
   local.get $10
   i32.add
   i32.const 0
   local.get $12
   local.get $10
   i32.sub
   memory.fill $0
   local.get $0
   local.get $11
   i32.ne
   if
    local.get $2
    local.get $0
    i32.store $0
    local.get $2
    local.get $0
    i32.store $0 offset=4
   end
   local.get $2
   local.get $12
   i32.store $0 offset=8
  end
  local.get $2
  i32.load $0 offset=4
  local.get $3
  i32.const 2
  i32.shl
  i32.add
  i32.const 2
  i32.store $0
  local.get $2
  local.get $5
  i32.store $0 offset=12
  global.get $std/array/arr
  local.tee $2
  i32.load $0 offset=12
  local.tee $3
  i32.const 1
  i32.add
  local.tee $5
  local.tee $0
  local.get $2
  i32.load $0 offset=8
  local.tee $10
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   local.get $0
   i32.const 268435455
   i32.gt_u
   if
    unreachable
   end
   local.get $2
   i32.load $0
   local.set $11
   i32.const 1073741820
   local.get $10
   i32.const 1
   i32.shl
   local.tee $1
   local.get $1
   i32.const 1073741820
   i32.ge_u
   select
   local.tee $1
   i32.const 8
   local.get $0
   local.get $0
   i32.const 8
   i32.le_u
   select
   i32.const 2
   i32.shl
   local.tee $0
   local.get $0
   local.get $1
   i32.lt_u
   select
   local.tee $12
   i32.const 1073741804
   i32.gt_u
   if
    unreachable
   end
   local.get $11
   i32.const 16
   i32.sub
   local.tee $0
   i32.const 15
   i32.and
   i32.const 1
   local.get $0
   select
   if
    unreachable
   end
   global.get $~lib/rt/stub/offset
   local.get $0
   i32.const 4
   i32.sub
   local.tee $1
   i32.load $0
   local.tee $13
   local.get $0
   i32.add
   i32.eq
   local.set $14
   local.get $12
   i32.const 16
   i32.add
   local.tee $15
   i32.const 19
   i32.add
   i32.const -16
   i32.and
   i32.const 4
   i32.sub
   local.set $16
   local.get $13
   local.get $15
   i32.lt_u
   if
    local.get $14
    if
     local.get $15
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     local.get $0
     local.get $16
     i32.add
     local.tee $13
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $13
     global.set $~lib/rt/stub/offset
     local.get $1
     local.get $16
     i32.store $0
    else
     local.get $16
     local.get $13
     i32.const 1
     i32.shl
     local.tee $1
     local.get $1
     local.get $16
     i32.lt_u
     select
     local.tee $14
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     global.get $~lib/rt/stub/offset
     i32.eqz
     if
      i32.const 9932
      global.set $~lib/rt/stub/offset
     end
     global.get $~lib/rt/stub/offset
     local.tee $1
     local.set $15
     local.get $1
     i32.const 4
     i32.add
     local.tee $1
     local.get $14
     i32.const 19
     i32.add
     i32.const -16
     i32.and
     i32.const 4
     i32.sub
     local.tee $14
     i32.add
     local.tee $16
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $16
     global.set $~lib/rt/stub/offset
     local.get $15
     local.get $14
     i32.store $0
     local.get $1
     local.get $0
     local.get $13
     memory.copy $0 $0
     local.get $1
     local.set $0
    end
   else
    local.get $14
    if
     local.get $0
     local.get $16
     i32.add
     global.set $~lib/rt/stub/offset
     local.get $1
     local.get $16
     i32.store $0
    end
   end
   local.get $0
   i32.const 4
   i32.sub
   local.get $12
   i32.store $0 offset=8
   local.get $0
   i32.const 16
   i32.add
   local.tee $0
   local.get $10
   i32.add
   i32.const 0
   local.get $12
   local.get $10
   i32.sub
   memory.fill $0
   local.get $0
   local.get $11
   i32.ne
   if
    local.get $2
    local.get $0
    i32.store $0
    local.get $2
    local.get $0
    i32.store $0 offset=4
   end
   local.get $2
   local.get $12
   i32.store $0 offset=8
  end
  local.get $2
  i32.load $0 offset=4
  local.get $3
  i32.const 2
  i32.shl
  i32.add
  i32.const 3
  i32.store $0
  local.get $2
  local.get $5
  i32.store $0 offset=12
  block $__inlined_func$~lib/array/Array<i32>#some (result i32)
   i32.const 0
   local.set $1
   global.get $std/array/arr
   local.tee $0
   i32.load $0 offset=12
   local.set $2
   loop $for-loop|0523
    local.get $1
    local.get $2
    local.get $0
    i32.load $0 offset=12
    local.tee $3
    local.get $2
    local.get $3
    i32.lt_s
    select
    i32.lt_s
    if
     i32.const 1
     local.get $0
     i32.load $0 offset=4
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.get $1
     local.get $0
     i32.const 6640
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     br_if $__inlined_func$~lib/array/Array<i32>#some
     drop
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|0523
    end
   end
   i32.const 0
  end
  i32.eqz
  if
   unreachable
  end
  block $__inlined_func$~lib/array/Array<i32>#some525 (result i32)
   i32.const 0
   local.set $1
   global.get $std/array/arr
   local.tee $0
   i32.load $0 offset=12
   local.set $2
   loop $for-loop|0527
    local.get $1
    local.get $2
    local.get $0
    i32.load $0 offset=12
    local.tee $3
    local.get $2
    local.get $3
    i32.lt_s
    select
    i32.lt_s
    if
     i32.const 1
     local.get $0
     i32.load $0 offset=4
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.get $1
     local.get $0
     i32.const 6672
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     br_if $__inlined_func$~lib/array/Array<i32>#some525
     drop
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|0527
    end
   end
   i32.const 0
  end
  if
   unreachable
  end
  block $__inlined_func$~lib/array/Array<i32>#some529 (result i32)
   i32.const 0
   local.set $1
   global.get $std/array/arr
   local.tee $0
   i32.load $0 offset=12
   local.set $2
   loop $for-loop|0531
    local.get $1
    local.get $2
    local.get $0
    i32.load $0 offset=12
    local.tee $3
    local.get $2
    local.get $3
    i32.lt_s
    select
    i32.lt_s
    if
     i32.const 1
     local.get $0
     i32.load $0 offset=4
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.get $1
     local.get $0
     i32.const 6704
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     br_if $__inlined_func$~lib/array/Array<i32>#some529
     drop
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|0531
    end
   end
   i32.const 0
  end
  if
   unreachable
  end
  global.get $std/array/arr
  i32.load $0 offset=12
  i32.const 8
  i32.ne
  if
   unreachable
  end
  block $__inlined_func$~lib/array/Array<i32>#some534 (result i32)
   i32.const 0
   local.set $1
   global.get $std/array/arr
   local.tee $0
   i32.load $0 offset=12
   local.set $2
   loop $for-loop|0536
    local.get $1
    local.get $2
    local.get $0
    i32.load $0 offset=12
    local.tee $3
    local.get $2
    local.get $3
    i32.lt_s
    select
    i32.lt_s
    if
     i32.const 1
     local.get $0
     i32.load $0 offset=4
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.get $1
     local.get $0
     i32.const 6736
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     br_if $__inlined_func$~lib/array/Array<i32>#some534
     drop
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|0536
    end
   end
   i32.const 0
  end
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  local.tee $1
  i32.const 0
  i32.le_s
  if
   unreachable
  end
  local.get $0
  i32.load $0 offset=4
  local.get $1
  i32.const 1
  i32.sub
  local.tee $1
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  drop
  local.get $0
  local.get $1
  i32.store $0 offset=12
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  local.tee $1
  i32.const 0
  i32.le_s
  if
   unreachable
  end
  local.get $0
  i32.load $0 offset=4
  local.get $1
  i32.const 1
  i32.sub
  local.tee $1
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  drop
  local.get $0
  local.get $1
  i32.store $0 offset=12
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  local.tee $1
  i32.const 0
  i32.le_s
  if
   unreachable
  end
  local.get $0
  i32.load $0 offset=4
  local.get $1
  i32.const 1
  i32.sub
  local.tee $1
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  drop
  local.get $0
  local.get $1
  i32.store $0 offset=12
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  local.tee $1
  i32.const 0
  i32.le_s
  if
   unreachable
  end
  local.get $0
  i32.load $0 offset=4
  local.get $1
  i32.const 1
  i32.sub
  local.tee $1
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  drop
  local.get $0
  local.get $1
  i32.store $0 offset=12
  block $__inlined_func$~lib/array/Array<i32>#some538 (result i32)
   i32.const 0
   local.set $1
   global.get $std/array/arr
   local.tee $0
   i32.load $0 offset=12
   local.set $2
   loop $for-loop|0540
    local.get $1
    local.get $2
    local.get $0
    i32.load $0 offset=12
    local.tee $3
    local.get $2
    local.get $3
    i32.lt_s
    select
    i32.lt_s
    if
     i32.const 1
     local.get $0
     i32.load $0 offset=4
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.get $1
     local.get $0
     i32.const 6768
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     br_if $__inlined_func$~lib/array/Array<i32>#some538
     drop
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|0540
    end
   end
   i32.const 0
  end
  if
   unreachable
  end
  global.get $std/array/arr
  i32.load $0 offset=12
  i32.const 2
  i32.ne
  if
   unreachable
  end
  global.get $std/array/arr
  local.tee $2
  i32.load $0 offset=12
  local.tee $3
  i32.const 1
  i32.add
  local.tee $5
  local.tee $0
  local.get $2
  i32.load $0 offset=8
  local.tee $10
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   local.get $0
   i32.const 268435455
   i32.gt_u
   if
    unreachable
   end
   local.get $2
   i32.load $0
   local.set $11
   i32.const 1073741820
   local.get $10
   i32.const 1
   i32.shl
   local.tee $1
   local.get $1
   i32.const 1073741820
   i32.ge_u
   select
   local.tee $1
   i32.const 8
   local.get $0
   local.get $0
   i32.const 8
   i32.le_u
   select
   i32.const 2
   i32.shl
   local.tee $0
   local.get $0
   local.get $1
   i32.lt_u
   select
   local.tee $12
   i32.const 1073741804
   i32.gt_u
   if
    unreachable
   end
   local.get $11
   i32.const 16
   i32.sub
   local.tee $0
   i32.const 15
   i32.and
   i32.const 1
   local.get $0
   select
   if
    unreachable
   end
   global.get $~lib/rt/stub/offset
   local.get $0
   i32.const 4
   i32.sub
   local.tee $1
   i32.load $0
   local.tee $13
   local.get $0
   i32.add
   i32.eq
   local.set $14
   local.get $12
   i32.const 16
   i32.add
   local.tee $15
   i32.const 19
   i32.add
   i32.const -16
   i32.and
   i32.const 4
   i32.sub
   local.set $16
   local.get $13
   local.get $15
   i32.lt_u
   if
    local.get $14
    if
     local.get $15
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     local.get $0
     local.get $16
     i32.add
     local.tee $13
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $13
     global.set $~lib/rt/stub/offset
     local.get $1
     local.get $16
     i32.store $0
    else
     local.get $16
     local.get $13
     i32.const 1
     i32.shl
     local.tee $1
     local.get $1
     local.get $16
     i32.lt_u
     select
     local.tee $14
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     global.get $~lib/rt/stub/offset
     i32.eqz
     if
      i32.const 9932
      global.set $~lib/rt/stub/offset
     end
     global.get $~lib/rt/stub/offset
     local.tee $1
     local.set $15
     local.get $1
     i32.const 4
     i32.add
     local.tee $1
     local.get $14
     i32.const 19
     i32.add
     i32.const -16
     i32.and
     i32.const 4
     i32.sub
     local.tee $14
     i32.add
     local.tee $16
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $16
     global.set $~lib/rt/stub/offset
     local.get $15
     local.get $14
     i32.store $0
     local.get $1
     local.get $0
     local.get $13
     memory.copy $0 $0
     local.get $1
     local.set $0
    end
   else
    local.get $14
    if
     local.get $0
     local.get $16
     i32.add
     global.set $~lib/rt/stub/offset
     local.get $1
     local.get $16
     i32.store $0
    end
   end
   local.get $0
   i32.const 4
   i32.sub
   local.get $12
   i32.store $0 offset=8
   local.get $0
   i32.const 16
   i32.add
   local.tee $0
   local.get $10
   i32.add
   i32.const 0
   local.get $12
   local.get $10
   i32.sub
   memory.fill $0
   local.get $0
   local.get $11
   i32.ne
   if
    local.get $2
    local.get $0
    i32.store $0
    local.get $2
    local.get $0
    i32.store $0 offset=4
   end
   local.get $2
   local.get $12
   i32.store $0 offset=8
  end
  local.get $2
  i32.load $0 offset=4
  local.get $3
  i32.const 2
  i32.shl
  i32.add
  i32.const 2
  i32.store $0
  local.get $2
  local.get $5
  i32.store $0 offset=12
  global.get $std/array/arr
  local.tee $2
  i32.load $0 offset=12
  local.tee $3
  i32.const 1
  i32.add
  local.tee $5
  local.tee $0
  local.get $2
  i32.load $0 offset=8
  local.tee $10
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   local.get $0
   i32.const 268435455
   i32.gt_u
   if
    unreachable
   end
   local.get $2
   i32.load $0
   local.set $11
   i32.const 1073741820
   local.get $10
   i32.const 1
   i32.shl
   local.tee $1
   local.get $1
   i32.const 1073741820
   i32.ge_u
   select
   local.tee $1
   i32.const 8
   local.get $0
   local.get $0
   i32.const 8
   i32.le_u
   select
   i32.const 2
   i32.shl
   local.tee $0
   local.get $0
   local.get $1
   i32.lt_u
   select
   local.tee $12
   i32.const 1073741804
   i32.gt_u
   if
    unreachable
   end
   local.get $11
   i32.const 16
   i32.sub
   local.tee $0
   i32.const 15
   i32.and
   i32.const 1
   local.get $0
   select
   if
    unreachable
   end
   global.get $~lib/rt/stub/offset
   local.get $0
   i32.const 4
   i32.sub
   local.tee $1
   i32.load $0
   local.tee $13
   local.get $0
   i32.add
   i32.eq
   local.set $14
   local.get $12
   i32.const 16
   i32.add
   local.tee $15
   i32.const 19
   i32.add
   i32.const -16
   i32.and
   i32.const 4
   i32.sub
   local.set $16
   local.get $13
   local.get $15
   i32.lt_u
   if
    local.get $14
    if
     local.get $15
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     local.get $0
     local.get $16
     i32.add
     local.tee $13
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $13
     global.set $~lib/rt/stub/offset
     local.get $1
     local.get $16
     i32.store $0
    else
     local.get $16
     local.get $13
     i32.const 1
     i32.shl
     local.tee $1
     local.get $1
     local.get $16
     i32.lt_u
     select
     local.tee $14
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     global.get $~lib/rt/stub/offset
     i32.eqz
     if
      i32.const 9932
      global.set $~lib/rt/stub/offset
     end
     global.get $~lib/rt/stub/offset
     local.tee $1
     local.set $15
     local.get $1
     i32.const 4
     i32.add
     local.tee $1
     local.get $14
     i32.const 19
     i32.add
     i32.const -16
     i32.and
     i32.const 4
     i32.sub
     local.tee $14
     i32.add
     local.tee $16
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $16
     global.set $~lib/rt/stub/offset
     local.get $15
     local.get $14
     i32.store $0
     local.get $1
     local.get $0
     local.get $13
     memory.copy $0 $0
     local.get $1
     local.set $0
    end
   else
    local.get $14
    if
     local.get $0
     local.get $16
     i32.add
     global.set $~lib/rt/stub/offset
     local.get $1
     local.get $16
     i32.store $0
    end
   end
   local.get $0
   i32.const 4
   i32.sub
   local.get $12
   i32.store $0 offset=8
   local.get $0
   i32.const 16
   i32.add
   local.tee $0
   local.get $10
   i32.add
   i32.const 0
   local.get $12
   local.get $10
   i32.sub
   memory.fill $0
   local.get $0
   local.get $11
   i32.ne
   if
    local.get $2
    local.get $0
    i32.store $0
    local.get $2
    local.get $0
    i32.store $0 offset=4
   end
   local.get $2
   local.get $12
   i32.store $0 offset=8
  end
  local.get $2
  i32.load $0 offset=4
  local.get $3
  i32.const 2
  i32.shl
  i32.add
  i32.const 3
  i32.store $0
  local.get $2
  local.get $5
  i32.store $0 offset=12
  i32.const 0
  global.set $std/array/i
  i32.const 0
  local.set $1
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  local.set $2
  loop $for-loop|0544
   local.get $1
   local.get $2
   local.get $0
   i32.load $0 offset=12
   local.tee $3
   local.get $2
   local.get $3
   i32.lt_s
   select
   i32.lt_s
   if
    local.get $0
    i32.load $0 offset=4
    local.get $1
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.get $1
    local.get $0
    i32.const 6800
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_none)
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|0544
   end
  end
  global.get $std/array/i
  i32.const 6
  i32.ne
  if
   unreachable
  end
  i32.const 0
  global.set $std/array/i
  i32.const 0
  local.set $1
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  local.set $2
  loop $for-loop|0548
   local.get $1
   local.get $2
   local.get $0
   i32.load $0 offset=12
   local.tee $3
   local.get $2
   local.get $3
   i32.lt_s
   select
   i32.lt_s
   if
    local.get $0
    i32.load $0 offset=4
    local.get $1
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.get $1
    local.get $0
    i32.const 6832
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_none)
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|0548
   end
  end
  global.get $std/array/i
  i32.const 6
  i32.ne
  if
   unreachable
  end
  global.get $std/array/arr
  i32.load $0 offset=12
  i32.const 8
  i32.ne
  if
   unreachable
  end
  i32.const 0
  global.set $std/array/i
  i32.const 0
  local.set $1
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  local.set $2
  loop $for-loop|0553
   local.get $1
   local.get $2
   local.get $0
   i32.load $0 offset=12
   local.tee $3
   local.get $2
   local.get $3
   i32.lt_s
   select
   i32.lt_s
   if
    local.get $0
    i32.load $0 offset=4
    local.get $1
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.get $1
    local.get $0
    i32.const 6864
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_none)
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|0553
   end
  end
  global.get $std/array/i
  i32.const 406
  i32.ne
  if
   unreachable
  end
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  local.tee $1
  i32.const 0
  i32.le_s
  if
   unreachable
  end
  local.get $0
  i32.load $0 offset=4
  local.get $1
  i32.const 1
  i32.sub
  local.tee $1
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  drop
  local.get $0
  local.get $1
  i32.store $0 offset=12
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  local.tee $1
  i32.const 0
  i32.le_s
  if
   unreachable
  end
  local.get $0
  i32.load $0 offset=4
  local.get $1
  i32.const 1
  i32.sub
  local.tee $1
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  drop
  local.get $0
  local.get $1
  i32.store $0 offset=12
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  local.tee $1
  i32.const 0
  i32.le_s
  if
   unreachable
  end
  local.get $0
  i32.load $0 offset=4
  local.get $1
  i32.const 1
  i32.sub
  local.tee $1
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  drop
  local.get $0
  local.get $1
  i32.store $0 offset=12
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  local.tee $1
  i32.const 0
  i32.le_s
  if
   unreachable
  end
  local.get $0
  i32.load $0 offset=4
  local.get $1
  i32.const 1
  i32.sub
  local.tee $1
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  drop
  local.get $0
  local.get $1
  i32.store $0 offset=12
  i32.const 0
  global.set $std/array/i
  i32.const 0
  local.set $1
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  local.set $2
  loop $for-loop|0557
   local.get $1
   local.get $2
   local.get $0
   i32.load $0 offset=12
   local.tee $3
   local.get $2
   local.get $3
   i32.lt_s
   select
   i32.lt_s
   if
    local.get $0
    i32.load $0 offset=4
    local.get $1
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.get $1
    local.get $0
    i32.const 6896
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_none)
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|0557
   end
  end
  global.get $std/array/i
  i32.const 1
  i32.ne
  if
   unreachable
  end
  global.get $std/array/arr
  i32.load $0 offset=12
  i32.const 2
  i32.ne
  if
   unreachable
  end
  global.get $std/array/arr
  local.tee $2
  i32.load $0 offset=12
  local.tee $3
  i32.const 1
  i32.add
  local.tee $5
  local.tee $0
  local.get $2
  i32.load $0 offset=8
  local.tee $10
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   local.get $0
   i32.const 268435455
   i32.gt_u
   if
    unreachable
   end
   local.get $2
   i32.load $0
   local.set $11
   i32.const 1073741820
   local.get $10
   i32.const 1
   i32.shl
   local.tee $1
   local.get $1
   i32.const 1073741820
   i32.ge_u
   select
   local.tee $1
   i32.const 8
   local.get $0
   local.get $0
   i32.const 8
   i32.le_u
   select
   i32.const 2
   i32.shl
   local.tee $0
   local.get $0
   local.get $1
   i32.lt_u
   select
   local.tee $12
   i32.const 1073741804
   i32.gt_u
   if
    unreachable
   end
   local.get $11
   i32.const 16
   i32.sub
   local.tee $0
   i32.const 15
   i32.and
   i32.const 1
   local.get $0
   select
   if
    unreachable
   end
   global.get $~lib/rt/stub/offset
   local.get $0
   i32.const 4
   i32.sub
   local.tee $1
   i32.load $0
   local.tee $13
   local.get $0
   i32.add
   i32.eq
   local.set $14
   local.get $12
   i32.const 16
   i32.add
   local.tee $15
   i32.const 19
   i32.add
   i32.const -16
   i32.and
   i32.const 4
   i32.sub
   local.set $16
   local.get $13
   local.get $15
   i32.lt_u
   if
    local.get $14
    if
     local.get $15
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     local.get $0
     local.get $16
     i32.add
     local.tee $13
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $13
     global.set $~lib/rt/stub/offset
     local.get $1
     local.get $16
     i32.store $0
    else
     local.get $16
     local.get $13
     i32.const 1
     i32.shl
     local.tee $1
     local.get $1
     local.get $16
     i32.lt_u
     select
     local.tee $14
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     global.get $~lib/rt/stub/offset
     i32.eqz
     if
      i32.const 9932
      global.set $~lib/rt/stub/offset
     end
     global.get $~lib/rt/stub/offset
     local.tee $1
     local.set $15
     local.get $1
     i32.const 4
     i32.add
     local.tee $1
     local.get $14
     i32.const 19
     i32.add
     i32.const -16
     i32.and
     i32.const 4
     i32.sub
     local.tee $14
     i32.add
     local.tee $16
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $16
     global.set $~lib/rt/stub/offset
     local.get $15
     local.get $14
     i32.store $0
     local.get $1
     local.get $0
     local.get $13
     memory.copy $0 $0
     local.get $1
     local.set $0
    end
   else
    local.get $14
    if
     local.get $0
     local.get $16
     i32.add
     global.set $~lib/rt/stub/offset
     local.get $1
     local.get $16
     i32.store $0
    end
   end
   local.get $0
   i32.const 4
   i32.sub
   local.get $12
   i32.store $0 offset=8
   local.get $0
   i32.const 16
   i32.add
   local.tee $0
   local.get $10
   i32.add
   i32.const 0
   local.get $12
   local.get $10
   i32.sub
   memory.fill $0
   local.get $0
   local.get $11
   i32.ne
   if
    local.get $2
    local.get $0
    i32.store $0
    local.get $2
    local.get $0
    i32.store $0 offset=4
   end
   local.get $2
   local.get $12
   i32.store $0 offset=8
  end
  local.get $2
  i32.load $0 offset=4
  local.get $3
  i32.const 2
  i32.shl
  i32.add
  i32.const 2
  i32.store $0
  local.get $2
  local.get $5
  i32.store $0 offset=12
  global.get $std/array/arr
  local.tee $2
  i32.load $0 offset=12
  local.tee $3
  i32.const 1
  i32.add
  local.tee $5
  local.tee $0
  local.get $2
  i32.load $0 offset=8
  local.tee $10
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   local.get $0
   i32.const 268435455
   i32.gt_u
   if
    unreachable
   end
   local.get $2
   i32.load $0
   local.set $11
   i32.const 1073741820
   local.get $10
   i32.const 1
   i32.shl
   local.tee $1
   local.get $1
   i32.const 1073741820
   i32.ge_u
   select
   local.tee $1
   i32.const 8
   local.get $0
   local.get $0
   i32.const 8
   i32.le_u
   select
   i32.const 2
   i32.shl
   local.tee $0
   local.get $0
   local.get $1
   i32.lt_u
   select
   local.tee $12
   i32.const 1073741804
   i32.gt_u
   if
    unreachable
   end
   local.get $11
   i32.const 16
   i32.sub
   local.tee $0
   i32.const 15
   i32.and
   i32.const 1
   local.get $0
   select
   if
    unreachable
   end
   global.get $~lib/rt/stub/offset
   local.get $0
   i32.const 4
   i32.sub
   local.tee $1
   i32.load $0
   local.tee $13
   local.get $0
   i32.add
   i32.eq
   local.set $14
   local.get $12
   i32.const 16
   i32.add
   local.tee $15
   i32.const 19
   i32.add
   i32.const -16
   i32.and
   i32.const 4
   i32.sub
   local.set $16
   local.get $13
   local.get $15
   i32.lt_u
   if
    local.get $14
    if
     local.get $15
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     local.get $0
     local.get $16
     i32.add
     local.tee $13
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $13
     global.set $~lib/rt/stub/offset
     local.get $1
     local.get $16
     i32.store $0
    else
     local.get $16
     local.get $13
     i32.const 1
     i32.shl
     local.tee $1
     local.get $1
     local.get $16
     i32.lt_u
     select
     local.tee $14
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     global.get $~lib/rt/stub/offset
     i32.eqz
     if
      i32.const 9932
      global.set $~lib/rt/stub/offset
     end
     global.get $~lib/rt/stub/offset
     local.tee $1
     local.set $15
     local.get $1
     i32.const 4
     i32.add
     local.tee $1
     local.get $14
     i32.const 19
     i32.add
     i32.const -16
     i32.and
     i32.const 4
     i32.sub
     local.tee $14
     i32.add
     local.tee $16
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $16
     global.set $~lib/rt/stub/offset
     local.get $15
     local.get $14
     i32.store $0
     local.get $1
     local.get $0
     local.get $13
     memory.copy $0 $0
     local.get $1
     local.set $0
    end
   else
    local.get $14
    if
     local.get $0
     local.get $16
     i32.add
     global.set $~lib/rt/stub/offset
     local.get $1
     local.get $16
     i32.store $0
    end
   end
   local.get $0
   i32.const 4
   i32.sub
   local.get $12
   i32.store $0 offset=8
   local.get $0
   i32.const 16
   i32.add
   local.tee $0
   local.get $10
   i32.add
   i32.const 0
   local.get $12
   local.get $10
   i32.sub
   memory.fill $0
   local.get $0
   local.get $11
   i32.ne
   if
    local.get $2
    local.get $0
    i32.store $0
    local.get $2
    local.get $0
    i32.store $0 offset=4
   end
   local.get $2
   local.get $12
   i32.store $0 offset=8
  end
  local.get $2
  i32.load $0 offset=4
  local.get $3
  i32.const 2
  i32.shl
  i32.add
  i32.const 3
  i32.store $0
  local.get $2
  local.get $5
  i32.store $0 offset=12
  i32.const 0
  local.set $1
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  local.set $2
  loop $for-loop|0562
   local.get $1
   local.get $2
   local.get $0
   i32.load $0 offset=12
   local.tee $3
   local.get $2
   local.get $3
   i32.lt_s
   select
   i32.lt_s
   if
    local.get $0
    i32.load $0 offset=4
    local.get $1
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.get $1
    local.get $0
    i32.const 6928
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_none)
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|0562
   end
  end
  global.get $std/array/arr
  i32.load $0 offset=12
  i32.const 100
  i32.ne
  if
   unreachable
  end
  i32.const 0
  local.set $1
  loop $for-loop|72
   local.get $1
   i32.const 100
   i32.lt_s
   if
    global.get $std/array/arr
    local.tee $0
    i32.load $0 offset=12
    local.tee $2
    i32.const 0
    i32.le_s
    if
     unreachable
    end
    local.get $0
    i32.load $0 offset=4
    local.get $2
    i32.const 1
    i32.sub
    local.tee $2
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    drop
    local.get $0
    local.get $2
    i32.store $0 offset=12
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|72
   end
  end
  global.get $std/array/arr
  local.tee $2
  i32.load $0 offset=12
  local.tee $3
  i32.const 1
  i32.add
  local.tee $5
  local.tee $0
  local.get $2
  i32.load $0 offset=8
  local.tee $10
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   local.get $0
   i32.const 268435455
   i32.gt_u
   if
    unreachable
   end
   local.get $2
   i32.load $0
   local.set $11
   i32.const 1073741820
   local.get $10
   i32.const 1
   i32.shl
   local.tee $1
   local.get $1
   i32.const 1073741820
   i32.ge_u
   select
   local.tee $1
   i32.const 8
   local.get $0
   local.get $0
   i32.const 8
   i32.le_u
   select
   i32.const 2
   i32.shl
   local.tee $0
   local.get $0
   local.get $1
   i32.lt_u
   select
   local.tee $12
   i32.const 1073741804
   i32.gt_u
   if
    unreachable
   end
   local.get $11
   i32.const 16
   i32.sub
   local.tee $0
   i32.const 15
   i32.and
   i32.const 1
   local.get $0
   select
   if
    unreachable
   end
   global.get $~lib/rt/stub/offset
   local.get $0
   i32.const 4
   i32.sub
   local.tee $1
   i32.load $0
   local.tee $13
   local.get $0
   i32.add
   i32.eq
   local.set $14
   local.get $12
   i32.const 16
   i32.add
   local.tee $15
   i32.const 19
   i32.add
   i32.const -16
   i32.and
   i32.const 4
   i32.sub
   local.set $16
   local.get $13
   local.get $15
   i32.lt_u
   if
    local.get $14
    if
     local.get $15
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     local.get $0
     local.get $16
     i32.add
     local.tee $13
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $13
     global.set $~lib/rt/stub/offset
     local.get $1
     local.get $16
     i32.store $0
    else
     local.get $16
     local.get $13
     i32.const 1
     i32.shl
     local.tee $1
     local.get $1
     local.get $16
     i32.lt_u
     select
     local.tee $14
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     global.get $~lib/rt/stub/offset
     i32.eqz
     if
      i32.const 9932
      global.set $~lib/rt/stub/offset
     end
     global.get $~lib/rt/stub/offset
     local.tee $1
     local.set $15
     local.get $1
     i32.const 4
     i32.add
     local.tee $1
     local.get $14
     i32.const 19
     i32.add
     i32.const -16
     i32.and
     i32.const 4
     i32.sub
     local.tee $14
     i32.add
     local.tee $16
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $16
     global.set $~lib/rt/stub/offset
     local.get $15
     local.get $14
     i32.store $0
     local.get $1
     local.get $0
     local.get $13
     memory.copy $0 $0
     local.get $1
     local.set $0
    end
   else
    local.get $14
    if
     local.get $0
     local.get $16
     i32.add
     global.set $~lib/rt/stub/offset
     local.get $1
     local.get $16
     i32.store $0
    end
   end
   local.get $0
   i32.const 4
   i32.sub
   local.get $12
   i32.store $0 offset=8
   local.get $0
   i32.const 16
   i32.add
   local.tee $0
   local.get $10
   i32.add
   i32.const 0
   local.get $12
   local.get $10
   i32.sub
   memory.fill $0
   local.get $0
   local.get $11
   i32.ne
   if
    local.get $2
    local.get $0
    i32.store $0
    local.get $2
    local.get $0
    i32.store $0 offset=4
   end
   local.get $2
   local.get $12
   i32.store $0 offset=8
  end
  local.get $2
  i32.load $0 offset=4
  local.get $3
  i32.const 2
  i32.shl
  i32.add
  i32.const 0
  i32.store $0
  local.get $2
  local.get $5
  i32.store $0 offset=12
  global.get $std/array/arr
  local.tee $2
  i32.load $0 offset=12
  local.tee $3
  i32.const 1
  i32.add
  local.tee $5
  local.tee $0
  local.get $2
  i32.load $0 offset=8
  local.tee $10
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   local.get $0
   i32.const 268435455
   i32.gt_u
   if
    unreachable
   end
   local.get $2
   i32.load $0
   local.set $11
   i32.const 1073741820
   local.get $10
   i32.const 1
   i32.shl
   local.tee $1
   local.get $1
   i32.const 1073741820
   i32.ge_u
   select
   local.tee $1
   i32.const 8
   local.get $0
   local.get $0
   i32.const 8
   i32.le_u
   select
   i32.const 2
   i32.shl
   local.tee $0
   local.get $0
   local.get $1
   i32.lt_u
   select
   local.tee $12
   i32.const 1073741804
   i32.gt_u
   if
    unreachable
   end
   local.get $11
   i32.const 16
   i32.sub
   local.tee $0
   i32.const 15
   i32.and
   i32.const 1
   local.get $0
   select
   if
    unreachable
   end
   global.get $~lib/rt/stub/offset
   local.get $0
   i32.const 4
   i32.sub
   local.tee $1
   i32.load $0
   local.tee $13
   local.get $0
   i32.add
   i32.eq
   local.set $14
   local.get $12
   i32.const 16
   i32.add
   local.tee $15
   i32.const 19
   i32.add
   i32.const -16
   i32.and
   i32.const 4
   i32.sub
   local.set $16
   local.get $13
   local.get $15
   i32.lt_u
   if
    local.get $14
    if
     local.get $15
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     local.get $0
     local.get $16
     i32.add
     local.tee $13
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $13
     global.set $~lib/rt/stub/offset
     local.get $1
     local.get $16
     i32.store $0
    else
     local.get $16
     local.get $13
     i32.const 1
     i32.shl
     local.tee $1
     local.get $1
     local.get $16
     i32.lt_u
     select
     local.tee $14
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     global.get $~lib/rt/stub/offset
     i32.eqz
     if
      i32.const 9932
      global.set $~lib/rt/stub/offset
     end
     global.get $~lib/rt/stub/offset
     local.tee $1
     local.set $15
     local.get $1
     i32.const 4
     i32.add
     local.tee $1
     local.get $14
     i32.const 19
     i32.add
     i32.const -16
     i32.and
     i32.const 4
     i32.sub
     local.tee $14
     i32.add
     local.tee $16
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $16
     global.set $~lib/rt/stub/offset
     local.get $15
     local.get $14
     i32.store $0
     local.get $1
     local.get $0
     local.get $13
     memory.copy $0 $0
     local.get $1
     local.set $0
    end
   else
    local.get $14
    if
     local.get $0
     local.get $16
     i32.add
     global.set $~lib/rt/stub/offset
     local.get $1
     local.get $16
     i32.store $0
    end
   end
   local.get $0
   i32.const 4
   i32.sub
   local.get $12
   i32.store $0 offset=8
   local.get $0
   i32.const 16
   i32.add
   local.tee $0
   local.get $10
   i32.add
   i32.const 0
   local.get $12
   local.get $10
   i32.sub
   memory.fill $0
   local.get $0
   local.get $11
   i32.ne
   if
    local.get $2
    local.get $0
    i32.store $0
    local.get $2
    local.get $0
    i32.store $0 offset=4
   end
   local.get $2
   local.get $12
   i32.store $0 offset=8
  end
  local.get $2
  i32.load $0 offset=4
  local.get $3
  i32.const 2
  i32.shl
  i32.add
  i32.const 1
  i32.store $0
  local.get $2
  local.get $5
  i32.store $0 offset=12
  global.get $std/array/arr
  local.tee $2
  i32.load $0 offset=12
  local.tee $3
  i32.const 1
  i32.add
  local.tee $5
  local.tee $0
  local.get $2
  i32.load $0 offset=8
  local.tee $10
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   local.get $0
   i32.const 268435455
   i32.gt_u
   if
    unreachable
   end
   local.get $2
   i32.load $0
   local.set $11
   i32.const 1073741820
   local.get $10
   i32.const 1
   i32.shl
   local.tee $1
   local.get $1
   i32.const 1073741820
   i32.ge_u
   select
   local.tee $1
   i32.const 8
   local.get $0
   local.get $0
   i32.const 8
   i32.le_u
   select
   i32.const 2
   i32.shl
   local.tee $0
   local.get $0
   local.get $1
   i32.lt_u
   select
   local.tee $12
   i32.const 1073741804
   i32.gt_u
   if
    unreachable
   end
   local.get $11
   i32.const 16
   i32.sub
   local.tee $0
   i32.const 15
   i32.and
   i32.const 1
   local.get $0
   select
   if
    unreachable
   end
   global.get $~lib/rt/stub/offset
   local.get $0
   i32.const 4
   i32.sub
   local.tee $1
   i32.load $0
   local.tee $13
   local.get $0
   i32.add
   i32.eq
   local.set $14
   local.get $12
   i32.const 16
   i32.add
   local.tee $15
   i32.const 19
   i32.add
   i32.const -16
   i32.and
   i32.const 4
   i32.sub
   local.set $16
   local.get $13
   local.get $15
   i32.lt_u
   if
    local.get $14
    if
     local.get $15
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     local.get $0
     local.get $16
     i32.add
     local.tee $13
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $13
     global.set $~lib/rt/stub/offset
     local.get $1
     local.get $16
     i32.store $0
    else
     local.get $16
     local.get $13
     i32.const 1
     i32.shl
     local.tee $1
     local.get $1
     local.get $16
     i32.lt_u
     select
     local.tee $14
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     global.get $~lib/rt/stub/offset
     i32.eqz
     if
      i32.const 9932
      global.set $~lib/rt/stub/offset
     end
     global.get $~lib/rt/stub/offset
     local.tee $1
     local.set $15
     local.get $1
     i32.const 4
     i32.add
     local.tee $1
     local.get $14
     i32.const 19
     i32.add
     i32.const -16
     i32.and
     i32.const 4
     i32.sub
     local.tee $14
     i32.add
     local.tee $16
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $16
     global.set $~lib/rt/stub/offset
     local.get $15
     local.get $14
     i32.store $0
     local.get $1
     local.get $0
     local.get $13
     memory.copy $0 $0
     local.get $1
     local.set $0
    end
   else
    local.get $14
    if
     local.get $0
     local.get $16
     i32.add
     global.set $~lib/rt/stub/offset
     local.get $1
     local.get $16
     i32.store $0
    end
   end
   local.get $0
   i32.const 4
   i32.sub
   local.get $12
   i32.store $0 offset=8
   local.get $0
   i32.const 16
   i32.add
   local.tee $0
   local.get $10
   i32.add
   i32.const 0
   local.get $12
   local.get $10
   i32.sub
   memory.fill $0
   local.get $0
   local.get $11
   i32.ne
   if
    local.get $2
    local.get $0
    i32.store $0
    local.get $2
    local.get $0
    i32.store $0 offset=4
   end
   local.get $2
   local.get $12
   i32.store $0 offset=8
  end
  local.get $2
  i32.load $0 offset=4
  local.get $3
  i32.const 2
  i32.shl
  i32.add
  i32.const 2
  i32.store $0
  local.get $2
  local.get $5
  i32.store $0 offset=12
  global.get $std/array/arr
  local.tee $2
  i32.load $0 offset=12
  local.tee $3
  i32.const 1
  i32.add
  local.tee $5
  local.tee $0
  local.get $2
  i32.load $0 offset=8
  local.tee $10
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   local.get $0
   i32.const 268435455
   i32.gt_u
   if
    unreachable
   end
   local.get $2
   i32.load $0
   local.set $11
   i32.const 1073741820
   local.get $10
   i32.const 1
   i32.shl
   local.tee $1
   local.get $1
   i32.const 1073741820
   i32.ge_u
   select
   local.tee $1
   i32.const 8
   local.get $0
   local.get $0
   i32.const 8
   i32.le_u
   select
   i32.const 2
   i32.shl
   local.tee $0
   local.get $0
   local.get $1
   i32.lt_u
   select
   local.tee $12
   i32.const 1073741804
   i32.gt_u
   if
    unreachable
   end
   local.get $11
   i32.const 16
   i32.sub
   local.tee $0
   i32.const 15
   i32.and
   i32.const 1
   local.get $0
   select
   if
    unreachable
   end
   global.get $~lib/rt/stub/offset
   local.get $0
   i32.const 4
   i32.sub
   local.tee $1
   i32.load $0
   local.tee $13
   local.get $0
   i32.add
   i32.eq
   local.set $14
   local.get $12
   i32.const 16
   i32.add
   local.tee $15
   i32.const 19
   i32.add
   i32.const -16
   i32.and
   i32.const 4
   i32.sub
   local.set $16
   local.get $13
   local.get $15
   i32.lt_u
   if
    local.get $14
    if
     local.get $15
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     local.get $0
     local.get $16
     i32.add
     local.tee $13
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $13
     global.set $~lib/rt/stub/offset
     local.get $1
     local.get $16
     i32.store $0
    else
     local.get $16
     local.get $13
     i32.const 1
     i32.shl
     local.tee $1
     local.get $1
     local.get $16
     i32.lt_u
     select
     local.tee $14
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     global.get $~lib/rt/stub/offset
     i32.eqz
     if
      i32.const 9932
      global.set $~lib/rt/stub/offset
     end
     global.get $~lib/rt/stub/offset
     local.tee $1
     local.set $15
     local.get $1
     i32.const 4
     i32.add
     local.tee $1
     local.get $14
     i32.const 19
     i32.add
     i32.const -16
     i32.and
     i32.const 4
     i32.sub
     local.tee $14
     i32.add
     local.tee $16
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $16
     global.set $~lib/rt/stub/offset
     local.get $15
     local.get $14
     i32.store $0
     local.get $1
     local.get $0
     local.get $13
     memory.copy $0 $0
     local.get $1
     local.set $0
    end
   else
    local.get $14
    if
     local.get $0
     local.get $16
     i32.add
     global.set $~lib/rt/stub/offset
     local.get $1
     local.get $16
     i32.store $0
    end
   end
   local.get $0
   i32.const 4
   i32.sub
   local.get $12
   i32.store $0 offset=8
   local.get $0
   i32.const 16
   i32.add
   local.tee $0
   local.get $10
   i32.add
   i32.const 0
   local.get $12
   local.get $10
   i32.sub
   memory.fill $0
   local.get $0
   local.get $11
   i32.ne
   if
    local.get $2
    local.get $0
    i32.store $0
    local.get $2
    local.get $0
    i32.store $0 offset=4
   end
   local.get $2
   local.get $12
   i32.store $0 offset=8
  end
  local.get $2
  i32.load $0 offset=4
  local.get $3
  i32.const 2
  i32.shl
  i32.add
  i32.const 3
  i32.store $0
  local.get $2
  local.get $5
  i32.store $0 offset=12
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  local.tee $2
  i32.const 2
  i32.shl
  local.tee $1
  i32.const 16
  i32.add
  local.tee $3
  i32.const 1073741820
  i32.gt_u
  if
   unreachable
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $5
  i32.const 4
  i32.add
  local.tee $10
  local.get $3
  i32.const 19
  i32.add
  i32.const -16
  i32.and
  i32.const 4
  i32.sub
  local.tee $3
  i32.add
  local.tee $11
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $11
  global.set $~lib/rt/stub/offset
  local.get $5
  local.get $3
  i32.store $0
  local.get $10
  i32.const 4
  i32.sub
  local.tee $3
  i32.const 0
  i32.store $0 offset=4
  local.get $3
  local.get $1
  i32.store $0 offset=8
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $3
  i32.const 4
  i32.add
  local.tee $5
  i32.const 44
  i32.add
  local.tee $11
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $11
  global.set $~lib/rt/stub/offset
  local.get $3
  i32.const 44
  i32.store $0
  local.get $5
  i32.const 4
  i32.sub
  local.tee $3
  i32.const 16
  i32.store $0 offset=4
  local.get $3
  i32.const 16
  i32.store $0 offset=8
  local.get $5
  local.get $10
  i32.const 16
  i32.add
  local.tee $3
  i32.store $0 offset=16
  local.get $5
  local.get $3
  i32.store $0 offset=20
  local.get $5
  local.get $1
  i32.store $0 offset=24
  local.get $5
  local.get $2
  i32.store $0 offset=28
  local.get $5
  i32.load $0 offset=20
  local.set $3
  i32.const 0
  local.set $1
  loop $for-loop|0254
   local.get $1
   local.get $2
   local.get $0
   i32.load $0 offset=12
   local.tee $5
   local.get $2
   local.get $5
   i32.lt_s
   select
   i32.lt_s
   if
    local.get $1
    i32.const 2
    i32.shl
    local.tee $5
    local.get $3
    i32.add
    local.get $0
    i32.load $0 offset=4
    local.get $5
    i32.add
    i32.load $0
    local.get $1
    local.get $0
    i32.const 6992
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    i32.store $0
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|0254
   end
  end
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  local.tee $2
  i32.const 2
  i32.shl
  local.tee $1
  i32.const 16
  i32.add
  local.tee $3
  i32.const 1073741820
  i32.gt_u
  if
   unreachable
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $5
  i32.const 4
  i32.add
  local.tee $10
  local.get $3
  i32.const 19
  i32.add
  i32.const -16
  i32.and
  i32.const 4
  i32.sub
  local.tee $3
  i32.add
  local.tee $11
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $11
  global.set $~lib/rt/stub/offset
  local.get $5
  local.get $3
  i32.store $0
  local.get $10
  i32.const 4
  i32.sub
  local.tee $3
  i32.const 0
  i32.store $0 offset=4
  local.get $3
  local.get $1
  i32.store $0 offset=8
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $3
  i32.const 4
  i32.add
  local.tee $5
  i32.const 44
  i32.add
  local.tee $11
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $11
  global.set $~lib/rt/stub/offset
  local.get $3
  i32.const 44
  i32.store $0
  local.get $5
  i32.const 4
  i32.sub
  local.tee $3
  i32.const 8
  i32.store $0 offset=4
  local.get $3
  i32.const 16
  i32.store $0 offset=8
  local.get $5
  local.get $10
  i32.const 16
  i32.add
  local.tee $3
  i32.store $0 offset=16
  local.get $5
  local.get $3
  i32.store $0 offset=20
  local.get $5
  local.get $1
  i32.store $0 offset=24
  local.get $5
  local.get $2
  i32.store $0 offset=28
  local.get $5
  i32.load $0 offset=20
  local.set $3
  i32.const 0
  local.set $1
  loop $for-loop|0566
   local.get $1
   local.get $2
   local.get $0
   i32.load $0 offset=12
   local.tee $10
   local.get $2
   local.get $10
   i32.lt_s
   select
   i32.lt_s
   if
    local.get $1
    i32.const 2
    i32.shl
    local.tee $10
    local.get $3
    i32.add
    local.get $0
    i32.load $0 offset=4
    local.get $10
    i32.add
    i32.load $0
    local.get $1
    local.get $0
    i32.const 7024
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_f32)
    f32.store $0
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|0566
   end
  end
  local.get $5
  i32.load $0 offset=28
  i32.const 4
  i32.ne
  if
   unreachable
  end
  local.get $5
  i32.load $0 offset=28
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  i32.eqz
  if
   unreachable
  end
  local.get $5
  i32.load $0 offset=20
  f32.load $0
  local.get $0
  i32.load $0 offset=4
  i32.load $0
  f32.convert_i32_s
  f32.ne
  if
   unreachable
  end
  i32.const 0
  global.set $std/array/i
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  local.tee $1
  i32.const 2
  i32.shl
  local.tee $2
  i32.const 16
  i32.add
  local.tee $3
  i32.const 1073741820
  i32.gt_u
  if
   unreachable
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $5
  i32.const 4
  i32.add
  local.tee $10
  local.get $3
  i32.const 19
  i32.add
  i32.const -16
  i32.and
  i32.const 4
  i32.sub
  local.tee $3
  i32.add
  local.tee $11
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $11
  global.set $~lib/rt/stub/offset
  local.get $5
  local.get $3
  i32.store $0
  local.get $10
  i32.const 4
  i32.sub
  local.tee $3
  i32.const 0
  i32.store $0 offset=4
  local.get $3
  local.get $2
  i32.store $0 offset=8
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $3
  i32.const 4
  i32.add
  local.tee $5
  i32.const 44
  i32.add
  local.tee $11
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $11
  global.set $~lib/rt/stub/offset
  local.get $3
  i32.const 44
  i32.store $0
  local.get $5
  i32.const 4
  i32.sub
  local.tee $3
  i32.const 3
  i32.store $0 offset=4
  local.get $3
  i32.const 16
  i32.store $0 offset=8
  local.get $5
  local.get $10
  i32.const 16
  i32.add
  local.tee $3
  i32.store $0 offset=16
  local.get $5
  local.get $3
  i32.store $0 offset=20
  local.get $5
  local.get $2
  i32.store $0 offset=24
  local.get $5
  local.get $1
  i32.store $0 offset=28
  local.get $5
  i32.load $0 offset=20
  local.set $2
  loop $for-loop|023
   local.get $6
   local.get $1
   local.get $0
   i32.load $0 offset=12
   local.tee $3
   local.get $1
   local.get $3
   i32.lt_s
   select
   i32.lt_s
   if
    local.get $6
    i32.const 2
    i32.shl
    local.tee $3
    local.get $2
    i32.add
    local.get $0
    i32.load $0 offset=4
    local.get $3
    i32.add
    i32.load $0
    local.get $6
    local.get $0
    i32.const 7056
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    i32.store $0
    local.get $6
    i32.const 1
    i32.add
    local.set $6
    br $for-loop|023
   end
  end
  global.get $std/array/i
  i32.const 6
  i32.ne
  if
   unreachable
  end
  global.get $std/array/arr
  i32.load $0 offset=12
  i32.const 8
  i32.ne
  if
   unreachable
  end
  i32.const 0
  global.set $std/array/i
  i32.const 0
  local.set $6
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  local.tee $1
  i32.const 2
  i32.shl
  local.tee $2
  i32.const 16
  i32.add
  local.tee $3
  i32.const 1073741820
  i32.gt_u
  if
   unreachable
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $5
  i32.const 4
  i32.add
  local.tee $10
  local.get $3
  i32.const 19
  i32.add
  i32.const -16
  i32.and
  i32.const 4
  i32.sub
  local.tee $3
  i32.add
  local.tee $11
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $11
  global.set $~lib/rt/stub/offset
  local.get $5
  local.get $3
  i32.store $0
  local.get $10
  i32.const 4
  i32.sub
  local.tee $3
  i32.const 0
  i32.store $0 offset=4
  local.get $3
  local.get $2
  i32.store $0 offset=8
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $3
  i32.const 4
  i32.add
  local.tee $5
  i32.const 44
  i32.add
  local.tee $11
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $11
  global.set $~lib/rt/stub/offset
  local.get $3
  i32.const 44
  i32.store $0
  local.get $5
  i32.const 4
  i32.sub
  local.tee $3
  i32.const 3
  i32.store $0 offset=4
  local.get $3
  i32.const 16
  i32.store $0 offset=8
  local.get $5
  local.get $10
  i32.const 16
  i32.add
  local.tee $3
  i32.store $0 offset=16
  local.get $5
  local.get $3
  i32.store $0 offset=20
  local.get $5
  local.get $2
  i32.store $0 offset=24
  local.get $5
  local.get $1
  i32.store $0 offset=28
  local.get $5
  i32.load $0 offset=20
  local.set $2
  loop $for-loop|025
   local.get $6
   local.get $1
   local.get $0
   i32.load $0 offset=12
   local.tee $3
   local.get $1
   local.get $3
   i32.lt_s
   select
   i32.lt_s
   if
    local.get $6
    i32.const 2
    i32.shl
    local.tee $3
    local.get $2
    i32.add
    local.get $0
    i32.load $0 offset=4
    local.get $3
    i32.add
    i32.load $0
    local.get $6
    local.get $0
    i32.const 7088
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    i32.store $0
    local.get $6
    i32.const 1
    i32.add
    local.set $6
    br $for-loop|025
   end
  end
  global.get $std/array/i
  i32.const 406
  i32.ne
  if
   unreachable
  end
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  local.tee $1
  i32.const 0
  i32.le_s
  if
   unreachable
  end
  local.get $0
  i32.load $0 offset=4
  local.get $1
  i32.const 1
  i32.sub
  local.tee $1
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  drop
  local.get $0
  local.get $1
  i32.store $0 offset=12
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  local.tee $1
  i32.const 0
  i32.le_s
  if
   unreachable
  end
  local.get $0
  i32.load $0 offset=4
  local.get $1
  i32.const 1
  i32.sub
  local.tee $1
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  drop
  local.get $0
  local.get $1
  i32.store $0 offset=12
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  local.tee $1
  i32.const 0
  i32.le_s
  if
   unreachable
  end
  local.get $0
  i32.load $0 offset=4
  local.get $1
  i32.const 1
  i32.sub
  local.tee $1
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  drop
  local.get $0
  local.get $1
  i32.store $0 offset=12
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  local.tee $1
  i32.const 0
  i32.le_s
  if
   unreachable
  end
  local.get $0
  i32.load $0 offset=4
  local.get $1
  i32.const 1
  i32.sub
  local.tee $1
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  drop
  local.get $0
  local.get $1
  i32.store $0 offset=12
  i32.const 0
  global.set $std/array/i
  i32.const 0
  local.set $6
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  local.tee $1
  i32.const 2
  i32.shl
  local.tee $2
  i32.const 16
  i32.add
  local.tee $3
  i32.const 1073741820
  i32.gt_u
  if
   unreachable
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $5
  i32.const 4
  i32.add
  local.tee $10
  local.get $3
  i32.const 19
  i32.add
  i32.const -16
  i32.and
  i32.const 4
  i32.sub
  local.tee $3
  i32.add
  local.tee $11
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $11
  global.set $~lib/rt/stub/offset
  local.get $5
  local.get $3
  i32.store $0
  local.get $10
  i32.const 4
  i32.sub
  local.tee $3
  i32.const 0
  i32.store $0 offset=4
  local.get $3
  local.get $2
  i32.store $0 offset=8
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $3
  i32.const 4
  i32.add
  local.tee $5
  i32.const 44
  i32.add
  local.tee $11
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $11
  global.set $~lib/rt/stub/offset
  local.get $3
  i32.const 44
  i32.store $0
  local.get $5
  i32.const 4
  i32.sub
  local.tee $3
  i32.const 3
  i32.store $0 offset=4
  local.get $3
  i32.const 16
  i32.store $0 offset=8
  local.get $5
  local.get $10
  i32.const 16
  i32.add
  local.tee $3
  i32.store $0 offset=16
  local.get $5
  local.get $3
  i32.store $0 offset=20
  local.get $5
  local.get $2
  i32.store $0 offset=24
  local.get $5
  local.get $1
  i32.store $0 offset=28
  local.get $5
  i32.load $0 offset=20
  local.set $2
  loop $for-loop|027
   local.get $6
   local.get $1
   local.get $0
   i32.load $0 offset=12
   local.tee $3
   local.get $1
   local.get $3
   i32.lt_s
   select
   i32.lt_s
   if
    local.get $6
    i32.const 2
    i32.shl
    local.tee $3
    local.get $2
    i32.add
    local.get $0
    i32.load $0 offset=4
    local.get $3
    i32.add
    i32.load $0
    local.get $6
    local.get $0
    i32.const 7120
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    i32.store $0
    local.get $6
    i32.const 1
    i32.add
    local.set $6
    br $for-loop|027
   end
  end
  global.get $std/array/i
  i32.const 1
  i32.ne
  if
   unreachable
  end
  global.get $std/array/arr
  i32.load $0 offset=12
  i32.const 2
  i32.ne
  if
   unreachable
  end
  global.get $std/array/arr
  local.tee $2
  i32.load $0 offset=12
  local.tee $3
  i32.const 1
  i32.add
  local.tee $5
  local.tee $0
  local.get $2
  i32.load $0 offset=8
  local.tee $6
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   local.get $0
   i32.const 268435455
   i32.gt_u
   if
    unreachable
   end
   local.get $2
   i32.load $0
   local.set $10
   i32.const 1073741820
   local.get $6
   i32.const 1
   i32.shl
   local.tee $1
   local.get $1
   i32.const 1073741820
   i32.ge_u
   select
   local.tee $1
   i32.const 8
   local.get $0
   local.get $0
   i32.const 8
   i32.le_u
   select
   i32.const 2
   i32.shl
   local.tee $0
   local.get $0
   local.get $1
   i32.lt_u
   select
   local.tee $11
   i32.const 1073741804
   i32.gt_u
   if
    unreachable
   end
   local.get $10
   i32.const 16
   i32.sub
   local.tee $0
   i32.const 15
   i32.and
   i32.const 1
   local.get $0
   select
   if
    unreachable
   end
   global.get $~lib/rt/stub/offset
   local.get $0
   i32.const 4
   i32.sub
   local.tee $1
   i32.load $0
   local.tee $12
   local.get $0
   i32.add
   i32.eq
   local.set $13
   local.get $11
   i32.const 16
   i32.add
   local.tee $14
   i32.const 19
   i32.add
   i32.const -16
   i32.and
   i32.const 4
   i32.sub
   local.set $15
   local.get $12
   local.get $14
   i32.lt_u
   if
    local.get $13
    if
     local.get $14
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     local.get $0
     local.get $15
     i32.add
     local.tee $12
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $12
     global.set $~lib/rt/stub/offset
     local.get $1
     local.get $15
     i32.store $0
    else
     local.get $15
     local.get $12
     i32.const 1
     i32.shl
     local.tee $1
     local.get $1
     local.get $15
     i32.lt_u
     select
     local.tee $13
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     global.get $~lib/rt/stub/offset
     i32.eqz
     if
      i32.const 9932
      global.set $~lib/rt/stub/offset
     end
     global.get $~lib/rt/stub/offset
     local.tee $1
     local.set $14
     local.get $1
     i32.const 4
     i32.add
     local.tee $1
     local.get $13
     i32.const 19
     i32.add
     i32.const -16
     i32.and
     i32.const 4
     i32.sub
     local.tee $13
     i32.add
     local.tee $15
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $15
     global.set $~lib/rt/stub/offset
     local.get $14
     local.get $13
     i32.store $0
     local.get $1
     local.get $0
     local.get $12
     memory.copy $0 $0
     local.get $1
     local.set $0
    end
   else
    local.get $13
    if
     local.get $0
     local.get $15
     i32.add
     global.set $~lib/rt/stub/offset
     local.get $1
     local.get $15
     i32.store $0
    end
   end
   local.get $0
   i32.const 4
   i32.sub
   local.get $11
   i32.store $0 offset=8
   local.get $0
   i32.const 16
   i32.add
   local.tee $0
   local.get $6
   i32.add
   i32.const 0
   local.get $11
   local.get $6
   i32.sub
   memory.fill $0
   local.get $0
   local.get $10
   i32.ne
   if
    local.get $2
    local.get $0
    i32.store $0
    local.get $2
    local.get $0
    i32.store $0 offset=4
   end
   local.get $2
   local.get $11
   i32.store $0 offset=8
  end
  local.get $2
  i32.load $0 offset=4
  local.get $3
  i32.const 2
  i32.shl
  i32.add
  i32.const 2
  i32.store $0
  local.get $2
  local.get $5
  i32.store $0 offset=12
  global.get $std/array/arr
  local.tee $2
  i32.load $0 offset=12
  local.tee $3
  i32.const 1
  i32.add
  local.tee $5
  local.tee $0
  local.get $2
  i32.load $0 offset=8
  local.tee $6
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   local.get $0
   i32.const 268435455
   i32.gt_u
   if
    unreachable
   end
   local.get $2
   i32.load $0
   local.set $10
   i32.const 1073741820
   local.get $6
   i32.const 1
   i32.shl
   local.tee $1
   local.get $1
   i32.const 1073741820
   i32.ge_u
   select
   local.tee $1
   i32.const 8
   local.get $0
   local.get $0
   i32.const 8
   i32.le_u
   select
   i32.const 2
   i32.shl
   local.tee $0
   local.get $0
   local.get $1
   i32.lt_u
   select
   local.tee $11
   i32.const 1073741804
   i32.gt_u
   if
    unreachable
   end
   local.get $10
   i32.const 16
   i32.sub
   local.tee $0
   i32.const 15
   i32.and
   i32.const 1
   local.get $0
   select
   if
    unreachable
   end
   global.get $~lib/rt/stub/offset
   local.get $0
   i32.const 4
   i32.sub
   local.tee $1
   i32.load $0
   local.tee $12
   local.get $0
   i32.add
   i32.eq
   local.set $13
   local.get $11
   i32.const 16
   i32.add
   local.tee $14
   i32.const 19
   i32.add
   i32.const -16
   i32.and
   i32.const 4
   i32.sub
   local.set $15
   local.get $12
   local.get $14
   i32.lt_u
   if
    local.get $13
    if
     local.get $14
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     local.get $0
     local.get $15
     i32.add
     local.tee $12
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $12
     global.set $~lib/rt/stub/offset
     local.get $1
     local.get $15
     i32.store $0
    else
     local.get $15
     local.get $12
     i32.const 1
     i32.shl
     local.tee $1
     local.get $1
     local.get $15
     i32.lt_u
     select
     local.tee $13
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     global.get $~lib/rt/stub/offset
     i32.eqz
     if
      i32.const 9932
      global.set $~lib/rt/stub/offset
     end
     global.get $~lib/rt/stub/offset
     local.tee $1
     local.set $14
     local.get $1
     i32.const 4
     i32.add
     local.tee $1
     local.get $13
     i32.const 19
     i32.add
     i32.const -16
     i32.and
     i32.const 4
     i32.sub
     local.tee $13
     i32.add
     local.tee $15
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $15
     global.set $~lib/rt/stub/offset
     local.get $14
     local.get $13
     i32.store $0
     local.get $1
     local.get $0
     local.get $12
     memory.copy $0 $0
     local.get $1
     local.set $0
    end
   else
    local.get $13
    if
     local.get $0
     local.get $15
     i32.add
     global.set $~lib/rt/stub/offset
     local.get $1
     local.get $15
     i32.store $0
    end
   end
   local.get $0
   i32.const 4
   i32.sub
   local.get $11
   i32.store $0 offset=8
   local.get $0
   i32.const 16
   i32.add
   local.tee $0
   local.get $6
   i32.add
   i32.const 0
   local.get $11
   local.get $6
   i32.sub
   memory.fill $0
   local.get $0
   local.get $10
   i32.ne
   if
    local.get $2
    local.get $0
    i32.store $0
    local.get $2
    local.get $0
    i32.store $0 offset=4
   end
   local.get $2
   local.get $11
   i32.store $0 offset=8
  end
  local.get $2
  i32.load $0 offset=4
  local.get $3
  i32.const 2
  i32.shl
  i32.add
  i32.const 3
  i32.store $0
  local.get $2
  local.get $5
  i32.store $0 offset=12
  global.get $std/array/arr
  i32.const 7152
  call $~lib/array/Array<i32>#filter
  i32.load $0 offset=12
  i32.const 2
  i32.ne
  if
   unreachable
  end
  i32.const 0
  global.set $std/array/i
  global.get $std/array/arr
  i32.const 7184
  call $~lib/array/Array<i32>#filter
  drop
  global.get $std/array/i
  i32.const 6
  i32.ne
  if
   unreachable
  end
  global.get $std/array/arr
  i32.load $0 offset=12
  i32.const 8
  i32.ne
  if
   unreachable
  end
  i32.const 0
  global.set $std/array/i
  global.get $std/array/arr
  i32.const 7216
  call $~lib/array/Array<i32>#filter
  drop
  global.get $std/array/i
  i32.const 406
  i32.ne
  if
   unreachable
  end
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  local.tee $1
  i32.const 0
  i32.le_s
  if
   unreachable
  end
  local.get $0
  i32.load $0 offset=4
  local.get $1
  i32.const 1
  i32.sub
  local.tee $1
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  drop
  local.get $0
  local.get $1
  i32.store $0 offset=12
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  local.tee $1
  i32.const 0
  i32.le_s
  if
   unreachable
  end
  local.get $0
  i32.load $0 offset=4
  local.get $1
  i32.const 1
  i32.sub
  local.tee $1
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  drop
  local.get $0
  local.get $1
  i32.store $0 offset=12
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  local.tee $1
  i32.const 0
  i32.le_s
  if
   unreachable
  end
  local.get $0
  i32.load $0 offset=4
  local.get $1
  i32.const 1
  i32.sub
  local.tee $1
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  drop
  local.get $0
  local.get $1
  i32.store $0 offset=12
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  local.tee $1
  i32.const 0
  i32.le_s
  if
   unreachable
  end
  local.get $0
  i32.load $0 offset=4
  local.get $1
  i32.const 1
  i32.sub
  local.tee $1
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  drop
  local.get $0
  local.get $1
  i32.store $0 offset=12
  i32.const 0
  global.set $std/array/i
  global.get $std/array/arr
  i32.const 7248
  call $~lib/array/Array<i32>#filter
  drop
  global.get $std/array/i
  i32.const 1
  i32.ne
  if
   unreachable
  end
  global.get $std/array/arr
  i32.load $0 offset=12
  i32.const 2
  i32.ne
  if
   unreachable
  end
  global.get $std/array/arr
  local.tee $2
  i32.load $0 offset=12
  local.tee $3
  i32.const 1
  i32.add
  local.tee $5
  local.tee $0
  local.get $2
  i32.load $0 offset=8
  local.tee $6
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   local.get $0
   i32.const 268435455
   i32.gt_u
   if
    unreachable
   end
   local.get $2
   i32.load $0
   local.set $10
   i32.const 1073741820
   local.get $6
   i32.const 1
   i32.shl
   local.tee $1
   local.get $1
   i32.const 1073741820
   i32.ge_u
   select
   local.tee $1
   i32.const 8
   local.get $0
   local.get $0
   i32.const 8
   i32.le_u
   select
   i32.const 2
   i32.shl
   local.tee $0
   local.get $0
   local.get $1
   i32.lt_u
   select
   local.tee $11
   i32.const 1073741804
   i32.gt_u
   if
    unreachable
   end
   local.get $10
   i32.const 16
   i32.sub
   local.tee $0
   i32.const 15
   i32.and
   i32.const 1
   local.get $0
   select
   if
    unreachable
   end
   global.get $~lib/rt/stub/offset
   local.get $0
   i32.const 4
   i32.sub
   local.tee $1
   i32.load $0
   local.tee $12
   local.get $0
   i32.add
   i32.eq
   local.set $13
   local.get $11
   i32.const 16
   i32.add
   local.tee $14
   i32.const 19
   i32.add
   i32.const -16
   i32.and
   i32.const 4
   i32.sub
   local.set $15
   local.get $12
   local.get $14
   i32.lt_u
   if
    local.get $13
    if
     local.get $14
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     local.get $0
     local.get $15
     i32.add
     local.tee $12
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $12
     global.set $~lib/rt/stub/offset
     local.get $1
     local.get $15
     i32.store $0
    else
     local.get $15
     local.get $12
     i32.const 1
     i32.shl
     local.tee $1
     local.get $1
     local.get $15
     i32.lt_u
     select
     local.tee $13
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     global.get $~lib/rt/stub/offset
     i32.eqz
     if
      i32.const 9932
      global.set $~lib/rt/stub/offset
     end
     global.get $~lib/rt/stub/offset
     local.tee $1
     local.set $14
     local.get $1
     i32.const 4
     i32.add
     local.tee $1
     local.get $13
     i32.const 19
     i32.add
     i32.const -16
     i32.and
     i32.const 4
     i32.sub
     local.tee $13
     i32.add
     local.tee $15
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $15
     global.set $~lib/rt/stub/offset
     local.get $14
     local.get $13
     i32.store $0
     local.get $1
     local.get $0
     local.get $12
     memory.copy $0 $0
     local.get $1
     local.set $0
    end
   else
    local.get $13
    if
     local.get $0
     local.get $15
     i32.add
     global.set $~lib/rt/stub/offset
     local.get $1
     local.get $15
     i32.store $0
    end
   end
   local.get $0
   i32.const 4
   i32.sub
   local.get $11
   i32.store $0 offset=8
   local.get $0
   i32.const 16
   i32.add
   local.tee $0
   local.get $6
   i32.add
   i32.const 0
   local.get $11
   local.get $6
   i32.sub
   memory.fill $0
   local.get $0
   local.get $10
   i32.ne
   if
    local.get $2
    local.get $0
    i32.store $0
    local.get $2
    local.get $0
    i32.store $0 offset=4
   end
   local.get $2
   local.get $11
   i32.store $0 offset=8
  end
  local.get $2
  i32.load $0 offset=4
  local.get $3
  i32.const 2
  i32.shl
  i32.add
  i32.const 2
  i32.store $0
  local.get $2
  local.get $5
  i32.store $0 offset=12
  global.get $std/array/arr
  local.tee $2
  i32.load $0 offset=12
  local.tee $3
  i32.const 1
  i32.add
  local.tee $5
  local.tee $0
  local.get $2
  i32.load $0 offset=8
  local.tee $6
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   local.get $0
   i32.const 268435455
   i32.gt_u
   if
    unreachable
   end
   local.get $2
   i32.load $0
   local.set $10
   i32.const 1073741820
   local.get $6
   i32.const 1
   i32.shl
   local.tee $1
   local.get $1
   i32.const 1073741820
   i32.ge_u
   select
   local.tee $1
   i32.const 8
   local.get $0
   local.get $0
   i32.const 8
   i32.le_u
   select
   i32.const 2
   i32.shl
   local.tee $0
   local.get $0
   local.get $1
   i32.lt_u
   select
   local.tee $11
   i32.const 1073741804
   i32.gt_u
   if
    unreachable
   end
   local.get $10
   i32.const 16
   i32.sub
   local.tee $0
   i32.const 15
   i32.and
   i32.const 1
   local.get $0
   select
   if
    unreachable
   end
   global.get $~lib/rt/stub/offset
   local.get $0
   i32.const 4
   i32.sub
   local.tee $1
   i32.load $0
   local.tee $12
   local.get $0
   i32.add
   i32.eq
   local.set $13
   local.get $11
   i32.const 16
   i32.add
   local.tee $14
   i32.const 19
   i32.add
   i32.const -16
   i32.and
   i32.const 4
   i32.sub
   local.set $15
   local.get $12
   local.get $14
   i32.lt_u
   if
    local.get $13
    if
     local.get $14
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     local.get $0
     local.get $15
     i32.add
     local.tee $12
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $12
     global.set $~lib/rt/stub/offset
     local.get $1
     local.get $15
     i32.store $0
    else
     local.get $15
     local.get $12
     i32.const 1
     i32.shl
     local.tee $1
     local.get $1
     local.get $15
     i32.lt_u
     select
     local.tee $13
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     global.get $~lib/rt/stub/offset
     i32.eqz
     if
      i32.const 9932
      global.set $~lib/rt/stub/offset
     end
     global.get $~lib/rt/stub/offset
     local.tee $1
     local.set $14
     local.get $1
     i32.const 4
     i32.add
     local.tee $1
     local.get $13
     i32.const 19
     i32.add
     i32.const -16
     i32.and
     i32.const 4
     i32.sub
     local.tee $13
     i32.add
     local.tee $15
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $15
     global.set $~lib/rt/stub/offset
     local.get $14
     local.get $13
     i32.store $0
     local.get $1
     local.get $0
     local.get $12
     memory.copy $0 $0
     local.get $1
     local.set $0
    end
   else
    local.get $13
    if
     local.get $0
     local.get $15
     i32.add
     global.set $~lib/rt/stub/offset
     local.get $1
     local.get $15
     i32.store $0
    end
   end
   local.get $0
   i32.const 4
   i32.sub
   local.get $11
   i32.store $0 offset=8
   local.get $0
   i32.const 16
   i32.add
   local.tee $0
   local.get $6
   i32.add
   i32.const 0
   local.get $11
   local.get $6
   i32.sub
   memory.fill $0
   local.get $0
   local.get $10
   i32.ne
   if
    local.get $2
    local.get $0
    i32.store $0
    local.get $2
    local.get $0
    i32.store $0 offset=4
   end
   local.get $2
   local.get $11
   i32.store $0 offset=8
  end
  local.get $2
  i32.load $0 offset=4
  local.get $3
  i32.const 2
  i32.shl
  i32.add
  i32.const 3
  i32.store $0
  local.get $2
  local.get $5
  i32.store $0 offset=12
  i32.const 0
  local.set $0
  i32.const 0
  local.set $1
  global.get $std/array/arr
  local.tee $2
  i32.load $0 offset=12
  local.set $3
  loop $for-loop|0577
   local.get $1
   local.get $3
   local.get $2
   i32.load $0 offset=12
   local.tee $5
   local.get $3
   local.get $5
   i32.lt_s
   select
   i32.lt_s
   if
    local.get $0
    local.get $2
    i32.load $0 offset=4
    local.get $1
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.get $1
    local.get $2
    i32.const 7280
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
    local.set $0
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|0577
   end
  end
  local.get $0
  global.set $std/array/i
  global.get $std/array/i
  i32.const 6
  i32.ne
  if
   unreachable
  end
  i32.const 4
  local.set $0
  i32.const 0
  local.set $1
  global.get $std/array/arr
  local.tee $2
  i32.load $0 offset=12
  local.set $3
  loop $for-loop|0581
   local.get $1
   local.get $3
   local.get $2
   i32.load $0 offset=12
   local.tee $5
   local.get $3
   local.get $5
   i32.lt_s
   select
   i32.lt_s
   if
    local.get $0
    local.get $2
    i32.load $0 offset=4
    local.get $1
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.get $1
    local.get $2
    i32.const 7312
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
    local.set $0
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|0581
   end
  end
  local.get $0
  global.set $std/array/i
  global.get $std/array/i
  i32.const 10
  i32.ne
  if
   unreachable
  end
  i32.const 0
  local.set $0
  i32.const 0
  local.set $1
  global.get $std/array/arr
  local.tee $2
  i32.load $0 offset=12
  local.set $3
  loop $for-loop|0585
   local.get $1
   local.get $3
   local.get $2
   i32.load $0 offset=12
   local.tee $5
   local.get $3
   local.get $5
   i32.lt_s
   select
   i32.lt_s
   if
    local.get $0
    local.get $2
    i32.load $0 offset=4
    local.get $1
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.get $1
    local.get $2
    i32.const 7344
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
    local.set $0
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|0585
   end
  end
  local.get $0
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $0
  i32.const 0
  local.set $1
  global.get $std/array/arr
  local.tee $2
  i32.load $0 offset=12
  local.set $3
  loop $for-loop|0589
   local.get $1
   local.get $3
   local.get $2
   i32.load $0 offset=12
   local.tee $5
   local.get $3
   local.get $5
   i32.lt_s
   select
   i32.lt_s
   if
    local.get $0
    local.get $2
    i32.load $0 offset=4
    local.get $1
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.get $1
    local.get $2
    i32.const 7376
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
    local.set $0
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|0589
   end
  end
  local.get $0
  if
   unreachable
  end
  i32.const 0
  local.set $0
  i32.const 0
  local.set $1
  global.get $std/array/arr
  local.tee $2
  i32.load $0 offset=12
  local.set $3
  loop $for-loop|0593
   local.get $1
   local.get $3
   local.get $2
   i32.load $0 offset=12
   local.tee $5
   local.get $3
   local.get $5
   i32.lt_s
   select
   i32.lt_s
   if
    local.get $0
    local.get $2
    i32.load $0 offset=4
    local.get $1
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.get $1
    local.get $2
    i32.const 7408
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
    local.set $0
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|0593
   end
  end
  local.get $0
  global.set $std/array/i
  global.get $std/array/i
  i32.const 6
  i32.ne
  if
   unreachable
  end
  global.get $std/array/arr
  i32.load $0 offset=12
  i32.const 8
  i32.ne
  if
   unreachable
  end
  i32.const 0
  local.set $0
  i32.const 0
  local.set $1
  global.get $std/array/arr
  local.tee $2
  i32.load $0 offset=12
  local.set $3
  loop $for-loop|0598
   local.get $1
   local.get $3
   local.get $2
   i32.load $0 offset=12
   local.tee $5
   local.get $3
   local.get $5
   i32.lt_s
   select
   i32.lt_s
   if
    local.get $0
    local.get $2
    i32.load $0 offset=4
    local.get $1
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.get $1
    local.get $2
    i32.const 7440
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
    local.set $0
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|0598
   end
  end
  local.get $0
  global.set $std/array/i
  global.get $std/array/i
  i32.const 10
  i32.ne
  if
   unreachable
  end
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  local.tee $1
  i32.const 0
  i32.le_s
  if
   unreachable
  end
  local.get $0
  i32.load $0 offset=4
  local.get $1
  i32.const 1
  i32.sub
  local.tee $1
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  drop
  local.get $0
  local.get $1
  i32.store $0 offset=12
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  local.tee $1
  i32.const 0
  i32.le_s
  if
   unreachable
  end
  local.get $0
  i32.load $0 offset=4
  local.get $1
  i32.const 1
  i32.sub
  local.tee $1
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  drop
  local.get $0
  local.get $1
  i32.store $0 offset=12
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  local.tee $1
  i32.const 0
  i32.le_s
  if
   unreachable
  end
  local.get $0
  i32.load $0 offset=4
  local.get $1
  i32.const 1
  i32.sub
  local.tee $1
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  drop
  local.get $0
  local.get $1
  i32.store $0 offset=12
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  local.tee $1
  i32.const 0
  i32.le_s
  if
   unreachable
  end
  local.get $0
  i32.load $0 offset=4
  local.get $1
  i32.const 1
  i32.sub
  local.tee $1
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  drop
  local.get $0
  local.get $1
  i32.store $0 offset=12
  i32.const 0
  local.set $0
  i32.const 0
  local.set $1
  global.get $std/array/arr
  local.tee $2
  i32.load $0 offset=12
  local.set $3
  loop $for-loop|0602
   local.get $1
   local.get $3
   local.get $2
   i32.load $0 offset=12
   local.tee $5
   local.get $3
   local.get $5
   i32.lt_s
   select
   i32.lt_s
   if
    local.get $0
    local.get $2
    i32.load $0 offset=4
    local.get $1
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.get $1
    local.get $2
    i32.const 7472
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
    local.set $0
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|0602
   end
  end
  local.get $0
  global.set $std/array/i
  global.get $std/array/i
  i32.const 1
  i32.ne
  if
   unreachable
  end
  global.get $std/array/arr
  i32.load $0 offset=12
  i32.const 2
  i32.ne
  if
   unreachable
  end
  global.get $std/array/arr
  local.tee $2
  i32.load $0 offset=12
  local.tee $3
  i32.const 1
  i32.add
  local.tee $5
  local.tee $0
  local.get $2
  i32.load $0 offset=8
  local.tee $6
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   local.get $0
   i32.const 268435455
   i32.gt_u
   if
    unreachable
   end
   local.get $2
   i32.load $0
   local.set $10
   i32.const 1073741820
   local.get $6
   i32.const 1
   i32.shl
   local.tee $1
   local.get $1
   i32.const 1073741820
   i32.ge_u
   select
   local.tee $1
   i32.const 8
   local.get $0
   local.get $0
   i32.const 8
   i32.le_u
   select
   i32.const 2
   i32.shl
   local.tee $0
   local.get $0
   local.get $1
   i32.lt_u
   select
   local.tee $11
   i32.const 1073741804
   i32.gt_u
   if
    unreachable
   end
   local.get $10
   i32.const 16
   i32.sub
   local.tee $0
   i32.const 15
   i32.and
   i32.const 1
   local.get $0
   select
   if
    unreachable
   end
   global.get $~lib/rt/stub/offset
   local.get $0
   i32.const 4
   i32.sub
   local.tee $1
   i32.load $0
   local.tee $12
   local.get $0
   i32.add
   i32.eq
   local.set $13
   local.get $11
   i32.const 16
   i32.add
   local.tee $14
   i32.const 19
   i32.add
   i32.const -16
   i32.and
   i32.const 4
   i32.sub
   local.set $15
   local.get $12
   local.get $14
   i32.lt_u
   if
    local.get $13
    if
     local.get $14
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     local.get $0
     local.get $15
     i32.add
     local.tee $12
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $12
     global.set $~lib/rt/stub/offset
     local.get $1
     local.get $15
     i32.store $0
    else
     local.get $15
     local.get $12
     i32.const 1
     i32.shl
     local.tee $1
     local.get $1
     local.get $15
     i32.lt_u
     select
     local.tee $13
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     global.get $~lib/rt/stub/offset
     i32.eqz
     if
      i32.const 9932
      global.set $~lib/rt/stub/offset
     end
     global.get $~lib/rt/stub/offset
     local.tee $1
     local.set $14
     local.get $1
     i32.const 4
     i32.add
     local.tee $1
     local.get $13
     i32.const 19
     i32.add
     i32.const -16
     i32.and
     i32.const 4
     i32.sub
     local.tee $13
     i32.add
     local.tee $15
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $15
     global.set $~lib/rt/stub/offset
     local.get $14
     local.get $13
     i32.store $0
     local.get $1
     local.get $0
     local.get $12
     memory.copy $0 $0
     local.get $1
     local.set $0
    end
   else
    local.get $13
    if
     local.get $0
     local.get $15
     i32.add
     global.set $~lib/rt/stub/offset
     local.get $1
     local.get $15
     i32.store $0
    end
   end
   local.get $0
   i32.const 4
   i32.sub
   local.get $11
   i32.store $0 offset=8
   local.get $0
   i32.const 16
   i32.add
   local.tee $0
   local.get $6
   i32.add
   i32.const 0
   local.get $11
   local.get $6
   i32.sub
   memory.fill $0
   local.get $0
   local.get $10
   i32.ne
   if
    local.get $2
    local.get $0
    i32.store $0
    local.get $2
    local.get $0
    i32.store $0 offset=4
   end
   local.get $2
   local.get $11
   i32.store $0 offset=8
  end
  local.get $2
  i32.load $0 offset=4
  local.get $3
  i32.const 2
  i32.shl
  i32.add
  i32.const 2
  i32.store $0
  local.get $2
  local.get $5
  i32.store $0 offset=12
  global.get $std/array/arr
  local.tee $2
  i32.load $0 offset=12
  local.tee $3
  i32.const 1
  i32.add
  local.tee $5
  local.tee $0
  local.get $2
  i32.load $0 offset=8
  local.tee $6
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   local.get $0
   i32.const 268435455
   i32.gt_u
   if
    unreachable
   end
   local.get $2
   i32.load $0
   local.set $10
   i32.const 1073741820
   local.get $6
   i32.const 1
   i32.shl
   local.tee $1
   local.get $1
   i32.const 1073741820
   i32.ge_u
   select
   local.tee $1
   i32.const 8
   local.get $0
   local.get $0
   i32.const 8
   i32.le_u
   select
   i32.const 2
   i32.shl
   local.tee $0
   local.get $0
   local.get $1
   i32.lt_u
   select
   local.tee $11
   i32.const 1073741804
   i32.gt_u
   if
    unreachable
   end
   local.get $10
   i32.const 16
   i32.sub
   local.tee $0
   i32.const 15
   i32.and
   i32.const 1
   local.get $0
   select
   if
    unreachable
   end
   global.get $~lib/rt/stub/offset
   local.get $0
   i32.const 4
   i32.sub
   local.tee $1
   i32.load $0
   local.tee $12
   local.get $0
   i32.add
   i32.eq
   local.set $13
   local.get $11
   i32.const 16
   i32.add
   local.tee $14
   i32.const 19
   i32.add
   i32.const -16
   i32.and
   i32.const 4
   i32.sub
   local.set $15
   local.get $12
   local.get $14
   i32.lt_u
   if
    local.get $13
    if
     local.get $14
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     local.get $0
     local.get $15
     i32.add
     local.tee $12
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $12
     global.set $~lib/rt/stub/offset
     local.get $1
     local.get $15
     i32.store $0
    else
     local.get $15
     local.get $12
     i32.const 1
     i32.shl
     local.tee $1
     local.get $1
     local.get $15
     i32.lt_u
     select
     local.tee $13
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     global.get $~lib/rt/stub/offset
     i32.eqz
     if
      i32.const 9932
      global.set $~lib/rt/stub/offset
     end
     global.get $~lib/rt/stub/offset
     local.tee $1
     local.set $14
     local.get $1
     i32.const 4
     i32.add
     local.tee $1
     local.get $13
     i32.const 19
     i32.add
     i32.const -16
     i32.and
     i32.const 4
     i32.sub
     local.tee $13
     i32.add
     local.tee $15
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $15
     global.set $~lib/rt/stub/offset
     local.get $14
     local.get $13
     i32.store $0
     local.get $1
     local.get $0
     local.get $12
     memory.copy $0 $0
     local.get $1
     local.set $0
    end
   else
    local.get $13
    if
     local.get $0
     local.get $15
     i32.add
     global.set $~lib/rt/stub/offset
     local.get $1
     local.get $15
     i32.store $0
    end
   end
   local.get $0
   i32.const 4
   i32.sub
   local.get $11
   i32.store $0 offset=8
   local.get $0
   i32.const 16
   i32.add
   local.tee $0
   local.get $6
   i32.add
   i32.const 0
   local.get $11
   local.get $6
   i32.sub
   memory.fill $0
   local.get $0
   local.get $10
   i32.ne
   if
    local.get $2
    local.get $0
    i32.store $0
    local.get $2
    local.get $0
    i32.store $0 offset=4
   end
   local.get $2
   local.get $11
   i32.store $0 offset=8
  end
  local.get $2
  i32.load $0 offset=4
  local.get $3
  i32.const 2
  i32.shl
  i32.add
  i32.const 3
  i32.store $0
  local.get $2
  local.get $5
  i32.store $0 offset=12
  i32.const 0
  local.set $0
  global.get $std/array/arr
  local.tee $2
  i32.load $0 offset=12
  i32.const 1
  i32.sub
  local.set $1
  loop $for-loop|0606
   local.get $1
   i32.const 0
   i32.ge_s
   if
    local.get $0
    local.get $2
    i32.load $0 offset=4
    local.get $1
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.get $1
    local.get $2
    i32.const 7504
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
    local.set $0
    local.get $1
    i32.const 1
    i32.sub
    local.set $1
    br $for-loop|0606
   end
  end
  local.get $0
  global.set $std/array/i
  global.get $std/array/i
  i32.const 6
  i32.ne
  if
   unreachable
  end
  i32.const 4
  local.set $0
  global.get $std/array/arr
  local.tee $2
  i32.load $0 offset=12
  i32.const 1
  i32.sub
  local.set $1
  loop $for-loop|0610
   local.get $1
   i32.const 0
   i32.ge_s
   if
    local.get $0
    local.get $2
    i32.load $0 offset=4
    local.get $1
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.get $1
    local.get $2
    i32.const 7536
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
    local.set $0
    local.get $1
    i32.const 1
    i32.sub
    local.set $1
    br $for-loop|0610
   end
  end
  local.get $0
  global.set $std/array/i
  global.get $std/array/i
  i32.const 10
  i32.ne
  if
   unreachable
  end
  i32.const 0
  local.set $0
  global.get $std/array/arr
  local.tee $2
  i32.load $0 offset=12
  i32.const 1
  i32.sub
  local.set $1
  loop $for-loop|0614
   local.get $1
   i32.const 0
   i32.ge_s
   if
    local.get $0
    local.get $2
    i32.load $0 offset=4
    local.get $1
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.get $1
    local.get $2
    i32.const 7568
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
    local.set $0
    local.get $1
    i32.const 1
    i32.sub
    local.set $1
    br $for-loop|0614
   end
  end
  local.get $0
  i32.eqz
  if
   unreachable
  end
  i32.const 0
  local.set $0
  global.get $std/array/arr
  local.tee $2
  i32.load $0 offset=12
  i32.const 1
  i32.sub
  local.set $1
  loop $for-loop|0618
   local.get $1
   i32.const 0
   i32.ge_s
   if
    local.get $0
    local.get $2
    i32.load $0 offset=4
    local.get $1
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.get $1
    local.get $2
    i32.const 7600
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
    local.set $0
    local.get $1
    i32.const 1
    i32.sub
    local.set $1
    br $for-loop|0618
   end
  end
  local.get $0
  if
   unreachable
  end
  i32.const 0
  local.set $0
  global.get $std/array/arr
  local.tee $2
  i32.load $0 offset=12
  i32.const 1
  i32.sub
  local.set $1
  loop $for-loop|0622
   local.get $1
   i32.const 0
   i32.ge_s
   if
    local.get $0
    local.get $2
    i32.load $0 offset=4
    local.get $1
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.get $1
    local.get $2
    i32.const 7632
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
    local.set $0
    local.get $1
    i32.const 1
    i32.sub
    local.set $1
    br $for-loop|0622
   end
  end
  local.get $0
  global.set $std/array/i
  global.get $std/array/i
  i32.const 6
  i32.ne
  if
   unreachable
  end
  global.get $std/array/arr
  i32.load $0 offset=12
  i32.const 8
  i32.ne
  if
   unreachable
  end
  i32.const 0
  local.set $0
  global.get $std/array/arr
  local.tee $2
  i32.load $0 offset=12
  i32.const 1
  i32.sub
  local.set $1
  loop $for-loop|0627
   local.get $1
   i32.const 0
   i32.ge_s
   if
    local.get $0
    local.get $2
    i32.load $0 offset=4
    local.get $1
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.get $1
    local.get $2
    i32.const 7664
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
    local.set $0
    local.get $1
    i32.const 1
    i32.sub
    local.set $1
    br $for-loop|0627
   end
  end
  local.get $0
  global.set $std/array/i
  global.get $std/array/i
  i32.const 10
  i32.ne
  if
   unreachable
  end
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  local.tee $1
  i32.const 0
  i32.le_s
  if
   unreachable
  end
  local.get $0
  i32.load $0 offset=4
  local.get $1
  i32.const 1
  i32.sub
  local.tee $1
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  drop
  local.get $0
  local.get $1
  i32.store $0 offset=12
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  local.tee $1
  i32.const 0
  i32.le_s
  if
   unreachable
  end
  local.get $0
  i32.load $0 offset=4
  local.get $1
  i32.const 1
  i32.sub
  local.tee $1
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  drop
  local.get $0
  local.get $1
  i32.store $0 offset=12
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  local.tee $1
  i32.const 0
  i32.le_s
  if
   unreachable
  end
  local.get $0
  i32.load $0 offset=4
  local.get $1
  i32.const 1
  i32.sub
  local.tee $1
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  drop
  local.get $0
  local.get $1
  i32.store $0 offset=12
  global.get $std/array/arr
  local.tee $0
  i32.load $0 offset=12
  local.tee $1
  i32.const 0
  i32.le_s
  if
   unreachable
  end
  local.get $0
  i32.load $0 offset=4
  local.get $1
  i32.const 1
  i32.sub
  local.tee $1
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  drop
  local.get $0
  local.get $1
  i32.store $0 offset=12
  i32.const 0
  local.set $0
  global.get $std/array/arr
  local.tee $2
  i32.load $0 offset=12
  i32.const 1
  i32.sub
  local.set $1
  loop $for-loop|0631
   local.get $1
   i32.const 0
   i32.ge_s
   if
    local.get $0
    local.get $2
    i32.load $0 offset=4
    local.get $1
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.get $1
    local.get $2
    i32.const 7696
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
    local.set $0
    local.get $1
    i32.const 1
    i32.sub
    local.set $1
    br $for-loop|0631
   end
  end
  local.get $0
  global.set $std/array/i
  global.get $std/array/i
  i32.const 6
  i32.ne
  if
   unreachable
  end
  global.get $std/array/arr
  i32.load $0 offset=12
  if
   unreachable
  end
  global.get $std/array/arr
  local.tee $2
  i32.load $0 offset=12
  local.tee $3
  i32.const 1
  i32.add
  local.tee $5
  local.tee $0
  local.get $2
  i32.load $0 offset=8
  local.tee $6
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   local.get $0
   i32.const 268435455
   i32.gt_u
   if
    unreachable
   end
   local.get $2
   i32.load $0
   local.set $10
   i32.const 1073741820
   local.get $6
   i32.const 1
   i32.shl
   local.tee $1
   local.get $1
   i32.const 1073741820
   i32.ge_u
   select
   local.tee $1
   i32.const 8
   local.get $0
   local.get $0
   i32.const 8
   i32.le_u
   select
   i32.const 2
   i32.shl
   local.tee $0
   local.get $0
   local.get $1
   i32.lt_u
   select
   local.tee $11
   i32.const 1073741804
   i32.gt_u
   if
    unreachable
   end
   local.get $10
   i32.const 16
   i32.sub
   local.tee $0
   i32.const 15
   i32.and
   i32.const 1
   local.get $0
   select
   if
    unreachable
   end
   global.get $~lib/rt/stub/offset
   local.get $0
   i32.const 4
   i32.sub
   local.tee $1
   i32.load $0
   local.tee $12
   local.get $0
   i32.add
   i32.eq
   local.set $13
   local.get $11
   i32.const 16
   i32.add
   local.tee $14
   i32.const 19
   i32.add
   i32.const -16
   i32.and
   i32.const 4
   i32.sub
   local.set $15
   local.get $12
   local.get $14
   i32.lt_u
   if
    local.get $13
    if
     local.get $14
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     local.get $0
     local.get $15
     i32.add
     local.tee $12
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $12
     global.set $~lib/rt/stub/offset
     local.get $1
     local.get $15
     i32.store $0
    else
     local.get $15
     local.get $12
     i32.const 1
     i32.shl
     local.tee $1
     local.get $1
     local.get $15
     i32.lt_u
     select
     local.tee $13
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     global.get $~lib/rt/stub/offset
     i32.eqz
     if
      i32.const 9932
      global.set $~lib/rt/stub/offset
     end
     global.get $~lib/rt/stub/offset
     local.tee $1
     local.set $14
     local.get $1
     i32.const 4
     i32.add
     local.tee $1
     local.get $13
     i32.const 19
     i32.add
     i32.const -16
     i32.and
     i32.const 4
     i32.sub
     local.tee $13
     i32.add
     local.tee $15
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $15
     global.set $~lib/rt/stub/offset
     local.get $14
     local.get $13
     i32.store $0
     local.get $1
     local.get $0
     local.get $12
     memory.copy $0 $0
     local.get $1
     local.set $0
    end
   else
    local.get $13
    if
     local.get $0
     local.get $15
     i32.add
     global.set $~lib/rt/stub/offset
     local.get $1
     local.get $15
     i32.store $0
    end
   end
   local.get $0
   i32.const 4
   i32.sub
   local.get $11
   i32.store $0 offset=8
   local.get $0
   i32.const 16
   i32.add
   local.tee $0
   local.get $6
   i32.add
   i32.const 0
   local.get $11
   local.get $6
   i32.sub
   memory.fill $0
   local.get $0
   local.get $10
   i32.ne
   if
    local.get $2
    local.get $0
    i32.store $0
    local.get $2
    local.get $0
    i32.store $0 offset=4
   end
   local.get $2
   local.get $11
   i32.store $0 offset=8
  end
  local.get $2
  i32.load $0 offset=4
  local.get $3
  i32.const 2
  i32.shl
  i32.add
  i32.const 0
  i32.store $0
  local.get $2
  local.get $5
  i32.store $0 offset=12
  global.get $std/array/arr
  local.tee $2
  i32.load $0 offset=12
  local.tee $3
  i32.const 1
  i32.add
  local.tee $5
  local.tee $0
  local.get $2
  i32.load $0 offset=8
  local.tee $6
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   local.get $0
   i32.const 268435455
   i32.gt_u
   if
    unreachable
   end
   local.get $2
   i32.load $0
   local.set $10
   i32.const 1073741820
   local.get $6
   i32.const 1
   i32.shl
   local.tee $1
   local.get $1
   i32.const 1073741820
   i32.ge_u
   select
   local.tee $1
   i32.const 8
   local.get $0
   local.get $0
   i32.const 8
   i32.le_u
   select
   i32.const 2
   i32.shl
   local.tee $0
   local.get $0
   local.get $1
   i32.lt_u
   select
   local.tee $11
   i32.const 1073741804
   i32.gt_u
   if
    unreachable
   end
   local.get $10
   i32.const 16
   i32.sub
   local.tee $0
   i32.const 15
   i32.and
   i32.const 1
   local.get $0
   select
   if
    unreachable
   end
   global.get $~lib/rt/stub/offset
   local.get $0
   i32.const 4
   i32.sub
   local.tee $1
   i32.load $0
   local.tee $12
   local.get $0
   i32.add
   i32.eq
   local.set $13
   local.get $11
   i32.const 16
   i32.add
   local.tee $14
   i32.const 19
   i32.add
   i32.const -16
   i32.and
   i32.const 4
   i32.sub
   local.set $15
   local.get $12
   local.get $14
   i32.lt_u
   if
    local.get $13
    if
     local.get $14
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     local.get $0
     local.get $15
     i32.add
     local.tee $12
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $12
     global.set $~lib/rt/stub/offset
     local.get $1
     local.get $15
     i32.store $0
    else
     local.get $15
     local.get $12
     i32.const 1
     i32.shl
     local.tee $1
     local.get $1
     local.get $15
     i32.lt_u
     select
     local.tee $13
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     global.get $~lib/rt/stub/offset
     i32.eqz
     if
      i32.const 9932
      global.set $~lib/rt/stub/offset
     end
     global.get $~lib/rt/stub/offset
     local.tee $1
     local.set $14
     local.get $1
     i32.const 4
     i32.add
     local.tee $1
     local.get $13
     i32.const 19
     i32.add
     i32.const -16
     i32.and
     i32.const 4
     i32.sub
     local.tee $13
     i32.add
     local.tee $15
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $15
     global.set $~lib/rt/stub/offset
     local.get $14
     local.get $13
     i32.store $0
     local.get $1
     local.get $0
     local.get $12
     memory.copy $0 $0
     local.get $1
     local.set $0
    end
   else
    local.get $13
    if
     local.get $0
     local.get $15
     i32.add
     global.set $~lib/rt/stub/offset
     local.get $1
     local.get $15
     i32.store $0
    end
   end
   local.get $0
   i32.const 4
   i32.sub
   local.get $11
   i32.store $0 offset=8
   local.get $0
   i32.const 16
   i32.add
   local.tee $0
   local.get $6
   i32.add
   i32.const 0
   local.get $11
   local.get $6
   i32.sub
   memory.fill $0
   local.get $0
   local.get $10
   i32.ne
   if
    local.get $2
    local.get $0
    i32.store $0
    local.get $2
    local.get $0
    i32.store $0 offset=4
   end
   local.get $2
   local.get $11
   i32.store $0 offset=8
  end
  local.get $2
  i32.load $0 offset=4
  local.get $3
  i32.const 2
  i32.shl
  i32.add
  i32.const 1
  i32.store $0
  local.get $2
  local.get $5
  i32.store $0 offset=12
  global.get $std/array/arr
  local.tee $2
  i32.load $0 offset=12
  local.tee $3
  i32.const 1
  i32.add
  local.tee $5
  local.tee $0
  local.get $2
  i32.load $0 offset=8
  local.tee $6
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   local.get $0
   i32.const 268435455
   i32.gt_u
   if
    unreachable
   end
   local.get $2
   i32.load $0
   local.set $10
   i32.const 1073741820
   local.get $6
   i32.const 1
   i32.shl
   local.tee $1
   local.get $1
   i32.const 1073741820
   i32.ge_u
   select
   local.tee $1
   i32.const 8
   local.get $0
   local.get $0
   i32.const 8
   i32.le_u
   select
   i32.const 2
   i32.shl
   local.tee $0
   local.get $0
   local.get $1
   i32.lt_u
   select
   local.tee $11
   i32.const 1073741804
   i32.gt_u
   if
    unreachable
   end
   local.get $10
   i32.const 16
   i32.sub
   local.tee $0
   i32.const 15
   i32.and
   i32.const 1
   local.get $0
   select
   if
    unreachable
   end
   global.get $~lib/rt/stub/offset
   local.get $0
   i32.const 4
   i32.sub
   local.tee $1
   i32.load $0
   local.tee $12
   local.get $0
   i32.add
   i32.eq
   local.set $13
   local.get $11
   i32.const 16
   i32.add
   local.tee $14
   i32.const 19
   i32.add
   i32.const -16
   i32.and
   i32.const 4
   i32.sub
   local.set $15
   local.get $12
   local.get $14
   i32.lt_u
   if
    local.get $13
    if
     local.get $14
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     local.get $0
     local.get $15
     i32.add
     local.tee $12
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $12
     global.set $~lib/rt/stub/offset
     local.get $1
     local.get $15
     i32.store $0
    else
     local.get $15
     local.get $12
     i32.const 1
     i32.shl
     local.tee $1
     local.get $1
     local.get $15
     i32.lt_u
     select
     local.tee $13
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     global.get $~lib/rt/stub/offset
     i32.eqz
     if
      i32.const 9932
      global.set $~lib/rt/stub/offset
     end
     global.get $~lib/rt/stub/offset
     local.tee $1
     local.set $14
     local.get $1
     i32.const 4
     i32.add
     local.tee $1
     local.get $13
     i32.const 19
     i32.add
     i32.const -16
     i32.and
     i32.const 4
     i32.sub
     local.tee $13
     i32.add
     local.tee $15
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $15
     global.set $~lib/rt/stub/offset
     local.get $14
     local.get $13
     i32.store $0
     local.get $1
     local.get $0
     local.get $12
     memory.copy $0 $0
     local.get $1
     local.set $0
    end
   else
    local.get $13
    if
     local.get $0
     local.get $15
     i32.add
     global.set $~lib/rt/stub/offset
     local.get $1
     local.get $15
     i32.store $0
    end
   end
   local.get $0
   i32.const 4
   i32.sub
   local.get $11
   i32.store $0 offset=8
   local.get $0
   i32.const 16
   i32.add
   local.tee $0
   local.get $6
   i32.add
   i32.const 0
   local.get $11
   local.get $6
   i32.sub
   memory.fill $0
   local.get $0
   local.get $10
   i32.ne
   if
    local.get $2
    local.get $0
    i32.store $0
    local.get $2
    local.get $0
    i32.store $0 offset=4
   end
   local.get $2
   local.get $11
   i32.store $0 offset=8
  end
  local.get $2
  i32.load $0 offset=4
  local.get $3
  i32.const 2
  i32.shl
  i32.add
  i32.const 2
  i32.store $0
  local.get $2
  local.get $5
  i32.store $0 offset=12
  global.get $std/array/arr
  local.tee $2
  i32.load $0 offset=12
  local.tee $3
  i32.const 1
  i32.add
  local.tee $5
  local.tee $0
  local.get $2
  i32.load $0 offset=8
  local.tee $6
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   local.get $0
   i32.const 268435455
   i32.gt_u
   if
    unreachable
   end
   local.get $2
   i32.load $0
   local.set $10
   i32.const 1073741820
   local.get $6
   i32.const 1
   i32.shl
   local.tee $1
   local.get $1
   i32.const 1073741820
   i32.ge_u
   select
   local.tee $1
   i32.const 8
   local.get $0
   local.get $0
   i32.const 8
   i32.le_u
   select
   i32.const 2
   i32.shl
   local.tee $0
   local.get $0
   local.get $1
   i32.lt_u
   select
   local.tee $11
   i32.const 1073741804
   i32.gt_u
   if
    unreachable
   end
   local.get $10
   i32.const 16
   i32.sub
   local.tee $0
   i32.const 15
   i32.and
   i32.const 1
   local.get $0
   select
   if
    unreachable
   end
   global.get $~lib/rt/stub/offset
   local.get $0
   i32.const 4
   i32.sub
   local.tee $1
   i32.load $0
   local.tee $12
   local.get $0
   i32.add
   i32.eq
   local.set $13
   local.get $11
   i32.const 16
   i32.add
   local.tee $14
   i32.const 19
   i32.add
   i32.const -16
   i32.and
   i32.const 4
   i32.sub
   local.set $15
   local.get $12
   local.get $14
   i32.lt_u
   if
    local.get $13
    if
     local.get $14
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     local.get $0
     local.get $15
     i32.add
     local.tee $12
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $12
     global.set $~lib/rt/stub/offset
     local.get $1
     local.get $15
     i32.store $0
    else
     local.get $15
     local.get $12
     i32.const 1
     i32.shl
     local.tee $1
     local.get $1
     local.get $15
     i32.lt_u
     select
     local.tee $13
     i32.const 1073741820
     i32.gt_u
     if
      unreachable
     end
     global.get $~lib/rt/stub/offset
     i32.eqz
     if
      i32.const 9932
      global.set $~lib/rt/stub/offset
     end
     global.get $~lib/rt/stub/offset
     local.tee $1
     local.set $14
     local.get $1
     i32.const 4
     i32.add
     local.tee $1
     local.get $13
     i32.const 19
     i32.add
     i32.const -16
     i32.and
     i32.const 4
     i32.sub
     local.tee $13
     i32.add
     local.tee $15
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $15
     global.set $~lib/rt/stub/offset
     local.get $14
     local.get $13
     i32.store $0
     local.get $1
     local.get $0
     local.get $12
     memory.copy $0 $0
     local.get $1
     local.set $0
    end
   else
    local.get $13
    if
     local.get $0
     local.get $15
     i32.add
     global.set $~lib/rt/stub/offset
     local.get $1
     local.get $15
     i32.store $0
    end
   end
   local.get $0
   i32.const 4
   i32.sub
   local.get $11
   i32.store $0 offset=8
   local.get $0
   i32.const 16
   i32.add
   local.tee $0
   local.get $6
   i32.add
   i32.const 0
   local.get $11
   local.get $6
   i32.sub
   memory.fill $0
   local.get $0
   local.get $10
   i32.ne
   if
    local.get $2
    local.get $0
    i32.store $0
    local.get $2
    local.get $0
    i32.store $0 offset=4
   end
   local.get $2
   local.get $11
   i32.store $0 offset=8
  end
  local.get $2
  i32.load $0 offset=4
  local.get $3
  i32.const 2
  i32.shl
  i32.add
  i32.const 3
  i32.store $0
  local.get $2
  local.get $5
  i32.store $0 offset=12
  call $~lib/bindings/dom/Math.random
  i64.reinterpret_f64
  local.tee $4
  i64.eqz
  if
   i64.const -7046029254386353131
   local.set $4
  end
  local.get $4
  local.get $4
  i64.const 33
  i64.shr_u
  i64.xor
  i64.const -49064778989728563
  i64.mul
  local.tee $4
  local.get $4
  i64.const 33
  i64.shr_u
  i64.xor
  i64.const -4265267296055464877
  i64.mul
  local.tee $4
  local.get $4
  i64.const 33
  i64.shr_u
  i64.xor
  global.set $~lib/math/random_state0_64
  global.get $~lib/math/random_state0_64
  i64.const -1
  i64.xor
  local.tee $4
  local.get $4
  i64.const 33
  i64.shr_u
  i64.xor
  i64.const -49064778989728563
  i64.mul
  local.tee $4
  local.get $4
  i64.const 33
  i64.shr_u
  i64.xor
  i64.const -4265267296055464877
  i64.mul
  local.tee $4
  local.get $4
  i64.const 33
  i64.shr_u
  i64.xor
  global.set $~lib/math/random_state1_64
  i32.const 1
  global.set $~lib/math/random_seeded
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 76
  i32.add
  local.tee $2
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $2
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 76
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 0
  i32.store $0 offset=4
  local.get $0
  i32.const 48
  i32.store $0 offset=8
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $2
  i32.const 44
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 44
  i32.store $0
  local.get $2
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 23
  i32.store $0 offset=4
  local.get $0
  i32.const 16
  i32.store $0 offset=8
  local.get $2
  i32.const 16
  i32.add
  local.tee $2
  local.get $1
  i32.const 16
  i32.add
  local.tee $0
  i32.store $0
  local.get $2
  local.get $0
  i32.store $0 offset=4
  local.get $2
  i32.const 48
  i32.store $0 offset=8
  local.get $2
  i32.const 12
  i32.store $0 offset=12
  local.get $2
  i32.load $0 offset=4
  drop
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 28
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 28
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 22
  i32.store $0 offset=4
  local.get $0
  i32.const 8
  i32.store $0 offset=8
  local.get $1
  i32.const 0
  i32.store $0 offset=16
  local.get $1
  i32.const 0
  i32.store $0 offset=20
  local.get $1
  i32.const 100
  i32.store $0 offset=16
  local.get $1
  i32.const 80
  i32.store $0 offset=20
  local.get $2
  i32.load $0 offset=4
  local.get $1
  i32.const 16
  i32.add
  i32.store $0
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 28
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 28
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 22
  i32.store $0 offset=4
  local.get $0
  i32.const 8
  i32.store $0 offset=8
  local.get $1
  i32.const 0
  i32.store $0 offset=16
  local.get $1
  i32.const 0
  i32.store $0 offset=20
  local.get $1
  i32.const 90
  i32.store $0 offset=16
  local.get $1
  i32.const 90
  i32.store $0 offset=20
  local.get $2
  i32.load $0 offset=4
  local.get $1
  i32.const 16
  i32.add
  i32.store $0 offset=4
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 28
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 28
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 22
  i32.store $0 offset=4
  local.get $0
  i32.const 8
  i32.store $0 offset=8
  local.get $1
  i32.const 0
  i32.store $0 offset=16
  local.get $1
  i32.const 0
  i32.store $0 offset=20
  local.get $1
  i32.const 70
  i32.store $0 offset=16
  local.get $1
  i32.const 95
  i32.store $0 offset=20
  local.get $2
  i32.load $0 offset=4
  local.get $1
  i32.const 16
  i32.add
  i32.store $0 offset=8
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 28
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 28
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 22
  i32.store $0 offset=4
  local.get $0
  i32.const 8
  i32.store $0 offset=8
  local.get $1
  i32.const 0
  i32.store $0 offset=16
  local.get $1
  i32.const 0
  i32.store $0 offset=20
  local.get $1
  i32.const 100
  i32.store $0 offset=16
  local.get $1
  i32.const 100
  i32.store $0 offset=20
  local.get $2
  i32.load $0 offset=4
  local.get $1
  i32.const 16
  i32.add
  i32.store $0 offset=12
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 28
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 28
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 22
  i32.store $0 offset=4
  local.get $0
  i32.const 8
  i32.store $0 offset=8
  local.get $1
  i32.const 0
  i32.store $0 offset=16
  local.get $1
  i32.const 0
  i32.store $0 offset=20
  local.get $1
  i32.const 80
  i32.store $0 offset=16
  local.get $1
  i32.const 110
  i32.store $0 offset=20
  local.get $2
  i32.load $0 offset=4
  local.get $1
  i32.const 16
  i32.add
  i32.store $0 offset=16
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 28
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 28
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 22
  i32.store $0 offset=4
  local.get $0
  i32.const 8
  i32.store $0 offset=8
  local.get $1
  i32.const 0
  i32.store $0 offset=16
  local.get $1
  i32.const 0
  i32.store $0 offset=20
  local.get $1
  i32.const 110
  i32.store $0 offset=16
  local.get $1
  i32.const 115
  i32.store $0 offset=20
  local.get $2
  i32.load $0 offset=4
  local.get $1
  i32.const 16
  i32.add
  i32.store $0 offset=20
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 28
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 28
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 22
  i32.store $0 offset=4
  local.get $0
  i32.const 8
  i32.store $0 offset=8
  local.get $1
  i32.const 0
  i32.store $0 offset=16
  local.get $1
  i32.const 0
  i32.store $0 offset=20
  local.get $1
  i32.const 100
  i32.store $0 offset=16
  local.get $1
  i32.const 120
  i32.store $0 offset=20
  local.get $2
  i32.load $0 offset=4
  local.get $1
  i32.const 16
  i32.add
  i32.store $0 offset=24
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 28
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 28
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 22
  i32.store $0 offset=4
  local.get $0
  i32.const 8
  i32.store $0 offset=8
  local.get $1
  i32.const 0
  i32.store $0 offset=16
  local.get $1
  i32.const 0
  i32.store $0 offset=20
  local.get $1
  i32.const 70
  i32.store $0 offset=16
  local.get $1
  i32.const 125
  i32.store $0 offset=20
  local.get $2
  i32.load $0 offset=4
  local.get $1
  i32.const 16
  i32.add
  i32.store $0 offset=28
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 28
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 28
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 22
  i32.store $0 offset=4
  local.get $0
  i32.const 8
  i32.store $0 offset=8
  local.get $1
  i32.const 0
  i32.store $0 offset=16
  local.get $1
  i32.const 0
  i32.store $0 offset=20
  local.get $1
  i32.const 70
  i32.store $0 offset=16
  local.get $1
  i32.const 130
  i32.store $0 offset=20
  local.get $2
  i32.load $0 offset=4
  local.get $1
  i32.const 16
  i32.add
  i32.store $0 offset=32
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 28
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 28
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 22
  i32.store $0 offset=4
  local.get $0
  i32.const 8
  i32.store $0 offset=8
  local.get $1
  i32.const 0
  i32.store $0 offset=16
  local.get $1
  i32.const 0
  i32.store $0 offset=20
  local.get $1
  i32.const 100
  i32.store $0 offset=16
  local.get $1
  i32.const 135
  i32.store $0 offset=20
  local.get $2
  i32.load $0 offset=4
  local.get $1
  i32.const 16
  i32.add
  i32.store $0 offset=36
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 28
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 28
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 22
  i32.store $0 offset=4
  local.get $0
  i32.const 8
  i32.store $0 offset=8
  local.get $1
  i32.const 0
  i32.store $0 offset=16
  local.get $1
  i32.const 0
  i32.store $0 offset=20
  local.get $1
  i32.const 75
  i32.store $0 offset=16
  local.get $1
  i32.const 140
  i32.store $0 offset=20
  local.get $2
  i32.load $0 offset=4
  local.get $1
  i32.const 16
  i32.add
  i32.store $0 offset=40
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 28
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 28
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 22
  i32.store $0 offset=4
  local.get $0
  i32.const 8
  i32.store $0 offset=8
  local.get $1
  i32.const 0
  i32.store $0 offset=16
  local.get $1
  i32.const 0
  i32.store $0 offset=20
  local.get $1
  i32.const 70
  i32.store $0 offset=16
  local.get $1
  i32.const 140
  i32.store $0 offset=20
  local.get $2
  i32.load $0 offset=4
  local.get $1
  i32.const 16
  i32.add
  i32.store $0 offset=44
  local.get $2
  global.set $std/array/inputStabArr
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 76
  i32.add
  local.tee $2
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $2
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 76
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 0
  i32.store $0 offset=4
  local.get $0
  i32.const 48
  i32.store $0 offset=8
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $2
  i32.const 44
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 44
  i32.store $0
  local.get $2
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 23
  i32.store $0 offset=4
  local.get $0
  i32.const 16
  i32.store $0 offset=8
  local.get $2
  i32.const 16
  i32.add
  local.tee $2
  local.get $1
  i32.const 16
  i32.add
  local.tee $0
  i32.store $0
  local.get $2
  local.get $0
  i32.store $0 offset=4
  local.get $2
  i32.const 48
  i32.store $0 offset=8
  local.get $2
  i32.const 12
  i32.store $0 offset=12
  local.get $2
  i32.load $0 offset=4
  drop
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 28
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 28
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 22
  i32.store $0 offset=4
  local.get $0
  i32.const 8
  i32.store $0 offset=8
  local.get $1
  i32.const 0
  i32.store $0 offset=16
  local.get $1
  i32.const 0
  i32.store $0 offset=20
  local.get $1
  i32.const 70
  i32.store $0 offset=16
  local.get $1
  i32.const 95
  i32.store $0 offset=20
  local.get $2
  i32.load $0 offset=4
  local.get $1
  i32.const 16
  i32.add
  i32.store $0
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 28
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 28
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 22
  i32.store $0 offset=4
  local.get $0
  i32.const 8
  i32.store $0 offset=8
  local.get $1
  i32.const 0
  i32.store $0 offset=16
  local.get $1
  i32.const 0
  i32.store $0 offset=20
  local.get $1
  i32.const 70
  i32.store $0 offset=16
  local.get $1
  i32.const 125
  i32.store $0 offset=20
  local.get $2
  i32.load $0 offset=4
  local.get $1
  i32.const 16
  i32.add
  i32.store $0 offset=4
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 28
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 28
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 22
  i32.store $0 offset=4
  local.get $0
  i32.const 8
  i32.store $0 offset=8
  local.get $1
  i32.const 0
  i32.store $0 offset=16
  local.get $1
  i32.const 0
  i32.store $0 offset=20
  local.get $1
  i32.const 70
  i32.store $0 offset=16
  local.get $1
  i32.const 130
  i32.store $0 offset=20
  local.get $2
  i32.load $0 offset=4
  local.get $1
  i32.const 16
  i32.add
  i32.store $0 offset=8
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 28
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 28
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 22
  i32.store $0 offset=4
  local.get $0
  i32.const 8
  i32.store $0 offset=8
  local.get $1
  i32.const 0
  i32.store $0 offset=16
  local.get $1
  i32.const 0
  i32.store $0 offset=20
  local.get $1
  i32.const 70
  i32.store $0 offset=16
  local.get $1
  i32.const 140
  i32.store $0 offset=20
  local.get $2
  i32.load $0 offset=4
  local.get $1
  i32.const 16
  i32.add
  i32.store $0 offset=12
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 28
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 28
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 22
  i32.store $0 offset=4
  local.get $0
  i32.const 8
  i32.store $0 offset=8
  local.get $1
  i32.const 0
  i32.store $0 offset=16
  local.get $1
  i32.const 0
  i32.store $0 offset=20
  local.get $1
  i32.const 75
  i32.store $0 offset=16
  local.get $1
  i32.const 140
  i32.store $0 offset=20
  local.get $2
  i32.load $0 offset=4
  local.get $1
  i32.const 16
  i32.add
  i32.store $0 offset=16
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 28
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 28
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 22
  i32.store $0 offset=4
  local.get $0
  i32.const 8
  i32.store $0 offset=8
  local.get $1
  i32.const 0
  i32.store $0 offset=16
  local.get $1
  i32.const 0
  i32.store $0 offset=20
  local.get $1
  i32.const 80
  i32.store $0 offset=16
  local.get $1
  i32.const 110
  i32.store $0 offset=20
  local.get $2
  i32.load $0 offset=4
  local.get $1
  i32.const 16
  i32.add
  i32.store $0 offset=20
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 28
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 28
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 22
  i32.store $0 offset=4
  local.get $0
  i32.const 8
  i32.store $0 offset=8
  local.get $1
  i32.const 0
  i32.store $0 offset=16
  local.get $1
  i32.const 0
  i32.store $0 offset=20
  local.get $1
  i32.const 90
  i32.store $0 offset=16
  local.get $1
  i32.const 90
  i32.store $0 offset=20
  local.get $2
  i32.load $0 offset=4
  local.get $1
  i32.const 16
  i32.add
  i32.store $0 offset=24
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 28
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 28
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 22
  i32.store $0 offset=4
  local.get $0
  i32.const 8
  i32.store $0 offset=8
  local.get $1
  i32.const 0
  i32.store $0 offset=16
  local.get $1
  i32.const 0
  i32.store $0 offset=20
  local.get $1
  i32.const 100
  i32.store $0 offset=16
  local.get $1
  i32.const 80
  i32.store $0 offset=20
  local.get $2
  i32.load $0 offset=4
  local.get $1
  i32.const 16
  i32.add
  i32.store $0 offset=28
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 28
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 28
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 22
  i32.store $0 offset=4
  local.get $0
  i32.const 8
  i32.store $0 offset=8
  local.get $1
  i32.const 0
  i32.store $0 offset=16
  local.get $1
  i32.const 0
  i32.store $0 offset=20
  local.get $1
  i32.const 100
  i32.store $0 offset=16
  local.get $1
  i32.const 100
  i32.store $0 offset=20
  local.get $2
  i32.load $0 offset=4
  local.get $1
  i32.const 16
  i32.add
  i32.store $0 offset=32
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 28
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 28
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 22
  i32.store $0 offset=4
  local.get $0
  i32.const 8
  i32.store $0 offset=8
  local.get $1
  i32.const 0
  i32.store $0 offset=16
  local.get $1
  i32.const 0
  i32.store $0 offset=20
  local.get $1
  i32.const 100
  i32.store $0 offset=16
  local.get $1
  i32.const 120
  i32.store $0 offset=20
  local.get $2
  i32.load $0 offset=4
  local.get $1
  i32.const 16
  i32.add
  i32.store $0 offset=36
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 28
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 28
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 22
  i32.store $0 offset=4
  local.get $0
  i32.const 8
  i32.store $0 offset=8
  local.get $1
  i32.const 0
  i32.store $0 offset=16
  local.get $1
  i32.const 0
  i32.store $0 offset=20
  local.get $1
  i32.const 100
  i32.store $0 offset=16
  local.get $1
  i32.const 135
  i32.store $0 offset=20
  local.get $2
  i32.load $0 offset=4
  local.get $1
  i32.const 16
  i32.add
  i32.store $0 offset=40
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 28
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 28
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 22
  i32.store $0 offset=4
  local.get $0
  i32.const 8
  i32.store $0 offset=8
  local.get $1
  i32.const 0
  i32.store $0 offset=16
  local.get $1
  i32.const 0
  i32.store $0 offset=20
  local.get $1
  i32.const 110
  i32.store $0 offset=16
  local.get $1
  i32.const 115
  i32.store $0 offset=20
  local.get $2
  i32.load $0 offset=4
  local.get $1
  i32.const 16
  i32.add
  i32.store $0 offset=44
  local.get $2
  global.set $std/array/outputStabArr
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 28
  i32.add
  local.tee $2
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $2
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 28
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 0
  i32.store $0 offset=4
  local.get $0
  i32.const 12
  i32.store $0 offset=8
  local.get $1
  i32.const 16
  i32.add
  local.tee $1
  local.tee $0
  i32.const 7840
  i64.load $0
  i64.store $0
  i32.const 7848
  local.set $2
  local.get $0
  i32.const 8
  i32.add
  local.set $0
  i32.const 4
  local.tee $3
  i32.const 4
  i32.ge_u
  if
   local.get $0
   i32.const 7848
   i32.load $0
   i32.store $0
   i32.const 7852
   local.set $2
   i32.const 0
   local.set $3
   local.get $0
   i32.const 4
   i32.add
   local.set $0
  end
  local.get $3
  i32.const 2
  i32.ge_s
  if
   local.get $0
   local.get $2
   i32.load16_u $0
   i32.store16 $0
   local.get $2
   i32.const 2
   i32.add
   local.set $2
   local.get $3
   i32.const 2
   i32.sub
   local.set $3
   local.get $0
   i32.const 2
   i32.add
   local.set $0
  end
  local.get $3
  if
   local.get $0
   local.get $2
   i32.load8_u $0
   i32.store8 $0
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $2
  i32.const 44
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 44
  i32.store $0
  local.get $2
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 8
  i32.store $0 offset=4
  local.get $0
  i32.const 16
  i32.store $0 offset=8
  local.get $2
  i32.const 16
  i32.add
  local.tee $2
  local.get $1
  i32.store $0
  local.get $2
  local.get $1
  i32.store $0 offset=4
  local.get $2
  i32.const 12
  i32.store $0 offset=8
  local.get $2
  i32.const 3
  i32.store $0 offset=12
  local.get $2
  i32.load $0 offset=4
  local.get $2
  i32.load $0 offset=12
  call $~lib/util/sort/SORT<f32>
  block $std/array/isArraysEqual<f32>|inlined.7 (result i32)
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $1
   i32.const 28
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 28
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 12
   i32.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $1
   local.tee $0
   i32.const 7904
   i64.load $0
   i64.store $0
   i32.const 7912
   local.set $3
   local.get $0
   i32.const 8
   i32.add
   local.set $0
   i32.const 4
   local.tee $5
   i32.const 4
   i32.ge_u
   if
    local.get $0
    i32.const 7912
    i32.load $0
    i32.store $0
    i32.const 7916
    local.set $3
    i32.const 0
    local.set $5
    local.get $0
    i32.const 4
    i32.add
    local.set $0
   end
   local.get $5
   i32.const 2
   i32.ge_s
   if
    local.get $0
    local.get $3
    i32.load16_u $0
    i32.store16 $0
    local.get $3
    i32.const 2
    i32.add
    local.set $3
    local.get $5
    i32.const 2
    i32.sub
    local.set $5
    local.get $0
    i32.const 2
    i32.add
    local.set $0
   end
   local.get $5
   if
    local.get $0
    local.get $3
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $3
   i32.const 44
   i32.add
   local.tee $5
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $5
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $3
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 8
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $3
   i32.const 16
   i32.add
   local.tee $0
   local.get $1
   i32.store $0
   local.get $0
   local.get $1
   i32.store $0 offset=4
   local.get $0
   i32.const 12
   i32.store $0 offset=8
   local.get $0
   i32.const 3
   i32.store $0 offset=12
   i32.const 0
   local.get $2
   i32.load $0 offset=12
   local.tee $3
   local.get $0
   i32.load $0 offset=12
   i32.ne
   br_if $std/array/isArraysEqual<f32>|inlined.7
   drop
   i32.const 1
   local.get $0
   local.get $2
   i32.eq
   br_if $std/array/isArraysEqual<f32>|inlined.7
   drop
   i32.const 0
   local.set $1
   loop $for-loop|73
    local.get $1
    local.get $3
    i32.lt_s
    if
     local.get $1
     local.get $2
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $2
     i32.load $0 offset=4
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     f32.load $0
     local.tee $8
     local.get $8
     f32.ne
     if (result i32)
      local.get $1
      local.get $0
      i32.load $0 offset=12
      i32.ge_u
      if
       unreachable
      end
      local.get $0
      i32.load $0 offset=4
      local.get $1
      i32.const 2
      i32.shl
      i32.add
      f32.load $0
      local.tee $8
      local.get $8
      f32.ne
     else
      i32.const 0
     end
     i32.eqz
     if
      local.get $1
      local.get $2
      i32.load $0 offset=12
      i32.ge_u
      if
       unreachable
      end
      local.get $1
      local.get $0
      i32.load $0 offset=12
      i32.ge_u
      if
       unreachable
      end
      i32.const 0
      local.get $1
      i32.const 2
      i32.shl
      local.tee $5
      local.get $2
      i32.load $0 offset=4
      i32.add
      f32.load $0
      f64.promote_f32
      i64.reinterpret_f64
      i64.const 63
      i64.shr_u
      i32.wrap_i64
      local.get $0
      i32.load $0 offset=4
      local.get $5
      i32.add
      f32.load $0
      f64.promote_f32
      i64.reinterpret_f64
      i64.const 63
      i64.shr_u
      i32.wrap_i64
      i32.ne
      br_if $std/array/isArraysEqual<f32>|inlined.7
      drop
      local.get $1
      local.get $2
      i32.load $0 offset=12
      i32.ge_u
      if
       unreachable
      end
      local.get $1
      local.get $0
      i32.load $0 offset=12
      i32.ge_u
      if
       unreachable
      end
      i32.const 0
      local.get $1
      i32.const 2
      i32.shl
      local.tee $5
      local.get $2
      i32.load $0 offset=4
      i32.add
      f32.load $0
      local.get $0
      i32.load $0 offset=4
      local.get $5
      i32.add
      f32.load $0
      f32.ne
      br_if $std/array/isArraysEqual<f32>|inlined.7
      drop
     end
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|73
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 60
  i32.add
  local.tee $2
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $2
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 60
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 0
  i32.store $0 offset=4
  local.get $0
  i32.const 32
  i32.store $0 offset=8
  local.get $1
  i32.const 16
  i32.add
  local.tee $3
  i32.const 7936
  i64.load $0
  i64.store $0
  local.get $3
  i32.const 7944
  i64.load $0
  i64.store $0 offset=8
  local.get $3
  i32.const 7952
  i64.load $0
  i64.store $0 offset=16
  local.get $3
  i32.const 7960
  i64.load $0
  i64.store $0 offset=24
  i32.const 7968
  local.set $1
  local.get $3
  i32.const 32
  i32.add
  local.set $0
  i32.const 0
  local.set $2
  local.get $2
  i32.const 2
  i32.ge_s
  if
   local.get $0
   local.get $1
   i32.load16_u $0
   i32.store16 $0
   local.get $1
   i32.const 2
   i32.add
   local.set $1
   local.get $2
   i32.const 2
   i32.sub
   local.set $2
   local.get $0
   i32.const 2
   i32.add
   local.set $0
  end
  local.get $2
  if
   local.get $0
   local.get $1
   i32.load8_u $0
   i32.store8 $0
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 44
  i32.add
  local.tee $2
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $2
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 44
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 8
  i32.store $0 offset=4
  local.get $0
  i32.const 16
  i32.store $0 offset=8
  local.get $1
  i32.const 16
  i32.add
  local.tee $2
  local.get $3
  i32.store $0
  local.get $2
  local.get $3
  i32.store $0 offset=4
  local.get $2
  i32.const 32
  i32.store $0 offset=8
  local.get $2
  i32.const 8
  i32.store $0 offset=12
  local.get $2
  i32.load $0 offset=4
  local.get $2
  i32.load $0 offset=12
  call $~lib/util/sort/SORT<f32>
  block $std/array/isArraysEqual<f32>|inlined.8 (result i32)
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $1
   i32.const 60
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 60
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 32
   i32.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $5
   i32.const 8000
   i64.load $0
   i64.store $0
   local.get $5
   i32.const 8008
   i64.load $0
   i64.store $0 offset=8
   local.get $5
   i32.const 8016
   i64.load $0
   i64.store $0 offset=16
   local.get $5
   i32.const 8024
   i64.load $0
   i64.store $0 offset=24
   i32.const 8032
   local.set $1
   local.get $5
   i32.const 32
   i32.add
   local.set $0
   i32.const 0
   local.set $3
   local.get $3
   i32.const 2
   i32.ge_s
   if
    local.get $0
    local.get $1
    i32.load16_u $0
    i32.store16 $0
    local.get $1
    i32.const 2
    i32.add
    local.set $1
    local.get $3
    i32.const 2
    i32.sub
    local.set $3
    local.get $0
    i32.const 2
    i32.add
    local.set $0
   end
   local.get $3
   if
    local.get $0
    local.get $1
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $1
   i32.const 44
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 8
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $0
   local.get $5
   i32.store $0
   local.get $0
   local.get $5
   i32.store $0 offset=4
   local.get $0
   i32.const 32
   i32.store $0 offset=8
   local.get $0
   i32.const 8
   i32.store $0 offset=12
   i32.const 0
   local.get $2
   i32.load $0 offset=12
   local.tee $3
   local.get $0
   i32.load $0 offset=12
   i32.ne
   br_if $std/array/isArraysEqual<f32>|inlined.8
   drop
   i32.const 1
   local.get $0
   local.get $2
   i32.eq
   br_if $std/array/isArraysEqual<f32>|inlined.8
   drop
   i32.const 0
   local.set $1
   loop $for-loop|74
    local.get $1
    local.get $3
    i32.lt_s
    if
     local.get $1
     local.get $2
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $2
     i32.load $0 offset=4
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     f32.load $0
     local.tee $8
     local.get $8
     f32.ne
     if (result i32)
      local.get $1
      local.get $0
      i32.load $0 offset=12
      i32.ge_u
      if
       unreachable
      end
      local.get $0
      i32.load $0 offset=4
      local.get $1
      i32.const 2
      i32.shl
      i32.add
      f32.load $0
      local.tee $8
      local.get $8
      f32.ne
     else
      i32.const 0
     end
     i32.eqz
     if
      local.get $1
      local.get $2
      i32.load $0 offset=12
      i32.ge_u
      if
       unreachable
      end
      local.get $1
      local.get $0
      i32.load $0 offset=12
      i32.ge_u
      if
       unreachable
      end
      i32.const 0
      local.get $1
      i32.const 2
      i32.shl
      local.tee $5
      local.get $2
      i32.load $0 offset=4
      i32.add
      f32.load $0
      f64.promote_f32
      i64.reinterpret_f64
      i64.const 63
      i64.shr_u
      i32.wrap_i64
      local.get $0
      i32.load $0 offset=4
      local.get $5
      i32.add
      f32.load $0
      f64.promote_f32
      i64.reinterpret_f64
      i64.const 63
      i64.shr_u
      i32.wrap_i64
      i32.ne
      br_if $std/array/isArraysEqual<f32>|inlined.8
      drop
      local.get $1
      local.get $2
      i32.load $0 offset=12
      i32.ge_u
      if
       unreachable
      end
      local.get $1
      local.get $0
      i32.load $0 offset=12
      i32.ge_u
      if
       unreachable
      end
      i32.const 0
      local.get $1
      i32.const 2
      i32.shl
      local.tee $5
      local.get $2
      i32.load $0 offset=4
      i32.add
      f32.load $0
      local.get $0
      i32.load $0 offset=4
      local.get $5
      i32.add
      f32.load $0
      f32.ne
      br_if $std/array/isArraysEqual<f32>|inlined.8
      drop
     end
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|74
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 76
  i32.add
  local.tee $2
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $2
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 76
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 0
  i32.store $0 offset=4
  local.get $0
  i32.const 56
  i32.store $0 offset=8
  local.get $1
  i32.const 16
  i32.add
  local.tee $3
  i32.const 8064
  i64.load $0
  i64.store $0
  local.get $3
  i32.const 8072
  i64.load $0
  i64.store $0 offset=8
  local.get $3
  i32.const 8080
  i64.load $0
  i64.store $0 offset=16
  local.get $3
  i32.const 8088
  i64.load $0
  i64.store $0 offset=24
  local.get $3
  i32.const 32
  i32.add
  local.tee $0
  i32.const 8096
  i64.load $0
  i64.store $0
  local.get $0
  i32.const 8104
  i64.load $0
  i64.store $0 offset=8
  i32.const 8112
  local.set $1
  local.get $0
  i32.const 16
  i32.add
  local.set $0
  i32.const 8
  local.tee $2
  i32.const 8
  i32.ge_u
  if
   local.get $0
   i32.const 8112
   i64.load $0
   i64.store $0
   i32.const 8120
   local.set $1
   i32.const 0
   local.set $2
   local.get $0
   i32.const 8
   i32.add
   local.set $0
  end
  local.get $2
  i32.const 4
  i32.ge_s
  if
   local.get $0
   local.get $1
   i32.load $0
   i32.store $0
   local.get $1
   i32.const 4
   i32.add
   local.set $1
   local.get $2
   i32.const 4
   i32.sub
   local.set $2
   local.get $0
   i32.const 4
   i32.add
   local.set $0
  end
  local.get $2
  i32.const 2
  i32.ge_s
  if
   local.get $0
   local.get $1
   i32.load16_u $0
   i32.store16 $0
   local.get $1
   i32.const 2
   i32.add
   local.set $1
   local.get $2
   i32.const 2
   i32.sub
   local.set $2
   local.get $0
   i32.const 2
   i32.add
   local.set $0
  end
  local.get $2
  if
   local.get $0
   local.get $1
   i32.load8_u $0
   i32.store8 $0
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 44
  i32.add
  local.tee $2
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $2
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 44
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 12
  i32.store $0 offset=4
  local.get $0
  i32.const 16
  i32.store $0 offset=8
  local.get $1
  i32.const 16
  i32.add
  local.tee $2
  local.get $3
  i32.store $0
  local.get $2
  local.get $3
  i32.store $0 offset=4
  local.get $2
  i32.const 56
  i32.store $0 offset=8
  local.get $2
  i32.const 7
  i32.store $0 offset=12
  local.get $2
  i32.load $0 offset=4
  local.get $2
  i32.load $0 offset=12
  call $~lib/util/sort/SORT<f64>
  block $std/array/isArraysEqual<f64>|inlined.0 (result i32)
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $1
   i32.const 76
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 76
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 56
   i32.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $5
   i32.const 8176
   i64.load $0
   i64.store $0
   local.get $5
   i32.const 8184
   i64.load $0
   i64.store $0 offset=8
   local.get $5
   i32.const 8192
   i64.load $0
   i64.store $0 offset=16
   local.get $5
   i32.const 8200
   i64.load $0
   i64.store $0 offset=24
   local.get $5
   i32.const 32
   i32.add
   local.tee $0
   i32.const 8208
   i64.load $0
   i64.store $0
   local.get $0
   i32.const 8216
   i64.load $0
   i64.store $0 offset=8
   i32.const 8224
   local.set $1
   local.get $0
   i32.const 16
   i32.add
   local.set $0
   i32.const 8
   local.tee $3
   i32.const 8
   i32.ge_u
   if
    local.get $0
    i32.const 8224
    i64.load $0
    i64.store $0
    i32.const 8232
    local.set $1
    i32.const 0
    local.set $3
    local.get $0
    i32.const 8
    i32.add
    local.set $0
   end
   local.get $3
   i32.const 4
   i32.ge_s
   if
    local.get $0
    local.get $1
    i32.load $0
    i32.store $0
    local.get $1
    i32.const 4
    i32.add
    local.set $1
    local.get $3
    i32.const 4
    i32.sub
    local.set $3
    local.get $0
    i32.const 4
    i32.add
    local.set $0
   end
   local.get $3
   i32.const 2
   i32.ge_s
   if
    local.get $0
    local.get $1
    i32.load16_u $0
    i32.store16 $0
    local.get $1
    i32.const 2
    i32.add
    local.set $1
    local.get $3
    i32.const 2
    i32.sub
    local.set $3
    local.get $0
    i32.const 2
    i32.add
    local.set $0
   end
   local.get $3
   if
    local.get $0
    local.get $1
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $1
   i32.const 44
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 12
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $0
   local.get $5
   i32.store $0
   local.get $0
   local.get $5
   i32.store $0 offset=4
   local.get $0
   i32.const 56
   i32.store $0 offset=8
   local.get $0
   i32.const 7
   i32.store $0 offset=12
   i32.const 0
   local.get $2
   i32.load $0 offset=12
   local.tee $3
   local.get $0
   i32.load $0 offset=12
   i32.ne
   br_if $std/array/isArraysEqual<f64>|inlined.0
   drop
   i32.const 1
   local.get $0
   local.get $2
   i32.eq
   br_if $std/array/isArraysEqual<f64>|inlined.0
   drop
   i32.const 0
   local.set $1
   loop $for-loop|75
    local.get $1
    local.get $3
    i32.lt_s
    if
     local.get $1
     local.get $2
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $2
     i32.load $0 offset=4
     local.get $1
     i32.const 3
     i32.shl
     i32.add
     f64.load $0
     local.tee $9
     local.get $9
     f64.ne
     if (result i32)
      local.get $1
      local.get $0
      i32.load $0 offset=12
      i32.ge_u
      if
       unreachable
      end
      local.get $0
      i32.load $0 offset=4
      local.get $1
      i32.const 3
      i32.shl
      i32.add
      f64.load $0
      local.tee $9
      local.get $9
      f64.ne
     else
      i32.const 0
     end
     i32.eqz
     if
      local.get $1
      local.get $2
      i32.load $0 offset=12
      i32.ge_u
      if
       unreachable
      end
      local.get $1
      local.get $0
      i32.load $0 offset=12
      i32.ge_u
      if
       unreachable
      end
      i32.const 0
      local.get $1
      i32.const 3
      i32.shl
      local.tee $5
      local.get $2
      i32.load $0 offset=4
      i32.add
      i64.load $0
      i64.const 63
      i64.shr_u
      i32.wrap_i64
      local.get $0
      i32.load $0 offset=4
      local.get $5
      i32.add
      i64.load $0
      i64.const 63
      i64.shr_u
      i32.wrap_i64
      i32.ne
      br_if $std/array/isArraysEqual<f64>|inlined.0
      drop
      local.get $1
      local.get $2
      i32.load $0 offset=12
      i32.ge_u
      if
       unreachable
      end
      local.get $1
      local.get $0
      i32.load $0 offset=12
      i32.ge_u
      if
       unreachable
      end
      i32.const 0
      local.get $1
      i32.const 3
      i32.shl
      local.tee $5
      local.get $2
      i32.load $0 offset=4
      i32.add
      f64.load $0
      local.get $0
      i32.load $0 offset=4
      local.get $5
      i32.add
      f64.load $0
      f64.ne
      br_if $std/array/isArraysEqual<f64>|inlined.0
      drop
     end
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|75
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 44
  i32.add
  local.tee $2
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $2
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 44
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 0
  i32.store $0 offset=4
  local.get $0
  i32.const 20
  i32.store $0 offset=8
  local.get $1
  i32.const 16
  i32.add
  local.tee $1
  i32.const 8256
  i64.load $0
  i64.store $0
  local.get $1
  i32.const 8264
  i64.load $0
  i64.store $0 offset=8
  local.get $1
  i32.const 16
  i32.add
  local.tee $0
  i32.const 8272
  i32.load $0
  i32.store $0
  i32.const 8276
  local.set $2
  local.get $0
  i32.const 4
  i32.add
  local.set $0
  i32.const 0
  local.set $3
  local.get $3
  if
   local.get $0
   local.get $2
   i32.load8_u $0
   i32.store8 $0
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $2
  i32.const 44
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 44
  i32.store $0
  local.get $2
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 3
  i32.store $0 offset=4
  local.get $0
  i32.const 16
  i32.store $0 offset=8
  local.get $2
  i32.const 16
  i32.add
  local.tee $2
  local.get $1
  i32.store $0
  local.get $2
  local.get $1
  i32.store $0 offset=4
  local.get $2
  i32.const 20
  i32.store $0 offset=8
  local.get $2
  i32.const 5
  i32.store $0 offset=12
  local.get $2
  i32.load $0 offset=4
  local.get $2
  i32.load $0 offset=12
  i32.const 8304
  call $~lib/util/sort/SORT<i32>
  block $std/array/isArraysEqual<i32>|inlined.47 (result i32)
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $1
   i32.const 44
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 20
   i32.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $1
   i32.const 8336
   i64.load $0
   i64.store $0
   local.get $1
   i32.const 8344
   i64.load $0
   i64.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $0
   i32.const 8352
   i32.load $0
   i32.store $0
   i32.const 8356
   local.set $3
   local.get $0
   i32.const 4
   i32.add
   local.set $0
   i32.const 0
   local.set $5
   local.get $5
   if
    local.get $0
    local.get $3
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $3
   i32.const 44
   i32.add
   local.tee $5
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $5
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $3
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 3
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $3
   i32.const 16
   i32.add
   local.tee $0
   local.get $1
   i32.store $0
   local.get $0
   local.get $1
   i32.store $0 offset=4
   local.get $0
   i32.const 20
   i32.store $0 offset=8
   local.get $0
   i32.const 5
   i32.store $0 offset=12
   i32.const 0
   local.get $2
   i32.load $0 offset=12
   local.tee $3
   local.get $0
   i32.load $0 offset=12
   i32.ne
   br_if $std/array/isArraysEqual<i32>|inlined.47
   drop
   i32.const 1
   local.get $0
   local.get $2
   i32.eq
   br_if $std/array/isArraysEqual<i32>|inlined.47
   drop
   i32.const 0
   local.set $1
   loop $for-loop|76
    local.get $1
    local.get $3
    i32.lt_s
    if
     local.get $1
     local.get $2
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $1
     local.get $0
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $1
     i32.const 2
     i32.shl
     local.tee $5
     local.get $2
     i32.load $0 offset=4
     i32.add
     i32.load $0
     local.get $0
     i32.load $0 offset=4
     local.get $5
     i32.add
     i32.load $0
     i32.ne
     br_if $std/array/isArraysEqual<i32>|inlined.47
     drop
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|76
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 44
  i32.add
  local.tee $2
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $2
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 44
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 0
  i32.store $0 offset=4
  local.get $0
  i32.const 20
  i32.store $0 offset=8
  local.get $1
  i32.const 16
  i32.add
  local.tee $1
  i32.const 8384
  i64.load $0
  i64.store $0
  local.get $1
  i32.const 8392
  i64.load $0
  i64.store $0 offset=8
  local.get $1
  i32.const 16
  i32.add
  local.tee $0
  i32.const 8400
  i32.load $0
  i32.store $0
  i32.const 8404
  local.set $2
  local.get $0
  i32.const 4
  i32.add
  local.set $0
  i32.const 0
  local.set $3
  local.get $3
  if
   local.get $0
   local.get $2
   i32.load8_u $0
   i32.store8 $0
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $2
  i32.const 44
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 44
  i32.store $0
  local.get $2
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 7
  i32.store $0 offset=4
  local.get $0
  i32.const 16
  i32.store $0 offset=8
  local.get $2
  i32.const 16
  i32.add
  local.tee $2
  local.get $1
  i32.store $0
  local.get $2
  local.get $1
  i32.store $0 offset=4
  local.get $2
  i32.const 20
  i32.store $0 offset=8
  local.get $2
  i32.const 5
  i32.store $0 offset=12
  local.get $2
  i32.load $0 offset=4
  local.get $2
  i32.load $0 offset=12
  i32.const 8432
  call $~lib/util/sort/SORT<u32>
  block $std/array/isArraysEqual<u32>|inlined.6 (result i32)
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $1
   i32.const 44
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 0
   i32.store $0 offset=4
   local.get $0
   i32.const 20
   i32.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $1
   i32.const 8464
   i64.load $0
   i64.store $0
   local.get $1
   i32.const 8472
   i64.load $0
   i64.store $0 offset=8
   local.get $1
   i32.const 16
   i32.add
   local.tee $0
   i32.const 8480
   i32.load $0
   i32.store $0
   i32.const 8484
   local.set $3
   local.get $0
   i32.const 4
   i32.add
   local.set $0
   i32.const 0
   local.set $5
   local.get $5
   if
    local.get $0
    local.get $3
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $0
   i32.const 4
   i32.add
   local.tee $3
   i32.const 44
   i32.add
   local.tee $5
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $5
   global.set $~lib/rt/stub/offset
   local.get $0
   i32.const 44
   i32.store $0
   local.get $3
   i32.const 4
   i32.sub
   local.tee $0
   i32.const 7
   i32.store $0 offset=4
   local.get $0
   i32.const 16
   i32.store $0 offset=8
   local.get $3
   i32.const 16
   i32.add
   local.tee $0
   local.get $1
   i32.store $0
   local.get $0
   local.get $1
   i32.store $0 offset=4
   local.get $0
   i32.const 20
   i32.store $0 offset=8
   local.get $0
   i32.const 5
   i32.store $0 offset=12
   i32.const 0
   local.get $2
   i32.load $0 offset=12
   local.tee $3
   local.get $0
   i32.load $0 offset=12
   i32.ne
   br_if $std/array/isArraysEqual<u32>|inlined.6
   drop
   i32.const 1
   local.get $0
   local.get $2
   i32.eq
   br_if $std/array/isArraysEqual<u32>|inlined.6
   drop
   i32.const 0
   local.set $1
   loop $for-loop|77
    local.get $1
    local.get $3
    i32.lt_s
    if
     local.get $1
     local.get $2
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $1
     local.get $0
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $1
     i32.const 2
     i32.shl
     local.tee $5
     local.get $2
     i32.load $0 offset=4
     i32.add
     i32.load $0
     local.get $0
     i32.load $0 offset=4
     local.get $5
     i32.add
     i32.load $0
     i32.ne
     br_if $std/array/isArraysEqual<u32>|inlined.6
     drop
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|77
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 28
  i32.add
  local.tee $2
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $2
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 28
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0 offset=8
  local.get $1
  i32.const 16
  i32.add
  local.set $0
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $1
  i32.const 4
  i32.add
  local.tee $10
  i32.const 44
  i32.add
  local.tee $2
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $2
  global.set $~lib/rt/stub/offset
  local.get $1
  i32.const 44
  i32.store $0
  local.get $10
  i32.const 4
  i32.sub
  local.tee $1
  i32.const 3
  i32.store $0 offset=4
  local.get $1
  i32.const 16
  i32.store $0 offset=8
  local.get $10
  local.get $0
  i32.store $0 offset=16
  local.get $10
  local.get $0
  i32.store $0 offset=20
  local.get $10
  i32.const 0
  i32.store $0 offset=24
  local.get $10
  i32.const 0
  i32.store $0 offset=28
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 28
  i32.add
  local.tee $2
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $2
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 28
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 0
  i32.store $0 offset=4
  local.get $0
  i32.const 4
  i32.store $0 offset=8
  local.get $1
  i32.const 16
  i32.add
  local.tee $0
  i32.const 8544
  i32.load $0
  i32.store $0
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $1
  i32.const 4
  i32.add
  local.tee $2
  i32.const 44
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $1
  i32.const 44
  i32.store $0
  local.get $2
  i32.const 4
  i32.sub
  local.tee $1
  i32.const 3
  i32.store $0 offset=4
  local.get $1
  i32.const 16
  i32.store $0 offset=8
  local.get $2
  i32.const 16
  i32.add
  local.tee $1
  local.get $0
  i32.store $0
  local.get $1
  local.get $0
  i32.store $0 offset=4
  local.get $1
  i32.const 4
  i32.store $0 offset=8
  local.get $1
  i32.const 1
  i32.store $0 offset=12
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $2
  i32.const 28
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 28
  i32.store $0
  local.get $2
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 0
  i32.store $0 offset=4
  local.get $0
  i32.const 8
  i32.store $0 offset=8
  local.get $2
  i32.const 16
  i32.add
  local.tee $6
  local.tee $0
  i32.const 8576
  i64.load $0
  i64.store $0
  i32.const 8584
  local.set $2
  local.get $0
  i32.const 8
  i32.add
  local.set $0
  i32.const 0
  local.set $3
  local.get $3
  i32.const 2
  i32.ge_s
  if
   local.get $0
   local.get $2
   i32.load16_u $0
   i32.store16 $0
   local.get $2
   i32.const 2
   i32.add
   local.set $2
   local.get $3
   i32.const 2
   i32.sub
   local.set $3
   local.get $0
   i32.const 2
   i32.add
   local.set $0
  end
  local.get $3
  if
   local.get $0
   local.get $2
   i32.load8_u $0
   i32.store8 $0
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $2
  i32.const 44
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 44
  i32.store $0
  local.get $2
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 3
  i32.store $0 offset=4
  local.get $0
  i32.const 16
  i32.store $0 offset=8
  local.get $2
  i32.const 16
  i32.add
  local.tee $5
  local.get $6
  i32.store $0
  local.get $5
  local.get $6
  i32.store $0 offset=4
  local.get $5
  i32.const 8
  i32.store $0 offset=8
  local.get $5
  i32.const 2
  i32.store $0 offset=12
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $2
  i32.const 44
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 44
  i32.store $0
  local.get $2
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 0
  i32.store $0 offset=4
  local.get $0
  i32.const 16
  i32.store $0 offset=8
  local.get $2
  i32.const 16
  i32.add
  local.tee $11
  i32.const 8608
  i64.load $0
  i64.store $0
  local.get $11
  i32.const 8616
  i64.load $0
  i64.store $0 offset=8
  i32.const 8624
  local.set $2
  local.get $11
  i32.const 16
  i32.add
  local.set $0
  i32.const 0
  local.set $3
  local.get $3
  if
   local.get $0
   local.get $2
   i32.load8_u $0
   i32.store8 $0
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $2
  i32.const 44
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 44
  i32.store $0
  local.get $2
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 3
  i32.store $0 offset=4
  local.get $0
  i32.const 16
  i32.store $0 offset=8
  local.get $2
  i32.const 16
  i32.add
  local.tee $6
  local.get $11
  i32.store $0
  local.get $6
  local.get $11
  i32.store $0 offset=4
  local.get $6
  i32.const 16
  i32.store $0 offset=8
  local.get $6
  i32.const 4
  i32.store $0 offset=12
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $2
  i32.const 44
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 44
  i32.store $0
  local.get $2
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 0
  i32.store $0 offset=4
  local.get $0
  i32.const 16
  i32.store $0 offset=8
  local.get $2
  i32.const 16
  i32.add
  local.tee $11
  i32.const 8656
  i64.load $0
  i64.store $0
  local.get $11
  i32.const 8664
  i64.load $0
  i64.store $0 offset=8
  i32.const 8672
  local.set $2
  local.get $11
  i32.const 16
  i32.add
  local.set $0
  i32.const 0
  local.set $3
  local.get $3
  if
   local.get $0
   local.get $2
   i32.load8_u $0
   i32.store8 $0
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $2
  i32.const 44
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 44
  i32.store $0
  local.get $2
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 3
  i32.store $0 offset=4
  local.get $0
  i32.const 16
  i32.store $0 offset=8
  local.get $2
  i32.const 16
  i32.add
  local.tee $12
  local.get $11
  i32.store $0
  local.get $12
  local.get $11
  i32.store $0 offset=4
  local.get $12
  i32.const 16
  i32.store $0 offset=8
  local.get $12
  i32.const 4
  i32.store $0 offset=12
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $11
  i32.const 44
  i32.add
  local.tee $2
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $2
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 44
  i32.store $0
  local.get $11
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 3
  i32.store $0 offset=4
  local.get $0
  i32.const 16
  i32.store $0 offset=8
  local.get $11
  i32.const 0
  i32.store $0 offset=16
  local.get $11
  i32.const 0
  i32.store $0 offset=20
  local.get $11
  i32.const 0
  i32.store $0 offset=24
  local.get $11
  i32.const 0
  i32.store $0 offset=28
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $2
  i32.const 284
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 284
  i32.store $0
  local.get $2
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 0
  i32.store $0 offset=4
  local.get $0
  i32.const 256
  i32.store $0 offset=8
  local.get $2
  i32.const 16
  i32.add
  local.tee $0
  i32.const 0
  i32.const 256
  memory.fill $0
  local.get $11
  local.get $0
  i32.store $0 offset=16
  local.get $11
  local.get $0
  i32.store $0 offset=20
  local.get $11
  i32.const 256
  i32.store $0 offset=24
  local.get $11
  i32.const 64
  i32.store $0 offset=28
  loop $for-loop|78
   local.get $7
   i32.const 64
   i32.lt_s
   if
    local.get $7
    local.get $11
    i32.load $0 offset=28
    i32.ge_u
    if
     local.get $7
     i32.const 0
     i32.lt_s
     if
      unreachable
     end
     local.get $7
     i32.const 1
     i32.add
     local.tee $3
     local.tee $0
     local.get $11
     i32.load $0 offset=24
     local.tee $13
     i32.const 2
     i32.shr_u
     i32.gt_u
     if
      local.get $0
      i32.const 268435455
      i32.gt_u
      if
       unreachable
      end
      local.get $11
      i32.load $0 offset=16
      local.set $14
      i32.const 1073741820
      local.get $13
      i32.const 1
      i32.shl
      local.tee $2
      local.get $2
      i32.const 1073741820
      i32.ge_u
      select
      local.tee $2
      i32.const 8
      local.get $0
      local.get $0
      i32.const 8
      i32.le_u
      select
      i32.const 2
      i32.shl
      local.tee $0
      local.get $0
      local.get $2
      i32.lt_u
      select
      local.tee $15
      i32.const 1073741804
      i32.gt_u
      if
       unreachable
      end
      local.get $14
      i32.const 16
      i32.sub
      local.tee $0
      i32.const 15
      i32.and
      i32.const 1
      local.get $0
      select
      if
       unreachable
      end
      global.get $~lib/rt/stub/offset
      local.get $0
      i32.const 4
      i32.sub
      local.tee $2
      i32.load $0
      local.tee $16
      local.get $0
      i32.add
      i32.eq
      local.set $18
      local.get $15
      i32.const 16
      i32.add
      local.tee $19
      i32.const 19
      i32.add
      i32.const -16
      i32.and
      i32.const 4
      i32.sub
      local.set $20
      local.get $16
      local.get $19
      i32.lt_u
      if
       local.get $18
       if
        local.get $19
        i32.const 1073741820
        i32.gt_u
        if
         unreachable
        end
        local.get $0
        local.get $20
        i32.add
        local.tee $16
        memory.size $0
        i32.const 16
        i32.shl
        i32.const 15
        i32.add
        i32.const -16
        i32.and
        i32.gt_u
        if
         unreachable
        end
        local.get $16
        global.set $~lib/rt/stub/offset
        local.get $2
        local.get $20
        i32.store $0
       else
        local.get $20
        local.get $16
        i32.const 1
        i32.shl
        local.tee $2
        local.get $2
        local.get $20
        i32.lt_u
        select
        local.tee $18
        i32.const 1073741820
        i32.gt_u
        if
         unreachable
        end
        global.get $~lib/rt/stub/offset
        i32.eqz
        if
         i32.const 9932
         global.set $~lib/rt/stub/offset
        end
        global.get $~lib/rt/stub/offset
        local.tee $2
        local.set $19
        local.get $2
        i32.const 4
        i32.add
        local.tee $2
        local.get $18
        i32.const 19
        i32.add
        i32.const -16
        i32.and
        i32.const 4
        i32.sub
        local.tee $18
        i32.add
        local.tee $20
        memory.size $0
        i32.const 16
        i32.shl
        i32.const 15
        i32.add
        i32.const -16
        i32.and
        i32.gt_u
        if
         unreachable
        end
        local.get $20
        global.set $~lib/rt/stub/offset
        local.get $19
        local.get $18
        i32.store $0
        local.get $2
        local.get $0
        local.get $16
        memory.copy $0 $0
        local.get $2
        local.set $0
       end
      else
       local.get $18
       if
        local.get $0
        local.get $20
        i32.add
        global.set $~lib/rt/stub/offset
        local.get $2
        local.get $20
        i32.store $0
       end
      end
      local.get $0
      i32.const 4
      i32.sub
      local.get $15
      i32.store $0 offset=8
      local.get $0
      i32.const 16
      i32.add
      local.tee $0
      local.get $13
      i32.add
      i32.const 0
      local.get $15
      local.get $13
      i32.sub
      memory.fill $0
      local.get $0
      local.get $14
      i32.ne
      if
       local.get $11
       local.get $0
       i32.store $0 offset=16
       local.get $11
       local.get $0
       i32.store $0 offset=20
      end
      local.get $11
      local.get $15
      i32.store $0 offset=24
     end
     local.get $11
     local.get $3
     i32.store $0 offset=28
    end
    local.get $11
    i32.load $0 offset=20
    local.get $7
    i32.const 2
    i32.shl
    i32.add
    i32.const 63
    local.get $7
    i32.sub
    i32.store $0
    local.get $7
    i32.const 1
    i32.add
    local.set $7
    br $for-loop|78
   end
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $13
  i32.const 44
  i32.add
  local.tee $2
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $2
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 44
  i32.store $0
  local.get $13
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 3
  i32.store $0 offset=4
  local.get $0
  i32.const 16
  i32.store $0 offset=8
  local.get $13
  i32.const 0
  i32.store $0 offset=16
  local.get $13
  i32.const 0
  i32.store $0 offset=20
  local.get $13
  i32.const 0
  i32.store $0 offset=24
  local.get $13
  i32.const 0
  i32.store $0 offset=28
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $2
  i32.const 540
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 540
  i32.store $0
  local.get $2
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 0
  i32.store $0 offset=4
  local.get $0
  i32.const 512
  i32.store $0 offset=8
  local.get $2
  i32.const 16
  i32.add
  local.tee $0
  i32.const 0
  i32.const 512
  memory.fill $0
  local.get $13
  local.get $0
  i32.store $0 offset=16
  local.get $13
  local.get $0
  i32.store $0 offset=20
  local.get $13
  i32.const 512
  i32.store $0 offset=24
  local.get $13
  i32.const 128
  i32.store $0 offset=28
  i32.const 0
  local.set $7
  loop $for-loop|79
   local.get $7
   i32.const 128
   i32.lt_s
   if
    local.get $7
    local.get $13
    i32.load $0 offset=28
    i32.ge_u
    if
     local.get $7
     i32.const 0
     i32.lt_s
     if
      unreachable
     end
     local.get $7
     i32.const 1
     i32.add
     local.tee $3
     local.tee $0
     local.get $13
     i32.load $0 offset=24
     local.tee $14
     i32.const 2
     i32.shr_u
     i32.gt_u
     if
      local.get $0
      i32.const 268435455
      i32.gt_u
      if
       unreachable
      end
      local.get $13
      i32.load $0 offset=16
      local.set $15
      i32.const 1073741820
      local.get $14
      i32.const 1
      i32.shl
      local.tee $2
      local.get $2
      i32.const 1073741820
      i32.ge_u
      select
      local.tee $2
      i32.const 8
      local.get $0
      local.get $0
      i32.const 8
      i32.le_u
      select
      i32.const 2
      i32.shl
      local.tee $0
      local.get $0
      local.get $2
      i32.lt_u
      select
      local.tee $16
      i32.const 1073741804
      i32.gt_u
      if
       unreachable
      end
      local.get $15
      i32.const 16
      i32.sub
      local.tee $0
      i32.const 15
      i32.and
      i32.const 1
      local.get $0
      select
      if
       unreachable
      end
      global.get $~lib/rt/stub/offset
      local.get $0
      i32.const 4
      i32.sub
      local.tee $2
      i32.load $0
      local.tee $18
      local.get $0
      i32.add
      i32.eq
      local.set $19
      local.get $16
      i32.const 16
      i32.add
      local.tee $20
      i32.const 19
      i32.add
      i32.const -16
      i32.and
      i32.const 4
      i32.sub
      local.set $21
      local.get $18
      local.get $20
      i32.lt_u
      if
       local.get $19
       if
        local.get $20
        i32.const 1073741820
        i32.gt_u
        if
         unreachable
        end
        local.get $0
        local.get $21
        i32.add
        local.tee $18
        memory.size $0
        i32.const 16
        i32.shl
        i32.const 15
        i32.add
        i32.const -16
        i32.and
        i32.gt_u
        if
         unreachable
        end
        local.get $18
        global.set $~lib/rt/stub/offset
        local.get $2
        local.get $21
        i32.store $0
       else
        local.get $21
        local.get $18
        i32.const 1
        i32.shl
        local.tee $2
        local.get $2
        local.get $21
        i32.lt_u
        select
        local.tee $19
        i32.const 1073741820
        i32.gt_u
        if
         unreachable
        end
        global.get $~lib/rt/stub/offset
        i32.eqz
        if
         i32.const 9932
         global.set $~lib/rt/stub/offset
        end
        global.get $~lib/rt/stub/offset
        local.tee $2
        local.set $20
        local.get $2
        i32.const 4
        i32.add
        local.tee $2
        local.get $19
        i32.const 19
        i32.add
        i32.const -16
        i32.and
        i32.const 4
        i32.sub
        local.tee $19
        i32.add
        local.tee $21
        memory.size $0
        i32.const 16
        i32.shl
        i32.const 15
        i32.add
        i32.const -16
        i32.and
        i32.gt_u
        if
         unreachable
        end
        local.get $21
        global.set $~lib/rt/stub/offset
        local.get $20
        local.get $19
        i32.store $0
        local.get $2
        local.get $0
        local.get $18
        memory.copy $0 $0
        local.get $2
        local.set $0
       end
      else
       local.get $19
       if
        local.get $0
        local.get $21
        i32.add
        global.set $~lib/rt/stub/offset
        local.get $2
        local.get $21
        i32.store $0
       end
      end
      local.get $0
      i32.const 4
      i32.sub
      local.get $16
      i32.store $0 offset=8
      local.get $0
      i32.const 16
      i32.add
      local.tee $0
      local.get $14
      i32.add
      i32.const 0
      local.get $16
      local.get $14
      i32.sub
      memory.fill $0
      local.get $0
      local.get $15
      i32.ne
      if
       local.get $13
       local.get $0
       i32.store $0 offset=16
       local.get $13
       local.get $0
       i32.store $0 offset=20
      end
      local.get $13
      local.get $16
      i32.store $0 offset=24
     end
     local.get $13
     local.get $3
     i32.store $0 offset=28
    end
    local.get $13
    i32.load $0 offset=20
    local.get $7
    i32.const 2
    i32.shl
    i32.add
    i32.const 127
    local.get $7
    i32.sub
    i32.store $0
    local.get $7
    i32.const 1
    i32.add
    local.set $7
    br $for-loop|79
   end
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $2
  i32.const 44
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 44
  i32.store $0
  local.get $2
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 3
  i32.store $0 offset=4
  local.get $0
  i32.const 16
  i32.store $0 offset=8
  local.get $2
  i32.const 16
  i32.add
  local.tee $14
  i32.const 0
  i32.store $0
  local.get $14
  i32.const 0
  i32.store $0 offset=4
  local.get $14
  i32.const 0
  i32.store $0 offset=8
  local.get $14
  i32.const 0
  i32.store $0 offset=12
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $2
  i32.const 4124
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 4124
  i32.store $0
  local.get $2
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 0
  i32.store $0 offset=4
  local.get $0
  i32.const 4096
  i32.store $0 offset=8
  local.get $2
  i32.const 16
  i32.add
  local.tee $0
  i32.const 0
  i32.const 4096
  memory.fill $0
  local.get $14
  local.get $0
  i32.store $0
  local.get $14
  local.get $0
  i32.store $0 offset=4
  local.get $14
  i32.const 4096
  i32.store $0 offset=8
  local.get $14
  i32.const 1024
  i32.store $0 offset=12
  i32.const 0
  local.set $7
  loop $for-loop|80
   local.get $7
   i32.const 1024
   i32.lt_s
   if
    local.get $7
    local.get $14
    i32.load $0 offset=12
    i32.ge_u
    if
     local.get $7
     i32.const 0
     i32.lt_s
     if
      unreachable
     end
     local.get $7
     i32.const 1
     i32.add
     local.tee $3
     local.tee $0
     local.get $14
     i32.load $0 offset=8
     local.tee $15
     i32.const 2
     i32.shr_u
     i32.gt_u
     if
      local.get $0
      i32.const 268435455
      i32.gt_u
      if
       unreachable
      end
      local.get $14
      i32.load $0
      local.set $16
      i32.const 1073741820
      local.get $15
      i32.const 1
      i32.shl
      local.tee $2
      local.get $2
      i32.const 1073741820
      i32.ge_u
      select
      local.tee $2
      i32.const 8
      local.get $0
      local.get $0
      i32.const 8
      i32.le_u
      select
      i32.const 2
      i32.shl
      local.tee $0
      local.get $0
      local.get $2
      i32.lt_u
      select
      local.tee $18
      i32.const 1073741804
      i32.gt_u
      if
       unreachable
      end
      local.get $16
      i32.const 16
      i32.sub
      local.tee $0
      i32.const 15
      i32.and
      i32.const 1
      local.get $0
      select
      if
       unreachable
      end
      global.get $~lib/rt/stub/offset
      local.get $0
      i32.const 4
      i32.sub
      local.tee $2
      i32.load $0
      local.tee $19
      local.get $0
      i32.add
      i32.eq
      local.set $20
      local.get $18
      i32.const 16
      i32.add
      local.tee $21
      i32.const 19
      i32.add
      i32.const -16
      i32.and
      i32.const 4
      i32.sub
      local.set $22
      local.get $19
      local.get $21
      i32.lt_u
      if
       local.get $20
       if
        local.get $21
        i32.const 1073741820
        i32.gt_u
        if
         unreachable
        end
        local.get $0
        local.get $22
        i32.add
        local.tee $19
        memory.size $0
        i32.const 16
        i32.shl
        i32.const 15
        i32.add
        i32.const -16
        i32.and
        i32.gt_u
        if
         unreachable
        end
        local.get $19
        global.set $~lib/rt/stub/offset
        local.get $2
        local.get $22
        i32.store $0
       else
        local.get $22
        local.get $19
        i32.const 1
        i32.shl
        local.tee $2
        local.get $2
        local.get $22
        i32.lt_u
        select
        local.tee $20
        i32.const 1073741820
        i32.gt_u
        if
         unreachable
        end
        global.get $~lib/rt/stub/offset
        i32.eqz
        if
         i32.const 9932
         global.set $~lib/rt/stub/offset
        end
        global.get $~lib/rt/stub/offset
        local.tee $2
        local.set $21
        local.get $2
        i32.const 4
        i32.add
        local.tee $2
        local.get $20
        i32.const 19
        i32.add
        i32.const -16
        i32.and
        i32.const 4
        i32.sub
        local.tee $20
        i32.add
        local.tee $22
        memory.size $0
        i32.const 16
        i32.shl
        i32.const 15
        i32.add
        i32.const -16
        i32.and
        i32.gt_u
        if
         unreachable
        end
        local.get $22
        global.set $~lib/rt/stub/offset
        local.get $21
        local.get $20
        i32.store $0
        local.get $2
        local.get $0
        local.get $19
        memory.copy $0 $0
        local.get $2
        local.set $0
       end
      else
       local.get $20
       if
        local.get $0
        local.get $22
        i32.add
        global.set $~lib/rt/stub/offset
        local.get $2
        local.get $22
        i32.store $0
       end
      end
      local.get $0
      i32.const 4
      i32.sub
      local.get $18
      i32.store $0 offset=8
      local.get $0
      i32.const 16
      i32.add
      local.tee $0
      local.get $15
      i32.add
      i32.const 0
      local.get $18
      local.get $15
      i32.sub
      memory.fill $0
      local.get $0
      local.get $16
      i32.ne
      if
       local.get $14
       local.get $0
       i32.store $0
       local.get $14
       local.get $0
       i32.store $0 offset=4
      end
      local.get $14
      local.get $18
      i32.store $0 offset=8
     end
     local.get $14
     local.get $3
     i32.store $0 offset=12
    end
    local.get $14
    i32.load $0 offset=4
    local.get $7
    i32.const 2
    i32.shl
    i32.add
    i32.const 1023
    local.get $7
    i32.sub
    i32.store $0
    local.get $7
    i32.const 1
    i32.add
    local.set $7
    br $for-loop|80
   end
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $15
  i32.const 44
  i32.add
  local.tee $2
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $2
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 44
  i32.store $0
  local.get $15
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 3
  i32.store $0 offset=4
  local.get $0
  i32.const 16
  i32.store $0 offset=8
  local.get $15
  i32.const 0
  i32.store $0 offset=16
  local.get $15
  i32.const 0
  i32.store $0 offset=20
  local.get $15
  i32.const 0
  i32.store $0 offset=24
  local.get $15
  i32.const 0
  i32.store $0 offset=28
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $2
  i32.const 2076
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 2076
  i32.store $0
  local.get $2
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 0
  i32.store $0 offset=4
  local.get $0
  i32.const 2048
  i32.store $0 offset=8
  local.get $2
  i32.const 16
  i32.add
  local.tee $0
  i32.const 0
  i32.const 2048
  memory.fill $0
  local.get $15
  local.get $0
  i32.store $0 offset=16
  local.get $15
  local.get $0
  i32.store $0 offset=20
  local.get $15
  i32.const 2048
  i32.store $0 offset=24
  local.get $15
  i32.const 512
  i32.store $0 offset=28
  i32.const 0
  local.set $0
  loop $for-loop|81
   local.get $0
   i32.const 512
   i32.lt_s
   if
    global.get $~lib/math/random_seeded
    i32.eqz
    if
     call $~lib/builtins/seed
     i64.reinterpret_f64
     local.tee $4
     i64.eqz
     if
      i64.const -7046029254386353131
      local.set $4
     end
     local.get $4
     local.get $4
     i64.const 33
     i64.shr_u
     i64.xor
     i64.const -49064778989728563
     i64.mul
     local.tee $4
     local.get $4
     i64.const 33
     i64.shr_u
     i64.xor
     i64.const -4265267296055464877
     i64.mul
     local.tee $4
     local.get $4
     i64.const 33
     i64.shr_u
     i64.xor
     global.set $~lib/math/random_state0_64
     global.get $~lib/math/random_state0_64
     i64.const -1
     i64.xor
     local.tee $4
     local.get $4
     i64.const 33
     i64.shr_u
     i64.xor
     i64.const -49064778989728563
     i64.mul
     local.tee $4
     local.get $4
     i64.const 33
     i64.shr_u
     i64.xor
     i64.const -4265267296055464877
     i64.mul
     local.tee $4
     local.get $4
     i64.const 33
     i64.shr_u
     i64.xor
     global.set $~lib/math/random_state1_64
     i32.const 1
     global.set $~lib/math/random_seeded
    end
    global.get $~lib/math/random_state0_64
    local.set $4
    global.get $~lib/math/random_state1_64
    local.tee $17
    global.set $~lib/math/random_state0_64
    local.get $17
    local.get $4
    local.get $4
    i64.const 23
    i64.shl
    i64.xor
    local.tee $4
    local.get $4
    i64.const 17
    i64.shr_u
    i64.xor
    i64.xor
    local.get $17
    i64.const 26
    i64.shr_u
    i64.xor
    global.set $~lib/math/random_state1_64
    local.get $0
    local.tee $2
    local.get $15
    i32.load $0 offset=28
    i32.ge_u
    if
     local.get $2
     i32.const 0
     i32.lt_s
     if
      unreachable
     end
     local.get $2
     i32.const 1
     i32.add
     local.tee $7
     local.tee $0
     local.get $15
     i32.load $0 offset=24
     local.tee $16
     i32.const 2
     i32.shr_u
     i32.gt_u
     if
      local.get $0
      i32.const 268435455
      i32.gt_u
      if
       unreachable
      end
      local.get $15
      i32.load $0 offset=16
      local.set $18
      i32.const 1073741820
      local.get $16
      i32.const 1
      i32.shl
      local.tee $3
      local.get $3
      i32.const 1073741820
      i32.ge_u
      select
      local.tee $3
      i32.const 8
      local.get $0
      local.get $0
      i32.const 8
      i32.le_u
      select
      i32.const 2
      i32.shl
      local.tee $0
      local.get $0
      local.get $3
      i32.lt_u
      select
      local.tee $19
      i32.const 1073741804
      i32.gt_u
      if
       unreachable
      end
      local.get $18
      i32.const 16
      i32.sub
      local.tee $0
      i32.const 15
      i32.and
      i32.const 1
      local.get $0
      select
      if
       unreachable
      end
      global.get $~lib/rt/stub/offset
      local.get $0
      i32.const 4
      i32.sub
      local.tee $3
      i32.load $0
      local.tee $20
      local.get $0
      i32.add
      i32.eq
      local.set $21
      local.get $19
      i32.const 16
      i32.add
      local.tee $22
      i32.const 19
      i32.add
      i32.const -16
      i32.and
      i32.const 4
      i32.sub
      local.set $23
      local.get $20
      local.get $22
      i32.lt_u
      if
       local.get $21
       if
        local.get $22
        i32.const 1073741820
        i32.gt_u
        if
         unreachable
        end
        local.get $0
        local.get $23
        i32.add
        local.tee $20
        memory.size $0
        i32.const 16
        i32.shl
        i32.const 15
        i32.add
        i32.const -16
        i32.and
        i32.gt_u
        if
         unreachable
        end
        local.get $20
        global.set $~lib/rt/stub/offset
        local.get $3
        local.get $23
        i32.store $0
       else
        local.get $23
        local.get $20
        i32.const 1
        i32.shl
        local.tee $3
        local.get $3
        local.get $23
        i32.lt_u
        select
        local.tee $21
        i32.const 1073741820
        i32.gt_u
        if
         unreachable
        end
        global.get $~lib/rt/stub/offset
        i32.eqz
        if
         i32.const 9932
         global.set $~lib/rt/stub/offset
        end
        global.get $~lib/rt/stub/offset
        local.tee $3
        local.set $22
        local.get $3
        i32.const 4
        i32.add
        local.tee $3
        local.get $21
        i32.const 19
        i32.add
        i32.const -16
        i32.and
        i32.const 4
        i32.sub
        local.tee $21
        i32.add
        local.tee $23
        memory.size $0
        i32.const 16
        i32.shl
        i32.const 15
        i32.add
        i32.const -16
        i32.and
        i32.gt_u
        if
         unreachable
        end
        local.get $23
        global.set $~lib/rt/stub/offset
        local.get $22
        local.get $21
        i32.store $0
        local.get $3
        local.get $0
        local.get $20
        memory.copy $0 $0
        local.get $3
        local.set $0
       end
      else
       local.get $21
       if
        local.get $0
        local.get $23
        i32.add
        global.set $~lib/rt/stub/offset
        local.get $3
        local.get $23
        i32.store $0
       end
      end
      local.get $0
      i32.const 4
      i32.sub
      local.get $19
      i32.store $0 offset=8
      local.get $0
      i32.const 16
      i32.add
      local.tee $0
      local.get $16
      i32.add
      i32.const 0
      local.get $19
      local.get $16
      i32.sub
      memory.fill $0
      local.get $0
      local.get $18
      i32.ne
      if
       local.get $15
       local.get $0
       i32.store $0 offset=16
       local.get $15
       local.get $0
       i32.store $0 offset=20
      end
      local.get $15
      local.get $19
      i32.store $0 offset=24
     end
     local.get $15
     local.get $7
     i32.store $0 offset=28
    end
    local.get $15
    i32.load $0 offset=20
    local.get $2
    i32.const 2
    i32.shl
    i32.add
    local.get $17
    i64.const 12
    i64.shr_u
    i64.const 4607182418800017408
    i64.or
    f64.reinterpret_i64
    f64.const -1
    f64.add
    f64.const 512
    f64.mul
    i32.trunc_sat_f64_s
    i32.store $0
    local.get $2
    i32.const 1
    i32.add
    local.set $0
    br $for-loop|81
   end
  end
  block $std/array/isSorted<i32>|inlined.0 (result i32)
   local.get $10
   i32.load $0 offset=20
   local.get $10
   i32.load $0 offset=28
   i32.const 8704
   call $~lib/util/sort/SORT<i32>
   i32.const 1
   local.set $7
   local.get $10
   i32.load $0 offset=28
   local.set $0
   loop $for-loop|82
    local.get $0
    local.get $7
    i32.gt_s
    if
     local.get $7
     i32.const 1
     i32.sub
     local.tee $2
     local.get $10
     i32.load $0 offset=28
     i32.ge_u
     if
      unreachable
     end
     local.get $7
     local.get $10
     i32.load $0 offset=28
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $10
     i32.load $0 offset=20
     local.tee $3
     local.get $2
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.get $3
     local.get $7
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 8704
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     br_if $std/array/isSorted<i32>|inlined.0
     drop
     local.get $7
     i32.const 1
     i32.add
     local.set $7
     br $for-loop|82
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  block $std/array/isSorted<i32>|inlined.1 (result i32)
   local.get $1
   i32.load $0 offset=4
   local.get $1
   i32.load $0 offset=12
   i32.const 8736
   call $~lib/util/sort/SORT<i32>
   i32.const 1
   local.set $7
   local.get $1
   local.tee $0
   i32.load $0 offset=12
   local.set $1
   loop $for-loop|83
    local.get $1
    local.get $7
    i32.gt_s
    if
     local.get $7
     i32.const 1
     i32.sub
     local.tee $2
     local.get $0
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $7
     local.get $0
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $0
     i32.load $0 offset=4
     local.tee $3
     local.get $2
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.get $3
     local.get $7
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 8736
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     br_if $std/array/isSorted<i32>|inlined.1
     drop
     local.get $7
     i32.const 1
     i32.add
     local.set $7
     br $for-loop|83
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.48 (result i32)
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $1
   i32.const 4
   i32.add
   local.tee $2
   i32.const 28
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $1
   i32.const 28
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   local.tee $1
   i32.const 0
   i32.store $0 offset=4
   local.get $1
   i32.const 4
   i32.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $1
   i32.const 8768
   i32.load $0
   i32.store $0
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $2
   i32.const 4
   i32.add
   local.tee $3
   i32.const 44
   i32.add
   local.tee $7
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $7
   global.set $~lib/rt/stub/offset
   local.get $2
   i32.const 44
   i32.store $0
   local.get $3
   i32.const 4
   i32.sub
   local.tee $2
   i32.const 3
   i32.store $0 offset=4
   local.get $2
   i32.const 16
   i32.store $0 offset=8
   local.get $3
   i32.const 16
   i32.add
   local.tee $2
   local.get $1
   i32.store $0
   local.get $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   i32.const 4
   i32.store $0 offset=8
   local.get $2
   i32.const 1
   i32.store $0 offset=12
   i32.const 0
   local.get $0
   i32.load $0 offset=12
   local.tee $3
   local.get $2
   i32.load $0 offset=12
   i32.ne
   br_if $std/array/isArraysEqual<i32>|inlined.48
   drop
   i32.const 1
   local.get $0
   local.get $2
   i32.eq
   br_if $std/array/isArraysEqual<i32>|inlined.48
   drop
   local.get $0
   local.set $1
   i32.const 0
   local.set $0
   loop $for-loop|84
    local.get $0
    local.get $3
    i32.lt_s
    if
     local.get $0
     local.get $1
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $0
     local.get $2
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $0
     i32.const 2
     i32.shl
     local.tee $7
     local.get $1
     i32.load $0 offset=4
     i32.add
     i32.load $0
     local.get $2
     i32.load $0 offset=4
     local.get $7
     i32.add
     i32.load $0
     i32.ne
     br_if $std/array/isArraysEqual<i32>|inlined.48
     drop
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|84
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  block $std/array/isSorted<i32>|inlined.2 (result i32)
   local.get $5
   i32.load $0 offset=4
   local.get $5
   i32.load $0 offset=12
   i32.const 8800
   call $~lib/util/sort/SORT<i32>
   i32.const 1
   local.set $7
   local.get $5
   local.tee $0
   i32.load $0 offset=12
   local.set $1
   loop $for-loop|85
    local.get $1
    local.get $7
    i32.gt_s
    if
     local.get $7
     i32.const 1
     i32.sub
     local.tee $2
     local.get $0
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $7
     local.get $0
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $0
     i32.load $0 offset=4
     local.tee $3
     local.get $2
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.get $3
     local.get $7
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 8800
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     br_if $std/array/isSorted<i32>|inlined.2
     drop
     local.get $7
     i32.const 1
     i32.add
     local.set $7
     br $for-loop|85
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.49 (result i32)
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $1
   i32.const 4
   i32.add
   local.tee $2
   i32.const 28
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $1
   i32.const 28
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   local.tee $1
   i32.const 0
   i32.store $0 offset=4
   local.get $1
   i32.const 8
   i32.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $1
   i32.const 8832
   i64.load $0
   i64.store $0
   local.get $1
   i32.const 8
   i32.add
   local.set $7
   i32.const 0
   local.set $2
   local.get $2
   i32.const 2
   i32.ge_s
   if (result i32)
    local.get $7
    i32.const 8840
    i32.load16_u $0
    i32.store16 $0
    local.get $2
    i32.const 2
    i32.sub
    local.set $2
    local.get $7
    i32.const 2
    i32.add
    local.set $7
    i32.const 8842
   else
    i32.const 8840
   end
   local.set $3
   local.get $2
   if
    local.get $7
    local.get $3
    i32.load8_u $0
    i32.store8 $0
   end
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $2
   i32.const 4
   i32.add
   local.tee $3
   i32.const 44
   i32.add
   local.tee $5
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $5
   global.set $~lib/rt/stub/offset
   local.get $2
   i32.const 44
   i32.store $0
   local.get $3
   i32.const 4
   i32.sub
   local.tee $2
   i32.const 3
   i32.store $0 offset=4
   local.get $2
   i32.const 16
   i32.store $0 offset=8
   local.get $3
   i32.const 16
   i32.add
   local.tee $2
   local.get $1
   i32.store $0
   local.get $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   i32.const 8
   i32.store $0 offset=8
   local.get $2
   i32.const 2
   i32.store $0 offset=12
   i32.const 0
   local.get $0
   i32.load $0 offset=12
   local.tee $3
   local.get $2
   i32.load $0 offset=12
   i32.ne
   br_if $std/array/isArraysEqual<i32>|inlined.49
   drop
   i32.const 1
   local.get $0
   local.get $2
   i32.eq
   br_if $std/array/isArraysEqual<i32>|inlined.49
   drop
   local.get $0
   local.set $1
   i32.const 0
   local.set $0
   loop $for-loop|86
    local.get $0
    local.get $3
    i32.lt_s
    if
     local.get $0
     local.get $1
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $0
     local.get $2
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $0
     i32.const 2
     i32.shl
     local.tee $5
     local.get $1
     i32.load $0 offset=4
     i32.add
     i32.load $0
     local.get $2
     i32.load $0 offset=4
     local.get $5
     i32.add
     i32.load $0
     i32.ne
     br_if $std/array/isArraysEqual<i32>|inlined.49
     drop
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|86
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  block $std/array/isSorted<i32>|inlined.3 (result i32)
   local.get $6
   i32.load $0 offset=4
   local.get $6
   i32.load $0 offset=12
   i32.const 8864
   call $~lib/util/sort/SORT<i32>
   i32.const 1
   local.set $7
   local.get $6
   local.tee $0
   i32.load $0 offset=12
   local.set $1
   loop $for-loop|87
    local.get $1
    local.get $7
    i32.gt_s
    if
     local.get $7
     i32.const 1
     i32.sub
     local.tee $2
     local.get $0
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $7
     local.get $0
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $0
     i32.load $0 offset=4
     local.tee $3
     local.get $2
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.get $3
     local.get $7
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 8864
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     br_if $std/array/isSorted<i32>|inlined.3
     drop
     local.get $7
     i32.const 1
     i32.add
     local.set $7
     br $for-loop|87
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.50 (result i32)
   i32.const 0
   local.get $0
   i32.load $0 offset=12
   local.tee $2
   local.get $12
   i32.load $0 offset=12
   i32.ne
   br_if $std/array/isArraysEqual<i32>|inlined.50
   drop
   i32.const 1
   local.get $0
   local.get $12
   i32.eq
   br_if $std/array/isArraysEqual<i32>|inlined.50
   drop
   local.get $0
   local.set $1
   i32.const 0
   local.set $0
   loop $for-loop|88
    local.get $0
    local.get $2
    i32.lt_s
    if
     local.get $0
     local.get $1
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $0
     local.get $12
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $0
     i32.const 2
     i32.shl
     local.tee $3
     local.get $1
     i32.load $0 offset=4
     i32.add
     i32.load $0
     local.get $12
     i32.load $0 offset=4
     local.get $3
     i32.add
     i32.load $0
     i32.ne
     br_if $std/array/isArraysEqual<i32>|inlined.50
     drop
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|88
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  block $std/array/isSorted<i32>|inlined.4 (result i32)
   local.get $11
   i32.load $0 offset=20
   local.get $11
   i32.load $0 offset=28
   i32.const 8896
   call $~lib/util/sort/SORT<i32>
   i32.const 1
   local.set $7
   local.get $11
   i32.load $0 offset=28
   local.set $0
   loop $for-loop|89
    local.get $0
    local.get $7
    i32.gt_s
    if
     local.get $7
     i32.const 1
     i32.sub
     local.tee $1
     local.get $11
     i32.load $0 offset=28
     i32.ge_u
     if
      unreachable
     end
     local.get $7
     local.get $11
     i32.load $0 offset=28
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $11
     i32.load $0 offset=20
     local.tee $2
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.get $2
     local.get $7
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 8896
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     br_if $std/array/isSorted<i32>|inlined.4
     drop
     local.get $7
     i32.const 1
     i32.add
     local.set $7
     br $for-loop|89
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.51 (result i32)
   i32.const 0
   local.set $0
   loop $for-loop|90
    local.get $0
    i32.const 4
    i32.lt_s
    if
     local.get $0
     local.get $11
     i32.load $0 offset=28
     i32.ge_u
     if
      unreachable
     end
     local.get $0
     local.get $12
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $0
     i32.const 2
     i32.shl
     local.tee $1
     local.get $11
     i32.load $0 offset=20
     i32.add
     i32.load $0
     local.get $12
     i32.load $0 offset=4
     local.get $1
     i32.add
     i32.load $0
     i32.ne
     br_if $std/array/isArraysEqual<i32>|inlined.51
     drop
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|90
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  block $std/array/isSorted<i32>|inlined.5 (result i32)
   local.get $13
   i32.load $0 offset=20
   local.get $13
   i32.load $0 offset=28
   i32.const 8928
   call $~lib/util/sort/SORT<i32>
   i32.const 1
   local.set $7
   local.get $13
   i32.load $0 offset=28
   local.set $0
   loop $for-loop|91
    local.get $0
    local.get $7
    i32.gt_s
    if
     local.get $7
     i32.const 1
     i32.sub
     local.tee $1
     local.get $13
     i32.load $0 offset=28
     i32.ge_u
     if
      unreachable
     end
     local.get $7
     local.get $13
     i32.load $0 offset=28
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $13
     i32.load $0 offset=20
     local.tee $2
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.get $2
     local.get $7
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 8928
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     br_if $std/array/isSorted<i32>|inlined.5
     drop
     local.get $7
     i32.const 1
     i32.add
     local.set $7
     br $for-loop|91
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.52 (result i32)
   i32.const 0
   local.set $0
   loop $for-loop|92
    local.get $0
    i32.const 4
    i32.lt_s
    if
     local.get $0
     local.get $13
     i32.load $0 offset=28
     i32.ge_u
     if
      unreachable
     end
     local.get $0
     local.get $12
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $0
     i32.const 2
     i32.shl
     local.tee $1
     local.get $13
     i32.load $0 offset=20
     i32.add
     i32.load $0
     local.get $12
     i32.load $0 offset=4
     local.get $1
     i32.add
     i32.load $0
     i32.ne
     br_if $std/array/isArraysEqual<i32>|inlined.52
     drop
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|92
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  block $std/array/isSorted<i32>|inlined.6 (result i32)
   local.get $14
   i32.load $0 offset=4
   local.get $14
   i32.load $0 offset=12
   i32.const 8960
   call $~lib/util/sort/SORT<i32>
   i32.const 1
   local.set $7
   local.get $14
   i32.load $0 offset=12
   local.set $0
   loop $for-loop|93
    local.get $0
    local.get $7
    i32.gt_s
    if
     local.get $7
     i32.const 1
     i32.sub
     local.tee $1
     local.get $14
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $7
     local.get $14
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $14
     i32.load $0 offset=4
     local.tee $2
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.get $2
     local.get $7
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 8960
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     br_if $std/array/isSorted<i32>|inlined.6
     drop
     local.get $7
     i32.const 1
     i32.add
     local.set $7
     br $for-loop|93
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  block $std/array/isArraysEqual<i32>|inlined.53 (result i32)
   i32.const 0
   local.set $1
   loop $for-loop|94
    local.get $1
    i32.const 4
    i32.lt_s
    if
     local.get $1
     local.get $14
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $1
     local.get $12
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $1
     i32.const 2
     i32.shl
     local.tee $0
     local.get $14
     i32.load $0 offset=4
     i32.add
     i32.load $0
     local.get $12
     i32.load $0 offset=4
     local.get $0
     i32.add
     i32.load $0
     i32.ne
     br_if $std/array/isArraysEqual<i32>|inlined.53
     drop
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|94
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  block $std/array/isSorted<i32>|inlined.7 (result i32)
   local.get $15
   i32.load $0 offset=20
   local.get $15
   i32.load $0 offset=28
   i32.const 8992
   call $~lib/util/sort/SORT<i32>
   i32.const 1
   local.set $0
   local.get $15
   i32.load $0 offset=28
   local.set $1
   loop $for-loop|95
    local.get $0
    local.get $1
    i32.lt_s
    if
     local.get $0
     i32.const 1
     i32.sub
     local.tee $2
     local.get $15
     i32.load $0 offset=28
     i32.ge_u
     if
      unreachable
     end
     local.get $0
     local.get $15
     i32.load $0 offset=28
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $15
     i32.load $0 offset=20
     local.tee $3
     local.get $2
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.get $3
     local.get $0
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 8992
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     br_if $std/array/isSorted<i32>|inlined.7
     drop
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|95
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  global.get $std/array/inputStabArr
  local.tee $0
  i32.load $0 offset=12
  local.tee $1
  i32.const 0
  local.get $1
  i32.const 0
  i32.le_s
  select
  local.set $2
  local.get $1
  local.get $2
  i32.sub
  local.tee $1
  i32.const 0
  local.get $1
  i32.const 0
  i32.gt_s
  select
  local.tee $3
  i32.const 2
  i32.shl
  local.tee $5
  i32.const 16
  i32.add
  local.tee $1
  i32.const 1073741820
  i32.gt_u
  if
   unreachable
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $6
  i32.const 4
  i32.add
  local.tee $7
  local.get $1
  i32.const 19
  i32.add
  i32.const -16
  i32.and
  i32.const 4
  i32.sub
  local.tee $1
  i32.add
  local.tee $10
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $10
  global.set $~lib/rt/stub/offset
  local.get $6
  local.get $1
  i32.store $0
  local.get $7
  i32.const 4
  i32.sub
  local.tee $1
  i32.const 0
  i32.store $0 offset=4
  local.get $1
  local.get $5
  i32.store $0 offset=8
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $1
  i32.const 4
  i32.add
  local.tee $6
  i32.const 44
  i32.add
  local.tee $10
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $10
  global.set $~lib/rt/stub/offset
  local.get $1
  i32.const 44
  i32.store $0
  local.get $6
  i32.const 4
  i32.sub
  local.tee $1
  i32.const 23
  i32.store $0 offset=4
  local.get $1
  i32.const 16
  i32.store $0 offset=8
  local.get $6
  i32.const 16
  i32.add
  local.tee $1
  local.get $7
  i32.const 16
  i32.add
  local.tee $6
  i32.store $0
  local.get $1
  local.get $6
  i32.store $0 offset=4
  local.get $1
  local.get $5
  i32.store $0 offset=8
  local.get $1
  local.get $3
  i32.store $0 offset=12
  local.get $1
  i32.load $0 offset=4
  local.set $5
  local.get $0
  i32.load $0 offset=4
  local.get $2
  i32.const 2
  i32.shl
  i32.add
  local.set $2
  i32.const 0
  local.set $0
  local.get $3
  i32.const 2
  i32.shl
  local.set $3
  loop $while-continue|0454
   local.get $0
   local.get $3
   i32.lt_u
   if
    local.get $0
    local.get $5
    i32.add
    local.get $0
    local.get $2
    i32.add
    i32.load $0
    i32.store $0
    local.get $0
    i32.const 4
    i32.add
    local.set $0
    br $while-continue|0454
   end
  end
  local.get $1
  i32.load $0 offset=4
  local.get $1
  i32.load $0 offset=12
  i32.const 9024
  call $~lib/util/sort/SORT<u32>
  local.get $1
  local.set $0
  i32.const 1
  local.set $7
  i32.const 0
  local.set $1
  global.get $std/array/inputStabArr
  i32.load $0 offset=12
  local.set $2
  loop $for-loop|96
   local.get $1
   local.get $2
   i32.lt_s
   if
    block $for-break96
     local.get $1
     local.get $0
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $0
     i32.load $0 offset=4
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.tee $3
     i32.eqz
     if
      unreachable
     end
     local.get $1
     global.get $std/array/outputStabArr
     local.tee $5
     i32.load $0 offset=12
     i32.ge_u
     if
      unreachable
     end
     local.get $5
     i32.load $0 offset=4
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.tee $5
     i32.eqz
     if
      unreachable
     end
     local.get $3
     i32.load $0
     local.get $5
     i32.load $0
     i32.ne
     if (result i32)
      i32.const 1
     else
      local.get $3
      i32.load $0 offset=4
      local.get $5
      i32.load $0 offset=4
      i32.ne
     end
     if
      i32.const 0
      local.set $7
      br $for-break96
     end
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|96
    end
   end
  end
  local.get $7
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $3
  i32.const 44
  i32.add
  local.tee $1
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $1
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 44
  i32.store $0
  local.get $3
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 3
  i32.store $0 offset=4
  local.get $0
  i32.const 16
  i32.store $0 offset=8
  local.get $3
  i32.const 0
  i32.store $0 offset=16
  local.get $3
  i32.const 0
  i32.store $0 offset=20
  local.get $3
  i32.const 0
  i32.store $0 offset=24
  local.get $3
  i32.const 0
  i32.store $0 offset=28
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 284
  i32.add
  local.tee $2
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $2
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 284
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 0
  i32.store $0 offset=4
  local.get $0
  i32.const 256
  i32.store $0 offset=8
  local.get $1
  i32.const 16
  i32.add
  local.tee $0
  i32.const 0
  i32.const 256
  memory.fill $0
  local.get $3
  local.get $0
  i32.store $0 offset=16
  local.get $3
  local.get $0
  i32.store $0 offset=20
  local.get $3
  i32.const 256
  i32.store $0 offset=24
  local.get $3
  i32.const 64
  i32.store $0 offset=28
  i32.const 0
  local.set $0
  loop $for-loop|97
   local.get $0
   i32.const 64
   i32.lt_s
   if
    global.get $~lib/math/random_seeded
    i32.eqz
    if
     call $~lib/builtins/seed
     i64.reinterpret_f64
     local.tee $4
     i64.eqz
     if
      i64.const -7046029254386353131
      local.set $4
     end
     local.get $4
     local.get $4
     i64.const 33
     i64.shr_u
     i64.xor
     i64.const -49064778989728563
     i64.mul
     local.tee $4
     local.get $4
     i64.const 33
     i64.shr_u
     i64.xor
     i64.const -4265267296055464877
     i64.mul
     local.tee $4
     local.get $4
     i64.const 33
     i64.shr_u
     i64.xor
     global.set $~lib/math/random_state0_64
     global.get $~lib/math/random_state0_64
     i64.const -1
     i64.xor
     local.tee $4
     local.get $4
     i64.const 33
     i64.shr_u
     i64.xor
     i64.const -49064778989728563
     i64.mul
     local.tee $4
     local.get $4
     i64.const 33
     i64.shr_u
     i64.xor
     i64.const -4265267296055464877
     i64.mul
     local.tee $4
     local.get $4
     i64.const 33
     i64.shr_u
     i64.xor
     global.set $~lib/math/random_state1_64
     i32.const 1
     global.set $~lib/math/random_seeded
    end
    global.get $~lib/math/random_state0_64
    local.set $4
    global.get $~lib/math/random_state1_64
    local.tee $17
    global.set $~lib/math/random_state0_64
    local.get $17
    local.get $4
    local.get $4
    i64.const 23
    i64.shl
    i64.xor
    local.tee $4
    local.get $4
    i64.const 17
    i64.shr_u
    i64.xor
    i64.xor
    local.get $17
    i64.const 26
    i64.shr_u
    i64.xor
    global.set $~lib/math/random_state1_64
    local.get $0
    local.tee $1
    local.get $3
    i32.load $0 offset=28
    i32.ge_u
    if
     local.get $1
     i32.const 0
     i32.lt_s
     if
      unreachable
     end
     local.get $1
     i32.const 1
     i32.add
     local.tee $5
     local.tee $0
     local.get $3
     i32.load $0 offset=24
     local.tee $6
     i32.const 2
     i32.shr_u
     i32.gt_u
     if
      local.get $0
      i32.const 268435455
      i32.gt_u
      if
       unreachable
      end
      local.get $3
      i32.load $0 offset=16
      local.set $7
      i32.const 1073741820
      local.get $6
      i32.const 1
      i32.shl
      local.tee $2
      local.get $2
      i32.const 1073741820
      i32.ge_u
      select
      local.tee $2
      i32.const 8
      local.get $0
      local.get $0
      i32.const 8
      i32.le_u
      select
      i32.const 2
      i32.shl
      local.tee $0
      local.get $0
      local.get $2
      i32.lt_u
      select
      local.tee $10
      i32.const 1073741804
      i32.gt_u
      if
       unreachable
      end
      local.get $7
      i32.const 16
      i32.sub
      local.tee $0
      i32.const 15
      i32.and
      i32.const 1
      local.get $0
      select
      if
       unreachable
      end
      global.get $~lib/rt/stub/offset
      local.get $0
      i32.const 4
      i32.sub
      local.tee $2
      i32.load $0
      local.tee $11
      local.get $0
      i32.add
      i32.eq
      local.set $12
      local.get $10
      i32.const 16
      i32.add
      local.tee $13
      i32.const 19
      i32.add
      i32.const -16
      i32.and
      i32.const 4
      i32.sub
      local.set $14
      local.get $11
      local.get $13
      i32.lt_u
      if
       local.get $12
       if
        local.get $13
        i32.const 1073741820
        i32.gt_u
        if
         unreachable
        end
        local.get $0
        local.get $14
        i32.add
        local.tee $11
        memory.size $0
        i32.const 16
        i32.shl
        i32.const 15
        i32.add
        i32.const -16
        i32.and
        i32.gt_u
        if
         unreachable
        end
        local.get $11
        global.set $~lib/rt/stub/offset
        local.get $2
        local.get $14
        i32.store $0
       else
        local.get $14
        local.get $11
        i32.const 1
        i32.shl
        local.tee $2
        local.get $2
        local.get $14
        i32.lt_u
        select
        local.tee $12
        i32.const 1073741820
        i32.gt_u
        if
         unreachable
        end
        global.get $~lib/rt/stub/offset
        i32.eqz
        if
         i32.const 9932
         global.set $~lib/rt/stub/offset
        end
        global.get $~lib/rt/stub/offset
        local.tee $2
        local.set $13
        local.get $2
        i32.const 4
        i32.add
        local.tee $2
        local.get $12
        i32.const 19
        i32.add
        i32.const -16
        i32.and
        i32.const 4
        i32.sub
        local.tee $12
        i32.add
        local.tee $14
        memory.size $0
        i32.const 16
        i32.shl
        i32.const 15
        i32.add
        i32.const -16
        i32.and
        i32.gt_u
        if
         unreachable
        end
        local.get $14
        global.set $~lib/rt/stub/offset
        local.get $13
        local.get $12
        i32.store $0
        local.get $2
        local.get $0
        local.get $11
        memory.copy $0 $0
        local.get $2
        local.set $0
       end
      else
       local.get $12
       if
        local.get $0
        local.get $14
        i32.add
        global.set $~lib/rt/stub/offset
        local.get $2
        local.get $14
        i32.store $0
       end
      end
      local.get $0
      i32.const 4
      i32.sub
      local.get $10
      i32.store $0 offset=8
      local.get $0
      i32.const 16
      i32.add
      local.tee $0
      local.get $6
      i32.add
      i32.const 0
      local.get $10
      local.get $6
      i32.sub
      memory.fill $0
      local.get $0
      local.get $7
      i32.ne
      if
       local.get $3
       local.get $0
       i32.store $0 offset=16
       local.get $3
       local.get $0
       i32.store $0 offset=20
      end
      local.get $3
      local.get $10
      i32.store $0 offset=24
     end
     local.get $3
     local.get $5
     i32.store $0 offset=28
    end
    local.get $3
    i32.load $0 offset=20
    local.get $1
    i32.const 2
    i32.shl
    i32.add
    local.get $17
    i64.const 12
    i64.shr_u
    i64.const 4607182418800017408
    i64.or
    f64.reinterpret_i64
    f64.const -1
    f64.add
    f64.const 64
    f64.mul
    i32.trunc_sat_f64_s
    i32.store $0
    local.get $1
    i32.const 1
    i32.add
    local.set $0
    br $for-loop|97
   end
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $5
  i32.const 44
  i32.add
  local.tee $1
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $1
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 44
  i32.store $0
  local.get $5
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 3
  i32.store $0 offset=4
  local.get $0
  i32.const 16
  i32.store $0 offset=8
  local.get $5
  i32.const 0
  i32.store $0 offset=16
  local.get $5
  i32.const 0
  i32.store $0 offset=20
  local.get $5
  i32.const 0
  i32.store $0 offset=24
  local.get $5
  i32.const 0
  i32.store $0 offset=28
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 1052
  i32.add
  local.tee $2
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $2
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 1052
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 0
  i32.store $0 offset=4
  local.get $0
  i32.const 1028
  i32.store $0 offset=8
  local.get $1
  i32.const 16
  i32.add
  local.tee $0
  i32.const 0
  i32.const 1028
  memory.fill $0
  local.get $5
  local.get $0
  i32.store $0 offset=16
  local.get $5
  local.get $0
  i32.store $0 offset=20
  local.get $5
  i32.const 1028
  i32.store $0 offset=24
  local.get $5
  i32.const 257
  i32.store $0 offset=28
  i32.const 0
  local.set $0
  loop $for-loop|98
   local.get $0
   i32.const 257
   i32.lt_s
   if
    global.get $~lib/math/random_seeded
    i32.eqz
    if
     call $~lib/builtins/seed
     i64.reinterpret_f64
     local.tee $4
     i64.eqz
     if
      i64.const -7046029254386353131
      local.set $4
     end
     local.get $4
     local.get $4
     i64.const 33
     i64.shr_u
     i64.xor
     i64.const -49064778989728563
     i64.mul
     local.tee $4
     local.get $4
     i64.const 33
     i64.shr_u
     i64.xor
     i64.const -4265267296055464877
     i64.mul
     local.tee $4
     local.get $4
     i64.const 33
     i64.shr_u
     i64.xor
     global.set $~lib/math/random_state0_64
     global.get $~lib/math/random_state0_64
     i64.const -1
     i64.xor
     local.tee $4
     local.get $4
     i64.const 33
     i64.shr_u
     i64.xor
     i64.const -49064778989728563
     i64.mul
     local.tee $4
     local.get $4
     i64.const 33
     i64.shr_u
     i64.xor
     i64.const -4265267296055464877
     i64.mul
     local.tee $4
     local.get $4
     i64.const 33
     i64.shr_u
     i64.xor
     global.set $~lib/math/random_state1_64
     i32.const 1
     global.set $~lib/math/random_seeded
    end
    global.get $~lib/math/random_state0_64
    local.set $4
    global.get $~lib/math/random_state1_64
    local.tee $17
    global.set $~lib/math/random_state0_64
    local.get $17
    local.get $4
    local.get $4
    i64.const 23
    i64.shl
    i64.xor
    local.tee $4
    local.get $4
    i64.const 17
    i64.shr_u
    i64.xor
    i64.xor
    local.get $17
    i64.const 26
    i64.shr_u
    i64.xor
    global.set $~lib/math/random_state1_64
    local.get $0
    local.tee $1
    local.get $5
    i32.load $0 offset=28
    i32.ge_u
    if
     local.get $1
     i32.const 0
     i32.lt_s
     if
      unreachable
     end
     local.get $1
     i32.const 1
     i32.add
     local.tee $6
     local.tee $0
     local.get $5
     i32.load $0 offset=24
     local.tee $7
     i32.const 2
     i32.shr_u
     i32.gt_u
     if
      local.get $0
      i32.const 268435455
      i32.gt_u
      if
       unreachable
      end
      local.get $5
      i32.load $0 offset=16
      local.set $10
      i32.const 1073741820
      local.get $7
      i32.const 1
      i32.shl
      local.tee $2
      local.get $2
      i32.const 1073741820
      i32.ge_u
      select
      local.tee $2
      i32.const 8
      local.get $0
      local.get $0
      i32.const 8
      i32.le_u
      select
      i32.const 2
      i32.shl
      local.tee $0
      local.get $0
      local.get $2
      i32.lt_u
      select
      local.tee $11
      i32.const 1073741804
      i32.gt_u
      if
       unreachable
      end
      local.get $10
      i32.const 16
      i32.sub
      local.tee $0
      i32.const 15
      i32.and
      i32.const 1
      local.get $0
      select
      if
       unreachable
      end
      global.get $~lib/rt/stub/offset
      local.get $0
      i32.const 4
      i32.sub
      local.tee $2
      i32.load $0
      local.tee $12
      local.get $0
      i32.add
      i32.eq
      local.set $13
      local.get $11
      i32.const 16
      i32.add
      local.tee $14
      i32.const 19
      i32.add
      i32.const -16
      i32.and
      i32.const 4
      i32.sub
      local.set $15
      local.get $12
      local.get $14
      i32.lt_u
      if
       local.get $13
       if
        local.get $14
        i32.const 1073741820
        i32.gt_u
        if
         unreachable
        end
        local.get $0
        local.get $15
        i32.add
        local.tee $12
        memory.size $0
        i32.const 16
        i32.shl
        i32.const 15
        i32.add
        i32.const -16
        i32.and
        i32.gt_u
        if
         unreachable
        end
        local.get $12
        global.set $~lib/rt/stub/offset
        local.get $2
        local.get $15
        i32.store $0
       else
        local.get $15
        local.get $12
        i32.const 1
        i32.shl
        local.tee $2
        local.get $2
        local.get $15
        i32.lt_u
        select
        local.tee $13
        i32.const 1073741820
        i32.gt_u
        if
         unreachable
        end
        global.get $~lib/rt/stub/offset
        i32.eqz
        if
         i32.const 9932
         global.set $~lib/rt/stub/offset
        end
        global.get $~lib/rt/stub/offset
        local.tee $2
        local.set $14
        local.get $2
        i32.const 4
        i32.add
        local.tee $2
        local.get $13
        i32.const 19
        i32.add
        i32.const -16
        i32.and
        i32.const 4
        i32.sub
        local.tee $13
        i32.add
        local.tee $15
        memory.size $0
        i32.const 16
        i32.shl
        i32.const 15
        i32.add
        i32.const -16
        i32.and
        i32.gt_u
        if
         unreachable
        end
        local.get $15
        global.set $~lib/rt/stub/offset
        local.get $14
        local.get $13
        i32.store $0
        local.get $2
        local.get $0
        local.get $12
        memory.copy $0 $0
        local.get $2
        local.set $0
       end
      else
       local.get $13
       if
        local.get $0
        local.get $15
        i32.add
        global.set $~lib/rt/stub/offset
        local.get $2
        local.get $15
        i32.store $0
       end
      end
      local.get $0
      i32.const 4
      i32.sub
      local.get $11
      i32.store $0 offset=8
      local.get $0
      i32.const 16
      i32.add
      local.tee $0
      local.get $7
      i32.add
      i32.const 0
      local.get $11
      local.get $7
      i32.sub
      memory.fill $0
      local.get $0
      local.get $10
      i32.ne
      if
       local.get $5
       local.get $0
       i32.store $0 offset=16
       local.get $5
       local.get $0
       i32.store $0 offset=20
      end
      local.get $5
      local.get $11
      i32.store $0 offset=24
     end
     local.get $5
     local.get $6
     i32.store $0 offset=28
    end
    local.get $5
    i32.load $0 offset=20
    local.get $1
    i32.const 2
    i32.shl
    i32.add
    local.get $17
    i64.const 12
    i64.shr_u
    i64.const 4607182418800017408
    i64.or
    f64.reinterpret_i64
    f64.const -1
    f64.add
    f64.const 257
    f64.mul
    i32.trunc_sat_f64_s
    i32.store $0
    local.get $1
    i32.const 1
    i32.add
    local.set $0
    br $for-loop|98
   end
  end
  block $std/array/isSorted<i32>|inlined.8 (result i32)
   local.get $3
   i32.load $0 offset=20
   local.get $3
   i32.load $0 offset=28
   i32.const 9056
   call $~lib/util/sort/SORT<i32>
   i32.const 1
   local.set $0
   local.get $3
   i32.load $0 offset=28
   local.set $1
   loop $for-loop|99
    local.get $0
    local.get $1
    i32.lt_s
    if
     local.get $0
     i32.const 1
     i32.sub
     local.tee $2
     local.get $3
     i32.load $0 offset=28
     i32.ge_u
     if
      unreachable
     end
     local.get $0
     local.get $3
     i32.load $0 offset=28
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $3
     i32.load $0 offset=20
     local.tee $6
     local.get $2
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.get $6
     local.get $0
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 9056
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     br_if $std/array/isSorted<i32>|inlined.8
     drop
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|99
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  block $std/array/isSorted<i32>|inlined.9 (result i32)
   local.get $3
   i32.load $0 offset=20
   local.get $3
   i32.load $0 offset=28
   i32.const 9088
   call $~lib/util/sort/SORT<i32>
   i32.const 1
   local.set $0
   local.get $3
   i32.load $0 offset=28
   local.set $1
   loop $for-loop|100
    local.get $0
    local.get $1
    i32.lt_s
    if
     local.get $0
     i32.const 1
     i32.sub
     local.tee $2
     local.get $3
     i32.load $0 offset=28
     i32.ge_u
     if
      unreachable
     end
     local.get $0
     local.get $3
     i32.load $0 offset=28
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $3
     i32.load $0 offset=20
     local.tee $6
     local.get $2
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.get $6
     local.get $0
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 9088
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     br_if $std/array/isSorted<i32>|inlined.9
     drop
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|100
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  block $std/array/isSorted<i32>|inlined.10 (result i32)
   local.get $5
   i32.load $0 offset=20
   local.get $5
   i32.load $0 offset=28
   i32.const 9120
   call $~lib/util/sort/SORT<i32>
   i32.const 1
   local.set $0
   local.get $5
   i32.load $0 offset=28
   local.set $1
   loop $for-loop|101
    local.get $0
    local.get $1
    i32.lt_s
    if
     local.get $0
     i32.const 1
     i32.sub
     local.tee $2
     local.get $5
     i32.load $0 offset=28
     i32.ge_u
     if
      unreachable
     end
     local.get $0
     local.get $5
     i32.load $0 offset=28
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $5
     i32.load $0 offset=20
     local.tee $3
     local.get $2
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.get $3
     local.get $0
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 9120
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     br_if $std/array/isSorted<i32>|inlined.10
     drop
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|101
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  block $std/array/isSorted<i32>|inlined.11 (result i32)
   local.get $5
   i32.load $0 offset=20
   local.get $5
   i32.load $0 offset=28
   i32.const 9152
   call $~lib/util/sort/SORT<i32>
   i32.const 1
   local.set $0
   local.get $5
   i32.load $0 offset=28
   local.set $1
   loop $for-loop|102
    local.get $0
    local.get $1
    i32.lt_s
    if
     local.get $0
     i32.const 1
     i32.sub
     local.tee $2
     local.get $5
     i32.load $0 offset=28
     i32.ge_u
     if
      unreachable
     end
     local.get $0
     local.get $5
     i32.load $0 offset=28
     i32.ge_u
     if
      unreachable
     end
     i32.const 0
     local.get $5
     i32.load $0 offset=20
     local.tee $3
     local.get $2
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.get $3
     local.get $0
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 9152
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     br_if $std/array/isSorted<i32>|inlined.11
     drop
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|102
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  block $std/array/isSorted<~lib/array/Array<i32>>|inlined.0 (result i32)
   i32.const 1
   local.set $0
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $1
   i32.const 4
   i32.add
   local.tee $5
   i32.const 44
   i32.add
   local.tee $2
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $2
   global.set $~lib/rt/stub/offset
   local.get $1
   i32.const 44
   i32.store $0
   local.get $5
   i32.const 4
   i32.sub
   local.tee $1
   i32.const 29
   i32.store $0 offset=4
   local.get $1
   i32.const 16
   i32.store $0 offset=8
   local.get $5
   i32.const 0
   i32.store $0 offset=16
   local.get $5
   i32.const 0
   i32.store $0 offset=20
   local.get $5
   i32.const 0
   i32.store $0 offset=24
   local.get $5
   i32.const 0
   i32.store $0 offset=28
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $1
   i32.const 4
   i32.add
   local.tee $2
   i32.const 60
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $1
   i32.const 60
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   local.tee $1
   i32.const 0
   i32.store $0 offset=4
   local.get $1
   i32.const 32
   i32.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $1
   i32.const 0
   i32.const 32
   memory.fill $0
   local.get $5
   local.get $1
   i32.store $0 offset=16
   local.get $5
   local.get $1
   i32.store $0 offset=20
   local.get $5
   i32.const 32
   i32.store $0 offset=24
   local.get $5
   i32.const 2
   i32.store $0 offset=28
   i32.const 0
   local.set $1
   loop $for-loop|103
    local.get $1
    i32.const 2
    i32.lt_s
    if
     global.get $~lib/rt/stub/offset
     i32.eqz
     if
      i32.const 9932
      global.set $~lib/rt/stub/offset
     end
     global.get $~lib/rt/stub/offset
     local.tee $2
     i32.const 4
     i32.add
     local.tee $3
     i32.const 44
     i32.add
     local.tee $6
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $6
     global.set $~lib/rt/stub/offset
     local.get $2
     i32.const 44
     i32.store $0
     local.get $3
     i32.const 4
     i32.sub
     local.tee $2
     i32.const 3
     i32.store $0 offset=4
     local.get $2
     i32.const 16
     i32.store $0 offset=8
     local.get $3
     i32.const 16
     i32.add
     local.tee $6
     i32.const 0
     i32.store $0
     local.get $6
     i32.const 0
     i32.store $0 offset=4
     local.get $6
     i32.const 0
     i32.store $0 offset=8
     local.get $6
     i32.const 0
     i32.store $0 offset=12
     global.get $~lib/rt/stub/offset
     i32.eqz
     if
      i32.const 9932
      global.set $~lib/rt/stub/offset
     end
     global.get $~lib/rt/stub/offset
     local.tee $2
     i32.const 4
     i32.add
     local.tee $3
     i32.const 60
     i32.add
     local.tee $7
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $7
     global.set $~lib/rt/stub/offset
     local.get $2
     i32.const 60
     i32.store $0
     local.get $3
     i32.const 4
     i32.sub
     local.tee $2
     i32.const 0
     i32.store $0 offset=4
     local.get $2
     i32.const 32
     i32.store $0 offset=8
     local.get $3
     i32.const 16
     i32.add
     local.tee $2
     i32.const 0
     i32.const 32
     memory.fill $0
     local.get $6
     local.get $2
     i32.store $0
     local.get $6
     local.get $2
     i32.store $0 offset=4
     local.get $6
     i32.const 32
     i32.store $0 offset=8
     local.get $6
     i32.const 1
     i32.store $0 offset=12
     local.get $6
     i32.load $0 offset=12
     i32.eqz
     if
      local.get $6
      i32.load $0 offset=8
      local.tee $7
      i32.const 2
      i32.shr_u
      i32.eqz
      if
       local.get $6
       i32.load $0
       local.set $10
       i32.const 32
       i32.const 1073741820
       local.get $7
       i32.const 1
       i32.shl
       local.tee $2
       local.get $2
       i32.const 1073741820
       i32.ge_u
       select
       local.tee $2
       local.get $2
       i32.const 32
       i32.le_u
       select
       local.tee $11
       i32.const 1073741804
       i32.gt_u
       if
        unreachable
       end
       local.get $10
       i32.const 16
       i32.sub
       local.tee $3
       i32.const 15
       i32.and
       i32.const 1
       local.get $3
       select
       if
        unreachable
       end
       global.get $~lib/rt/stub/offset
       local.get $3
       i32.const 4
       i32.sub
       local.tee $2
       i32.load $0
       local.tee $12
       local.get $3
       i32.add
       i32.eq
       local.set $13
       local.get $11
       i32.const 16
       i32.add
       local.tee $14
       i32.const 19
       i32.add
       i32.const -16
       i32.and
       i32.const 4
       i32.sub
       local.set $15
       local.get $12
       local.get $14
       i32.lt_u
       if
        local.get $13
        if
         local.get $14
         i32.const 1073741820
         i32.gt_u
         if
          unreachable
         end
         local.get $3
         local.get $15
         i32.add
         local.tee $12
         memory.size $0
         i32.const 16
         i32.shl
         i32.const 15
         i32.add
         i32.const -16
         i32.and
         i32.gt_u
         if
          unreachable
         end
         local.get $12
         global.set $~lib/rt/stub/offset
         local.get $2
         local.get $15
         i32.store $0
        else
         local.get $15
         local.get $12
         i32.const 1
         i32.shl
         local.tee $2
         local.get $2
         local.get $15
         i32.lt_u
         select
         local.tee $13
         i32.const 1073741820
         i32.gt_u
         if
          unreachable
         end
         global.get $~lib/rt/stub/offset
         i32.eqz
         if
          i32.const 9932
          global.set $~lib/rt/stub/offset
         end
         global.get $~lib/rt/stub/offset
         local.tee $2
         local.set $14
         local.get $2
         i32.const 4
         i32.add
         local.tee $2
         local.get $13
         i32.const 19
         i32.add
         i32.const -16
         i32.and
         i32.const 4
         i32.sub
         local.tee $13
         i32.add
         local.tee $15
         memory.size $0
         i32.const 16
         i32.shl
         i32.const 15
         i32.add
         i32.const -16
         i32.and
         i32.gt_u
         if
          unreachable
         end
         local.get $15
         global.set $~lib/rt/stub/offset
         local.get $14
         local.get $13
         i32.store $0
         local.get $2
         local.get $3
         local.get $12
         memory.copy $0 $0
         local.get $2
         local.set $3
        end
       else
        local.get $13
        if
         local.get $3
         local.get $15
         i32.add
         global.set $~lib/rt/stub/offset
         local.get $2
         local.get $15
         i32.store $0
        end
       end
       local.get $3
       i32.const 4
       i32.sub
       local.get $11
       i32.store $0 offset=8
       local.get $3
       i32.const 16
       i32.add
       local.tee $2
       local.get $7
       i32.add
       i32.const 0
       local.get $11
       local.get $7
       i32.sub
       memory.fill $0
       local.get $2
       local.get $10
       i32.ne
       if
        local.get $6
        local.get $2
        i32.store $0
        local.get $6
        local.get $2
        i32.store $0 offset=4
       end
       local.get $6
       local.get $11
       i32.store $0 offset=8
      end
      local.get $6
      i32.const 1
      i32.store $0 offset=12
     end
     local.get $6
     i32.load $0 offset=4
     i32.const 1
     local.get $1
     i32.sub
     i32.store $0
     local.get $1
     local.tee $2
     local.get $5
     i32.load $0 offset=28
     i32.ge_u
     if
      local.get $2
      i32.const 0
      i32.lt_s
      if
       unreachable
      end
      local.get $2
      i32.const 1
      i32.add
      local.tee $7
      local.tee $1
      local.get $5
      i32.load $0 offset=24
      local.tee $10
      i32.const 2
      i32.shr_u
      i32.gt_u
      if
       local.get $1
       i32.const 268435455
       i32.gt_u
       if
        unreachable
       end
       local.get $5
       i32.load $0 offset=16
       local.set $11
       i32.const 1073741820
       local.get $10
       i32.const 1
       i32.shl
       local.tee $3
       local.get $3
       i32.const 1073741820
       i32.ge_u
       select
       local.tee $3
       i32.const 8
       local.get $1
       local.get $1
       i32.const 8
       i32.le_u
       select
       i32.const 2
       i32.shl
       local.tee $1
       local.get $1
       local.get $3
       i32.lt_u
       select
       local.tee $12
       i32.const 1073741804
       i32.gt_u
       if
        unreachable
       end
       local.get $11
       i32.const 16
       i32.sub
       local.tee $1
       i32.const 15
       i32.and
       i32.const 1
       local.get $1
       select
       if
        unreachable
       end
       global.get $~lib/rt/stub/offset
       local.get $1
       i32.const 4
       i32.sub
       local.tee $3
       i32.load $0
       local.tee $13
       local.get $1
       i32.add
       i32.eq
       local.set $14
       local.get $12
       i32.const 16
       i32.add
       local.tee $15
       i32.const 19
       i32.add
       i32.const -16
       i32.and
       i32.const 4
       i32.sub
       local.set $16
       local.get $13
       local.get $15
       i32.lt_u
       if
        local.get $14
        if
         local.get $15
         i32.const 1073741820
         i32.gt_u
         if
          unreachable
         end
         local.get $1
         local.get $16
         i32.add
         local.tee $13
         memory.size $0
         i32.const 16
         i32.shl
         i32.const 15
         i32.add
         i32.const -16
         i32.and
         i32.gt_u
         if
          unreachable
         end
         local.get $13
         global.set $~lib/rt/stub/offset
         local.get $3
         local.get $16
         i32.store $0
        else
         local.get $16
         local.get $13
         i32.const 1
         i32.shl
         local.tee $3
         local.get $3
         local.get $16
         i32.lt_u
         select
         local.tee $14
         i32.const 1073741820
         i32.gt_u
         if
          unreachable
         end
         global.get $~lib/rt/stub/offset
         i32.eqz
         if
          i32.const 9932
          global.set $~lib/rt/stub/offset
         end
         global.get $~lib/rt/stub/offset
         local.tee $3
         local.set $15
         local.get $3
         i32.const 4
         i32.add
         local.tee $3
         local.get $14
         i32.const 19
         i32.add
         i32.const -16
         i32.and
         i32.const 4
         i32.sub
         local.tee $14
         i32.add
         local.tee $16
         memory.size $0
         i32.const 16
         i32.shl
         i32.const 15
         i32.add
         i32.const -16
         i32.and
         i32.gt_u
         if
          unreachable
         end
         local.get $16
         global.set $~lib/rt/stub/offset
         local.get $15
         local.get $14
         i32.store $0
         local.get $3
         local.get $1
         local.get $13
         memory.copy $0 $0
         local.get $3
         local.set $1
        end
       else
        local.get $14
        if
         local.get $1
         local.get $16
         i32.add
         global.set $~lib/rt/stub/offset
         local.get $3
         local.get $16
         i32.store $0
        end
       end
       local.get $1
       i32.const 4
       i32.sub
       local.get $12
       i32.store $0 offset=8
       local.get $1
       i32.const 16
       i32.add
       local.tee $1
       local.get $10
       i32.add
       i32.const 0
       local.get $12
       local.get $10
       i32.sub
       memory.fill $0
       local.get $1
       local.get $11
       i32.ne
       if
        local.get $5
        local.get $1
        i32.store $0 offset=16
        local.get $5
        local.get $1
        i32.store $0 offset=20
       end
       local.get $5
       local.get $12
       i32.store $0 offset=24
      end
      local.get $5
      local.get $7
      i32.store $0 offset=28
     end
     local.get $5
     i32.load $0 offset=20
     local.get $2
     i32.const 2
     i32.shl
     i32.add
     local.get $6
     i32.store $0
     local.get $2
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|103
    end
   end
   local.get $5
   i32.load $0 offset=20
   local.get $5
   i32.load $0 offset=28
   i32.const 9184
   call $~lib/util/sort/SORT<u32>
   local.get $5
   i32.load $0 offset=28
   local.set $1
   loop $for-loop|104
    local.get $0
    local.get $1
    i32.lt_s
    if
     local.get $0
     i32.const 1
     i32.sub
     local.tee $2
     local.get $5
     i32.load $0 offset=28
     i32.ge_u
     if
      unreachable
     end
     local.get $5
     i32.load $0 offset=20
     local.get $2
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.tee $2
     i32.eqz
     if
      unreachable
     end
     local.get $0
     local.get $5
     i32.load $0 offset=28
     i32.ge_u
     if
      unreachable
     end
     local.get $5
     i32.load $0 offset=20
     local.get $0
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.tee $3
     i32.eqz
     if
      unreachable
     end
     i32.const 0
     local.get $2
     local.get $3
     i32.const 9184
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     br_if $std/array/isSorted<~lib/array/Array<i32>>|inlined.0
     drop
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|104
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  block $std/array/isSorted<std/array/Proxy<i32>>|inlined.0 (result i32)
   i32.const 1
   local.set $0
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $1
   i32.const 4
   i32.add
   local.tee $5
   i32.const 44
   i32.add
   local.tee $2
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $2
   global.set $~lib/rt/stub/offset
   local.get $1
   i32.const 44
   i32.store $0
   local.get $5
   i32.const 4
   i32.sub
   local.tee $1
   i32.const 32
   i32.store $0 offset=4
   local.get $1
   i32.const 16
   i32.store $0 offset=8
   local.get $5
   i32.const 0
   i32.store $0 offset=16
   local.get $5
   i32.const 0
   i32.store $0 offset=20
   local.get $5
   i32.const 0
   i32.store $0 offset=24
   local.get $5
   i32.const 0
   i32.store $0 offset=28
   global.get $~lib/rt/stub/offset
   i32.eqz
   if
    i32.const 9932
    global.set $~lib/rt/stub/offset
   end
   global.get $~lib/rt/stub/offset
   local.tee $1
   i32.const 4
   i32.add
   local.tee $2
   i32.const 2076
   i32.add
   local.tee $3
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 15
   i32.add
   i32.const -16
   i32.and
   i32.gt_u
   if
    unreachable
   end
   local.get $3
   global.set $~lib/rt/stub/offset
   local.get $1
   i32.const 2076
   i32.store $0
   local.get $2
   i32.const 4
   i32.sub
   local.tee $1
   i32.const 0
   i32.store $0 offset=4
   local.get $1
   i32.const 2048
   i32.store $0 offset=8
   local.get $2
   i32.const 16
   i32.add
   local.tee $1
   i32.const 0
   i32.const 2048
   memory.fill $0
   local.get $5
   local.get $1
   i32.store $0 offset=16
   local.get $5
   local.get $1
   i32.store $0 offset=20
   local.get $5
   i32.const 2048
   i32.store $0 offset=24
   local.get $5
   i32.const 512
   i32.store $0 offset=28
   i32.const 0
   local.set $1
   loop $for-loop|105
    local.get $1
    i32.const 512
    i32.lt_s
    if
     global.get $~lib/rt/stub/offset
     i32.eqz
     if
      i32.const 9932
      global.set $~lib/rt/stub/offset
     end
     global.get $~lib/rt/stub/offset
     local.tee $2
     i32.const 4
     i32.add
     local.tee $3
     i32.const 28
     i32.add
     local.tee $6
     memory.size $0
     i32.const 16
     i32.shl
     i32.const 15
     i32.add
     i32.const -16
     i32.and
     i32.gt_u
     if
      unreachable
     end
     local.get $6
     global.set $~lib/rt/stub/offset
     local.get $2
     i32.const 28
     i32.store $0
     local.get $3
     i32.const 4
     i32.sub
     local.tee $2
     i32.const 31
     i32.store $0 offset=4
     local.get $2
     i32.const 4
     i32.store $0 offset=8
     local.get $3
     i32.const 16
     i32.add
     local.tee $6
     i32.const 511
     local.get $1
     i32.sub
     i32.store $0
     local.get $1
     local.tee $2
     local.get $5
     i32.load $0 offset=28
     i32.ge_u
     if
      local.get $2
      i32.const 0
      i32.lt_s
      if
       unreachable
      end
      local.get $2
      i32.const 1
      i32.add
      local.tee $7
      local.tee $1
      local.get $5
      i32.load $0 offset=24
      local.tee $10
      i32.const 2
      i32.shr_u
      i32.gt_u
      if
       local.get $1
       i32.const 268435455
       i32.gt_u
       if
        unreachable
       end
       local.get $5
       i32.load $0 offset=16
       local.set $11
       i32.const 1073741820
       local.get $10
       i32.const 1
       i32.shl
       local.tee $3
       local.get $3
       i32.const 1073741820
       i32.ge_u
       select
       local.tee $3
       i32.const 8
       local.get $1
       local.get $1
       i32.const 8
       i32.le_u
       select
       i32.const 2
       i32.shl
       local.tee $1
       local.get $1
       local.get $3
       i32.lt_u
       select
       local.tee $12
       i32.const 1073741804
       i32.gt_u
       if
        unreachable
       end
       local.get $11
       i32.const 16
       i32.sub
       local.tee $1
       i32.const 15
       i32.and
       i32.const 1
       local.get $1
       select
       if
        unreachable
       end
       global.get $~lib/rt/stub/offset
       local.get $1
       i32.const 4
       i32.sub
       local.tee $3
       i32.load $0
       local.tee $13
       local.get $1
       i32.add
       i32.eq
       local.set $14
       local.get $12
       i32.const 16
       i32.add
       local.tee $15
       i32.const 19
       i32.add
       i32.const -16
       i32.and
       i32.const 4
       i32.sub
       local.set $16
       local.get $13
       local.get $15
       i32.lt_u
       if
        local.get $14
        if
         local.get $15
         i32.const 1073741820
         i32.gt_u
         if
          unreachable
         end
         local.get $1
         local.get $16
         i32.add
         local.tee $13
         memory.size $0
         i32.const 16
         i32.shl
         i32.const 15
         i32.add
         i32.const -16
         i32.and
         i32.gt_u
         if
          unreachable
         end
         local.get $13
         global.set $~lib/rt/stub/offset
         local.get $3
         local.get $16
         i32.store $0
        else
         local.get $16
         local.get $13
         i32.const 1
         i32.shl
         local.tee $3
         local.get $3
         local.get $16
         i32.lt_u
         select
         local.tee $14
         i32.const 1073741820
         i32.gt_u
         if
          unreachable
         end
         global.get $~lib/rt/stub/offset
         i32.eqz
         if
          i32.const 9932
          global.set $~lib/rt/stub/offset
         end
         global.get $~lib/rt/stub/offset
         local.tee $3
         local.set $15
         local.get $3
         i32.const 4
         i32.add
         local.tee $3
         local.get $14
         i32.const 19
         i32.add
         i32.const -16
         i32.and
         i32.const 4
         i32.sub
         local.tee $14
         i32.add
         local.tee $16
         memory.size $0
         i32.const 16
         i32.shl
         i32.const 15
         i32.add
         i32.const -16
         i32.and
         i32.gt_u
         if
          unreachable
         end
         local.get $16
         global.set $~lib/rt/stub/offset
         local.get $15
         local.get $14
         i32.store $0
         local.get $3
         local.get $1
         local.get $13
         memory.copy $0 $0
         local.get $3
         local.set $1
        end
       else
        local.get $14
        if
         local.get $1
         local.get $16
         i32.add
         global.set $~lib/rt/stub/offset
         local.get $3
         local.get $16
         i32.store $0
        end
       end
       local.get $1
       i32.const 4
       i32.sub
       local.get $12
       i32.store $0 offset=8
       local.get $1
       i32.const 16
       i32.add
       local.tee $1
       local.get $10
       i32.add
       i32.const 0
       local.get $12
       local.get $10
       i32.sub
       memory.fill $0
       local.get $1
       local.get $11
       i32.ne
       if
        local.get $5
        local.get $1
        i32.store $0 offset=16
        local.get $5
        local.get $1
        i32.store $0 offset=20
       end
       local.get $5
       local.get $12
       i32.store $0 offset=24
      end
      local.get $5
      local.get $7
      i32.store $0 offset=28
     end
     local.get $5
     i32.load $0 offset=20
     local.get $2
     i32.const 2
     i32.shl
     i32.add
     local.get $6
     i32.store $0
     local.get $2
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|105
    end
   end
   local.get $5
   i32.load $0 offset=20
   local.get $5
   i32.load $0 offset=28
   i32.const 9216
   call $~lib/util/sort/SORT<u32>
   local.get $5
   i32.load $0 offset=28
   local.set $1
   loop $for-loop|106
    local.get $0
    local.get $1
    i32.lt_s
    if
     local.get $0
     i32.const 1
     i32.sub
     local.tee $2
     local.get $5
     i32.load $0 offset=28
     i32.ge_u
     if
      unreachable
     end
     local.get $5
     i32.load $0 offset=20
     local.get $2
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.tee $2
     i32.eqz
     if
      unreachable
     end
     local.get $0
     local.get $5
     i32.load $0 offset=28
     i32.ge_u
     if
      unreachable
     end
     local.get $5
     i32.load $0 offset=20
     local.get $0
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.tee $3
     i32.eqz
     if
      unreachable
     end
     i32.const 0
     local.get $2
     local.get $3
     i32.const 9216
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     br_if $std/array/isSorted<std/array/Proxy<i32>>|inlined.0
     drop
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|106
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   unreachable
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 44
  i32.add
  local.tee $2
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $2
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 44
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 0
  i32.store $0 offset=4
  local.get $0
  i32.const 16
  i32.store $0 offset=8
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $5
  i32.const 44
  i32.add
  local.tee $2
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $2
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 44
  i32.store $0
  local.get $5
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 29
  i32.store $0 offset=4
  local.get $0
  i32.const 16
  i32.store $0 offset=8
  local.get $5
  local.get $1
  i32.const 16
  i32.add
  local.tee $0
  i32.store $0 offset=16
  local.get $5
  local.get $0
  i32.store $0 offset=20
  local.get $5
  i32.const 16
  i32.store $0 offset=24
  local.get $5
  i32.const 4
  i32.store $0 offset=28
  local.get $5
  i32.load $0 offset=20
  drop
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 28
  i32.add
  local.tee $2
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $2
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 28
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 0
  i32.store $0 offset=4
  local.get $0
  i32.const 4
  i32.store $0 offset=8
  local.get $1
  i32.const 16
  i32.add
  local.tee $1
  local.tee $0
  i32.const 9248
  i32.load $0
  i32.store $0
  i32.const 9252
  local.set $7
  local.get $0
  i32.const 4
  i32.add
  local.set $0
  i32.const 0
  local.set $3
  local.get $3
  if
   local.get $0
   local.get $7
   i32.load8_u $0
   i32.store8 $0
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $2
  i32.const 44
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 44
  i32.store $0
  local.get $2
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 3
  i32.store $0 offset=4
  local.get $0
  i32.const 16
  i32.store $0 offset=8
  local.get $2
  local.get $1
  i32.store $0 offset=16
  local.get $2
  local.get $1
  i32.store $0 offset=20
  local.get $2
  i32.const 4
  i32.store $0 offset=24
  local.get $2
  i32.const 1
  i32.store $0 offset=28
  local.get $5
  i32.load $0 offset=20
  local.get $2
  i32.const 16
  i32.add
  i32.store $0
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 28
  i32.add
  local.tee $2
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $2
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 28
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 0
  i32.store $0 offset=4
  local.get $0
  i32.const 12
  i32.store $0 offset=8
  local.get $1
  i32.const 16
  i32.add
  local.tee $1
  local.tee $0
  i32.const 9280
  i64.load $0
  i64.store $0
  i32.const 9288
  local.set $7
  local.get $0
  i32.const 8
  i32.add
  local.set $0
  i32.const 4
  local.tee $3
  i32.const 4
  i32.ge_u
  if
   local.get $0
   i32.const 9288
   i32.load $0
   i32.store $0
   i32.const 9292
   local.set $7
   i32.const 0
   local.set $3
   local.get $0
   i32.const 4
   i32.add
   local.set $0
  end
  local.get $3
  i32.const 2
  i32.ge_s
  if
   local.get $0
   local.get $7
   i32.load16_u $0
   i32.store16 $0
   local.get $7
   i32.const 2
   i32.add
   local.set $7
   local.get $3
   i32.const 2
   i32.sub
   local.set $3
   local.get $0
   i32.const 2
   i32.add
   local.set $0
  end
  local.get $3
  if
   local.get $0
   local.get $7
   i32.load8_u $0
   i32.store8 $0
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $2
  i32.const 44
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 44
  i32.store $0
  local.get $2
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 3
  i32.store $0 offset=4
  local.get $0
  i32.const 16
  i32.store $0 offset=8
  local.get $2
  local.get $1
  i32.store $0 offset=16
  local.get $2
  local.get $1
  i32.store $0 offset=20
  local.get $2
  i32.const 12
  i32.store $0 offset=24
  local.get $2
  i32.const 3
  i32.store $0 offset=28
  local.get $5
  i32.load $0 offset=20
  local.get $2
  i32.const 16
  i32.add
  i32.store $0 offset=4
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 28
  i32.add
  local.tee $2
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $2
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 28
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 0
  i32.store $0 offset=4
  local.get $0
  i32.const 12
  i32.store $0 offset=8
  local.get $1
  i32.const 16
  i32.add
  local.tee $1
  local.tee $0
  i32.const 9312
  i64.load $0
  i64.store $0
  i32.const 9320
  local.set $7
  local.get $0
  i32.const 8
  i32.add
  local.set $0
  i32.const 4
  local.tee $3
  i32.const 4
  i32.ge_u
  if
   local.get $0
   i32.const 9320
   i32.load $0
   i32.store $0
   i32.const 9324
   local.set $7
   i32.const 0
   local.set $3
   local.get $0
   i32.const 4
   i32.add
   local.set $0
  end
  local.get $3
  i32.const 2
  i32.ge_s
  if
   local.get $0
   local.get $7
   i32.load16_u $0
   i32.store16 $0
   local.get $7
   i32.const 2
   i32.add
   local.set $7
   local.get $3
   i32.const 2
   i32.sub
   local.set $3
   local.get $0
   i32.const 2
   i32.add
   local.set $0
  end
  local.get $3
  if
   local.get $0
   local.get $7
   i32.load8_u $0
   i32.store8 $0
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $2
  i32.const 44
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 44
  i32.store $0
  local.get $2
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 3
  i32.store $0 offset=4
  local.get $0
  i32.const 16
  i32.store $0 offset=8
  local.get $2
  local.get $1
  i32.store $0 offset=16
  local.get $2
  local.get $1
  i32.store $0 offset=20
  local.get $2
  i32.const 12
  i32.store $0 offset=24
  local.get $2
  i32.const 3
  i32.store $0 offset=28
  local.get $5
  i32.load $0 offset=20
  local.get $2
  i32.const 16
  i32.add
  i32.store $0 offset=8
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 28
  i32.add
  local.tee $2
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $2
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 28
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 0
  i32.store $0 offset=4
  local.get $0
  i32.const 12
  i32.store $0 offset=8
  local.get $1
  i32.const 16
  i32.add
  local.tee $1
  local.tee $0
  i32.const 9344
  i64.load $0
  i64.store $0
  i32.const 9352
  local.set $7
  local.get $0
  i32.const 8
  i32.add
  local.set $0
  i32.const 4
  local.tee $3
  i32.const 4
  i32.ge_u
  if
   local.get $0
   i32.const 9352
   i32.load $0
   i32.store $0
   i32.const 9356
   local.set $7
   i32.const 0
   local.set $3
   local.get $0
   i32.const 4
   i32.add
   local.set $0
  end
  local.get $3
  i32.const 2
  i32.ge_s
  if
   local.get $0
   local.get $7
   i32.load16_u $0
   i32.store16 $0
   local.get $7
   i32.const 2
   i32.add
   local.set $7
   local.get $3
   i32.const 2
   i32.sub
   local.set $3
   local.get $0
   i32.const 2
   i32.add
   local.set $0
  end
  local.get $3
  if
   local.get $0
   local.get $7
   i32.load8_u $0
   i32.store8 $0
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $2
  i32.const 44
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 44
  i32.store $0
  local.get $2
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 3
  i32.store $0 offset=4
  local.get $0
  i32.const 16
  i32.store $0 offset=8
  local.get $2
  local.get $1
  i32.store $0 offset=16
  local.get $2
  local.get $1
  i32.store $0 offset=20
  local.get $2
  i32.const 12
  i32.store $0 offset=24
  local.get $2
  i32.const 3
  i32.store $0 offset=28
  local.get $5
  i32.load $0 offset=20
  local.get $2
  i32.const 16
  i32.add
  i32.store $0 offset=12
  i32.const 0
  local.set $2
  local.get $5
  i32.load $0 offset=20
  local.set $0
  local.get $5
  i32.load $0 offset=28
  local.set $3
  i32.const 0
  local.set $1
  loop $for-loop|043
   local.get $2
   local.get $3
   i32.lt_s
   if
    local.get $0
    local.get $2
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.tee $5
    if (result i32)
     local.get $5
     i32.load $0 offset=12
    else
     i32.const 0
    end
    local.get $1
    i32.add
    local.set $1
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|043
   end
  end
  local.get $1
  i32.const 2
  i32.shl
  local.tee $2
  i32.const 16
  i32.add
  local.tee $5
  i32.const 1073741820
  i32.gt_u
  if
   unreachable
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $6
  i32.const 4
  i32.add
  local.tee $7
  local.get $5
  i32.const 19
  i32.add
  i32.const -16
  i32.and
  i32.const 4
  i32.sub
  local.tee $5
  i32.add
  local.tee $10
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $10
  global.set $~lib/rt/stub/offset
  local.get $6
  local.get $5
  i32.store $0
  local.get $7
  i32.const 4
  i32.sub
  local.tee $5
  i32.const 0
  i32.store $0 offset=4
  local.get $5
  local.get $2
  i32.store $0 offset=8
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $5
  i32.const 4
  i32.add
  local.tee $6
  i32.const 44
  i32.add
  local.tee $10
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $10
  global.set $~lib/rt/stub/offset
  local.get $5
  i32.const 44
  i32.store $0
  local.get $6
  i32.const 4
  i32.sub
  local.tee $5
  i32.const 3
  i32.store $0 offset=4
  local.get $5
  i32.const 16
  i32.store $0 offset=8
  local.get $6
  local.get $1
  i32.store $0 offset=28
  local.get $6
  local.get $2
  i32.store $0 offset=24
  local.get $6
  local.get $7
  i32.const 16
  i32.add
  local.tee $5
  i32.store $0 offset=20
  local.get $6
  local.get $5
  i32.store $0 offset=16
  i32.const 0
  local.set $2
  i32.const 0
  local.set $1
  loop $for-loop|144
   local.get $1
   local.get $3
   i32.lt_s
   if
    local.get $0
    local.get $1
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.tee $7
    if
     local.get $2
     local.get $5
     i32.add
     local.get $7
     i32.load $0 offset=4
     local.get $7
     i32.load $0 offset=12
     i32.const 2
     i32.shl
     local.tee $7
     memory.copy $0 $0
     local.get $2
     local.get $7
     i32.add
     local.set $2
    end
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|144
   end
  end
  local.get $6
  i32.load $0 offset=28
  i32.const 10
  i32.ne
  if
   unreachable
  end
  i32.const 0
  local.set $1
  loop $for-loop|107
   local.get $1
   i32.const 10
   i32.lt_s
   if
    local.get $1
    local.get $6
    i32.load $0 offset=28
    i32.ge_u
    if
     unreachable
    end
    local.get $1
    local.get $6
    i32.load $0 offset=20
    local.get $1
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    i32.ne
    if
     unreachable
    end
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|107
   end
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 44
  i32.add
  local.tee $2
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $2
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 44
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 0
  i32.store $0 offset=4
  local.get $0
  i32.const 16
  i32.store $0 offset=8
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $2
  i32.const 44
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 44
  i32.store $0
  local.get $2
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 35
  i32.store $0 offset=4
  local.get $0
  i32.const 16
  i32.store $0 offset=8
  local.get $2
  local.get $1
  i32.const 16
  i32.add
  local.tee $0
  i32.store $0 offset=16
  local.get $2
  local.get $0
  i32.store $0 offset=20
  local.get $2
  i32.const 16
  i32.store $0 offset=24
  local.get $2
  i32.const 4
  i32.store $0 offset=28
  local.get $2
  i32.load $0 offset=20
  drop
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 28
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 28
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 0
  i32.store $0 offset=4
  local.get $0
  i32.const 4
  i32.store $0 offset=8
  local.get $1
  i32.const 16
  i32.add
  local.tee $1
  local.tee $0
  i32.const 9408
  i32.load $0
  i32.store $0
  i32.const 9412
  local.set $7
  local.get $0
  i32.const 4
  i32.add
  local.set $0
  i32.const 0
  local.set $3
  local.get $3
  if
   local.get $0
   local.get $7
   i32.load8_u $0
   i32.store8 $0
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $3
  i32.const 44
  i32.add
  local.tee $5
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $5
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 44
  i32.store $0
  local.get $3
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 34
  i32.store $0 offset=4
  local.get $0
  i32.const 16
  i32.store $0 offset=8
  local.get $3
  local.get $1
  i32.store $0 offset=16
  local.get $3
  local.get $1
  i32.store $0 offset=20
  local.get $3
  i32.const 4
  i32.store $0 offset=24
  local.get $3
  i32.const 1
  i32.store $0 offset=28
  local.get $2
  i32.load $0 offset=20
  local.get $3
  i32.const 16
  i32.add
  i32.store $0
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 28
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 28
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 0
  i32.store $0 offset=4
  local.get $0
  i32.const 12
  i32.store $0 offset=8
  local.get $1
  i32.const 16
  i32.add
  local.tee $1
  local.tee $0
  i32.const 9504
  i64.load $0
  i64.store $0
  i32.const 9512
  local.set $7
  local.get $0
  i32.const 8
  i32.add
  local.set $0
  i32.const 4
  local.tee $3
  i32.const 4
  i32.ge_u
  if
   local.get $0
   i32.const 9512
   i32.load $0
   i32.store $0
   i32.const 9516
   local.set $7
   i32.const 0
   local.set $3
   local.get $0
   i32.const 4
   i32.add
   local.set $0
  end
  local.get $3
  i32.const 2
  i32.ge_s
  if
   local.get $0
   local.get $7
   i32.load16_u $0
   i32.store16 $0
   local.get $7
   i32.const 2
   i32.add
   local.set $7
   local.get $3
   i32.const 2
   i32.sub
   local.set $3
   local.get $0
   i32.const 2
   i32.add
   local.set $0
  end
  local.get $3
  if
   local.get $0
   local.get $7
   i32.load8_u $0
   i32.store8 $0
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $3
  i32.const 44
  i32.add
  local.tee $5
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $5
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 44
  i32.store $0
  local.get $3
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 34
  i32.store $0 offset=4
  local.get $0
  i32.const 16
  i32.store $0 offset=8
  local.get $3
  local.get $1
  i32.store $0 offset=16
  local.get $3
  local.get $1
  i32.store $0 offset=20
  local.get $3
  i32.const 12
  i32.store $0 offset=24
  local.get $3
  i32.const 3
  i32.store $0 offset=28
  local.get $2
  i32.load $0 offset=20
  local.get $3
  i32.const 16
  i32.add
  i32.store $0 offset=4
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 28
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 28
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 0
  i32.store $0 offset=4
  local.get $0
  i32.const 12
  i32.store $0 offset=8
  local.get $1
  i32.const 16
  i32.add
  local.tee $1
  local.tee $0
  i32.const 9632
  i64.load $0
  i64.store $0
  i32.const 9640
  local.set $7
  local.get $0
  i32.const 8
  i32.add
  local.set $0
  i32.const 4
  local.tee $3
  i32.const 4
  i32.ge_u
  if
   local.get $0
   i32.const 9640
   i32.load $0
   i32.store $0
   i32.const 9644
   local.set $7
   i32.const 0
   local.set $3
   local.get $0
   i32.const 4
   i32.add
   local.set $0
  end
  local.get $3
  i32.const 2
  i32.ge_s
  if
   local.get $0
   local.get $7
   i32.load16_u $0
   i32.store16 $0
   local.get $7
   i32.const 2
   i32.add
   local.set $7
   local.get $3
   i32.const 2
   i32.sub
   local.set $3
   local.get $0
   i32.const 2
   i32.add
   local.set $0
  end
  local.get $3
  if
   local.get $0
   local.get $7
   i32.load8_u $0
   i32.store8 $0
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $3
  i32.const 44
  i32.add
  local.tee $5
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $5
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 44
  i32.store $0
  local.get $3
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 34
  i32.store $0 offset=4
  local.get $0
  i32.const 16
  i32.store $0 offset=8
  local.get $3
  local.get $1
  i32.store $0 offset=16
  local.get $3
  local.get $1
  i32.store $0 offset=20
  local.get $3
  i32.const 12
  i32.store $0 offset=24
  local.get $3
  i32.const 3
  i32.store $0 offset=28
  local.get $2
  i32.load $0 offset=20
  local.get $3
  i32.const 16
  i32.add
  i32.store $0 offset=8
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 28
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 28
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 0
  i32.store $0 offset=4
  local.get $0
  i32.const 4
  i32.store $0 offset=8
  local.get $1
  i32.const 16
  i32.add
  local.tee $1
  local.tee $0
  i32.const 9696
  i32.load $0
  i32.store $0
  i32.const 9700
  local.set $7
  local.get $0
  i32.const 4
  i32.add
  local.set $0
  i32.const 0
  local.set $3
  local.get $3
  if
   local.get $0
   local.get $7
   i32.load8_u $0
   i32.store8 $0
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $3
  i32.const 44
  i32.add
  local.tee $5
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $5
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 44
  i32.store $0
  local.get $3
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 34
  i32.store $0 offset=4
  local.get $0
  i32.const 16
  i32.store $0 offset=8
  local.get $3
  local.get $1
  i32.store $0 offset=16
  local.get $3
  local.get $1
  i32.store $0 offset=20
  local.get $3
  i32.const 4
  i32.store $0 offset=24
  local.get $3
  i32.const 1
  i32.store $0 offset=28
  local.get $2
  i32.load $0 offset=20
  local.get $3
  i32.const 16
  i32.add
  i32.store $0 offset=12
  local.get $2
  i32.load $0 offset=20
  local.set $0
  local.get $2
  i32.load $0 offset=28
  local.set $2
  i32.const 0
  local.set $5
  i32.const 0
  local.set $1
  loop $for-loop|0484
   local.get $1
   local.get $2
   i32.lt_s
   if
    local.get $0
    local.get $1
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.tee $3
    if (result i32)
     local.get $3
     i32.load $0 offset=12
    else
     i32.const 0
    end
    local.get $5
    i32.add
    local.set $5
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|0484
   end
  end
  local.get $5
  i32.const 2
  i32.shl
  local.tee $1
  i32.const 16
  i32.add
  local.tee $3
  i32.const 1073741820
  i32.gt_u
  if
   unreachable
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $6
  i32.const 4
  i32.add
  local.tee $7
  local.get $3
  i32.const 19
  i32.add
  i32.const -16
  i32.and
  i32.const 4
  i32.sub
  local.tee $3
  i32.add
  local.tee $10
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $10
  global.set $~lib/rt/stub/offset
  local.get $6
  local.get $3
  i32.store $0
  local.get $7
  i32.const 4
  i32.sub
  local.tee $3
  i32.const 0
  i32.store $0 offset=4
  local.get $3
  local.get $1
  i32.store $0 offset=8
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $3
  i32.const 4
  i32.add
  local.tee $6
  i32.const 44
  i32.add
  local.tee $10
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $10
  global.set $~lib/rt/stub/offset
  local.get $3
  i32.const 44
  i32.store $0
  local.get $6
  i32.const 4
  i32.sub
  local.tee $3
  i32.const 34
  i32.store $0 offset=4
  local.get $3
  i32.const 16
  i32.store $0 offset=8
  local.get $6
  local.get $5
  i32.store $0 offset=28
  local.get $6
  local.get $1
  i32.store $0 offset=24
  local.get $6
  local.get $7
  i32.const 16
  i32.add
  local.tee $3
  i32.store $0 offset=20
  local.get $6
  local.get $3
  i32.store $0 offset=16
  i32.const 0
  local.set $1
  i32.const 0
  local.set $7
  loop $for-loop|1488
   local.get $2
   local.get $7
   i32.gt_s
   if
    local.get $0
    local.get $7
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.tee $10
    if
     local.get $1
     local.get $3
     i32.add
     local.get $10
     i32.load $0 offset=4
     local.get $10
     i32.load $0 offset=12
     i32.const 2
     i32.shl
     local.tee $10
     memory.copy $0 $0
     local.get $1
     local.get $10
     i32.add
     local.set $1
    end
    local.get $7
    i32.const 1
    i32.add
    local.set $7
    br $for-loop|1488
   end
  end
  i32.const 0
  local.set $7
  loop $for-loop|2491
   local.get $5
   local.get $7
   i32.gt_s
   if
    local.get $3
    local.get $7
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    drop
    local.get $7
    i32.const 1
    i32.add
    local.set $7
    br $for-loop|2491
   end
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 60
  i32.add
  local.tee $2
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $2
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 60
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 0
  i32.store $0 offset=4
  local.get $0
  i32.const 32
  i32.store $0 offset=8
  local.get $1
  i32.const 16
  i32.add
  local.tee $3
  i32.const 9728
  i64.load $0
  i64.store $0
  local.get $3
  i32.const 9736
  i64.load $0
  i64.store $0 offset=8
  local.get $3
  i32.const 9744
  i64.load $0
  i64.store $0 offset=16
  local.get $3
  i32.const 9752
  i64.load $0
  i64.store $0 offset=24
  i32.const 9760
  local.set $1
  local.get $3
  i32.const 32
  i32.add
  local.set $0
  i32.const 0
  local.set $2
  local.get $2
  i32.const 2
  i32.ge_s
  if
   local.get $0
   local.get $1
   i32.load16_u $0
   i32.store16 $0
   local.get $1
   i32.const 2
   i32.add
   local.set $1
   local.get $2
   i32.const 2
   i32.sub
   local.set $2
   local.get $0
   i32.const 2
   i32.add
   local.set $0
  end
  local.get $2
  if
   local.get $0
   local.get $1
   i32.load8_u $0
   i32.store8 $0
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $10
  i32.const 44
  i32.add
  local.tee $1
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $1
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 44
  i32.store $0
  local.get $10
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 34
  i32.store $0 offset=4
  local.get $0
  i32.const 16
  i32.store $0 offset=8
  local.get $10
  i32.const 16
  i32.add
  local.get $3
  i32.store $0
  local.get $10
  local.get $3
  i32.store $0 offset=20
  local.get $10
  i32.const 32
  i32.store $0 offset=24
  local.get $10
  i32.const 8
  i32.store $0 offset=28
  local.get $6
  i32.load $0 offset=28
  i32.const 8
  i32.ne
  if
   unreachable
  end
  i32.const 0
  local.set $7
  loop $for-loop|108
   local.get $7
   local.get $10
   i32.load $0 offset=28
   i32.lt_s
   if
    local.get $7
    local.get $6
    i32.load $0 offset=28
    i32.ge_u
    if
     unreachable
    end
    local.get $7
    local.get $10
    i32.load $0 offset=28
    i32.ge_u
    if
     unreachable
    end
    i32.const 1
    local.set $2
    block $~lib/string/String.__eq|inlined.0
     local.get $7
     i32.const 2
     i32.shl
     local.tee $0
     local.get $6
     i32.load $0 offset=20
     i32.add
     i32.load $0
     local.tee $1
     local.get $10
     i32.load $0 offset=20
     local.get $0
     i32.add
     i32.load $0
     local.tee $0
     i32.eq
     br_if $~lib/string/String.__eq|inlined.0
     i32.const 0
     local.set $2
     local.get $0
     i32.eqz
     local.get $1
     i32.eqz
     i32.or
     br_if $~lib/string/String.__eq|inlined.0
     local.get $1
     i32.const 20
     i32.sub
     i32.load $0 offset=8
     local.tee $5
     local.get $0
     i32.const 20
     i32.sub
     i32.load $0 offset=8
     i32.ne
     br_if $~lib/string/String.__eq|inlined.0
     local.get $5
     i32.const 128
     i32.ge_s
     if
      block $~lib/util/raweq/__raweq128|inlined.0 (result i32)
       i32.const 0
       local.get $1
       i64.load $0
       local.get $0
       i64.load $0
       i64.ne
       br_if $~lib/util/raweq/__raweq128|inlined.0
       drop
       i32.const 0
       local.get $1
       i64.load $0 offset=8
       local.get $0
       i64.load $0 offset=8
       i64.ne
       br_if $~lib/util/raweq/__raweq128|inlined.0
       drop
       i32.const 0
       local.get $1
       i64.load $0 offset=16
       local.get $0
       i64.load $0 offset=16
       i64.ne
       br_if $~lib/util/raweq/__raweq128|inlined.0
       drop
       i32.const 0
       local.get $1
       i64.load $0 offset=24
       local.get $0
       i64.load $0 offset=24
       i64.ne
       br_if $~lib/util/raweq/__raweq128|inlined.0
       drop
       i32.const 0
       local.get $1
       i64.load $0 offset=32
       local.get $0
       i64.load $0 offset=32
       i64.ne
       br_if $~lib/util/raweq/__raweq128|inlined.0
       drop
       i32.const 0
       local.get $1
       i64.load $0 offset=40
       local.get $0
       i64.load $0 offset=40
       i64.ne
       br_if $~lib/util/raweq/__raweq128|inlined.0
       drop
       i32.const 0
       local.get $1
       i64.load $0 offset=48
       local.get $0
       i64.load $0 offset=48
       i64.ne
       br_if $~lib/util/raweq/__raweq128|inlined.0
       drop
       i32.const 0
       local.get $1
       i64.load $0 offset=56
       local.get $0
       i64.load $0 offset=56
       i64.ne
       br_if $~lib/util/raweq/__raweq128|inlined.0
       drop
       i32.const 0
       local.get $1
       i64.load $0 offset=64
       local.get $0
       i64.load $0 offset=64
       i64.ne
       br_if $~lib/util/raweq/__raweq128|inlined.0
       drop
       i32.const 0
       local.get $1
       i64.load $0 offset=72
       local.get $0
       i64.load $0 offset=72
       i64.ne
       br_if $~lib/util/raweq/__raweq128|inlined.0
       drop
       i32.const 0
       local.get $1
       i64.load $0 offset=80
       local.get $0
       i64.load $0 offset=80
       i64.ne
       br_if $~lib/util/raweq/__raweq128|inlined.0
       drop
       i32.const 0
       local.get $1
       i64.load $0 offset=88
       local.get $0
       i64.load $0 offset=88
       i64.ne
       br_if $~lib/util/raweq/__raweq128|inlined.0
       drop
       i32.const 0
       local.get $1
       i64.load $0 offset=96
       local.get $0
       i64.load $0 offset=96
       i64.ne
       br_if $~lib/util/raweq/__raweq128|inlined.0
       drop
       i32.const 0
       local.get $1
       i64.load $0 offset=104
       local.get $0
       i64.load $0 offset=104
       i64.ne
       br_if $~lib/util/raweq/__raweq128|inlined.0
       drop
       i32.const 0
       local.get $1
       i64.load $0 offset=112
       local.get $0
       i64.load $0 offset=112
       i64.ne
       br_if $~lib/util/raweq/__raweq128|inlined.0
       drop
       local.get $1
       i64.load $0 offset=120
       local.get $0
       i64.load $0 offset=120
       i64.eq
      end
      local.set $2
     else
      block $~lib/util/equpto/__equpto127|inlined.0
       local.get $5
       i32.const 64
       i32.ge_u
       if
        block $~lib/util/raweq/__raweq64|inlined.0 (result i32)
         i32.const 0
         local.get $1
         i64.load $0
         local.get $0
         i64.load $0
         i64.ne
         br_if $~lib/util/raweq/__raweq64|inlined.0
         drop
         i32.const 0
         local.get $1
         i64.load $0 offset=8
         local.get $0
         i64.load $0 offset=8
         i64.ne
         br_if $~lib/util/raweq/__raweq64|inlined.0
         drop
         i32.const 0
         local.get $1
         i64.load $0 offset=16
         local.get $0
         i64.load $0 offset=16
         i64.ne
         br_if $~lib/util/raweq/__raweq64|inlined.0
         drop
         i32.const 0
         local.get $1
         i64.load $0 offset=24
         local.get $0
         i64.load $0 offset=24
         i64.ne
         br_if $~lib/util/raweq/__raweq64|inlined.0
         drop
         i32.const 0
         local.get $1
         i64.load $0 offset=32
         local.get $0
         i64.load $0 offset=32
         i64.ne
         br_if $~lib/util/raweq/__raweq64|inlined.0
         drop
         i32.const 0
         local.get $1
         i64.load $0 offset=40
         local.get $0
         i64.load $0 offset=40
         i64.ne
         br_if $~lib/util/raweq/__raweq64|inlined.0
         drop
         i32.const 0
         local.get $1
         i64.load $0 offset=48
         local.get $0
         i64.load $0 offset=48
         i64.ne
         br_if $~lib/util/raweq/__raweq64|inlined.0
         drop
         local.get $1
         i64.load $0 offset=56
         local.get $0
         i64.load $0 offset=56
         i64.eq
        end
        i32.eqz
        br_if $~lib/util/equpto/__equpto127|inlined.0
        local.get $5
        i32.const -64
        i32.add
        local.set $5
        local.get $1
        i32.const -64
        i32.sub
        local.set $1
        local.get $0
        i32.const -64
        i32.sub
        local.set $0
       end
       block $~lib/util/equpto/__equpto63|inlined.0
        local.get $5
        i32.const 32
        i32.ge_u
        if
         block $~lib/util/raweq/__raweq32|inlined.0 (result i32)
          i32.const 0
          local.get $1
          i64.load $0
          local.get $0
          i64.load $0
          i64.ne
          br_if $~lib/util/raweq/__raweq32|inlined.0
          drop
          i32.const 0
          local.get $1
          i64.load $0 offset=8
          local.get $0
          i64.load $0 offset=8
          i64.ne
          br_if $~lib/util/raweq/__raweq32|inlined.0
          drop
          i32.const 0
          local.get $1
          i64.load $0 offset=16
          local.get $0
          i64.load $0 offset=16
          i64.ne
          br_if $~lib/util/raweq/__raweq32|inlined.0
          drop
          local.get $1
          i64.load $0 offset=24
          local.get $0
          i64.load $0 offset=24
          i64.eq
         end
         i32.eqz
         br_if $~lib/util/equpto/__equpto63|inlined.0
         local.get $5
         i32.const 32
         i32.sub
         local.set $5
         local.get $1
         i32.const 32
         i32.add
         local.set $1
         local.get $0
         i32.const 32
         i32.add
         local.set $0
        end
        block $~lib/util/equpto/__equpto31|inlined.0
         local.get $5
         i32.const 16
         i32.ge_u
         if
          local.get $1
          i64.load $0
          local.get $0
          i64.load $0
          i64.ne
          if (result i32)
           i32.const 0
          else
           local.get $1
           i64.load $0 offset=8
           local.get $0
           i64.load $0 offset=8
           i64.eq
          end
          i32.eqz
          br_if $~lib/util/equpto/__equpto31|inlined.0
          local.get $5
          i32.const 16
          i32.sub
          local.set $5
          local.get $1
          i32.const 16
          i32.add
          local.set $1
          local.get $0
          i32.const 16
          i32.add
          local.set $0
         end
         block $~lib/util/equpto/__equpto15|inlined.0 (result i32)
          local.get $5
          i32.const 8
          i32.ge_u
          if
           i32.const 0
           local.get $1
           i64.load $0
           local.get $0
           i64.load $0
           i64.ne
           br_if $~lib/util/equpto/__equpto15|inlined.0
           drop
           local.get $5
           i32.const 8
           i32.sub
           local.set $5
           local.get $1
           i32.const 8
           i32.add
           local.set $1
           local.get $0
           i32.const 8
           i32.add
           local.set $0
          end
          block $~lib/util/equpto/__equpto7|inlined.0 (result i32)
           local.get $5
           i32.const 4
           i32.ge_u
           if
            i32.const 0
            local.get $1
            i32.load $0
            local.get $0
            i32.load $0
            i32.ne
            br_if $~lib/util/equpto/__equpto7|inlined.0
            drop
            local.get $5
            i32.const 4
            i32.sub
            local.set $5
            local.get $1
            i32.const 4
            i32.add
            local.set $1
            local.get $0
            i32.const 4
            i32.add
            local.set $0
           end
           block $~lib/util/equpto/__equpto3|inlined.0 (result i32)
            local.get $5
            i32.const 2
            i32.ge_u
            if
             i32.const 0
             local.get $1
             i32.load16_u $0
             local.get $0
             i32.load16_u $0
             i32.ne
             br_if $~lib/util/equpto/__equpto3|inlined.0
             drop
             local.get $5
             i32.const 2
             i32.sub
             local.set $5
             local.get $1
             i32.const 2
             i32.add
             local.set $1
             local.get $0
             i32.const 2
             i32.add
             local.set $0
            end
            local.get $5
            if (result i32)
             local.get $1
             i32.load8_u $0
             local.get $0
             i32.load8_u $0
             i32.eq
            else
             i32.const 1
            end
           end
          end
         end
         local.set $2
        end
       end
      end
     end
    end
    local.get $2
    i32.eqz
    if
     unreachable
    end
    local.get $7
    i32.const 1
    i32.add
    local.set $7
    br $for-loop|108
   end
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 28
  i32.add
  local.tee $2
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $2
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 28
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 0
  i32.store $0 offset=4
  local.get $0
  i32.const 8
  i32.store $0 offset=8
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $3
  i32.const 44
  i32.add
  local.tee $2
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $2
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 44
  i32.store $0
  local.get $3
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 29
  i32.store $0 offset=4
  local.get $0
  i32.const 16
  i32.store $0 offset=8
  local.get $3
  i32.const 16
  i32.add
  local.get $1
  i32.const 16
  i32.add
  local.tee $0
  i32.store $0
  local.get $3
  local.get $0
  i32.store $0 offset=20
  local.get $3
  i32.const 8
  i32.store $0 offset=24
  local.get $3
  i32.const 2
  i32.store $0 offset=28
  local.get $3
  i32.load $0 offset=20
  drop
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 28
  i32.add
  local.tee $2
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $2
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 28
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0 offset=8
  local.get $1
  i32.const 16
  i32.add
  local.set $0
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $1
  i32.const 4
  i32.add
  local.tee $2
  i32.const 44
  i32.add
  local.tee $5
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $5
  global.set $~lib/rt/stub/offset
  local.get $1
  i32.const 44
  i32.store $0
  local.get $2
  i32.const 4
  i32.sub
  local.tee $1
  i32.const 3
  i32.store $0 offset=4
  local.get $1
  i32.const 16
  i32.store $0 offset=8
  local.get $2
  local.get $0
  i32.store $0 offset=16
  local.get $2
  local.get $0
  i32.store $0 offset=20
  local.get $2
  i32.const 0
  i32.store $0 offset=24
  local.get $2
  i32.const 0
  i32.store $0 offset=28
  local.get $3
  i32.load $0 offset=20
  local.get $2
  i32.const 16
  i32.add
  i32.store $0
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 28
  i32.add
  local.tee $2
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $2
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 28
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 0
  i32.store $0 offset=4
  local.get $0
  i32.const 0
  i32.store $0 offset=8
  local.get $1
  i32.const 16
  i32.add
  local.set $0
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $1
  i32.const 4
  i32.add
  local.tee $2
  i32.const 44
  i32.add
  local.tee $5
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $5
  global.set $~lib/rt/stub/offset
  local.get $1
  i32.const 44
  i32.store $0
  local.get $2
  i32.const 4
  i32.sub
  local.tee $1
  i32.const 3
  i32.store $0 offset=4
  local.get $1
  i32.const 16
  i32.store $0 offset=8
  local.get $2
  local.get $0
  i32.store $0 offset=16
  local.get $2
  local.get $0
  i32.store $0 offset=20
  local.get $2
  i32.const 0
  i32.store $0 offset=24
  local.get $2
  i32.const 0
  i32.store $0 offset=28
  local.get $3
  i32.load $0 offset=20
  local.get $2
  i32.const 16
  i32.add
  i32.store $0 offset=4
  i32.const 0
  local.set $2
  local.get $3
  i32.load $0 offset=20
  local.set $0
  local.get $3
  i32.load $0 offset=28
  local.set $3
  i32.const 0
  local.set $1
  loop $for-loop|046
   local.get $2
   local.get $3
   i32.lt_s
   if
    local.get $0
    local.get $2
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.tee $5
    if (result i32)
     local.get $5
     i32.load $0 offset=12
    else
     i32.const 0
    end
    local.get $1
    i32.add
    local.set $1
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|046
   end
  end
  local.get $1
  i32.const 2
  i32.shl
  local.tee $2
  i32.const 16
  i32.add
  local.tee $5
  i32.const 1073741820
  i32.gt_u
  if
   unreachable
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $6
  i32.const 4
  i32.add
  local.tee $7
  local.get $5
  i32.const 19
  i32.add
  i32.const -16
  i32.and
  i32.const 4
  i32.sub
  local.tee $5
  i32.add
  local.tee $10
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $10
  global.set $~lib/rt/stub/offset
  local.get $6
  local.get $5
  i32.store $0
  local.get $7
  i32.const 4
  i32.sub
  local.tee $5
  i32.const 0
  i32.store $0 offset=4
  local.get $5
  local.get $2
  i32.store $0 offset=8
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $5
  i32.const 4
  i32.add
  local.tee $6
  i32.const 44
  i32.add
  local.tee $10
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $10
  global.set $~lib/rt/stub/offset
  local.get $5
  i32.const 44
  i32.store $0
  local.get $6
  i32.const 4
  i32.sub
  local.tee $5
  i32.const 3
  i32.store $0 offset=4
  local.get $5
  i32.const 16
  i32.store $0 offset=8
  local.get $6
  local.get $1
  i32.store $0 offset=28
  local.get $6
  local.get $2
  i32.store $0 offset=24
  local.get $6
  local.get $7
  i32.const 16
  i32.add
  local.tee $5
  i32.store $0 offset=20
  local.get $6
  local.get $5
  i32.store $0 offset=16
  i32.const 0
  local.set $2
  i32.const 0
  local.set $1
  loop $for-loop|147
   local.get $1
   local.get $3
   i32.lt_s
   if
    local.get $0
    local.get $1
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.tee $7
    if
     local.get $2
     local.get $5
     i32.add
     local.get $7
     i32.load $0 offset=4
     local.get $7
     i32.load $0 offset=12
     i32.const 2
     i32.shl
     local.tee $7
     memory.copy $0 $0
     local.get $2
     local.get $7
     i32.add
     local.set $2
    end
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|147
   end
  end
  local.get $6
  i32.load $0 offset=28
  if
   unreachable
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 28
  i32.add
  local.tee $2
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $2
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 28
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 0
  i32.store $0 offset=4
  local.get $0
  i32.const 8
  i32.store $0 offset=8
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $2
  i32.const 44
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 44
  i32.store $0
  local.get $2
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 29
  i32.store $0 offset=4
  local.get $0
  i32.const 16
  i32.store $0 offset=8
  local.get $2
  i32.const 16
  i32.add
  local.tee $2
  local.get $1
  i32.const 16
  i32.add
  local.tee $0
  i32.store $0
  local.get $2
  local.get $0
  i32.store $0 offset=4
  local.get $2
  i32.const 8
  i32.store $0 offset=8
  local.get $2
  i32.const 2
  i32.store $0 offset=12
  local.get $2
  i32.load $0 offset=4
  drop
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 28
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 28
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 0
  i32.store $0 offset=4
  local.get $0
  i32.const 4
  i32.store $0 offset=8
  local.get $1
  i32.const 16
  i32.add
  local.tee $1
  local.tee $0
  i32.const 9856
  i32.load $0
  i32.store $0
  i32.const 9860
  local.set $7
  local.get $0
  i32.const 4
  i32.add
  local.set $0
  i32.const 0
  local.set $3
  local.get $3
  if
   local.get $0
   local.get $7
   i32.load8_u $0
   i32.store8 $0
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $3
  i32.const 44
  i32.add
  local.tee $5
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $5
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 44
  i32.store $0
  local.get $3
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 3
  i32.store $0 offset=4
  local.get $0
  i32.const 16
  i32.store $0 offset=8
  local.get $3
  local.get $1
  i32.store $0 offset=16
  local.get $3
  local.get $1
  i32.store $0 offset=20
  local.get $3
  i32.const 4
  i32.store $0 offset=24
  local.get $3
  i32.const 1
  i32.store $0 offset=28
  local.get $2
  i32.load $0 offset=4
  local.get $3
  i32.const 16
  i32.add
  i32.store $0
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $1
  i32.const 28
  i32.add
  local.tee $3
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $3
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 28
  i32.store $0
  local.get $1
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 0
  i32.store $0 offset=4
  local.get $0
  i32.const 4
  i32.store $0 offset=8
  local.get $1
  i32.const 16
  i32.add
  local.tee $1
  local.tee $0
  i32.const 9888
  i32.load $0
  i32.store $0
  i32.const 9892
  local.set $7
  local.get $0
  i32.const 4
  i32.add
  local.set $0
  i32.const 0
  local.set $3
  local.get $3
  if
   local.get $0
   local.get $7
   i32.load8_u $0
   i32.store8 $0
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $0
  i32.const 4
  i32.add
  local.tee $3
  i32.const 44
  i32.add
  local.tee $5
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $5
  global.set $~lib/rt/stub/offset
  local.get $0
  i32.const 44
  i32.store $0
  local.get $3
  i32.const 4
  i32.sub
  local.tee $0
  i32.const 3
  i32.store $0 offset=4
  local.get $0
  i32.const 16
  i32.store $0 offset=8
  local.get $3
  local.get $1
  i32.store $0 offset=16
  local.get $3
  local.get $1
  i32.store $0 offset=20
  local.get $3
  i32.const 4
  i32.store $0 offset=24
  local.get $3
  i32.const 1
  i32.store $0 offset=28
  local.get $2
  i32.load $0 offset=4
  local.get $3
  i32.const 16
  i32.add
  i32.store $0 offset=4
  local.get $2
  i32.load $0 offset=12
  local.tee $0
  i32.const 2
  i32.shl
  local.tee $1
  i32.const 16
  i32.add
  local.tee $3
  i32.const 1073741820
  i32.gt_u
  if
   unreachable
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $5
  i32.const 4
  i32.add
  local.tee $6
  local.get $3
  i32.const 19
  i32.add
  i32.const -16
  i32.and
  i32.const 4
  i32.sub
  local.tee $3
  i32.add
  local.tee $7
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $7
  global.set $~lib/rt/stub/offset
  local.get $5
  local.get $3
  i32.store $0
  local.get $6
  i32.const 4
  i32.sub
  local.tee $3
  i32.const 0
  i32.store $0 offset=4
  local.get $3
  local.get $1
  i32.store $0 offset=8
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $3
  i32.const 4
  i32.add
  local.tee $5
  i32.const 44
  i32.add
  local.tee $7
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $7
  global.set $~lib/rt/stub/offset
  local.get $3
  i32.const 44
  i32.store $0
  local.get $5
  i32.const 4
  i32.sub
  local.tee $3
  i32.const 29
  i32.store $0 offset=4
  local.get $3
  i32.const 16
  i32.store $0 offset=8
  local.get $5
  local.get $6
  i32.const 16
  i32.add
  local.tee $3
  i32.store $0 offset=16
  local.get $5
  local.get $3
  i32.store $0 offset=20
  local.get $5
  local.get $1
  i32.store $0 offset=24
  local.get $5
  local.get $0
  i32.store $0 offset=28
  local.get $5
  i32.load $0 offset=20
  local.set $3
  i32.const 0
  local.set $1
  loop $for-loop|0503
   local.get $1
   local.get $0
   local.get $2
   i32.load $0 offset=12
   local.tee $6
   local.get $0
   local.get $6
   i32.lt_s
   select
   i32.lt_s
   if
    local.get $1
    i32.const 2
    i32.shl
    local.tee $6
    local.get $3
    i32.add
    local.get $2
    i32.load $0 offset=4
    local.get $6
    i32.add
    i32.load $0
    local.get $1
    local.get $2
    i32.const 9920
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    i32.store $0
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|0503
   end
  end
  i32.const 0
  local.set $2
  local.get $5
  i32.load $0 offset=20
  local.set $1
  local.get $5
  i32.load $0 offset=28
  local.set $3
  i32.const 0
  local.set $0
  loop $for-loop|050
   local.get $2
   local.get $3
   i32.lt_s
   if
    local.get $1
    local.get $2
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.tee $5
    if (result i32)
     local.get $5
     i32.load $0 offset=12
    else
     i32.const 0
    end
    local.get $0
    i32.add
    local.set $0
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|050
   end
  end
  local.get $0
  i32.const 2
  i32.shl
  local.tee $2
  i32.const 16
  i32.add
  local.tee $5
  i32.const 1073741820
  i32.gt_u
  if
   unreachable
  end
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $6
  i32.const 4
  i32.add
  local.tee $7
  local.get $5
  i32.const 19
  i32.add
  i32.const -16
  i32.and
  i32.const 4
  i32.sub
  local.tee $5
  i32.add
  local.tee $10
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $10
  global.set $~lib/rt/stub/offset
  local.get $6
  local.get $5
  i32.store $0
  local.get $7
  i32.const 4
  i32.sub
  local.tee $5
  i32.const 0
  i32.store $0 offset=4
  local.get $5
  local.get $2
  i32.store $0 offset=8
  global.get $~lib/rt/stub/offset
  i32.eqz
  if
   i32.const 9932
   global.set $~lib/rt/stub/offset
  end
  global.get $~lib/rt/stub/offset
  local.tee $5
  i32.const 4
  i32.add
  local.tee $6
  i32.const 44
  i32.add
  local.tee $10
  memory.size $0
  i32.const 16
  i32.shl
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  i32.gt_u
  if
   unreachable
  end
  local.get $10
  global.set $~lib/rt/stub/offset
  local.get $5
  i32.const 44
  i32.store $0
  local.get $6
  i32.const 4
  i32.sub
  local.tee $5
  i32.const 3
  i32.store $0 offset=4
  local.get $5
  i32.const 16
  i32.store $0 offset=8
  local.get $6
  i32.const 16
  i32.add
  local.get $0
  i32.store $0 offset=12
  local.get $6
  local.get $2
  i32.store $0 offset=24
  local.get $6
  local.get $7
  i32.const 16
  i32.add
  local.tee $5
  i32.store $0 offset=20
  local.get $6
  local.get $5
  i32.store $0 offset=16
  i32.const 0
  local.set $2
  i32.const 0
  local.set $0
  loop $for-loop|151
   local.get $0
   local.get $3
   i32.lt_s
   if
    local.get $1
    local.get $0
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.tee $7
    if
     local.get $2
     local.get $5
     i32.add
     local.get $7
     i32.load $0 offset=4
     local.get $7
     i32.load $0 offset=12
     i32.const 2
     i32.shl
     local.tee $7
     memory.copy $0 $0
     local.get $2
     local.get $7
     i32.add
     local.set $2
    end
    local.get $0
    i32.const 1
    i32.add
    local.set $0
    br $for-loop|151
   end
  end
  local.get $6
  i32.load $0 offset=28
  i32.const 4
  i32.ne
  if
   unreachable
  end
  local.get $6
  i32.load $0 offset=28
  i32.eqz
  if
   unreachable
  end
  local.get $6
  i32.load $0 offset=20
  i32.load $0
  i32.const 1
  i32.ne
  if
   unreachable
  end
  local.get $6
  i32.load $0 offset=28
  i32.const 1
  i32.le_u
  if
   unreachable
  end
  local.get $6
  i32.load $0 offset=20
  i32.load $0 offset=4
  i32.const 3
  i32.ne
  if
   unreachable
  end
  local.get $6
  i32.load $0 offset=28
  i32.const 2
  i32.le_u
  if
   unreachable
  end
  local.get $6
  i32.load $0 offset=20
  i32.load $0 offset=8
  i32.const 2
  i32.ne
  if
   unreachable
  end
  local.get $6
  i32.load $0 offset=28
  i32.const 3
  i32.le_u
  if
   unreachable
  end
  local.get $6
  i32.load $0 offset=20
  i32.load $0 offset=12
  i32.const 3
  i32.ne
  if
   unreachable
  end
  i32.const 0
  global.set $std/array/arr
  i32.const 0
  global.set $std/array/inputStabArr
  i32.const 0
  global.set $std/array/outputStabArr
 )
 (func $~start (type $none_=>_none)
  global.get $~started
  if
   return
  end
  i32.const 1
  global.set $~started
  call $start:std/array
 )
)
